{
    "orta": "definitely, I was having trouble logging in to travis yesterday.\nI figure I can do something like looking for changelog entires, and checking for changes to the DSL that don't include the README.\n. Nice catch!\n. Yeah, I started taking a look on this branch, no worries :+1: \n. @KrauseFx when I tried to get rubocop to run locally I couldn't get it to replicate hound's errors, any chance you can set that up?\n. yeah, merge is good.\n. Shippit\n. I had to do this as a part of #4 - it supports using DANGER_API_TOKEN as a token\n. That kind of thing can be done in the Dangerfile - don't want to tie this to iOS, should in theory be usable on any project for example\n. This project is still pretty nascent, we should definitely improve this before release.\n. Woooooooo\n. Interestingly enough, the motto of house Danger is: everything is fixable.\n. heh, yep. This project is named after my girlfriend, Danger. That's her house motto. Mine is; Time and Patience.\n. haha\n. \n. we should ship this? Either that or we ship an ASCII version of my girlfriend ;)\n. Alright, I'm calling this ( especially as it's now full of felix-bot comments :D ) and closing it, I like the idea, but not yet, easter eggs can come post-1.0\n. This is done via danger init now, the issue can be closed :+1: \nbut yeah! you're right ;)\n. \nYep\n. This could be a different command danger local. To not confuse people when setting up their CI. It could look through your git log for the last PR 0b49a41 Merge pull request #18 from KrauseFx/more-dynamic-emojis as they are easy to spot.\nIt can then run through your Dangerfile with that PR, then console out the results.\n. Closed by #40 \n. trustedddd woooo\n. and yeah, you need a FelixBot account :palm_tree: :palm_tree: :palm_tree: \n. Think this fail is fixed in #27 \n. eh, lets just leave it as is :dancers: \n. 0 PRs now :tada: \n. interesting, so we want to say this can fail but continue on travis\n. Travis recommends using command one && command two for failable build steps\nhttps://docs.travis-ci.com/user/customizing-the-build/#Customizing-the-Build-Step\nThey would be classed as a fail, but can continue doing the rest of the tests\n. and I agree, I think this only makes sense if Danger doesn't have write access to the status API\n. Only if there are errors, yeah\n. yeah, agree\n. --exit_on_fail ?\n. We do this :+1: \n. cool cool, I'm ok with this :+1: \n. @dangermcshane opinions on this ^\n. Emoji is cool :+1: \n. Closed in #27 \nI talked with @dangermcshane on what the status messages should say, and we came up with the results in that PR.\n. force pushed a bunch of fixes, and a little wording change.\n. Interesting:\n/home/travis/.rvm/gems/ruby-2.1.3/gems/danger-0.1.1/lib/danger/request_sources/github.rb:60:in `update_pull_request!': undefined method `[]' for nil:NilClass (NoMethodError)\nFail is legit:\n```\ndef update_pull_request!(warnings: nil, errors: nil, messages: nil)\n      # First, add a comment\n      if (warnings + errors + messages).empty?\n        body = generate_comment(warnings: warnings, errors: errors, messages: messages)\n        result = client.add_comment(ci_source.repo_slug, ci_source.pull_request_id, body)\n        delete_old_comment!(except: result[:id])\n      else\n        delete_old_comment!\n      end\n  # Now, set the pull request status, note, this can\n  # terminate the entire process.\n  submit_pull_request_status!(warnings: warnings,\n                                errors: errors,\n                           details_url: result['html_url'])\nend\n\n```\nresult is created inside a new scope, then accessed outside of it\n. pushed a fix\n. Err, this PR is really turning into a mega-PR, sorry, trying to wrap it up now ( something seems to have gone wrong with comment deletion. )\n. OK - phew!\nSo now Danger determines if it should delete a message by looking for some HTML metadata in the issue comment:\n<p align=\"right\" meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"https://github.com/KrauseFx/danger/\">danger</a>\n</p>\n. So I'm not touching this anymore :dancers: \n. This is  in\n. Alright, includes a refactor of the .erb  template too :+1: \n. :+1: \n. That works, adding specs now.\n. Specs are in, this is :+1: \n. PRs would look like this in my inbox:\n\nI'm not sure if it's worth emailing to everyone involved in the project on every update that Danger has that's different either. It's a good idea. These these results are important, sure, but it's not that important to everyone else when they change. For example you don't look at every build in the CI, knowing that it's gone from broke, to not broke, to broke, again isn't something you do during a PR.\n. poke\n. haha, cool let's do it :+1: \n. Sure, I don't know if this line which grabs the comments does it via paging or not. If it does use paging, then it might only download 5 at a time for example. Then the logic about deletion / editing etc is based off bad data.\n. Yes!\n. This is what you merged in #30 \n. https://github.com/artsy/eigen/pull/1045/\n\n\nEven if I was looking specifically at a single commit this wouldn't be correct, one only changes the Dangerfile and the other 9 separate files.\n. On Circle CI there is this env var: CIRCLE_COMPARE_URL=https://github.com/artsy/eigen/compare/759adcbd0d8f...13c4dc8bb61d\nIf it's there we should use that to give exact commit references :+1: - might fix this.\n. Travis has \nTRAVIS_COMMIT: The commit that the current build is testing.\nTRAVIS_COMMIT_RANGE: The range of commits that were included in the push or pull request.\n. This should be fixed\n. :dancers: \n. I don't believe in github releases, changelogs should be in the project - not a github specific special web page\n. OK, this is where we want to be :+1: bunch of testing changes to do though\n. Great, this functions bette than before at least\n\n. OK, this is good to go :+1:\n. Cool, added - will merge on green.\n. Doing this removes the ability to use markdown in message https://github.com/artsy/eigen/pull/1142\n. I've added rubocop to rake spec too :+1: \n. \nerr, hrm, that did not work.\n. Alright, using the global setting for auto paginate, and fixed the rake spec doing all of ruby\n. Now grabs enough git data :tada: \n. also, if you have a better idea for the name, I'd be interested\n. Punted the tables stuff to https://github.com/danger/danger/issues/62\n. Aha!\nThese details can be added to the Danger message, we can hide them inside a HTML attribute that is not stripped ( similar to what we do to detect if it's come from Danger ) aweeeesome\n. #40  and #44 cover this - the commit sha is in the message and --verbose gives you all the info\n. So the foundations here would be a repo that anyone can click a heroku button, have it install an instance on heroku in a way that Fastlane's Boarding does\nYou'd need to pass an env var of your DANGER_GITHUB_API_TOKEN and it will respond to webhooks from github, interesting ones are\n- issues\n- issue_comment \n- pull_request_review_comment\n- pull_request\n- push\nHowever, in theory, we can support all of the web hook notifications via a DSL that supports something a bit more generic, so you could do this:\n``` ruby\nSometimes its a README fix, or something like that - which isn't relevant for\nincluding in a CHANGELOG for example\nhas_app_changes = !modified_files.grep(/lib/).empty?\nhas_test_changes = !modified_files.grep(/spec/).empty?\n[...]\non \"issues\" do |issue|\n  # lint the description\nend\non \"issue_comment\" do |issue_comment|\n  # lint the description\nend\n```\nIf this DSL works well, I would also propose that we move to moving our current work to make the current default root context not important, and force everyone to migrate to use a PR context too. E.g.\nruby\non \"pr\" do |pull|\n  # Sometimes its a README fix, or something like that - which isn't relevant for\n  # including in a CHANGELOG for example\n  has_app_changes = !modified_files.grep(/lib/).empty?\n  has_test_changes = !modified_files.grep(/spec/).empty?\nend\n. Yeah, I'm chill there, CocoaPods supports both but we always use symbols for docs \n. Came up in discussion:\n\nWhat if you could actions to handle this stuff\n. This now exists for DangerJS, I won't build it for Ruby - https://github.com/danger/peril\nSomeone is welcome to look at this for Ruby though.. As of https://github.com/danger/peril/pull/46 - this effectively exists in Peril.. OK, Peril is now in production for Artsy and CocoaPods. Someone is welcome to try do it themselves in Ruby, but I'm going to close this.. https://github.com/yahoojapan/hosted-danger is that other approach to running danger on a server. <p align=\"right\" data-meta=\"generated_by_danger\" data-base-commit=\"85decc721ff50bf57abdf078db7b8ca574080a94\" data-head-commit=\"b8c612d0e9696610e9ab81d150dc006cc7e0637e\" >\n  Generated by :no_entry_sign: <a href=\"https://github.com/KrauseFx/danger/\">danger</a>\n</p>\n. :shipit: \n. We can ignore the compare/f12ea82b719a bit of the CIRCLE_COMPARE_URL - from there though it can either grab the full PR metadata ( which should provide the base commit to build from ) or we just do master for the moment.\n. https://circleci.com/gh/artsy/eigen/1497 tried working against a commit that didn't exist\n. Aye, I'm doing this for now, will think of a more elegant version for the future.\n. :+1: \nThis is the minimal required for OSS repos:\n\n. :P\n. Yeah, it is actually, turns out all of the github accounts I've been trying to use get flagged as bots. So they're actually posting messages to our threads, but GH has banned us from seeing them\n. \n. great investigation work :dancers: \n. I think we should probably make these things DSL attributes, given that it shouldn't just be for GitHub ideally \n. This is in with #46 \nIt actually is pretty smart about this, depending on your CI provider. It depends on what it exposes as ENV vars, as you spotted. \nTBH though, I think we'd need to do more. Danger needs to have a access to the origin's merge branch for the base and a remote branch for a fork maybe. I think the fork would be what the CI runs on, so it needs to be able to pull the origin if needed. Making the process more like:\n- Find out what CI it's on\n- Find out the PR number\n- Grab PR metadata\n- Look inside PR JSON for the commit range\n- Check if the remotes are the same, otherwise ensure that we have the full commit range\n- Now Danger can grab the full PR's commits to do git checking on\n. Done:\n- ~~Find out what CI it's on~~\n- ~~Find out the PR number~~\n- ~~Grab PR metadata~~\n- Look inside PR JSON for the commit range\n- Check if the remotes are the same, otherwise ensure that we have the full commit range\n- Now Danger can grab the full PR's commits to do git checking on\nThe logic around deciding what the commit range to choose should move from the CI Source to the request source (GitHub from the CI.) The CI source should only exist to help the request  find the PR to look at. Then all commit range data can come from the PR's canonical JSON.\n. In travis when comparing mine  to yours. I get env vars, they must only be set when it's coming from the host repo. \nIt looks like the only option is to include it as a public env var, which comes with it's own tradeoffs really.\n. it was :D\n. I think, that this in part will relate to #88 \n. Runner has this; \ndef self.options\n      [\n        ['--base=[master|dev|stable]', 'A branch/tag/commit to use as the base of the diff'],\n        ['--head=[master|dev|stable]', 'A branch/tag/commit to use as the head']\n      ].concat(super)\n    end\n. Yep, I think'd be it :+1: \n. Yeah, I think that was missed during the move to danger/danger before I set up all the CI!\n. Yeah, to access the GitHub API it's required ( non-auth requests are per IP, and as this is ran on community hardware the IP is always fully auth'd out )\nI'll investigate, I'm sure I added all the EN vars\n. Oh, hrm. Well here's a complication. These CI instances are running from your fork.\n. I've started opening the env vars for the danger bots, this is fine for these repos, but might make adoption harder.\n. Alright, the fix for Circle is in master now\n. CHANGELOG please, then you're fine to merge this - going to turn that into a fail.\n. Ah, the circle token was revoked for being in a GitHub commit, shame.\n. We are:\n```\nThe command \"bundle exec rake spec\" exited with 0.\n1.60s$ bundle exec danger --verbose\nPrinting message 'Tests were updated / added'\nAll green. Congrats.\n```\nI've just not done https://github.com/danger/danger/issues/48 - which will support sending the message, but not doing the status \n. Doing it, man, this CI stuff is complicated ;)\n. Everything feels good in the implementation though!\n. I think it's best that we start building out docs, will try take a stab at this in the morning :+1: \n. Yep, yep yep.\n. Thanks sir\n. OK\n. Great! This looks like a solid foundation IMO\n. A warning, I just merged a bunch of PRs, it may be worth rebasing early next time you look at this\n. I don't know GitLab, but I imagine the baseline APIs needed would be: A Merge Request JSON summary, and the ability to auth & comment on a Merge Request - the status API can be skipped IMO.\n. Amazing!\n. ( As someone who runs a dependency manager, sending a quick email here explaining the problem should get that fixed pretty quickly, seems pretty clear cut \ud83d\udc4d )\n. > You think Rubygems would transfer ownership of the gem?\nYeah, we do that all the time at CocoaPods. People lose access to emails, or stop working at a place all the time.\n. Aye, closing, @hjanuschka thanks for getting this started \ud83d\udc6f \nAll conversation is welcome to move over to #299 \n. Rebuilding CI, failure was legit ( danger was complaining about the lack of a description ) and now there is one.\n. Cool, this is good to go if you're happy - needs a rebase first.\n. Heh, that ship has sailed -  https://rubygems.org/gems/danger\nBut I'm chill, it can move in time.\n. It does, labeled is effectively that. But really we can't use cork until CocoaPods is using it, so I'm also happy to use terminal-table too\n. Great, I was probably using it before we started using the github gem :+1: \n. what's with circle ATM?\n. Cool cool, this can be rebased and merged then :+1: \n. Yeah! This looks great!\n. ohhhh, good reading up!\nOK, we should also add the CHANGELOG to the gitconfig as automerge-both\n. https://github.com/artsy/eigen/blob/master/.gitattributes\n. We should move to https://github.com/libgit2/rugged - ruby-git was deprecated for https://github.com/mojombo/grit which was deprecated for rugged\n. I think #88 better covers the problem now. Given that we use grit - which seems to give us enough power to fix this.\n. <table>\n  <thead>\n    <tr>\n      <th width=\"50\"></th>\n      <th width=\"100%\">1 Error</th>\n     </tr>\n  </thead>\n  <tbody>\n            <tr>\n      <td>:no_entry_sign:</td>\n      <td><p>Please provide a summary in the Pull Request description</p>\n\n\n```\n  \n\n\n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @marcelofabri is not a contributor\n```\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n```\n  \n\n```\n\n  Generated by :no_entry_sign: danger\n\n. ```\n<table>\n  <thead>\n    <tr>\n      <th width=\"50\"></th>\n      <th width=\"100%\">1 Error</th>\n     </tr>\n  </thead>\n  <tbody>\n            <tr>\n      <td>:no_entry_sign:</td>\n      <td><p>Please provide a summary in the Pull Request description</p>\n\n\n\n  </tbody>\n</table>\n\n\n\n<table>\n  <thead>\n    <tr>\n      <th width=\"50\"></th>\n      <th width=\"100%\">2 Warnings</th>\n     </tr>\n  </thead>\n  <tbody>\n            <tr>\n      <td>:warning:</td>\n      <td><p>Author @marcelofabri is not a contributor</p>\n\n\n\n\n:warning:\nTests were not updated\n\n\n  </tbody>\n</table>\n\n\n  Generated by :no_entry_sign: danger\n\n```\n. Nothing was \"released\", so all is :+1: \n. Likely related to https://github.com/danger/danger/issues/68\n. okkkkkkk, looks like Danger only cares about one hunk in this diff. So in that case it's this one\n\n. should be fixed in #77 \n. Fixed, #88 is the new successor to this bug\n. I think this should return a bool, but I'm open to a closure too:\nruby\nif dependency(changed: \"**/*.gemspec\", requires: \"./lib/danger/version.rb\")\n  fail \"Change the version, if you're changing the gem spec\" \nend\nor\n``` ruby\ndependency(changed: \"*/.gemspec\", requires: \"./lib/danger/version.rb\") {\n  fail \"Change the version, if you're changing the gem spec\" \n}\n``\n. :+1: lets do that then\n. We have this as a plugin for Danger, I'm pretty happy with this as not being in core, I've barely used it - closing.\n. Would be nice to do what CP does WRT looking fordanger-[something]gems that can add actions\n. OK, I think plugins should be able to do two things\n- Provide additional DSL hooks into theDangerfileclass\n- Add automatic rules to run after Danger has finished doing it's parsing.\n. alright felix, what do we need to do to get this in?\n. Same for all your PRs:Raising error 'Please include a CHANGELOG entry'. I don't see any changelog changes in the diff? It's just a file, could do with addingmaster` at the top though\n. Cool, let's do it\n. OK, :green_heart: \n\n. Shipping it\n\nfixes #78 \n. I agree, but I think we should only do that if it's a single line, complex :D \n. OK, I think I want file_modified, file_added, file_removed to all act like arrays, but to support globbing in the include function. So in my mind, this one won:\nruby\nmessage(\"@orta something changed in elan!\") if modified_files.include? \"/components/lib/variables/*\"\n. @marcelofabri brought up that some of the array transform methods like map would also need functions replacing\n. fixed by #86 \n. Ace :+1: shipppppit\n. Alright - this is ready!\n. #89 is aimed at this PR - it should be merged before this one is.\n. !'ve started trying to write tests for this: https://github.com/danger/danger/tree/merge\n. closed by #135 \n. Got some ideas from @jamtur01 today - thanks \n. Agree, linting shouldn't but changing *.[pod|gem]specs probably should. Interesting, still worth some more thought.\n. in https://github.com/artsy/artsy.github.io/pull/217 - I wondered about a thing specific for blogging where Danger can check prose and links\n. Swift package manager: https://github.com/VeniceX/HTTPServer/pull/6/files#diff-16417461de376720abfe05ef4cb7d73aR4\n. A gem: https://github.com/realm/jazzy/pull/572/files#diff-16417461de376720abfe05ef4cb7d73aR1\n. Yep - I think this is a fine way to do it.\n. Gave it another look over - thanks\n. Nice one - I guessed this was the fix\n. Any specific reason? I went out of my way to use the real unicode characters here.\n. This is non-trivial, should have a changelog entry\n. @dbgrandi I want to pair on this sometime\n. Yes\n. Then could split based on characters counts and limit it to a number that seems to work well for Circle/Travis\n. https://github.com/CocoaPods/CLAide/pull/61 shows that we can pull out the terminal size too\n. We should just cap at 80 characters, after looking at how they show in travis\n. Older versions of danger included the full pr_body in the table, but it wouldn't wrap in CI, so it stretched off forever, occasionally breaking out of the table and it  felt wrong. You saw my attempt at using lines to strip it in #135 \nI think this is still worth a quick look,  splitting at 80, then joining with newlines could probably look good ( judging on the multi-line git commit stuff we show )\n. Yes\nOn my phone, replies will be curt.\nOn Mar 13, 2016, at 10:12, Jeroen Visser notifications@github.com wrote:\n\nAh alright, that makes sense, cool! Is it due to the library we use for displaying tables?\n\u2014\nReply to this email directly or view it on GitHub.\n. This is fixed \ud83d\udc4d \n. Amaze\n. I've shipped this as 0.5.2 - :+1: \n. Dupes - https://github.com/danger/danger/issues/282 \n\nboth have different APIs too\n. ish, it would let you see the diff but not a before/after for those specific files - you'd need to check them out and pull out the text. Think there's still a space for this to co-exist.\n. We do this on Danger.systems\n``` sh\ndiff = git.diff_for_file(\"plugins.json\")\nif diff\n  current_plugins = JSON.parse(diff.blob(:dst).contents)\n  pr_plugins = JSON.parse(diff.blob(:src).contents)\nnew_plugins = current_plugins - pr_plugins\n```\n. I've fixed your build, can you please start making them pass Danger?\n. I'd expect that people would look on the PRs on Danger to see examples, so I'm not really too sold on not showing it. We can reduce the chances of it showing on a PR through, I think that's a worthy cause.\n. What is your repo origin?\nOn my phone, replies will be curt.\nOn Mar 3, 2016, at 21:30, Felix Krause notifications@github.com wrote:\n\nHaven't had time to look into this yet, I get the following error:\n~/Developer/fastlane/danger/bin/danger local --verbose\nDanger local requires a repository hosted on github.\nNot a Pull Request - skipping danger run\n/Users/fkrause/Developer/fastlane/danger/lib/danger/commands/local.rb:25:in run': undefined methodrepo_slug' for nil:NilClass (NoMethodError)\n    from /Users/fkrause/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/gems/claide-1.0.0.beta.1/lib/claide/command.rb:312:in run'\n    from /Users/fkrause/Developer/fastlane/danger/bin/danger:5:in'\n\u2014\nReply to this email directly or view it on GitHub.\n. :+1: - we can also do better on the messaging there \n. For the local command? I think that could make sense if we don't find any remotes :+1: - i this case I think it's fine to also just use any remote, but prioritise origin if there's more than one.\n. in that case, we should prioritise origin, as that's the one with the pull requests anyway\n. OK, we have better repo checking, this issue now only corresponds to doing a proper nil check on the repo slug, so that Danger doesn't crash\n. Danger should always fail if you get errors and we can't set a status, that's the point of Danger, if you don't think it's worth failing for, then use warn. Otherwise Danger only provides some text in a message somewhere.\n. The wording relates to https://github.com/danger/danger/issues/105 and https://github.com/danger/danger/issues/106\nAs far as I remember we had a way to not set the return status for this situation\n\nThis can be solved by adding a --no-fail flag to bundle exec danger - so instead of returning a fail if you have errors, it can pass.\n. I should have provided more context, in that PR, you see danger fail with this fail:\n\nI was thinking that it could be possible to tell danger in the body that a specific fail should be ignored.\n. When #126 is in - we'll need to think about documenting this, and maybe more\n. Thanks! I hadn't thought about this!\n. Ah yeah, this might be a bit too early then we've only really been calling it production ready for a 2-3 weeks, lets see :+1: \n. We're up to 175 -  Maybe once it hits around 250, 300 we can re-apply\n. woo\n. Ace, makes sense\n. Awesome - this makes sense, thanks\n. So as a part of https://github.com/Moya/contributors - I'm going to invite you to the org - it's no pressure, you can participate how you like :+1: \n. Great - this looks perfect - @marcelofabri would you do the honours?\n. Hrm, that one is hard to say, it might really be about ruby internals,  it's the difference of comparing memory addresses vs comparing the actual data. Which Ruby version are you using?\n. This adds git, not ssh though TBH, it doesn't matter as long as we can reliably work with the repo slug \n. Yep, I think this is a good idea :+1: \n. Cool, makes sense, you'll need to rebase too :100: \n. Thanks!\n. Cool, answer sounds :+1: to me\n. Awesome.\n. Yeah, awesome\n. Yep @marcelofabri you can run bundle exec rubocop -a to have these fixes automatically - and it needs a rebase\n. Me too, @jeroenvisser101 - would you do the honors of merging please\n. I think I'm alright with that, eventually you gotta do a code review etc\n. They look better: #37 \nIt makes a bit more effort on our part, but IMO is worth it\n. Markdown in comments should work!\n. Yes, so it's not perfect\nexample: https://github.com/artsy/eigen/blob/79436cebc5f4c73a0a15b6dfb773d325be9591d1/Dangerfile#L45-L47\n. I'm definitely open to ideas there ;)\n. Would need to invite the bot to the org, and to add this to the token\n\n. Ideally, I can automate some of this stuff with these ideas too: https://github.com/Moya/contributors/issues/6\n. Yep, then instead of \"not a contributor\" it's \"not yet a contribute - welcome!\"\n. Shipped\n. Looks good, happy to merge w/ CHANGELOG\n. ah, maybe this is a trivial one\n. :+1: \n. yeah, still struggling to figure out the right way to test \"in command\" space\n. In CocoaPods we use a UI abstraction, which turned into this gem: https://github.com/CocoaPods/Cork\nI'm happy for us to start using it? But Danger would need to be the principal owner of the project, as right now CocoaPods doesn't use it\n. One of the advantages of this, is that you can have org-wide Dangerfiles without duplication, so danger-cocoapods could validate rubocop how we like it, and the same for specific types of CHANGELOG styles. We put it all in a gem, it is done on every build. Ace.\n. I think the plugin would register DSL attributes automatically, but to run the automatic ones you have to trigger it with plugin '...'\n. I know where you're coming from, and there's definitely overlap, given that they can expose the things it does as functions. \nI think one of the biggest factors towards separating the the plugin from the DSL is consistency between all gems and forwards source-compatibility with new versions.\n. CI builds are getting extremely verbose, and when mixed with running real commands now, this needs to be a pretty high priority\n. Was there a merge in the commit range, that would have triggered #88 ?\n. @KrauseFx can you run with --verbose for a bit, so it's easier to inspect?\n. #135 will fix this\n. I agree, I think this makes sense.\n. ah, I understand, yeah, two options: \n- don't support danger local against repos that don't have the same set of commits ( forks are fine for example )\n- see if there's github apis for the diff stuff\n. Yeah, that's not really doable IMO, which makes the former more reasonable\n. unless you can find a way to pull it out of a keychain or something?\n. I mean like literal keychain.app \n. I think I can live with mac specific, having another dependency and all that setup doesn't really seem worth it for Danger local I'm not sure I see people using the command that much. \nOr maybe that's just how I work\n. Turns out I'm using danger local a lot now, and this is now something I want \ud83d\udc6f \n. Hrm\n\nvs\n\n. Yeah, there's a lot going on here.\nI need to do some more digging into Grit now, I think the difference lies in how we create the diff\n. OK, using ruby-git, I can get the exact match: \n\n. \nvs\n\n. so far one, it doesn't allow you to execute arbitrary git commands\nbut that trades off against the pros of: it has less dependencies and it works.\n. > we can (if needed) execute git commands by just executing shell commands, right?\n:tada: yep - that's the plan\n. Specifically for Circle CI - the commit that introduces those changes is the first commit in the PR, so I wonder if there's something to do with that.\n. Shouldn't, but this has been happening on a bunch of builds, specifically on circle, gonna add some info to the --verbose output which should help. Also, triggered.\n. > Which is odd, considering it both comes from the GH API, right? (here?)\nYes, this is odd.\n. The API gives us the right SHA from which to work from, so I'm just gonna see what happens if we go back.\n\n. OK, this is consistent - I'm calling it done. \n@jeroenvisser101 you're welcome to review / merge now\n. OK!\n. Cool, address-ed\n. \n. I don't care about BC till post-1.0 - but to the point. \nI originally went with files_ in order to have them consistent with each other, I don't have a strong opinion on it though, so I am totally cool with changing if you can give me some examples of where other libs do it as xxx_files \n. I agree \ud83d\udc4d\ud83c\udffe - let's do it.\n. /Users/orta/.rvm/gems/ruby-2.1.3/gems/git-1.2.9.1/lib/git/lib.rb:917:in `command': git '--git-dir=/Users/orta/dev/ruby/libs/danger/.git' '--work-tree=/Users/orta/dev/ruby/libs/danger' diff '--numstat' 'c'  2>&1:fatal: ambiguous argument 'c': unknown revision or path not in the working tree. (Git::GitExecuteError)\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\n    from /Users/orta/.rvm/gems/ruby-2.1.3/gems/git-1.2.9.1/lib/git/lib.rb:846:in `command_lines'\n    from /Users/orta/.rvm/gems/ruby-2.1.3/gems/git-1.2.9.1/lib/git/lib.rb:362:in `diff_stats'\nI get it too\n. Yep - looks good to go on :green_apple: - @dbgrandi can you do a 2nd lint & merge\n. Ah yeah, this makes sense!\nWeird though, our CI should fail, cause we were running danger local on CI\n. def\n. Both: https://github.com/danger/danger/blob/master/.travis.yml#L21-L22\n. Oh yeah! Maybe we can add that, and/or afterr #132 is in, we can add tests at that level\n. \n:tada: \n. I think we should provide a lot of the core git diff DSL tools in Danger, there's a lot more to go on this PR, no worries yet\n. Fixed\n. This is in https://github.com/danger/design\n. This'll make much more sense once #128 is in\n. haha, you could add a specific check in the Gemfile.lock ;)\n. yeah, option not command :+1: \n. https://github.com/CocoaPods/CLAide/pull/60 in discussion ATM\n. This is clever, good thinking.\n. I guess I'd advise leaving that metadata inside the <table>'s data attributes, then pull it out to compare?\n. nice work\n. Yep, looks good to me, will make an issue abut the map function too :+1: \n. @dbgrandi - I'll let you review etc \nI don't think danger new_plugin should exist though, it should be replaced by your danger plugins create is that close yet?\n. > Do you want danger new_plugin to be changed to danger plugins create\nNo, we'll have a real one coming in one of these days with #131, I'd recommend dropping it from this PR\n. Keep it in, but don't be surprised if it gets removed once we can push gems properly\n. Let's do it! :+1: \n. WRT the default of sticky, I'm not sure either, happy to try it as the default. But I feel like when I think about all the Dangerfiles I've made so far, I'd want very few of those notices as sticky.\n. Aye, definitely not by using nokogiri :p - I think regexes may have to work, or some smart string splitting. This is not a feature big enough to warrant another dependency. \n. Looks good :+1: \n. I've not seen this in a while, and I don't think it's fixed, if anyone sees it on an OSS project, let me know and I'll dig in with danger local --pry --use-merged-pr=XX\n. Interesting, I think this image sums it up quite nicely\n\n. A bunch of the public API depends on the object that git.diff returns, would need to find a way to make the host git command map back into that original object. \nFWIW, we moved to ruby-git because different CIs had different versions of git which ended up with unpredictable results.\nDefinitely worth looking into\n. Could we add these functions to the Git::Base object at runtime in Danger? There's a lot of un-responded to PRs in ruby-git - I'd rather not wait on a release from their side\n. Looks like it, will make a PR\n\n. This is released as 2.1.3 - will keep the issues open to see if it comes back up\n. yeah, works for me \ud83d\udc4d . \ud83d\udc4d\ud83c\udffe  good call\n. Cool, yeah, make an issue, that's an interesting problem\n. Yep, I like this :+1: \n. For a rebased PR, are there any indications inside the git commit history for the start/end of a PR? ( I have no idea ) would it be represented by one commit?\n. Perhaps we should is to pull that data from the PR instead of trying to derive it from the commit log then?\n. Currently danger local supports only GitHub, ( because of the commit thing )  in theory, this gives other the chance to also work\n. Would be fixed by #382 \n. Cool :+1: \n. No-one has worked on adding Xcode Bots support, I imagine you'll need to set it up like jenkins?\n. fixed by #172 \n. Looks good\n. Yep - same here, great job @Antondomashnev \n. This is fine\n. Looks good, Danger will complain about a changelog but everything else seems \ud83d\udc4d\ud83c\udffe  to me\n. Any ideas on what we want/can do here?\n. Alright, gonna call this idle for now and close the PR, I'm open to re-opening and continuing but it looks like this has tapered off \ud83d\udc4d \n. Thanks @jeroenvisser101  flush'd those changes\n. Yep, will rebase & merge\n. This is what I think he was referring to now \ud83d\udc4d \n. Yeah - this looks good \ud83d\udc4d \n. Nope, this is good.\n. Yeah! \nSo this is definitely a part of it, but not enough to consider fixing it, @dbgrandi has been working on converting CocoaPods-Plugins to CLAide-Plugins so that it can power both CP and Danger\n. ( I can't manually merge this by pushing to master, and I don't have access to the \"update button\" alas )\n. Yeah - I'm happy to have the trivial check in the body also, not a problem to me \ud83d\udc4d\ud83c\udffe\nNice fix \n. also, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.\n. Aye, the concept comes from CocoaPods, where there is a guarantee of a local copy of the latest version as a string anytime an action is called. So it's easy there. \n. This might be better in  the 3.0 series, now that we have https://github.com/danger/danger/pull/432 - though I think https://github.com/danger/danger/issues/480 would also help out against this\n. Once we've got gem plugins working, this should happen, that requires me to be in a room with Dave to force him to finish it up \ud83d\udc6f \n. This is starting to happen now as I'm moving everything user-facing into danger.systems.\n. to ensure a consistent diff, danger created her own branches which are the closest we can get to make Danger work as expected when we may not have all the information needed locally: https://github.com/danger/danger/pull/135\n. This should be fixed in 0.7.4 if you want to give it a run\n. Going to close this, mainly as I don't want to leave stale issues around. If this comes back up, totally happy to have it re-opened.\n. Awesome\n. Ace - thanks!\n. \ud83d\udc4d more is more ATM\n. I'm seeing it too\n\n( It does run my Dangerfile though )\n. I think we need to re-rewrite the git diff parser again, I don't like where this current one is. It works but it has weird side effects like that. Perhaps its simplest that we write our own diff ASCII output parser.\n. This should be fixed in 0.7.4 @mrackwitz which just got released\n. Closing as fixed \ud83d\udc4d \n. The pull request is needed to be able to get back to the PR to show the body/description and to post. In Circle, we use it's API to get the full PR details based on the commit - maybe bamboo can do that?\n. https://github.com/danger/danger/blob/master/lib/danger/ci_source/circle.rb#L24\n. There may be a way via the GitHub API to go from a commit to a PR, don't think we've explored that space either.\n. It would, this is why we use the Circle API, if Danger is running at the end of a build process it gives it some time. The only platform that definitely won't have the problem is travis-ci as it creates a commit run and a PR run separately. \n. I think this would be cool, yeah, we've tried to decouple a lot of this stuff but never really had a need for it in our own projects. IMO it'd be nice to be able to have it run safely without GitHub - there's been work on GitLab but it is blocked by GitLab API changes I think.\n. Agreed, updated\n. This is in.\n. \ud83d\udc4d \n. or do an empty amend, and force push, it creates a new sha reference\n. Closing, this can be re-built sometime.\n. Interesting, I wonder if this is something inherit to what circle CI thinks, there might be a GitHub API to look up if a commit is in an active PR and we could use that as a fallback when there's no env vars?\n. likely related https://github.com/danger/danger/issues/226\n. You're welcome to take a look at #226 which should deal with this\n. #292 should fix this\n. Did you go through the getting set up on Circle CI part of the guide? http://danger.systems/guides/getting_started.html. There are CI services that run both for a PR and a commit on every PR commit - that would mean you need determine when to run danger when integrating yourself. As well as handling the CI for when it's merged into master etc. \nIMO, it doesn't need to be fixed.. There's an option for that I think. A bunch of CIs do both a merge branch and a PR branch, it would fail on the merge branch every time if that was the default.. \u2601\ufe0f \nTook 3 hours to get green.\n\ud83d\udc9a \n. Cool beans\n. Thanks \ud83d\udc4d \n. The contributor thing is to remind me to automate this https://github.com/Moya/contributors/issues/6\n. To pull this off, we need to be able to support danger as a service - https://github.com/danger/danger/issues/42\nAs there would be no CI process to run\n. @mrackwitz means actual issues like this one, thing that don't or won't have related commits and thus no connection to CI\n. Peril does this now \ud83d\udc4d . Yeah @jeroenvisser101 is correct, still not figured out a the right way to expose the environment to plugins yet. \n. \ud83d\udc4d \n. I'm totally for multiple request source types, e.g. https://github.com/danger/danger/pull/59  https://github.com/danger/danger/issues/193\nBuilding it out will be tricky aye, I don't doubt that, but it's definitely doable, and definitely something I want to see happen.\nRealistically every project I've worked on ( and all the other main contributors ) is GitHub, so we've definitely got lazy here and there with making it harder to support more request sources.\n\n\nSome of the CI sources require either an GitHub specific environment variable or a GitHub git origin. \n\n\nAye, I bet that can be improved upon, - I assume they have similar ENV vars when using other code sites. Or try to make the [user]/[repo] thing more generic\n\n\nSome of the CI's that Danger supports might also not support a pull request provider other than GitHub\n\n\nPerhaps a CI source can have the chance to reject a request source, and bail.\n\n\nEnvironmentManager uses a specific GitHub feature to get the merged PR's branch. \n\n\nThis is a fallback, generally, and something I'd like to address, it can be really tricky to actually get the commit range for the current code review. ( Mainly due to local CI caching ) \nWe're also seeing that there might not be APIs that are used in GitHub that are on other request sources ( which is what delayed GitLab support ) - so that might be another gotcha. \n. At least Danger is well tested, so in making those changes, someone can be pretty sure they're not breaking existing stuff too much \ud83d\udc4d \n. The tough thing here is knowing what the start/end commits refer to, as you can't make any guarantees that the local CI either has the commit range, or that the current git head is within that range, so Danger makes her own branches for base and head. \nI could use a feature of GitHub to simplify making the head reference ( e.g. the latest commit on a PR ) so I did, I am alright with using the API's metadata to commit. \nNote that as test can take some time to build, the :head commit after the initial clone could be abdee but in that time, more commits could have been pushed, so the gh/bb API metadata could refer to commits that are not yet fetched because they were pushed during the testing process.\n( note be wary #218 makes some pretty drastic structural changes, but shouldn't necessarily affect these bits of code, should get merged today )\n. Cool, I can wait on merging my PR ( so I can deal with the pains of the conflicts ;)\n. I'm on board with not trying to always make it use the PR's true HEAD, but the commit that triggered the build \ud83d\udc4d \nDue to #226 - Danger can't always know where to get the beginning of a PR, it's the base which gets a bit tricky.\nI wouldn't be adverse to simplifying there. Some of these bits feel quite arcane, and I'd love to see them reduced in size/scope. Danger doing less messing around in both Git & GitHub is definitely a positive.\n. Yes!\n. Yep, all rubocop over the pizza emoji \ud83d\udc6f \n. Woo! Green!\n. Danger has nothing to do with iOS, it should be put in the root of the repo.\nThough I wouldn't be adverse to a PR adding support for it to work from inside a sub-folder \ud83d\udc4d \n. I think you can go one better \ud83d\udc83 git rev-parse --show-toplevel - which will work independent of folder structure \ud83d\udc4d \n~/d/r/l/d/danger_plugins (plugins_everywhere_ok) \u23db  git rev-parse --show-toplevel\n/Users/orta/dev/ruby/libs/danger\n. Yeah, that might have to be the case then \ud83d\udc4d - we do this for CocoaPods, so it's not an unheard of pattern\n. haha - funky PR \ud83d\udc4d \n. /this structurally looks like what I think thinking \ud83d\udc4d \n. Should I be reviewing this @justMaku ?\n. ( bundle exec rubocop -a )\n. Congrats on a long PR!\n. I just found this - https://developer.github.com/v3/orgs/members/#check-public-membership  was thinking of migrating to using that API instead \ud83d\udc4d \n. I think treating it as a scoped instance offers a lot more expressive API, and that we can use yard to enforce harder standards without requiring making extra class methods, consider how danger-proselint works:\n``` ruby\nmodule Danger\n# Lint markdown files inside your projects.\n  # This is done using the proselint python egg.\n  # Results are passed out as a table in markdown.\n  #\n  # @example Specifying custom CocoaPods installation options\n  #\n  #          # Runs a linter with comma style disabled\n  #          proselint.disable_linters = [\u201cmisc.scare_quotes\u201d, \"misc.tense_present\"]\n  #          proselint.lint_files \u201c_posts/*.md\u201d\n  #\n  #          # Runs a linter with all styles, on modified and added markpown files in this PR\n  #          proselint.lint_files\n  #\n  # @see: artsy/artsy.github.io\n  # @tags: blogging, blog, writing, jekyll, middleman, hugo, metalsmith, gatsby, express\n  #\n  class DangerProselint < Plugin\n# Allows you to disable a collection of linters from being ran.\n# You can get a list of [them here](https://github.com/amperser/proselint#checks)\nattr_writer :disable_linters\n\n# Lints the globbed files, which can fail your build if\n#\n# @param   [String] files\n#          A globbed string which should return the files that you want to lint, defaults to nil.\n#          if nil, modified and added files will be used.\n# @return  [void]\n#\ndef lint_files(files=nil)\n  # Installs a prose checker if needed\n  system \"pip install --user proselint\" unless proselint_installed?\n\n  # Check that this is in the user's PATH\n  if `which proselint`.strip.empty?\n    fail \"proselint is not in the user's PATH, or it failed to install\"\n    return\n  end\n\n  # Either use files provided, or use the modified + added\n  markdown_files = files ? Dir.glob(files) : (modified_files + added_files)\n  markdown_files.select! do |line| (line.end_with?(\".markdown\") || line.end_with?(\".md\")) end\n\n  # TODO create the disabled linters JSON in ~/.proselintrc\n  # using @disable_linter\n\n  # Convert paths to proselint results\n  require 'json'\n  result_jsons = Hash[markdown_files.uniq.collect { |v| [v, JSON.parse(`proselint #{v} --json`.strip) ] }]\n  proses = result_jsons.select { |path, prose| prose['data']['errors'].count }\n\n  # Get some metadata about the local setup\n  current_branch = env.request_source.pr_json[\"head\"][\"ref\"]\n  current_slug = env.ci_source.repo_slug\n\n  # We got some error reports back from proselint\n  if proses.count > 0\n    message = \"### Proselint found issues\\n\\n\"\n    proses.each do |path, prose|\n      github_loc = \"/#{current_slug}/tree/#{current_branch}/#{path}\"\n      message << \"#### [#{path}](#{github_loc})\\n\\n\"\n\n      message << \"Line | Message | Severity |\\n\"\n      message << \"| --- | ----- | ----- |\\n\"\n\n      prose[\"data\"][\"errors\"].each do |error|\n        message << \"#{error['line']} | #{error['message']} | #{error['severity']}\\n\"\n      end\n    end\n\n    markdown message\n  end\n\n  # Determine if proselint is currently installed in the system paths.\n  # @return  [Bool]\n  #\n  def proselint_installed?\n    `which proselint`.strip.empty?\n  end\nend\n\nend\nend\n```\nThose inline comments can generate much richer documentation, both in ruby-docs and on the Danger website, without the need for custom class functions or awkward multi-line strings.\n\nIt would take multiple classes, and a lot of interclass communication to be able to provide a pretty standard way to offer useful APIs.\nAnother current upside here is that the code from the Dangerfile is copied by directly into the plugin, through that also could also be done inside the module'd classes ( I don't know too much about how they work.)\nI guess feel like it allows for the plugins to look like real code, that's not built for one specific thing.\n. \ud83d\udc4d \n. https://github.com/danger/danger/pull/292 should help with this\n. I'm still seeing this - https://circleci.com/gh/artsy/eigen/3108\n. \nhttps://circleci.com/changelog/\nmight be fixed with this\n. Turns out, there are a few bugs on Circle's side:\n\n. There's a few workarounds inside Danger ( Circle is definitely our most complicated CI service because of this - https://github.com/danger/danger/search?q=circle&type=Issues&utf8=\u2713)  which uses their API - you can give that a shot - docs are in the circle section of danger.systems.\n. Dupe of https://github.com/danger/danger/issues/120 \ud83d\udc4d \n. Aww - sorry, this got merge-conflicted, any chance you can rebase? Then this look good to go to me - thanks!\n. @justMaku wanna merge?\n. I just came to report this!\n. In the meantime, check with 2.2.x or 2.1.x ( I use 2.1.3, with no good reason for it other than consitency), and I'll look at this later\n. Aye, I think we should make this a proper error, and give that advice - thanks @justMaku \n. Can you explain the environment in which you're running Danger? You've not said the type of CI for example? I'm not really sure what you mean by lane either?\n. Danger really isn't well built for doing anything outside of running on CI (danger), and testing existing PRs against the current rules (danger local ) - there's work on-going that would make what it sounds like you want possible ( https://github.com/danger/danger/pull/518 ) but it's not going to be a quick one - for now, you might be fighting an uphill battle to make anything work\n. Yep \ud83d\udc4d \n. Interesting, this is crashing due to the Dangerfile\n``\nDanger::DSLError: \n[!] InvalidDangerfile` file: wrong number of arguments (2 for 1). Updating the Danger gem might fix the issue.\n #  from Dangerfile:27\n #  -------------------------------------------\n #  if !modified_files.include?(\"CHANGELOG.md\") && !declared_trivial\n\nfail(\"Please include a CHANGELOG entry. \\nYou can find it at CHANGELOG.md.\", sticky: false)\n #  end\n #  -------------------------------------------\n```\n\nbest remove sticky: false for now, and I'll take a look later\n. Computers ;)\nNeeds a rebase alas\n. trolololol\n. Great! We're back, I'm calling this PR trivial.\n. Agree \ud83d\udc4d \n. ```\n  1) Danger::Dangerfile printing verbose metadata creates a table from a selection of external plugins DSL attributes info\n     Failure/Error: value = plugin.send(method)\n RuntimeError:\n   You have to provide a message\n # ./danger_plugins/protect_files.rb:4:in `protect_files'\n\n```\nInteresting, this shouldn't happen, the rarity of protect_files should be greater than 0\n. e.g\n``` ruby\n        methods = plugin_hash[:methods].reject { |name| plugin.method(name).arity != 0 }\n    methods.map do |method|\n      value = plugin.send(method)\n\n```\nwould switching this to select on arty == 0 help?\n. Oh - I see, so, in theory def protect_files(path: nil, message: nil, fail_build: true) could have an arity of 0 cause of the default values\n. Thanks, I'll ship it after this greens \ud83c\udf4f \n. Nope, looks like a bug, weird, that part of the codebase is pretty well tested\n. Eh, I can live without this ATM\n. Looks like it\n. This is a lovely approach \ud83d\udc4d \n. Needs a rebase though, definitely a \ud83d\udc4d from me\n. This one is super tied to GitHub, but a good idea on the side of general usefulness.\nSounds like we should start thinking about exposing a Plugin that does useful GitHub related things to the DSL. E.g github.events and github.octokit \n. This should be doable now that we have split out the github-specific code into it's own plugin.\n. OK, I'm good with this, but I'd like to see it be danger_id instead of dangerId, and I'd like a note in the README about this somewhere \ud83d\udc4d \n. Rockin' thanks\n. I think this is fine to drop now.\n. And support for danger plugins - https://github.com/danger/danger/tree/master/danger_plugins\n. This is in!\n. Do you get the same thing for danger init ?\n. interesting, I'm seeing this too\nbundler: failed to load command: danger (/Users/orta/.gem/ruby/2.1.3/bin/danger)\nDanger::DSLError:\n. Hrm, IMO, this does look good, I can't tell if it's working, given that it has a dupe in the Danger log above though\n. but this one could do with a changelog, think a bunch of people would be glad to see this fix \ud83d\udc6f \n. Then throw in a #trivial and we can see if ti fixes on Danger's PRs\n. Awesome.\n. @dbgrandi I'll let you make the call on the changes\nBut I'm very much a ++ on updating the README - thanks @lukewar \n. For the moment, I'm okay with breaking things, we're not post-1 yet - just make sure there's docs i the CHANGELOG\n. @lukewar if you want to make some of these changes, I'd recommend doing them sooner, I want to go post-1.0 pretty soon\n. Personal note: changes will need reflecting in the docs - http://danger.systems/guides/faq.html#i-have-to-use-github-enterprise-which-is-always-outdated\n. Rockin'\n. I think this is done so that we can support his kind of setup: https://github.com/danger/danger/issues/226\n. so this may not be a good idea\n. Awesome, cool, let's do it then \ud83d\udc4d \n. I'm alright with not doing this for the moment - anyone else can try do it though \ud83d\udc6f \n. can't tell if that means yes :P\n. \n. weird, I use the default rake tasks for handing gems\n. about to do a new release, will check\n. heh, yep - all broke\n\n. Looks like all the rake tasks hide this stuff ^ - wouldn't have noticed without that - thanks @segiddins \nThis is fixed in 0.8.2\nFor people wanting to figure it out ( wasn't too many resources ) I ran this in pry:\npry\n Dir[File.join('{.,bin,assets,lib,spec,tasks}', '**/*')].each do |file|\n    mode = File.directory?(file) ? 0755 : 0644\n    File.chmod(mode, file)\n  end\n. For myself in the future - I now use chmod -R a+r . to fix this\n. Looks good, could you add TeamCity to the README, and add a note in the source code about having to do it manually, I think we'll need to add this in the docs once the site is ready \ud83d\udc4d \n. There wasn't too much going on, so it feels reasonable to ship this as 0.8.2\n. Could be that the danger_base and danger_head are set to the opposite branches e.g. for this PR it goes from 768998f...b55cae2 instead of b55cae2...768998f?\n. Any chance you can give this a try on the Danger 3.x releases, there have been changes around determining which commits to use as reference points for riffing - it might have helped out here\n. \ud83d\udc4d \n. > I think this is very critical as it's a major loss in functionality. How come no one noticed before?\nCould be fallout from https://github.com/danger/danger/pull/221 ?\nHowever this build has been out for a few hours, so please use a less accusatory tone in issues. I'm afraid I don't have time to take a look ATM, but you ( or others ) are welcome to take a quick look at fixing it.  ( And ideally adding a unit test or two so we don't regress again \ud83d\udc4d )\n. > It was more intended as: \"is this not working only for me?\"\nSorry, I should be assuming more positive intent. \nWe don't realize that it was broke because most of the projects using Danger are OSS, and we cannot give build access rights to the bot. Doing so would give anyone too much access to make changes via the access token :-/ - a limitation on the access rights for OAuth on GitHub alas. All of my projects use the command return value exclusively.\n. Looks like this works even when you don't give it rights to the repo \ud83c\udf89 \n\n. Yes, but when you only give it access of public_repo\n\nI wouldn't have expected that to have access to set the the build status\n. Awesome, looks good from my side -anyone want to give a 2nd opinion and merge?\n. Aye, I think we can change that. I'm happy for the commit range to be:\n- base: Pulled in from GitHub or BitBucket etc, pr_json[\"base\"][ref\"]\n- head: Current head\nMeaning we can remove the refs/pull/#{pull_id}/merge... stuff.\n. > and print the exception instead?\nThis is the default behavior for most users, so I don't think we should be showing an exception, as it's not really unexpected.\n. I think it's worth a CHANGELOG because it's a pretty big change in behavior, maybe something like\n- Relies on the current git HEAD, instead of pulling a merge branch from GitHub - justMaku ?\n. aye\n. Great - this'll feel much nicer!\n. Yeah, we discussed the idea of using Rubygems for the search, but ended up going with whitelisting - mainly because right now we're advising people use plugins as a way of sharing code. This would mean there'd be quite a lot of \"only useful to me\" plugins.\nhttps://github.com/danger/danger/issues/249 might mitigate that somewhat - but I think it's enough to not warrant it\n. This looks good to go on green to me \ud83d\udc4d \n. Happy for discussion on whether it should be github.pr or just straight pr for example\n. So far I've migrated them to be git.modified_files and github.pr_json etc, but still kept support for backwards compatibility, will probably pull the tfor 1.0\nI think the trade off for domain specific terms is worth it, files.commits doesn't make sense in an SVN, or perforce environment. I think it may mean writing a bit more tests, and a bit more duplicated code maybe but for the clarity it brings in the readability, it's probably worth the tradeoff\n. https://github.com/danger/danger/blob/master/dsl_docs.md has examples using the prefixing\n. ace\n. Do you have your authentication tokens set up correctly? I don't think we do anything too special here\n. Works for me - thanks \ud83d\udc4d \n. Ideally the README should be auto-generated from the DSL plugin, so that everything is always up to date. Similar to how gh_inspector does it https://github.com/orta/gh_inspector/blob/master/Rakefile#L18\n. Haha - sure thing \ud83d\udc6f \n. sorry, I trampled on this PR in trying to get #278 out - will need a rebase\n. Rock\n. Done #297 \n. Thanks @segiddins \ud83d\udc4d \n. Ah - yeah, really good catch - definitely agree\n. \ud83d\udea2 \ud83d\ude80 \n. thanks!\n. Nah, I think you have the right point. I think we should improve the command. I think we should do two things. Here's the use case\n```\n~> git remote -v\nash https://github.com/AshFurrow/eigen.git (fetch)\nash https://github.com/AshFurrow/eigen.git (push)\norta    https://github.com/orta/eigen-private.git (fetch)\norta    https://github.com/orta/eigen-private.git (push)\nupstream    https://github.com/artsy/eigen-private.git (fetch)\nupstream    https://github.com/artsy/eigen-private.git (push)\n~> bundle exec danger local\nI've found three remotes, which do you want to work against?\n - ash (ashfurrow/eigen.git)\n - orta (orta/eigen-private.git])\n - upstream (artsy/eigen.git)\n\n```\n\nThey then put in \"orta\", and danger then says something like, \"next time you can use --use-remote=orta to skip the question\".\nSo, there'd need to be:\n- a question when there's a more than one remote (see Interviewer.rb )\n- a CLAide argument for use-remote which can override that\n. relates to #382 \n. This is a not really a bug from my perspective, Danger cannot run without a PR so she calls raises an error. The idea of supporting a --no-fail flag has come up before - https://github.com/danger/danger/issues/117#issuecomment-194869733 and so that could be done here?\n. --no-fail doesn't exist, you could build it, and it could support ^ \ud83d\udc4d \n. Correlates with #337  - which also has a potential solution\n. Might be fixed as of https://github.com/danger/danger/pull/380\n. Yep \ud83d\udc4d \n. \ud83d\udc4d want in on the org?\n. Circle is unique: https://github.com/danger/danger/blob/711d10037165625470079783a5caa7ce49ae7a89/lib/danger/ci_source/circle.rb#L20-L52\n. No worries \ud83d\udc4d \n. Started moving to something more like this, it's probably better, but I have more important things to work on WRT Danger\n``` ruby\nhttps://circleci.com/docs/environment-variables\nrequire 'uri'\nrequire 'danger/ci_source/circle_api'\nmodule Danger\n  module CISource\n    class CircleCI < CI\n      def self.validates?(env)\n        return false unless env[\"CIRCLE_BUILD_NUM\"]\n        return false unless env[\"CIRCLE_PROJECT_USERNAME\"]\n        return false unless env[\"CIRCLE_PROJECT_REPONAME\"]\n    return true if env[\"CI_PULL_REQUEST\"]\n\n    # OK, so we may be in this state: https://github.com/danger/danger/issues/204\n    # e.g. could be in a PR, but Circle didn't expose the PR number\n    #\n    url = pull_request_url(env)\n    if url && URI.parse(url).path.split(\"/\").count == 5\n      paths = URI.parse(url).path.split(\"/\")\n      # The first one is an extra slash, ignore it\n      env[\"CI_PULL_REQUEST\"] = paths[4]\n    end\n\n    return !env[\"CI_PULL_REQUEST\"].nil?\n  end\n\n  def self.fetch_pull_request_url(env, repo_slug, build_number)\n    circle_token = env[\"CIRCLE_CI_API_TOKEN\"]\n    client = CircleAPI.new(circle_token)\n\n    build_json = client.fetch_build(repo_slug, build_number)\n    build_json[:pull_request_urls].first\n  end\n\n  def self.pull_request_url(env)\n    if env[\"CIRCLE_PROJECT_USERNAME\"] && env[\"CIRCLE_PROJECT_REPONAME\"]\n      repo_slug = env[\"CIRCLE_PROJECT_USERNAME\"] + \"/\" + env[\"CIRCLE_PROJECT_REPONAME\"]\n      fetch_pull_request_url(env, repo_slug, env[\"CIRCLE_BUILD_NUM\"])\n    else\n      nil\n    end\n  end\n\n  def initialize(env)\n    self.repo_url = GitRepo.new.origins # CircleCI doesn't provide a repo url env variable :/\n    self.repo_slug = env[\"CIRCLE_PROJECT_USERNAME\"] + \"/\" + env[\"CIRCLE_PROJECT_REPONAME\"]\n    self.pull_request_id = env[\"CI_PULL_REQUEST\"]\n  end\n\n  def supported_request_sources\n    @supported_request_sources ||= [Danger::RequestSources::GitHub]\n  end\n\nend\n\nend\nend\n``\n. this'll need a rebase\n. thanks yeah!\n. @k0nserv any reply from Narkos?\n. I think it's better we see if we can get either the attention of asedge, or someone who works at GitLab, it's a pretty clear-cut choice to say that they should have access in the absence of Narkos.\n. You mean merge this, but not let the code-paths be accessible? That can work for me\n. Aye, I'm on the let's merge it, but comment out theDanger::CISource::GitlabCI` - it'll end up in the autogenerated docs on the website\n. > I also believe that assuming that Danger only works on PRs is wrong as in fact danger could work on any given changeset.\nCould, yes, I guess I can see some usage as a pre-linter, but it might not be worth the overhead for support.\n. We may need to fork the gem, I don't want this PR sitting idle for this long\n. It's not unheard of, @KrauseFx had to do it for shenzhen - https://github.com/fastlane/shenzhen\n. It's looking like it needs some tests, and for a decision around whether we have to have our own fork of the gitlab gem in order to accommodate the changes.\nAnother option, is that we say it can only be used via a Gemfile with the reference to master for the moment. Shipped with caveats is better than uncertainty.\n. @deanpcmad it would need to go to this branch on @k0nserv's repo - https://github.com/k0nserv/danger/tree/gitlab\n. I can handle a lot of the documentation issues that Danger is raising too, post-merge.\n. > GitLab seems to be stripping out the data attributes from the submitted HTML :(\nInteresting, when I C&P'd the danger HTML into an issue the raw text kept the attributes:\n\nHowever the rendered markdown doesn't. I would guess that Danger is reading the markdown, so that may be ok?\n. > There's also the question of organization danger files which isn't implemented yet\nDon't do this ATM, I've already removed it in one PR - https://github.com/danger/danger/pull/418 - I'm not sure what its replacement should look like yet\n. \ud83c\udf89 \n. OK, so yeah, this looks good, I have only minor nitpicks about the tests - but that's not a blocker for me at all. I'm going to merge this into another branch on danger ( I want to be able to deploy master whenever ) so I can get this rebased, documented and green. A new PR will be coming in soon, once I get back to my main computer.\nThis has been a bunch of work from a quite a few developers, thanks to all of you. \ud83d\udcaf \n. \ud83d\udc4d \n. Cool for me if green\n. looks like some emoji special casing\n. cool, makes sense \ud83d\udc4d \n. Thanks @justMaku - I was thinking about this issue on my walk home yesterday and couldn't come up with what was out of place.\nI took a look through all of the --verbose info in our test runs - and everything looks great.\n. Summmaryyyyyy\n. Nice, you might want to add a summary to the PR, or Danger will fail it again ;)\n. Woooooo\n. aww\n. I'd totally be on board with converting to always be double quotes - I never remember to use a single quote, didn't even realize that was an option in rubocop\n. > Can probably check if BUILDKITE_PULL_REQUEST_REPO is nil before proceeding.\nSounds like a good idea, wanna give it a shot?\n. Hey - nice one, so this test - https://github.com/danger/danger/blob/master/spec/lib/danger/commands/runner_spec.rb#L10-L14 relies on the ordering of accessing the ENV vars to stub them out, I think you just need to change some of that?\nAnd credit yourself in the changelog \ud83d\udc83 \n. I don't strictly know (perhaps this makes this a really bad test :/ - but I had been struggling to write tests for the command, so /shrug), can you please try adding \n``` diff\n+      allow(ENV).to receive(:[]).with(\"BUILDKITE_PULL_REQUEST_REPO\").and_return(\"git@github.com:artsy/eigen.git\")\n```\nTwice, as it's accessed twice during startup - if this fails, I'll take over your PR and give it some time\n. Looks like I'm wrong - thanks @bentrengrove can you make that test pending (change the it on that block to pending ) and I'll refactor the test in a separate PR\n. :-/ maybe all in the runner :(\n. Err, yeah,  OK, change those to xit which is what I was using for the other tests - sorry, I'm new rspec, only really start using it for Danger. In Specta/Kiwi pending would have skipped it.\n. Woooooo\n. Thanks! Sorry for the hassle!\n. https://github.com/danger/danger.systems/pull/27 starts moving the README bits over to guides and the FAQ.\n. Fixed by https://github.com/danger/danger/pull/330\n. I'd recommend running with  --verbose to see if anything feels out of alignment, it should echo all of Danger's internal values for this stuff \ud83d\udc4d \nIt's how I was thinking of debugging this one anyway\n. Hah - Make it do that \ud83d\udc6f \n. I don't think this is happening anymore, at least we're not seeing on artsy or danger \n. There's been work on splitting out our GitHub specific code into a generic framework in #299 / #59 - you should be able to build on top of that to add bitbucket support\n. I wonder if there's a way of requesting a commit range from a Git repo, woe could do that beforehand to ensure the before/after range is \ud83d\udc4d \n. So the case here is this?\n- Push a few commits, make a PR\n- While that is building, you push new commits\n- GitHub's PR API now references git commits after the commit range\n- CI build gets around to running Danger, which uses the GitHub API due to workarounds\n- Danger bails, because those commits don't exist in the current scope\n. If so, we could make a case for either:\n1. Checking for the PR's head commit existing, and if not, using the current :head.\n2. Fetching the latest commits.\n. Mainly because I've never heard of it \ud83d\udc4d - it could be what we're looking for\n. This now should be fixed in 3.2.1 (which ensures all commits exist) - if it wasn't fixed in 2.x ( whenever we introduced merge-point's )\n. Interesting - I wonder if this is based on our usage of HTML in there tableview, can you please test it with markdown(\"The frontend has been changed ... ping @kickstarter/frontend\")? \n. OK, I think this might be worth documenting, don't think this is annoying enough to warrant going back to markdown tables ( they're ugly in comparison ) so it'll need documentating somewhere\n. Oh yeah - there was literally a mention of this in the README with bad advice! Thanks\n. Thanks! ( want in on the org? ( no pressure, we conform to the Moya contributor guidelines )\n. Zero expectations, but at least now you have some control over your destiny\n. \ud83d\udc4d \n. Agreed \ud83d\udc4d - it should\n. Hrm, I thought we did that, it's a good point.\n. We don't, I wanted this and instead got this\n\n. Or not, we have specs for this:\nruby\n      it \"some warnings with markdown, no errors\" do\n        warnings = violations([\"a markdown [link to danger](https://github.com/danger/danger)\", \"second **warning**\"])\n        result = @g.generate_comment(warnings: warnings, errors: [], messages: [])\n        # rubocop:disable Metrics/LineLength\n        expect(result.gsub(/\\s+/, \"\")).to eq(\n          '<table><thead><tr><thwidth=\"50\"></th><thwidth=\"100%\"data-kind=\"Warning\">2Warnings</th></tr></thead><tbody><tr><td>:warning:</td><tddata-sticky=\"false\">amarkdown<ahref=\"https://github.com/danger/danger\">linktodanger</a></td></tr><tr><td>:warning:</td><tddata-sticky=\"false\">second<strong>warning</strong></td></tr></tbody></table><palign=\"right\"data-meta=\"generated_by_danger\">Generatedby:no_entry_sign:<ahref=\"http://danger.systems/\">danger</a></p>'\n        )\n        # rubocop:enable Metrics/LineLength\n      End\n. @DanToml - I spotted that CP uses the wrong ruby string to make newlines, newlines: \n```\n  fail('Please include a CHANGELOG entry to credit yourself! \\nYou can find it at CHANGELOG.md.', :sticky => false)\n``\n. We'd have to do our own parsing here\n. Cork has Cork::TextWrapper - https://github.com/CocoaPods/Cork/blob/master/lib/cork/text_wrapper.rb\n. Aside form the question about thebuild.sh` - this looks great \ud83d\udc4d \n. Alright, this looks cool - this is definitely a reminder that I need to start generating a list of things Danger supports programmatically ASAP in order to ensure the README/danger.systems is always up to date.\nWRT to the build.sh, I'm not sure we're going to need to run our own Surf instance ( we are currently running Danger on Travis/Circle, as they are most used ( and Circle has custom code, due to some funky workarounds. ) so in the future, I may end up removing that file. However, this is a nice idea, and I'd like to see if people take it up. \nSurf looks nice, well done there.\n. Interesting \ud83d\udc4d \n. > Add support for both danger and Danger as repo name (ok?) \n\ud83d\udc4d Yep - good call\n. Any chance you can special case the Danger org, so that we don't get it running on here?\n. OK, will give it a look later tonight\n. anyone know if rubocop can force the labeled params thing in ruby? I should do this, but I forget\n. I mean:\n``` ruby\nfails\ndef method(one, two)\nend\npasses\ndef method(one, two:two)\nend\n```\n. Gonna take a quick stab at addressing feedback\n. Alllllriiight, let's do it.\n. Aye, I'd like a rubocop linter that forces labeled arguments \ud83d\udc6f \ud83d\udc4d \n. Does it seem like a good idea to you?\n. Interesting ( https://robots.thoughtbot.com/ruby-2-keyword-arguments ) - thanks @segiddins \n. \n. Merged in to master with #312 \n. Alright, alas this has a merge conflict, happy to merge on green ( when GH allows me to )\n. Awesome, thanks!\n. You might be using squash commits, it looks for a specific format of commits that GH make on merges\n. Yeah, it looks for commits that GitHub itself makes when you merge a PR, this should be more obvious with #518 when there's no attempts to guess the latest PR, you'd have to provide the link\n. Danger went to sleep\n\n\n. OK, the windows build failing is fine \ud83d\udc4d \n. Yeah, using FileUtils is cool with me \ud83d\udc4d  - is there a good/free CI service that can run window images so we can run the test suites on it?\n. Nice one @segiddins - I've set us up with Appveyor - https://ci.appveyor.com/project/orta/danger-47jiu\nMight affect upcoming PRs so will figure that one as we come to it\n. https://www.appveyor.com/docs/lang/ruby - docs on ruby\nI assume we need something like:\n``` yaml\nappveyor.yml\ninstall:\n  - set PATH=C:\\Ruby22\\bin;%PATH%\n  - bundle install\nbuild: off\ntest_script:\n  - bundle exec rake spec\n```\nStill trying to find a setting to make it run only on PRs, not just commits.\n. Alright, that's both it working on Windows, and it staying that way via CI in #333 \ud83d\udc4d \n. Nice one, looks good to me \ud83d\udc4d \n. also, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you, you can also not - it's no problem.\n. \ud83d\udc4d \n. Yep, only on PRs, though ideally Buildkite would pass with a different message, depends on what CI ENV vars are available. It should say \"This is not a PR, skipping\".\n. Ah yeah, #310 undoes the usual behaviour of validates which says \"this is definitely on buildkite\" then init which determines if it is a PR. \nI wonder if it makes more sense to have two functions for all of the request sources, so instead of this:\n``` ruby\n      def self.validates?(env)\n        return false unless env[\"BUILDKITE\"]\n        return false unless env[\"BUILDKITE_PULL_REQUEST_REPO\"] && !env[\"BUILDKITE_PULL_REQUEST_REPO\"].empty?\n        return false unless env[\"BUILDKITE_PULL_REQUEST\"]\n    return true\n  end\n\n```\nWe split it into validates_ci and validates_pr:\n``` ruby\n      def self.validates_ci?(env)\n        return false unless env[\"BUILDKITE\"]\n        return true\n      end\n  def self.validates_pr?(env)\n    return false unless env[\"BUILDKITE_PULL_REQUEST_REPO\"] && !env[\"BUILDKITE_PULL_REQUEST_REPO\"].empty?\n    return false unless env[\"BUILDKITE_PULL_REQUEST\"]\n    return true\n  end\n\n``\n. Both @bentrengrove  and myself put in some fixes for this which are now shipped \ud83d\udc4d \n. \ud83d\udc4d \n. @dbgrandi was working on this this morning - this is a dupe of https://github.com/danger/danger/issues/198 \ud83d\udc4d \n. Finally.\n. We could usegem build` and look for warnings\n. I'm doing something similar for YARD ATM\n. To make that work you need this spec to pass:\nruby\n      it \"a multiline warning with markdown, no errors\" do\n        warnings = violations([\"a markdown [link to danger](https://github.com/danger/danger)\\n\\n```\\ncode\\n```\\n\\nHello\"])\n        result = @g.generate_comment(warnings: warnings, errors: [], messages: [])\n        # rubocop:disable Metrics/LineLength\n        expect(result.gsub(/\\s+/, \"\")).to eq(\n          '<table><thead><tr><thwidth=\"50\"></th><thwidth=\"100%\"data-kind=\"Warning\">1Warning</th></tr></thead><tbody><tr><td>:warning:</td><tddata-sticky=\"false\"><p>amarkdown<ahref=\"https://github.com/danger/danger\">linktodanger</a></p><p><code>code</code></p><p>Hello</p></td></tr></tbody></table><palign=\"right\"data-meta=\"generated_by_danger\">Generatedby:no_entry_sign:<ahref=\"http://danger.systems/\">danger</a></p>'\n        )\n        # rubocop:enable Metrics/LineLength\n      End\n. \ud83d\udc4d \n. I've got the multi-line fix in #343 \n. No one has looked at doing it, I'd love to see that happen personally \ud83d\udc4d \n. I'd imagine we have two ways to add to it:\nThe first one is failable, it would work by downloading the diffs, looking through all of them to see if that file is referenced, then doing a lookup for the line position to the hunk position.\nruby\ngithub.add_comment_to_file(\"CHANGELOG.md\", line: 30, comment: \"Please add a space after the line\")\nThe other one involves reading through the diff itself and making assumptions based off that\nruby\ndiff = github.pr_diff\nif diff.string.include? \"fdescribe\"\n  line = diff.line_for_first \"fdescribe\"\n  github.add_comment_to_diff(diff, line: line, comment: \"Don't include an fdescribe in your tests\")\nend\n. Yeah - that sounds perfect to me, wanna try giving it a shot? My focus is still going to be on documentation for the next few weeks.\n. I think that's a great idea, I'd imagine the simplest starting point would be to start building something to grab the diff hunks when requested, then exposing them as  diff = github.pr_diff in some form\n. Aye, works for me \ud83d\udc4d - would like to see it as the last column \n. Great great, I poked dave as he built it so my feedback was I the last few commits. This is useful enough that I want a build now for it.\n. I started agreeing, but I'm not 100% on it yet.\nI think a better way to handle this is to consider the system thing something to filter out successful plist items. You could expose what files have changed here  e.g.\nruby\nunlinted_plists = git.modified_files.grep(/Localizable.strings$/).reject { |file| system(\"plutil -lint #{file}\") }\nfail(\"#{unlinted_plists.join(\", \")} failed to lint with plutil\") if unlinted_plists.count > 0\nIn most de-dupe cases,  I think you're going to want to actually show some kind of value of what failed as the build is external to you - and usually hard to access.\n. Pretty sure https://github.com/danger/danger/pull/941 fixed this. \n. \n. \n. Nice one - thanks\n. Yep - perfect, looks \ud83d\udc4d \n. An interesting approach, I hadn't considered this as a possibility. Nice work.\nI think we'll need to add markdown to that list, while it has similarities with message - I bet a lot of people would try doing it. \nNote, we're in the process of supporting more than just GitHub ( #299 ) , which means this will have to go through the api_source ideally I think.\n. Also, want in on the org?\n. Yeah, sorry, RequestSource - so many names. Mainly so that there's a base pattern that others can follow to re-implement ( and maybe echo out if it's not GitHub, and just puts out an error message.\n. Alright, overall structure looks great - if we didn't have such comprehensively auto-generated documentation, I would merge this. ATM it would tell people something that's incorrect on http://danger.systems/reference.html \nNow that the 2.0 milestone is complete as of today - https://github.com/danger/danger/milestone/1  - I expect to be making the release soon, it could be today, it could be tomorrow - it's mostly blocked by work on the docs.\n. Depending on how fast you are working, I'd happy take you closing this PR and pushing it to a develop branch now that you have access, and would have the freedom to PR new code to that.\n. ^ your example is a private repo ( or deleted? ) \n. This might make more sense as a feature? A way to let local run against PRs without relying on the merged PR aspect\n. Thanks! Fixed in https://github.com/danger/danger.systems/pull/48 \n. Alright, I was already in there writing some examples - so I will merge this and add some examples to the plugin\n. My linter caught a doc error - wooooo\n\n. what is up with these fails?\n. I think it's not using the bundle'd rubocop, those linters got added in the last few days. I've bumped our bundler version, and fixed them\n. Alright, I'm calling this green, it works locally and it looks like travis/pr seems to have locked on two of our ruby versions.\n\n. Bully \ud83d\udc6f \n. One way to check, would be for us to do a check to se if danger.gemspec exists in that repo first, otherwise you're going to run our Dangerfile\n. You can only have one repo called Danger to my knowledge, I think we only specifically work with that one\n. Looks like some improvements to danger local\nIn theory it could be done by:\n- Specifying the head and base commit\n- Replacing the github plugin with one that either has stubbed data, or  with something that absorbs all the requests and doesn't crash, as github.pr_body needs to do something. But there's no PR data\n. That's included in the giant todo list - https://github.com/danger/danger/pull/518\n. Work went into danger pr which takes a lot of the responsibilities away from danger local - I don't think anything has changed WRT danger local in the last 6 months. I think it'd be fine to make the github object be nullable in there, and figure out what it takes to make sure it works reliably i that context. This feature exists in Danger JS now https://github.com/danger/danger-js/pull/473. \ud83d\udc4d \n. Overlaps a bit with https://github.com/danger/danger/issues/368 too \ud83d\udc4d \n. Maybe it'll look nicer with GitHub link style files?\n- [ ] Gemfile#L3 - Recursive warn - inline false\n- [ ] Gemfile#L1 - Recursive warn - inline false\n- [ ] Gemfile.lock#L15 - Recursive warn 2 - inline false\n- [ ] .gitignore line#L10 - ignore - inline false\n. It's because your pledge of Danger allegiance is private, not public. Still not sure what to do about that. Maybe - https://github.com/Moya/Aeryn is the solution instead of Danger.\n. \ud83d\udc4d good to go by me\n. Yeah, I think this is fine \ud83d\udc4d \n. It's github.pr_title any idea where you found that docs from? If it's from danger init then this https://github.com/danger/danger/pull/372 will fix that, I will make a release so others don't hit the same problem!\n. \nShipped, no-one else should have that problem \ud83d\udc6f \n. Thanks @epologee \n. Thanks \ud83d\udc4d \n. Yep looks good - wonder what's up with the fail\n. I had a think about it, and as I needed to make some changes to add docs around CI sources, I've also added what we talked about in #337 which should fix your problem and make it not really happen again.\n. So thanks for the PR! But it's negated by #380 \ud83d\udc4d \n. Looked at this, think it's doing it.\n. f\n. Alright \ud83d\udc4d \n. Windows builds.\n. the [pr] bit would be danger pr https://github.com/danger/danger/pull/362 so it can have any URL, which can then be used to support gitlab too\n. Ah, I see, yeah, so that Danger is effectively a multi-step process, this can make it much easier to test too.  I grok it. Makes sense \ud83d\udc4d \n. > How would those kinds of differences work with the new system?\nI'm still not sure of this, I definitely don't want to have separate Dangerfiles. So far, I've only come up with putting dummy data ( or allowing you to say \"use this PR for that\" ) - as it's a new feature, it really can look like anything it wants.\n\nAlso, I'm behind a firewall and anything that requires the command line to talk to the internet is difficult. To get Danger working I already need a command line proxy running. So I'm \ud83d\udc4e for using raw HTTP links to run Danger locally.\n\nThis is about making it more explicit, currently it just infers that url from your repo but under the hood it still generates a http url to work with. With an actual url you can define other git repos too. It'll still have to use the git commands under the hood to compare data\n. Idea: The danger object should contain a bool about whether it is running in local or not. \nCould make it more reasonable to do something like:\nruby\nunless danger.local\n  fail(\"Needs MR title\") unless gitlab.mr_title.length > 5\nend\ncredit to @mtitolo \n. I scoped out a few months ago a way so we could handle different inputs from GitHub/GitLab etc - https://github.com/danger/danger/issues/42#issuecomment-219752336\nCould be extended to provide scopes for Danger, aye\n. I'm not really a re-writing history kind of person\n. \ud83d\udc6f \n. Nah, I just prefer to see the history as immutable - it's mostly laziness, so I've never bothered to learn\n. Sure, you're welcome to it, \ud83d\udc4d \n. Awesome \ud83d\udc83 \n. This looks good to me - the windows CIs seem to have been queued for a day - so I'm OK with them not being green\n. an example of issue 1 - https://github.com/bnb/awesome-hyperterm/pull/68\n. Danger can probably run Python code to with this: http://rubypython.rubyforge.org\n. This kind of thing makes me wish there were subspecs for rubygems, rubypython support would add 3 dependencies\n. Looks like I can use this pattern: http://www.visuality.pl/posts/handling-optional-dependencies-in-gems\nAnd then in the docs, we can say you need to have both danger and rubypython installed in order to have python Dangerfiles.\n. For the JS Dangerfile, it would be completely in JS, I'd expose all of the ruby objects and their public methods to the JS runtime before the Dangerfile.js is eval'd and you should be able to write the exact same kind of Dangerfile but in JS.\nFor other environments it's harder to say outright without research - I looked at rubypython but I'm not sure that I can expose Danger plugins to the python parser \n\nThere is no support for passing complicated (non-basic) Ruby types to Python.\n. That one is tough, I genuinely don't know the answer here. I want to avoid native modules. Mainly because that raises the barrier of entry to other contributors, and can make it harder for others to install Danger.  Danger has already had to change git libraries twice because of native modules not building on vanilla macs.\n\nMy priorities for this is JS, and then everything else, realistically. I'm starting to write a lot more JS in day-to-day, and the majority of OSS code is JS nowadays.\nI'm happy to continue digging for ways to allow other languages to work with Danger, but if we can only send over the basic types then I'd have to make the DSLs considerably more comprehensive - which  I want to avoid if I can.\n. Current thoughts: I sit somewhere between just wanting to ship this and mark it as experimental - and saying that this is worth making relatively drastic API changes ( allowing Danger to communicate to the Dangerfile runner across processes.) \nIt's probably worth having this but being \"that be dragons here\" hands-off-y. I think any real integration with JS has to include node, and to include node we have to do something different than the current implementation.\nLast time I whined about it online.\n. This idea failed in Ruby, and now it's got a semi-working re-write in JS. Closing.\n. Cool - looks good to go\n. Windows CI still broke\n. Thanks dave\n. Great work @marcelofabri \n. rock\n. Windows builds.\n. \ud83d\udc4d winders builds.\n. AppVeyor has some queuing issues ATM. Merging.\n. Hrm, yeah, I'm not sure that we can live without redcarpet, it's the only markdown rendered that does github flavoured markdown right. Think we should document this \ud83d\udc4d \n. Shipped as 2.1.1 \ud83d\udc4d \n. awesome\n. Moya contributor guidelines say you can get in on the org, no pressure, want in?\n. We opted for enforcing double quotes on purpose, https://github.com/danger/danger/pull/307#issuecomment-230520772\nEffectively it adds extra confusion for new contributors for little gain. I'm interested in the other ones though, this one was just well discussed over time.\n. ( and a rebase - sorry about that \ud83d\udc6f )\n. oh damn, err, sorry, I should have merged this before I merged #399 :/\ncan I get another rebase\n. Thanks @LeFnord  - we have policy of offering org access after a PR, would you like in? No pressure.\n. Thanks for the recommendation, but we've thought a long time about the policies for running larger OSS projects and are pretty happy with what we've come up with \ud83d\udc4d \n. You're getting hit by https://github.com/danger/danger/issues/366 - for now, delete your Danger fork \ud83d\udc4d \n. Yeah, working on a fix for Danger now - I agree, I checked your dangerfile, and was like \"this feels wrong\"\n. Given that this would cause merge conflicts with both #299 and #412 - I'm willing to pause on it for a day or two\n. Pushed to the js branch.\n. I installed an extension to VS Code to add all these now :D\n. rock\n. Works for me, I'll need to see if VS Code supports this\n. What type of CI server are you using?\n. Should be better in the next release due to #413 \n. Hrm, I have no idea about these kind of problems. Are you passing emoji or interesting characters that can help in figuring the debugging?\n. Cool, that would have got shown in the table, wonder if terminal-table only does ASCII, so we'd have to strip it down\n. Yep, looks like there's a gem fork just for unicode - https://github.com/rochefort/terminal-table-unicode\n. Hrm, that adds a bunch of new dependencies, I'd rather strip unicode I'm afraid.\n. Looks like the answer is string encode\n. Cork was introduced as a UI dependency injection tool sometime in-between, bet it's somewhere in that.\n. Should be fixed by #625 \n. Think those three need to go in validates_as_pr? given that we want to be sure this is circle - but that there's not even enough information to generate a PR\n. I've not shipped a release - as  I figured we had three big PRs coming in\n. Just shipped 2.1.2 - wanna see if that fixes it? #416 \n. Yeah, I saw this today on #418 \n. There's been a lot of work on this in the 2.1.x releases\n. <3 33333. That's not true, permissive is only needed for forks, for same-repo branches it will work, I'm happy to have it changed to something like:\n\n# There is no difference here for OSS vs Closed, add your DANGER_GITHUB_API_TOKEN to the Environment variable settings page. If you want to support running Danger on PRs from forks you  need to turn on Permissive building of fork pull requests.\n\nWhat do you think?\n. > Suppressing export of environment variables DANGER_GITHUB_API_TOKEN fork PR builds\n\n\n... fork PR builds\n\n\nYour original text implied everyone had to do it, but you don't, you only have to do it for fork builds. That's what I changed it to \ud83d\udc4d \n. > Except I got this problem NOT on a fork\nThis sounds like a bug on Circle, if that's true then your PR is totally valid\n. All in all, looks like some great work\n. > If a non-sticky comment is sent twice by danger, it will get shown twice (where a sticky would only appear once). I'm thinking the expected behaviour for non-sticky would be to just delete the comment unless it's re-set?\nHad a chat with @ashfurrow and @dbgrandi - think the best thing is to delete non-sticky comments, but only if there's no reply comments. Does that make sense?\n. Implementation wise, no, this looks like what I'd expect - think it needs a few tests ( this is stuff we really don't want to break accidentally ) then it's \ud83d\ude46 \ud83d\udc4d \n. Before you start looking at specs, would recommend a rebase - #414 will have moved things around a little bit\n. @champo if this is just blocked on specs, I can take a look at this?\n. Alright, that's master merged in \ud83d\udc4d  - now time to look at those tests\n. Changed it to master\n. Think I'm gonna try get the gitlab stuff merged first\n. OK, this PR now has a clear runway of blockers. Will try to spend some time on it this week.\n. Alright, so this behaves almost exactly as I'd like - I'm currently thinking over two behaviors changes: \n- Making sticky: false the default for inline messages. Imagine doing something like rubocop --json and applying this everywhere, no-one really cares about it being fixed. This is also a larger pattern I'm wondering about flipping the switch on. However, I think for file comments you're much more likely to want to have one-off comments due to automation.\n- Removing the filename + link for the messages posted as a comment - as they already sit inside the PR context when you read them, I think it adds extra noise. However, keeping it around for  files not in the diff. e.g:\nStays\n\nGoes:\n\n. Decided to leave the discussion around sticky: true to #482 \n. Some initial work on the specs have spotted a hole or two around deletion:\n- [x] Inline comments are not deleted when they're not triggered on the second time\n- [x] The main comment is not deleted when there are no non-inline comments\nThey're currently highlighted in the github specs\n. OK, I feel like this is ready to go - so, let's do it.\n. I think it's totally cool to write an issue \ud83d\udc4d - then we can find out when support is added :)\n. Thanks for the first PR @hanneskaeufler - would you like to join the org? \nThis fixe https://github.com/danger/danger/issues/400 and would likely require a rebase for #412 \n. Yeah, I think so, I know there are people using this feature in production. Plus, I'd rather be on the side of more major versions than less, realistically. \nI don't want to try and split code-paths for JS/Ruby any more than is current, making it easy to add another language option in the something I'd like to do. I was debating having the JS danger files class as a major release anyway, so the two can be \"released\" at the same time, even if it comes out in a patch release before, as it doesn't break things\n. Alright, this is happening in #418 \n. Rockin'\n. I'm seeing:\nNoMethodError: undefined method `danger_repo?' for #<Danger::RequestSources::GitHub:0x007fef42bd3b00>\n  /Users/orta/.gem/ruby/2.1.3/bundler/gems/danger-c3c17f273728/lib/danger/commands/local.rb:120:in `check_and_run_org_dangerfile'\n  /Users/orta/.gem/ruby/2.1.3/bundler/gems/danger-c3c17f273728/lib/danger/commands/local.rb:110:in `run'\n  /Users/orta/.gem/ruby/2.1.3/gems/claide-1.0.0/lib/claide/command.rb:334:in `run'\n  /Users/orta/.gem/ruby/2.1.3/bundler/gems/danger-c3c17f273728/bin/danger:5:in `<top (required)>'\n  /Users/orta/.gem/ruby/2.1.3/bin/danger:23:in `load'\n  /Users/orta/.gem/ruby/2.1.3/bin/danger:23:in `<top (required)>'\n. Danger is also dying on circle CI master - https://circleci.com/gh/danger/danger.systems/22?utm_campaign=build-failed&utm_medium=email&utm_source=notification\n. Looks like this hasn't migrated to 2.0 syntax -> https://github.com/danger/danger/blob/master/CHANGELOG.md#200\n\ud83d\udc4d \n. Think I will include a separate gem, danger-js which only has two dependencies danger and therubyracer. I'll recommend that JS users have that as their dependency.  \nThis means less gems for anyone currently using it, including v8 which is a native module.\n. https://rubygems.org/gems/danger-js\n. Looks like realistically, JS is pretty useless without some other libraries. Will look into importing lodash by default, works in a pry test - thanks @craigspaeth\n. Closing in favour of https://github.com/danger/danger-js/\n. Please don't delete this branch though, until danger-js is working, this branch is being used in Artsy \n. Done.\n. I can't rebuild your CI builds, as they're from a fork, but if you want to skip the CHANGELOG requirement, you need to add #trivial in the title \ud83d\udc4d \n. You could run with bundle exec danger local after changing the Dangerfile to show 100,000 characters?\n. > violations with this PR, too keep the size down the number shown has been truncated to \n-> \n\nviolations with this PR. Due to GitHub's max issue comment size, the number shown has been truncated to \n\nShows that it's not just us deciding on a random number for no reason\n. Lets do it \ud83d\udc4d \n. Could it be that Danger has no access to a private repo via the github token? The lookup for the repo seems fine, from the regex\n[3] pry(main)> a=\"git@github.com:stripysock/projectname_android.git\"\n=> \"git@github.com:stripysock/projectname_android.git\"\n[4] pry(main)> a.match(%r{([\\/:])([^\\/]+\\/[^\\/.]+)(?:.git)?$})\n=> #<MatchData \":stripysock/projectname_android.git\" 1:\":\" 2:\"stripysock/projectname_android\">\n[5] pry(main)> a.match(%r{([\\/:])([^\\/]+\\/[^\\/.]+)(?:.git)?$})[2]\n=> \"stripysock/projectname_android\"\n. ah, so the check that it is a PR looks for the existence of BUILDKITE_PULL_REQUEST_REPO - it should look that it is not an empty string, wanna try fix it? Should be easy to write tests for \ud83d\udc4d \n. Done\n. \ud83d\udc4d \n. Yep - this looks perfect @cysp - just a README letting people know the change and it's done - great work\n. Nah, that's fine \ud83d\udc4d \n. Want in on the org @cysp ?\n. > Btw isn't that the point of a decent test-suite? Refactor some code and NOT having to touch the tests, yet they still pass?\nYeah definitely! However, most PRs are not refactors, so it's aimed at the most often case\n. Looks good \ud83d\udc4d \n. Awesome, looks good! \n. This all looks amazing - thanks @suchow - I'm a prolific writer, but relatively careless \ud83d\udc83 thanks, this is a great improvement \n. Needs a rebase, but feel free to merge yourself \ud83d\udc4d \n. I mean we already have that, that's how we test all of the diff-related parts of the git integration - which is why there's no new tests\n. assumably they should all give the same results @marcelofabri - so for now, no\n. If it acts odd, thats a bug\n. I'm willing to give this a shot \ud83d\udc4d \n. We brits have a way with feint praise\n. Shipped as 2.1.4\n. Nice! They appeared at the exact same time, so we got double-danger'd.\n. I've created https://github.com/orta/show_circle_env which has examples of all env vars, in all of the types of API calls\n. Agreed \ud83d\udc4d \n. Doh! - nice find\n. @marcelofabri FWIW, I don't think a crash fix is trivial, it really should go in the CHANGELOG \ud83d\udc6f it's a good fix! \n. \ud83d\udc4d \n. Local won't need this once #382 is in \ud83d\udc4d \n. Yep, oh interesting, I was going to cc you on https://github.com/danger/danger.systems/issues/90 - where I'm writing this \ud83d\udc4d \n. OK, @k0nserv would love a final review, if it's good to go - hit that \ud83c\udf4f \n. Rock \ud83d\udc4d \n. \ud83d\udc4d \n. @hanneskaeufler afraid it needs a rebase ( you're welcome to use local branches so that we can trigger those too - if you'd like )\n. Thanks\n. Looks good to me \ud83d\udc4d \n. Aww, damn, sorry @hanneskaeufler can you rebase please\n. Feel free to merge if you see it green before me\n. 10/10\n. solid work\n. You could call this one trivial I think - fits inside the big \"gitlab\" entry\n. Crash fix! Not trivial - it's a great fix, worthy of a point release, wanna add in a CHANGELOG and I'll ship it?\n. \ud83d\udc6f \n. In the case of Xcode server, I'm afraid it only supports Github & BitBucket\nFor danger init- yeah, that definitely needs a run through, it can probably figure out whether you're on GH/GL based on the remotes and offer better docs. \nWRT the github_helper I'd guess they overwrite each other ATM, and are redundant :)\n. Options: booooooo\nBut, I think that might make sense for the self-hosted/ enterprises. \ud83d\udc4d \n. Aye, the scope for local changes are pretty vast #382 - so I wouldn't expect to see those too soon I'm afraid\n. Yep, for sure\n. \ud83d\udc4d \n. Works for me, you can see if the same tests for the github one runs against the gitlab one \ud83d\udc4d \n. Yes! It is, looks like I missed it\n. Yeah, this looks \ud83d\udcaf to me\n. \ud83d\udc4d \n. Confirmed, when this was first created it had the b - https://github.com/danger/danger/commit/b873e5ddd26f69f120b5bf14758d5e93d3b27829#diff-cf6602946c8994ac9291f5e00b4d7ffbR20\n. You can change it back, I can make a gem release, deal? I'm still in bed \ud83d\udc6f \n. Rockin' - want in on the org too?\n. This is a dupe of a part of #458 - which is really about #382 - which would fix this, so I'm gonna close this to avoid dupes\n. looks legit to me\n. 10/10\n. shocking\n. @phillfarrugia - you're a domain expert here ( I don't use BuildKite ) if our setup for build kite repos is wrong, I'd love to get that fixed. I try to look up docs if a PR changes the ENV settings, but I'm not perfect here. \n. Awesome, sounds like we could improve the Jenkins CI url capture - wanna try give it a shot? The area is well tested so you shouldn't be able to break anything\n. Thanks - @jk want in on the org?\n. In theory, this command can have that environment var set before executing the git command?\n. Aye\n. Sorry that you put so much time into this, but I'm afraid it's a dupe of  https://github.com/danger/danger/issues/458\nI'd happily see some patches for GitLab support, but I expect that most of the work will get wiped out by #382 which is still getting fleshed out\n. > I use the plain REST API due to lack of libraries.\n\ud83c\udf89 this is great, less dependencies\n. @HeEAaD - let me know when you're happy, and I'll merge this into a branch on Danger, then give it some documentation to pass the \"Core Docs Errors\" above\n. you sound so confident @HeEAaD  ;)\n. \ud83d\udc4d  I'm not sure how much time I'll have tomorrow, but I might be able to find time to get this merged into another branch and then documented up this evening, looking like a solid improvement. Thanks \ud83d\udc6f\n. Great work @HeEAaD \n. This is good, @bogren can you add me as a contributor to your Fork, this is going to require a really long  CHANGELOG entry as it's a breaking SemVer major version change, so I want to make it happen with the next one - I don't know for sure when this will get merged - all the code looks \ud83d\udc4d  it's cultural now, not technical \nthanks, also do you want in on the org?\n. I just wrote this Dangerfile\n``` ruby\nSometimes it's a README fix, or something like that - which isn't relevant for\nincluding in a project's CHANGELOG for example\ndeclared_trivial = github.pr_title.include? '#trivial'\nMake it more obvious that a PR is a work in progress and shouldn't be merged yet\nwarn('PR is classed as Work in Progress', sticky: false) if !declared_trivial && github.pr_title.include?('[WIP]')\nWarn when there is a big PR\nwarn('Big PR') if git.lines_of_code > 500\nDon't let testing shortcuts get into master by accident\nmessaging.fail('fdescribe left in tests', sticky: false) if grep -r 'fdescribe ' spec/.length > 1\nmessaging.fail('fit left in tests', sticky: false) if grep -r 'fit ' spec/.length > 1\nUse the rspec failures file from our custom formatter to show failed tests\nif File.exist?('rspec.failures')\n  errors = File.read('rspec.failures')\n  messaging.fail('Specs failed:' + errors, sticky: false) if errors.length\nend\n```\nI'm looking forwards to merging this\n. Alright, I've merged this into #654 - thanks!\n. Yep, looks great - I've never seen a test like that - nice work\n. @bogren this looks great - wanna add a CHANGELOG to credit yourself then we're good to go \ud83d\udc4d \n. This is used in a lot of places, check out the windows CIs, but alas this change does not work on windows, which we need to keep supporting, might need to think of another way of doing it\n. If it comes to it, we can also use system which allows setting env vars, and return the output of that\n. I think we were already throwing it away, so no\n. Great -yeah - this looks \ud83d\udcaf  - thanks @bogren and @JuanitoFatas \ud83d\udc4d \n. I see, yeah, this looks great - give yourself some credit in the CHANGELOG and this is good to go - thanks @phillfarrugia \ud83d\udc6f \ud83d\udc4d \n. Done \ud83d\udc4d - good first step\n. Yeah \ud83d\udc6f - fixed own 3.1.1\n. Yep agreed with @k0nserv - great first Ruby PR\nWould you like to join the org?\n. I'll try and get a minor Danger release out this evening, though my time is relatively short today.\n. Your computer won't be set up in the way that a CI server is set up, Danger looks through the environment variables of the current shell to determine which CI she is running on. I've improved the docs there, and the crash you've experienced was fixed in https://github.com/danger/danger/pull/484 - I'm gonna ship this today, which should fix that problem\n. https://github.com/danger/danger.systems/pull/104 has the changes, it's not been merged yet though, waiting on the 3.1 releases\n. Alright that's everything shipped \ud83d\udc4d \n. I agree with @hanneskaeufler that test was not doing anything, happy to merge on \ud83c\udf4f \n. So far, no, there's discussion around it as a part of #382 - but no-one has started work on it, nor has any consensus really been agreed upon what it all looks like. Still early days for that.\n. @kylejm this might be worth adding to the documentation above the class here - they can get pretty long and that's just fine. They get turned into this guide:  http://danger.systems/guides/getting_started.html#setting-up-danger-to-run-on-your-ci\n. Yeah, I bet it is\n. Closing as a dupe of #480 \n. Looks like a dupe of #314 - think this is Danger somehow pulling in the last merged commit into the git diff, any chance you can leave anything you think might be useful in there?\n. And this - #160\n. Alright - this is now good to ship -  aside from my question about the href for a file\n. OKKKKKKK\nThis is happening \ud83d\udc6f \n. agreed - given it more of a @KrauseFx flair\n. Hrm, I think we should probably do some work in Danger to convert those to be usable file paths of the after in git.modified_files\n. https://github.com/danger/danger/pull/566 should fix this \ud83d\udc4d \n.  I think that makes sense, please do some tests to make sure that doesn't accidentally create a breaking change for most people also :D . This got updated in 5.0.0. Interesting, is this a bug with Drone, e.g. they should probably be providing that ENV var but right now they don't?\n. Seems like the right answer to this, either that or ones that support gitlab can optionally have a mergeRequestID also?. try using a master version of the gitlab gem @thebugcode . You'll need to use a Gemfile to set it up - I don't run the gem, so I can't really offer advice on why it might not work.. We're waiting on the release ( see https://github.com/NARKOZ/gitlab/issues/270  https://github.com/NARKOZ/gitlab/pull/253#issuecomment-287523101 ) but I think Rubygems is like CocoaPods in that you can only depend on a released build. so when 4.0 comes out, I'll update danger-gitlab to ~> 4.0. I've updated danger-gitlab to 4.3.1 ( to coincide with when we introduced these changes ) which relies on gitlab 4.0.0. - thanks @asedge. Interesting, yeah, this should fail in the GitLab provider.\nIt's more complicated in GitHub where it can use the API to fail the build but still allow other test scripts to continue (it would be frustrating to not run the normal CI tests simply because of not including a CHANGELOG )\nI think for GitLab we should fail the process, aye\n. Agree, perhaps danger --fail-on-errors ?\n. ^ This IMO is optimal \n. Sure, that works for me \ud83d\udc4d \n. Hah - thanks! \nI try to keep the CHANGELOG user facing ( I'll update the PR template to mention that ) but I'm happy to have this one in there \ud83d\udc6f \nWould you like to join the org? as a part of Moya Community Continuity - you're welcome to participate in PRs or help out at a level that works for you \n. > When user's home directory is not writable \ud83e\udd14 / not a directory (\ud83d\ude31)\n\n\u2757 will raise an Danger::HomeDirectoryError (BREAKING BEHAVIOUR \ud83d\udeb8).\n\nSeems fine, Danger's nearly always running on CI, ish \n\nShould we fail?\nOr not fail, skip silently?\nShould we only update the latest danger version file in a period of time?\n\nWe should just continue, this feature is definitely not important enough (in the grand scheme of why someone would use Danger ) to warrant breaking someone's build\n\nThe latest danger version file location is okay?\n\n~/.danger_version seems fine to me - yes\n\nThe source file location is okay?\n- lib/danger/clients/rubygems_client.rb\n- lib/danger/services/home_keeper.rb\n\nYep\n\ncross-platform home directory (dig rubygems/rubygems source code, maybe?)\n\nYep\n. Hrm, I think a simpler approach might be better here.\nI think we should probably skip the saving to the home and just always use the API? I doubt we'd be causing enough traffic to be a problem to rubygems. This greatly simplifies the windows support, and the complexity tradeoff for the feature\nWe could change the message to let people know what the latest version is too ?\n. Considering I'm releasing multiple danger versions every week, there's always a new version if you're using a Gemfile.\n. Alright looks good, I'd be alright with removing the assignment in if rubocop if you have strong opinions ( I've wrote that kind of code then sighed and removed it )\nThe exceptions can be easily switched to StandardErrors that that should be good to go IMO\n. Woooooooo\n. Awesome, let's do it - thanks for the contribution!\n. I'm definitely in favour of this - this is awesome.\n\nmay be better not to deprecate import_dangerfile and not add import, because there's also import_plugin. I could make import_dangerfile support both Hash and String\n\nYep, I'm in favour of killing the new import and moving that functionality back into import_dangerfile - deprecating the string support ( support the param, but log that it will be removed in a future version ) \nMainly because I prefer the clarity in the API.  This makes me want the same thing for import_plugin now.\n. Yep - shipping\n\n. Works for me \ud83d\udc4d \n. https://github.com/danger/danger-gitlab-gem\n. Hrm, this is not normally how I do gem versioning - I usually just switch it when it's time for a release but I'm alright for this. Will be likely making a big release over the weekend.\n. Yeah, but I don't know what type of release I want the next one to be. Though I guess you're saying \"just make it anything above x\" which would still give me the space to say, \"eh lets make this a minor instead of a patch\"\n. Nice one\n. Your commits don't seem to run in travis very often, wonder what's up with that?\n. Ah, you use CI skip - but we use travis as a \"must be green\" so the skip means that I have to use admin powers to merge\n. Cool - sure \ud83d\udc4d \n. Thanks @cysp \n. Killing this for now, when this comes up ( Danger 5.0 ) that can be a new PR\n. Gonna call this one a dupe of https://github.com/danger/danger/issues/506 and close it, I was planning on doing this for 4.0\n. depending on what version number the new one is, it might just be fine as is - though I'd prefer to make a new lower bounds for new functionality \ud83d\udc4d . Nope, this issue is where someone would probably post updates - you're welcome to look at it. Looking at their API, I don't think so - https://docs.gitlab.com/ce/api/commits.html#post-comment-to-commit\nIn GitHub you're attaching a comment into the diff, so we have to find it's place in there, in gitlab it looks like it just accepts file and line. \nThe thing we needed for GitHub was to make sure that the comment would be seen because if the comment didn't live in the range of the diff it wouldn't show ( and would need to go in the main message instead ). Agree, this is a great idea\n. Yeah, definitely nah to the wiki, those get out of date so easily  - I think this is fine on just the site - which I've shipped - https://github.com/danger/danger.systems/pull/111 \ud83d\udc4d \n. Awesome, looks good \ud83d\udc4d \n. Looks good to me - thanks\n. Yeah, definitely!\nWanna give this a rebase & merge yourself?\n. 10/10 \ud83d\udc4c \nawesome \n. \ud83d\udc4d looks good to me\n. Thanks @segiddins :D\n. Afraid I'd rather keep people using the CHANGELOG rather than separating that out, I thought those drafts were only available to admins - I'll remove those. - Thanks for letting me know\n. Interesting, yeah, that's a useful one - it'll need careful thinking though, as using it requires github creds on CI\nsh\nmachine api.github.com\n  login defunkt\n  password c0d3b4ssssss!\nmight be able to run that on master with travis set up\n. I left some notes in https://github.com/mattbrictson/chandler/issues/14 on how this could work\n. Handled by #620 \ud83d\udc4d \n. What version of git is running on the machine? I'm not really sure what the error is telling us\n. Had a think about this, CircleCI always uses a shallow clone ( with a depth of 50 ) so I'm pretty sure this is not a shallow clone issue\n. I feel like this got fixed, any chance you can try again on 4.0?\n. Awesome thanks!\n. Thank you @HeEAaD \ud83d\udc4d \n. I'm more hesitant on this, will close it to keep it being open for 90 days. Once we're sure about the redirection from http -> https on the gitlab pages - as we can't automate the deployment of new certs and I'm not going to force myself into doing a rote task that often - see  https://github.com/danger/danger.systems/issues/12#issuecomment-244643577 for more diets\n. It could be worth adding an extra to_s at the start of these functions on the arg passed in so that we don't crash like this unexpectedly?\n. that's just ruby, you're overriding the existing method in that local scope\n. Nice, yeah, that would be your issue - thanks for the docs fix\n. Ace \ud83d\udc4d \n. Interesting idea - I wonder if we should expand this even further - think you can add the before and after contents of the file into that dict? Currently I'm doing this: https://github.com/danger/danger.systems/blob/master/Dangerfile#L8-L11\n. @tikitu - I'm falling somewhat in favour of a more explicit API, a lot of my current (and I'm flip-flopping a lot here) long-term thinking is around having to move to something where we can't pass through \"rich\" objects like a Git::Diff - so having something like this makes me feel better\nWe should get danger-rubocop on here, so that we know when that's what's failing. \n. Other than the rename at the top and a bundle exec rubocop -a this should be good to go \ud83d\udc4d \n. \ud83d\udc4d \n. Thanks @tikitu - would you like to join our org?\n. I think we need to prefix it with env in the method - surprised tests didn't cover this\n. Hrm, I'm not sure this is a good idea - this is basically a C&P of https://github.com/dbgrandi/claide-plugins/blob/claide-plugins/lib/claide/command/plugins/create.rb\nWe should do it properly by making the create command from claide work on both\n. Only the README hasn't been changed, inside it's 100% generic - we've just not taken those changes back to CocoaPods, might never end up doing that - hard to say. \nWRT windows, not really sure about that, if it doesn't have fork we'd have to move to system maybe?\n. Hrm, it is using system - that sucks\n. I've made the changes in claide-plugins for this\n. I've shipped claide-plugins 0.9.2 with the API for this now - https://github.com/dbgrandi/claide-plugins\nWill try and re-create this PR with that now in the next week\n. @dbgrandi ^\n. Awesome, I've taken this and made #608 with a bit more infrastructure \ud83d\udc4d \n. Interesting flow:\n\n. \ud83d\udc4d looks legit\n. Sure, I'm not sure what we'd manage in there yet though \ud83d\udc4d \n. I threw some of the sort of things I'd put in a 'Proposal' issue\n. But I'm not really a Kanban kind of person, best I get is this for my work stuff.\n. Abusing admin powers \ud83d\udc4d \n. Looks like it was never used \ud83d\udc4d \n. \ud83d\udc4d \n. rock\n. > The root cause is that there is no diff (@git.diff is nil), so these methods are failing:\nnice find, that's really interesting!\n. Should be easy to write a test for at least\n. A test case I've been working with:\n``\n        it \"handles moving a file correctly\" do\n          run_in_repo_with_diff do |git|mv file1 file2git add .git checkout -b new-branch-2 --quietgit commit -m \"moved file\"`\n        # now check the changes for the moved file\n        diff = git.diff(\"new-branch\")\n        stats = diff.stats\n        # allow(@repo).to receive(:diff).and_return(diff)\n\n        require 'pry'\n        binding.pry\n\n        expect(@dsl.modified_files).to eq([])\n      end\n    end\n\n```\nThis is tricky, because it is literally git which gives us the \"bad\" details, I wonder if we need to do a pre-parse of the stats dictionary to ensure that all files exist, and if they don't to chuck them in removed files\n\n. oh yes, yeah definitely, this whole section of github.rb is just asking to be vastly simplified + refactored now we've got a bunch of it tested + production'd\n. It needs a rebase anyway \ud83d\udc4d \n. Yep, looks all \ud83d\udc4d \n. @WolfgangD would you like to join the org?\n. nicceee the --quiet is so needed 10/10 \n. Ah great, I'm ok with using my admin powers to merge this, just a conflict on the CHANGELOG \ud83d\udc4d \n. Cool - yep, looks like just danger failing \ud83d\udc4d \n. thiiiisss loooooooksss AWESOME\nI guess that explains why Danger ended up changing to \"Squash and merge\" on GitHub, I wondered if the default changed on GitHub with the new review API\n. I should learn how to use pry-byebug too\n. Yeah, I see \ud83d\udc4d \n. This failure is interesting:\n``\nbundler: failed to load command: danger (/home/travis/build/danger/danger/bundle/ruby/2.0.0/bin/danger)\nRuntimeError: Could not find a Request Source for Danger::Travis\n  /home/travis/build/danger/danger/lib/danger/danger_core/environment_manager.rb:31:ininitialize'\n``\n. Yeah, that does look like it - I wonder if there was some code auto-loading al request sources at the old path?\n. Nicceee\n. Nice one - yeah - this looks like it \ud83d\udc6f \n. \ud83c\udf89 \n. I think this got shipped a week ago, we've had 3.3.1 and 3.3.2 since then\n. I'm still a bit hesitant to do this ( _I_ would have to manually re-create the certs every 90 days, which is too short a timeframe for me to say I will do for as long as Danger exists ) so - once this current cert expires, lets see how the redirect is handled. If it works fine, and https links resolve to http - I'm totally cool with doing this \ud83d\udc4d  - till then, no point keeping a PR open for ~70 days\n. https://letsencrypt.org only does 90 day certs, and there's no API on GitLab to update the keys - so I would need to download and run certbot again, and upload the new key to GitLab every 90 days. \ud83d\udc4d no worries, it's an interesting constraint. This is good to go after a quick rebase\n. Alright - lets do this 3.3.1\n. \ud83d\udc6f \n. Yeah, that makes sense \ud83d\udc4d \n. I never even noticed this issue - great work all\n. OK, this just needs to rebase now \ud83d\udc4d then you are free to merge\n. we do \ud83d\udc4d \n. No worries \ud83d\udc4d \n. hrmmm, it should delete my message, I feel, I'm surprised by this\n. well, I'll fix it on the next PR\n. Shipped\n. Awesome\n. I simplified the failing test ( and merged in #582 so I had a fixed gemfile forbundle exec guard` )\n. problem was that multiple tests used the same class for testing plugins, ut the plugin could realistically only be registered once because of that\n. Taking this, I want the Gemfile changes to do other work\n. It wouldn't fail here if they were missing\n. allllright, this should be good for review now. Danger is out all day, so I get some other Danger time.\n. All feedback agreed with and fixed\n. works for me\n. Just here - this is perfect, website gets generated from this - thanks @daniel-beard \n. Would you like to join the org with such amazing documentation breaking skills?\n. This is covered in the FAQ about build matrices \ud83d\udc4d \n. Fixes https://github.com/danger/danger/issues/508\n. interesting, I won't be at a computer for a few hours, so can't be of too much help\n.  looks like some simple rubocop fixes, lets see if.I can just fix that one up\n. yeah, run it a hard one, at least this PR makes it easier \ud83d\udc83 \n. IMO - this is good to go now @JuanitoFatas  - you're welcome to merge tomorrow and you can work on refactoring tests etc in a fresh PR - this one got looooonnnngggggggg\n. Hrm, I've never really considered that environment manager part of the public API - but I guess as it's being used in all the testing stuff, it should probably follow semver\n. Aye, will think I'll need to get around to supporting multiple inits - which is why I've left this open \ud83d\udc4d \n. Yeah, I think that makes sense \ud83d\udc4d \n. Nah, I've thought about this more, and I'm against this, I think it complicates matters more for people writing plugins, a key part of their testing infrastructure is now hidden in another gem. \nAs a part of building the tempting system I also documented every file that's included, now \"this file\" isn't included, and instead is hidden away. \n. Might make sense to add a factory method on the Dangerfile class then for creating a version that is just for tests, I was just continuing the pattern we using in cocoapods\n. Nice one! Want to be in on the Danger org with such a massive amazing PR?\n. ( and useful - thanks )\n. Makes sense to me \ud83d\udc4d \n. Yeah - this looks awesome, I was actual wondering if you were interested in trying to tackle the refactor from danger local to danger local and danger pr? e.g starting https://github.com/danger/danger/pull/518 from scratch?\n. Yep - looks like it\n. Awesome \ud83d\udc4d \n. I'm pumped about this matcher - slick work\n. I feel guilty about all these squash and merges - I feel like you don't get as much credit in the commits\n. Nice - this is a lovely feature \ud83d\udc4d \n. This may be the first time I've released since I made some updates to the Dangerfile, which should mean we don't see \"no unit tests\" from her\n. aww\n. Looks like it comes and goes, I re-triggered the build - seems odd to me\n. Ah, well, then, I think it's fine to remove the library and the danger plugin for now\n. Ouch! - I wonder if we could do something around that\n. Maybe there's another way to exit, other than exit? :D\n. \ud83d\udc4d \n. @felipesabino want to be in the org? \n. invited, and merging\n. No problem, you're welcome to merge on green. I added #trivial because it makes danger not complain about no changelog changes, though - you have a changelog change - so it was useless, but now you know.\n. NP, you're not publicly an org member, so you don't show as one to the bot - which has no access, I wonder if I can add the bot but give no repos - I'll try\n. Nah, can't give the bot access to the org, without giving access to all the repos without having to do a bunch of GitHub faffing\n. I had a thought about \n/home/ubuntu/danger/vendor/bundle/ruby/2.1.0/gems/rspec_junit_formatter-0.2.3/lib/rspec_junit_formatter.rb:29:in `block in xml_dump_examples': undefined method `xml_dump_' for #<RSpecJUnitFormatter:0x0000000112f858> (NoMethodError)\nit occurs when an unnamed test is found - can you think of any tests we may have with no names?\ndef xml_dump_examples\n    examples.each do |example|\n      send :\"xml_dump_#{result_of(example)}\", example\n    end\n  end\noh interesting, it's status is unknown - seems to come from this notification.example.execution_result.status\n. > a default name:\nof course they do, RSpec is so comprehensive \u2600\ufe0f \n. \ud83d\udc4c \n. Oh yeah... hah \ud83d\udc6f \n. Meanwhile I was digging through all sorts of danger internals\n. Yep - cool, this looks good to me. I normally copy and paste an existing test file, so theR Spec.describe does not worry me\n. Great work here, that's a great blog post, thanks @ivoanjo \ud83c\udf89 \n. Great \ud83d\udc4d \n. I gave this a run though - looks good \ud83d\udc4d \n. Weird, Danger should be fetching commits when GitHub is saying use a commit which doesn't exist in the current git repo, could that be failing somehow? \n. o.0 - hrm, interesting, if you are ( or anyone else who is) in  this position again, can you please try see if -git -no-pager show <hash> and see if that returns an empty value\nWe just switched from that to rev-parse\n. > So now I'm wondering; why does danger need the latest commit instead of just using the current commit?\nThis is a complex problem with keeping github metadata and user metadata state in order, in the end we opted to just always rely on github metadata here - as we can have some guarantees there across all CI implmentations\n. that is probably for the better, GitHub hides comments on older commits right?\n. That's based on the PR diff that GitHub offers via their API, example if that's saying that the change is related to a specific commit that's all we can work with I'm afraid\n. Nice one, there's some tests that verify the commands called - they should be trivial to update \ud83d\udc4d \n. And would you like to join the org @fwal ?\n. \ud83d\udc4d \n. lets get this shipped\n. @JuanitoFatas ^ no errors, the Dangerfile is working\n. Heh, Circle - works for me \ud83d\udc4d \n. Fixed!\n. well, not fixed, but I rebuilt - same same\n. > Danger tries to find the MR using the MR API endpoint and the CI_BUILD_REF_NAME, if one does not exist, Danger exits.\nThis is what we do for Circle CI - (via it's API). It's totally doable \ud83d\udc4d ( just occasionally will skip because you've not hit the open PR/MR button before CI started doing Danger )\n. Now's style\n. Cool - yeah, this looks good to me \ud83d\udc4d \n. and not even a breaking change ;)\n. https://github.com/danger/danger/pull/483 has been waiting on those danger local breaking changes :D\n. WRT: remote finding, you could switch to ignore all of that and expect people to put a full PR URL in there? This makes it really easy to test fork PRs?\n. That looks awesome \ud83d\udc4d \n. Should fix https://github.com/danger/danger/issues/445 https://github.com/danger/danger/issues/289 https://github.com/danger/danger/issues/370 https://github.com/danger/danger/issues/276\n. Yep, given it a third run through! Let's do it - @JuanitoFatas want to do a version bump + release?\n. You tell @JuanitoFatas @DangerCI  \ud83d\udc4d \n. Rockin'\n. That does sound like a useful option \ud83d\udc4d  - not sure what the arg could be maybe --no-edit?\n. --replace-comment?\n. Hrm, if this will result in a new comment every time, then we should re-use existing infrastructure - we already support a --danger_id=<id>                    The identifier of this Danger instance option, so this should be --unique-danger-id which would create a timestamp based id, which means it will create a new comment each time.\nI'm not sure what that's about piv199 - however, if you wanted to, you could do this without writing any code too:\nbundle exec danger --danger_id=\"$BUILD_NUMBER\"\n. nice one - thanks @hanneskaeufler  \ud83d\udc4d \n. Chandler is what turns the CHANGELOG into GitHub Release Notes \ud83d\udc4d \n. I do, but then I have to expose my ( or another ) github access token in my ENV, this just automates that away for us all\n. Cool, update looks good to me\n. Haha - all the space savings :P\n. Yep! Let's do it\n. OK\n. Lets see if Chandler does it's stuff\n. I've thrown in my fork of Junit rspec, it should not crash and give some error messaging https://github.com/sj26/rspec_junit_formatter/compare/master...orta:errors?expand=1\n. Yep, I disabled it so that it wasn't default - I wants you to have commits :P\n. Check out the end of the build results for circle, something really odd there - at least it's still greening \n. Yeah, I wonder if the deploy scripts run on a different machine, they do say they run on 1.9.x \n. Fine with me, it's non-critical infrastructure \ud83d\udc4d \n. Not sure this is going to work, https://docs.travis-ci.com/user/deployment/script - think it needs to be a script one in order to execute arbitrary scripts: https://github.com/artsy/emission/blob/master/.travis.yml#L20\n. \ud83d\udc4d \n. works for me\n. \ud83d\udc4d \n. Yep - this makes a lot of sense to me, I literally did this while working on https://github.com/danger/danger/pull/625\n. Hah - that avatar\n. \ud83d\udc4d and @JuanitoFatas I've given you root org access to @danger now too - you've been doing an awesome job\n. Sent!\n. You could post directly on that line instead? \n. That also leaves danger to handle it between github/gitlab etc etc\n. \ud83c\udd97 \n. Sent! (Was free)\n. Interesting! Looks like the failure on the windows side - I wonder if it's a EOL encoding issues?\nFailures:\n  1) Danger::GitRepo with files handles modified as expected\n     Failure/Error: expect(@dm.git.modified_files).to eq([\"file\"])\n       expected: [\"file\"]\n            got: [\"file\", nil]\n       (compared using ==)\n       Diff:\n       @@ -1,2 +1,2 @@\n       -[\"file\"]\n       +[\"file\", nil]\n     # ./spec/lib/danger/scm_source/git_repo_spec.rb:107:in `block (5 levels) in <top (required)>'\n     # ./spec/lib/danger/scm_source/git_repo_spec.rb:93:in `chdir'\n     # ./spec/lib/danger/scm_source/git_repo_spec.rb:93:in `block (4 levels) in <top (required)>'\n     # ./spec/lib/danger/scm_source/git_repo_spec.rb:92:in `block (3 levels) in <top (required)>'\n. Perhaps the merge_base is coming in as nil there? there's an expectation of commitish of being non-null\n. Could git fetch not be downloading the new commits?\n. maybes there's a --all to fetch?\n. fetch --all looks like it fetches from all remotes ( e.g. origin, upstream etc ) maybe not all branches?\n. We may need to trigger something to make it deep clone?\n. > re: GitHub already provides a diff in the repos\nWith that we can only work with a JSON blob, e.g you can't check commit names and really dig in to the diff programmatically. This is actually a principal difference between Danger-rb and Danger-js, wherein the JS one will only offer an exposed set of funcs/vars based on platform APIs like you mentioned.\n. \ud83d\udc4d \n. \ud83d\udc6f\u200d\u2642\ufe0f \ud83d\udc6f \n. I'm not adverse to it BTW - we have a lot more testing infrastructure in place now, so the transition is possible, think there was problems installing rugged on CIs though as it required native modules\n. I'm experimenting with more emojis \u2620\ufe0f \n. Nice one\n. Yep - cool, looks good to me \ud83d\udc4d \n. \n. Awesome :+1: - you may not need to actually do anything  for GitLab and Bitbucket \n. Yeah - that makes sense\n. Then this looks good to me on green - thanks @fwal \n. Looks right, you want to send us a PR adding that arg? to the gitlab provider?\n. Rockin' we got instructions to get started here\n. Awesomebeans \ud83d\udc4d \n. Want to join the org @nikolaykasyanov ?\n. Hrm, I wonder if this is a limitation on the regex used to pick up the ignore requests: pr_body.chomp.scan(/>\\s*danger\\s*:\\s*ignore\\s*\"(.*)\"/i).flatten\n```\n[2] pry(main)>\n[2] pry(main)> pr_body = 'Danger: Ignore \"TophatModels.v20 changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to generate a sqlite for a model.\"'\n=> \"Danger: Ignore \\\"TophatModels.v20 changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to generate a sqlite for a model.\\\"\"\n[3] pry(main)> pr_body.chomp.scan(/>\\sdanger\\s:\\signore\\s\"(.*)\"/i).flatten\n```\n. Oh wait, I missed the \">\"\n```\n[6] pry(main)> pr_body = '> Danger: Ignore \"TophatModels.v20 changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to generate a sqlite for a model.\"'\n=> \"> Danger: Ignore \\\"TophatModels.v20 changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to generate a sqlite for a model.\\\"\"\n[7] pry(main)> pr_body.chomp.scan(/>\\sdanger\\s:\\signore\\s\"(.*)\"/i).flatten\n=> [\"TophatModels.v20 changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to generate a sqlite for a model.\"]\n```\n. I wonder if there's something to do with the markdown rendering going on?\n. \ud83d\udc4d \n. \ud83d\udc4d \n. alright, that's all the pieces in place\n. Sure, kill it\n. \ud83d\udc4d \n. nice one @Antondomashnev - we can invite you to the org any time\n. sent\n. Awesome, \ud83d\udc4d lets get this in\n. Got any clues? \nOff-hand I'm not really sure, the commits Danger is looking for doesn't seem to be there, could it be specific to Bitrise?\n. @darrarski - want to give #662 a shot, this might fix it \ud83d\udc6f\u200d\u2642\ufe0f \n. Would recommend looking at the PR changes in #662 and seeing what could be still causing problems, we don't have a reproducible case to be able to test it on I'm afraid . hah, nice, OK, rebased it and if it greens it can be merged. I think you could use something like \nlet dm = ...\nlet json = JSON.parse File.read(\"fixture/pr/json\")\nallow(dm.pr).to receive(:pr_json).and_return(json)\nbefore your test, all of the PR related work relies on the pr_jsonattribute\n. sorry, I didn't look at the reference, the pr_json is on the github object  - so try that \ud83d\udc4d . hah - awesome @wilrnh - want to see if you can get this in the plugin template somehow? https://github.com/danger/danger-plugin-template/. Ah, maybe just send a PR changing the pr_title to be the same as the rest, looks like an oversight. interesting, was $? removed from Ruby? src\n``\nDanger::DSLError: \n[!] InvalidDangerfilefile: undefined methodsuccess?' for nil:NilClass\n #  from Dangerfile:41\n #  -------------------------------------------\n #  # If it failed, fail the build, and include markdown with the output error.\n\nunless $CHILD_STATUS.success?\n #    # We want to strip ANSI colors for our markdown, and make paths relative\n #  -------------------------------------------\n```. Interesting :D. This looks 10/10 @kivikakk - I think this looks fine, yeah, it's a bit awkward but it's nothing too out of the ordinary ( and it fits the general gist )\n\nLet's get this out into a release, we also invite anyone who has submitted a PR to join the org - you're welcome to join if you'd like?. Rockin', sent. \ud83d\udc4d looks legit to me!. @Buju77  I think this needs a rebase, and if you switch the puts to an abort it should be good to go \ud83d\udc4d . I'm still getting a merge conflict @Buju77 \n\n. Rockin - let's do it\n@Buju77, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you too. You can also not \ud83d\udc83  - it's chill . Cool - @JuanitoFatas wanna give this one more look over - seems good from me. Added! Welcome!. :D. more is more. \ud83d\udc4d  awesomeee. Yeah, you can use github.api to do anything you want, assuming the bot has access to do those things. It's an instance of client from https://github.com/octokit/octokit.rb - you could use this http://www.rubydoc.info/gems/octokit/Octokit/Client/Labels#add_labels_to_an_issue-instance_method if you wanted too swapping Octokit for github.api\n. Hrm, I think inside the Dangerfile you could ask the messaging objects for it's warnings or errors, probably worth doing this then looking around using the repl. Hrm, probably not - no. \nWe expose the github.api object so people can do their own work with the GiHub API, Danger provides a read-only version of all that data in the DSL.. \ud83d\udc4d . This sounds like the token for the github account that should be posting messages is not working, especially if you're not seeing a comments - it's probably this. Looking at the PR, it looks like you never set the Dangerfile to say anything? So you never tested the important part which is communicating on the issue.\nWell, generally speaking setting the status is unimportant ( it only adds an indicator at the bottom of a PR ) which is why we don't fail when that request fails. It's a nicety we do if we can.\nIMO you should remove the bot from your org, and revoke that token, for OSS projects - anyone could use it to make any changes to all projects in that org now. \nTest that Danger works by making her say something \ud83d\udc4d \nPerhaps we should add something in the FAQ about that, something like \n\nWhy am I seeing \"set Status Failed\" on my GitHub OSS project\nBecause we recommend not adding your bot to your OSS project, Danger will not be able to post status updates on a PR. A status update is the green/red/yellow dots at the end of your PR page. This does not affect Danger's ability to comment, and fail your CI build, so you are fine to ignore the message. . rock. I added the note to troubleshooting too, on the website - thanks for bringing it to us so that others will be unblocked. thanks, dupe of https://gitlab.com/danger-systems/danger.systems/issues/108. I'd recommend adding gem \"pry\" into your Gemfile, then add \n\nrequire 'pry'\nbinding.pry\ninto your Dangerfile, then running bundle exec danger local which puts you in a REPL inside the Dangerfile. Then see what it shows in the dangerfiles plugins. This does, from a cursory look, seem correct \n. That's a shame - but at least you got it sorted. Did you look into git.commits? . Awesome - so yes, definitely interested in support!\nI think that Danger::CodeshipDocker makes a lot of sense, I guess the key to supporting two is to distinguish between  them. Would there be a way for Danger to be able to see a difference between Classic and Docker runs? Right now we only look in ENV vars inside CI platforms, but maybe there could be more.\nYou may be able to use the GitHub API to go from Branch -> PR if you're doing same-repo PRs - or you may be able to use the Cadetship API to get more metadata?. Oh yeah, this is a tricky one! \nI'm willing to break on backwards compatibility, I think I'm the only user or if so far.. Ah, now that one is tricky! Wonder if we need to check the git version and do different behavior if needed. It could, yeah, I'm a bit wary on asking people to make git config changes to danger though. Ah - that makes sense, yeah \ud83d\udc4d . I wonder if the appveyor version uses a different build of git? That failure is the same of some of the earlier commits. CI fail is false positive, guess we got really used to same-repo prs \ud83d\udc4d \nThanks @rzane - \nalso, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. Yeah, IMO, this can be an extension of the github object, perhaps something like:\nruby\nchangelogName = false\nunless changelogName \n  changelogFail = github.review.comment(\"changelog.md\", 12, \"Please include your name in the CHANGLOG\")\n  github.review.submit(\"reject\", \"test\", [changelogFail])\nend\nor something like\n```ruby\ngithub.review.start()\nunless changelogName\n  github.review.comment(\"changelog.md\", 12, \"Please include your name in the CHANGLOG\")\nend \ngithub.review.submit()\n```\nWhereby you declare the start and you keep adding comments until you fail. Then it posts the usual Danger comment as it's comment body. . Would also be nice to be able to specifically see if there are reviewers ( once that API is out ) for a PR . \ud83d\udc4d . Ideally WRT the param order  it should follow the same syntax as the rest of the messaging:\n```\nPrint markdown to below the table\nmarkdown (message: String, file=nil: String, line=nil: String)\nPrint out a generate message on the PR\nmessage (message: String, sticky=true: Boolean, file=nil: String, line=nil: String)\nSpecifies a problem, but not critical\nwarn (message: String, sticky=true: Boolean, file=nil: String, line=nil: String)\nDeclares a CI blocking error\nfail (message: String, sticky=true: Boolean, file=nil: String, line=nil: String)\n```\nBut yeah, I think this makes sense!\n. yeah, that makes sense \ud83d\udc4d . Hrm, this is interesting.\nThis is the section of code that is not doing what we expect, the only place I can imagine it failing is if the result of env[\"DANGER_GITHUB_TOKEN\"] is empty. might be worth a go on 4.2.2 which came out about an hour ago, there were a bunch of danger pr changes. Ah, interesting, so maybe there's work that can be done to the PR command to make it support GH enterprise better?. \ud83d\udc4d Cool, want to give it a shot? ( I don't have a github enterprise account, so I can't actually test it outside of tests ). Nope - not received any PRs on this I think, you're welcome to take a look at it.. Awesome! thanks . Argh, yeah, we have this in all of our iOS apps - colored is used by CocoaPods/Fastlane too, and I don't think it'll ever get removed from CocoaPods (which we depend on a gem from) so it'll never be removed from Danger.\nThe solution is this: https://github.com/artsy/eigen/blob/master/dependencyci.yml\nAfraid I'm closing as won't fix :-/. Yeah, I'm into that. Done: https://gitlab.com/danger-systems/danger.systems/commit/a997db49f8f699caff48e6ab385db3f574eedbfc. Looking good - https://gitlab.com/danger-systems/danger.systems/builds/7989489\nThanks for doing the leg work here!\n. @dbgrandi feel like doing some ruby again? ^. This looks \ud83d\udc4d to me, the circle red can be fixed by #694 so I don't mind ignoring that, but would like a changelog entry. you're welcome to merge if it greens after that. \ud83d\udcaf . \ud83d\udc4d . Have I already invited you to the org as a part of Moya Community Continuity?. Rock - done, welcome \ud83c\udf61 . Awesome, yeah, seems totally \ud83d\udc4d . Nah, you just want to copy one of these: https://github.com/danger/danger/tree/master/lib/danger/ci_source\nAnd the same for it's tests, and change the ENV vars etc. Think that should be it  \ud83d\udc4d . You'll need to make sure the ENV VARs are available, you may need to request that from Buddy Build, Danger won't be able to figure out where to look for the code without them.\nOnce those are set up, you can verify it by using a Gemfile on a buddy build project to refer to your fork of Danger in your project. \ud83d\udc4d \n. Great!. This was added in #761 \ud83d\udc4d . Hi, I don't think we should take you through step by step on how to create an account on GitHub/GitLab or BitBucket - that is generally pretty obvious and when we do it, it will be out of date very quickly. \nI also don't want to be updating these guides whenever one of these providers update their login screens. \nDo you feel like \n\nThis is a regular GitHub account\n\nDidn't give across the idea that it was a non-org account? There are not GitHub bot accounts, only organizations and users.. There is no such thing as a bot account, you're creating an account to use as the bot, it is the individual account - this is terminology internal to that document that is consistently used. I don't think this need more improvement unless we can find specific instances of where this can be misleading, closing for now.. This looks \ud83d\udc4d to me . I thought we handled this ( https://github.com/danger/danger/blob/master/spec/lib/danger/helpers/comments_helper_spec.rb#L394 )\nI do like the idea of a gist though, that'd be better than the current implementation \ud83d\udc4d . \ud83d\udcaf \nAwesome. > The overall design approach\nThis feels \ud83d\udc4d to me\n\nDo we need the summary message in review? My intention to create it was to write something if the PR is well done and danger approves it without any comment.\n\nI think approval without comment is perfectly fine IMO, if this does't feel right, we can change that at a later date. Note you should check if that's possible before making the assumption it is possible.\n\nDo you think it could be used without inline comments as a first step or you prefer the feature with inline comments?\n\nFine by me. Yeah, if a review can be posted with 0 comments, I think it's worth adding instead of the redundant one there. Yeah, like this one ^. > Do you have any idea why it could happen?\nI've always wondered if Rubocop actively ignores the fact that you're using bundler with it. Alright - this looks good to me, lets get this shipped.. Awesome - shipped as 4.1.0. It runs our CI on windows, it's been having issues on all my OSS - might be capacity issues. Maybe we need a timestamp on the creation of a violation?. Hrm, there's potential that the output for the script generating these results could be passing the messages through in a different order ( as they may take different amounts of time? ). True, they were not. I'm alright with this. OK, let's do this, originally I was calling Danger danger everywhere, but it looks like I didn't do that on all the webkite stuff - so this makes it consistent \ud83d\udc4d . Sorry for the delay :D. Yeah, let's do it.. I wonder if this is the same as https://github.com/danger/danger/issues/660 - any chance you can try that?. Yep, you can pass in a base, and head to danger via the CLI ( check with --help for syntax I have the JS version installed globally ATM, so hard to check ). That does sound like it, not really sure what a good answer is outside of that?\nDepending on how set up you are in the Ruby version, you can use the JS version which cannot exhibit this problem ( it only uses the GH API to get this kind of metadata ). This seems odd, are you sure it was not a plugin failing the build? \nThe code around the error message is pretty simple, and I can't think of a place where we'd mix warnings and errors?. I got some time, I can make a release, let's give it a go. Ah, nice one - want to send a PR?. \ud83d\udc4d . Cool, makes sense to me :+1: . http://danger.systems/guides/faq.html#why-am-i-seeing-quot-set-status-failed-quot-on-my-github-oss-project \ud83d\udc4d . It didn't crash, it looks like it's not set up - I'd recommend running through the getting started guide - http://danger.systems/guides/getting_started.html\nRead this error message:\n```\nFor your GitHub repo, you need to expose: DANGER_GITHUB_API_TOKEN\nYou may also need: DANGER_GITHUB_HOST, DANGER_GITHUB_API_BASE_URL\nFound these keys in your ENV: MANPATH, NVM_IOJS_ORG_VERSION_LISTING, rvm_bin_path, HOSTNAME, HAS_JOSH_K_SEAL_OF_APPROVAL, GEM_HOME, TERM, SHELL, IRBRC, TEST_SUITE, TRAVIS_COMMIT, NVM_PATH, TRAVIS_OS_NAME, CASHER_DIR, OLDPWD, MY_RUBY_HOME, rvm_autoupdate_flag, USER, NVM_DIR, system_type, TRAVIS_LANGUAGE, rvm_path, TRAVIS, TRAVIS_REPO_SLUG, HAS_ANTARES_THREE_LITTLE_FRONZIES_BADGE, TRAVIS_COMMIT_MESSAGE, TRAVIS_PULL_REQUEST, PAGER, RACK_ENV, rvm_prefix, PATH, TRAVIS_PULL_REQUEST_SHA, TRAVIS_RUBY_VERSION, NVM_NODEJS_ORG_MIRROR, PWD, CONTINUOUS_INTEGRATION, JAVA_HOME, LANG, MERB_ENV, _system_arch, _system_version, TRAVIS_SUDO, TRAVIS_TAG, TRAVIS_ALLOW_FAILURE, rvm_version, TRAVIS_JOB_NUMBER, TRAVIS_EVENT_TYPE, SHLVL, PS4, HOME, BUNDLE_GEMFILE, GOROOT, RAILS_ENV, CI, TRAVIS_BUILD_ID, TRAVIS_PULL_REQUEST_SLUG, COMPOSER_NO_INTERACTION, GEM_PATH, TRAVIS_SECURE_ENV_VARS, DEBIAN_FRONTEND, NVM_BIN, NVM_IOJS_ORG_MIRROR, GIT_ASKPASS, TRAVIS_BRANCH, TRAVIS_COMMIT_RANGE, JRUBY_OPTS, TRAVIS_PULL_REQUEST_BRANCH, TRAVIS_JOB_ID, RUBY_VERSION, container, _system_name, TRAVIS_BUILD_DIR, TRAVIS_BUILD_NUMBER, rvm_silence_path_mismatch_check_flag, , BUNDLER_ORIG_PATH, BUNDLER_ORIG_GEM_PATH, BUNDLE_BIN_PATH, BUNDLER_VERSION, RUBYOPT, RUBYLIB, BUNDLER_ORIG_MANPATH.\n```. Looks like you missed a bit in the second part of the setup: \n\nIf you use secure environment vars, then those only appear on different branch PRs instead of cross fork. As the getting started guide says, if the bot has no access to anything, then there is nothing to lose. You're welcome to keep it as secured, but doing so will only allowed same branch PRs to work.. yes, assuming you have no added the bot as admins to any public repos. Yeah, tests are solid - looks good. \ud83d\udce6 . also, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. I wonder if danger local is working with bit bucket?. Yeah - it does look like the command danger local only supports GitHub - local.rb \nI'd definitely accept PRs making it run against any of the other sources (same as with danger pr). ~Ish - if this represents \"I want to run danger local or danger pr against bitbucketthen not really. It's an action item for someone to be able to do it :). Nope, don't think so.danger prordanger localyes, but not the command you run on CIdanger.danger prthe command only supports working with GitHub - you'll have to skip that step. Nothing, looks ready, it should be fine to run viadangeron your CI as a part of the CI process -danger pris a command for testing the Dangerfile on your computer instead. I feel like I've repeated this point,danger` is the command which runs on your CI - it supports bitbucket, using the ENV vars you set up.\ndanger pr is a separate command, which you use on your computer to test a dangerfile, it does not support bitbucket. \n. See the first line of the error:\n\nJSON::ParserError: 765: unexpected token at 'Invalid request from host 125.19.27.315: Note that Bitbucket does not support Git's legacy HTTP transport protocol.'. Maybe you could send a PR making a warning for people with ENV Vars like that, so others don't get confused in the future?. I'm still not entirely convinced that these tests make sense, at least every time I've tried doing them, they've turned out brittle and we've removed them at a later date.\n\nIMO, best move would be to refactor as much of the danger local code into another class, and test that class - with the local command only really setting up the params. That's what we did with danger run (the default) and using the EnvironmentManager . \u2764\ufe0f . This is good to go when you're happy. Ah yeah, this makes sense - sorry been flying back to the UK - all good, looks like a solid change \ud83d\udc4d . Gonna ship this. might lock it at a previous version :D. Ah shame, this would have fixed #738 . Yeah, this is why we've been recommending people use danger pr which is a lot more polished. You're welcome to take a look at fixing some of these issues, but TBH I'd expect danger local to end up having a different job soon enough https://github.com/danger/danger/issues/368. Or to even make --use-merged-pr stop and say \"you should use danger pr\" or something. Hrm, that might have been on the JS side, I should update this side - want to take a look at making it say danger pr instead of local in the init command?. Oh yeah this is great - I think all these fails are legitimate, I wonder why - master seems fine\nanyone got any ideas?. Perfect, I've rebased this with all the changes - if this greens it's good to go. also,  @leonhartX I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. Perfect - awesome, thanks!. Awesome, this looks good to me!. @johnlinvc  I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. Cool, this looks good to me \ud83d\udc4d . They are for when you want to associate a message to a specific file/line, and then Danger will comment inside the diff instead of in a comment on the PR. Those file/lines have to be inside the diff though, or it will fall back to the main comment. CHANGLOG note. Hrm, there is an example on that section, but a bit more docs can't hurt \ud83d\udc4d  - will be shipped in the next danger release.. I think the API specifically does not allow this, which is why we have to do such a weird dance around putting it in the main message . oh, I see, interesting. \nI can see a case when you still have a lot of ignored warnings that could be outside of that range. Sure, I think that makes sense as an option on messaging, perhaps messaging.dismiss_out_of_range_violations = true ? yeah, it's verbose, but it makes it very obvious. This commit  reference 2a98ef46 would have come from the GitHub API as being either the base or the head sha for your PR. Danger would have looked for these inside the local git repo, and try to update if she can't find one. Closing due to inactivity.. \ud83d\udc4d . \ud83d\udc4d . Agreed!. wait, didn't we do this already? https://github.com/danger/danger/pull/738. I was waiting on #747 to make a release, this should already be fixed :D. Yeah, interesting, I wonder if we need to be stricter on the gem dep. as I just got \n\non #750 . Wanna try changing the Gemfile  to point to 3.7.0 instead of master?. Rock \ud83d\udc4d . I've asked for a release, and will update the danger-gitlab gem to 4.4.0 or whatever once it's released \ud83d\udc4d . Thanks!. him, off-hand no, but I'm on my honeymoon and don't have time to do any real investigations. \ud83d\udc4d . You need to provide a GitHub API token somehow to Danger. ENV vars are the only real option. The guide talks about the trade-offs. \nPeril doesn't have this issue, but isn't ready for usage from people not willing to be involved in the codebase.. As the docs say, it's so that PRs from external forks work. So you can make same repo PRs and Danger will be able to see the ENV var, but not for forks.. Cool, looks \ud83d\udc4d  to me. ah, this makes sense. The text cap for an issue happens in here for a table: https://github.com/danger/danger/blob/master/lib/danger/helpers/find_max_num_violations.rb\nBut I think for this, you'll need to cap the entire comment - which is generated here - perhaps reduce the max_num_violations to 55_000 and cap the template completely at 65k?. I guess the problem is twofold from my perspective, \n\n1: you don't want to have to chop the table mid-way through something resulting in malford html/commonmark\n2: there is a  max char limit on a github comment\n\nI think we currently do 1, but we don't do 2 and that's really where the problem lays. So that is a good point, maybe a better way of thinking about it is how many comments does this take? And instead of truncating content, we move them across multiple comments. We do keep track of markdowns as an array of \"markdowns\" which is displayed, and can be moved between different comments.. It leaves for the question of \"my one markdown is longer than a GH comment\" but most cases it'll be better, I imagine, also anything that long should probably be moving into the file: line: api ideally.. Great - thanks~. bah, on a mobile so can't merge, will do so when I get the chance. Maybe that's a bug? I don't work on any private repos, so it's possible that it's something I've missed. Docs on access rights are in the getting started guide \ud83d\udc4d . If Danger cannot find the start and the beginning of the PR in your commit history, she'll fill it out by fetching the rest.. I think it's just a fetch, a tag is basically a single reference to a SHA, it probably just comes along for the ride.. PRs are welcome \ud83d\udc4d . Nah no need for tests, it's existence is enough \ud83d\udc4d . Shipped in https://github.com/danger/danger/pull/762. Hrm, I wonder if this is due to \n\nYou will also want to ensure that ghprbPullId is added into the environment with the Pull Request id so that Danger can use your Bitbucket Server\u2019s API. As of right now, only Jenkins is supported for Bitbucket Server, we\u2019re open to improvements there, for sure.\n\nLooks like it currently only supports Jenkins, I bet you could fix this though. It currently only looks for ghprbPullId, but you could make it use PULL_REQUEST_ID instead ( judging on this: https://github.com/danger/danger/pull/555/files#diff-7425abf529f6e3186c448c53d09cc771R10 ). Or you could try moving that ENV var in the CI script, trying something like ghprbPullId=${PULL_REQUEST_ID} bundle exec danger at a guess. danger pr only works on github I think. This is a \ud83d\udc4d idea IMO, the implementation could get really gnarly with the sticky option I imagine ( Danger has to pre-parse the table to figure out existing issues in order to know whether they used to exist ) but its not impossible.\nMight happen in the JS world sooner, as there's already ideas around similar issues and no sticky option.. Interesting! \nCan you try update bundler ( gem install bundler ) and see if that fixes it? I just tested on my machine with the same instructions and it installed ( Ruby: ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin16.0] bundler: Bundler version 1.13.2). Yeah I feel like your Ruby install is borked, I'd recommend installing with a ruby version manager - either rvm/rbenv will do you fine.. Thanks a lot for doing this @sleekybadger - it will definitely help people getting started and evolving their Dangerfiles. \ud83d\udc4d \nShipped in 5.2.0. Does 4.3.1?. There were changes around this in 4.3.2 - CHANGELOG\nMight be worth seeing if they affected you.. Sounds like this is a dupe of https://github.com/danger/danger/issues/768 then. ah yeah, https://github.com/danger/danger/issues/660. I wonder if different versions of git have different behaviour here, can you leave some breadcrumbs in #660 so that you or others can debug \ud83d\udc4d . Changes due to #660 were the only thing that shipped in 4.3.1. Yep, that would make sure that the commits Danger is looking for would need to be re-downloaded. I'd recommend trying danger pr https://github.com/zyedidia/micro/pull/607 to get the behaviour you're after \ud83d\udc4d \nI wonder if we should add a notice in local that pr is probably going to work better for them.. Nah it's basically danger local with less magic \ud83d\udc4d . I wanted danger local to basically do something else eventually, #382 but I decided to make DangerJS + Peril instead\nOtherwise that would have made sense yeah. Ah good catch, I don't have an enterprise account - so these things sometimes slip by\nI think respecting DANGER_GITHUB_HOST is probably the way most people would expect it to work - try give that a shot \ud83d\udc4d . Hey @m1guelpf - this is cool and a great way to attack some of the social problems with orphoned project.\nWe ended up building a tool for doing this after a PR has been merged Moya/Aeryn which I really do need to set up at some time :D. Of course \ud83d\udc4d . argh - rubocop updates. Ah - nice one @hotbott - thanks!. Shipped to Rubygems\n\n. Ah, that worked? Awesome. Let's ship it.. This sounds like a good idea, I wonder if we can wrap the parts of commenting on an issue with our own error handler that provides more info.. That does sound good - I think in Danger we just use puts ( or maybe Cork ) - that is fine. Yeah, this seems like a good idea to me @litmon \ud83d\udc4d . We moved CocoaPods' entire dep stack off colored to colored2, so CLAide should be fine - cork will probably need the changes and then just changing it in danger too. Probably just need to make a cork release. @dantoml - it looks like Cork is in rainforest, so if you see any issues on the next CocoaPods deploy for Cork, can you let me know?. Colored is now dropped from the dependency tree. Do a bundle update cork and it should remove it.. Awesome \u2764\ufe0f . Awesome - thanks @fmartingr - looks like we're gonna be doing two releases in one day. also, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. This looks like a dupe of https://github.com/danger/danger/issues/763\nI'd recommend adding some logs to danger and verifying what's going on around these validators - the areas of the code base are well unit tested, but maybe there's somewhere where they slip between the gaps at integration. Hah - Danger is not happy with you, I'm fine with those errors - thanks!. Sure, I'd be happy to have this in \ud83d\udc4d . This should be fixed by 5.0.2. This looks great, \ud83d\udc4d - to add a test to this, add some space here\nThen add something like this:\nit \"handles http hosts\" do\n        env = stub_env\n        env[\"DANGER_BITBUCKETSERVER_HOST\"] = \"http://my_url...\"\n        api = described_class.new(\"danger\", \"danger\", 1, env)\n       expect(api.pr_api_endpoint).to.equal(\"http://my_url/things/pull-requests/1\")\n   end. And that fail is legit - your changes would make changes to that test \ud83d\udc4d . You still have two failing tests:\n\nI only offered pseudo-code, so it'll need tweaking to be correct. Awesome, this looks good. I'll ship it \ud83d\udc4d . Alright - this has gone off in 5.0.1 - thanks @RishabhTayal, this was a great PR \nalso, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs and help out at a level that works for you.. \ud83d\udc4d . nice catch on the filename too \ud83d\udc4d . Danger'll raise an issue due to the missing CHANGELOG - other than that, looks good, I'll ship a 5.0.2 from this. I've merged masted on this branch @RishabhTayal . This will still need a CHANGELOG entry, then we're good to go. <3. \ud83d\udc4d rock. This looks good - can you please add a CHANGELOG, and I'll get this and #787 into a 5.0.2 - thanks!. Thank. you for the succinct and tested PR \ud83d\udc6f\u200d\u2642\ufe0f - makes it easy to work with. Shipped in 5.0.2. Thanks, I've submitted a PR. \ud83d\udc4d . This is shipped now. This looks cool, I'm also slightly worried about the lack of backwards compatibility - but I guess if that is the current territory, that's what it is \ud83d\udc4d . No worries, when it breaks - someone'll make an issue and I'll ask them to fix it :D. @k0nserv - does this look fine to you?. And @connorshea - these api route changes feel right to you?\ndiff\n-        url = \"https://gitlab.com/api/v3/projects/#{slug}/merge_request/#{merge_request_id}\"\n+        url = \"https://gitlab.com/api/v3/projects/#{slug}/merge_requests/#{merge_request_id}\". Your Dangerfile would have something like:\nhas_jira = github.pr_body.include(\"jira\")\nThen you can fail/warn/message based on has_jira.. Ah, yeah, I've been doing too much JavaScript. Ah yeah, I was meant to merge this once it turned green - thanks for this. \ud83d\udc4d . That kind of documentation should be on the website, do you feel that it's\nnot covered well there?\nI did wonder about showing random oss dangerfiles on it now that there's\n800 of them\nOn Apr 27, 2017 19:13, \"Rishabh Tayal\" notifications@github.com wrote:\n\nReport\nI know there are some example Dangerfile here https://danger.systems,\nbut I think it would be nice to have more examples showing some specific\nrules like the ones which are show cased in the keynote presentation\nhttps://github.com/danger/design/blob/master/keynote/cocoaheads-danger-15.key\n.\nThis will be a nice way to show other users what they can do with danger\nand how they can do it.\nWilling to help with this if you think we should do this.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/801, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAC_jrPR7bXrb1FpS0AXfloz_FGPf15_ks5r0My8gaJpZM4NKg4s\n.\n. Those are plugins, the examples for them are inside the docs for those plugins - Danger provides the ability to make those work but we can't make examples for everything because there are an infinite amount of possible rules.. I think it makes sense to add a git.renamed_files DSL,something that would look like [{ :before => \"/a/b\", :after => \"/a/c\"}]. modified_files cannot really provide enough useful metadata from its current setup.. Thanks! Shipped in 5.2.1. Nope, you need a server component for that - Danger just runs your CI, so you can re-run your CI \ud83d\udc4d \n\nOtherwise, you can look at Peril which does this for JS: https://github.com/danger/peril. I'd look into how it works for GitHub, then see how much of it can be re-used for BitBucket.. This is a good start, I'd look into taking the comment generation work from the github client and turning it into a generic one (there are a lot of places where this stuff can get complex, so re-use existing code) . I don't think Danger supports the commit status API for anything other than GitHub - probably just needs a single API call at the right place though \ud83d\udc4d . This has been idle for 2 month @RishabhTayal do you still have time to take a look at this? I'd rather not leave it as a hung PR as it means someone else might not take a stab at it. No worries, never feel guilty for not contributing to open source \ud83d\udc4d . Danger pr doesn't actually post comments - it's for running your local Dangerfile against a PR and shows the output in your terminal. You want danger or danger run for commenting on a PR.. Or does it just not work without those?. You should be using danger or danger run for that. \nAdding the ability to run danger from CI via danger pr will make it more confusing to understand what commands to use. Can you explain why it's easier to use Danger PR?. Yeah, this does sound more like your Jenkins setup needs the env vars I think. The check looks like this..  \ud83d\udc4d . This is where it can be tricky - different versions of git may give different results :-/ . \ud83c\udf4f . don't have time to review tonight, but can look tomorrow ( someone else is welcome to take a stab instead of me though ). Awesome! Looks good (the fail is just a rubocop issue!). Amazing \ud83d\udc4d . Hrm, I think this can only really be done by working against the raw diff and counting hunks, but skipping ones from those folders. \nI think you can do this with the diff object that the git plugin has, but it'll need to be exposed, which I think is pretty reasonable (it's expose it in the DSL for JS). Yep \ud83d\udc4d . Sorry - was preparing to get married when you sent this PR, so I completely missed it :D. OK, I've re-run the build. \ud83d\udc4d \nCan you please change the appveyor.yml to look like this:\n```yml\ninstall:\n  - set PATH=C:\\Ruby22\\bin;%PATH%\n  - bundle install\nbuild: off\ntest_script:\n  # Tests use real git commands\n  - git config --global user.email \"danger@example.com\"\n  - git config --global user.name \"Danger McShane\"\n  - bundle exec rake specs\n```. It may be the wrong path, but there's an awful lot of error messages right next to the failing tests ;). Perfect - thanks, it's a setup we have on all other CI providers but not this one \ud83d\udc4d . @sleekybadger we have a rarely used slack, if you want a more direct way to grab anyones attention you're welcome to join - just let me know the email to invite. It runs on CIs, and the CIs have ENV vars that correlate to the PRs.. Cool! You'll need to add a new ci_source - That should say how to detect it's on assembla, what determines a PR on it, whether it supports github/gitlab/bitbucket and some metadata about the PR.\nThe buildkite one is a good reference: https://github.com/danger/danger/blob/master/lib/danger/ci_source/buildkite.rb. Your PR should look like https://github.com/danger/danger/commit/6dc77a8545a0f3436a9d3f9f44bb49c5b6010b33. Ah, OK, my mistake - then you're going to want to look at https://github.com/danger/danger/pull/481\nThis is the basics required to get Danger to talk back to a request_source - I'd recommend checking out how bitbucket_server and bitbucket_cloud work as they're the simplest implementations \ud83d\udc4d . You need to upload the images somewhere, we use second_curtain then search through the build logs for it's output in our Dangerfile.. Closing as this isn't really actionable from our side, it should be a plugin.. That makes sense, yep - want to take a look into it?. \ud83d\udc4d . Amaziinnnng - great work. Nice one - you tell Rubocop!. \ud83d\udea2 . You can do this in specific projects pretty easily ( I just did it myself yesterday https://github.com/artsy/emission/pull/558 ) but adding it at a systemic level may be a tad more tricky.\nPerhaps a CLI flag that tells danger to only post in the PR, danger --updatePR which does the same kind of logic I have in that Dangerfile to determine if the PR body needs an update.\nI'd accept that \ud83d\udc4d . Yeah, now that I've had a second chance to think about it, I wonder if it could even be built as a plugin also. That reduces the number of edge cases you that needs to be handled considerably (e.g. inline comments, sticky comments, GH/GL/BB/VCS etc).\nYou could make a plugin which extends the DSL with a function which empties the violation_report object and instead moves all of the results into the PR comment. If the function is called at the end of the Dangerfile, everything should be set up.. If Swiftlint is not set up correctly at Danger-level then I'd expect swiftlint.lint_files to fail and cause an exception as you can't send messages to nil in Ruby. I'd recommend investigating this from the swift format side.. danger pr is not meant for writing on the issue, its a development tool. You should just use danger.\nI wonder if we should add a large warning if ENV[\"CI\"] is set when someone uses danger pr as this is the second time it's come up.. I don't use Jenkins, but I thought it was set up by default for the pull request extension - it looks for these vars: https://github.com/danger/danger/blob/master/lib/danger/ci_source/jenkins.rb#L74. \ud83d\udc4d . I've updated the docs a bit in https://github.com/danger/danger/pull/829. Looks like support was added pretty recently, https://github.com/lostisland/faraday/pull/658 want to look at updating the dependency?. Yeah.- I could imagine that being it. Him, I think that seems like a reasonable tradeoff - TBH, I don't know too much about all the HTTP caching, it came in as a PR \ud83c\udf61 \nI'm happy to have it skipping verification, as it's not really a potential attack vector for anyone.\nWRT the gem, that seems  fine too. Yes, this got shipped - unsure if it's in production yet though. Cool - yeah, this looks good \ud83d\udc4d . Sorry - was a bit AFK - this looks \ud83d\udc4d . Good Q, I assume that @rbsgn was using something like https://github.com/lawliet89/pr_demon or the script at the end of this https://youtrack.jetbrains.com/issue/TW-43759. @atelic is there some way we can grab that ID from inside Danger?. Alright - we've got improved docs in master now, so this can be closed - thanks. Is this duplicated in the case of it being shown twice on 1 danger run, or it being duplicated per danger-run?. I've moved that code into a PR to test CI @litmon - can you please explain to me your choices about the blob_regexp? . Thanks -  Got this green, I'll give this some time in master, then it should be good to go!. Fixes #837 . It's possible that the git commits are based on a previous version of the MR from when it the process started, Danger  uses the API to figure out what the commits were and then builds the commit history form those. I think so, it does look like it uses the API to pull out the head commit . Interesting, it is possible that there's a singular MR API request which has the head and base shas in it, instead of having to loop through all the commits?. This looks good to me \ud83d\udc4d . Perfect. Let's get this shipped.. Thank you for the well tested and easy to understand PR \ud83d\udc4d . Looks like an annoying rubocop issue I'm afraid, you should be able to run. bundle exec rubocop -- fix to autocorrect. <3. Weird, could there be some odd invisible characters in there?. Hrm, I think we should add this as an example on the website instead of the current ones. Interesting, I wonder if the DSL could adapt that in a non-Dangerfile source breaking change like\n```ruby\ninstead of just\ngit.modified_files\nyou could also have\ngit.text.modified_files\ngit.binary.modified_files\n```. Ah yeah - great thinking, must have missed that. Thanks!. There's not been any changes to BuddyBuild from Danger's side since it was first added - it's worth asking their support if anything has changed around the environment vars. I think so, normally it's about making sure this function returns true, but it never can. So I assume they're using the Jenkins ENV vars.\nMaybe this could be made to match the JS version - https://github.com/danger/danger-js/blob/master/source/ci_source/providers/BuddyBuild.ts#L11. The .ts is from the JS version, that's a different project. Could it be this? http://danger.systems/guides/faq.html#danger-is-not-posting-to-github-prs-but-everything-looks-fine. amazing - thanks! . Alright-  this looks good, thanks!. I think we'll need to bump the gem spec's version of Octokit too \ud83d\udc4d \nOtherwise looks great. Interesting, it could be - yeah. Probably just CI on an older commit, it's gone now. Think you can remove this rubocop error: lib/danger/commands/init.rb:185:21: C: Prefer using YAML.safe_load over YAML.load. ?. Ah sorry, yeah, I meant to just add an ignore for it :D\nI just merged a PR that did that - want to revert back to 0cb6141 and then merge master, then you are good to go and I'll make a release. Cool - shipped!. Can you disable those checks please? (YAML.load is on Ruby 2.0, which we need to support). Awesome - thanks! Will see if I can get #853 in and ship these two. Thanks - shipped!. Interesting, I think this is because Danger is looking at the local git remotes and it's blank ( so it can't tell if you're on github/gitlab/bitbucket) normally this isn't a problem because it's either a setup from CI via git, or someone's plugin already has a remote. Yep when I added git remote add origin https://github.com/danger/danger.git tests pass. Looks like this is a known bug, gonna fix it: https://github.com/danger/danger-plugin-template/issues/7. Interesting, makes sense to me \ud83d\udc4d . Your changes triggered some style issues:\n``Offenses:\nlib/danger/ci_source/buddybuild.rb:21:81: C: Trailing whitespace detected.\n  # Add theDANGER_BITBUCKETSERVER_USERNAME,DANGER_BITBUCKETSERVER_PASSWORD` \n                                                                                ^\nlib/danger/ci_source/buddybuild.rb:25:1: C: Extra empty line detected at class body beginning.\nlib/danger/ci_source/buddybuild.rb:41:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.\n          Danger::RequestSources::GitHub,\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n```. Sure thing \ud83d\udc4d . Did you discover what was off?\nOn Jul 11, 2017 14:34, \"Christian Mitchell\" notifications@github.com\nwrote:\n\nClosed #858 https://github.com/danger/danger/issues/858.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/858#event-1159360037, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAC_jqSdWx0AUnRMM5QrTB3yTxVIdWeBks5sM8BDgaJpZM4ORQYB\n.\n. Yep - this looks great!. Sure, want to take a look? I'm not sure what's required on our side.\n\nOn Jul 14, 2017 08:47, \"Fedor Lukyanov\" notifications@github.com wrote:\n\nTotally agree\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/860#issuecomment-315351065, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAC_jvVLOZirjJT683UbJ9sLLqcDRg4Aks5sN2NjgaJpZM4OYFvH\n.\n. Cool, looks nice and simple. I'm not sure if we'll get any more people testing. @k0nserv - do you have access to v4?. \ud83d\udc4d I've triggered an update from master, I might do a full semver release on danger-gitlab for this\n\nIf this is green, I'll ship it all. Nice work. Interesting, fails are definitely unrelated.. I wanted to get a release in once #861 is sorted. \ud83d\udc4d . Aye, sorry, I wrote the documentation and I've + @sleekybadger never used Danger on GitLab - with responses like \"does not work\" it's hard to debugwhat the problem is, but I can definitely help update the documentation once you find it \ud83d\udc4d \nCan you show us some stack traces or output from Danger?. I'd recommend making a fork of Danger and adding some debugging logs around the logic for Not a Pull Request - skipping danger as we don't have a gitlab setup,  and so we can't get this set up ourselves to tests. Rockin' thanks. @sarpsolakoglu your error seems related to the danger-xcodebuild plugin\nThe OPs error about lib/git/diff.rb are a bit worrying, it indicates that there's something in your git diff that the git library we rely on cannot parse. I'd look to see if there's anything unique to that PR's diff.. Let's stick with She everywhere. You should submit this to the danger-slather plugin. You might want to try danger pr [pr_url]  instead, as it's less guess-work. Yep: http://danger.systems/guides/troubleshooting.html#i-want-to-work-locally-on-my-dangerfile. WRT the output, that could probably be improved if you want to give it a shot?. Interesting, I wonder if the GitLab request source doesn't support the same options as GitHubs - want to take a look?. It's more that no-one has done the work of making a request source for VSTS - so long as there are API calls that correlate to the functions in here it should be fine to add \ud83d\udc4d . The diff comes from git, so it should be in the normal git.diff section regardless of provider - http://danger.systems/reference.html#git. Weird, I'd recommend adding some logs and debugging - I don't think it should be affected like that.. http://danger.systems/guides/a_quick_ruby_overview.html. diff_for_file takes a string, see the examples on the reference:\n\nWARN WHEN SOMEBODY TRIES TO ADD NOKOGIRI TO THE PROJECT\nruby\ndiff = git.diff_for_file(\"Gemfile.lock\")\nif diff && diff.patch =~ \"nokogiri\"\n  warn 'Please do not add nokogiri to the project. Thank you.'\nend\n\n\nWRT to the debugging, use markdown or puts to output what the git object's properties are.. Yep - this looks \ud83d\udc4d . Lets do it, I'll ship a release. Ah yeah, I'm chill on the Ruby version - I use 2.1.3 because I liked that version of ruby a few years ago, and I enjoy the consistency, which ever version works is fine for me. Thanks @serima - if you're happy, I'm good to merge?. rockin'\nWant to join the org?. Sent \ud83d\udc4d . \ud83d\udc4d Alright - I've sent the invite, and this looks good to me . good debugging \ud83d\udc4d . Seems fine to me, can't imagine it's a massive list to go through \ud83d\udc4d . Dang, interesting, I wonder if there's a flag we can pass to git that says take your time on renames?. I've also sent you an org invite, thanks for the considerable PR \ud83d\udc4d . Rockin' - just an annoying Rubocop error - you can probably do bundle exec rubocop lib/danger/request_sources/vsts.rb -a  to auto-fix it. Rock - this is good to go, it's a bit late for me to ship a release, so I'll give it a \ud83d\udc4d and will handle it in the morning when I merge. Good job \ud83d\udcaf . OK, shipped a release and updated the website too\n\n. Fails are legit. The crashing line (here) seems to be about the repo url, maybe you need to change something around that? \n. Looks like the JSON coming in from BitBucket isn't encoded in a way that Ruby handles by default, it might need converting to UTF8 in the bitbucket request source. Great - yeah, this looks \ud83d\udc4d to me - good to go on \ud83c\udf4f . Yeah, this looks \ud83d\udc4d . Think it already went out \ud83d\udc4d . And the invite has been sent <3 thanks. https://github.com/danger/danger/pull/892 was looking close, so I was planning on waiting - but I shipped a version anyway. Oh dear, sorry about the super late review - for some reason the rubocop version isn't being locked by bundler when it's being called. I'll see if I can make a PR as it blocks all of the open ones. Alright, that's rubocop handled. \nSo yeah, this looks good to me, this must have been quite a bit of thinking - so thanks for that. It's surprising how intricate the ability to just get a reasonable diff is \ud83d\udc4d \nAs this was non-trivial, I've invited you to the org, as a part of Moya Community Continuity - you're welcome to participate in PRs or not, and help out at a level that works for you if you choose.. Yep - sure, I'd agree, happy to accept PRs doing either of these \ud83d\udc4d . Yeah, and the docs improved here: http://danger.systems/guides/troubleshooting.html. I think this needs to be backwards compatible by supporting both gitlabMergeRequestIid and gitlabMergeRequestId (as people can have any version of GitLab)\nUnrelated, ergh, looks like rubocop is not staying with the same version as the last. We need to fix this.. Found it, the default ruby .gitignore ignores the Lockfile. So I've applied semver to rubocop.\n```sh\nfor a library or gem, you might want to ignore these files since the code is\nintended to run in multiple environments; otherwise, check them in:\nGemfile.lock\n``. I'm a little surprised that removingputsfixed it -puts` should work as normal, it's just that we wanted people to know it wouldn't appear in the danger message. Yeah, this is great @makadaw \ud83d\udc4d . Will release when #909 gets wrapped up too. Nice one - I think you're gonna want a test for this ( go check the github/gitlab/bitbucket test files, they'll basically be something you can copy & edit slightly) as you don't want that breaking in the future.\nLooks good to me though, I also don't mind about the commit faffing, I can just use the GitHub button to squash all commits. Congrats @cyupa - you did a great job there. Shipped as 5.5.3. Danger uses those branches to simplify some internal logic around generating the diffs and keeping track of where master vs PR head is. They should be generated at runtime, which is why they're not in documentation anywhere. It seems strange that Danger cannot make those branches, is there some weird permissions thing?. You can \"work around\" this problem by switching to Danger JS which only relies on the GitHub API to generate all this metadata (so no need to have a local git setup with the same infra as the PR ) - I don't think it uses modern APIs in GitHub, so you should be fine with any enterprise build.. Thanks! <3 doc updates. This is just a normal error in your code, it looks like bitbucket_server.pr_json[\"reviewers\"] is null. Perhaps it's not set up correctly, or BB returns different data? Danger is doing the right thing here.. You might want to try adding something like message(bitbucket_server.pr_json) to see what's in there then - maybe we need to update the docs and their API has change, I have any BB repos to keep up to date with. Offhand, no - but the bitbucket danger integration does use pr_json for most of its work - maybe it's the \"quotes\" vs :key syntax?. Fixed by #916 . <3 - thanks!. No \"at least\" - this is a great fix! \ud83c\udf61 . It's not on you to know all of the places that  this needed updating \ud83d\udc4d . You need the repo so danger can get the diff itself. This isn't a problem using Danger JS btw, so if you can't get it working, that's an option. Tough to say TBH - Danger isn't doing anything fancy here ( it's crashing in ordering ) \nWithout an easy repo case so that someone can pull out what warnings, errors, messages and markdowns look like it's not obvious where the error lays. Very cool, Danger also got stronger equality checking in the last version update that might help against some of this. I thought the URL for the PR went at the end of the command?. Perhaps we could add a check for this?. Yep, otherwise it\u2019s real hard to know what\u2019s gone wrong\nSent from my iPhone\n\nOn Dec 12, 2017, at 4:14 AM, Morten B\u00f8gh notifications@github.com wrote:\nDo you suggest an throwing a warning/error?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Sure thing!\n\nI think adding validates_as_ci to the GitLab subclass of the request source which first checks for this, then returns the superclass' implementation should be reasonable way to pull this off\n. This doesn't exist ATM, I'd happily accept PRs adding it. A lot of the discussion around it is in https://github.com/danger/danger/issues/382. Yeah, this looks like you're on the right path - you should probably try PR it. It's probably the double . on the repo name \ud83d\udc4d . I'm no regexpert, but that looks pretty reasonable to me, it'd be pretty easy to write a test against \ud83d\udc4d  . Yes!. Ace \ud83d\udc4d . You could use danger pr and it wouldn't post a comment - that should work fine \ud83d\udc4d\nI'll ship a PR making the CLI more explicit about this\nI'm not actively working on Danger Ruby (but I'm maintaining it), so the local deprecation isn't really going anywhere. . WRT a feature for trying your Dangerfile against all runs, I could see it working.\nMaybe danger trial https://github.com/artsy/emission --count 10 and it would run through the same as bundle exec danger pr https://github.com/artsy/emission/pull/1, bundle exec danger pr https://github.com/artsy/emission/pull/2 etc?. Awesome, looks good \ud83d\udc4d \nNote for me (Peril web-hook:  f6ecd330-e4c7-11e7-973e-d0cea1b9d6d9). Looks like an issue with pulling out your project URL: https://github.com/danger/danger/blob/a528a08e8c4b62b3417572dddecffd7858fd9eb4/lib/danger/ci_source/jenkins.rb#L74\nAnything special there?. That sounds like it then, we could do with some better error handling here. Yeah, I think this should have its own line on https://gitlab.com/danger-systems/danger.systems/blob/master/static/source/ruby/index.html.slim#L94\nI think that the bitbucket support being all red was because it could work but not communicate back to the MR - which I assume this does.. Good luck with those tests ;)\nI'm a bit surprised by the docs issues though - offhand I don't see anything. It looks like I was supposed to echo out what classes have issues, \nhttps://github.com/danger/danger/blob/a528a08e8c4b62b3417572dddecffd7858fd9eb4/Dangerfile\nBut never got around to it, can you try run  https://github.com/danger/danger/blob/a528a08e8c4b62b3417572dddecffd7858fd9eb4/Dangerfile#L60-L61\nin a pry/irb session and see what it core_lint_output is?. Looks like just the Danger fails now. Interesting, there's two failures\n\n\nbundle exec danger plugins lint lib/danger/danger_core/plugins/*.rb --warnings-as-errors is failing - can you run that command and see if it says anything?\n\n\nCan you change the Dangerfile to add \n\n\nhttps://github.com/danger/danger/blob/a528a08e8c4b62b3417572dddecffd7858fd9eb4/Dangerfile#L67\nAfter that fail on line 64? . Hrm, I'm genuinely not sure, and running danger pr works just fine. Maybe it's worth just commenting out these rules in the Dangerfile. Close, there are two failing rules, this one also need to go\nhttps://github.com/danger/danger/blob/64e5778c9b0e7ef3a32c257df42244e3446c5c65/Dangerfile#L41. Let's get this in, I can use a squash commit. \nI don't want to ship this till I have master green but that's not your responsibility. \ud83d\udc4d Thanks sir.. Ah, I can't use a squash commit - can you do it, and then anyone can merge \ud83d\udc4d . nice one - congrats and thanks!. Ace, thanks. I'd make a fork adding those changes you mentioned, then use a gemfile to test it out locally - other than running it, I'm not sure how to confirm if it will all work. Could just be that easy.. Yep, I mean running just danger on the CI, danger pr won't work - no. Hey @neilkimmett - looks like those Danger fails are not your fault ^. This looks good to me, I'll take it on red and have to devote some weekend time to figuring out what's going on with Danger here.. Agree \ud83d\udc4d \nAny chance you can get a test for this?\nCI is going to fail, master is red ATM - I know this. It'll happen automatically now, I need to update Danger's Dangerfile \nThe hash function looks \ud83d\udc4d  to me. travis keeps failing, not our fault.. I'm chill with some small commits  - I'll get this shipped. I'm afraid this one is gonna be on you to debug and fix as I don't have a VSTS setup. Would recommend looking at either supporting some sort of redirect, or figuring out if you have the wrong URL in your ENV vars. Thanks - so the VSTS API is built entirely inside Danger so maybe the answer is to try seeing if you can CURL some of the requests its making manually to verify they do what's expected? . Nice yeah, looks good, wanna try fix it? Wonder where it's picking up the wrong URL - we're not seeing this on regular GH. You could switch to Danger JS which uses the GitHub API instead. Danger Ruby needs all the local git info, and it's a significant amount of work to switch it to the GH API.\nOtherwise there's not really anything you can do.. Hi, what's your plan with this PR?. ace. I think that makes sense as a feature, I'm not going to build it personally, but I have no problems accepting a (well tested) PR for a new CLI flag for putting the report in the main PR body. \ud83d\udc4d . TBH, I wouldn't recommend doing this - this is gonna be real annoying in your emails. Danger editing the same comment means you don't get an email per CI run. If you think this is definitely what you want to do, then I'm fine with this in.\nI'd recommend looking into editing the PR's body though. cool cool, yeah, get it covered so that someone doesn't break it in the future and I'm \ud83d\udc4d . OK, that's shipped. @znacloud  you're welcome to take a look and fix this \ud83d\udc4d . Perfect \ud83d\udc4d . Shipped in 5.5.9. That screenshot is when a failed test which is classed as sticky is then passed on a second CI run.\nIMO a passed state is that it says nothing and doesn't have a comment, which is generally the unix way.  I'm not adverse to adding a success state, but I don't see much value over message or markdown.. Running commands are covered in http://danger.systems/guides/a_quick_ruby_overview.html\nOr you can send a PR to get danger local or danger pr working with things other than GitHub \ud83d\udc4d . Looks legit to me \ud83d\udc4d . take two \ud83c\udf76 . I don't see any now on the home. Ah - nice \ud83d\udc4d . Shipped as 5.5.10. This approach might work, I don't know enough about how deploy keys work though. Danger needs an access token of some sort, but maybe you can sign requests with the key instead.\nFWIW, I'd say moving to Peril would be the safest solution.. I think it's worth looking into adding support yourself for it, I don't know much about it (and just use Travis, personally) but will happily accept and maintain PRs adding it . Maybe there's setting in the markdown parser that's escaping HTML that it could possibly skip?. It might be worth trying to make a test which exhibits the behavior so that you can look through the markdown render pipeline? It could be at Danger level or the HTML/MD rendered by GitHub\n. Might be a good idea to do bundle update byebug maybe they yanked a version. Wanna give that a shot, I'll merge this anyway \ud83d\udc4d . This might be on purpose, if danger can successfully set a error status on the PR it won't fail the build I think. Makes sense, I feel like the --fails-on-errors flag should probably default to true on GitLab then \ud83d\udc4d . I'm really wary of making any changes around this (the code churn is really high on this bit of code because there are so many different CI/git setups) can you make this a CLI option instead?. It's more that I don't entirely have all of danger ruby in my head anymore, and so I value codebase stability around things we can't really write tests for (like this). I re-read the history around these changes, and this is probably fine to go \ud83d\udc4d . Shipped as 5.5.11. This could be that you have a different version of GitLab to what's expected, or that the API has changed?. I assume you'll might need to set these then:\n\nDANGER_GITLAB_HOST to the host that GitLab is running on.\nDANGER_GITLAB_API_BASE_URL to the host that the GitLab API is reachable on.\n\nAnd maybe the defaults in Danger are wrong now?. I agree, this does sound nice \ud83d\udc4d . Heh, yeah, I leave others to make the fixes now as active dev happens on danger-js. It does mean that it can be hard to grok all the changes that could do occur. Though this codebase is well tested.\nPR seems fine to me.. Thanks @einSelbst <3 - I'll keep https://github.com/danger/danger-js/issues/544 as the canonical issue for this. Thanks - Dupe of #972 and https://github.com/danger/danger-js/issues/544 is the canonical issue. Nice - Thanks!. Looks like it errors inside the gitlab gem, any clue if they have the same issues?. This is pretty edge-casey, you're welcome to take a look at it, but I'd rather the warning be there for non-ruby programmers to understand when we've auto-fixed something for them.. A fix for most cases could be to find the line with smart quotes, strip it of whitespace and see if it starts with warn, message, fail etc. Nice spot - thanks!. Shipped as 5.5.12. Sounds like that makes sense to me, happy to handle the PR for it \ud83d\udc4d . Awesome :+. Yeah, let's get this shipped . Yep!. This needs to have a GitHub App for authentication, which will make a lot more time consuming on setup, so whoever makes these will need to take that side of documentation into account.\nI plan to take a look at supporting this for Peril with Danger JS, but whether people running Danger on a CI run will be able to use it is still an unknown to me until I have built it out.. in the Danger JS checks support, I have both the ability to use your own GitHub app, or use one provided by me so setup can be pretty simple by bundling in the support for a specific app.. Looking at those PRs, I doubt it, this feature only exists inside danger-js. I'd recommend logging in as the account and seeing if it's been denied access to GitHub . Nope, from my perspective Danger ruby is done and any new feature work from me is on danger-js - I'm open to others adding these kind of things but here I won't be the one pushing it forwards.. No plans, you're welcome to add it though - a PR adding a new CI platform looks like this: https://github.com/danger/danger/pull/983. Agree \ud83d\udc4d . Re: The red, I download it and ran them all locally and they passed, so I'll just call  this a weird one and merge it on red.\nThanks!. Me pressing a button nowadays, will do so - I need to move that to Peril. Yep, perfect, merge on green\nFor the first 3 years I couldn't use https on danger.systems - now we can \ud83c\udf89 . cool, makes sense - yeah, will get that. Cool, looking at the docs this seems fine to me - any reason for the WIP?. Perfect, thanks!. There were changes in https://github.com/danger/danger/pull/987\nPerhaps those don't work with your setup?. At a guess, circle 1 vs circle 2?. I'm unsure TBH, I've not had any reports on the danger-js side of issues with circle and it didn't have the changes in #987 . I'd mention that to circle CI ^. These fails are pretty legit, just some minor formatting - everything else looks good. Rockin' - looks good. Seems fine to me, I like the idea of allowing multiple markdowns in both, and the alias for backwards compat. Sound good, yeah, I'd accept that PR. In open source projects you've probably not given access to the bot to write to your repo, and thus make those API calls - http://danger.systems/guides/faq.html#why-am-i-seeing-quot-set-status-failed-quot-on-my-github-oss-project\nIt looks like you're using danger-js (this is the wrong repo BTW) but you can try using the GitHub apps / checks  support for it (it's a bit undocumented ATM though). > Ouch, sorry. I thought this is a 'main' repo, and rb and js are just implementations :) Should I move this issue into relevant repo?\nNah, no need, you're dealing with me either way :P\nYeah, I think the repo:status is read only, because we've never had it been able to set the commit status (those things at the bottom) on our OSS projects at Artsy, only on private repos.. Or maybe not? https://github.com/danger/danger-js/issues/614. Yeah, OK, cool - this makes sense, let's turn https://github.com/danger/danger-js/issues/614 into the canonical issue for this, agree something's wrong \ud83d\udc4d . Looks like a simple rubicon issue\nOffenses:\nlib/danger/ci_source/circle_api.rb:20:47: C: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n          host = env[\"DANGER_GITHUB_HOST\"] || 'github.com'\n                                              ^^^^^^^^^^^^\n87 files inspected, 1 offense detected\nother than that, looks good to me, merge on green. this seems to live entirely in the gitlab gem, maybe it needs an update, or that the version of the API you have deployed is giving unexpected results. It's likely this, http://danger.systems/guides/faq.html#danger-is-not-posting-to-github-prs-but-everything-looks-fine. Ah yeah, you're not running the CI command - you're running danger pr which is specifically for running locally for development, not leaving feedback ( see the getting started guide )\nIf you want to fix this, I'm open to you adding messaging on danger pr that it won't leave a message on the PR. \ud83d\udc4d . Yep, please, thanks. Looks like something inside the dangerfile is failing, causing a knock-on effect:\n2.27s$ bundle exec danger --verbose\n/home/travis/.rvm/gems/ruby-2.0.0-p648/bin/bundle:23:in `load': cannot load such file -- /home/travis/.rvm/rubies/ruby-2.0.0-p648/lib/ruby/gems/2.0.0/gems/bundler-1.16.3/exe/bundle (LoadError)\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/bundle:23:in `<main>'\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/ruby_executable_hooks:24:in `eval'\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/ruby_executable_hooks:24:in `<main>'\n/home/travis/.rvm/gems/ruby-2.0.0-p648/bin/bundle:23:in `load': cannot load such file -- /home/travis/.rvm/rubies/ruby-2.0.0-p648/lib/ruby/gems/2.0.0/gems/bundler-1.16.3/exe/bundle (LoadError)\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/bundle:23:in `<main>'\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/ruby_executable_hooks:24:in `eval'\n    from /home/travis/.rvm/gems/ruby-2.0.0-p648/bin/ruby_executable_hooks:24:in `<main>'\nDanger has failed this build. \nFound 1 error.\n. waves hands magic\norrrr.... flakey tests.. OK, wanna try rebase @dstranz . Cool, sure \ud83d\udc4d . This is on purpose, because otherwise you\u2019ll nearly always have to add a guard in the command to detect that.. Maybe the fail on errors might fail in this way, I would accept a pr that did this if not \ud83d\udc4d . Yep \ud83d\udc4d (assuming that config is set). I guess it could? That rubocop rule came up after building danger, I didn't even know that fail was an alias to raise - it just felt like the right word at the time.\nSo long as the fail/raise override only happens during Dangerfile eval, I'm fine to add it as an alias to the existing fail method..  Sure, you\u2019re welcome to take a look at it. I just moved them out of there so it was more obvious what was failing on CI for people -but I'm cool with this. Yeah, I think this is a great call - I think making a different response platform and adding a way to let someone toggle between them is a great idea. Danger Ruby was built entirely with using the local filesystem to figure out all of the diff I'm afraid, which should be coordinated by the API calls for the MR. Maybe we change the gitlab support to use the API instead? It'd probably be quite a drastic refactor though.. Sure thing, you're welcome to take a look at it \ud83d\udc4d . I personally don't plan on building it (I only build things I need, or fix critical bugs for everyone) so there's no timeline unless you want to give it a shot?. \ud83d\udc4d great - yeah, cool, thanks!. ( This doesn't break anything, so I'm shipping it as a patch \ud83d\udcaf ). It is possible that alpine removed json from Ruby, I'd recommend following that error and seeing what's up with your docker image. Something like this.. Perhaps this only works if are using a Gemfile? I'm unsure- you might need to investigate yourself.. Cool, happy to accept a PR for it \ud83d\udc4d . Cool. yeah, this makes sense - thanks!. Ah nice yeah, this is basically what danger local is in Danger JS \ud83d\udc4d \nThe build failed because the internal plugin you made needs documenting as it ends up in the reference page of danger.systems\n\nErrors\n - Examples - DangerfileLocalOnlyPlugin (class):\n   - You should include some examples of common use-cases for your plugin.\n   - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L8#-L27\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_local_only_plugin.rb:10\n. \ud83d\udc4d looking good, once #1020 is ready I'll ship a release . ace, thanks. Great - perfect \ud83d\udc4d . This looks great to me \ud83d\udc4d \n\nLet's get this in and shipped. Did you check the CLI args for danger command? I'm not sure off the top of my head. I'm happy to have the gitlab DSL expanded to include that via something like gitlab.closes_issues (we do that kinda thing for a few properties in the DSL.)\nThat said, it might just be worth using the GitLAb API via the included Gem in your Dangerfile in this case, or do you see it being used in a lot of Dangerfiles for the community?. Yep, looks \ud83d\udc4d . Thanks!. I think you've put this on the wrong repo. Danger doesn't do anything with styling.. Hah, weird, Danger's CI runs on AppVeyor but I never thought to test the full app on there\nCool! \ud83d\udc4d . If you're seeing bad credential errors, it's likely that you've not got your auth token set up right. Maybe if it's a private repo you need to use a different access scope?. Sounds good, there must be other regexes in danger that can be used for a reference and update. Hah, yea, that's an interesting edge case \ud83d\udc4d . Interesting, looks like a pretty weird edge case. You're welcome to take a look at it \ud83d\udc4d . Ah, I think that's a pretty reasonable expectationdefault then - so maybe some docs would need to change? . Yep, this is perfect - merge on green! . Great work @r7kamura  - this looks \ud83d\udcaf . Yep - cool, this works for me, thanks @yoshino . Yeah, this probably is a bug, that's meant to try and provide a summary of information at the end of a run and doing that by safely asking for info it can grab. Maybe it needs to be more conservative?. I think the idea was (and at least within danger's core codebase) that a function without a param should be safe to call, but I dig that for plugins that's very reasonable to not be the case \nMaybe only the \"core\" plugins could be put in there?. Try looking at the tests for inline issues, and see if you can re-create the failing case, from there you can reliably break stuff till it works, at a guess, maybe an encoding issue?\nhttps://github.com/danger/danger/blob/master/spec/lib/danger/request_sources/github_spec.rb#L365-L513. This seems to me to be an issue connecting to GitHub from your Jenkins machine, have you researched the error?. Interesting, yeah, I'm unsure - it seems to be happening when the GitHub API asks for PR metadata via the API, maybe the environment var for redirecting to your GH enterprise is mis-configured?. Maybe the order that a request source is chosen from needs to change? right now it's pretty indeterminate - https://github.com/danger/danger/blob/master/lib/danger/danger_core/environment_manager.rb#L28-L44 \nThen it could take the GitHub one before the GitLab one. Yeah, I think this makes sense \ud83d\udc4d . Ace, thanks!. \ud83d\udc4d . \ud83c\udf89  great, thanks, this looks \ud83d\udc4d . and shipped, good stuff. We've all been there, thanks! Merge on green.. Cool, yeah, sounds like a bug \ud83d\udc4d . Yeah, that could work or could even specify a specific ENV var just for picking up the full project root?. Less is probably better, I agree, maybe we need two regexes, one for http:// and one for git:?. How did I miss this? :D. Cool, yeah, thanks!. Thanks @Kyaak  - I missed this, yep, looks good, will ship a release, please don't bump the versions though. Opps, I Was meant to merge this ages ago. Sorry!\nMerge on green . Bah, bundler 2.x issues - I'll merge for now. Yep, great \ud83d\udc4d . Thanks. Sure, I have no plans to add it, but happy to support it. This looks pretty close, you want to continue?. I gave you an example of how another CI source does it - see codeship.rb \ud83d\udc4d . Fixed in #1086. This is likely either a problem with your setup of that plugin, or you've not configured danger correctly.. These can probably move to danger/danger now that #1063 is in?. GitHub actions supports using the repo by default: https://developer.github.com/actions/creating-workflows/workflow-configuration-options/#using-a-dockerfile-image-in-an-action. ace. It's probably worth running this locally and echoing out what the JSON from bitbucket looks like, because that's what's failing to be parsed. . If you use the ENV VARs in this CI Source: https://github.com/danger/danger/blob/master/lib/danger/ci_source/local_git_repo.rb\nThen it should run locally.\nDanger PR should support bitbucket, so maybe it's the same bug? That's a pretty new feature so might not be battle tested yet. Yep, you're getting invalid JSON from the server, without being able to log it though it's hard to give any useful advice. Congrats!\nSure, works for me - I'd recommend adding a bunch of tests around it so that someone doesn't accidentally break it \ud83d\udc4d . ( Though, as an Android dev (I think..) you might want to consider adding it to danger-js so that you could use Danger Kotlin ). This repo doesn't have a dockerfile, what are you using for the Dockerfile for actions?. Then you'll need to make changes to that Dockerfile - yep, ideally this should probably be living in this repo so that it's centralized and people can work together on things like that.\nBasically you'll need to add a Gemfile to the docker file and any required plugins.. Yeah, that looks perfect. I think we should have that in this repo and treat it as the canonical source - want to do that?. I'm gonna ignore those travis failures, as they're to do with the new bundler release. Shipping! Thanks.. I think you'll have to figure a way to support both I imagine, because people can still use the older GitLab and we shouldn't break backwards compatability.. Yeah, that probably makes sense - I'm not 100% of the context but feels right to me. I think this is deprecated by #1071  -so I'm going to close this PR, thanks for giving it a shot @leslau . Fixed by https://github.com/danger/danger/pull/1073. I think the danger-id flag was built for this problem. Those are the docs for setting it, it's a CLI argument \ud83d\udc4d \nscript: \n    - danger --fail-on-errors=true --dangerfile=Danger/Dangerfile --danger-id=reporter. Thanks \ud83d\udc4d . Thanks!\nI'm a little worried about this not being backwards compatible, given that anyone could be running any version of GitLab  - I'm happy to have these changes, but only if it also supports the old env vars too \ud83d\udc4d . Cool yeah, that makes sense to me - I merged master and got this green too, looks good to me - thanks!. Thanks!. There's not much going on in that part fo the codebase, we just all the GitHub API client set the status\nhttps://github.com/danger/danger/blob/9321658a2ef520bf0f625f342737cdb70c55e2fa/lib/danger/request_sources/github/github.rb#L212-L244\nPerhaps you could fork and echo out the error message, and that could provide a better clue on what's going on?. Oh, interesting, II think the detection of the issue comment URL must somehow be failing - II think the easiest fix is to make the line target_url: details_url be target_url: details_url || \"https://danger.systems/ruby then it won't break, but you can't follow the link back\n. Cool, yeah, sounds like a bug. Cool, yeah, looks \ud83d\udc4d . Looks like it can't access your repo maybe? Perhaps your env vars are set wrong?. I'd make a fork that logs it out (or see if it does that in verbose) and see what's up, I think someone else has had an issue like this before too - so it might be worth diving into the issues too. You'll need to set up the env vars manually, you can find them in the Jenkins code: https://github.com/danger/danger/blob/master/lib/danger/ci_source/jenkins.rb. Maybe through Danger local? I can't remember how danger ruby works anymore.. I'm pretty sure that flag already exists?. Oh, wait, you want it when it's not a PR - yeah, there wouldn't be something for that. \nYeah, I don't see a reason why not. Most CIs do both PR and the merge build by default, so it seems fine as an edge case.. Sure, give it a shot. Yep, looks good. Thanks.\nI'll ship you a release. I don't know much about the GitLab API for this, but in GitHub we have to make sure the inline comments are inside the diff (or they don't get posted) - this PR doesn't do that, do you know if you need to?. Cool, then yeah - this feels about right then \ud83d\udc4d \nI think it's worth adding a test or two about editing existing messages, and deleting them - as historically that's a place that's broken in both ruby and JS. If one danger run adds inline comments, then a subsequent run with different warn/fail/messages:\n\ndeletes inline comments that don't up the 2nd time\nedits inline comments that are on the same file:line: but with different test\n\nA very naive implementation (which would send a lot of notifications) would be to wipe all inline comments at the start of a run, then create all the new ones.. I've merged master, which should hopefully fix CI - if so, this is good to go IMO. Looks like there's a bunch of failing specs, any idea what's up there?. Hrm, looks like an old ruby (which I still want to support alas) issue. 2 and above really, I base that on what Xcode supports :D. Oh interesting, IMO we can make those tests somewhat consistent with the version of the gitlab gem you have. Detect that and skip the tests/. Cool, yeah, looked like a circle bug. This feels \ud83d\udc4d  to me. Maybe the swiftlint plugin isn't declaring these as fails? \nYep, looks like they're warnings. So this won't fail. Closing \ud83d\udc4d . Yep, I agree, I don't think it was probably added right to the GitLab side looking at it's usage in comparison to GitHub. Yep, sure \ud83d\udc4d . Cool - CI was fixed in #1087 . Thanks! \nmerge on green. Seems good to me, have you tried it?. I'm OK skipping tests for that bit. Nope, I just didn't come back once it was green \ud83d\udc4d . Happy to have it prefer that env var, got to be careful for backwards compatibility though \ud83d\udc4d . Yep, great \ud83d\udc4d . CI was fixed in #1087 . I agree \ud83d\udc4d  \nmerge on green. It's a Peril rule: https://github.com/artsy/peril-settings/blob/master/org/mergeOnGreen.ts\nhttp://artsy.github.io/blog/2017/09/04/Introducing-Peril/. Perfect \ud83d\udc4d . /cc @pbendersky. Sounds & feels right to me. Cool, nice idea, happy to take MRs on that: https://gitlab.com/danger-systems/danger.systems/\n. \ud83d\udc4d .  /cc @pbendersky. Thanks. Cool, thanks. Cool, yeah - we'll need it back in the gemspec - but I'm open to what the dependency resolver looks like \ud83d\udc4d . OK, so 2.3.0 has been default on OSX for 2 versions - which makes me feel pretty reasonable about it (yeah, I know it's somewhat arbitrary, but I want to keep Danger somewhat inline with CocoaPods' support systems because then it's less for me to think about)\nSo, I'm fine with having a major semver bump to 6 and taking this, I want to let it sit till the weekend incase I think of something else, but this should be fine \ud83d\udc4d . OK, let's do it - merge on green. Yep, I get what you mean - seems reasonable to me (so long as it's well tested and doesn't seem to break the default user flow ) \nThere might be a way to make the main flow work that way (we already have to have different templates for GitHub vs gitlab for example, and this could consolidate the logic) which uses a default template instead of whatever it does now. I'll be making a release over the weekend probably. Did that commit exist in the repo?. Ah cool, might be worth looking that the buddy build part of the codebase and compare it to the env vars that bb shows and see If they need changing. I'm unsure, I've never used buddy build: maybe there's an API? maybe there's another remote on the repo? Maybe there's another env var?. Yeah, this feels \ud83d\udc4d  to me ( I think this is the pattern we use in Danger JS ). cool, looks like danger-gitlab needs a release. OK, this should be fixed with https://github.com/danger/danger-gitlab-gem/commit/47ed0471737490d2f87d97359de88e728da8ec0b\nwhich allows 6.x. /cc @pbendersky. Thanks!. You happy with it @pbendersky ?. Cool. I'm personally unsure, I'm not an active GitLab user. this is a :+1: idea\n. also a great call\n. I like these ideas! Ideally there should be a way to apply rubydoc so we can generate documentation from this file for the README too\n. It's a toughie, but I think most cases you would end up touching the tests in refactoring.\n. also depends if we make it only accept merges on green\n. I know, gotta fail more :p\n. Yeah, the I is something I struggled with. The \\ns I'm sure of. They make it read much better.\nI felt like it was difficult to give the tool a consistent voice, I wanted it to feel somewhat humane, which is I why I keep asking Danger how she'd react. In the end, I opted for anthropomorphising because I figured it would both be useful here, and probably in the future too.\n. > ```\n\n# for the extra args: http://stackoverflow.com/questions/4632879/erb-template-removing-the-trailing-line\n```\n\nroughly, if you do -%> now, then it will not add a newline straight after it - which was something you were struggling with\n. I wasn't sure if it had finished when a build was completed, figured others would have the same issue\n. I think it's pretty reasonable that people won't be putting that in their comments, but this can change to something harder to reproduce if we want, there's tests for it now.\n. Yeah, eventually, I figure that'd happen when someone builds support for non-github stuff :+1: \n. Yes, and No. :dancer: Heh.\nYes, because it is part of the methods chain that are called. No, because that is not what we are testing here. \nTo use @jonreid here\n\nThe stubbing of issue_comments is a part of the arrangement for the test, not the assertion that :update_commentgets called. That's why once these tests became longer, I started splitting it into three sections.\n. @KrauseFx would it feel reasonable to allow something like this using custom objects that act array-ish but provide dictionary-like DSL attribtues?\nruby\nwarn(\"Please include a CHANGELOG entry\") unless file_modified[\"CHANGELOG.md\"]\n. I'd opt for just dealing with one level of allowing \"docs/thingy\"  - I'd imagine some special casing  around file_modified[\"docs/\"] working if any file inside that dir is changes.\nOther options is to support whatever glob thing CocoaPods supports ( I think it uses Dir.glob under the hood )\n. are it files_modified for the first one, and I'm sold. :+1: \n. I'll do a full pass on error reporting once I've got a working concept :+1: \n. this should be replaced with cork, really\n. It's a start\n\n. all ci_sources use ENV for validation, I think using it here makes sense.\n. tried to make this work like cocoapods, but I'm missing something\n. CocoaPods shows the sub-commands\n```\n~/d/r/l/danger (local_test) \u23db  pod --help\nUsage:\n$ pod COMMAND\n\n  CocoaPods, the Cocoa library package manager.\n\nCommands:\n+ cache          Manipulate the CocoaPods cache\n+ deintegrate    Deintegrate CocoaPods from your project.\n+ dependencies   Show project's dependency graph.\n\n```\nDanger doesn't\n```\n~/d/r/l/danger (local_test) \u23db  bundle exec danger --help\nUsage:\n$ danger COMMAND\n\n  Run the Dangerfile.\n\nOptions:\n--version   Show the version of the tool\n--verbose   Show more debugging information\n\n``\n. every claide object has a verbose\n. Cool, I was wondering if Cork would do this? Can get another external user in this case\n. but yeah, terminal-table looks great\n. rest client is an extra dependency we don't need, faraday is already in the dependency graph (comes from OckoKit), any chance you can use that? https://github.com/lostisland/faraday\n. Ace :+1: \n. IMO, kill this option, only allow setting this form an env var, otherwise you'd be leaking it in the build logs\n. cool, this all looks good!\n. haha, you not a fan of the braceless code?\n. I think those are cases for using them full stop, but that not using an awesome language feature because one day you might add an extra parenthese is a shame. I could imagine this code  using them,declared_trivial = pr_title.include? \"#trivial\" || !has_app_changesbut I don't think that becomes particularly confusing to read because of the lack of(&). ace\n. I was hoping I could chuck in an array as lines and it would wrap, but it looks like it will just try and go on forever. Agree, switching to 80 char preview.\n. No, we tried that first\n. yes :+1: \n. agreed, added a clean up function\n. 0..80 is 81 chars\n. This isn't me changing the name of it - this is me updating the READMe to the current one.\n. is this still required\n. breaking change\n. Blocker; I don't want to see Danger getting filled with Actions the way fastlane does - people should be using gems for this stuff, not relying on us to keep everything working in one repo. Please remove this line.\n. nice idea\n. > We could have one 'gem',danger-useful`\nTerminology wise, I think danger-core would work here. If it's essentials, it should ship with danger. There's no point in over-abstracting too far yet.\nThe reason I call this a blocker is that I can see how much time & effort it takes felix to maintain fastlane, and that's got a big audience. Danger could have an even bigger audience, given it's usefulness in most dev communities. So, we want to make it really, really easy for others to build on top of danger, and not into danger. Specifically, so that we're not spending time on minutae of actions instead of building a better platform.\nIf it makes sense to use something in every danger file ( like protect_files does ) then it should be in with Danger, if we feel like it would be better for all of our provided actions to go into danger-core cool, but it needs to be all or nothing, and do we need that extra level of abstraction yet?\n. I'm cool with making that jump at some point, but I want everything from message to protect_files to be in it, so that the actual \"core/essentials\" api is just another plugin ( that is included by default )\nAgreed re: templates, once I get back from siberia I'll have a think\n. any chance you could undo this change?\n. :+1: \n. This was @Antondomashnev very reasonably running bin/danger init to test - we could look in the command to see if you're actually in the Danger git repo and not make changes to the existing Dangerfile?\n. Our Dangerfile would be overwritten, and that's what'd get parsed - so it wouldn't be able to tell itself to fail :dancers: \nBut I agree on the concept :+1: \n. ^ This is great, aye, something like this is a good call\n. Aye, in this case the check for 404s, everyone would want that\n. hah - that's a nice touch\n. it's more elegant than I would have done, good job\n. already have done in the prepare for 0.7.4 stage\n. named parameters, e.g. e = Danger::EnvironmentManager.new(env, verbose: true) writing (env, true) doesn't really give much context when reading\n. or can you do them without that declaration?\n. Yeah, it was to add support for gh-issues-inspector, it should get removed and that can be a separate pr\n. done\n. added some initial danger test runs as a proof of concept \ud83d\udc4d \n. I will add comment here\n. these rely on certain classes existing, which don't anymore\n. was Skyping Danger ( the person)  distracted\n. erasure is new to me - yes, that'd be awesome!\n. I should read up on this singleton_class  \ud83d\udc4d thanks\n. great thinking 10/10\n. I bet this is why you need a rebase, sigh\n. I think we use this in a few places @justMaku - you're welcome to not and I'll wrap them all up\n. Aside from this, it's good to merge from me \ud83d\udc4d \n. that was the recommendation from gem build :-/ - switched them to > 0\n. \n. Doing an empty path causes CI to take too long and fail\n. All of the JSON parsing code there isn't passing, and every time I've made it pass it loses a lot of readability\n. before https://github.com/danger/danger/blob/bffc246a11dac883d76fc6636319bd6c2acd58a3/lib/danger/plugin_support/plugin_parser.rb#L30\nafter\nhttps://github.com/danger/danger/blob/0988bc7f6230ee280bdbd818780a7187bdbe5104/lib/danger/plugin_support/plugin_parser.rb#L31\n. This isn't a Class object - it's a Documentation object referring to the class\n. :protect_files leaks in from our danger_plugins dir, glad to be rid of it now \ud83d\udc4d \n. yeah, might express the intent better too\n. It's being consistent: https://github.com/ffittschen/danger/blob/39ba22f8ed35e2a6fc527d5d2c371bd4ea7b1258/lib/danger/commands/init.rb#L118\n. IMO, these should move to the gitlab vernacular - mr_title ( documentation around this will be handled fine \ud83d\udc4d )\n. \ud83d\udc4d \n. IMO, I don't think so, for Danger::RequestSources::GitLab there should be, ( you could add method aliases though, so that people can C&P examples that may reference the github names? I'd be on board with that. )\n. This change isn't wanted, you can't copy and paste these examples anymore\n. \ud83d\udc4d  great\n. yeah - that makes more sense - thanks!\n. What is this file for? I've not seen a build.sh in other gem projects?\n. Looks like it - http://ruby-doc.org/stdlib-1.9.2/libdoc/rubygems/rdoc/Gem/Platform.html\n. \ud83d\udc4d \n. Probably worth putting in comments here about how it's used inside danger, otherwise it feels arbitrary\n. @segiddins think some of this ^ might be useful in Cork?\n. Poor old local git repo\n. this is a few releases back ( it's in the changelog for 0.9.0 )\n. Rubocop tells us to be kind_of? - dunno why personally, but it's that for consistency \n. This is a breaking change, and should go in the changelog\n. Fine by me\n. Eh, I take it back, I like that they both go through the same local code path\n. Good move on these two\n. IMO no \ud83d\udc4d \n. we use quotes in eigen - current_branch = env.request_source.pr_json[\"head\"][\"ref\"] - this might not work?\n. looks like it, aye\n. haha - guess the underlying class is agnostic\n. Ah yeah, good thinking\n. In this case I don't want to do that, as those files get used in the parser outside of this scope\n. I'd put it in another tmpdir, they go in a throwaway place, the OS will clean it up /shrug - it'd be little gain for some extra state\n. in the next release, I'm not adding something I don't understand entirely, an hour or two before release.\n. Think this is a good call\n. Cool, yeah, this looks good - can you remove this moment then we're good to go \ud83d\udc4d \n. Yeah - good call, can't hurt \ud83d\udc4d \n. I wonder if this may be more annoying, I think we can live without the Danger advert for inline comments \ud83d\udc4d \n. \ud83d\udc4d good work\n. though the data-meta=\"generated_by_<%= @danger_id %>\" would need to stay somewhow\n. any chance you can turn this into a variable? is_markdown_content = emoji.nil? maybe? wasn't intuitive at first glance\n. i could maybe be something like data? \n. This could be unless URI.parse(pr_urll) and it would better reflect the idea\n. heh - plus, there's a typo in adamant \ud83d\udc4d \n. These validates_as won't be hooked up correctly, they'll need porting to self.validates_as_ci? and self.validates_as_pr?\nThe first one is when you're sure that it's GitLabCI, the second is when you're sure it's actually a PR/MR\n. might be better to go with the super-verbose: validates_as_api_source? - mainly so that this isn't confused with all of the CI validation too\n. This would need the same validates_as_api_source?\n. nice move\n. yeah, it looks like this PR will have to provide all the docs and the replacement - so this will get a real changelog entry\n. \ud83d\udc4d \n. Nitpick: This might be over-testing, you're mostly testing the json parser here, and as the API changes - the expectations in this test will become out of sync with what the stubbed  JSON says are reality\n. It definitely looks cool though\n. This let helper is nice\n. \ud83d\udc4d \n. Ah - yeah, that could make sense\n. Hrm, yeah, now that I think about it, this isn't going o fly, not enough details in the MR json to be able to provide that info\n. Hrm, perhaps perfect is the enemy of done, we can check if it's the same repo and link it using relative urls? Otherwise display something without a link\n. It could for same repo \ud83d\udc4d \n. We recommend in the docs that you just put in the hostname without that, I agree though \ud83d\udc4d \n. Seems \ud83d\udc4d to me\n. No, nothing further than anything inside rubocop.yml - personally, I have no problem with anyone's choices, so long as they're readable and easily understood. \nI'd be hesitant to add anything that cannot be automated, given that I write most tests in the app - and I'm the least likely to conform :P\n. I don't know the terminology (as I've not used BitBucket as a use) but I'm willing to bet that this should probably be bitbucket, e.g. I would expect to write bitbucket.pr_json instead of bitbucket_server.pr_json \n. \ud83d\udc4d \n. Just in case, there are no access tokens in bb server?\n. Would this support both Bitbucket and Bitbucket Server? If so then it probably should be just bitbucket ( for example we don't have different Dangerfile syntax for both GitHub and GitHub Enterprise ( or gitlab.com / self hosted GitLab )\n. If I comment on this, it should not go away, if I recall \n. I was planning on including this at some point anyway\n. If you change this, and the line above to use the bitrise, then the tests should start to work.\nYou're doing great so far \ud83d\udc4d \n. You can make your terminal auto run the tests as you make changes by using bundle exec guard\n. ah yeah, it used to crash, now it doesn't \ud83d\udc6f \n. I would expect this in here, it's the main way in which Danger communicates with BitBucket server? It's the pattern we use for github/gitlab too\n. Ah yeah, I wasn't looking at the full diff, @k0nserv is right, but that's a nitpick, I'm good with this getting merged into another branch so we can do a documentation run \ud83d\udc4d \n. I thought about it, but people see these as un-rendered markdown, so a link doesn't add much here\n. this is nice, as we can add the same for gitlab too\n. well, strictly speaking, this supports gitlab too, so we can add the wording there\n. can you move this up into the master section please ( https://github.com/dblock/danger-changelog/issues/9 ) \n. @HeEAaD can you please confirm what a file path would look like? \nFor example on the bitbucket site it looks like \nhttps://bitbucket.org/atlassian/bitbucket-example-plugin/src/a55cffe7744e8f50abcd2f092243b4f7e1d855b1/README.md?at=master&fileviewer=file-view-default\nGitHub's looks like: https://github.com/danger/danger/blob/199c4b61925685db1e79569a2d34450c73ece089/lib/danger/comment_generators/bitbucket_server.md.erb\n. any chance you can test that please? inline HTML is allowed inside markdown (that's how our tables work for example ) - companies normally whitelist acceptable tags\n. I added this on github as I wasn't sure what it was used for, which moved over to this one too\n. is that synchronous?\n. ah yeah, looks like it, aye, I'd be happy with that instead\n. this was in the wrong folder\n. interesting, in my case https://github.com/danger/danger.systems/pull/102 / https://circleci.com/gh/danger/danger.systems/89 the commit isn't in the list of commits at all\nI don't think it's unreasonable to have the same checks for both from and to, then the merge_base\n. Looks like it \ud83d\udc4d \n. this this might be best on the danger plugin, it'll then get documented in the reference \ud83d\udc4d \n. hah \ud83d\udc6f \n. maybe? maybe github bugs - this did just come out\n. It's CocoaPods' fault - the CHANGELOG there is whitespace EOL dependent and so I try keep some constency\n. Personally I don't care, it's meant to be human readable, happy to have them removed etc\n. I think that's a pretty fair argument against it, so long as they are small and easily understood then they're great tests to me \ud83d\udc4d \n. This makes sense\n. I love how this comment of mine is propagating itself around the system \ud83d\udc6f \n. awww, poor Danger ( whose nickname is dm )\n. nice touch\n. this is a really great idea @thiagofelix \n. me too\n. interesting, so if the lookup fails then it uses the return value from the closure? Smart\n. Yes, the official gem uses old httparty which uses JSON 1.7 ( because it's stored as json in rubygems), which conflicts with something which makes my testing tooling not work - so I made https://github.com/NARKOZ/gitlab/pull/243 and used something which would use the ruby gemspec, and not hit the same problems ) \n. nahhhhhhh - we all can use vscode :P\n. hah, I never thought of doing this\n. nice one\n. ah, nah, this is not an abort, this is an exit(0) - no fail\n. no worries, already shipped a commit\n. very cool\n. ahhh, this is how rspec doubles work\n. This is nice \ud83d\udc4d \n. fail will exit(1) which is considered an error code, exit(0) will be considered a successful exit:\n\nThis is the list of bash status codes. Effectively Danger would fail the build if she was not running on a PR, (as CIs look for status codes != 0 ) but we don't want that, we want it to carry on with the CI process with a message saying \"skipping\"\n. any chance you can move this up to the master section?\n. \ud83d\udc4d  awesome\n. Looks 10/10\n. wasn't being used, and wouldn't work anyway \ud83d\udc4d \n. Been wanting to do https://github.com/danger/danger/issues/90 for half a year, it should be pretty easy for someone to do now\n. elegant\n. this reads much nicer\n. nice work - I've always found testing the commands pretty tricky - think this is a good answer \ud83d\udc4d \n. ~~exists~~ exist\n. This needs to be less technical ideally:\n\nDanger cannot find the commit that exists as a base for merging between #{from} and #{to} - this is likely because of new commits/changes to the git repo since this build was triggered for CI.\n. nice, one line of app code ~30 lines of tests\n. nice one \ud83d\udc4d\n. doh!\n. this is a new trick to me, cool \ud83d\udc4d . Cork is our UI library :)\n\nI'm not sure we've DI'd in a cork to the APIs, I think the UI layer tends to sit behind it. When a GitHub comment fails, we can still continue because we still can use the status API, I'm not sure if this is the same for BitBucket - if the comment is Danger's only way of communicating, I think @JuanitoFatas' abort probably makes the most sense. As it will also make Danger give an error status code.. heh - tofu. ah, yeah, I see, yeah cool \ud83d\udc4d . also a bit inelegant, but we can't call the original block here, I don't feel too bad calling the method after. If I recall - Allow is used to say \"mock theses upcoming functions\" basically, and expect says \"perform upcoming expectations on this object\" . nice one, thanks for the digging . on an PR update? I think that's \ud83d\udc4d . nice one. This will need considerable documentation before we ship ( as this is what an end user would see on the website ) - I'm happy to do this once you're ready though \ud83d\udc4d . > possbile. Sure thing, something like this\n```\n@!group PR Review\n\nIn Beta. Provides access to creating a GitHub Review instead of a typical GitHub comment.\n\nTo use you announce the start of your review, and the end via the start and submit functions,\nfor example:\n\n```\ngithub.review.start\ngithub.review.fail(\"Please add a CHANGELOG entry\") if has_no_changelog\ngithub.review.warn(\"Highway to the Danger Zone\") if pr_includes_word_danger\ngithub.review.message(\"You might want to read #{url}\") if may_require_docs\ngithub.review.submit\n```\n\n@return [GitHubReview]\n``. People don't see the inline documentation for thereview` object, so it needs to be attached to this DSL attribute to end up on the reference - http://danger.systems/reference.html. > @return [GitHubReview] -> @return [GitHubSource::Review] or we can just leave Review.\nIMO @return Review is fine, maybe even @return ReviewDSL as these docs are for end-users who don't care about our internal semantics\n\nShould we mention github.review.markdown(...) ?\n\nYep :D - please make it a real-ish example like the ones above. Yeah, this is  \ud83d\udc4d to me. \ud83d\udc4d . I think this naming makes sense :+1: . Ah yeah, this is  much better :D. Capital \"H\" in GitHub please, for \"Github Misc\"\nNice work on the docs! What about a small evolution: \"Use to ignore inline messages which lay outside a diff's range, thereby not posting them in the main comment.\" instead?. Ingore. Please make this default to false, I would expect that to be the most common experience. I would always want to know all the warnings/errors to force people to actually fix them ;). ah, no that makes sense! Yeah, nah - this is cool to stay. nice move \ud83d\udc4d . \ud83d\udc4d . cool \ud83d\udc4d . From an end-users's perspective this doesn't make too much sense, maybe just go with? \n\ndanger.import_dangerfile(github:)now supports private repositories and GitHub Enterprise - hotbott. I think the gitlab gem was using that route, and as of 4.0.0 it now does the s. That's what I was hoping @connorshea would know :D. I expect people are using both 3.x and 4.x in production ( as we migrated Danger last week) - I found the issue, looks correct https://github.com/NARKOZ/gitlab/issues/229. Any chance we can expand this a bit more: Adds ability to get the whole diff object atgit.diff- this lets you do more fine grained checks on the raw changes.\n\nThen people will know how to use it. Many chance you can move this to the master section above this release please \ud83d\udc4d . Yep - great, \ud83d\udc4d . This should go in the master section, not down on 5.3.0's version. This effectively means: \"Does this CI source support those vendors\" so if BB works with it, then this is \ud83d\udc4d . You're going to want to update these docs too for the website ^. Are you sure you don't want to mention that you need to create a build step etc? Otherwise this is good. This is optional I'm afraid, maybe these could be a second check inside the else at the end?. good touch. > is not secret since it won't vsts does not expose secret variables\nThe grammar here could do with some work. Same here. The behaviour here will delete all existing danger comments then create a new one, which is good enough to get going - but becomes annoying pretty quickly as you get emails for every new commit pushed ( as a new comment is made)\nI'm happy to ship this, but you may want to consider adding support for editing an existing PR comment first. minor typo. same here. Yeah, I likely kept it around for backwards compatibility for myself at some point. Just not recommended, no plans to remove it - when I pitch Danger Ruby is mature and not breaking anymore, I wanna live up to that.. Bitrise?. PR_CHECK_ID might be something you could use an API to work with maybe?. A check is PR related metadata, so you can probably go back from that to the PR: https://developer.github.com/v3/checks/suites/\n. I think so, yep, which means this can only support GitHub . You'd need to do something like this: https://github.com/danger/danger/blob/4133416d52b425fa2b0ba7369f041fe36e7d6356/lib/danger/ci_source/codeship.rb#L29-L33. nice work. \ud83d\udc4d . suggestion\n      \"com.github.actions.description\"=\"Runs danger in a docker container such as GitHub Actions\" \\. I'm not too precious on the order etc, this is totally fine\nLooks like unfortunately this technique doesn't work though: https://stackoverflow.com/questions/39346334/manage-gem-dependencies-based-on-ruby-version\nThere might not even be a way to do this, so maybe we'll need to go to use 2.0 only? Does that mean forcing 2.3.0 only?. ",
    "KrauseFx": "This is already implemented :+1: \n. it shouldn't run and it shouldn't raise?\n. @orta hacking on danger again? :+1: I haven't yet merged to master, all changes are on this branch.\n. Yeah, great work @orta. How about we merge to master and then work with pull requests again, so that we can easily review each others code?\n. @orta I think it's just a caching error of hound, because it's not in the main branch yet.\n. No, in lib/assets\n. Nice :+1: \n. Thanks - will be fastlane soon :+1: \n. I'll close this for now, as I haven't even started with documentation :rocket: \n. @keithpitt I think @houndci is drunk and confused, I'm going to disable it for this repo for now. Thank you for your pull request, reviewing now :+1: \n. Looks great, thank you so much @keithpitt :+1: \n. Perfect, thanks @keithpitt :+1: \n. I'm confused :confused: \n. | \u00a0 | 2 Errors |\n| --- | --- |\n| :no_entry_sign: | Added new third party dependency |\n| :no_entry_sign: | New code blocks introduced |\n| \u00a0 | 3 Warnings |\n| --- | --- |\n| :warning: | Pull Request exceeds maximum number of changed lines |\n| :warning: | Author unknown |\n| :warning: | Some more test values |\nGenerated by danger on 2015-01-04\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 2 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| :no_entry_sign: | Some random warning |\n:white_check_mark: No warnings found\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n.   :white_check_mark: No errors found\n  :white_check_mark: No warnings found\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. Fixed @orta not being @orta apparently\n.   :white_check_mark: No errors found\n:white_check_mark: No warnings found\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n| \u00a0 | 1 Messages |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 1 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n| \u00a0 | 1 Messages |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 2 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| :no_entry_sign: | Unkown author |\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Some random warning |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 2 Errors |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| :no_entry_sign: | Unkown author samritchie |\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Some random warning |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Error |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 2 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n| :warning: | Author @samritchie is not a contributor |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Error |\n| --- | --- |\n| :no_entry_sign: | Orta is not really orta |\n| \u00a0 | 2 Warnings |\n| --- | --- |\n| :warning: | Some random warning |\n| :warning: | Author @samritchie is not a contributor |\n| \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | This pull request adds 0 new lines |\n| :book: | #Sawyer::Resource:0x007f92ccbab4c0 |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n.   :white_check_mark: No errors found\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Author @samritchie is not a contributor |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Tests are updated / added |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n.   :white_check_mark: No errors found\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Author @samritchie is not a contributor |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Tests are updated / added |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n.   :white_check_mark: No errors found\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Author @samritchie is not a contributor |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Tests are updated / added |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. | \u00a0 | 1 Error |\n| --- | --- |\n| :no_entry_sign: | There must be at least one new test or a modified test |\n| :white_check_mark: | No warnings found |\n| --- | --- |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Trusted author @KrauseFx |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. I like the idea of automatically picking the last PR. \n. | :white_check_mark: | No errors found |\n| --- | --- |\n| :white_check_mark: | No warnings found |\n| --- | --- |\n| \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @KrauseFx |\n| :book: | Tests are updated / added |\n\n  Generated by \n    danger\n  on \n  2016-01-04\n\n. :rocket: \n. Very good idea, me like!\n. Done :rocket: \n. | :white_check_mark: | No errors found |\n| --- | --- |\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Tests were not updated |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Trusted author @orta |\n\n  Generated by \n    danger\n  on \n  2016-01-07\n\n. :rocket: \n. | :white_check_mark: | No errors found |\n| --- | --- |\n| \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Tests were not updated |\n\n  Generated by \n    danger\n  on \n  2016-01-07\n\n. Done with https://github.com/fastlane/fastlane_core/pull/72#issuecomment-169938700 :rocket: \n. LGTM, let's resolve the merge conflict and :rocket: \n. This is ready to merge anyway, right?\n. Good question, assuming we have .travis.yml\nscript:\n  - danger\n  - bundle exec fastlane test\nwe'd still want to run the tests, right? How about we have a flag to return an exit code? Or what's the alternative way to configure travis? In any case, the README should explain how to use danger with Travis\n. @orta on the other hand we want to fail the Travis build if the pull request status can't be set because it's a bot account (open source), e.g. https://github.com/fastlane/fastlane_core/pull/72#issuecomment-169938700, right?\n. @orta Easy enough, danger should just fail the build if it can't set the build status, right?\n. And adding a flag something like --return_status to always get a return status\n. Might be useful for some CI systems\n. @orta Any ideas for a good name?\n. Yeah :rocket: \n. Not sure about :no_entry_sign:anger though, should be :no_entry_sign: danger\n. Fixed :+1: \n. That's btw where the text is generated https://github.com/KrauseFx/danger/blob/master/lib/danger/request_sources/github.rb#L87-L95\nruby\n    def generate_github_description(warnings: nil, errors: nil)\n      if errors.count > 0\n        \"danger found errors\"\n      elsif warnings.count > 0\n        \"\u26a0\ufe0f danger found warnings, merge with caution\"\n      else\n        \"danger was successful\"\n      end\n    end\n. I'm okay with changing the text. I like the :warning: emoji, as it shows it's not an error, but also not a real success\n. LGTM :rocket: \n. Looks good. Why is cache not default?\n. Looks good, however the PR is failing https://travis-ci.org/KrauseFx/danger/builds/101124519\n. Maybe need to re-trigger after you force pushed, will try that now\n. Perfect, great PR :rocket: \n. I added one comment about how we can improve the tests\n. Oh, I haven't even thought of that. Editing definitely is possible - not sure how that behaves with the published date then though.\n. Perfect :rocket: \n. Yah, so this keeps the comment in place. Why don't we like to get an email for every commit? How about we only post a comment when it has actually changed since last time?\n. You are so wise @orta. Ready to go from my side. I can do another release once this is merged :+1: \n. Could you clarify what you mean?\n. Looks good to me, however I've been using the GitHub releases up until now. I know you prefer Changelog.md\n. Okay :rocket: \n. Looks good to me, just added one comment\n. Interesting, I like this :+1: \n. Looks good :rocket: \n. Looks good, and tests are passing :rocket: \n. Shipping so fast :heart: \n. Looks good, however HoundCI doesn't seem so happy\n. Great idea!\n. Things like: Hey you have a code style issue, click here to fix it, and danger either commits to your branch with rubocop -a or submits a PR to your branch (depending on the available permission)\n. Looks good :ship: \n. :+1: \n. @orta how is the browser plugin for branch deletion going :stuck_out_tongue_winking_eye: \n. :+1: \n. So sad we don't use danger for danger though\n. I see https://github.com/NARKOZ/gitlab/pull/178 got merged already, could you fix the merge conflicts? :+1: \n. :dancers: \n. :dancer: \n. Oh yeah, @orta goes fast on the fast train :bullettrain_side: \n. This change is also included in https://github.com/danger/danger/pull/76/, closing this for now\n. Ugh, need some more time to finish this up, will try to do that tomorrow :+1: \n. Wait, this is actually ready and passes just fine locally on newer Ruby versions. Will update the syntax error on legacy Ruby\n. Alright, pushed a new commit, when the tests pass, please review and merge if appropriate :rocket: \n. Alright, it failed for another reason now: \nFound 1 error(s) and I don't have write access to the PR set a PR status. if [ -z \"$DANGER_GITHUB_API_TOKEN\" ]; then echo \"skipping fork of danger on CI\"; else bundle exec danger; fi returned exit code 1\n. Working on it now :+1: \n. Not sure if I did the changelog right. Tbh it's very unclear of what to expect for contributers, we should add some more information to the file itself on how to add this :+1: \n. Ugh, what's wrong here\n. Pushed now, sorry\n. @orta your browser plugin doesn't work :wink: \n. Yeah :+1: \n. Updated ticket to use modified_files instead of files_modified\n. Ready to be closed, right? \n. Great work!! :100: \n. Such a beautiful table summary :heart: \n. Thanks, working on a fix :rocket: \n. Waiting for @orta's review https://github.com/danger/danger/pull/97 #ortareviewtimes\n. @orta #ortareviewtimes was 10 hours, faster than \uf8ff\n. Ready for merging whenever you have a chance to review :+1: \n. Moved over to https://github.com/danger/danger/pull/99\n. These close 3 dots look weird. Any reason why we should use them? Just having 3 dots looks better :+1: \n. Ready to merge @orta :rocket: \n. :dancers: \n. Sounds great! :+1: \n. But the body might be a just one very long line, right? \n. I like the :tada: \n. Could we please disable this @DangerCI on the danger repo - really annoying :angry: \n. ``` ruby\n    def run\n      ENV[\"DANGER_USE_LOCAL_GIT\"] = \"YES\"\n  dm = Dangerfile.new\n  dm.env = EnvironmentManager.new(ENV)\n\n  source = dm.env.ci_source\n  unless source.repo_slug\n\n```\nwhere source is nil\n. Ah, that's probably it:\n$ git remote -v\ngrill   https://github.com/fastlane/playground (fetch)\ngrill   https://github.com/fastlane/playground (push)\nThere is no origin, just a grill. I'll update danger to handle that more gracefully :+1: \n. What do you classify as Developer Specific file?\n. Thanks for adding this @jeroenvisser101. GitHub actually looks at how many repos have this project set up before merging: https://github.com/github/linguist/pull/2393#issuecomment-101409465\nSo let's see what GitHub says :+1: \n. Good point, maybe that's causing it\n. Ah, another one: https://github.com/fastlane/fastlane/pull/3700\n. oh yeah :tada: \n. Sorry - currently I didn't plan on implementing this\n. These are some great gifs :+1: \n. Yeah :+1: It's just that I often receive PRs that casually add a dependency to nokogiri :stuck_out_tongue_winking_eye: \n. I don't have Gemfile.lock in version control for my gems \n. I'd prefer to have danger -v :+1: \n. @orta putting metadata is a great idea, but we don't have a unique way to identify each message, except for the string, right? This way we might run into issues when you have the same message multiple times\n. @marcelofabri It doesn't, but it might happen easily. \n. @jeroenvisser101 the crossing off of items? \n. How about just having a third table for resolved issues?\n. :rocket: \n. Build works, however fails because of Circle issues from today, ready to merge @orta?\n. Oh yeah :rocket: \n. Sorry not sure what you mean by that?\n. This PR is ready for review. Circle is failing for a random bundler reason. \nI don't know why Travis fails with \nlib/assets/ActionTemplate.rb:4:28: E: unexpected token tLT\n(Using Ruby 2.0 parser; configure using TargetRubyVersion parameter, under AllCops)\n      class [[CLASS_NAME]] < Plugin\n                           ^\nlib/assets/ActionTemplate.rb:20:1: E: unexpected token kEND\n(Using Ruby 2.0 parser; configure using TargetRubyVersion parameter, under AllCops)\nend\n^^^\n44 files inspected, 2 offenses detected\nRuboCop failed!\nThis file is excluded in .rubocop.yml and works locally. Any ideas?\n. Okay, addressed all the feedback and updated the PR, thanks everyone.\n@orta Do you want danger new_plugin to be changed to danger plugins create? If so, could you point me to the right direction on how to implement this?\n. @dbgrandi @jeroenvisser101 I'd appreciated another review of the changes :+1: \n. @orta I should completely remove the danger new_plugin command? How are people supposed to create new local plugins? This is different from #131 as it's mostly used for local additions to danger\n. @orta just wanted to ask you about the last remaining open point https://github.com/danger/danger/pull/156#issuecomment-204472675\n. Alright, resolved merge conflicts - working on finishing things up now :+1: \n. I pushed a few more commits with more tests and documentation, they should be live soon, just waiting for https://twitter.com/githubstatus/status/717464295454470145.\nReady to merge from my side. Tests are passing :+1: \n. Oh yeah, thanks for merging @orta :+1: \n. @jeroenvisser101 No nokogiri please - @orta, @alloy and @supermarin wouldn't like this dependency :+1: \n. Regarding nokogiri: Mostly because it might cause installation issues on Mac computers. It was the number one installation issue people experienced\n. We've had this issue with fastlane too, but can't remember how we fixed it. Maybe @mfurtak knows?\n. Thanks @mfurtak for fixing the build. @marcelofabri you should be able to merge master into your branch to make the build green :+1: \n. This is perfect @mfurtak :+1: Build is :green_heart: \n. Yeah, let's do it! Could you rebase so that the build is green, then we can merge :+1: \n. @jeroenvisser101 in this case it was just a new project I started working on, where I just haven't created a PR yet, but plan on doing so, since it's open source\n. Waiting for an ok from @orta :+1: \n. Alright, thanks everybody, I'll add some more tests and docs :+1: \n. All green, here we go :rocket: \n. Thanks :+1: \n. Thanks @segiddins :+1: \n. Thanks, release is live :rocket: \n. Ready from my side\n. I guess that's where @czechboy0 is an expert :rocket: \n. This is missing some docs\n. I think we have this code on multiple parts already. Could we move this to the String class similar to what Rails does, and have a danger_pluralize method or similar?\n. Sorry, that's not what I meant. \nI mean something like\nruby\nclass String\n  def danger_plura_le_name(count)\n     self + \"s\" # or whatever here\n  end\nend\n. Perfect, thanks for updating! \ud83d\udc4d \n. Looks great \ud83d\udc4d \n. @jeroenvisser101 I didn't do any rebasing, I did however do a \ngit reset --soft HEAD~3\nand a force push in the past\n. Yah, we definitely need a good error message for this. What's a reliable way to catch this type of error?\n. We should completely rewrite the README anyway I think.\n. \ud83d\ude80 \n. Yeah, this is a great addition :+1:\n. Still have that with the most recent release for fastlane: https://circleci.com/gh/fastlane/fastlane/6135 \ud83d\ude22 . Yeah \ud83d\ude80 \n. > Author @dbgrandi is not a contributor\nSomething we should change: https://github.com/danger/danger/pull/222\n. Great response, I love the sample code + screenshot, this will help people when they start building their first danger plugin\n. OMG YES \ud83d\ude80 \ud83c\udf89 \n. Working on this with https://github.com/danger/danger/pull/325 \ud83d\ude80 \n. Oh yeah :rocket:\n. \ud83d\udc4d \n. Yes, [!] InvalidDangerfilefile: Action 'build_and_upload_to_appetize' not available, runfastlane actionsto get a full list. Updating the Danger gem might fix the issue. was a regression of the latest fastlane release, expect an update soon \ud83d\udc4d \n. @orta I added @neonichu as contributor, not @neonacho though\n. You might want to check out https://github.com/fastlane/fastlane/blob/master/fastlane/lib/fastlane/plugins/plugin_search.rb in combination with https://github.com/fastlane/fastlane/blob/master/fastlane/lib/fastlane/plugins/plugin_fetcher.rb, I built basically the same thing for fastlane \ud83d\udc4d\n. Me being a bot and deleting the branch \ud83d\ude09 \n. \ud83d\udc4d \n. cc @neonichu @orta \ud83d\udc4d \n. Not sure why the build is failing, but I'll update the one comment \ud83d\udc4d \n. Updated the PR \ud83d\ude80 \n. \ud83d\udc4d \n. The reason why we should allow both \" and ' is to make it easier for non-Ruby developers. The difference between those 2 is not clear, and many people don't know that #{...} only works in combination with \", I'd also be in favour of \" for this reason, as there is almost no performance difference between those 2.\n. +1 on the \" always, I should do the same for the fastlane code base\n. Just my 2 cents https://github.com/danger/danger/pull/307#issuecomment-230504503\n. Agreed, this would be really nice, and also something I'd like to implement in fastlane. I briefly talked with @neonichu about implementing this, maybe @neonichu might want to jump in on this? \ud83d\udc4d \n. @orta Yeah, but we're using terminal-table for printing out those big tables, so it will probably have to be a patch for the terminal-table library\n. It works for both local and on the CI, and was tested in action here: https://github.com/Themoji/ios/pull/19\nI\u2019ll do some more testing, and add support for both danger and Danger as repo name (ok?) and add tests before it\u2019s ready to be merged :rocket:\n. Add support for Danger repo https://github.com/danger/danger/pull/325/commits/1f903dbc5fc689716d42e8f7c38c56e3b9260c03\n. @orta @DanToml Maybe to make it a more generic and automatic solution, how about I check if the current run is being made on a repo matching the danger repo of this org? This way it will work just fine for any org \n. @DanToml Yeah, I was thinking of just checking the repo name being equal to danger, and if it is don't import it\n. Alright, this is ready from my side, let me know if I can merge and prepare a release \ud83d\ude80 \n. But it was #trivial\n. This is great, thanks @henriwatson \ud83d\udc4d \n. I'm also curios on how we can make this easy to use from the Dangerfile without adding too much complexity.\n. This will make the READMDE instructions on https://github.com/danger/danger#debugging unnecessary, right? \n. lib/danger/commands/init_helpers/interviewer.rb:75:24: C: Omit parentheses for ternary conditions.\n          the_answer = (i == 0) ? answer.underline : answer\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/danger/commands/init_helpers/interviewer.rb:75:25: C: Use i.zero? instead of i == 0.\n          the_answer = (i == 0) ? answer.underline : answer\n                        ^^^^^^\nlib/danger/danger_core/dangerfile.rb:52:5: C: When using method_missing, define respond_to_missing?.\n    def method_missing(method_sym, *arguments, &_block) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/danger/danger_core/dangerfile.rb:198:17: C: Use (status[:errors] + status[:warnings] + status[:messages] + status[:markdowns]).count.zero? instead of (status[:errors] + status[:warnings] + status[:messages] + status[:markdowns]).count == 0.\n      return if (status[:errors] + status[:warnings] + status[:messages] + status[:markdowns]).count == 0\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/danger/plugin_support/plugin.rb:20:5: C: When using method_missing, define respond_to_missing? and fall back on super.\n    def method_missing(method_sym, *arguments, &block) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/danger/request_source/github.rb:114:19: C: Use errors.count.zero? instead of errors.count == 0.\n        status = (errors.count == 0 ? 'success' : 'failure')\n                  ^^^^^^^^^^^^^^^^^\n70 files inspected, 6 offenses detected\nInteresting that only Travis failed the build.\n. \ud83d\udc4d \n. > yolo\nis not enough of a PR description?\n. 4 yolos is enough though \ud83d\udc4d \n. Yes for emojis, thanks @k0nserv \n. Done! Thanks for the note \ud83d\udc4d \n. @orta What about \ud83d\udc83?\n. Not sold on how to find auto generated messages, but good enough for now\n. Is there any way to add something that is hidden? Maybe an empty image tag?\n. I was thinking about just overwriting puts so that it's basically the same as message. I do this in fastlane already. What do you think @orta\n. Agreed :+1: \n. @orta On the other hand, when refactoring something, we probably don't want it to fail, right? \n. Agreed :+1: \n. putting the && on the same line allows you to remove the \\ AFAIK\n. 1 Errors :cry: \n. :heart: \n. Why did we add this?\n. :heart:\n. Do we want the \"\\n\" here?\n. I?\n. :heart: \n. -?\n. Alright, sounds fair\n. Do you know any better way to test this? I'm not happy with my code here\n. Aww, that's so great, sorry I didn't read the stackoverflow link \n. Should we move the generated_by_danger string to some central space @orta?\n. Shouldn't this be expect as this method must be called?\n. YES! And if it's in a subfolder, do we want file_modified[\"docs/something.md\"] or file_modified[\"docs\"][\"something.md\"]\n. Let's use glob:\n```\nfile_modifieds[\"docs/*/.md\"].count == 4\nfile_modified?[\"docs/**/Changelog.md\"]\n```\nWhat do you think? \n. No new line\n. Should be 2 spaces, right?\n. AFAIK it's possible to set this globally, so we don't have to do this for each request\n. What happens on else?\n. :+1: \n. Yeah, so simple to use and nice looking https://github.com/fastlane/fastlane_core/blob/master/lib/fastlane_core/print_table.rb#L19-L25\n. Ahhhhh, wrong spacing \n. Wow, we're going fast :rocket: \n. Wups, sorry\n. NOOOOO\n. Not really, it gets confusing easily once you add a second parameter and / or an inline if\nruby\nwarn \"hi\", 3 if something 5\n. I think it the long run it's better to just always use ( for method calls\n. Yah, it's too much since we just replace one piece of the string\n. @jeroenvisser101 Great idea, this would be a separate repo in the danger org, maybe\u00a0danger-essentials? \nWe should make it easy for new users to get started with danger fast\n. Alright, so basically we do leave the most important methods in danger, however we remove the comment about submitting PRs when this plugin is useful? \nIf that's ok, I'll update the PR according to all the comments\n. That shouldn't really matter\n. Nice catch :+1: \n. 2 spaces after concieved of.\n. Might make sense to replace http with https here\n. > We should aim to be as explicit as possible in the Danger Plugin contract\n\nWhat are some examples here? \n. 2 spaces after 404\n. What are examples for that? The Jekyll example?\n. agrrement\n. we'e\n. That's super abstract, but probably the only way we can describe it so that it still works in a few years\n. How would you describe it to a friend when meeting them? I'd probably say something like:\nYou can define rules for pull requests, which will add messages and warnings right to GitHub (or any other hosted git service)\n. Temporary code?\n. :+1:\n. \u2764\ufe0f \n. > Are you a consumer? Pick an island\n\nThis is so great cc @neonichu \ud83d\udc4d \n. A lot of Then though\n. Should be closed source, right?\n. Agreed - it's hard coded and not documented yet, since I wasn't sure if that's the right approach\n. So sad though \ud83d\ude22 \n. Good point, I'll update the PR\n. kind_of? and is_a? is the same as far as I know (http://stackoverflow.com/a/3893305/445598)\n. I'm okay with eval, this is not new code, I just refactored it. @orta okay to change to eval?\n. Ahhh, great point! \n. I actually prefer returns to be more explicit, but I'm fine with the change in this case\n. For our use case, wouldn't it be enough to just cache the GitHub JSON response ourself? \n. From this it's not 100% clear on what feature got removed\n. Beautiful \u2764\ufe0f \n. ",
    "dkhamsing": "Do you mean under bin/assets ?\n. ",
    "alloy": ":+1: \n. You must have a good connection to his PR dept.\n. Ace \ud83e\udd18\n. ",
    "keithpitt": "Ah, looks like @houndci isn't happy. I copied an existing CI provider and changed it for Buildkite. Do you want me to go through what hound wants me to change and change it? Also, I noticed the build failed, but I can't seem to figure out why! The specs seem to pass!\n. Heh, yeah, it did go a little drunk :) Thanks so much for merging the PR! :dancers: \n. ",
    "mokagio": ":tada: \n. Great to find this PR! We've been bumping into this error on and off a number of times. We'll run with #662 for a week or so and report \ud83d\udc4d .. @orta @JuanitoFatas @darrarski the @iflix-letsplay iOS team has been rolling with the version from #662 for the past 25 days (see my comment above), and haven't seen the fatal: --unshallow on a complete repository does not make sense ever since. \ud83d\udc4d . Scratch that \ud83d\ude29. My team mate @mattdelves pointed out that he did see an ---unshallow failure, which didn't make sense to me because the version of Danger in #662 does not make an unshallow clone.\nWell... Turns out I don't know how to Ruby Gem, and that to actually fetch the PR branch I had to do this:\ndiff\n-gem 'danger', branch: 'jf/deep-fetch'\n+gem 'danger', git: 'git@github.com:danger/danger.git', branch: 'jf/deep-fetch'\n\ud83e\udd26\u200d\u2642\ufe0f \nBack to square one. We'll report back in a few weeks.. Hi, just an update on this. We've been using the changes in https://github.com/danger/danger/pull/662, for real this time, for the last two months and haven't had any issues and with more team members doing frequent rebases on PR branches.\n\ud83d\ude04 .. ",
    "samritchie": "Wait, is that REALLY orta?\n. Awesome, orta is now orta. The universe breathes a sigh of relief.\n. ",
    "jeroenvisser101": ":+1: \n. As far as I can see, the only thing you need to do is:\n1. Create a new account for the bot to use (with a awesome robot profile picture)\n2. Create a API token with full-access\n3. Add that token to the environment variables \u2013edit: this would be added to the CI's config, right? \u2013 with DANGER_GITHUB_API_TOKEN as the variable name\n4. ...\n5. :moneybag: \nCorrect me if I'm wrong here\n. Ah, alright!\n. I like this! I'd have the keys for the on call symbolized, i.e.:\nruby\non :issue do |issue|\n  # ...\nend\n. Sounds like a plan. I think the setup would be way easier with a heroku button since that'd allow us to explain what to do for the TOKEN in the app.json.\n. > if dependency(changed: \"*/.gemspec\", requires: \"./lib/danger/version.rb\")\n\n\u00a0\u00a0fail \"Change the version, if you're changing the gem spec\" \nend\n\nThat seems to match the style of the rest of the DSL the most\n. - it'd also need to work with danger local, which includes some references to github.com too\n. @dbgrandi can this be closed now that #139 is merged? :)\n. We're getting closer and closer to 1.0.0 :dancer: \n. @orta what is this for actually? I see you guys talking about the size, any particular issue on that?\n. Ah alright, that makes sense, cool! Is it due to the library we use for displaying tables?\n. @orta would it be nice if, along with better messaging, you could specify a remote with say, --remote?\n. If you wouldd clone and fork using hub/hub, you'd have 2 remotes, origin being the original repository and your username being the fork. Not sure which one you would want to use in that case, but I guess origin would do then, right?\n. @orta I can have a look at that tonight\n. More specifically, I think this might be due to .git being in the url\n. I thought it'd be nice, let's wait and see if they accept it :)\n. @KrauseFx hmm, let's keep our fingers crossed and hope for the best!\n. Yep, we'll have to wait for usage to go up and reach into 'the hundreds'. Should we keep this issue open so it's a reminder once usage has gone up?\n. @orta, that's cool, I've got another one coming, writing specs as we speak :)\n. My local test fail:\n```\n  1) Danger::Dangerfile keeps track of the original Dangerfile\n     Failure/Error: expect(dm.defined_in_file).to be file.path\n   expected #<String:70180931302200> => \"/var/folders/8f/wnyyflm90jqdw6nygmv5z4yr0000gn/T/dangefile_tests20160309-28419-1gv8xnp\"\n        got #<String:70180931302880> => \"/var/folders/8f/wnyyflm90jqdw6nygmv5z4yr0000gn/T/dangefile_tests20160309-28419-1gv8xnp\"\n\n   Compared using equal?, which compares object identity,\n   but expected and actual are not the same object. Use\n   `expect(actual).to eq(expected)` if you don't care about\n   object identity in this example.\n # ./spec/dangerfile_spec.rb:17:in `block (2 levels) in <top (required)>'\n\n```\nThis change seems to fix it, but it doesn't occur on circle/travis. Any ideas?\n``` diff\n--- a/spec/dangerfile_spec.rb\n+++ b/spec/dangerfile_spec.rb\n@@ -14,7 +14,7 @@ describe Danger::Dangerfile do\n     file = make_temp_file \"\"\n     dm = Danger::Dangerfile.new\n     dm.parse file.path\n-    expect(dm.defined_in_file).to be file.path\n+    expect(dm.defined_in_file).to eq file.path\n   end\nit 'runs the ruby code inside the Dangerfile' do\n``\n. @orta, you know by any chance why that test is failing with me locally? (checked it, it's also on origin/master, so no specific change in this branch, still very odd)\n. @orta \u2013 I'm using Using ruby 2.3.0\n. It's indeed an issue with 2.3.0 working differently with this. I'll send a PR for that, since the change showed in the diff works on both versions.\n. @orta I just learned thatssh://urls are meant to be read-only. I still think this would be useful since it would still allow to usedanger localon repositories that you just forked.\n. Oops, that's what I meant, I've been mixing them up all the time.git://is read-only, but still reliably get's the repository slug\n. @orta \u2013 I was thinking however, that you could get the slug instead by matching it with a regex like this:%r{github.com/(?.+/.+?)(?:.git)?$}`\nIn which case it would make things a lot easier to match the repo_slug. Also, this would be a good preparation for #108, as we could quite easily do other domains, too.\nhttps://regex101.com/r/bQ0cA6/1\n. I've changed the logic. I might've to mention this change in the changelog as well, since it's quite a big change.\n. @orta done!\n. Nice!\n. Looks good :+1: \n. @marcelofabri what happens when the message to be ignored contains a double quote?\n. > We're screwed right now  \n\nWe could support scaping, but I don't know if it's worth\n\nProbably not, lets see how this works out!\n. LGTM :+1: \n. My pleasure!\n. @marcelofabri @orta \u2013 Could this be seen as a 'security' thing, since you can edit your own PR body, and you could say something like this:\n\nDanger: Ignore \"Author @jeroenvisser101 is not a contributor\"\n\n...and remove it after CI has ran, but before the maintainer sees it?\nThis might be a very edge-case though, and not really a concern anyways.\n. @orta totally, Dangerfile is -I guess- just supposed to point in directions and warn about specific things to make it easier for the reviewer, not to replace it.\n. But no markdown anymore :sob: \n. Would be great if we would be able to use <style>table { width: 100% }</style> within GitHub\n. @orta but then we do the rendering? Right?\n. I wonder if there is a way to trick GitHub in making it 100% width without using HTML, but I guess not\n. I've tried and failed, sadly, this seems the only possible solution!\n. I guess it would need more permissions too, then\n. It might be cool to show in which org-teams the user is, so you could filter on that, say a member of 'Frontend' changing lib/*.rb files, that might trigger a warning.\n. You mean with these 'squad_goals'?\n. That'd be nice. I also imagine people joining different teams based on their interest (maybe not so much with Danger though, but I could see people interested in implementing new APIs and others liking it more to extend the DSL)\n. :+1: \n. @orta \u2013 I was working on some tests, but it's kinda hard to do, since it's a shell command, and does things like puts and exit\n. I guess we could stub/mock 'puts' and 'exit' inside the Command class, so that they not yield anything, but I'm not sure if that'd help much.\n. Hmmm, looks promising, we could do that!\n. Oh that'd be cool! I was thinking about allowing custom templates for the comment, but that could totally be possible with a plugin, too!\n. Plus: you could have plugins for framework specific stuff, such as Rails checking if tests are written when certain files change, or if you ran bundle install after changing your Gemfile.\n. There seems to already be some logic for plugins, but they can now only exist within the danger repository.\n- protected_files.rb\n- def load_plugins\n. So then plugin '...' would register a plugin? And it's DSL would only be available after registering? Or would it auto-register itself if it's present in the Gemfile?\n. We could have just the DSL, and a plugin such as Rails would bind to check_rails! or something?\n. > I think one of the biggest factors towards separating the the plugin from the DSL is consistency between all gems and forwards source-compatibility with new versions.\nI have to agree with that, I think that's a really good reason to go for the plugin function instead. \n. This came up in #130.\n. Interesting, could it be that the range is wrong, and it takes the merge commit into account that's already in master? That last PR could never be 'big'\n. Great! I might be able to take some time to make that work, I think it's fairly trivial :)\n. This seems to be a little harder than I initially thought, since we mix and match local git operations with GitHub API calls. Testing it on a specific repo would require you to have that repository locally, so modified_files is available.\n. @orta I'd like the second the most, but that would also mean you'd have to have a GitHub API token for the danger local command\n. Yeah or using dotenv or something?\n. Oh, yeah, but that would make it Mac specific, having a .env (ignored) and .env.sample (as template) for danger local would allow people from all platforms to work with it\n. It wouldn't be an issue for me, I'm on OS X. It would however be an issue for contributors using Linux/Unix/Windows, wanting to test locally.\nAnother option would be to create a alias locally (alias danger_local='DANGER_GITHUB_TOKEN=\"...\" bundle exec danger local')\n. @orta \u2013 in the last 2 images, the CHANGELOG.md is not a entry, could it be that that hasn't been pushed yet? Or is it really the diff that's not working?\n. Oh that's cool! Any reasons not to use ruby-git?\n. > ...and it works.\nThat seems to be quite important, plus, we can (if needed) execute git commands by just executing shell commands, right?\n. @orta it's not noticing that you added the changelog, is it?\n. @orta shouldn't be the case, since it runs on the last commit and it takes all of them, but it could be, weird. Also really weird that travis isn't failing.\n. @orta can you retrigger the build to see if that fixes it?\n. Thanks, some extra info would make debugging it a lot easier indeed. Right now, I've my fingers crossed for the (extremely slow) CircleCI build :)\n. The diff on Circle is definitely wrong\n. But confirmed: CircleCI takes a different base commit\n. The 'base' commit in Circle is rather the first commit of the branch, not the base, whereas travis actually uses the commit the branch was based upon.\n. Which is odd, considering it both comes from the GH API, right? (here?)\n. Looks good to me! :shipit:?\n. I couldn't find any libs doing this, and also don't have a strong opinion on this, but I was thinking the latter would possibly ease reading a bit:\nruby\nif deleted_files.include?('path/to/file')\n  # ...\nend\nvs.\nruby\nif files_deleted.include?('path/to/file')\n  # ...\nend\n. ~~Actually, seems to be related to using ZSH~~ or maybe not :confused: \n. Working on a fix!\n. :tada: \n. Can this be considered trivial?\n. @orta weird indeed, not sure why...\n. $ bundle exec danger --verbose is actually what we run on Travis, so that's not local, right?\n. @orta but one is init, and the other is not local, so does it internally run 'local'?\n. @orta totally! I'm going to be working on #134 now :)\n. Great! You wanna :shipit:?\n. Thanks!\n. It does break in the middle of the word, but better than nothing, right? :tada: \n. @orta I noticed we use 'key.to_s' everywhere, except for the pr_body, should I rename it now? (see last commit)\n. Should we add documentation on how to do this in the README/wiki and have a tutorial on how to write plugins? Also, should we move protected_files.rb into a plugin too?\n. Alright! I'll check back on this later, let me know if I can help on this/what your plans are :)\n. No? :sob: \n. Ah, yes!\n. Do we want danger --version or more like git's git version?\n. Claide supports aliases for options? Like -v, --version?\n. Same here, triggering invite(undefined, undefined, 'you@host.com') worked for me, but @KrauseFx is working on it\n. Would you consider this as something you could turn on/off? I like the idea, just not sure if it would be something you'd want for every repository.\n. @KrauseFx yeah, I see that sometimes I want to see old comments on diff (the outdated ones), but mostly, I don't need them, which is nice, since they're collapsed. This list will always be visible.\nAlso, having 'This PR has no description'-like messages persistent in a list (even if crossed off) wouldn't make sense. Could you define this per message maybe (warn '...', sticky: true?)\n. Not sure if that'd fix the part where some messages (such as 'PR is marked as WIP') would fix.\nYou can also do it the other way around, warn 'PR is WIP', sticky: false, if we'd chose to have it 'sticky' as default.\n. @KrauseFx LGTM! :rocket: \n. @marcelofabri Hmm, not sure. I think that there's more that will be sticky than that will be non-sticky, so I guess making it opt-out is fine!\n. @marcelofabri It could be a option to have JSON-encoded data inside <table> instead, and parse that. I think that would make this all a lot easier, but it would mean that previously generated comments have to be dealt with, as they do not contain this data.\n. > I'm not sure how we'd do that.\nI'm guessing we could parse the HTML with nokogiri and parse it directly? But I heard that nokogiri isn't a wanted dependency?\n. @marcelofabri Parsing looks good! Let's keep this and do the JSON thing whenever we feel like we need it :)\n. @marcelofabri \u2013 I'd saying remaining\n. We could make a check for zero and say something like ':white_check_mark: All good'\n. > No nokogiri please\n@KrauseFx \u2013 Alright! Any reason though? (I'm about to use it for another project and am wondering if I should consider to avoid it)\n\nI liked that!\n\n@marcelofabri \u2013 Nice!\n. @KrauseFx ah, because of the native extensions?\n. Should we have a look and see why CircleCI is failing (even if unrelated?)\nthis line should make sure the latest version is installed, which it is installing:\n$ gem install bundler\nFetching: bundler-1.11.2.gem (100%)\nSuccessfully installed bundler-1.11.2\n1 gem installed\n. @KrauseFx the local command will never work with repositories that use a rebase workflow, should we have a look at that some time? (Should I create a issue?)\n. Rest looks good! \ud83d\udc4d \n. @KrauseFx Alright, but the issue that rebase workflows don't work persist, although it seems that GitHub can see which commit belonged to which branches, we should be able to retrieve that somewhere. I might have a look tonight and see if that's doable. Nevertheless, it's outside the scope of this PR :)\n. This is cool! \ud83d\udc4d \n. \ud83c\udf89 \n. GitHub does seem to know, because git-sha appears in a PR, but I don't think you can without querying GitHub for this info.\n. Not sure if all our sources (gitlab, bitbucket, github) would have the same data there though\n. That data doesn't seem to be available through the API yet, that might be an issue\n. Nice, should be doable haha :)\n. @Antondomashnev that'd be great!\n. Looks good to me!\n. @MatejBalantic it's only CircleCI that's failing because of the tests, travis works fine, but is complaining because of the missing changelog\n. @MatejBalantic Yeah, cross-environment compatibility is needed to make this mergeable. I may have some time tonight to look into cross OS issues if you need help with that?\n. @MatejBalantic can you send me the code you use to generate those diffs, so I try and see if I can get it to execute in Circle?\n. @MatejBalantic if I log git_file passed to the extract_new_file method, the output is this:\n\"newFile\"\n\"oldFile\"\nBoth are passed on their own, which might make it hard to see if they are moved or not.\n. Great :) Let's wait for some others to find time to review, but this LGTM, great job \ud83d\udc4d \n. @orta just checking on this \u2014 can we get this into master, and if anything needs to be added/changed, we can do that with separate PRs?\n. Great stuff!\n. lgtm\n. @KrauseFx sure we can, I'll update it tonight, heading home now!\n. Actually, inflection in ActiveSupport is somewhat more complex than we need:\nhttps://github.com/rails/rails/blob/861b70e92f4a1fc0e465ffcf2ee62680519c8f6f/activesupport/lib/active_support/inflector/methods.rb#L30\nWe could maybe create a helper method pluralize(count, '1 warning', '%d warnings') and use that, but I think that would maybe be a bit too much.\nAnother option is having a method that just adds a 's' when count doesn't equal 1, which would be correct in most cases.\n. Ah, I misunderstood, I'll do that :) \n. @KrauseFx I edited it a little, can you check if this is what you meant?\n. Cool! :)\n. Happy to do so :)\n. Yeah, saw that too, haven't had time to report it yet \ud83d\udc4d , also, very nice to give an example of how to add changelog entries!\n. > fatal: Not a valid branch point: '865586f5d84122e04c205402831695f9fcd067c5'.\nCould it be that this branch was rebased while CircleCI was running?\n. Yeah, similar thing, the commit that CircleCI has as a reference is then removed from the tree, and cannot be found. This isn't something we can handle, we could catch the error and 'skip', but I don't know if that's always what we want, so erroring might be the best.\n. We could warn(\"The commit hash couldn't be found. This usually happens when you rebase/reset and force-push.\")?\n. I'm not sure, I guess we'd have to check every hash before we use it?\n. We could try to catch errors, and then check the hash?\n. When I started, I expected much more info to appear in the README, since I normally don't install/run everything, only after reading docs. So \ud83d\udc4d  for more docs\n. @neonichu thanks!\n. @joshrlesch thanks for trying danger! Currently, we don't support teamcity (but are accepting PRs for that, you can look at existing CI sources if you're willing to give that a shot, it's really straight forward!)\n. fyi: self.validates? method should return true if it has detected that it is able to handle it (i.e. it's being ran on TeamCity), initialize method should set both self.repo_slug to org/repo or user/repo, and it should set self.pull_request_id to the PR number.\n. > When I use the local flag with --verbose it tells me the pull that it is going to use, but it doesn't actually post anything. I know my github token has the correct auth as I use it for commit status.\ndanger local will actually not post anything, but that's by-design. It's for developers to test the workings, by outputting what would normally be posted as a comment to stdout instead.\nUsing it on a CI server would make it post, if you set the API token in a environment variable.\n. @joshrlesch can you send me a Gist to show the code you're using to produce those errors?\n. @joshrlesch just checking back \u2014 did everything work out? If not, feel free to reach out, we'd love to help :)\n. @joshrlesch \n\nYou're hard coding danger_base and danger_head. What is the purpose of that?\n\nSee https://github.com/danger/danger/pull/135, it's to make sure merges are not counted towards the stats.\n\nAnd what the point of calling ensure_danger_branches_are_setup?\n\nIt's being ran here\n. As for your example, are you sure ENV['GIT_URL'] = \"https://github.com/org/private_repo\" is being parsed correctly?\n. I'm not sure about this one... @orta @KrauseFx you mind having a look at this?\n. [15:13:58][Step 10/10] error: The branch 'danger_base' is not fully merged.\n[15:13:58][Step 10/10] If you are sure you want to delete it, run 'git branch -D danger_base'.\n[15:13:58][Step 10/10] error: The branch 'danger_base' is not fully merged.\n[15:13:58][Step 10/10] If you are sure you want to delete it, run 'git branch -D danger_base'.\nI think these errors are from git's built-in protection to not delete branches that weren't merged. We might want to change the -d flag to -D to force and be silent about it.\n. Yeah, that should be an easy fix, let me see if I can fix this tonight :)\n. @joshrlesch that'd be great. I'll ping you once I have something solid!\n. ~~@joshrlesch so this is actually because the call that's being done in runner.rb isn't in the local runner, and that call sets up the branches.~~ sorry, wrong issue, @orta is fixing this in cap_d branch, if you like to test :)\n. :)\n. It could be related to the git version, we had issues with that before.\n. We could base it on this library\n. I'm going to debug this in 4 hours\n. #134 should fix this\n. Sorry, posted this on the wrong issue \ud83d\ude15\nso this is actually because the call that's being done in runner.rb isn't in the local runner, and that call sets up the branches.\n. You could actually get it through the GitHub API, by filtering on the base (branch name) (see this)\n. This needs documentation, but looks good!\n. LGTM\n. Travis seems to be acting up...\n. @nwest you might want to try creating an empty commit to see if that triggers travis (git commit --allow-empty)\n. \ud83d\udca5 thanks!\n. Good catch!\n. I've got no experience with GitHub Enterprise myself, but @dbgrandi might be able to help you out with this :)\n. (you might want to try setting DANGET_GITHUB_API_HOST too)\n. @daniel-beard that's cool! :)\n. @daniel-beard if you are allowed to, please do share your Dangerfile with the public, we'd love to see some in-the-wild usages of it :)\n. @daniel-beard that's great, thanks! Hope you have some fun implementing it :)\n. Tagging could happen within CI right? It'd only run when commits are pushed though, not when comments are placed (unless you manually change the CirceCI/Travis hook settings in GitHub, but then all would run when a comment is placed)\n. Oh, actual issues would be no-go until we introduce 'DaaS', yeah\n. Hi @wilrnh, you could do that, since the Dangerfile is just a normal ruby file.\nruby\nrequire 'octokit' # not sure if this is necessary \nclient = Octokit::Client.new(access_token: ENV['DANGER_GITHUB_API_TOKEN'])\n. \ud83d\udc4d \n. Aside from the super tiny changelog change, this LGTM! \ud83d\ude80 \n. Also, thanks for contributing to Danger!\n. Hi @AnandWalvekar, I think something is wrong with the way you're setting the environment variables. Could you try adding this:\n``` bash\nexport JENKINS_URL=\"...\"\n...\nbundle exec danger --verbose\n```\nAfaik, the only way for that error to appear is when that ENV var isn't available.. Check out this method: https://github.com/danger/danger/blob/master/lib/danger/ci_source/jenkins.rb#L91-L101, it checks the PR number.. I miss DANGER_BITBUCKETSERVER_USERNAME in the list of found keys in ENV. I believe this is the only code style thing here, and it's also the only think keeping the red lights on, apart from this, should be good, right?\n. Should we rather use ...\"(.+}\"... to make sure there's at leas one letter?\n. Yeah, you're right, it should be fine like this :)\n. We'd have to do scan(...).first here\n. Or pr_body[0..80]\n. You could do scan(/.{80}/).join(\"\\n\") or something like that?\n. Oh, too bad :(\n. I think this needs a changelog entry\n. Shouldn't this be < 80?\n. Alright, but then you should check the pr_copy.length?\n. Oh, you're right! My bad :)\n. or even rendering with erb?\n. (that might be a bit overkill though...)\n. yep, I thought the same after I actually checked that code :+1: \n. however, the .tpl or .template would make it more obvious that it's a template. Also, since 'assets' is only templates, we could consider renaming that folder all together.\n. We could have one 'gem', danger-useful or similar, containing a bunch of useful (WIP, Not a contributor, No spec update) plugins that you could start with?\n. You might want to add this, only if it's sticky, also, that would make sure that all previously made comments by Danger would be not-sticky, which I think is desired.\n. :+1: essentials makes total sense!\n. @KrauseFx \u2013 How would we add multiple plugin classes to one plugin?\n. We could limit danger-{core,useful,essentials} in scope by including guidelines in both the PR/Issue templates and CONTRIBUTING.md so people know what will be merged and what will have to be in a separate plugin/repo. Also, I think the help of having a very limited, but often-used plugins might help so much people get started with Danger.\n\nIf it's essentials, it should ship with danger. There's no point in over-abstracting too far yet.\n\nI do agree that this looks like over-abstracting for now, and we should hit that roadblock first before going around it.\n. We don't support ruby <2.0 right? Otherwise this could be a blocker\n. If we're only using the second match, we could simplify this (without 2 maps) by using non-capturing groups like this:\n<td data-sticky=\"true\">(?:<del>)?(.*?)(?:</del>)?\\s*</td>\n. Can we leave k here? Or if not, rename to _ to indicate it's not being used?\n. Alright, then this is totally cool :)\n. Looks good! :tada: \n. They can be really useful, sometimes :)\n. you might want to do return if bot_name.nil? instead here\n. Possibly we could add this version to a examples/xcode/Dangerfile so it would serve as quick-start, and we'd do the same with other providers/integrations? But this change should be undone indeed.\n. this regex should probably be \\[(.+)\\], since it may never be empty.\n. Do you need a positive lookbehind here? Wouldn't /#(\\d+)/ not work on it's own?\n. Or change our Dangerfile to warn when the Dangerfile is changed, and explain when this is allowed, and when it's not. Either way, we could have some safeguards there for sure!\n. Shit, you're right haha, that'd be bad. Yeah, we could probably change danger init and check if danger/danger is in the output of git remote -v (or something similar)?\n. \ud83d\udc4d \n. [}]* in this case is equal to using }?, right?\n. I actually would describe Danger as 'an extra reviewer for projects', allowing it to check various things specified by the Dangerfile DSL.\n. Contrbutions\n. ff\n. plugin [is] activated?\n. blogging [with] Jekyll\n. you like it? :)\n. @orta we should add back # Master?\n. Great stuff! :)\n. You might want to add editor-specific ignores to your global gitignore instead\n. Could you add your name here? Thanks!\n. ",
    "marcelofabri": "@orta Can this be closed now that we have a wizard?\n\n. This was fixed by #39, right?\n. @orta On the last example, shouldn't modified_files be a property/method of pull?\nMaybe we should think about adding support to \"multiple Dangers\". For example, I could have one instance of Danger as a Service, but I'd like to have Danger running after my PR job so I can use the xcodebuild log. Today, one Danger would overwrite the other. I don't know how important is this use case though.\n. Shouldn't this be working, since submit_pull_request_status! is only called as the last thing in update_pull_request!?\n. We can workaround this by using Circle CI's API: https://circleci.com/api/v1/project/artsy/eigen/1501\nIt does return the PR:\njson\npull_request_urls\":[\"https://github.com/artsy/eigen/pull/1130\"]\n. I'm kind of lost on what's done and what's not. What would be the next steps (and how I could help)?\n. @orta moving to request source wouldn't make #45 happen again? If there's no CI_PULL_REQUEST set, there's (apparently) no way to get the PR.\n. I've started this on #53 but I'm not sure why \"Check if the remotes are the same, otherwise ensure that we have the full commit range\" is needed and how we would do that.\n. Was this comment meant to be on #52? :sweat_smile: \n(And linking to this when you said \"yours\"?)\n. @orta Should I fix the offenses Rubocop is finding? They're from previous commits:\nOffenses:\nlib/danger/runner.rb:20:1: C: Extra blank line detected.\nlib/danger/runner.rb:24:81: C: Avoid comma after the last item of an array.\n        ['--head=[master|dev|stable]', 'A branch/tag/commit to use as the head'],\n                                                                                ^\nlib/danger/runner.rb:28:1: C: Extra blank line detected.\n24 files inspected, 3 offenses detected\nRuboCop failed!\nAlso, do you think theses tests are enough?\n. Fixed the violations, but CI is now failing because of a missing DANGER_GITHUB_API_TOKEN. Should that be necessary even for open source project?\n. The Circle CI one seems to, but not the Travis one. Maybe because I've setup my fork on Circle CI. I'll delete that.\n. From Travis docs:\n\nEncrypted environment variables are not available to pull requests from forks due to the security risk of exposing such information to unknown code.\n. :tada: \n. :clap: \n. Travis failed because of CHANGELOG, so #56 really worked!\n\nI'm updating it after, so I can update the README at the same time with information about the new parameter.\n. I don't know if this deserves a mention on README :grin: \n. Rebased, kept it in 0.3.0 section :pray: \n. But it doesn't seem to have a tag? Does that make sense?\n. Cork doesn't support tables yet, right?\n. It did run with success (https://circleci.com/gh/danger/danger/58), but it seems that it didn't update the status for some reason. \n. should that be another PR?\n. Done in #67 \n. Maybe the same problem as https://github.com/schacon/ruby-git/issues/23? \n. Sorry about that \ud83d\ude30\n. I think we should be careful about where to draw the line. IMO some of these ideas are not about \"Pull Request etiquette\" but about linting the project. They could be implemented as plugins, though. \n. Meanwhile, you can find out the supported providers on the source code: https://github.com/danger/danger/tree/master/lib/danger/ci_source\n- Buildkite\n- Circle CI\n- Jenkins\n- Travis\n. Does #385 fix this?\n. :clap:\n. I've added an entry to CHANGELOG and a simple explanation on README, but I feel that it can be improved.\n. > @marcelofabri what happens when the message to be ignored contains a double quote?\nWe're screwed right now :grimacing: \nWe could support scaping, but I don't know if it's worth\n. :tada: \n. This is awesome, @orta :tada: \n. \n. I think we can close this and open a new issue if we want to add an alias.\n. Is the link working? When I try to get an invite, I get a JS error: \n\nclient.js:22 Uncaught TypeError: Cannot read property 'value' of undefined\n. @KrauseFx but does it make sense to have the same message multiple times? It wouldn't help to identify the issue at all (in general, not talking about this idea).\n. ruby\n[1] pry(main)> class List < Array\n[1] pry(main)* end  \n=> nil\n[2] pry(main)> List\n=> List\n[5] pry(main)> List.new\n=> []\n[6] pry(main)> List.new.class\n=> List\n[7] pry(main)> List.new.map { |l| l }\n=> []\n[8] pry(main)> List.new.map { |l| l }.class\n=> Array\n. These functions always return Array, but a consumer might think they would return our custom subclass, so include? would work with the file globing.\n. I don't know why Danger is warning about the gemspec, since I haven't touched it :grimacing: \n. It seems that https://github.com/danger/danger/blob/master/Dangerfile#L10 should check if the array is not empty. \n. I've set sticky to be true by default, but I'm open to suggestions here\n. So, any ideas on how to get the previous violations without parsing the HTML? :grimacing: \n\nI've found Nokogiri to parse the comment HTML, but I remember @KrauseFx fighting for removing it from fastlane in the past \u00af(\u30c4)/\u00af \n. Just for reference, some regexes that seem to work:\n- <th width=\"100%\">(.*)<\\/th> to find the table title\n- <td data-sticky=\"(.*)\">(.*)<\\/td> to find if it's sticky and the violation text\nI think we can get away without nokogiri :tada: \n. Also, it seems that Circle is failing for some unrelated reason: https://circleci.com/gh/danger/danger/288\n. @jeroenvisser101 I'm not sure how we'd do that.\nHowever, it wasn't that hard to parse the comment with regexes. I've pushed an initial implementation in c0e75c32d43f0d3c5303f875a87932ac20070aa0. I'll add more tests later.\n. I need opinions here: should I leave the number of violations on the table header count the remaining violations or the total (including the crossed out ones)?\n. @jeroenvisser101 wouldn't be weird to have \"0 Errors\"?\n. @jeroenvisser101 I liked that! :100: \n. This is ready for review :tada: \n. Done! Thanks @mfurtak :100: \n. I like this idea :sparkles: \n. That should be an easy fix: https://github.com/danger/danger/blob/master/lib/danger/request_sources/github.rb#L31\n. :+1: \n. @segiddins You can add #trivial to your PR title to avoid adding a CHANGELOG entry\n. I haven't thought about that, sorry for changing it \ud83d\ude2c \nMaybe we could check the PR body as well? cc: @orta \n. This was fixed by #252 \ud83d\udc4d \n. We can use RubyGems API: https://rubygems.org/api/v1/versions/danger.json\n. Awesome! \ud83c\udf89 \n. Dupe of https://github.com/danger/danger/issues/183?\n. @orta Done!\n. Also, at least on my current setup, the CI provider (Jenkins) already fails the build and sets the PR status, so I wouldn't notice either \ud83d\ude2c \n. We have a commits entry:\nhttps://github.com/CocoaPods/CocoaPods/blob/master/Dangerfile#L13\nIt was added on https://github.com/danger/danger/pull/179 and https://github.com/danger/danger/pull/196.\nWe should update the README with this option.\n. I'll close this since it's now in http://danger.systems/reference.html\n. Implemented in #385 \n. @dzlobin Unless I'm misunderstanding something, it does respect: https://github.com/fastlane/fastlane/blob/master/fastlane/lib/fastlane/actions/danger.rb#L10\n. I've used this code before:\nruby\ndef url_for_path(path)\n  commit = github.head_commit\n  repo = env.request_source.pr_json[:head][:repo][:html_url]\n  path = \"/#{path}\" unless path.start_with? '/'\n  url = \"#{repo}/blob/#{commit}#{path}\"\nend\nThe nice thing is that it supports PRs from a fork as well.\n. I think most CI providers only run when the code changes, as you said. What I do on my project is triggering a rebuild manually if needed. \n. You can also have multiple instances of Danger running: http://danger.systems/guides/faq.html#multiple-dangers\nThat's useful if you want a quick feedback on simpler validations (PR title, etc) but still uses the output of the build to perform other validations (code with warnings, lint result, etc).\n. \ud83d\udc4d for improving danger local. Another thing that I'd add is making sure to support forks as well (in case of danger pr).\n. Awesome, I assumed that it was the PR number\n. I like the lanes idea \ud83d\udc4d \nWe basically do this today with multiple Dangerfiles and danger_ids\n. \nvs\nhttps://github.com/danger/danger/pull/358#issuecomment-234743636\n. Should we pass another danger_id to avoid one Danger overwriting the other one?\n. @mtitolo Could you check if #442 fix the issue for you? (And that there are no other crashes in init \ud83d\ude2c )\n. Agreed \ud83d\udc4d\n. From the error message, it seems that one of your variables is a Hash and not a String as expected. Could you try printing them?\n. Can confirm that's the current behavior. What we do is to make Jenkins publish the status by itself as well (and we basically ignore the Danger one, using it only for the comment).\n. This is where we set the context: https://github.com/danger/danger/blob/master/lib/danger/request_sources/github.rb#L169\nThis would be a fist contribution, would you like to create a PR? \ud83d\udcaf \n. Closed by #571 \ud83c\udf89 \n. I think we already been there: https://github.com/danger/danger/pull/77\n. Nice! I didn't even know about pipelines \ud83d\udcaf\n. I've contacted GitHub support and here's what I got:\n\nThanks so much for doing that! We are currently updating to a new markdown renderer, which requires a new line between markdown and HTML lines. I think this may be an issue related to that.\nI've asked the team to look into it. I don't have an ETA on any changes, but I'll follow up as soon as I have news.\n\nIn the meantime, we probably could remove that extra line to fix the issue.\n. @kivikakk Thanks for commenting here! Also, I've noticed that existing comments are rendered properly (they only break if they're edited). @epologee Please try 4.0.1. It should be fixed - see https://github.com/danger/danger/issues/663 for more info.. Can we keep this open to track an even better solution? \ud83d\ude05. I think this is a simpler issue than that - see that in the Circle log the violations are shown in the expected order. Something between that and reporting have changed it (maybe https://github.com/danger/danger/blob/master/lib/danger/request_sources/github.rb#L136-L139?). I've opened https://github.com/realm/SwiftLint/pull/1230 which did a fresh run and it showed the same problem, so it's not an issue edit problem.. > Hrm, there's potential that the output for the script generating these results could be passing the messages through in a different order ( as they may take different amounts of time? )\nThe operations aren't parallel, so I can't see how this would be the case. Also, the order was right when Danger prints the violations to stdout (see https://circleci.com/gh/realm/SwiftLint/276).\n\n@marcelofabri can you please recheck this with latest version of danger?\n\nI'll try it later, but feel free to try to reproduce it on SwiftLint repo.. Will take a look later. sure, I'll take a look at that later. I hadn't used rest-client before also, just seen some gem using it and thought it was good enough.\n. makes sense :+1: \n. I can change that, but it shouldn't matter unless someone triggers an empty warning/error\n. shouldn't these be methods on scm to make it easier to add other sources later?\n. So we create local branches to make sure we have the right commits? Should we delete this branch after we're done?\n. I think it's better to always have it, so in most cases it'll be explicit whether it's sticky. But good point on making it work with older comments!\n. I don't think so, because there're already some named parameters on the codebase\n. :+1: \n. I didn't know about non-capturing groups. Nice!\n. I think this was a typo\n. I don't know if we should strip the fragment part from visible text \n. I think it should, since there're other places using symbols (this whole file, actually)\n. missing a verb after \"Danger rules we\"?\n. maybe link to CHANGELOG.md?\n. forgot about that, agreed \ud83d\udc4d \n. Shouldn't we use Cork as in the rest of the codebase? . ",
    "fastlane-danger-bot": "| :white_check_mark: | No errors found |\n| --- | --- |\n| :white_check_mark: | No warnings found |\n| --- | --- |\n| \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 1 Warning |\n| --- | --- |\n| :warning: | Tests were not updated |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Trusted author @orta |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Warnings |\n| --- | --- |\n| :warning: | Tests were not updated |\n| :warning: | Please include a CHANGELOG entry |\n| \u00a0 | 1 Message |\n| --- | --- |\n| :book: | Trusted author @orta |\n\n  Generated by :no_entry_sign: danger\n\n. | \u00a0 | 2 Messages |\n| --- | --- |\n| :book: | Trusted author @orta |\n| :book: | Tests were updated / added |\n\n  Generated by :no_entry_sign: danger\n\n. ",
    "ashfurrow": "Nice, using Danger to build Danger :+1: \n. I've used this on a PR and got this response:\n| \u00a0 | 4 Messages |\n| --- | --- |\n| :book: | Insertions: 136 |\n| :book: | Added: [\"Artsy/App/ARHockeyFeedbackDelegate.swift\"] |\n| :book: | LOC: 206 |\n| :book: | Mod: [\"Artsy.xcodeproj/project.pbxproj\", \"Artsy/App/ARAppDelegate+Analytics.m\", \"Artsy/App/ARAppDelegate.m\", \"Artsy/App/ARHockeyFeedbackDelegate.swift\", \"Artsy/App/AROptions.h\", \"Artsy/App/AROptions.m\", \"Artsy/App/ARSwitchBoard.m\", \"Artsy/App/ARSwitchboard+Eigen.m\", \"Artsy/Resources/Artsy-Bridging-Header.h\", \"Artsy/View_Controllers/Admin/ARAdminSettingsViewController.h\", \"Artsy/View_Controllers/Admin/ARAdminSettingsViewController.m\", \"Artsy/View_Controllers/App_Navigation/ARTopMenuViewController.m\", \"Artsy/View_Controllers/Embedded/Generics/AREmbeddedModelsViewController.m\", \"Artsy_Tests/View_Controller_Tests/App_Menu/ARTopMenuViewControllerSpec.m\", \"CHANGELOG.yml\", \"Dangerfile\", \"Gemfile\", \"Gemfile.lock\"] |\nHard to tell if it's accurate since I've merged in upstream changes from master, which it appears to be including as well. \n. Pushed an amended commit with a changelog entry. \n. Definitely! \n. \ud83d\udcaf\n. I had this issue as well, where my fork of danger/danger to ashfurrow/danger was being interpreted on a personal repo to be an org-wide Dangerfile repo. Deleting my fork fixed things.\n. It'd be cool to have an option to run danger against the diff from the current branch and master.\n. Cool cool \u2013 @orta any preference? Gotta stay on-brand. . ",
    "justMaku": "I love the idea, it's definitely a step into a right direction for #213 and I believe it could be nicely solved by decoupling Pull Request from both CISource and RequestSource (#226) \nI'll try to get a simple POC of this working this weekend because such solution solves my problem with Bitbucket + Bamboo.\n. > > - EnvironmentManager uses a specific GitHub feature to get the merged PR's branch.\n\nThis is a fallback, generally, and something I'd like to address, it can be really tricky to actually get the commit range for the current code review. ( Mainly due to local CI caching )\n\nI started looking more into the code and I don't really understand why Danger requires this fetch. But I'm not a git expert so if you could explain it to me I'd be grateful.\n. @orta I'm nowhere close to finishing, so don't wait for my changes and merge whenever your code is ready :)\n. Correct me if I'm wrong (and I probably am), but doesn't it actually make things worse? \nBy using the metadata from GitHub API Danger might actually \"parse\" code that doesn't correspond to the given CI task. Given your example, I could ask danger to work on PR with range of A1..B9 and during the build/test phase rebase and force push it with different base and head. This would make Danger to operate on a different code base than the rest of the build process did.\nAgain, I'm not an expert on this matter, but in my opinion it's a safe assumption to make that the build server has all the commits required to build a given CI task and that CI does already runs on the HEAD of the tested branch (and if that's not true, all of CI's supported by Danger do provide that information in the environment variables) \n. <3\n. Yup, I believe it's a good foundation for further work.\n. Will rebase later tonight.\n. @k0nserv Yes, since #59 haven't been updated in a while (and there were some braking changes introduced in the meantime) I guess it will have to be refactored.\n. Fixed and rebased (once more).\n. @orta sorry! fixed :)\n. That's just first of many ;)\n. Looks fine to me \ud83d\udc4d\n. FWIW: 2.2.0 works fine.\n. Upon investigating it further, the problem seems to be in DangerfileMessagingPlugin, if I comment out the import of this plugin from dangerfile.rb tests go a little further (but still fail)\n. It should work if you provide the GitHub API token in DANGER_GITHUB_API_TOKEN environment variable.\n. This has been resolved in #233.\n. Now it worked, even more interesting \u00af(\u30c4)/\u00af\n. I'll just remove sticky from Dangerfile for now \ud83d\ude02\n. \ud83c\udf89\n. Okay with me, if it passes CI I believe it should be safe to merge.\n. Okay, merged! Thanks for this fix \ud83d\udc4d \n. Perfect \ud83d\udc4c\ud83c\udffb Thanks :)\n. This doesn't check if the information provided is valid, it just checks if it exists. The example from Circle would still pass.\n. I'm on it. Will try to get it fixed ~soon~.\n. It looks like it not related to #221, but #53. PR incoming.\n. @rbuussyghin I don't think those two are connected.\n. Resolved in #267 \n. Doesn't it use the same GitHub token as the one for posting the comment?\n. Existence of this fetch was discussed and  well explained in #213. I'm all up for this fetch being optional though. What do you think @orta?\n. Right! Updated :)\n. When running with local git repo you need to specify the *LOCAL_GIT_PR_ID\" environment variable. It's strange though that it tries to run into local mode. Will look into that.\n. Hey @kennethlynne, could you please post the result of this command:\ngit log --merges --oneline | grep \"Merge pull request #\" | head -n 1 ?\n. Sorry, the environment variable name is actually LOCAL_GIT_PR_ID.\n. @kennethlynne right, that wouldn't work with your setup, please try using fix_init_problem_with_repos_without_merges branch for now.\n. Fixed in #275 \n. So how will Danger know which PR to update?\n. Right, sorry for introducing this then \ud83d\ude25\n. I'd merge it and allow people to build their own workflows, even if GitLab CI doesn't work now, people can still use Jenkins or any other form of CI to trigger the build. \n. I also believe that assuming that Danger only works on PRs is wrong as in fact danger could work on any given changeset. We need to start thinking about removing that tight coupling somehow and maybe even move out PR updaters to a plugin.\n. Okay, I can reproduce using ./bin/danger local --use-merged-pr=283 on Danger repo. Fix incoming soon.\n. I understand this only happens while running in local mode, right?\n. Could you check if this #305 fixes your problem?\n. Yeah, I saw that too but I focused on the issue at hand first. Will fix that later.\n. Yes, this is definitely something we would like to have! Not many CI sources support BitBucket though, so let me know how does your setup look like :) \n. Since I was thinking about this recently I believe ideal solution to the problem with danger local would be to drastically change Danger's architecture. \nHere's a concept I have in mind:\n- \"Raw\" danger executes a Dangerfile on a specified changeset: danger master HEAD. It returns the output using standard output.\n- We have a new entity called OutputSomething (can't decide what to call it) which handles all of the PR updating staff we do in the RequestSource now.\n- RequestSource continues to be used as a way to get more information about the changeset (base commit, etc). \n- CISource job would be to detect the changeset and an output source (GitHub, GitLab, BitBucket, Slack, Twitter, you name it)\n- EnvironmentManager ties it all together.\nI have started working on it but had to put it off for now due to personal stuff happening. Let me know what you think. \nHaving this architecture would solve problems like #379 where you could add Danger without a CI to your project using a GitHub hooks etc. \n. Niiiiice! Thanks for this contribution \ud83d\udc4d\nJust one thing though: does Bitbucket finally allows to use emoji in the comments? I remember having issues with that back when I used Bitbucket Server (aprox. 4-5 months ago).\n. @segiddins that totally makes sense! will do :)\n@orta always! ;)\n. Similar error for CI source is also using StandardError so I decided that it's okay to also use it here. \n. Rebase was needed due to the #247, rebased already.\n. Cool, didn't knew ruby had something like that! Will do :)\n. Yup, but the idea was to not have a \"safe\" default for GitHub, every CI source should explicitly declare which Request Sources it supports.\nFixed!\n. Fair point! Will do it that way!\n. ",
    "sylvek": "\ud83d\udc4d \n. Ok great! Where may I find this doc? \n. ",
    "k0nserv": "This sounds like a great idea, I'd be happy to help out with it.\n. I've been thinking a bit about the token and a way to move the token away from the public eye. I'd suggest we include the hash of the Dangerfile as an argument when running danger via the service. We can then refuse to run if the hash doesn't match that of the Dangerfile used. This way the github/gitlab token can stay secret and someone couldn't just create a PR that echoes the token in the danger file. The hash of the file could be kept in the secrets of the CI systems and sent along with the call invoking danger. \nThis feature does make it harder to use Danger, but it increases security and removes the issues accossiated with a public token. Maybe it could be optional\n. @hjanuschka what's the status of this?\n. https://gitlab.com/gitlab-org/gitlab-ce/issues/14654#note_12065382\n. They claim this is already being done. @hjanuschka could you drop a line in the issue explaining it further?\n. So with the merge of #221 this needs to be updated to fit that structure\n. I've adopted some of this PR in https://github.com/k0nserv/danger/tree/gitlab \nAsked Gitlab about adding a GITLAB_MERGE_REQUEST environment variable in builds similar to TRAVIS_PULL_REQUEST and CI_PULL_REQUEST. \n. You think Rubygems would transfer ownership of the gem? That seems highly unlikely IMO. As a RubyGems user I sure hope they don't do that. Maybe they can at least issue a release, but we can't tag in git \n. > Yeah, we do that all the time at CocoaPods. People lose access to emails, or stop working at a place all the time.\nIndeed, but in this case we are talking about transferring ownership from someone without their confirmation. Seems like a more drastic thing\n. Oh sorry, he wasn't given the ability to push to rubygems? So gitlab is essentially ownerless then?\n@connorshea You are indeed correct that Gitlab CI does not currently expose the correct environment variables in CI. I've raised it with the in the linked question. The other open question is being able to trigger CI on new/edit comments and updates to the MR itself. However do keep in mind that GitLab can still be used with our forms of CI, we use Drone + GitLab at Skyscanner for example\n. Also I've emaild Narkoz and we'll see if he finds the time \n. Opened #299 for this and I suggest we move the conversation there\n. Idd thanks @hjanuschka your implementation has been very helpful in the implementation of #299 and the work on the gitlab gem has helped greatly too\n. How will this work in relation with #59? I assume #59 will have to be refactored to fit this structure instead.\n. Okay seems unavoidable, might wanna have a look at the method used in #59 and see if there are any obvious ideas that could be adopted here too. Seems like they are more or less the same approach though\n. We probably don't wanna make this a breaking change now, maybe just add support for DANGER_GITHUB_API_URL as well. For GitLab I've called this env variable DANGER_GITLAB_API_ENDPOINT, so maybe we should change that too before finalizing GitLab support\n. Closed by #448 \n. On the topic of the gitlab gem I've reached out to Narkos over email. He is the registered owner of the gem on https://rubygems.org. Issuing a 3.7.0 of gitlab is currently the largest blocker for this to be merged\n. No word from Narkos yet. You wanna try the Rubygems route?\n. Might be possible to convince them to give @asedge push access\n. @orta Do you wanna exclude GitLab CI on account of it not being supported as of now?\n. Either that or not merge it at all. Until they support some way of exposing the MR id in GitLab CI Danger won't work at all, even after that they need to support triggering builds on comments/edits for full support\n. All though if we include it as it stands right now people are free to build small servers that interact with GitLab's build hooks to expose the correct env variables\n. The question is not about other CI tools though, it's specifically about Danger::CISource::GitlabCI.\n. Yes I agree that might be the best course of action. I've been ill for a few weeks so haven't really had the time and energy to work on this unfortunately. \n. Yeah I was thinking about extracting \n- f1df25888402e673269305fd0cb59ffaa0f12829\n- 6604c9ada41e9bf2baacd464a080c9de054646f7\n- 6ff527f02d8962654f9e8b9c77490cbd1fce61e3\ninto a separate PR because they can all be merged and makes supporting multiple sources easier and can provide value right away\n. @connorshea For this PR specifically the test for Danger::RequestSource::GitLab still need to be written which is the work I've been unable to do due to being ill the past few weeks. From GitLab's side it's still interesting to explore the blockers for GitLab CI, but since there are other CI providers this change can still go into Danger before that\n. Yeah still needs more tests, but the most uncertain outstanding question is around the gitlab gem. I raised the question about ownership of the gems with rubygems last week, but I am yet to hear from them. I'd suggest we wait and see if the problem can't be resolved by promoting one of the existing contributors. If that's not possible we'll have to fork it\n. Sure thing @deanpcmad you're welcome to take a stab at finishing up the tests. I've invited you to my fork so you can push to this branch.\n. There's another meta problem with GitLab that might be good to document somewhere. From my understanding GitHub and GitLab differs around builds with forks. In GitHub with Travis when you submit a PR from a fork it's built under the namespace of the original project. For example this PR is from my fork, but builds are still build under danger's travis namespace.\nOn GitLab the default behaviour of forks is that nothing happens unless the fork sets up CI as well. There are open issues for GitLab about changing this behaviour. \nEDIT: At least this is my experience with GitLab CI + Drone.\n. Found an old issue and for this on GitHub and reopened it on GitLab\n. So I was working on this and found another issue.\nGitLab seems to be stripping out the data attributes from the submitted HTML :(\n. I was only looking at the frontend, might just be the case that it happends during rendering yes\n. Yeah my bad it's in the frontend rendering\n. @deanpcmad Do you have any WIP for this branch? If not I've finished the tests and rebased the branch so if you are cool with it I'll force push those changes\n. This will require quite some cleaning up among the commits, but I'll do that as the very last thing. Still have a few more tests to write, but for the gitlab request source we now have 100% coverage.\nThere's also the question of organization danger files which isn't implemented yet \n. I believe this should be ready for review now. I haven't written any code to update the status of the merge request yet, but I'd prefer to merge first and then add this\n. The other thing that remains is updating CI sources that support GitLab. I don't believe this to be a blocker for the merge either\n. Can be fixed with bundle exec rubocop -a after changing the configuration in .rubocop.yml\n. Yay :tada: Thanks, I can't merge though that's a up for  @orta \n. #299 is now in. Should be possible to use that as a template for the work that needs to be done to add support for Bitbucket\n. Rebased\n. @orta You wanna pick 7f54b24 too it contains tests for CommentsHelper or I can do it and push it to this branch\n. It's intended to be squashed into 73754c2\n. As in your are against it on a ideological basis?\n. Okay do you want me to do it then? I prefer to see history as immutable after it reaches stables branches, but not in feature branches. \n. All CI should pass now. If it does give me a shout when you are ready to merge and I'll rebase the branch and clean up the history a bit before :)\n. Okay also improved the test coverage of CommentsHelper so that at least all methods are tested. I think there's some extra coverage in the tests for the github request source as well.\n. Cool, I'll clean up the history and then merge \n. All except windows is green, merging this\n. I'll submit a PR to add a http://editorconfig.org/ file later today\n. Not sure about VS code specifically, but it works with a bunch of editors and there are extensions/plugins for most others. Should help with consistency \n. Top notch \ud83d\udc4d  Thanks for the PR\n. Should probably include a description that the limit was exceeded?\nDanger found #{number_of_issues} with this PR, too keep the size down the number shown has been truncated to #{max_violations}\n. Looks good :)\n. Looks good and yeah I agree that having a set of integration test that run against a proper git repository would be nice\n. Yeah I agree with this and was a bit confused by the \"issue\" terminology as well \n. Are you updating the walkthrough as part of this branch too? I believe that Guest or Possibly reporter is the permission level one would want to use.\n. Looks good. I've created https://github.com/danger/danger/issues/447 to update the CI Sources that supports GitLab\n. Woops :) Nice catch\n. Oops, forgot to update the teamcity docs\n. Just added a CHANGELOG entry\n. \nCoverage improved nicely for CI sources too. I'll take a pass at upping the coverage for the others at some point too\n. Rebased\n. I might have copied and pasted a bit for the github_helper so that seems reasonable\n. The difference I noticed between the GitHub and GitLab formats is that the GitHub format includes lines such as\ndiff --git a/Artsy.xcodeproj/project.pbxproj b/Artsy.xcodeproj/project.pbxproj\nWhich aren't present in the GitLab responses.  I am not sure if those are required for Unified Diff format, but that was my concern\n. Hmm okay I am happy to do it this way then, @orta what's your take?\n. Thanks for resolving this, sorry about that bug\n. Aw damn my bad, I thought I accidentally introduce the b because it seemed off\n. Is this resolved no that #485 is merged?\n. Yeah I agree seems like the better option\n. @orta Is there a way to test backtick command line calls? Noticed that this doesn't have any tests\n. Please include tests in specs/danger/ci_sources Feel free to clone one of the existing CI Sources tests and modify it.\n. LGTM, great work on your first Ruby PR \ud83d\udcaf \n. I am wondering how different CI systems will handle this. If there are multiple different approaches to this we might wanna support different approaches per MR. I wrote a small script that uses the Gitlab client from Dangers dependencies to get the correct ID and replace it in the environment.\n. ``` ruby\nrequire 'gitlab'\nclient = Gitlab.client(\n  private_token: ENV['DANGER_GITLAB_API_TOKEN'],\n  endpoint: ENV['DANGER_GITLAB_API_BASE_URL']\n)\nresult = client.merge_requests(CGI.escape(ENV['DRONE_REPO']), iid: ENV['DRONE_PULL_REQUEST'].to_i, per_page: 1)\nglobal_id = result[0].id\nDRONE_PULL_REQUEST=#{global_id} danger\n```\nThis is the workaround script\n. No they are providing the ENV var so it's not a bug with Drone. The problem is GitLab has two ids for merge requests. What they call iid which is the project specific merge request number starting at 1 for each project. There's also a global merge request id, id, that is used by the API. Hence making the request /api/v3/merge_requests/:iid will probably not return the expected merge reques. That is if you happen to even have access to that merge request.\n. @connorshea, @hjanuschka, @jk have you tried setting Danger up with GitLab using any CI? This will depend on what value the different CI systems export for the pull request id. If all use the project specific id(iid) we should use this workaround inside danger\n. Yeah if you could get me printenv from a merge request build that'd be nice :)\n. GitLab CI specifically isn't supported yet. There's work that has to happen from GitLab's side for that to be the case. There's a reference to it in the comments \n. So for Jenkins no change should be required since we use the global ID. See here.\n. Has anyone tried other CIs with GitLab? @orta what are you thoughts around putting knowledge specific to the request source in CI implementations?. Yeah actually probably makes more sense for the request source itself to have the logic to map from iid to id. @thebugcode As long as the project path is urlencoded that should work. Both the numeric id and the project path is supported as the project id at least from my testing . Nope not really. It's hardcoded to use the repo slug see here https://github.com/danger/danger/blob/master/lib/danger/request_sources/gitlab.rb#L95-L96\nThis should work though, I'll have a look at it tomorrow and see what could be up. Yeah other docs don't explicitly reference this fact, but it's mentioned in the docs for /projects/:id. See here I believe that's still supposed to apply for other paths that start with /projects/:idand I did work at one point in any case. Just verified with our EE instance. /api/v3/projects/:escaped_repo_slug/merge_requests/:id definitely works\nWe're on version 8.17.3, but I believe we were probably on something like 8.14 when I last tried this . Hmm yeah that's I didn't see any code around escaping the slug. I could've sworn I implemented escaping the slug, but it seems to not be there anymore. Did some more digging. The escape was removed as it was added in the gitlab gem. See this commit. Danger doesn't include the gem anymore, but you can use danger-gitlab to get it. However that gem specifies ~> 3.7 for the gitlab gem. @orta Shouldn't that be change to depend on master or at least locked to the latest commit on master?. Right. In the meantime I think this might work \n```ruby\nsource 'https://rubygems.org'\ngem 'danger-gitlab'\n81aac2742aff0eb2464f9b562d0120cc9205b734 is the latest commit on\nNARKOZ/gitlab master.\ngem 'gitlab', github: 'NARKOZ/gitlab', ref: '81aac2742aff0eb2464f9b562d0120cc9205b734' \n``. @connorshea I'm confused about the docs for the API. Specifically https://docs.gitlab.com/ee/api/merge_requests.html#get-single-mr which specifiesmerge_request_iidwhich does not work per this issue. It should bemerge_request_idI believe?. \ud83c\udf89 That's really great for my use case since Drone outputs the iid and I currently require custom logic to convert from it to the global id. Will the hooks that CIs use change to also recieve theiidrather than the global id?. They're extracting the id from the ref egrefs/merge-requests/3/headin the version we're using(0.4). Which is why I need the code that translates from theiid`(3) to the global id. \nI just tried with GET /api/v4/projects/:id/merge_requests/3 against our instance running 8.17, but that still behaves the same for me ie 404s. Ah okay I misunderstood the docs then :) . @connorshea Are you sure about that? On our instance I can use the v4 API, but the specific change relating to merge request ids does not seem to implemented. Right, that makes sense then. We'll make sure to upgrade then :) . The reason we don't update the build status for GitLab is because it requires Developer level permission FYI.\n. Could probably have it try to update the commit status and fail gracefully if it's forbidden. In case users in more controlled environments than gitlab.com wanna run danger with developer permissions\n. So is this issue for adding the flag or posting the status? Can we close this issue and create two new ones instead?\n. Opened #508 and #509 for this\n. Personally I dislike wikis. Putting it straight into the README.md is my preference. Keeps information in one place. Should probably also be on the website\n. Is the bitbucket support merged?\n. \ud83d\udc4c will update\n. Agreed, I didn't know it had the same mistake, of course I did advise @HeEAaD to copy the GitLab request source so it is probably on me.\n. What about optional variables that you might want to set? Do we wanna raise any info about those too?\n. Nope, but it could be a good opportunity to surface them as well? \n. \ud83d\udca9 need to fix the tests too. I think we're still on v3 atm. I'll have a look though. Same as CircleCI, already covered by superclass \n. Shouldn't this raise an exception if this is meant to be implemented by all concrete CI Sources?\n. Agreed :)\n. Unless there's a need for a common interface\n. Yeah it's only used by the matching request source as of now so\n. Yeah that's a really good point\n. Know a reliable way to do that? \n. ruby\nGem::Platform.local.os == \"darwin\"\nSeems reasonable\n. Is Gem::Platform always available?\n. That's what I recon too since it's in the Ruby docs. @segiddins probably knows for sure?\n. I think the option I used in the initial commit where I have two helpers spec/support/{gitlab,github}_helper.rb with a common interface and then tag the specs with the api_provider is cleaner\n. In tests you'll just end up with\nruby\ndescribe 'gitlab', api_provider: 'gitlab' do\n  let(:stub_ci) { stub_ci }\nend\n. I've reverted back to this method of controlling the environment in tests. I believe it's much cleaner and more in line with rspec\n. if gitlab.mr_labels.empty?\n. I believe html_link is not implemented\n. Where does the host come from? It can't see how that's created. Important to consider because GitLab might often be running in a private environment rather than on gitlab.com\n. Could it not use @gitlab.host?\n. This logic can stand to be more robust if someone puts a schema in the host value, but it will do for now\n. Yeah that seems reasonable, should probably be under each instruction block\n. Here seems fine\n. I believe the convention is to no use contractions for rspec examples. At least that's what I've been trying to do\n. Other than what's enforced by rubocop, no. \ncc @orta \n. We should try an reintroduce this to make the stubbing less verbose for GitHub though\n. Might wanna move the logic around talking to the API to a BitBucketServerClient. Violates SRP a bit now when it's doing both the low level HTTP calls and the high level danger stuff\n. I don't think we are using modules in specs instead we use\nruby\ndescribe Danger::DangerfileBitbucketServerPlugin\n. Redundant newline\n. I'd recommend using this style for the tests. See http://betterspecs.org/\ndescribe \"#host\" do\n  it \"sets the host specified by `DANGER_BITBUCKETSERVER_HOST` do\n    expect(bs.host).to eql(\"stash.example.com\")\n  end\nend\n. Can we get more data from bitbucket so that this plugin is closer to gitlab/github? labels, the diff, base commit, head commit, base branch, head branch for example?\n. \ud83d\udc4d \n. Strictly speaking this isn't a request source so having in in lib/danger/request_source might be confusing. Can we put it somewhere else?\n. \ud83d\udcaf \n. Are other request sources supported? Specifically GitLab? A quick google search seems to indicate it might be https://bitrise.uservoice.com/forums/235233-general/suggestions/9836094-built-in-gitlab-support?\n. Nice catch, most other sources use this approach though. We can update it later\n. Cool I didn't know about that either :)\n. Typically nice to include a case where you set only the variables required for validates_as_ci? to be valid, but that would not be the case for validates_as_pr?. For example see this example in the Travis CI tests\n. \ud83d\udcaf \n. Great :+1:\n. To me this is just a supporting class for the request source. This class doesn't inherit from the base request source so it doesn't seem right for it to live next to the other request sources. I would put it in lib/danger/api_clients or something like that \n. Great, needs more emojis though? \ud83d\udc4c\n. Will do :)\n. If the repo where this runs is a proper repo with diffs do we need to stub out responses?\n. These spaces should stick around right?\n. This can be moved to a let in the above describe\n. This can also be pulled out to a let\n. Same\n. like -> likely\n. I'm surprised that this worked at all, seems like I made a mistake here. So in the API both worked? . ",
    "hjanuschka": "a few fixme's to go, but i am already able to run danger against a --mirror cloned gitlab repo.\n. thx - rebased to current master ;) - i ll try my best to stay mergeable, and once i am done implementing the feature i ll squash my useless commits to one!\n. ## waiting for a gitlab api mr before incan continue\nHelmut Januschka\nSent with Airmail \n. already works - just waiting for this one to be merged \nhttps://github.com/NARKOZ/gitlab/pull/178\nHelmut Januschka\nSent with Airmail \n. - rebased current master\nsorry i still haven't found the time to finish this, mostly coz i have no idea how to cleanly solve the \"trigger\" problem. as gitlab-ci doesnt trigger a build on PR changes. only sends a json payload, and i therefore need to find a smooth way todo the danger stuff.\n. thx for the issue on gitlab side - once we get a MR json on push/force-push it would be super-awesome.\nin the meanwhile my idea is on \"build\"-events use the API to find MR's wich belong to the build - and do the danger stuff from there.\nright now this is the state, of this WIP PR.\n- clone your gitlab repo.\n- create branch, and create mr on gitlab (get mr-id)\n- get gitlab access token.\n- get project id\n- set following - envs..:\n  - DANGER_GITLAB_PRIVATE_TOKEN=<PRIV_TOKEN>\n  - DANGER_GITLAB_ENDPOINT=http://gitlab.com/api/v3\n  - GITLAB_MR_ID=123\n  - GITLAB_PROJECT_ID=1234\n- run danger in the cloned repo.\nit should work from this place, and danger should comment, and/or update the comment on the MR.\nits pretty far from this. we only need to automate the env-setting (according the json we receive on mr-events.)\nplan 1:\n- have a little web-app (grails as an example, call this gitlab-danger-bridge)\n- receive the json payload\n- clone the repo\n- set the envs\n- run danger\n- pros:\n  - should be ease to build\n- cons:\n  - a another services needs to be integrated in ops-workflow\n  - waste of space\n  - cleanup code and so on\n  - web app requires deploy key\nplan 2:\n- have a little web-app (grails as an example, call this gitlab-danger-bridge)\n- receive the json payload\n- tag the repo  (via api) - like danger_<PROJECT_ID>_<MR_ID>-<AUTO_INCR_INDEX>\n- handle the danger in the .gitlab-ci.yml with a only: danger_.*\n  - pro:\n    - cloning and cleanup is handled by gitlab-ci as usual\n    - artifacts / caches / docker and so on\n  - cons:\n    - regex on branch name isn't perfect, maybe a place for errors.\n    - web app requires api-token\nKEEP in mind that right now a few id's still hardcorded (seen that after reviewing it).\ni personally would love to have option2.\nwhat are your  suggestions?\n. @k0nserv  sorry been busy, had no time to work on the danger-gitlab stuff, thx for stepping in!! looking forward to your PR\n@connorshea  thx for your help - i really would love to have danger integrated into our gitlab-ci workflows\n. i would be scared if it would work!\nhow about forking it to gitlab-official  or gitlab-gitlab?\n. nice thx guys!!!\n. @k0nserv  i actually fail to set it up. do you know if there is a sample .gitlab-ci.yml i can have a  look at, i have like 5 projects where i could test it really well (and would need danger et-all :))\n. looking forward to this.. ",
    "DangerCI": "\n\n\n\n1 Error\n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n4 Warnings\n\n\n\n\n:warning:\nAuthor @hjanuschka is not a contributor\n\n\n:warning:\nExternal contributors should not modify gemspec files\n\n\n:warning:\nPull Request is Work in Progress\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Message\n\n\n\n\n:book:\nTests were updated / added\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Error\n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry\n\n\n\n\n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @lumaxis is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @marcelofabri is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @marcelofabri is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @dbgrandi is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n2 Warnings\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nPull Request is Work in Progress\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><strike><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @marcelofabri is not a contributor\n\n\n:white_check_mark:\nExternal contributors should not modify gemspec files\n\n\n:white_check_mark:\nPull Request is Work in Progress\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n3 Warnings\n\n\n\n\n:warning:\nAuthor @mfurtak is not a contributor\n\n\n:warning:\nExternal contributors should not modify gemspec files\n\n\n:warning:\nPull Request is Work in Progress\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n1 Warning\n\n\n\n\n:warning:\nAuthor @marcelofabri is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Jolly good show.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        2 Warnings\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Woo!\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Nice work.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @Antondomashnev is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Nice work.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n\n\n\n\n\n            2 Warnings\n\n      \n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Error\n\n  </th>\n </tr>\n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @MatejBalantic is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Woo!\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Tests were not updated</del></td>\n  </tr>\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Good on 'ya.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @segiddins is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            2 Warnings\n\n      \n\n\n\n\n:warning:\nAuthor @segiddins is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            2 Warnings\n\n      \n\n\n\n\n:warning:\nAuthor @segiddins is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Congrats.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            2 Warnings\n\n      \n\n\n\n\n:warning:\nAuthor @neonichu is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        2 Warnings\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Congrats.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @ReadmeCritic is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @nwest is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @nwest is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Woo!\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jeroenvisser101 is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @jhersh is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @gabro is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Nice work.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nAuthor @dbgrandi is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Nice work.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            2 Warnings\n\n      \n\n\n\n\n:warning:\nAuthor @dbgrandi is not a contributor\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nAuthor @dbgrandi is not a contributor\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Nice work.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Woo!\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            :white_check_mark: Congrats.\n\n      \n\n\n\n\n:white_check_mark:\n@justMaku is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Congrats.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Jolly good show.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Good on 'ya.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            :white_check_mark: Congrats.\n\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n\n\n\n\n\n            1 Message\n\n      \n\n\n\n\n:book:\n@gabro is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Congrats.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Message\n\n      \n\n\n\n\n:book:\n@starsirius is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Good on 'ya.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n\n            1 Message\n\n      \n\n\n\n\n:book:\n@justMaku is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Congrats.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Woo!\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        1 Warning\n\n  </th>\n </tr>\n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del>Please provide a summary in the Pull Request description</del></td>\n  </tr>\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Yay.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Well done.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@neonichu is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@rbuussyghin is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@DanToml is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@DanToml is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n:white_check_mark:\nExternal contributor has edited the Gemspec\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\n@dbgrandi is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n        :white_check_mark: Jolly good show.\n\n  </th>\n </tr>\n\n\n\n      <tr>\n    <td>:white_check_mark:</td>\n    <td data-sticky=\"true\"><del><p>Please include a CHANGELOG entry.\n\nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n\n            1 Warning\n\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ffittschen is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ashfurrow is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ashfurrow is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          3 Errors\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:no_entry_sign:\nFailing due to documentation issues, see below.\n\n\n:no_entry_sign:\nThe core plugins are not at 100% doc\u2019d - see below:\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n:white_check_mark:\nExternal contributor has edited the Gemspec\n\n\n\n\n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\n@k0nserv is not a contributor yet, would you like to join the Danger org?\n\n\n\nCore Docs Errors\n[!] Failed\nErrors\n- Description Markdown - DangerfileGitLabPlugin (class):\n  - Above your class you need documentation that covers the scope, and the usage of your plugin.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L4#-L6\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:4\n- Examples - DangerfileGitLabPlugin (class):\n  - You should include some examples of common use-cases for your plugin.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L8#-L27\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:4\nWarnings\n- Tags - DangerfileGitLabPlugin (class):\n  - This plugin does not include @tags tag1, tag2 and thus will be harder to find in search.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L30\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:4\n- References - DangerfileGitLabPlugin (class):\n  - Ideally, you have a reference implementation of your plugin that you can show to people, add @see org/repo to have the site auto link it.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L29\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:4\n- Return Type - pr_title (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:25\n- Return Type - pr_body (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:33\n- Return Type - pr_author (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:41\n- Return Type - branch_for_merge (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:57\n- Return Type - base_commit (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:65\n- Return Type - head_commit (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb:73\n```\nFiles:           5\nModules:         1 (    0 undocumented)\nClasses:         5 (    1 undocumented)\nConstants:       0 (    0 undocumented)\nAttributes:      0 (    0 undocumented)\nMethods:        48 (    2 undocumented)\n 94.44% documented\nUndocumented Objects:\n(in file: lib/danger/danger_core/plugins/dangerfile_gitlab_plugin.rb)\nDanger::DangerfileGitLabPlugin\nDanger::DangerfileGitLabPlugin.new\nDanger::DangerfileGitLabPlugin.instance_name\n```\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bentrengrove is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@paulcbetts is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nhi @orta\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@k0nserv is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@henriwatson is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nThe core plugins are not at 100% doc'd - see: \n</p>\n<p>\n\n\n:white_check_mark:\nThe core plugins are not at 100% doc'd - see: \n</p>\n<p>Files:           4\nModules:         1 (    0 undocumented)\nClasses:         4 (    0 undocumented)\nConstants:       0 (    0 undocumented)\nMethods:        32 (    0 undocumented)\n 100.00% documented</p>\n<p>\n\n\n:white_check_mark:\nThe core plugins are not at 100% doc'd - see: \nFiles:           4\nModules:         1 (    0 undocumented)\nClasses:         4 (    0 undocumented)\nConstants:       0 (    0 undocumented)\nMethods:        32 (    0 undocumented)\n 100.00% documented</p>\n<p>\n\n\n\n\n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@champo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@champo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nThe file dangerfile_import_plugin.rb does not pass bundle exec danger plugins lint. We want high coverage, as user documentation is auto-generated from it.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dangermcshane is not a member of the Danger organisation, would you like an invitation? It's optional, and is part of the Moya Community Continuity.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@champo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@epologee is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bentrengrove is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n:white_check_mark:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dblock is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dblock is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@LeFnord is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ReadmeCritic is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\ndanger.gemspec#L13 - Testing outside of changeset\n\n\n:white_check_mark:\n.gemspec modified\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@hanneskaeufler is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@hanneskaeufler is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\nHello\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\nHello\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@hanneskaeufler is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@hanneskaeufler is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@cysp is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@suchow is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@suchow is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jamtur01 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@mtitolo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@connorshea is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@vittoriom is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@jk is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          2 Errors\n      \n\n\n\n\n:no_entry_sign:\nFailing due to documentation issues, see below.\n\n\n:no_entry_sign:\nThe core plugins are not at 100% doc\u2019d - see below:\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@HeEAaD is not a contributor yet, would you like to join the Danger org?\n\n\n\nCore Docs Errors\n[warn]: @param tag has unknown parameter name: repo \n    in file `/home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_danger_plugin.rb' near line 59\n[!] Failed\nErrors\n- Description Markdown - DangerfileBitbucketServerPlugin (class):\n  - Above your class you need documentation that covers the scope, and the usage of your plugin.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L4#-L6\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:5\n- Examples - DangerfileBitbucketServerPlugin (class):\n  - You should include some examples of common use-cases for your plugin.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L8#-L27\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:5\n- Description - pr_json (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:20\n- Description - pr_title (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:24\n- Description - pr_description (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:28\n- Description - pr_author (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:32\n- Description - pr_link (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:36\n- Description - branch_for_base (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:40\n- Description - branch_for_head (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:44\n- Description - base_commit (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:48\n- Description - head_commit (method):\n  - You should include a description for your method.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L40#-L41\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:52\nWarnings\n- Tags - DangerfileBitbucketServerPlugin (class):\n  - This plugin does not include @tags tag1, tag2 and thus will be harder to find in search.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L30\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:5\n- References - DangerfileBitbucketServerPlugin (class):\n  - Ideally, you have a reference implementation of your plugin that you can show to people, add @see org/repo to have the site auto link it.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L29\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:5\n- Return Type - pr_json (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:20\n- Return Type - pr_title (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:24\n- Return Type - pr_description (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:28\n- Return Type - pr_author (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:32\n- Return Type - pr_link (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:36\n- Return Type - branch_for_base (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:40\n- Return Type - branch_for_head (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:44\n- Return Type - base_commit (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:48\n- Return Type - head_commit (method):\n  - If the function has no useful return value, use @return  [void] - this will be ignored by documentation generators.\n  - @see - https://github.com/dbgrandi/danger-prose/blob/v2.0.0/lib/danger_plugin.rb#L46\n  - /home/travis/build/danger/danger/lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb:52\n``\n[warn]: @param tag has unknown parameter name: repo \n    in filelib/danger/danger_core/plugins/dangerfile_danger_plugin.rb' near line 59\nFiles:           6\nModules:         1 (    0 undocumented)\nClasses:         6 (    1 undocumented)\nConstants:       0 (    0 undocumented)\nAttributes:      0 (    0 undocumented)\nMethods:        62 (   11 undocumented)\n 82.61% documented\nUndocumented Objects:\n(in file: lib/danger/danger_core/plugins/dangerfile_bitbucket_server_plugin.rb)\nDanger::DangerfileBitbucketServerPlugin\nDanger::DangerfileBitbucketServerPlugin.new\nDanger::DangerfileBitbucketServerPlugin.instance_name\nDanger::DangerfileBitbucketServerPlugin#pr_json\nDanger::DangerfileBitbucketServerPlugin#pr_title\nDanger::DangerfileBitbucketServerPlugin#pr_description\nDanger::DangerfileBitbucketServerPlugin#pr_author\nDanger::DangerfileBitbucketServerPlugin#pr_link\nDanger::DangerfileBitbucketServerPlugin#branch_for_base\nDanger::DangerfileBitbucketServerPlugin#branch_for_head\nDanger::DangerfileBitbucketServerPlugin#base_commit\nDanger::DangerfileBitbucketServerPlugin#head_commit\n```\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bogren is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Nice work.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Good on 'ya.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@phillfarrugia is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Yay.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Congrats.\n      \n\n\n\n\n:white_check_mark:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@kylejm is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@JuanitoFatas is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@JuanitoFatas is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dblock is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dblock is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Jolly good show.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@connorshea is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@HeEAaD is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@HeEAaD is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@tikitu is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dblock is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@WolfgangD is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@thiagofelix is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@daniel-beard is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nThis PR has no changes at all, this is likely an issue during development.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          :white_check_mark: Woo!\n      \n\n\n\n\n:white_check_mark:\nPR is classed as Work in Progress\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@notjosh is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@felipesabino is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@felipesabino is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@fwal is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nTests have failed, see below for more information.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@fwal is not a contributor yet, would you like to join the Danger org?\n\n\n\nTests:\n| File | Name |\n| --- | --- |\n| github_spec.rb | Danger::RequestSources::GitHub valid server response branch setup setups the danger branches |\n| github_spec.rb | Danger::RequestSources::GitHub valid server response branch setup fetches when the branches are not in the local store |\n| gitlab_spec.rb | Danger::RequestSources::GitLab valid server response setups the danger branches |\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          :white_check_mark: Well done.\n      \n\n\n\n\n:white_check_mark:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bruno-rocha-movile is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@notjosh is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bruno-rocha-movile is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikolaykasyanov is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@Antondomashnev is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bruno-rocha-movile is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bruno-rocha-movile is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n  0 Errors\n  1 Warning: .gemspec modified\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@kivikakk is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@Buju77 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@krin-san is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @nikolaykasyanov is not a cont...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikolaykasyanov is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@rzane is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@connorshea is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@barbosa is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. <!--\n  0 Errors\n  0 Warnings\n  1 Message: @chris-fuller is not a contrib...\n  0 Markdowns\n--!>\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@chris-fuller is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @turekj is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@turekj is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @bartoszj is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@bartoszj is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please include a CHANGELOG ent...\n  0 Warnings\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: .gemspec modified\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @leonhartX is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@leonhartX is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @johnlinvc is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@johnlinvc is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @leonhartX is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@leonhartX is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @sunshinejr is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@sunshinejr is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @hotbott is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@hotbott is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @giginet is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@giginet is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: :tada:\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n:tada:\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @fmartingr is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@fmartingr is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  2 Errors: Please provide a summary in th...\n  1 Warning: Tests were not updated\n  1 Message: @a2 is not a contributor yet, ...\n  0 Markdowns\n\n\n\n\n\n\n          2 Errors\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@a2 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @RishabhTayal is not a contrib...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@RishabhTayal is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @RishabhTayal is not a contrib...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@RishabhTayal is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @allewun is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@allewun is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @fmartingr is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@fmartingr is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @RishabhTayal is not a contrib...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@RishabhTayal is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please include a CHANGELOG ent...\n  1 Warning: Tests were not updated\n  1 Message: @RishabhTayal is not a contrib...\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@RishabhTayal is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @4oby is not a contributor yet...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@4oby is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @sleekybadger is not a contrib...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@sleekybadger is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @giginet is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@giginet is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @giginet is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@giginet is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @ffittschen is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ffittschen is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @nikhilmat is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikhilmat is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @anreitersimon is not a contri...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@anreitersimon is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @atelic is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@atelic is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please include a CHANGELOG ent...\n  1 Warning: Tests were not updated\n  1 Message: @sakebook is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@sakebook is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: .gemspec modified\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @litmon is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@litmon is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @Palleas is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@Palleas is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please provide a summary in th...\n  1 Warning: Tests were not updated\n  1 Message: @Palleas is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease provide a summary in the Pull Request description\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@Palleas is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @viktorbenei is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@viktorbenei is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please include a CHANGELOG ent...\n  1 Warning: Tests were not updated\n  1 Message: @showpony is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@showpony is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @asos-petergoldsmith is not a ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@asos-petergoldsmith is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @raven is not a contributor ye...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@raven is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @ashfurrow is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ashfurrow is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  2 Warnings: External contributor has edite...\n  1 Message: @nikhilsh is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikhilsh is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @serima is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@serima is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @dvlprliu is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@dvlprliu is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @petester42 is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@petester42 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @nikhilsh is not a contributor...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikhilsh is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @ghiculescu is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@ghiculescu is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @edvakf is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@edvakf is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @daveallie is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@daveallie is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @pedrovieira is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@pedrovieira is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: This PR has no changes at all,...\n  0 Warnings\n  1 Message: @notimewaste is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nThis PR has no changes at all, this is likely an issue during development.\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@notimewaste is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @marocchino is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@marocchino is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @AliSoftware is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@AliSoftware is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @makadaw is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@makadaw is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @cyupa is not a contributor ye...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@cyupa is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @nikolaykasyanov is not a cont...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@nikolaykasyanov is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @k15a is not a contributor yet...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@k15a is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @caffeineflo is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@caffeineflo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  1 Message: @caffeineflo is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@caffeineflo is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @mxstbr is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@mxstbr is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @allewun is not a contributor ...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@allewun is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @orj is not a contributor yet,...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@orj is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @mbogh is not a contributor ye...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@mbogh is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @neilkimmett is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@neilkimmett is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Warnings\n  1 Message: @m1guelpf is not a contributor...\n  1 Markdown\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@m1guelpf is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  2 Errors: Failing due to documentation i...\n  1 Warning: Tests were not updated\n  1 Message: @copini is not a contributor y...\n  1 Markdown\n\n\n\n\n\n\n          2 Errors\n      \n\n\n\n\n:no_entry_sign:\nFailing due to documentation issues, see below.\n\n\n:no_entry_sign:\nThe core plugins are not at 100% doc\u2019d - see below:\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@copini is not a contributor yet, would you like to join the Danger org?\n\n\n\nCore Docs Errors\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @saantiaguilera is not a contr...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@saantiaguilera is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @davevdveen is not a contribut...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@davevdveen is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @tolkien16 is not a contributo...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@tolkien16 is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @neilkimmett is not a contribu...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@neilkimmett is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  0 Warnings\n  1 Message: @JoeSSS is not a contributor y...\n  0 Markdowns\n\n\n\n\n\n\n          1 Message\n      \n\n\n\n\n:book:\n@JoeSSS is not a contributor yet, would you like to join the Danger org?\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: .gemspec modified\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: .gemspec modified\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Failing due to documentation i...\n  0 Warnings\n  0 Messages\n  1 Markdown\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nFailing due to documentation issues, see below.\n\n\n\nCore Docs Errors\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  2 Warnings: External contributor has edite...\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Tests have failed, see below f...\n  0 Warnings\n  0 Messages\n  1 Markdown\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nTests have failed, see below for more information.\n\n\n\nTests:\nFile | Name|\n--- | ---|\nappcenter_spec.rb | Danger::Appcenter.validates_as_pr? validates when the required env variables are set|\nappcenter_spec.rb | Danger::Appcenter#new sets the repo_slug|\nappcenter_spec.rb | Danger::Appcenter#new sets the repo_slug from a repo https url|\nappcenter_spec.rb | Danger::Appcenter#new sets the repo_slug from a repo with two slashes in it|\nappcenter_spec.rb | Danger::Appcenter#new sets the repo_url|\nappcenter_spec.rb | Danger::Appcenter#new sets the repo_slug from a repo with dots in it|\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  2 Warnings: External contributor has edite...\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          2 Warnings\n      \n\n\n\n\n:warning:\nExternal contributor has edited the Gemspec\n\n\n:warning:\n.gemspec modified\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  0 Errors\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n  1 Error: Please include a CHANGELOG ent...\n  1 Warning: Tests were not updated\n  0 Messages\n  0 Markdowns\n\n\n\n\n\n\n          1 Error\n      \n\n\n\n\n:no_entry_sign:\nPlease include a CHANGELOG entry. \nYou can find it at CHANGELOG.md.\n\n\n\n\n\n\n\n\n          1 Warning\n      \n\n\n\n\n:warning:\nTests were not updated\n\n\n\n\n  Generated by :no_entry_sign: Danger\n\n. \n\n\n:white_check_mark:\nCHANGELOG.md#L3 - Testing inline docs\n\n\n:white_check_mark:\n\nTesting inline docs\n\n\n\n. \n\n\n:warning:\nTesting inline docs\n\n\n\n. \n\n\n:book:\nSure thing\n\n\n\n. ",
    "jk": "@hjanuschka I just tested it, new pushs to the branch (which I specified as source of the MR) trigger various X-Gitlab-Event: Build Hook web hook triggers if you enabled web hooks for build events. But you're right, there is no reference that this gitlab-ci build is building a commit which is related to a MR, albeit the MR page references the new commit's build run on top of the page as well as down in the comments.\nPerhaps we should open an issue over on gitlab-ce's issue tracker? Did you already did this? I'm happily create one, if not.\n. Since I did not find an issue on gitlab's issue tracker I just created one: https://gitlab.com/gitlab-org/gitlab-ce/issues/14654\n. I just want to mention another place: I'm doing my first steps with Danger and GitLab+Jenkins right now. I'm just through the bundle init+install and bundle exec danger init process. When I test it via bundle exec danger local without setting any environment variables I get:\nDanger local requires a repository hosted on GitHub.com or GitHub Enterprise.\n/usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/lib/danger/ci_source/local_git_repo.rb:52:in `initialize': No recent pull requests found for this repo, danger requires at least one PR for the local mode. (RuntimeError)\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/lib/danger/danger_core/environment_manager.rb:20:in `new'\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/lib/danger/danger_core/environment_manager.rb:20:in `initialize'\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/lib/danger/commands/local.rb:70:in `new'\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/lib/danger/commands/local.rb:70:in `run'\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/claide-1.0.0/lib/claide/command.rb:334:in `run'\n        from /usr/local/var/rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/danger-3.0.1/bin/danger:5:in `<top (required)>'\n        from /usr/local/var/rbenv/versions/2.2.2/bin/danger:23:in `load'\n        from /usr/local/var/rbenv/versions/2.2.2/bin/danger:23:in `<main>'\nSo this is another place where it exclusively mentions GitHub. \n. I investigated some more:\n- GIT_URL_1 is same as GIT_URL in jenkins build job with only one git repo\n- GIT_URL_2 in case the merge request came from a fork, this is the forked repo URL\nSince the gitlab-plugin documentation instructs one to add the Merge Before Build additional behavior it's safe to assume GIT_URL = GIT_URL_1 (just tested that and made sure git log shows the commits from the forked repo).\nSo I'm doing the following workaround at the moment:\nbash\nexport GIT_URL=$GIT_URL_1\n. Sure why not. I've a couple of gitlab issues coming :)\n. Could work:\nruby\n    def exec(string)\n      `LANG=en_US git #{string}`.strip\n    end\n. @orta So this issue can be closed?\n. I've got GitLab + Jenkins running in a proof of concept state. So no real project yet. It works after working around some\nminor issues. \nShould I provide you the output of env from the build job? I can get that tomorrow when I'm back in the office. \n. > Yeah if you could get me printenv from a merge request build that'd be nice :)\n@k0nserv Here you go, but take note that I do two workarounds in the buildjobs to stop danger from complaining:\nbash\nexport GIT_URL=GIT_URL_1\nexport LANG=en_US\nHere is the (somewhat redacted) output from env:\nbash\nRBENV_VERSION=2.2.0\nBUILD_URL=https://build.host.tld/job/playground-danger-php-test/49/\nM2=/opt/maven/current/bin\nDANGER_GITLAB_API_BASE_URL=https://git.host.tld/api/v3\nHUDSON_SERVER_COOKIE=e62815d80ee563ed\nSHELL=/bin/bash\nTERM=xterm-256color\nBUILD_TAG=jenkins-playground-danger-php-test-49\nQTDIR=/usr/lib64/qt-3.3\nGIT_PREVIOUS_COMMIT=01fa2a1b738831064d09b5b82348fc3f4674c47d\nQTINC=/usr/lib64/qt-3.3/include\ngitlabTargetRepoHttpUrl=https://git.host.tld/playground/danger-php-test.git\ngitlabSourceRepoURL=git@git.host.tld:playground/danger-php-test.git\nROOT_BUILD_CAUSE=SCMTRIGGER\nWORKSPACE=/var/lib/jenkins/jobs/playground-danger-php-test/workspace\nJOB_URL=https://build.host.tld/job/playground-danger-php-test/\nUSER=jenkins\nRBENV_ROOT=/var/lib/jenkins/.rbenv\ngitlabMergeRequestTitle=WIP: Something #trivial\ngitlabUserEmail=firstname.lastname@host.tld\ngitlabTargetBranch=master\ngitlabTargetRepoSshUrl=git@git.host.tld:playground/danger-php-test.git\nGIT_AUTHOR_NAME=Build Server\nGIT_COMMITTER_NAME=Build Server\ngitlabTargetNamespace=playground\nNLSPATH=/usr/dt/lib/nls/msg/%L/%N.cat\nGIT_COMMIT=ba5c4fa61a97ec1c7cbb8c53e9c8591a78344aa7\nJENKINS_HOME=/var/lib/jenkins\nROOT_BUILD_CAUSE_SCMTRIGGER=true\nPATH=[redacted]:/sbin:/usr/sbin:/bin:/usr/bin\nBUILD_CAUSE_SCMTRIGGER=true\ngitlabTargetRepoName=danger-php-test\nGIT_COMMITTER_EMAIL=jenkins@build.host.tld\nPWD=/var/lib/jenkins/jobs/playground-danger-php-test/workspace\ngitlabSourceNamespace=playground\nHUDSON_URL=https://build.host.tld/\nLANG=en_US   \u2190 comes from export LANG=en_US\nJOB_NAME=playground-danger-php-test\ngitlabUserName=Firstname Lastname\ngitlabSourceRepoHttpUrl=https://git.host.tld/playground/danger-php-test.git\nBUILD_DISPLAY_NAME=#49\ngitlabActionType=MERGE\ngitlabSourceRepoName=danger-php-test\nXFILESEARCHPATH=/usr/dt/app-defaults/%L/Dt\nBUILD_CAUSE=SCMTRIGGER\nBUILD_ID=49\nJENKINS_URL=https://build.host.tld/\nRBENV_SHELL=jenkins\nJOB_BASE_NAME=playground-danger-php-test\nGIT_PREVIOUS_SUCCESSFUL_COMMIT=01fa2a1b738831064d09b5b82348fc3f4674c47d\nHOME=/var/lib/jenkins\nSHLVL=3\nM2_HOME=/opt/maven/current\ngitlabSourceBranch=feature/danger4\ngitlabSourceRepoHomepage=https://git.host.tld/playground/danger-php-test\nGIT_BRANCH=danger-php-test/feature/danger4\nJENKINS_SERVER_COOKIE=[redacted]\nEXECUTOR_NUMBER=1\nGIT_URL=git@git.host.tld:playground/danger-php-test.git   \u2190 comes from export GIT_URL=GIT_URL_1\nDANGER_GITLAB_HOST=git.host.tld\nNODE_LABELS=master\nLOGNAME=jenkins\ngitlabMergeRequestIid=24\nQTLIB=/usr/lib64/qt-3.3/lib\nCVS_RSH=ssh\nHUDSON_HOME=/var/lib/jenkins\nNODE_NAME=master\nLESSOPEN=|/usr/bin/lesspipe.sh %s\nBUILD_NUMBER=49\nGIT_URL_2=git@git.host.tld:playground/danger-php-test.git\nGIT_URL_1=git@git.host.tld:playground/danger-php-test.git\nHUDSON_COOKIE=34ca39c0-92c2-40de-a29f-00383b4b06db\nDANGER_GITLAB_API_TOKEN=[redacted]\nGIT_AUTHOR_EMAIL=jenkins@build.host.tld\ngitlabBranch=feature/danger4\ngitlabMergeRequestId=351\nG_BROKEN_FILENAMES=1\ngitlabSourceRepoSshUrl=git@git.host.tld:playground/danger-php-test.git\n_=/bin/env\n. Perhaps it's a good idea to make that configurable via a cli argument. So depending on your use case it can fail the build with an exit code != 0. (In my case danger is the last thing the build job runs)\n. I agree\n\nAgree, perhaps danger --fail-on-errors\n\nNevertheless this should also be implemented. We have some folks here, where their main source of information about a problem with the software is their jenkins build monitor instead of a merge request status. For the concrete naming, I think fail on errors is fine.\n. Just came across this issue. Looks like the linked gitlab issues are closed/merged and the API describes adding inline comments to commits (don't see adding comments/notes on MR here\u2026). So this feature might become possible now?. ",
    "connorshea": "@k0nserv I'll gladly support you internally, would love to see support for GitLab in Danger :) We may even use it for GitLab CE :D\n14654 doesn't seem to be about adding a GITLAB_MERGE_REQUEST environmental variable, is there an issue open for it that you know of/would you like to open one?\n. @k0nserv @hjanuschka also, the gitlab gem is a community-created gem. While there is a current maintainer, he wasn't given the ability to push updates to RubyGems.\nWe may have to contact RubyGems support and try to get access to the gem ourselves so we can update it, or we'll have to work with the current maintainer to release the gem under a different name. Not sure which is preferable.\n. Oh, and to be clear we have tried getting into contact with Narkoz, but he seems to have essentially disappeared.\n. Can we close this now that GitLab support is included? :)\n. I'm undecided as to whether we should try to get control of the gem or create a new one, I've asked fellow GitLabbers for their input.\nIt'd also be good to have your thoughts, @asedge, seeing as you're the primary maintainer currently.\n. @k0nserv wanted to check up on this, besides the gitlab gem, what else is blocking this?\n(Apologies if this was already asked and I forgot \ud83d\ude48)\n. @deanpcmad thanks \u2764\ufe0f Conflicts on that MR\n. @k0nserv @orta does GitHub not strip out the data attributes? I'm looking at the Danger table in this thread and there don't seem to be any data attributes.\n. Hey all, we've gotten the current maintainer of the GitLab gem able to ship new releases! 3.7.0 is now out! https://rubygems.org/gems/gitlab\n. @orta we currently have an issue (https://gitlab.com/gitlab-org/gitlab-ce/issues/16550) and merge request (https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/4474) open for this feature in GitLab.\nWould it be acceptable to open an issue for this right now or should I wait until GitLab is updated to support it?\nAnd sorry for hijacking this PR, I just didn't want to open an issue if it'd just be closed immediately anyway :)\n. @orta that'll work for gitlab.com and github.com, but not self-hosted GitLab CE/EE or GitHub Enterprise. If it's not obvious what the platform is, I guess the user should be asked to choose from a selection of options.\n. @orta I'm not a huge fan of options either, I suppose you could also parse the URL and look for github/gitlab, e.g. gitlab.colostate.edu would suggest GitLab. If that doesn't work either it should make the user choose. Should be possible to override as well.\n. @orta would it be reasonable to have issue labels for issues specific to certain SCM providers, e.g. GitHub, GitLab, Bitbucket?\n. Per the docs, you can also use api/v3/projects/:id/merge_requests?iid=42, although I assume that'd be limited by whether or not you have the project ID and whether or not the gitlab gem supports that endpoint.\nWe don't use Danger with GitLab currently because we only use GitLab CI for our projects, so unfortunately I don't have anything to test with.\n. @k0nserv with the v3 API we had both id and iid which were per-project or instance-wide IDs, now with v4 I believe we only use per-project IDs.\nSee https://docs.gitlab.com/ce/api/v3_to_v4.html. @k0nserv I assume Drone is currently using the v3 API to integrate with us, if they upgrade to v4 they'll have to switch over to using per-project :). @k0nserv 8.17 only has v3 of the API, you'll need 9.0+ for v4. @k0nserv we may have implemented a basic version of the v4 API in 8.17, I think? But the rest of the changes were made in 9.0.. @juanitofatas the README here or in the other project? :)\n. @orta awesome, I'll see about getting that endpoint in our API and we can continue from there :)\n. @JanStevens sorry for not responding to this, take a look at the comments on https://gitlab.com/gitlab-org/gitlab-ce/issues/20700 for progress on our side of things.. @orta --immutable-comment, --static-comment, --no-modify-comments?\n. Also wondering if this should mention a DANGER_GITLAB_API_TOKEN if you're using GitLab?\n. Would you like that here or in a separate PR?\n. This may not be what you meant, but I figured this was better than going to the 5th header level, I can change it if you disagree.\n. Do we have a style guide or anything establishing this? I saw a few different misspellings of doesn't/does not so I wasn't sure which to use. \n. Is this intentional?\n. @orta this just got merged with this in it :P\n. yep, I think we should probably move to v4 soon but for now this is fine :). ",
    "dbgrandi": "Definitely. I've got Octokit working with our GH instance now.\n. Started here: https://github.com/danger/danger/pull/139/files\n. \n. :+1:\n. Awesome. Much cleaner!\n. :rocket: \n. \n. This is in the works, but will take some time. :wink: \n. :ship: \n. Fixed --version in #214, but it did not add a -v alias.\n. Looks good! :telescope: \nI've still got a bunch to do on refactoring for the plugin manager.\n. :+1:\n. :+1: :tada: \n. :+1:\n. Looks good, except for the \u274c's\n. @lukewar You're right, that's a confusing name.\nWe should definitely update the README and I'm on board with changing the name to DANGER_GITHUB_API_URL.\nI do not know enough about the expected URL of the API vs a host in a corporate environment to say that we should automatically build the URL based on the provided host.\n. \n. Excellent stuff!\n. \ud83c\udf5e \ud83c\udf73 \ud83c\udf75 \ud83d\udc4d \n. Looking good! :+1:\n. :+1:\n. (We should have a Danger rule that ensures a change to the .gemspec has a version restriction.)\n. Oh, looks like this may partially help https://github.com/danger/danger/issues/952. nope, that was mid refactor\n. You left the backtick around modified_files.include? on the previous line open, so the following lines may show up as monospaced.\n. Should this be ActionTemplate.rb.template or something to emphasize that it's not just an .rb file?\n. Are these in a particular order? The ones below are all :abc:\n. why is plugin_parser.rb explicitly removed?\n. I think name is already a string.\n. I went this way to also get caching of GitHub API calls that are made from within the Dangerfile or plugins. Figured there is enough logic in how to properly cache that I didn't want to duplicate it.\n. This is duplicate logic from https://github.com/danger/danger/blob/master/lib/danger/commands/runner.rb#L29\n. pr_title -> github.title\n. Isn't 2.0.1 already released?\n. Wrong PR?\n. ",
    "lumaxis": "Nice! That was quick :raised_hands: \n. ",
    "valeriomazzeo": "I keep getting this error either my account is owner / admin and all the flags for the token are switched on.\nDo you guys have any idea what could be the cause?\nPS: I am using travis-ci.\n. Easy... I wasn't accusing anyone, just trying to help troubleshooting and pointing you guys to (possibly) the right direction.\n\n... How come no one noticed before?\n\nIt was more intended as: \"is this not working only for me?\"\nI have reason to believe it wasn't working before either..\nUnfortunately, I have no way to check where latest_pr_commit_ref was previously set without fiddling in the project history. I am not asking anyone to fix it right now, just an heads up...\n. Right I see, it makes sense.\nIf putting danger in the script phase then it fails the build as travis (context) for example.\nI was using it in the after_script so I was expecting to see travis succeeding (because of the build compiling), but then danger failing the build because of the custom rules showing the danger/danger context.\nAlso, I am using private repo in this case. Mistery resolved, was driving me mad \ud83c\udf89\n. Can I also suggest to change the error message \nabort(\"\\nDanger has failed this build...\nand print the exception instead?\n. ",
    "NachoSoto": "I'm running into this too. I'm using bundle exec danger --fail-on-errors=false and I still get:\nDanger has failed this build. \nFound 2 errors and I don't have write access to the PR to set a PR status.\nWhich I don't understand because the token has all repo permissions:\n\nAnd it's actually able to send comments.. I just switched from danger-js (see https://github.com/danger/danger-js/issues/435) and this is happening to me too on CircleCI 2.0.. ",
    "JuanitoFatas": "Atom already recognized Dangerfile\nhttps://github.com/atom/language-ruby/blob/49229b7b6e81fa29c64b653408a2c910ceee9b84/grammars/ruby.cson#L14\n. Highlighting has been added https://github.com/github/linguist/pull/3333.. I'm working on this \ud83d\ude04 \n. Implemented in #503.\n. danger local now actually will find the most recent PR. But in v3.5.1 we introduced a new command: danger pr, please try it. Thank you for using danger! <3\n. Now we supports bitbucket cloud (and API), bitbucket server (and API) \ud83c\udf89 , close this issue \u263a\ufe0f .\n. danger local now pick the most recent PR if you don't specify.\n. Implemented in #412.\n. Shipped v3.5.1 with danger pr command that can run against an open PR, please give it a try \ud83c\udf89 Thanks!\n. v3.4.0 fixed it. \ud83c\udf89 \n. Please try v3.5.3, thanks!\n. Hello friends, could you try latest danger v3.x?\n. Hello @mtitolo, could you please try the danger pr command introduced in v3.5.1? Thanks \u2764\ufe0f \n. Fixed in #634.\n. Sorry, do we care about the error? Otherwise we can use popen2.\n\n::popen2 is similer to ::popen3 except it doesn't make a pipe for the standard error stream.\nOpen3::popen2\n. Updated and I added a test to make sure \ud83d\udcaa \n. @kylejm Now danger \u26a1 correctly inform you, my friend \ud83d\ude0a Please upgrade to v3.4.0, thanks!\n\n\n. > I try to keep the CHANGELOG user facing ( I'll update the PR template to mention that ) but I'm happy to have this one in there \ud83d\udc6f\nI'll remember it, thanks! \ud83d\udcd4 \n\nWould you like to join the org? as a part of Moya Community Continuity - you're welcome to participate in PRs or help out at a level that works for you\n\nYes I would like to join, thank you! \u2764\ufe0f \n. > I think we should probably skip the saving to the home and just always use the API? I doubt we'd be causing enough traffic to be a problem to rubygems. This greatly simplifies the windows support, and the complexity tradeoff for the feature\nSounds good to me.\n\nWe could change the message to let people know what the latest version is too ?\n\n\ud83d\udc4d \n. Apart from 3 offesens:\n\nThis PR is good to go. \ud83d\udc11 \n. Implemented in #583.\n. in favor of #511\n. How did you know this is token not present from the build \ud83d\ude05? \nWhen token is absent, we currently raises an error:\nruby\nraise \"No API token given, please provide one using `DANGER_GITHUB_API_TOKEN`\" if !@token && !support_tokenless_auth\n. Implemented in https://github.com/danger/danger/pull/579.\n. v3.4.0 should help!\n. So this is actually not an issue, how about we put it in Wiki (@orta, seems disabled?) / a document in the repository? :)\n. @k0nserv cool, opened an issue for the site.\n@connorshea wanna add to README? :)\n. Here, the other issue is to work on the http://danger.systems website \ud83d\ude47 \n. i merged it when 5/5 checks ok but now 4/5? Hmm...\n. We also support bitbucket server? :)\n. > Is the bitbucket support merged?\nYea merged in https://github.com/danger/danger/pull/496, shipped yesterday in 3.2.0. :)\n. It now named correctly:\n- dangerfile_bitbucket_cloud_plugin.rb#L106\n- dangerfile_bitbucket_server_plugin.rb#L106\n. The error looks like we need to git init first \ud83e\udd14\n. > Sure, I'm not sure what we'd manage in there yet though \ud83d\udc4d\nI'll try to create one project that I would like to tackle.\n\nI threw some of the sort of things I'd put in a 'Proposal' issue\n\nCool.\n\nBut I'm not really a Kanban kind of person, best I get is this for my work stuff.\n\nYour Kanban looks amazing!\n\nCan use projects, close this issue.\n. @orta Sorry I forgot the [ci skip] again.\nhttps://github.com/danger/danger/pull/512#issuecomment-244566869\nTrying to be eco-friendly.\n. Log looks like a bug in https://github.com/dbgrandi/danger-prose.\nAs a temporary workaround you can change your Dangerfile:\nruby\nprose.check_spelling \"_posts/*.md\"\n. ~~Need to figure out how to remove the deleted file from here.~~\nThe root cause is that there is no diff (@git.diff is nil), so these methods are failing:\n- modified_files\n- added_files\nWhy diff is nil? hmmm... Looking into GitRepo.\nMaybe related: https://github.com/danger/danger/issues/160\nWill try to take a look again tomorrow.\n. More cases: https://travis-ci.org/danger/danger/builds/160615933 from #558.\n. Our code actually works:\n`` ruby\ncontext \"SwiftWeekly/swiftweekly.github.io #89\" do\n  def reproduce_pull_request_89(dir)\n    Dir.chdir dir do\n      # create SwiftWeekly/swiftweekly.github.io mastergit initecho \"swiftweekly.github.io\" > README.mdmkdir _drafts _postsgit add .git commit -m \"Init master\"`\n  # Create 2016-09-15-issue-38.md\n  `git checkout -b jp-issue-38 --quiet`\n  IO.write(\"_drafts/2016-09-15-issue-38.md\", \"init 2016-09-15-issue-38.md\")\n  `git add _drafts/2016-09-15-issue-38.md`\n  `git commit -m \"flesh out issue 38 based on suggestions from #75, #79\"`\n\n  # Update 2016-09-15-issue-38.md\n  IO.write(\"_drafts/2016-09-15-issue-38.md\", \"update 2016-09-15-issue-38.md\")\n  `git add _drafts/2016-09-15-issue-38.md`\n  `git commit -m \"address first round of review feedback\"`\n\n  # Move 2016-09-15-issue-38.md from _drafts/ to _posts/\n  `git mv _drafts/2016-09-15-issue-38.md _posts/2016-09-15-issue-38.md`\n  `git add .`\n  `git commit -m \"move issue 38 to _posts\"`\nend\n\nend\nit \"handles moved file correctly\" do\n    require \"danger/core_ext/file_list\"\n    require \"danger/scm_source/git_repo\"\nDir.mktmpdir do |dir|\n  Dir.chdir dir do\n    reproduce_pull_request_89(dir)\n\n    # == How the DangerfileGitPlugin doing under the hood\n    git = Danger::GitRepo.new\n    git.diff_for_folder(\".\", from: \"master\", to: \"jp-issue-38\")\n\n    added_files = Danger::FileList.new(git.diff.select { |diff| diff.type == \"new\" }.map(&:path))\n    # ======================================================================\n\n    expect(added_files).to eq [\"_posts/2016-09-15-issue-38.md\"]\n  end\nend\n\nend\nend\n```\n~~I think we missed to do git.diff_for_folder(\".\", from: \"master\", to: \"jp-issue-38\") somewhere.~~\nWe currently did diff_for_folder at here.\n\nI scraped SwiftWeekly/swiftweekly.github.io#89 as json.\n- The base commit sha is https://github.com/SwiftWeekly/swiftweekly.github.io/commit/300780cc5e569c28f5fd4d950cf87eeee612b95e (danger_base)\n- The head commit sha is \n  https://github.com/SwiftWeekly/swiftweekly.github.io/commit/f51ce4759205e31699f59ba6aebfcc2249f88016 (danger_head)\n- danger is using https://github.com/SwiftWeekly/swiftweekly.github.io/compare/300780cc5e569c28f5fd4d950cf87eeee612b95e...f51ce4759205e31699f59ba6aebfcc2249f88016:\ndm.env.scm.diff_for_folder(\".\", from: \"danger_base\", to: \"danger_head\")\n. > oh yes, yeah definitely, this whole section of github.rb is just asking to be vastly simplified + refactored now we've got a bunch of it tested + production'd\n\ud83d\ude46 will try to simplify in another PR.\n\nCould re-run build for AppVeyor? Thank you \ud83d\ude47 \n. LGTM, this is so cool \ud83d\ude0e \n. \ud83d\udcaf :shipit: \n. > just a conflict on the CHANGELOG\nResolved \ud83d\ude47 \n. > This failure is interesting:\n\nbundler: failed to load command: danger (/home/travis/build/danger/danger/bundle/ruby/2.0.0/bin/danger)\nRuntimeError: Could not find a Request Source for Danger::Travis\n  /home/travis/build/danger/danger/lib/danger/danger_core/environment_manager.rb:31:in `initialize'\n\nI see this error sometimes :sweat_smile:. Opened an issue: https://github.com/danger/danger/issues/562\n. I think this bug introduced by #558.\n. Fixed in https://github.com/danger/danger/pull/564.\n. > Nice one - yeah - this looks like it \ud83d\udc6f\n:bow: I am still verifying if this really fixes it \ud83d\ude05 \n. Understood, thanks!\n. @orta It seems this Pull Request fixes the problem of moving files, see a6dff6f. But please don't merge, after you approved, I will remove a6dff6f, then we can merge. \ud83d\ude47 \n. Only two Rubocop offenses and we are good to go! \ud83d\udc4d \n. > @JuanitoFatas want me to fix the Rubocop offenses? They were already in the master branch when I forked.\nFixed in https://github.com/danger/danger/pull/572. But there is one offense introduced in this PR \ud83d\ude05 \n. @thiagofelix Thanks \ud83c\udf89 and welcome to danger zone \ud83d\udeb8\n. @marcelofabri After #574 merged, we can release a new version. Sorry for the troubles there.\n. @orta Sorry need to release a new version 3.3.2 for this fix \ud83d\udd27.\n. \ud83c\udf89 \n. A bug is being caught \ud83d\ude0d, working on a fix \ud83d\udcaa\nLooks like plugin and corresponding specs not properly reset.\n. Do we also want to add .env_vars to the base class and raise an not implemented error? \ud83d\ude0a \n. \ud83d\udef3\u26f5\ud83d\udea2\u26f4\ud83d\udee5\ud83d\udea4\n. Allow me to rebase and fix the typo.\n. danger failed the PR. I sshed into the machine on CircleCI, and ran bundle exec danger --verbose :\n```\nubuntu@box1281:~$ cd danger\nubuntu@box1281:~/danger$ bundle exec danger --verbose\ngrep: specs/: No such file or directory\ngrep: specs/: No such file or directory\n\u26a0 1 Warning. Don't worry, everything is fixable.\nResults:\nWarnings:\n- [ ] PR is classed as Work in Progress\nubuntu@box1281:~/danger\n```\n. Some progress:\n```\n$ bin/danger local --use-merged-pr=2\nRunning your Dangerfile against this PR - https://github.com/juanitofatas/dangerdangerdanger/pull/1\nTurning on --verbose\nfatal: bad object a475ce65400679b6d85104348c9b372ee2dc90ba\nfatal: Not a valid branch point: 'a475ce65400679b6d85104348c9b372ee2dc90ba'.\nfatal: ambiguous argument 'danger_head': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git  [...] -- [...]'\n/Users/Juan/.gem/ruby/2.3.1/gems/git-1.3.0/lib/git/lib.rb:937:in command': git '--git-dir=/Users/Juan/dev/jf-danger/.git' '--work-tree=/Users/Juan/dev/jf-danger' merge-base 'danger_base' 'danger_head'  2>&1:fatal: Not a valid object name danger_head (Git::GitExecuteError)\n    from /Users/Juan/dev/jf-danger/lib/danger/scm_source/git_repo.rb:71:inmerge_base'\n    from /Users/Juan/dev/jf-danger/lib/danger/scm_source/git_repo.rb:61:in merge_base'\n    from /Users/Juan/dev/jf-danger/lib/danger/scm_source/git_repo.rb:15:indiff_for_folder'\n    from /Users/Juan/dev/jf-danger/lib/danger/commands/local.rb:107:in run'\n    from /Users/Juan/.gem/ruby/2.3.1/gems/claide-1.0.0/lib/claide/command.rb:334:inrun'\n    from bin/danger:5:in `'\n```\nError from scm.ensure_commitish_exists! head_commit:\n``` ruby\nmodule Danger\n  module RequestSources\n    class GitHub < RequestSource\n  def setup_danger_branches\n    # we can use a github specific feature here:\n    base_commit = self.pr_json[\"base\"][\"sha\"]\n    head_commit = self.pr_json[\"head\"][\"sha\"]\n\n    # Next, we want to ensure that we have a version of the current branch at a known location\n    scm.ensure_commitish_exists! base_commit\n    self.scm.exec \"branch #{EnvironmentManager.danger_base_branch} #{base_commit}\"\n\n    # OK, so we want to ensure that we have a known head branch, this will always represent\n    # the head of the PR ( e.g. the most recent commit that will be merged. )\n    scm.ensure_commitish_exists! head_commit\n    self.scm.exec \"branch #{EnvironmentManager.danger_head_branch} #{head_commit}\"\n  end\n\nend\n\nend\nend\n```\nThis seems to help:\n``` diff\ndiff --git a/lib/danger/scm_source/git_repo.rb b/lib/danger/scm_source/git_repo.rb\nindex 8ca656d..1aa123d 100644\n--- a/lib/danger/scm_source/git_repo.rb\n+++ b/lib/danger/scm_source/git_repo.rb\n@@ -37,7 +37,9 @@ module Danger\n     end\n def ensure_commitish_exists!(commitish)\n\n\nexec \"fetch\" if exec(\"--no-pager show #{commitish}\").empty?\nif exec(\"rev-parse --quiet --verify #{commitish}\").empty?\nexec \"fetch\"\n\nend\n     end\nprivate\n``\n. I'm trying to add more tests for Executor.\n. @orta 2124104 extracts logic toDangerfile#run. To testDangerfile#run` is very difficult, I'll tackle tomorrow. \ud83d\ude47 \n. sorry wrong repository.\n. > I was actual wondering if you were interested in trying to tackle the refactor from danger local to danger local and danger pr? e.g starting #518 from scratch?\n\n\nyes, I'm interested, will look into #518, thank you \ud83d\udc4d .\n. > Options are merged with Runner options here, so shown in help output danger local --help but I don't think they are used further.\nSorry for the trobules there \ud83d\ude05 , these optons doesn't apply to danger local, please upgrade to v3.4.0 \ud83d\ude47 \n. > I feel guilty about all these squash and merges - I feel like you don't get as much credit in the commits\nNo worries, as long as danger keeps going \ud83c\udf89 \n. I also experienced the RSpec Junit Formatter failures at local, opened an issue, any tips?\n. > Ah, well, then, I think it's fine to remove the library and the danger plugin for now\nruby\ndescribe \"#pr?\" do\n    it \"returns true if has a ci source\" do\n      with_travis_setup_and_is_a_pull_request do |env|\n        env_manager = Danger::EnvironmentManager.new(env, testing_ui)\n        expect(env_manager.pr?).to eq true\n      end\n    end\n  end\nIt still quits without exception when executed this line:\nruby\nenv_manager = Danger::EnvironmentManager.new(env, testing_ui)\nVery weird, \ud83d\ude13 \n. I found out why:\n``` ruby\nRequestSources::RequestSource.available_request_sources.each do |klass|\n  next unless self.ci_source.supports?(klass)\nrequest_source = klass.new(self.ci_source, env)\n  next unless request_source.validates_as_ci?\n  next unless request_source.validates_as_api_source?\n  self.request_source = request_source\nend\nraise_error_for_no_request_source(env, ui) unless self.request_source\n```\nThe request source did not pass the tests:\n- request_source.validates_as_ci?\n- request_source.validates_as_api_source?\nSo request_source is nil.\nThen we display error by cork, then exit(1). In our test setup, we redirect all cork outputs to StringIO, which caused the silent failure \ud83d\ude13 \n. > Ouch! - I wonder if we could do something around that\nMaybe we can raise an error when reqeust_source cannot be attained. Later PR?\n\nMaybe there's another way to exit, other than exit? :D\n\nActually, all methods (fail, raise, abort), uses exit under the hood. So the problem is mainly I'm not familiar with the test setup. This PR is good to merge.\n. > it occurs when an unnamed test is found - can you think of any tests we may have with no names?\nRSpec gives this spec:\nruby\n  it \"\" do\n    expect(1+1).to eq(2)\n  end\na default name:\n```\nDanger::Plugin\n  should forward unknown method calls to the dangerfile\n  creates an instance name based on the class name\n  should eq 2 <----------------\nFinished in 0.00228 seconds (files took 0.4083 seconds to load)\n3 examples, 0 failures\n```\n. > of course they do, RSpec is so comprehensive \u2600\ufe0f\nSo the failure is actually intermittent. Restart circle build now passed \ud83d\ude13 \n. This doesn't work https://github.com/danger/danger/blob/3028b4c01d05c36f4727523d960bc8b287b5e391/Dangerfile#L12 \ud83d\ude05 \n======> https://github.com/danger/danger/pull/604\n. > WRT: remote finding, you could switch to ignore all of that and expect people to put a full PR URL in there? This makes it really easy to test fork PRs?\n\ud83d\udc4d Yea, that's better. \nHowever, the failure is actually telling us if someone set their remote by HTTPS instead of SSH, the repo slug we found is incorrect. Only failed on Circle, wonder if Circle did something weird.\n. > Only failed on Circle, wonder if Circle did something weird.\nCircle mutated our remote url \ud83d\ude31 (Maybe it is because different Git version). Anyway, I made the Regexp more robust to also handle it in 35c0783 <3\n. TODO:\n- [x] danger pr works for fork PRs\n. TODO:\n- [x] fail fast if cannot find repo slug\n. LGTM \n\ud83d\udef3\u26f5\ud83d\udea2\u26f4\ud83d\udee5\ud83d\udea4\n. Implemented in #632.\n. @orta Do you use rake release to release a new version? Then we can hook chandler with rake release and we don't need travis to do for us. \n. > I also need to look into the encoding issue too, I guess maybe there's emoji in the PR or something.\nhttps://github.com/danger/danger/issues/409 we probably need to force_encoding(\"UTF-8\") for the incoming information.\n. @orta merge and release v3.5.2?\n. Awesome, thanks!\n. @orta We now moved to rebase and merge?\n\n. https://github.com/danger/danger/blob/2d734e13789a1075bf37feab4157d2f93b125689/.travis.yml#L28-L31 is not working \ud83d\ude13 \n. > Yeah, I wonder if the deploy scripts run on a different machine, they do say they run on 1.9.x\nLet's merge to see if 099e1c5 is working.\n. > Check out the end of the build results for circle, something really odd there\n\ud83d\udc49 https://github.com/rspec/rspec-core/issues/2337 Opened an issue on RSpec Core.\n. > Check out the end of the build results for circle, something really odd there\n\n\ud83d\udc49 rspec/rspec-core#2337 Opened an issue on RSpec Core.\n\nIt's from https://github.com/orta/rspec_junit_formatter/commit/00c773db3abcea1082243bd568e02d830a5db753, please see https://github.com/orta/rspec_junit_formatter/commit/00c773db3abcea1082243bd568e02d830a5db753#commitcomment-19352389.\n. I pushed the missing releases\n\u279c  danger git:(travis-deploy-provider) bundle exec chandler push v3.5.1\nPush v3.5.1\u2026 \u2714 4.044s\n\u279c  danger git:(travis-deploy-provider) bundle exec chandler push v3.5.2\nPush v3.5.2\u2026 \u2714 3.281s\n\u279c  danger git:(travis-deploy-provider) bundle exec chandler push v3.5.3\nPush v3.5.3\u2026 \u2714 3.149s\nLet's merge and wait to see if this works when we release next version.\n. I notice sometimes CircleCI only run 420 examples instead of 490 examples...rebuild works fine \\_(\u30c4)_/\n. Would you show a screenshot for this danger new comment functionality? Thanks!\n. Would you like to join the org? @bruno-rocha-movile /cc @orta \n. The error is saying that danger cannot find commits on Bitrise \ud83d\ude2d . Possible that when danger is running, someone merged blue branch into pink branch, and reset/rebased then force pushed \ud83e\udd14? \n\nRelated: #480 #432 #316 #185 #160 \n. Fixed in #636.\n. Released v3.5.5!\n. Yuhuuu, need a CHANGELOG entry ;)\n. > I couldn't find a particularly friendly way to test this. The bug is obvious enough, but preventing regressions would be nice. Passing in bad env params meant that it would fail to trigger the bug (it would bail beforehand), so I'm not sure :)\nOne way I can think of to test this is that we don't pass in the ui object, and we make sure the Cork::Board.new object got sent the right messages:\nruby\nself.ui = ui || Cork::Board.new(silent: false, verbose: false)\ndiff\ndiff --git a/spec/lib/danger/danger_core/environment_manager_spec.rb b/spec/lib/danger/danger_core/environment_manager_spec.rb\nindex 78504fe..60cd797 100644\n--- a/spec/lib/danger/danger_core/environment_manager_spec.rb\n+++ b/spec/lib/danger/danger_core/environment_manager_spec.rb\n@@ -379,4 +379,18 @@ RSpec.describe Danger::EnvironmentManager, use: :ci_helper do\n       expect(ui.string).to include(\"Travis note: If you have an open source project, you should ensure 'Display value in build log' enabled for these flags, so that PRs from forks work.\")\n     end\n   end\n+\n+  context \"cannot find request source\" do\n+    it \"raises error\" do\n+      env = { \"DANGER_USE_LOCAL_GIT\" => \"true\" }\n+      fake_ui = double(\"Cork::Board\")\n+      allow(Cork::Board).to receive(:new) { fake_ui }\n+      allow(Danger::RequestSources::RequestSource).to receive(:available_request_sources) { [] }\n+\n+      expect(fake_ui).to receive(:title)\n+      expect(fake_ui).to receive(:puts).exactly(5).times\n+\n+      expect { Danger::EnvironmentManager.new(env, nil) }.to raise_error(SystemExit)\n+    end\n+  end\n end\nIt is not great \ud83d\ude13 but does the job for catching regression.\n. @notjosh Awesome, thanks for your contribution!!! <3\n. @notjosh Would you like to to join the danger organization? \ud83d\ude0a \n. > Lmk if there's anything I can do to help, or if you'd like me to test anything.\n@kylejm Thank you! Could you bundle update danger then try again and post the error stack? Thanks...\nOr is it possible to reproduce the situation in a repository? \n. > @JuanitoFatas the following was printed:\nThanks! I realized this is impossible to debug, I'm sorry! Could you tell me how may I reproduce a repository? \n. > @JuanitoFatas how about we spend some time debugging together? Want to jump on a hangout/skype/something? I'd be happy to share my screen with you :)\nSure, when do you prefer? :)\n. > RuntimeError: Cannot find a merge base between 32026b7134ba871f37ec47712a37477ec6aa985f and 6405da6dcd90d888cc983986dcfff90bcdb52a79.\nfeature branch:\n* 6405da6 <--- to\n* 39767a6\n* d344bea\n* 9f33359\n*   6ee88fb\n|\\\n| *   32026b7 <--- from\n| |\\\n| | * 58fe624\n| | * dd99e3f\n| | * 9fc53b2\n| | * cd4804c\n| | * 56840b3\n| | * af7ec27\n| | * 89ef404\n| | * b51dbce\n| | * 45187cf\n| | * 0f406d7\n| | * 13e32d7\n| | * 5236915\n| | *   0bc57a0\n| | |\\\n| | * | b0d7e64\n| | * | ea0c90a\n| | * | 2600c0d\n| | * | 4437749\n| | * | d0557b9\n| | * | 5bf79fe\n| | * | 108f014\n| | * | 40da3b7\n| | * | 633eaf4\n| | * | 3b272b4\n| | * | abb8b46\n| | * | ef8a50d\n| | * | a6021d0\n. His base branch is development instead of master, do we need to checkout to development first? \n. @kylejm What command do you specify in your CI file?\nbundle exec danger?\nMaybe need to change to:\nbundle exec danger --base development.\n. > If I set to bundle exec danger --base development what will happen if danger runs on a PR from feature-branch-1 to feature-branch-2 for example?\nIt will work if your workflow is to merge feature branches into development branch :) \n. Failure on Travis CI:\n126 files inspected, 2 offenses detected\nRuboCop failed!\nRubocop on Travis doesn't agree with my local rubocop.\n$ bundle exec danger --verbose\n......Not a Pull Request - skipping `danger` run\n??? Travis changes exposed envs?\n. Thanks everyone, specially @kylejm  and @viktorbenei, awesome work here ;) And as always, thanks @orta for review \ud83c\udf89 \n. Released in 3.5.4. :D\n. I take the liberty to merge this! @orta \n. > I think we already been there: #77\nAhhhh thanks for the tip! So from the history, already from Git -> Rugged -> Grit -> Git again.\nAnd rugged was abandoned because Rugged requires CMake + Native Extensions which do not work by default on OS X.\n. Rebase on master and we are good to go \ud83d\udc4d \n. Hi! What is your Dangerfile? Thank you!\n. Does your PR contains changes to this file?\nTTKit/Tests/Unit/Models/Databases/TestDataModel.v20.sqlite\n. Ok! But if PR contains NO changes to this TTKit/Tests/Unit/Models/Databases/TestDataModel.v20.sqlite file.\nThen this line below will invoke fail(fail_msg):\n``` ruby\nsqlite = \"TTKit/Tests/Unit/Models/Databases/TestDataModel.v#{version}.sqlite\"\n...\nfail(fail_msg) unless git.modified_files.include?(sqlite)\n```\nChange the logic here?\n. > Are we talking about the same thing? I'm getting lost here.\n\nFrom the reference page:\n\nSorry I missed that \ud83d\ude13 \n\nI also tried without \">\". Let me know how I can help more.\n\nThe format of GitHub Pull Request json is as follows:\nhttps://api.github.com/repos/:owner/:repo/pulls/:number\nE.g. https://api.github.com/repos/danger/danger/pulls/518.\nCould you please paste your PR body here (remove sensitive information)? So we can inspect and improve the regexp.\nThanks! \ud83d\ude0a \n. Actually this method is not being used, can we remove it? /cc @orta \n. @Antondomashnev Could you remove this ask method? Thanks! \n. > Seems like there's a code violation from something unrelated to this. Will check it out\nI fixed in https://github.com/danger/danger/pull/658. You can rebase and push again, thank you!!! :D\n. > interesting, was $? removed from Ruby? src\nSorry, rubocop auto corrected, the $CHILD_STATUS is only available when we required english module.. @mattrobenolt Please try v4.0.1. Thanks @kivikakk for all the hard work!. Checking if it is working \ud83d\ude13 => works after cedcfda. Please try v4.0.3, thanks!. Thank you so much for this \ud83d\ude4f . Looks good \ud83d\ude0d  with few comments \ud83d\udc4d . @krin-san Would you like to be a danger contributor (join the danger organization)? \ud83d\ude0a . Aw I invited you or @orta faster than me? Welcome!!!! <3. > @orta, you invited to the Danger github organization.\n\nSo I can't judge who was the first =)\n\nAh I think @orta is the right invite. Please ignore mine and accept his, thank you and have a lovely day.. Did you set DANGER_GITHUB_API_TOKEN on Travis?\nThen you can try if your token works with following:\n```ruby\nInstall Octokit gem (ruby library)\n$ gem install octokit\nTo enter the Ruby REPL\n$ irb\nIn the REPL\n\nrequire \"octokit\"\nclient = Octokit::Client.new(access_token: \"your 40-char token\")\nclient.create_status(\n  \"IBAnimatable/IBAnimatable\", \n  \"280cbb3d8fd10a902b5b408277633dd9e48961fc\",\n  \"success\",\n  description: \"Welcome to danger\",\n  context: \"danger\",\n  target_url: \"https://danger.systems\"\n)\n```\n\nIf then token works, then it will set https://github.com/IBAnimatable/IBAnimatable/pull/366 status to success with a description says Welcome to danger, the details link will link to https://danger.systems. :). Did you give the token public_repo access? \ud83e\udd14 \nhttps://github.com/settings/tokens/new \n\n--\nHow about you consult support@github.com to see if anything goes wrong? Thank you so much!\n. > Still be broke.\n\nhttp://danger.systems works fine though.\nConsider changing the link on the repo title bar till this is fixed?\n\nChanged, thank you! <3. Is this what you want?\nruby\nif git.commits.size == 1\n  warn(\"Please squash all commits\")\nend\nAlso GitHub recently released a feature: squash and merge can also help with this.\nHope this helps.. > @JuanitoFatas That code triggers when there is only one commit or where there is more that one\nSorry I meant if git.commits.size > 1.. > We've reached out to see if that is something that can be exposed via environment variable\nI tried, they said no: https://community.codeship.com/t/populate-ci-pull-request/1053/3.. > I'm going under the assumption that supporting just Github is acceptable initially, is that a valid assumption?\nYes.. The proposal looks good, would you like to submit a PR? \ud83d\ude0a . Hi @mtitolo,\nSorry for your troubles. Thanks for the report, a fix is ready in #697.\nAlso I have a question about your PR url.\ndanger look at your PR url to infer the repository. Current our regexp can only find the repo from:\nhttps://internalgithub.website.com/org/repo/pull/111\ninstead of\nhttps://internalgithub.website.com/org/repo/pulls/111\nDoes GitHub Enterprise use pulls instead of pull in PR url?\nThanks,\nJuanito. > @JuanitoFatas the pull URL is the API. Should the endpoint passed to local be the HTML URL or the API?\nShould be the HTML URL. \nThe HTML URL should be pull? https://github.com/danger/danger/pull/697. Rubocop is not happy \ud83d\udc6e  Other than offenses, \ud83d\udc4d  Great work!. Need to rebase after merged #749 . Build is back to green :green_salad: . > wait, didn't we do this already? #738\nMaster was failing at local, with these changes in this PR fixed the failures at local... Hmmm \ud83e\udd14 . > Wanna try changing the Gemfile to point to 3.7.0 instead of master?\nsure, let me try.. > Wanna try changing the Gemfile to point to 3.7.0 instead of master?\nYes. 3.7.0 fixed the error on CI \ud83d\ude47 . @orta Released v4.3.0.. CI fixed \ud83d\ude4f . Thanks for the fix. \ud83d\ude4f \nWould you like to join the danger organization? \ud83d\ude0a . This fix shipped in v4.3.4.. I think CI providers handle each system command in subshell, so one cd doesn't effect the next one. You could give system(\"cd Documentation && pwd\") a try.. Offenses:\nlib/danger/request_sources/github/github.rb:13:5: C: Class has too many lines. [348/320]\n    class GitHub < RequestSource ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 files inspected, 1 offense detected\nwe can increase the rule to 348 for now \ud83d\ude1d . thanks for the quote and test cleanup, awesome!!! \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f . awesome!\nonly one tiny offense:\nOffenses:\nlib/danger/commands/pr.rb:78:45: C: Use the new Ruby 1.9 hash syntax.\n        config.connection_options[:ssl] = { :verify => @verify_ssl }\n                                            ^^^^^^^^^^\n81 files inspected, 1 offense detected. Yay! \ud83c\udf89  Thank you for the contributions! It's so awesome!!! <3 <3 <3\n\n@ghiculescu is not a contributor yet, would you like to join the Danger org?\n\nWould you like to join? \ud83d\ude4f \ud83d\ude47 . > You used puts in your Dangerfile. To print out text to GitHub use message instead\nCould you try using message instead? Thanks!. Sweet, thank you! \ud83d\udc83 . Released in 5.5.4.. if the heroku CI exposes enough information, we're happy to add support for it. Take a look at https://github.com/danger/danger/tree/master/lib/danger/ci_source :)\nThanks for opening the issue.. Amazing \u2728 !\nWhat do you think about we also apply this to other ci sources, maybe extract to a class to reuse it :D  . Thank you for contributions and this is released in v5.5.5!. @mylifeasdog Hi, I saw an error: MultiJson::AdapterError: Did not recognize your adapter specification, could you try to install any json engine? Thank you.. How about?\nruby\nrequire \"open3\"\nOpen3.popen3({\"LANG\" => \"en_US.UTF-8\"}, \"git #{string}\") { |_stdin, stdout, _stderr, _wait_thr| stdout.read.rstrip }\nOpen3\n. The format is something like @return [Hash] description \ud83d\ude0a \n. Why we exclude markdown files not trim trailing whitespaces? :/\n\ud83d\udc4d on remove them.\n. I personally avoid use let because it is easier to move code / delete them without having leftovers, it is self-contained. source\nWhat do you think?\n. bitbucket_cloud \ud83d\ude0a ?\n. TIL hash_including \ud83c\udd92 \n. Minor: Github should spell as GitHub \ud83d\ude0a \n. This is Octokit's default value:\n``` ruby\n\nrequire \"octokit\"\n=> true\nOctokit.api_endpoint\n=> \"https://api.github.com/\"\n``\n. \u2702\ufe0f \n. This looks weird \ud83d\ude15\u2753 \n. @orta This file you should [ignore globally](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore) in your Git setup \ud83d\udca1 .\n. Add parenthesis so some older Rubies won't emit warnings.\n. I uses it because this helps fail fast.@system_enbwill returnnil, while if you dosystem_enbwill raise anNoMethodError`. \ud83d\ude0a \n. ok \ud83d\udc4c \ud83d\udcdd  Will change.\n. @orta \n\nWhat is the difference between:\n``` ruby\ncork.puts \"hi\".yellow; exit(0)\nand\nfail(\"hi\".yellow)\n```\n\ud83d\ude15 ?\n. @connorshea Everyone should use vscode :P\nhttps://github.com/danger/danger/pull/583/files#r80905047\n. Yea, this newly added test catch a bug \ud83c\udf89 , will fix.\n. TBH this only tests the states of the PR command class, not how it runs \ud83d\ude13 Still haven't figured out how to test how it runs \ud83c\udfc3 \n. This is a TIL for me, the hash can use like objects.\nhttp://stackoverflow.com/a/32470168\n. Thanks for my poor English \ud83d\ude04 \n. IMHO a little bit too implementation specific \ud83d\ude05? How about something like Makes Danger post a new comment for each build\ud83d\ude04?\n. \ud83d\udc4d \n. Good catch!\n. How about we abort with a red message?\nruby\nabort(\"\\nDANGER > Error posting comment to BitBucket Server: #{res.code} (#{res.message})\\n\\n\".red). What do you think about extract the logic here to a class?\nruby\ndef character_from_emoji(emoji, template: \"github\")\n  WarningEmoji.new(emoji, template).call\nend\n```ruby\nclass WarningEmoji\n  DATA = {\n    \"github\" => {\n      \"no_entry_sign\"    => \"\ud83d\udeab\",\n      \"warning\"          => \"\u26a0\ufe0f\",\n      \"book\"             => \"\ud83d\udcd6\",\n      \"white_check_mark\" => \"\u2705\"\n    },\n    \"bitbucket_server\" => {\n      \"no_entry_sign\"    => \"\\u274C\", # \u274c\n      \"warning\"          => \"\\u2757\", # \u2757\n      \"book\"             => \"\\u2728\", # \u2728\n      \"white_check_mark\" => \"\\u2705\"  # \u2705\n    }\n  }\ndef initialize(emoji, template)\n    @emoji = emoji.delete \":\"\n    @template = template\n  end\ndef call\n    DATA[template][emoji]\n  end\nprivate\nattr_reader :emoji, :template\n\nend\n```\nI am bad at naming things, you can change to what suits the best :). Can we pass in \"warning\" directly? \ud83e\udd14 . > - completely remove html formatting code with tests\nHow about drop a comment and skip these tests for now? \ud83d\ude0a . yees, but I did not see cork available here \ud83d\ude13 . Or you can do something like this \ud83d\ude09 :\n```diff\nadiff --git a/spec/lib/danger/plugins/dangerfile_bitbucket_server_plugin_spec.rb b/spec/lib/danger/plugins/dangerfile_bitbucket_server_plugin_spec.rb\nindex d4dc7d6..f8556d1 100644\n--- a/spec/lib/danger/plugins/dangerfile_bitbucket_server_plugin_spec.rb\n+++ b/spec/lib/danger/plugins/dangerfile_bitbucket_server_plugin_spec.rb\n@@ -63,12 +63,16 @@ RSpec.describe Danger::DangerfileBitbucketServerPlugin, host: :bitbucket_server\n describe \"#html_link\" do\n   it \"creates a usable html link\" do\n\n\n\nskip \"Because Bitbucket Server doesn't support ...\"\n+\n         expect(plugin.html_link(\"Classes/Main Categories/Feed/FeedViewController.m\")).to include(\n           \"Classes/Main Categories/Feed/FeedViewController.m\"\n         )\n       end\nit \"handles #XX line numbers in the same format a the other plugins\" do\n+        skip \"Because Bitbucket Server doesn't support ...\"\n+\n     expect(plugin.html_link(\"Classes/Main Categories/Feed/FeedViewController.m#100\")).to include(\n       \"Classes/Main Categories/Feed/FeedViewController.m\"\n     )\n```. > Would be nice to have a separate attribute like @emoji_mapper\n\n\nI am not sure what you mean but your implementation looks solid!\nruby\nEmojiMapper.new().map(\":warning\").to_s\nWe normally don't put parens for no args:\nruby\nEmojiMapper.new.map(\":warning\").to_s\nAnd we may remove to_s . \n:). Thank you for also updating the docs.. Great note! . This is very smart  \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f . Add your name / GitHub ID ? - Ray Zane or - rzane \ud83d\ude04 . Ah cool, what do you think about remove the let and before being explicit in place?\n```ruby\nrequire 'danger/commands/init_helpers/interviewer'\nRSpec.describe Danger::Interviewer do\n  describe '#link' do\n    it 'link URL is decorated' do\n      cork = double('cork')\n      interviewer = Danger::Interviewer.new(cork)\n      allow(interviewer).to receive(:say)\n  interviewer.link('http://danger.systems/')\n\n  expect(interviewer).to have_received(:say).with(\" -> \\e[4mhttp://danger.systems/\\e[0m\\n\")\nend\n\nend\nend\n``. \ud83d\udc4d . do we need to pass down theci_sourcetoDanger::RequestSources::GitHub? \ud83e\udd14 \ndo we needci_source`? \ud83d\ude02 . ",
    "segiddins": "This should use CLAide instead of copy-pasting code\n. :+1: \n. should pass if you restart the build on travis\n. @orta anything else needed to get it merged? I want to add some checks in CocoaPods around there not being any upstream merge commits ;)\n. I don't see why a CHANGELOG entry is necessary?\n. But then #trivial would be part of the default merge commit message, and I don't want that in the commit message\n. I've got a fix for this, will make a PR in a minute\n. We should probably test on 2.0 then....\n. Should Danger have printed the changelog warning the second time here?\n. @orta how does this look?\n. Yeah, I had trouble testing it and as such didn't feel comfortable adding an entry for it\n. Rebased\n. \ud83d\udc4d\ud83c\udffb\n. @orta that take task won't handle permissions. Are you sure ruby gems didn't emit any errors while packaging?\n. do a gem build danger.gemspec first to see the warnings before releasing\n. @DanToml try injecting a board?\n. My only thing would be to ask that all output be redirected during the tests now that we have a way to do that \n. Since it fixes a bug, there definitely should be a test + a CHANGELOG entry\n. Maybe the require should be at the top of the file?\n. Is there any reason we can't use git merge-point HEAD $TARGET_BRANCH to figure out the commit range?\n. IO.winsize is helpful for that (also I think CLAide and Cork have text wrapping stuff)\n. > anyone know if rubocop can force the labeled params thing in ruby? I should do this, but I forget\ncan you be more specific?\n. ``` ruby\nfails\ndef method(one, two)\nend\npasses\ndef method(one, two:two)\nend\n```\nthe first takes no named parameters, the second takes one positional argument and a named argument with the label two with a default value of (the result of calling the method two)\n. There doesn't exist one I know of, but writing one in a plugin shouldn't be too hard\n. Not particularly, especially since Ruby 2.0 doesn't support required keyword arguments \n. @k0nserv yup it is\n. @orta appveyor.com\nI'm also happy to help move us over to ruby stuff instead of backticks\n. terminal-table may be what you want here\n. What's with the verbose after the :?\n. Should be def initialize(env, verbose: false)\n. should this raise a particular error class instead of StandardError?\n. why still call map then?\n. should this be in an ensure?\n. this indentation looks off\n. Maybe these should take *args, &blk and just forward those to method_missing?\n. the self. is unnecessary \n. this appears to be unnecessary, since its the same as the superclass?\n. maybe have an inherited hook for RequestSource instead of searching through constants?\n. the self. is unnecessary \n. Consolore ?\n. should pass --verbose and --silent to this\n. the empty string here isn't necessary\n. should be a section\n. no, the puts are necessary -- they add blank lines before & after the table. all that was unnecessary was the argument\n. yup\n. ~> 0 does nothing\n. ... this also means exactly the same thing as specifying no requirements at all\n. you should probably pin to a specific major version\n. alignment\n. might read cleaner as a switch statement?\n. why not flat_map here & on the next line?\n. its to_h in ruby rypucally since the class is Hash\n. This shouldn't be necessary since you use bundle exec\n. Couldn't this infer whether it's running on OS X?\n. maybe extract this into its own method? infer_org_plugin?\n. this should be is_a instead of kind_of in case someone is using a String subclass\n. is_a?\n. imho this should use URI.parse and check the scheme\n. why can't this eval instead of writing to a temp file?\n. you could do matched && matched[1] instead of both the return and the nil (which is already implicit, since an if statement not executed also returns nil)\n. return isn't necessary here, it's the last expression of the method\n. ah you're right\n. It'd just be eval(contents, TOP-LEVEL_BINDING, \"#{plugin_name}.rb)\n. since you're already invoking a shell here, there's no need to use Dir.glob\n. extra space\n. you should use the block version of mktmpdir that will ensure the created directory is cleaned up\n. in that case, you should store the dir somewhere and make sure to unlink it when you're done using it\n. The OS doesn't typically clean it up until restart -- so that could be days\n. you need to implement respond_to_missing? here\n. ",
    "camacho": "it leaves the history intact - in case anyone was talking about it in the PR or whatever\n. ",
    "sleekybadger": "@orta hi, here pr that fixes this.. @johnallen3d Hi, do you have any news about this?. Oh, no worry. I will take this.. @marcelofabri @orta is this still actual?\nI created Dangerfile that simply prints your messages:\nmessage('Linting Alamofire with this PR took 3.33s vs 3.32s on master (0% slower)')\nmessage('Linting swift with this PR took 11.55s vs 11.55s on master (0% slower)')\nmessage('Linting Aerial with this PR took 0.43s vs 0.43s on master (0% slower)')\nmessage('Linting SourceKitten with this PR took 1.55s vs 1.54s on master (0% slower)')\nmessage('Linting Sourcery with this PR took 2.27s vs 2.31s on master (1% faster)')\nmessage('Linting ios-oss with this PR took 17.73s vs 17.47s on master (1% slower)')\nmessage('Linting Moya with this PR took 0.47s vs 0.44s on master (6% slower)')\nmessage('Linting firefox-ios with this PR took 16.59s vs 16.57s on master (0% slower)')\nmessage('Linting Nimble with this PR took 1.77s vs 1.8s on master (1% faster)')\nmessage('Linting Quick with this PR took 0.53s vs 0.54s on master (1% faster)')\nmessage('Linting realm-cocoa with this PR took 3.66s vs 3.65s on master (0% slower)')\nmessage('Linting WordPress-iOS with this PR took 7.51s vs 7.48s on master (0% slower)')\nand result:\n\n@marcelofabri can you please recheck this with latest version of danger?. Don't think so. @marcelofabri Dangerfile look quite synchronous and explicit\n@repos.each do |repo|\n    # some code that calculates values\n    message \"Linting #{repo_name} with this PR took #{branch_duration}s \" \\\n            \"vs #{master_duration}s on master (#{percent_change.to_i}\\% #{faster_slower})\"\n  end\n@marcelofabri thank u, I'll test.. @orta oh, I find it \nHere we sort violations, then we send inline comments and remove them from sorted arrays. But to github we push without original order.\nI think we can just select inline comments and pass them to submit_inline_comments! and we will note care about arrays mutation. What do you think about it?\nAlso i wonder why i can't reproduce this for my example, so I will debug this more in evening.. @orta fix for this https://github.com/danger/danger/pull/813. Hi @orta. Thank you for such great project. Here PR to close this.. @orta hi! Here PR to solve this.. Hm, everything green locally \ud83d\ude1e . @orta hm, that can be reason. I'll rewrite this to raw diff without --diff-filter=R. \n@daniel-beard yep, unfortunately ruby-git not really well maintained, so I don't feel that issue will solved soon.. Oh required named params missing in ruby 2.0.0. I'll fix this. Please, can you check second note?. @orta can I expose it?. @orta here PR that will close this.. AppVeyor exits with something weird. Can someone take a look?. /cc @orta. Oh, my best wishes to you \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \nThank you I will try new config at the evening. I'm a little bit confused, cause this changes not related to git.. this did the trick :sparkles:. @orta with pleasure;) sleekybadger@gmail.com. @macklinu Thank you for reporting this issue \ud83d\udc4d . \n@orta here PR to fix this.. @orta updated. @netbe Hi, Thank you for reporting this issue. \nI created commit that can fix this. Can you please re run your build, but using latest commit from my fork? \nHere's how your Gemfile.rb should look like for this:\ngem 'danger', github: 'sleekybadger/danger',\n                         branch: 'hotfix/invalid-encoding',\n                         ref: 'e8b25040f98cca260a5a49a2504baed5898caf85'. @netbe yep, can you check your ruby encoding on jenkins server?\nYou can do this like this:\n```\n~ rbenv shell 2.3.1\n~ irb\n\nENCODING.to_s\nexit\n~ rbenv shell --unset\n```\n\nIf __ENCODING__.to_s will return something different than UTF-8, then this is the problem.. @netbe I want to try to enforce encoding when danger runs to UTF-8 and then reset it to what it was before.\nCan you update your Gemfile?\ngem 'danger', github: 'sleekybadger/danger', \n              branch: 'hotfix/invalid-encoding', \n              ref: '12e049770916dfd905abda099502efee9b1c5b67' . @netbe unfortunately I did not find a way to reproduce your issue, but I found thread about this problem on MRI and jruby. Looks like you can try to set locale to en_US.UTF-8.\nMore info about locale:\n- https://linux.die.net/man/1/locale\n- https://www.shellhacks.com/linux-define-locale-language-settings/\nHope this will help you \ud83d\ude4f \nP.S. I think you can use danger from rubygems again, cause not sure that I'll be able to work on this issue on rest of this week.. @netbe P.S.S.\nThe only way in which I produced this:\n```\n~ irb\n\n\"\\xE2\\x9C\\xA8\".encode(\"UTF-8\")\n=> \"\u2728\"\n\n~ LANG=en_US.US-ASCII irb\n\n\"\\xE2\\x9C\\xA8\".encode(\"UTF-8\")\n=> Encoding::UndefinedConversionError\n```\n\nAlso I think you can try comment all gems, except danger for debug purposes and try with simple Dangerfile:\nmessage('Hi'). @giginet hi, can we close this?. No, looks like we can't do this in single request. But I think we can try #last_page method from gitlab gem.. @almozavr Hi, can you run your build again using potential fix?\ngem 'danger', github: 'sleekybadger/danger', \n              branch: 'hotfix/gitlab-wrong-base', \n              ref: 'e9427ddbd309cace9e1ee4bb73c94afe4e516294'. @almozavr sorry, gitlab api dock trick me. It says that links headers are sent back with each\nresponse, but: \n```\ncurl --header \"PRIVATE-TOKEN: token\" -I https://gitlab.com/api/v3/projects/id/merge_requests/id/commits\nHTTP/1.1 200 OK\nServer: nginx\nDate: Tue, 13 Jun 2017 11:48:22 GMT\nContent-Type: application/json\nContent-Length: 23977\nCache-Control: no-cache\nVary: Origin\nX-Frame-Options: SAMEORIGIN\nX-Request-Id: 5f71bc63-ed14-4158-9741-5f412af5bcfc\nX-Runtime: 0.322003\nStrict-Transport-Security: max-age=31536000\n```\nCan you check that all commits are returning from gitlab api? You can do this in such way:\n:001 > require 'gitlab'\n => true\n :002 > client = Gitlab.client(endpoint: 'https://gitlab.com/api/v3', private_token: 'token')\n => #<Gitlab::Client:0x007f8c322b6040 @endpoint=\"https://gitlab.com/api/v3\", @private_token=\"********************\", @user_agent=\"Gitlab Ruby Gem 4.0.0\">\n :003 > client.merge_request_commits(project_id, merge_request_id).count\n => 53. @almozavr if commits were totally unrelated to MR, then you are right. If commits were related to MR, but @git.commits contained only part of them, then it's related to @git.log count params and will be fixed in next release.. Hm, do you have DANGER_GITLAB_API_BASE_URL environment variable? Cause, I believe that we are using gitlab api v3.. @ffittschen hm, can you provide us generated by danger comment body for one of failed MR?. Oh, I'm afraid that you can't - danger local supports only github right now. I modified my fork to print generated comment into STDOUT.\nYou can install it like this: \ngem 'danger', github: 'sleekybadger/danger', \n              branch: 'debug_gitlab', \n              ref: 'd246f6246e316d702dd6b47ca10c53562ff496d5'. Hm, that's really weird. Let's try to remove line 62, just to make sure that this is a problem. . Hi @WiesnerPeti . I believe that it is correct behavior, cause you may wanna to protect your Dangerfile from unexpected changes. For example:\nwarn('Dangerfile changed') if git.modified_files.grep(/Dangerfile/).any?\nYou can solve your issue, by checking each file in diff and skipping files that you don't wanna check. I believe something like this will work:\ngit.diff.each do |file|\n  unless file.path.match(/Dangerfile/)\n    gitlab.fail \"You should not use the word Test\" if /Test/.match(file.patch)\n  end\nend. @orta @giginet as I understand we need ability to add multiple violations in same time?. @orta here pr to solve this, if I understood everything right \ud83d\ude06 . Thank you, dudes \u2728 \ud83d\udc8e \u2728. Totally agree. Here pr to solve this.. @Dimdron Thank you. Can you say on what CI did you test it?. @orta oh, I think you are right \ud83d\ude03  \nI wanna improve a little bit our GitlabCi support according to last comment in this thread , fix tests and I think that this can be merged.. @orta I think this can be merged. Also we need to merge danger-gitlab-gem pr. And I think we should bump danger version in danger-gitlab-gem too.. Hi @glensc . You need to set CI_MERGE_REQUEST_ID env variable, so this will be:\nbash\nexport CI_MERGE_REQUEST_ID=$(curl -s \"http://domain/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\nand with https://github.com/danger/danger/pull/861/files release, we will support GitLabCi natively. @Jeroenbb94 hm, interesting. We are doing the same already. What version of danger do you use?. Yeah, continues integrations often cache dependencies. I wanna try to run danger on self hosted gitlab, to check that everything good and to produce better setup guide. But I'll able to do this only on weekend \u00af_(\u30c4)_/\u00af. @ashfurrow sure, this will be awesome . @jpsim Hi, you can place some debug code in danger report generation block. Something like this:\nruby\nnon_empty_lines(lines).each do |line|\n  puts line\n  if line.start_with? 'Permanently added the RSA host key for IP address'\n    # Don't report to Danger\n  elsif line.start_with? 'Message:'\n    message parse_line(line)\n  elsif line.start_with? 'Warning:'\n    warn parse_line(line)\n  elsif line.start_with? 'Error:'\n    fail parse_line(line)\n  end\nend\nThis will simply send report lines to STDOUT.\nP.S. Hm, I think you can try to remove your .ssh/known_hosts file, to reproduce this locally.. @jpsim hm, interesting \nYou can avoid prompt with such ssh wrapper:\nbash\n$ ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ...\nmaybe circleci uses something like this.. @nikolaykasyanov @orta I'm pretty sure that this is a reason, cause sha and base_commit are string and in ruby:\n'dcb' > 'abc'\n => true\n'abc' >= 'dcb'\n => false\nWe are not sorting array here, this block returns first merge request, which has same sha as base commit\n. Not sure that this is necessary, cause commit sha is unique, so we can simply revert this pr. @nikolaykasyanov yeah, you're right. We can use Array.index which is linear.\n```\nmerge_request = merge_requests.auto_paginate.index do |mr|\n  mr.sha == base_commit\nend\nmerge_request.nil? ? 0 : merge_request.iid\n``. No, with--diff-filter=R`, diff will not contain file contents diff and will formated like this\n```\ndiff --git a/hello1 b/hello1_renamed\nsimilarity index 100%\nrename from hello1\nrename to hello1_renamed\ndiff --git a/hello3 b/hello3_renamed\nsimilarity index 100%\nrename from hello3\nrename to hello3_renamed\ndiff --git a/hello5 b/hello5/some_folder/hello5\nsimilarity index 100%\nrename from hello5\nrename to hello5/some_folder/hello5\n```. @daniel-beard thanks, I will. No, it's default git flags. \nUnfortunately we can't use it cause of --find-renames flag. \nWe need to pass it to diff query cause older versions of git don't have this option as default (That caused errors on travis ci which has git version 1.8.0).. Sure \ud83d\ude09 . ",
    "mfurtak": "@KrauseFx I'll start a new PR to experiment a bit with build settings and report back if I find a solution :+1: \n. @KrauseFx #158 contains an adjustment that makes my branch pass.\n. ",
    "daniel-beard": "I'm seeing this as well, the modified_files includes files from the PR's destination branch's last commit.\n. Ah, yes, DANGER_GITHUB_API_HOST get me further\n. That was what I needed. Thanks for the super quick reply @jeroenvisser101 !\n. I don't have anything quite useful yet, as I'm just starting to experiment. Once I have something up and working, I'll make sure to :D\n. Yes, that's what I needed to setup GHE. \ud83d\udc4d \n. That one looks ok. \nMy source branch and base branches look ok:\nSource Branch: dbeard_add_warning_on_provisioning_profile_change\nBase Branch: master\nFrom github.groupondev.com:mobile-consumer/mobile-iphone-consumer\n * [new ref]         refs/pull/16342/merge -> danger_head\nBut the danger output shows both commits as merge commits, although they aren't:\n```\nBase Commit    | commit f5c476326ec83bdf5f1b8dfee810ceef585a3ec2                                                                                                                                                                                                                                  |\n|                | Merge: 98d9740 94ba464                                                                                                                                                                                                                                                           |\n \n|\n| Head Commit    | commit 24fb2b9b5c03182b44a2385b1fffac0f52bd364c                                                                                                                                                                                                                                  |\n|                | Merge: f5c4763 59d79da                                                                                                                                                                                                                                                           |\n< snip >                                                                                                                                                                                                                                                                       \n|\n|                |     Merge 59d79da5ccf2ff08655daf876ee732bb7156749f into f5c476326ec83bdf5f1b8dfee810ceef585a3ec2  \n```\nRunning git show on the Head Commit show's that the commit doesn't exist, the 59d79da value is the head commit instead.\ngit show 24fb2b9b5c03182b44a2385b1fffac0f52bd364c\nfatal: bad object 24fb2b9b5c03182b44a2385b1fffac0f52bd364c\n. Started testing this again yesterday. So far it looks good, I think you can close this issue and I'll reopen if I see it again. Thanks, danger is awesome!\n. thanks @barakwei, I recently ran into this issue again on version 4.2.2. @orta should there be a similar approach within Danger for git.modified_files ?. Thanks @orta I can confirm that this works great for me, thanks!. @orta sure!\n. @sleekybadger @orta here's an issue on the ruby-git repo about this: https://github.com/schacon/ruby-git/issues/328. We can get the full diff info from ruby-git currently, maybe it's worth parsing that to get the filenames from there?\n/^diff --git a\\/(.*?) b\\/(.*?)/ might be enough.. @AliSoftware It is Github EE, it works when NOT importing via git, however it appears that any imported rules via the git import action do not comment inline, rather just in the single combined comment.. Possibly related to #1042 . I still see this issue with v5.15.0, inline commenting doesn't appear to work at all for me when running a shared danger file imported via git.. I can't reproduce this on v 5.15.0 or Github Enterprise, any chance you could share the stack trace or create a failing unit test I could take a look at?. These regexes aren't correct or restrictive enough (you'll end up matching file contents as well).\nShould use a single match with multiple groups like this: /^diff --git a\\/(.*?) b\\/(.*?)/. Doesn't this need to be done per line, rather than just one capture?. Should also add a test with multiple renamed files.. This adds another dependency for this library (one that may not be on all machines).\nI'd really like to see this implemented using ruby-gits diff.patch functionality instead, as that ensures that there aren't any other dependencies required.. OK, makes sense. That exec made me think this was shelling out :). I could simplify this entire block down to: \nruby\npattern = \"+++ b/\" + message.file + \"\\n\"\npattern_with_tab = \"+++ b/\" + message.file + \"\\t\\n\"\nfile_start = diff_lines.index(pattern) || diff_lines.index(pattern_with_tab)\nbut wasn't sure about the change in readability. Thoughts?. Note: These two lines contain the trailing tabs. This is derived from a diff that I observed coming directly from Github Enterprise (although I reused the CHANGELOG.md contents here). ",
    "jamtur01": "Also seeing this. \n. Hey @chrismcg Did you puzzle this out at all? I'm stuck. :(\n. Oh nice catch.\n. Use the git exec instead of ruby-git in:\nhttps://github.com/danger/danger/blob/master/lib/danger/scm_source/git_repo.rb\n?\n. Ah blast. This has forced us to turn off Danger so I'll try to look on the weekend.\n. https://github.com/jamtur01/ruby-git/tree/gitbase\n. See also #160 \n. @orta That works.\n. So if I want to notify folks I use markdown('msg') and then fail/warn etc for anything else? That seems like an okay workaround albeit a bit ... exception-y. :)\n. @orta Sure. Happy to help. Likely to be doc updates largely, as hideously time poor.\n. Seems fixed in 0.8.5.\n. That's a resounding endorsement. :) \n. Nice! Much simpler. \n. +1.\n. It does provide:\nenv[\"CIRCLE_REPOSITORY_URL\"]\nWhich on my runs is:\nCIRCLE_REPOSITORY_URL=https://github.com/kickstarter/kickstarter\n. ",
    "chrismcg": "I'm seeing something similar and I think it might be down to commits being made to the base branch while the PR is open. I haven't had time to delve too deeply into what's happening but am seeing warnings on a project that could be explained by this.\n- staging is at aaaaaa\n- make feature branch PR and add some commits 111111\n- someone else merges a PR so staging is now at bbbbbb\n- add some commits to the feature branch PR so it's a 222222\nThe feature branch PR modified_files is now between 222222 and bbbbbb, not 222222 and aaaaaa where it branched off from.\nWill hopefully have time to check this in the next couple of days.\n. ",
    "yimingtang": "I came across the same problem. I guess the diff option that danger uses is not .... However, GitHub uses git diff commitA...commitB by default.\nRef: https://git-scm.com/docs/git-diff\n. master:           ---a--------b--------c--------d\n                      \\\n                       \\\nfeature-branch:         e------f----g\nUsually, if a contributor rebased or merged master into feature-branch before sending a pull request, danger works well.\nHowever, if a developer sends a PR from feature-branch to master directly, \ud83d\udca5 ! GitHub uses git diff d...g command and shows the diff on web. Danger uses ruby-git gem which only supports git diff d..g command.\n. Here's a quick fix:\n1. Fork ruby-git and add a git diff ... API or a git merge-base API.\n2. Send a PR.\n3. Use the forked version of ruby-git in Danger.\n4. Once the PR has been merged, use the new ruby-git.\nI'm not familiar with Ruby, so anyone can help?\nHere's an outdated git merge-base PR: https://github.com/schacon/ruby-git/pull/43/files\n. Awesome! Thank you, @orta .\n. Thank you for your reply. \u2764\ufe0f \nWill danger always return passed if I add a --no-fail flag? If so, it's not the behavior that I expect. My requirement is that if it's not a PR or there aren't enough environment variables, danger skips running instead of crashing the script.\nHere is the result of bundle exec danger --verbose command run in travis-ci and that's what I want. https://travis-ci.org/danger/danger/jobs/141102875#L590\nbundle exec danger --verbose\nNot a Pull Request - skipping `danger` run\nHowever, in Jenkins-CI if there are not enough environment variables (e.g. ghprbPullId), danger crashes before telling Not a Pull Request - skipping danger run. Because an EnvironmentManager object can't be initialized at the beginning of the method run. It raises an exception because of lack of environment variables.\nHere is the call stack:\nCould not find a valid pull request within the known CI sources (RuntimeError)\n/Users/username/.rvm/gems/ruby-2.3.1/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:21:in `initialize'\n/Users/username/.rvm/gems/ruby-2.3.1/gems/danger-0.8.3/lib/danger/commands/runner.rb:43:in `new'\n/Users/username/.rvm/gems/ruby-2.3.1/gems/danger-0.8.3/lib/danger/commands/runner.rb:43:in `run'\nAnd code is here:\nhttps://github.com/danger/danger/blob/254b78975417fd3d2a03e87d956c1e20e7d61a7f/lib/danger/commands/runner.rb#L42\n. \ud83d\udc4d \n. ",
    "BasThomas": "I think this can be closed? :). I think @JoeSSS's idea was not to put the output in the main PR body, but to always put it in the tail (last) comment and delete any previous Danger comment (that matches the ID).. ",
    "ffittschen": "I'm just leaving these stacktraces here, because this is what got printed out, when I ran into this issue and this way the issue is easier to find \ud83d\ude09\n$ bundle exec danger local\nNo recent pull requests found for this repo, danger requires at least one PR for the local mode. (RuntimeError)\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/ci_source/local_git_repo.rb:52:in `initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:12:in `new'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:12:in `block in initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/2.2.0/set.rb:283:in `each_key'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/2.2.0/set.rb:283:in `each'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:9:in `initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/commands/local.rb:29:in `new'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/commands/local.rb:29:in `run'\n$ LOCAL_GIT_PR_ID=1\n$ bundle exec danger local\nCould not find the pull request (1) inside the git history for this repo. (RuntimeError)\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/ci_source/local_git_repo.rb:50:in `initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:12:in `new'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:12:in `block in initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/2.2.0/set.rb:283:in `each_key'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/2.2.0/set.rb:283:in `each'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/danger_core/environment_manager.rb:9:in `initialize'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/commands/local.rb:29:in `new'\n    /Users/florian/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-0.8.3/lib/danger/commands/local.rb:29:in `run'\n. I'm using a different approach:\nA simple express API that is the target of a GitLab merge request webhook. On receiving a merge request event, it will parse the body, and try to trigger a build in the target repository.\nIn the .gitlab-ci.yml I then have a special job for danger:\nyml\ndanger:\n  script:\n  - danger\n  only:\n  - triggers\nMy other jobs have the except: triggers option set.\nIf you are interested, you can try it out: https://github.com/ffittschen/gitlab-ci-trigger. @sleekybadger Yes, you can see the request URI in the attached crashlog. Using the env variable you mentioned, I set the base url to https://gitlab.com/api/v4 since with v3 it doesn't work.\nFor most of the merge requests Danger runs successfully. But sometimes it crashes in the place mentioned in the crashlog.. I'd like to, thats why I asked how I can debug it ;)\nIs there already any way to run danger local against GitLab?. Generated comment as printed by your fork (I replaced \\n with newlines):\nhttps://gist.github.com/ffittschen/b5c27f537e81e0d3e2c4b2f4d8cd4080\nDangerfile line 62 is the following:\nruby\n    fail(\"`xit` or `fit` left in tests (#{file})\") if contents =~ /^\\w*[xf]it/. Removing line 62 resulted in the error being thrown in line 63: https://gist.github.com/ffittschen/4fea64628edee730cddbee734a0c5d4a\nDangerfile line 63 is the following:\nruby\n    fail(\"`xdescribe` or `fdescribe` left in tests (#{file})\") if contents =~ /^\\w*[xf]describe/\nWhen I removed that line as well, Danger succeeded.\nEDIT: I just ran another test substituting \\w in the regular expression with [[:alnum:]] but this results in the same error message: \n\nInvalid Dangerfile file: invalid byte sequence in UTF-8. I just found the issue: In the Dangerfile I linked above you can see that I'm reading all modified files and added files and then apply the regex to the contents. But some of these might not be source files but rather images etc.\n\nWhen I check the extension before reading the file the two lines that caused the problems above run successfully \ud83d\udc4d\ud83c\udffb\nIn case someone stumbles upon the same problem, here is my updated snippet:\nruby\n(modified_files + git.added_files - %w(Dangerfile)).each do |file|\n  next unless File.file?(file)\n  accepted_formats = [\".swift\", \".m\"]\n  if accepted_formats.include? File.extname(file)\n    contents = File.read(file)\n    fail(\"`xit` or `fit` left in tests (#{file})\") if contents =~ /^\\s*[xf]it/\n    fail(\"`xdescribe` or `fdescribe` left in tests (#{file})\") if contents =~ /^\\s*[xf]describe/\n  end\nend. ",
    "Antondomashnev": "Thanks for the quick reply.\nProbably that's should be like jenkins, I'll try to take a look on it later.\n. @czechboy0 amazing, I'm using Buildasaur. \nI think I could do a pr to make danger support Xcode Server CI later soon.\n. > @Antondomashnev Could you remove this ask method? Thanks!\nRemoved in 6dbc289\n. @orta I'd love to be a part of the Danger community ;)\n. @orta I personally find the second option nicer. Would try to come up with a PR soon.\n\nWould also be nice to be able to specifically see if there are reviewers ( once that API is out ) for a PR\n\nYep, but I think we can start with the basics, and the next step could be a reviewers check \ud83d\ude04 \n. I've started working on it and want to ask your opinion about architecture:\nI've selected this approach your proposed\n```ruby\ngithub.review.start()\nunless changelogName\n  github.review.comment(\"changelog.md\", 12, \"Please include your name in the CHANGLOG\")\nend \ngithub.review.submit()\n```\nAnd I want to extend it with the following interface for review object\n```ruby\nStarts a new review or continue the ongoing one\ndef start\nThis adds a comment to the review body\ndef comment(message, type) where type in [\"message\", \"warning\", \"failure\"]\nThis adds an inline comment to review\ndef inline_comment(file, line, message, type) where type in [\"message\", \"warning\", \"failure\"]\nThis submits a review with one of the following event: [\"approve\", \"request changes\", \"comment\"]\nIf there are failure comments or inline comments -> \"request changes\" otherwise -> \"approve\"\ndef submit\n```\n@JuanitoFatas @orta what do you think about that proposal?. @orta thanks, I think we can use the same syntax in review object instead of comment and inline_comment \ud83d\ude04 . > I think approval without comment is perfectly fine IMO, if this doesn't feel right, we can change that at a later date. Note you should check if that's possible before making the assumption it is possible.\nCurrently, it looks like this for example:\n\nBut yeah, maybe less \"spammy\" messages in PR - better \ud83d\ude04 . @JuanitoFatas yep, I've noticed it, but I'm a bit confused now why it's green on my local machine with the same command.\nDo you have any idea why it could happen?\nI've also created a test #704 with up to date master and it fails with rubocop as well, really weird.. Aha, that could be the case https://github.com/bbatsov/rubocop/issues/3968\nI wanna try to downgrade rubocop to 0.46  and see what happens.. Yes the latest rubocop release of 0.47.1 was the issue.. @orta thanks, could you explain why the continuous-integration/appveyor/pr is red? Never worked with it \ud83d\ude04 . @orta to my mind \"message placeholder\" would be enough.. > Please include a CHANGELOG entry. \nHm, is that a bug or I'm missing something?. > Probably just CI on an older commit, it's gone now\nYeah seems like not a Danger related \ud83d\udc4d . @orta sure thing. @orta hah, it's not that easy, because the method is not available for ruby 2.0 \ud83d\ude04 . @orta done \ud83d\ude09 . @jeroenvisser101 thanks, that makes sense.\n. Sure, my mistake sorry.\n. yes, you're right\n. not really, if the Buildasaur pattern has only one #. I think we can omit positive lookbehind here\n. Sure, do you think we should provide an example here or what are your thoughts? \ud83d\ude04 . Done in 5730d68. Fixed in 5730d68. @orta looks cool \ud83d\udc4d \nThe small feedback: \n1. @return [GitHubReview] -> @return [GitHubSource::Review] or we can just leave Review.\n2. Should we mention github.review.markdown(...) ?. ",
    "czechboy0": "It should be easy or super easy to get danger working with Xcode Server.\nSuper easy version:\nIf you're using Buildasaur, the automatically created bots for each PR already follow a scheme which contains both the repo name and the PR number (it's BuildaBot [danger/danger] PR #17, meaning BuildaBot [REPO_SLUG] PR #PR_NUMBER). So all you need to do in the danger adapter is to read the bot name from the XCS_BOT_NAME envvar and parse out the repo slug and the PR number. AFAIR danger takes care of the rest.\nEasy version:\nIf you're not using Buildasaur and for some reason you manually create Bots for each PR, you would need to manually inject the environment variables in the prebuild/postbuild script with something like export REPO_SLUG=danger/danger and export PR_NUMBER=17, which you'd detect in the danger adapter. It's a stretch, tbh I think the first version using Buildasaur is just much simpler.\nIn both cases, you'd trigger danger from the prebuild script.\n. Great work! Just one piece of feedback:\nCurrently when someone uses Xcode Server but doesn't use Buildasaur, the validates function seems to return true in that case. I suggest you try to parse the bot name, and if it's there, also check that it parses into the two expected parts (a string and a number). Only then it should validate. \nYou could even print a warning if someone does try to run danger on Xcode Server without Buildasaur, maybe even just a link to this issue would be helpful. \n. ",
    "MatejBalantic": "Thanks. Looks like the diff output for moved files is different between git versions / OS, I was kind of afraid of this. Let me find a more bulletproof regex\n. Looks like this might be a more complex issue than it seems. It appears that a version of GIT running on CI actually lists both old and a new file when moving files. Running this on OS X will list files as described above. I'll try to run this on a linux machine to get more insights\n. @jeroenvisser101 I see, didn't realize travis also runs tests. I guess this different behavior between environments is still a problem that we need to address before this PR could be merged?\n. Hey @jeroenvisser101, it would be great if you can help, I can't reproduce this on any environment available to me. If you can get me raw diff dump I could work from there\n. Good point, fixed that\n. ",
    "hanneskaeufler": "How would we know if the installed danger is the current version?\nis_outdated = `bundle outdated danger`.include?(\"* danger\")\ncomes to mind but ist that worth doing every time an error is raised? Danger might not even be installed through bundler all the time but as a gem directly.\nMaybe remove the \"Updating the Danger gem ...\" text and not bother with it? \n. Cool, did not know that. Seems like a lot of work + code for networking / networking error handling etc. for something pretty minor?\n. Thanks for the merge. Great first-commit experience btw. An easy to pick up issue, and I just love it when I can git clone && bundle && rake and be confident in the tests right from the get-go. Would be stoked to join the org \u2764\ufe0f \n. \ud83d\udc4d yeah makes sense. I added something like that. Still I'm not entirely happy with this as uses some arbitrary magic number to truncate and disregards most of the causes as listed above \ud83d\ude10 \n. Is there a way to see changes like these in a test environment? The comment likely looks very meh. \n. \nThis is what it looks like when I slap the html into this pr in the inspector. I had to add a second td, missed that one ...\n. I moved the commit of what I missed into https://github.com/danger/danger/pull/427\n. That's kinda low-risk, so merging myself. Just tell me if thats not something you want me to do :)\n. > Tests were not updated\nBtw isn't that the point of a decent test-suite? Refactor some code and NOT having to touch the tests, yet they still pass?\n``` ruby\nhas_app_changes = !git.added_files.grep(/lib/).empty? # added instead of modified files \nhas_test_changes = !git.modified_files.grep(/spec/).empty?\nif has_app_changes && !has_test_changes\n  warn \"Tests were not updated\"\nend\n```\nMaybe?\n. No worries, rebased and merged, thanks for the heads up \ud83d\udc4d \n. Well my guess was right ... second commit works around this.\n. Looking epic, I wondered how one would implement this. Still seems like a looot of code for a very minor (?) change in error message that has to be maintained.\n. Nice this looks like a great tradeoff!\n. Yeah that breaks testing setup for plugins ;) Example Failed Build\n. Options are merged with Runner options here, so shown in help output danger local --help but I don't think they are used further.\n. my pleasure, thanks for reviewing\n. Fixed in #710 . Oops. My bad. \ud83e\udd37\u200d\u2642\ufe0f  Thanks for the fix. So I guess this is closed.. Doesn't it have to be github.pr_author rather than pr_author in the following line?\nruby\n  warn(\"Please provide a changelog summary in the Pull Request description @#{pr_author}\"). Moving to different approach in #729 . I am okay with it now for the moment :octocat: . Rebased and ready for review. I checked this out locally and it was all green. then I bundle updated and it was broken just like on circle.. Shortterm fix is in #737, one should probably investigate whats going on there.. Yeah so this is currently broken, I only added the changelog entry to see it fail first. Now if I make the commit to pin the gitlab gem to 0cc49d008c6448d652fa27b3f9b3f60202dffab3 it should be green.\nFunny btw how circle ci reports with green checkmark but tests were failing?\n\n. Ah note that I rather think #738 is the way to go here, I think I wann close this.. Is there an expectation missing in here?\n. lingering TODO? \n. Missing the rename here too? Great PR!\n. if only I could spell my name right -,-\n. Fixed that, no idea why that comment is not marked as \"on an outdated diff\". Maybe because of those review changes \u2753 \n. lol yeah, I even chickened out and did not add a test for the second branch of the is_private conditional. \ud83d\ude06 \n. Is there a specific reason you picked allow versus expect here (and below)?. yeah I always regard allow as not an expectation, this would mean those two tests dont actually have an assertion in them (you could make it pass by removing all the production code from the method). However, I played around a bit with the tests and the way rspec seems to work this is not achievable so allow and expect is only a wording/intention difference here \ud83d\udc4d . Not excited about this, but it was a pain to update those verifications after each change I made during implementing the summary. Most of those verifications should not really care about the summary? Matching on a regexp was also not something I wanted to do so I copped out with end_with.. Thats the meat of the diff in this file lol. I merged two #generate_comment blocks, the diff format just makes it look funky.. There already was a #parse_comment block \ud83d\ude09 . the above three tests are already covered in the #table_kind_from_title block.. So I guess depending on master is biting us here :) There has not been a release after 3.7.0 which we would want as the comment points out.. ",
    "neonichu": "I guess @DangerCI doesn't like typo fixes :grin:\n. :+1: \n. @DangerCI ya tu sabes\n. ",
    "joshrlesch": "Ok cool, I will open a PR next week when I have some time. But first just trying to get it to post a comment. :/\nWhen I use the local flag with --verbose it tells me the pull that it is going to use, but it doesn't actually post anything. I know my github token has the correct auth as I use it for commit status.\nSeems like it trying to but nothing is showing on the actually PR.\n```\nRunning your Dangerfile against this PR - https://github.com/app/example/pull/3053\nPrinting warning 'PR is classed as Work in Progress'\ndanger results:\n+-----------------------------------+\n|             Warnings              |\n+-----------------------------------+\n| PR is classed as Work in Progress |\n+-----------------------------------+\n``\n. Ok, so I got it working with teamcity but hardcodingGIT_URLandghprbPullId`\nIs there a better way to spoof it to thinking its a jenkins ci server?\nBut to me some scary stuff shows in the logs. Im not the best at git, but I don't like the fact that its trying to delete danger_base as I have to set that to develop\n[15:13:57][Step 10/10] fatal: Couldn't find remote ref refs/pull/3069/merge\n[15:13:58][Step 10/10] fatal: ambiguous argument 'danger_head': unknown revision or path not in the working tree.\n[15:13:58][Step 10/10] Use '--' to separate paths from revisions, like this:\n[15:13:58][Step 10/10] 'git <command> [<revision>...] -- [<file>...]'\n[15:13:58][Step 10/10] error: The branch 'danger_base' is not fully merged.\n[15:13:58][Step 10/10] If you are sure you want to delete it, run 'git branch -D danger_base'.\n[15:13:58][Step 10/10] error: The branch 'danger_base' is not fully merged.\n[15:13:58][Step 10/10] If you are sure you want to delete it, run 'git branch -D danger_base'.\n. @jeroenvisser101 Sorry didn't work on this over the weekend. You asked for a Gist with code to repo this, but honestly Im not doing more than the DangerFile and these three lines in a custom fastlane action.\n```\nENV['GIT_URL'] = \"https://github.com/org/private_repo\"\nENV['ghprbPullId'] = \"3069\"\nbundle exec danger --base=develop --verbose\n```\nDangerfile looks like this\n```\nMake it more obvious that a PR is a work in progress and shouldn't be merged yet\nwarn(\"PR is classed as Work in Progress\") if pr_title.include? \"[WIP]\"\nif pr_body.length < 5\n  warn(\"Please provide a changelog summary in the Pull Request description @#{pr_author}\")\nend\nWarn when there is a big PR\nwarn(\"Big PR\") if lines_of_code > 500\nif ENV['AMOUNT_INCREASE'].to_f >= 1.00\n    warn(\"You are going to increase the app size by #{ENV['PERCENT_INCREASE']}% to #{ENV['NEW_APP_SIZE']} MB's. That means we are only #{ENV['AMOUNT_REMAINING']} MB's from our 100 MB cap.\")\nend\n``\n. @jeroenvisser101 I'm curious what you guys are trying to do here?\nhttps://github.com/danger/danger/blob/d6e1389d3c9f2de7d53b5eecbdf784f9f3f409c7/lib/danger/environment_manager.rb#L36-L69\nYou're hard codingdanger_baseanddanger_head`. What is the purpose of that?\nAnd what the point of calling ensure_danger_branches_are_setup? Why do we need danger branches?\n. I believe so, Danger is posting its comments to the PR, so it has to know the repo and PR. \n. Yeah I think your right, I removed the --base=develop as I didn't need that on my build agent. It just checks out a ref of the branch by ssh. Danger still posts to the PR but its not doing the clean up, guessing because of the -D being needed.\nENV['ghprbPullId'] = \"3069\"\nENV['GIT_URL'] = \"https://github.com/org/private_repo.git\"\nputs `bundle exec danger --verbose`\noutput in my build logs\n[09:11:48][Step 4/5] From ssh://github.com/org/private_repo\n[09:11:48][Step 4/5]  * [new ref]         refs/pull/3069/merge -> danger_head\n[09:11:49][Step 4/5] error: branch 'danger_base' not found.\nI ssh'ed into my build agent and did a git branch in the checkout dir and get this after Danger is done running. As you can see danger_head is still around.\ntc-mac-03:16fab46ab991b3c qaorg$ git branch\n* (HEAD detached at 23ca967)\n  danger_head\nI get around danger not being able to delete that by making teamcity clean the checkout directoy.\n. Awesome, I can help test that change if you need some help.\n. having same experience here also. And I also only execute the danger command if the CI server sees a PR is open for the branch.\n. Any progress on this?\n. ",
    "AnandWalvekar": "Hi @jeroenvisser101 \nI have posted a comment in https://github.com/danger/danger/issues/727. Can you please help me on it.\nIn short danger keeps saying  \"Could not find the type of CI for Danger to run on\". Please correct me if I am wrong.\n\"If our repo is hosted on Bitbucket, we can't use danger\". @orta \nCould you please elaborate your answer. Also check my comment in https://github.com/danger/danger/issues/744\nDo you mean danger should only be run from CI(in which case I need to configure Jenkins on my machine) & not command line? Please share if you have any link to setup for Bitbucket.\nSo for what I did was\n1) Cloned bitbucket repo on my local machine\n2) cd into directory and \"bundle init\"\n3) update Gemfile by adding  gem \"danger\"\n4) bundle install (gems will be installed in $HOME/.rvm)\n5) bundler exec danger init\n -  Create a Dangerfile and add a few simple rules.\n -  Create a GitHub account for Danger to use, for messaging. DangerBot will need access to your repo\n -  Set up an access token for Danger.\n -  Set up Danger to run on your CI.\n6) edited .bash_profile by adding below lines\nexport DANGER_BITBUCKETSERVER_USERNAME=\"AAA\"\nexport DANGER_BITBUCKETSERVER_PASSWORD=\"BBB\"\nexport DANGER_BITBUCKETSERVER_HOST=\"http://CCC\"\n7) bundler exec danger pr (blocked here). I am referring http://danger.systems/guides/getting_started.html#setting-up-danger-to-run-on-your-ci documentation but not sure what should I do next to run Dangerfile. > danger pr the command only supports working with GitHub - you'll have to skip that step\nYou mean skip running danger pr in terminal instead run in CI(Jenkins) process? How does it make difference if I run in terminal or in CI if Buitbucket itself is not supported? Sorry to bother you but would want to be clear on basics. Thank you \ud83d\udc4d . Hi @orta @RishabhTayal @KrauseFx @jeroenvisser101 \nMy progress with Danger so far is as below. Please let me know if I am doing any mistake.\nOn my mac machine\nruby -v\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin16]\ndanger --version\n/usr/local/lib/ruby/gems/2.5.0/gems/git-1.3.0/lib/git/lib.rb:999\n5.5.9\nCreated a directory /Users/walvekar.anand/Danger which has Dangerfile\nIncluded below code in Jenkins build shell script \ncd \"/Users/walvekar.anand/DangerProj\u201d\nPATH=\"/usr/local/bin/:$PATH\"\nJENKINS_URL=\"http://localhost:8080/job/Danger/\" DANGER_BITBUCKETSERVER_PASSWORD=\u201cXXX\u201d DANGER_BITBUCKETSERVER_HOST=\"https://YYY.git\" bundle exec danger --verbose\nError in Jenkins console\n\u001b[33mNot a Pull Request - skipping danger run\u001b[0m\nFinished: SUCCESS\n. Hi @jeroenvisser101 \nYou are right it was not getting the env vars indeed. I have updated my above comment accordingly which is now showing error as \"Not a Pull Request - skipping danger run\". Adding 2 more env vars\nCHANGE_URL=\"https://bitbucket.xxx.com/projects/UUU/repos/react-native/pull-requests\" CHANGE_ID=\"1\"\nVerified the project root dir\nGemfile\nGemfile.lock\nDangerfile\nVerified the remote \ngit remote -v\nDangerfile content\nwarn(\"Big PR\") if git.lines_of_code > 500\nI get error\nCould not set up API to Code Review site for Danger\n\u001b[0m\nFor Danger to run on this project, you need to expose a set of following the ENV vars:\n - GitHub: \u001b[33mDANGER_GITHUB_API_TOKEN\u001b[0m\n - GitLab: \u001b[33mDANGER_GITLAB_API_TOKEN\u001b[0m\n - BitbucketServer: \u001b[33mDANGER_BITBUCKETSERVER_USERNAME, DANGER_BITBUCKETSERVER_PASSWORD, DANGER_BITBUCKETSERVER_HOST\u001b[0m\n - BitbucketCloud: \u001b[33mDANGER_BITBUCKETCLOUD_USERNAME, DANGER_BITBUCKETCLOUD_PASSWORD\u001b[0m\n - VSTS: \u001b[33mDANGER_VSTS_API_TOKEN, DANGER_VSTS_HOST\u001b[0m\nFound these keys in your ENV: CHANGE_ID, JENKINS_URL, CHANGE_URL, DANGER_BITBUCKETSERVER_PASSWORD, DANGER_BITBUCKETSERVER_HOST, HUDSON_SERVER_COOKIE, SHELL, TMPDIR, BUILD_TAG, OLDPWD, WORKSPACE, RUN_CHANGES_DISPLAY_URL, com.apple.java.jvmTask, USER, __CF_USER_TEXT_ENCODING, JAVA_MAIN_CLASS_76, JENKINS_HOME, PATH, RUN_DISPLAY_URL, PWD, JOB_NAME, BUILD_DISPLAY_NAME, XPC_FLAGS, BUILD_ID, JOB_BASE_NAME, XPC_SERVICE_NAME, SHLVL, HOME, EXECUTOR_NUMBER, JENKINS_SERVER_COOKIE, NODE_LABELS, LOGNAME, HUDSON_HOME, NODE_NAME, JOB_DISPLAY_URL, BUILD_NUMBER, HUDSON_COOKIE, JAVA_ARCH, _, BUNDLER_ORIG_BUNDLE_BIN_PATH, BUNDLER_ORIG_BUNDLE_GEMFILE, BUNDLER_ORIG_BUNDLER_ORIG_MANPATH, BUNDLER_ORIG_BUNDLER_VERSION, BUNDLER_ORIG_GEM_HOME, BUNDLER_ORIG_GEM_PATH, BUNDLER_ORIG_MANPATH, BUNDLER_ORIG_PATH, BUNDLER_ORIG_RB_USER_INSTALL, BUNDLER_ORIG_RUBYLIB, BUNDLER_ORIG_RUBYOPT, BUNDLE_BIN_PATH, BUNDLE_GEMFILE, BUNDLER_VERSION, RUBYOPT, RUBYLIB, GEM_PATH, GEM_HOME, MANPATH.\nFailing the build, Danger cannot run without API access.\nYou can see more information at http://danger.systems/guides/getting_started.html\nBuild step 'Execute shell' marked build as failure\nFinished: FAILURE. Hi @jeroenvisser101 \nI have added DANGER_BITBUCKETSERVER_USERNAME which make my command to look at below.\nJENKINS_URL=\"http://localhost:8080/job/Danger/\" DANGER_BITBUCKETSERVER_USERNAME=\u201cXXX\u201d DANGER_BITBUCKETSERVER_PASSWORD=\u201cYYY\u201d DANGER_BITBUCKETSERVER_HOST=\"https://XXX@git.TTT.com/path/to/project.git\" CHANGE_URL=\"https://git.TTT.com/projects/path/to/repos/react-native/pull-requests\" CHANGE_ID=\"1\" bundle exec danger --verbose\nBut now its shows\nParse error\n\nJSON::ParserError: 765: unexpected token at 'Invalid request from host 125.19.27.315: Note that Bitbucket does not support Git's legacy HTTP transport protocol.'\n  /usr/local/Cellar/ruby/2.5.0/lib/ruby/2.5.0/json/common.rb:156:in parse'\n  /usr/local/Cellar/ruby/2.5.0/lib/ruby/2.5.0/json/common.rb:156:inparse'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/request_sources/bitbucket_server_api.rb:67:in fetch_json'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/request_sources/bitbucket_server_api.rb:36:infetch_pr_json'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/request_sources/bitbucket_server.rb:46:in fetch_details'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/danger_core/environment_manager.rb:51:infill_environment_vars'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/danger_core/dangerfile.rb:267:in run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/danger_core/executor.rb:28:inrun'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/lib/danger/commands/runner.rb:68:in run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/claide-1.0.2/lib/claide/command.rb:334:inrun'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.9/bin/danger:5:in <top (required)>'\n  /usr/local/bin/danger:23:inload'\n  /usr/local/bin/danger:23:in `'\nBuild step 'Execute shell' marked build as failure\nFinished: FAILURE. ISSUE RESOLVED\nI just changed DANGER_BITBUCKETSERVER_HOST=\"https://XXX@git.TTT.com/path/to/project.git\" \nto DANGER_BITBUCKETSERVER_HOST=\"https://git.TTT.com\" in above command & it worked.\nThank you very much @orta @jeroenvisser101 for you help.. Hi @orta @jeroenvisser101 @JuanitoFatas \nI am not sure what went wrong again. With same command which worked before now its giving error\n\nThe code in 5.5.10 tag is\n\nI have verified API using curl command which works fine \ncurl -D- -u username:password -X GET -H \"Content-Type: application/json\" https://companyurl.com/rest/api/1.0/projects/AWPK/repos/react-native/pull-requests/17\nObservation \nIn the below command which was working before, irrespective of CHANGE_ID value, the error remains same. I tried giving the valid pull request Id but seems not working\nJENKINS_URL=\"http://localhost:8080/job/Danger/\" DANGER_BITBUCKETSERVER_USERNAME=\u201cXXX\u201d DANGER_BITBUCKETSERVER_PASSWORD=\u201cYYY\u201d DANGER_BITBUCKETSERVER_HOST=\"https://XXX@git.TTT.com\" CHANGE_URL=\"https://git.TTT.com/projects/path/to/repos/react-native/pull-requests\" CHANGE_ID=\"1\" bundle exec danger --verbose. Hi @orta @jeroenvisser101 \nResolved.... The issue was with back tick.\nDANGER_BITBUCKETSERVER_USERNAME=\u201c XXX \u201d\nDANGER_BITBUCKETSERVER_USERNAME= \" XXX \" . I have cloned the repo from bitbucket(not GitHub) and getting same error(raise_error_for_missing_remote). Please someone help me to resolve the same. ",
    "ReadmeCritic": "@orta danger got me!!\n. added a better summary \ud83d\ude0a \n. Join? Sure why not\n. @orta is it possible something has changed? or am I missing something\nBefore changing the setting:\nhttps://circleci.com/gh/dkhamsing/scan-urls/73\n\nSuppressing export of environment variables DANGER_GITHUB_API_TOKEN fork PR builds\n\nAfter changing the setting:\nhttps://circleci.com/gh/dkhamsing/scan-urls/74\n\nExporting env vars from project settings\n. Except I got this problem NOT on a fork. Anyway, closing. Keep this in mind if someone reports an issue. Thx\n. thx. \n",
    "kcharwood": "Cool. I'll look  that direction and see what I can dig up\n. @orta If no PR has been created yet, would that prevent Danger from running on a per commit build?\n. Gotcha.\nAny appetite for making a pull request id optional, and just not expose functionality around validating items associated with that if it is not provided?\nThere are some useful things here I can think I can get out of a per commit build running Danger, but my teams current Bamboo + Bitbucket setup/workflow complicates that too much.\n. ",
    "nwest": "Done.\n. ",
    "therealbnut": "I just got this message on our CI (Buildkite), I believe it happened because it was the first and only commit on a PR, CI ran when the commit went up, before the PR was opened.\n\nNot a Pull Request - skipping danger run\n\nI think a desirable fix would be to make danger exit with a non-zero code when it cannot detect a PR. That way when the PR is open it cannot be merged without running danger, you can re-run the build, or trigger it with other commits etc.. @Startouf yes, for me at least that's exactly the reason. IMO danger should return a non-zero exit code in this case.. I still think build failure is the right choice, but @orta\u2019s suggestion of rebuilding on the \u201cPR open\u201d hook worked for me (edit: on Buildkite).. @levibostian sorry, I should have clarified, I'm not using CircleCI.\nThere may be a setting for it in CircleCI (I'm not familiar sorry), but until you have a better solution you may be able to get something like this (untested) to force a CI failure when there isn't a PR:\nbash\nif [[ -z \"${CI_PULL_REQUESTS}\" ]]; then\n  &2> echo -e \"\\033[31merror: Danger requires a pull request to function correctly\\033[0m\"\n  exit 1\nfi. For Github in your project settings:\n\nThere should be a web hook already for your CI:\n\nThe Pull Request hook is the one you'll need, if CircleCI supports it:\n\nedit:\n@levibostian if you have further questions about setting up web hooks and running builds when a pull request is open you may get more support from the CircleCI forums, but please submit your findings here :)\n. @levibostian actually, it looks like there's fairly comprehensive instructions in the danger docs:\nhttp://danger.systems/guides/getting_started.html (search for CircleCI, I can't directly link you sorry, it'd be nice if http://danger.systems/guides/getting_started.html#circleci took you there). @levibostian sounds fair, I had to wait for PR metadata support in Buildkite. You can make a GitHub API call to determine if the PR exists. Danger does this call already afaik, but unfortunately the Danger command still succeeds when there isn't a PR.\nRead the next section in the Danger docs, it talks about triggering from a commit as well as the PR, it may be worth trying.. ",
    "mandrizzle": "This is happening to me on Circle CI 2.0 for my pull requests. It was working fine on 1.0, but since switching, Danger has been working sometimes despite having all the required environment variables set. . ",
    "ppaulojr": "It happens randomly for me.. ",
    "doodla": "Still happens randomly on Circle 2.0 for me.. ",
    "Startouf": "Could it be that it happens if the test started to run before the PR was created ?. THanks for that tip, now I seem to still have some problem with Danger not being able to detect failed tests in my JUnit file, and reporting everything as green. I believe since CircleCI 2 I have never managed to make it work. ANy idea ?\nHere's my RSpec danger file\nruby\nif ENV['CIRCLECI']\n  Dir.glob('~/**/*.xml').each do |f|\n    junit.parse f\n  end\n  junit.headers = %i(file name)\n  junit.show_skipped_tests = true\n  junit.report\nend\nANd the relevant part of my circleCI Workflow is\n```yaml\n- run: mkdir ~/rspec\n- run:\n    name : run rspec tests\n    command : >\n      bundle exec rspec\n      -r rspec_junit_formatter\n      --format progress\n      --format RspecJunitFormatter\n      --out ~/rspec/junit.xml\n      $(circleci tests glob \"spec/*/_spec.rb\" | circleci tests split --split-by=timings --timings-type=filename )\n    when: always\n- store_test_results:\n    path: ~/rspec\n- store_artifacts:\n    path: ~/rspec\nDangerfile-RSpec\n\nrun:\n    name: Skip github fingerprint check that randomly fails\n    command: mkdir -p ~/.ssh/ && echo -e \"Host github.com\\n\\tStrictHostKeyChecking no\\n\" > ~/.ssh/config\n    when: always\nrun:\n    name: run danger for RSpec tests\n    command: >\n      bundle exec danger\n      --danger_id=danger-rspec-${CIRCLE_NODE_INDEX}\n      --dangerfile=Dangerfile-rspec\n    when: always\n```\n\nANy idea What I'm doing wrong @kompiro ?. ",
    "levibostian": "@therealbnut Thank you very much. \nIt appears that Circle is not designed in a way to work nicely for Danger. Circle does not trigger a new build when a PR is created on GitHub (I have the pull request hook enabled on the CircleCI webhook as you mention above). \nCircle is also not very reliable I can tell in checking if a commit is part of a pull request. Circle can tell you if a branch is part of a PR, but not the commit you pushed up. This gets to your comment about the getting started guide. It suggests to setup Circle to only build when you make a PR instead of on commit. That's not satisfactory to me. \n\nI am going to go back to the drawing board a bit. I want to use Danger, but if Circle does not support it very reliably, I might as well use a pull request template until Circle adds better support for Danger. . I found a way to make CircleCI and Danger work OK together thanks to @therealbnut's suggestion. \nIn my project, I created the following bash script named assert_danger_running_on_pr.sh in the root directory of my project. Here is the content of the file:\n```\nThis file exists because CircleCI does not have very good support (yet) for Danger.\n\nWhen you create a commit on github, CircleCI triggers a build of that commit, which could include running Danger.\nWhen you run Danger, it checks if your branch currently on is part of at least 1 pull request on GitHub. Not if that commit is part of a pull request.\nAlso, if you were to push up a commit to GitHub, then create a pull request, CircleCI does not trigger another build of your project from that pull request. This is why\nDanger recommends that you only setup CircleCI to build on pull requests instead of commits (access through project Advanced Settings in CircleCI). But, I like running tasks\non commits so I do not like that option.\n\nWhat this script does is checks if this branch is part of a pull request (the best we can do at the moment). If not, throw an error.\nThis asserts that when we create a commit and then create a pull request, Danger will be marked as failed instead of as passed. So when we create a new pull request, we\nneed to go into CircleCI and manually trigger a rebuild of the Danger task once the pull request is created and it will run successfully.\nSure, this sucks but it's better then Danger passing as exit 0 code when the pull request is not created yet, you create the pull request, see Danger ran \"successfully\" (but not really, just passed)\nand then you merged in your pull request without Danger actually running. This is as good as we can do until CircleCI improves for us.\nif [[ -z \"${CI_PULL_REQUESTS}\" ]]; then\n  echo -e \"\\033[31merror: Danger requires a pull request to function correctly\\033[0m\"\n  exit 1\nfi\n``\n*Note: Make sure to make this script executable after creating:chmod u+x assert_danger_running_on_pr.sh`*\nThen, inside of my .circleci/config.yml file, I added the execution of this bash script before I run danger:\ndanger:\n    docker:\n      - image: dantoml/danger:latest\n    steps:\n      - checkout\n      - run: ./assert_danger_running_on_pr.sh\n      - run: bundle install\n      - run: '[ ! -z $DANGER_GITHUB_API_TOKEN ] && danger || echo \"Skipping Danger for External Contributor\" && exit 1'\nNot very pretty, but I am happy with it for the time being until CircleCI adds better support for PRs. . ",
    "wilrnh": "cool. thanks guys.\n. Hey thanks for the pointer! But I'm still not quite there yet.\nI'm now getting undefined method `pr' for #<Danger::Dangerfile:0x007f8281cb3800> where\n```\nspec_helper.rb\n...\nA stubbed out Dangerfile for use in tests\ndef testing_dangerfile\n  env = Danger::EnvironmentManager.new(testing_env)\n  Danger::Dangerfile.new(env, testing_ui)\nend\nand\nplugin_spec.rb\n...\n    #\n    # You should test your custom attributes and methods here\n    #\n    describe 'with Dangerfile' do\n      before do\n        @dangerfile = testing_dangerfile\n        @my_plugin = @dangerfile.my_plugin\n    json = File.read(File.dirname(__FILE__) + '/support/fixtures/github_pr.json')\n    allow(@my_plugin.pr).to receive(:pr_json).and_return(json)\n  end\n\n  it \"should not shit itself\" do\n    @plugin.run\n    expect(\"test\").to eq(\"test\")\n  end\n\nend\n\nend\nend\n```\nI did some digging and found the method pr? in dangerfile.rb, however, if I stub that, my tests still return github.pr_author (example) as nil. Could you throw me some more bones here?. It works! For reference for anyone else:\n```ruby\nplugin_spec.rb\n...\n    #\n    # You should test your custom attributes and methods here\n    #\n    describe 'with Dangerfile' do\n      before do\n        @dangerfile = testing_dangerfile\n        @my_plugin = @dangerfile.my_plugin\n    json = File.read(File.dirname(__FILE__) + '/support/fixtures/github_pr.json')\n    allow(@my_plugin.github).to receive(:pr_json).and_return(json)\n  end\n\n  it \"should not kill itself\" do\n    @my_plugin.run\n    expect(\"test\").to eq(\"test\")\n  end\n\nend\n\nend\nend\n``. Good call, will PR tonight. Uhoh, it looks like a couple methods get lost in space when mockinggithub` this way:\n```\nplugin.rb\nputs github.pr_title\n`rspec` spits out:\nNoMethodError: undefined method `[]' for nil:NilClass\n```\npr_author works fine. The only difference I can see is that pr_title is using @github.pr_json[\"title\"].to_s while pr_author is using pr_json[\"user\"][\"login\"].to_s\nThis isn't too major because I can still do puts github.pr_json[\"title\"] and it works via both rspec and danger. But it would be nice if the mocking worked throughout. Got any other bones?. ps. looks like the attributes issue was fixed in v2.0.0. I got the same undefined method issue using rvm. But 4.0.1 works for me (originally tried 4.0.4 then 4.0.2). Sticking to 4.0.1 for now, but lemme know what I can do to help debug.. uhoh might be more of a fastlane or bundler issue; seems to work locally with direct danger but bundle exec fastlane run_danger on CI/jenkins doesnt :(. fastlane has a 'use_bundle_exec' option for danger. setting this to false seems to work for me:\n```\nFastfile\ndanger(use_bundle_exec: false)\n```. ",
    "gabro": "finally! OSX being case-insensitive didn't really help...\n. Changelog edit done, thank you for the great tool!\n. > Danger has nothing to do with iOS, it should be put in the root of the repo.\nfair enough. It happens to be in my use case, but I see it's not a general consideration.\n\nThough I wouldn't be adverse to a PR adding support for it to work from inside a sub-folder \ud83d\udc4d\n\ncool, I can put something together. I have a couple of approaches in mind:\n- improve the .git folder lookup, i.e. finding the first .git folder \"going up\" in the directory tree\n- allow a danger option to specify the location of the Dangerfile\n@orta any thoughts / preference?\n. Right! I don't know why I hadn't thought of it. I used exactly the same approach on an internal project not later than yesterday \ud83d\ude05\nMore \u2615\ufe0f then I'll work on a PR\n. @orta I tried to take a stab at this. Despite my limited ruby skills, I think the simplest modification would be to pass the result of git rev-parse --show-toplevel to Git.open in GitRepo::diff_for_folder.\nHowever, if I run danger from the ios subdirectory (see the example tree above), ruby-git throws an ArgumentError exception claiming the path does not exists.\nFrom what I've understood this happens because it doesn't have the permissions to perform the check, since it runs from a subdir.\nUnless you have other ideas, I think it's easier to let users specify the location of the Dangerfile instead.\n. No problem, I'll do it tomorrow morning!\nOn 1 Jun 2016 22:58 +0200, Ortanotifications@github.com, wrote:\n\nAww - sorry, this got merge-conflicted, any chance you can rebase? Then this look good to go to me - thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly,view it on GitHub(https://github.com/danger/danger/pull/229#issuecomment-223122725), ormute the thread(https://github.com/notifications/unsubscribe/AAqO5I4KW2BmWN_Znr4kmEFxFQ3ZCd8Hks5qHfKFgaJpZM4Ir3Ci).\n. @orta rebased!\n. \n",
    "kulte": "@orta Is it fixed by that? I have an associated PR, and no Danger comment?\n. @orta \ud83d\ude1e \ud83d\ude22 I'm sure you've looked, but is there nothing that gets returned from the Circle API (assuming that is how you are hooking into Circle, I haven't read the code for Danger yet, just tried to get setup today) that would allow Danger to integrate and run?\n. ",
    "kdawgwilk": "I am also seeing something that seems related to this on Jenkins when using the \"Github Pull Request Builder\" Plugin along with the \"Github Folder\" plugin\n. Running an echo $DANGER_GITHUB_API_TOKEN does spit out the token so unless ruby is using a weird set of environment vars it should be able to see it.  It even says in the error message that it sees the DANGER_GITHUB_API_TOKEN in the list of available environment vars...\ud83e\udd14. ",
    "nikolaykasyanov": "I did something like this for GitLab to fake MR environment (because our Jenkins builder is not exposed to the Internet and GitLab instance cannot communicate with it).\nBasically, it tries to fetch MR json by branch name.\nI can share/contribute if needed.\n. @orta I'll try to make one!\n. @orta yup! Thanks.\n. @orta thanks for the insight, unfortunately my plugin is not in plugins.. It seems to be a local issue, it works perfectly well for my colleague. Thanks for assistance!. Update: apparently rbenv is the culprit. Switching to rvm.. Another options is to use @git.diff.select { |diff| puts diff.type == \"modified\" } instead of @git.diff.stats to get the list of modified files, but I'm not sure about correctness and backward compatibility.. @orta I see. I'll try to tackle this one.\nI noticed one more thing: test case depends on git version in Travis runner. Apparently, older Git versions were reporting moved files as removed & added files. . @orta it seems like c9b61eb67ee225fef0655f68ce9dc38601232de5 helps even with old Git (1.8.5.6 on Travis) versions.\nTravis jobs still fail due to The command \"bundle exec danger --verbose\" exited with 1., though, but nothing relevant in the logs.. @orta \n\nI believe it's a default behaviour since some Git version, so in most cases no changes are required.\nHopefully, we can pass this parameter while invoking Git, eliminating dependency on global configuration & Git version.\n\nAm I missing something?. I believe this can be merged now. Should we elaborate more about backward incompatibility in the changelog?\nI made diff.rename setting as scoped as possible.. Any ideas why does AppVeyor build fail?. @orta it looks like some of the git operations fail: https://ci.appveyor.com/project/orta/danger-47jiu/build/1.0.792#L817. Maybe Windows doesn't like paths with =>.. Since we're not going to implement handling of paths like Hello/{ => World}/file in this PR anyway, I decided to simplify subfolder name to make it valid on Windows.. As far as I can see, gitlab gem 3.7.0 had been released before https://github.com/NARKOZ/gitlab/pull/253 was merged.. So the only way to use danger after 4.3.0 is to use HEAD version of gitlab gem, it seems.. @orta thanks a lot!. \ud83d\udc4d . @orta great idea!. @4oby this message could mean that something important is missing in the environment (PR identifier, for example).\nI'm using Danger on Jenkins with detached head builds, haven't had such message with properly configured environment.. I wonder if moved files will still be present in modified_files or not.. Git \"knows\" if a file is binary, I wonder if there's a way to access that knowledge from Danger.. I'm not sure this PR is the reason but Danger posts comments to the wrong Merge Request.. I'm not even sure whether it's safe to use bsearch on this array. It's definitely sorted but not by mr.sha. Am I missing something?. What about replacing bsearch with stupid linear search? I can make a PR.. @sleekybadger I'm still confused and probably missing something. Doesn't using bsearch on an array assume that it's sorted by the key we use in bsearch's block?. @sleekybadger @orta thanks for discussion & making it quick!. I tested this on my CI and it does indeed work as expected.. \ud83c\udf89 . ",
    "kylejm": "I've just had a case where this error did not appear for me and I got a 404 as above. The problem was that the token didn't have access to private repos, just as this error would explain. Reopen?\nUsing version 3.1.0 and Bitrise.\n. I found that this error is still occurring. With the help for @orta, I added these lines:\nself.scm.exec \"fetch\" if self.scm.exec(\"--no-pager show #{base_commit}\").empty?\nself.scm.exec \"fetch\" if self.scm.exec(\"--no-pager show #{head_commit}\").empty?\nhere, which fixed the issue.\nI'm still wrapping my head around what's going wrong (never having written Ruby before isn't helping). I'm guessing that this call to fetch from the repo isn't explicitly being made early enough, before this call?\n. Thank you all so much for your patience and kind support! \n\nSooo good to see those green ticks! \ud83d\ude01\ud83d\udc83\ud83c\udf89 \n@orta sure! :)\n. Not that I'm aware, I've searched though our Slack for any force pushes to the blue branch, but nothing to it. Are there any other ways I can check for this?\nI don't understand how there are no commits in the difference between these two branches, because there's definitely a diff between them o_O\n. Just tested this fix for #634, got the following stack trace:\nbundler: failed to load command: danger (/usr/local/lib/ruby/gems/2.3.0/bin/danger)\nNoMethodError: undefined method `[]' for nil:NilClass\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/scm_source/git_repo.rb:56:in `raise_if_we_cannot_find_the_commit'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/scm_source/git_repo.rb:45:in `ensure_commitish_exists!'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/scm_source/git_repo.rb:18:in `diff_for_folder'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/danger_core/dangerfile.rb:258:in `setup_for_running'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/danger_core/dangerfile.rb:268:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/danger_core/executor.rb:26:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/lib/danger/commands/runner.rb:66:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.1/lib/claide/command.rb:334:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-1f235a508ed8/bin/danger:5:in `<top (required)>'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in `load'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in `<top (required)>'\nLmk if there's anything I can do to help, or if you'd like me to test anything.\n. @JuanitoFatas sure thing! On it.\n. @JuanitoFatas the following was printed:\n```\n\n, @repository=#, @index=#>\n\"danger_base\"\n\"danger_head\"\n\nbundler: failed to load command: danger (/usr/local/lib/ruby/gems/2.3.0/bin/danger)\nRuntimeError: Cannot find a merge base between 32026b7134ba871f37ec47712a37477ec6aa985f and 6405da6dcd90d888cc983986dcfff90bcdb52a79.\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/scm_source/git_repo.rb:82:in best_merge_base'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/scm_source/git_repo.rb:19:indiff_for_folder'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/danger_core/dangerfile.rb:258:in setup_for_running'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/danger_core/dangerfile.rb:268:inrun'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/danger_core/executor.rb:26:in run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/lib/danger/commands/runner.rb:66:inrun'\n  /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.1/lib/claide/command.rb:334:in run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-4720d20d9f01/bin/danger:5:in'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in load'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in'\n```\n. @JuanitoFatas how about we spend some time debugging together? Want to jump on a hangout/skype/something? I'd be happy to share my screen with you :)\n. Here is the branch being merged in to (development):\n* 7f526b4\n*   32026b7\n|\\\n| * 58fe624\n| * dd99e3f\n| * 9fc53b2\n| * cd4804c\n| * 56840b3\n| * af7ec27\n| * 89ef404\n| * b51dbce\n| * 45187cf\n| * 0f406d7\n| * 13e32d7\n| * 5236915\n| *   0bc57a0\n| |\\\n| * | b0d7e64\n| * | ea0c90a\n| * | 2600c0d\n| * | 4437749\n| * | d0557b9\n| * | 5bf79fe\n| * | 108f014\n| * | 40da3b7\n| * | 633eaf4\n| * | 3b272b4\n| * | abb8b46\n| * | ef8a50d\n| * | a6021d0\n| * | f9bb4db\nHere's the branch being merged in (feature branch):\n* 6405da6\n* 39767a6\n* d344bea\n* 9f33359\n*   6ee88fb\n|\\\n| *   32026b7\n| |\\\n| | * 58fe624\n| | * dd99e3f\n| | * 9fc53b2\n| | * cd4804c\n| | * 56840b3\n| | * af7ec27\n| | * 89ef404\n| | * b51dbce\n| | * 45187cf\n| | * 0f406d7\n| | * 13e32d7\n| | * 5236915\n| | *   0bc57a0\n| | |\\\n| | * | b0d7e64\n| | * | ea0c90a\n| | * | 2600c0d\n| | * | 4437749\n| | * | d0557b9\n| | * | 5bf79fe\n| | * | 108f014\n| | * | 40da3b7\n| | * | 633eaf4\n| | * | 3b272b4\n| | * | abb8b46\n| | * | ef8a50d\n| | * | a6021d0\nThe common ancestor is 32026b7\nHope that helps! Let me know if you need anything else \ud83d\ude04.\n. If Danger is looking at the default branch as master, then yup I need to tell it that ours is development. \nIf I set to bundle exec danger --base development what will happen if danger runs on a PR from  feature-branch-1 to feature-branch-2 for example?\n. Okay, testing right now to see if this fixes.\nShouldn't fetch --all work though?\n. Okay, sorry for the slow response.\nRan bundle exec danger --base=development and got:\nbundler: failed to load command: danger (/usr/local/bin/danger)\nRuntimeError: Commit 32026b71 doesn't exist. Are you running `danger local/pr` against the correct repository? Also this usually happens when you rebase/reset and force-pushed.\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/scm_source/git_repo.rb:54:in `raise_if_we_cannot_find_the_commit'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/scm_source/git_repo.rb:43:in `ensure_commitish_exists!'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/request_sources/github.rb:70:in `setup_danger_branches'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/danger_core/environment_manager.rb:57:in `ensure_danger_branches_are_setup'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/danger_core/dangerfile.rb:257:in `setup_for_running'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/danger_core/dangerfile.rb:268:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/danger_core/executor.rb:26:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/lib/danger/commands/runner.rb:66:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.1/lib/claide/command.rb:334:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.5.4/bin/danger:5:in `<top (required)>'\n  /usr/local/bin/danger:23:in `load'\n  /usr/local/bin/danger:23:in `<top (required)>'\n. Do you need me to run Danger point at this branch too? I'll create a build for this just in case you do :)\n. Same stacktrace when using patch/git-merge-base branch:\nbundler: failed to load command: danger (/usr/local/lib/ruby/gems/2.3.0/bin/danger)\nRuntimeError: Commit 32026b71 doesn't exist. Are you running `danger local/pr` against the correct repository? Also this usually happens when you rebase/reset and force-pushed.\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/scm_source/git_repo.rb:68:in `raise_if_we_cannot_find_the_commit'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/scm_source/git_repo.rb:57:in `ensure_commitish_exists!'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/request_sources/github.rb:70:in `setup_danger_branches'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/danger_core/environment_manager.rb:57:in `ensure_danger_branches_are_setup'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/danger_core/dangerfile.rb:257:in `setup_for_running'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/danger_core/dangerfile.rb:268:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/danger_core/executor.rb:26:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/lib/danger/commands/runner.rb:66:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.1/lib/claide/command.rb:334:in `run'\n  /usr/local/lib/ruby/gems/2.3.0/bundler/gems/danger-fda31dfbc5fe/bin/danger:5:in `<top (required)>'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in `load'\n  /usr/local/lib/ruby/gems/2.3.0/bin/danger:23:in `<top (required)>'\n. I've noticed that Bitrise is setting up the repo like this:\n1. git init\n2. git remote add origin __REMOTE__\n3. git fetch --depth=1\nVery likely the cause right? Does Danger have a mechanism to fetch more commits? I've noticed that setting the repo up in this way on my local machine, then doing git fetch and git fetch --all fetches no deeper commits.\n. @JuanitoFatas or @orta have you got any time to do some more troubleshooting with me today? I'll be on Skype all day :)\nI think I have a rough idea about what's going on, it's just my knowledge of the codebase and Ruby are giving me trouble, and I'm sure @viktorbenei (from Bitrise) will be happy to help us if we need it.\n. UPDATE: It is definitely because of the --depth=1 of the clone. Paired with some syntax errors on this branch, it was quite hard to debug \ud83d\ude04. Happy to say I've learnt a lot solving this problem. \nHopefully I can have a PR in the next few hours.\nThanks @JuanitoFatas and @viktorbenei for all your help.\n. Okay the fix is to simply swap fetch --all for fetch --unshallow on this line as @viktorbenei says. Confirmed this with our PR that failed on Bitrise by pointing at this branch.\nTests can be created to run against shallow repo clone to cover this.\nOn the flip side, is doing this really the right thing to do? GitHub already provides a diff in the repos/:repo/:user/pulls/:number response under the key diff_url. If Danger could use that, it would save the CI from having to download all the history.\n. ",
    "cojoj": "Hmmm, I've configured everything correctly (I guess):\n- I have bot account with write permissions and Personal access token\n- I have Dangerfile\n- I've set DANGER_GITHUB_API_TOKEN\nAnd still I can't make danger work for me.\nWhen I call danger local I get something like:\n```\nRunning your Dangerfile against this PR - https://github.com/cojoj/iOS/pull/788\nTurning on --verbose\n/usr/local/lib/ruby/gems/2.3.0/gems/danger-3.2.1/lib/danger/request_source/github.rb:68:in fetch_details': Repo moved or renamed, make sure to update the git remote (RuntimeError)\n    from /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.2.1/lib/danger/commands/local.rb:96:inrun'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.0/lib/claide/command.rb:334:in run'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/danger-3.2.1/bin/danger:5:in'\n    from /usr/local/bin/danger:23:in load'\n    from /usr/local/bin/danger:23:in'\n```\nWhen I run regular danger I get:\nCould not find the type of CI for Danger to run on.\nI'v tried to create a new lane, call it manually... Still nothing. Especially, I don't understand the error for the local call...\n. Hah, of course @orta \ud83d\ude05\nI'm trying to skip CI at all and go with fastlane only. I that case, when I fire our custom lane eg. fastlane ios test_lane I also want it to produce fire sublane which will fire danger command.\nI don't know if it's cleaner now or you want even more details. I can reference to twitter, as we've discussed that matter: https://twitter.com/cojoj/status/771649891093221376\n. Hah, so looks like I was just going a little bit too far for the current state of the project \ud83d\ude05\nGonna stick around and wait for this local thing, since we have some problems with CI server right now and we wanted to move at least a bit of it's responsibilities to local.\nThank you very much for clarifications and keep it real! \ud83d\udcaa\n. I've contacted App Center's support and they asked me to create a feature request. With this I guess it'd be way easier to create Danger's integration to the App Center. Would be great to bump this request: https://github.com/Microsoft/appcenter/issues/79. This issue has been resolved in #1086. I guess we can close it now.. App Center integration has been added in #1086. I guess we can close this one now, right? \ud83d\ude09. Hey guys, I'm trying to integrate Danger with GitHub Actions and I have some troubles. Maybe you'll be able to help me out with this one or give me some hints. \nI've integrated everything locally and created a simple main.workflow in my repo:\naction \"Danger\" {\n   uses = \"danger/danger@master\"\n   secrets = [\"GITHUB_TOKEN\"]\n}\nSo far, so good, GitHub was happy with this action and when I've opened new PR it got executed properly, but every run was failing with the following logs (I'm pasting whole thing to give a better context):\n```\nSTARTED Danger 16:05:13Z\nPulling image: gcr.io/github-actions-images/action-runner:latest\nlatest: Pulling from github-actions-images/action-runner\n169185f82c45: Already exists\ne07893e5a964: Pulling fs layer\n3e845980d4e2: Pulling fs layer\nc49bb58b9e65: Pulling fs layer\n40b259a2793c: Pulling fs layer\n40b259a2793c: Waiting\ne07893e5a964: Verifying Checksum\ne07893e5a964: Download complete\n3e845980d4e2: Verifying Checksum\n3e845980d4e2: Download complete\nc49bb58b9e65: Verifying Checksum\nc49bb58b9e65: Download complete\ne07893e5a964: Pull complete\n40b259a2793c: Verifying Checksum\n40b259a2793c: Download complete\n3e845980d4e2: Pull complete\nc49bb58b9e65: Pull complete\n40b259a2793c: Pull complete\nDigest: sha256:1cd47f51356f6649eafc231b20e7abb92cc6777f8d928cf0e4070eeb6f820376\nStatus: Downloaded newer image for gcr.io/github-actions-images/action-runner:latest\nStep 1/17 : FROM ruby:2.5\n2.5: Pulling from library/ruby\n741437d97401: Already exists\n34d8874714d7: Already exists\n0a108aa26679: Already exists\n7f0334c36886: Already exists\n65c95cb8b3be: Already exists\nf32ce1a51034: Already exists\nbc94ac5e9510: Pulling fs layer\nf0e5f80b593b: Pulling fs layer\nf0e5f80b593b: Verifying Checksum\nf0e5f80b593b: Download complete\nbc94ac5e9510: Verifying Checksum\nbc94ac5e9510: Download complete\nbc94ac5e9510: Pull complete\nf0e5f80b593b: Pull complete\nDigest: sha256:ee6cfefa56b5a38c061c961de1fa086cf00b1d90dbae9220fa3f113f86432fa6\nStatus: Downloaded newer image for ruby:2.5\n ---> b74fc909a012\nStep 2/17 : LABEL \"com.github.actions.name\"=\"Danger\"\n ---> Running in 01199f601607\n ---> 6283fbec535b\nStep 3/17 : LABEL \"com.github.actions.description\"=\"Runs danger in a docker container such as Github Actions\"\n ---> Running in 4026ff974599\n ---> 53bdcd8229d2\nStep 4/17 : LABEL \"com.github.actions.icon\"=\"mic\"\n ---> Running in 212f217b1568\n ---> eda7c239a9dd\nStep 5/17 : LABEL \"com.github.actions.color\"=\"purple\"\n ---> Running in 66ceca625d28\n ---> 753de24ddccf\nStep 6/17 : LABEL \"repository\"=\"http://github.com/danger/danger\"\n ---> Running in c15d0b83c33e\n ---> 44dfd0be415a\nStep 7/17 : LABEL \"homepage\"=\"http://github.com/danger/danger\"\n ---> Running in f1de03afdfd2\n ---> 9f7a30d82f6a\nStep 8/17 : LABEL \"maintainer\"=\"Rishabh Tayal rtayal11@gmail.com\"\n ---> Running in 64996c8bcd21\n ---> e053d6d92643\nStep 9/17 : RUN apt-get update -qq && apt-get install -y build-essential p7zip unzip\n ---> Running in be4dc4d23b3f\nReading package lists...\nBuilding dependency tree...\nReading state information...\nunzip is already the newest version (6.0-21).\nThe following additional packages will be installed:\n  dpkg-dev fakeroot libalgorithm-diff-perl libalgorithm-diff-xs-perl\n  libalgorithm-merge-perl libfakeroot\nSuggested packages:\n  debian-keyring p7zip-full\nThe following NEW packages will be installed:\n  build-essential dpkg-dev fakeroot libalgorithm-diff-perl\n  libalgorithm-diff-xs-perl libalgorithm-merge-perl libfakeroot p7zip\n0 upgraded, 8 newly installed, 0 to remove and 4 not upgraded.\nNeed to get 2171 kB of archives.\nAfter this operation, 3469 kB of additional disk space will be used.\nGet:1 http://deb.debian.org/debian stretch/main amd64 dpkg-dev all 1.18.25 [1595 kB]\nGet:2 http://deb.debian.org/debian stretch/main amd64 build-essential amd64 12.3 [7346 B]\nGet:3 http://deb.debian.org/debian stretch/main amd64 libfakeroot amd64 1.21-3.1 [45.7 kB]\nGet:4 http://deb.debian.org/debian stretch/main amd64 fakeroot amd64 1.21-3.1 [85.6 kB]\nGet:5 http://deb.debian.org/debian stretch/main amd64 libalgorithm-diff-perl all 1.19.03-1 [48.7 kB]\nGet:6 http://deb.debian.org/debian stretch/main amd64 libalgorithm-diff-xs-perl amd64 0.04-4+b2 [11.6 kB]\nGet:7 http://deb.debian.org/debian stretch/main amd64 libalgorithm-merge-perl all 0.08-3 [12.7 kB]\nGet:8 http://deb.debian.org/debian stretch/main amd64 p7zip amd64 16.02+dfsg-3+deb9u1 [364 kB]\ndebconf: delaying package configuration, since apt-utils is not installed\nFetched 2171 kB in 0s (16.1 MB/s)\nSelecting previously unselected package dpkg-dev.\n(Reading database ... \n(Reading database ... 5%\n(Reading database ... 10%\n(Reading database ... 15%\n(Reading database ... 20%\n(Reading database ... 25%\n(Reading database ... 30%\n(Reading database ... 35%\n(Reading database ... 40%\n(Reading database ... 45%\n(Reading database ... 50%\n(Reading database ... 55%\n(Reading database ... 60%\n(Reading database ... 65%\n(Reading database ... 70%\n(Reading database ... 75%\n(Reading database ... 80%\n(Reading database ... 85%\n(Reading database ... 90%\n(Reading database ... 95%\n(Reading database ... 100%\n(Reading database ... 29688 files and directories currently installed.)\nPreparing to unpack .../0-dpkg-dev_1.18.25_all.deb ...\nUnpacking dpkg-dev (1.18.25) ...\nSelecting previously unselected package build-essential.\nPreparing to unpack .../1-build-essential_12.3_amd64.deb ...\nUnpacking build-essential (12.3) ...\nSelecting previously unselected package libfakeroot:amd64.\nPreparing to unpack .../2-libfakeroot_1.21-3.1_amd64.deb ...\nUnpacking libfakeroot:amd64 (1.21-3.1) ...\nSelecting previously unselected package fakeroot.\nPreparing to unpack .../3-fakeroot_1.21-3.1_amd64.deb ...\nUnpacking fakeroot (1.21-3.1) ...\nSelecting previously unselected package libalgorithm-diff-perl.\nPreparing to unpack .../4-libalgorithm-diff-perl_1.19.03-1_all.deb ...\nUnpacking libalgorithm-diff-perl (1.19.03-1) ...\nSelecting previously unselected package libalgorithm-diff-xs-perl.\nPreparing to unpack .../5-libalgorithm-diff-xs-perl_0.04-4+b2_amd64.deb ...\nUnpacking libalgorithm-diff-xs-perl (0.04-4+b2) ...\nSelecting previously unselected package libalgorithm-merge-perl.\nPreparing to unpack .../6-libalgorithm-merge-perl_0.08-3_all.deb ...\nUnpacking libalgorithm-merge-perl (0.08-3) ...\nSelecting previously unselected package p7zip.\nPreparing to unpack .../7-p7zip_16.02+dfsg-3+deb9u1_amd64.deb ...\nUnpacking p7zip (16.02+dfsg-3+deb9u1) ...\nSetting up dpkg-dev (1.18.25) ...\nProcessing triggers for libc-bin (2.24-11+deb9u3) ...\nSetting up p7zip (16.02+dfsg-3+deb9u1) ...\nSetting up libfakeroot:amd64 (1.21-3.1) ...\nSetting up libalgorithm-diff-perl (1.19.03-1) ...\nSetting up build-essential (12.3) ...\nSetting up fakeroot (1.21-3.1) ...\nupdate-alternatives: using /usr/bin/fakeroot-sysv to provide /usr/bin/fakeroot (fakeroot) in auto mode\nSetting up libalgorithm-merge-perl (0.08-3) ...\nSetting up libalgorithm-diff-xs-perl (0.04-4+b2) ...\nProcessing triggers for libc-bin (2.24-11+deb9u3) ...\n ---> 53344d48409e\nStep 10/17 : ENV APP_HOME /myapp\n ---> Running in 908451d5d882\n ---> 562ae20abbe9\nStep 11/17 : RUN mkdir $APP_HOME\n ---> Running in 9aa83030f0a1\n ---> 2f39c2609948\nStep 12/17 : WORKDIR $APP_HOME\n ---> Running in 234e2a347fd5\n ---> 47352c796d34\nStep 13/17 : ADD ./Gemfile $APP_HOME/Gemfile\n ---> 5d93c1a01d6e\nStep 14/17 : ADD Gemfile.lock $APP_HOME/Gemfile.lock\nFAILED Danger 16:05:40Z (26.163s)\n``\nNext step inDockerfileisRUN bundle install`, but I'm not sure if this is an issue or something else? I'd love to sort this out and apply necessary fixes to make it works, though I have no idea where to start with this one \ud83d\ude09. Yes, I've integrated my fork with our project, though I can't give you link or anything as it's a privte repo \ud83d\ude48 At least, I can share a screenshot.\n\nI'd love to add some test to this, but I'm not sure if it's even possible since Codeship is missing tests as well.\n. Hey @orta do we want anything more in here, or is it ready to be merged?. ",
    "paulofaria": "Might try this after WWDC if no one beats me to it.\n. ",
    "fwal": "Had 0.7.4 when I ran init and it worked fine, haven't tried with 0.8.1. Get the error on my Jenkins and Travis instances\n. @orta I've tried init on my computer now and get the same error\n. Yeah thats how Travis responds for me\n. Trying circle ci:\nbundler: failed to load command: danger (/Users/distiller/hype/vendor/bundle/ruby/2.0.0/bin/danger)\nDanger::DSLError: \n[!] Invalid `Dangerfile` file: Action 'build_and_upload_to_appetize' not available, run `fastlane actions` to get a full list. Updating the Danger gem might fix the issue.\n. My problem might also be related to fastlane/fastlane#5015\n. @KrauseFx great! \ud83c\udf89 just tested using the fixed version of fastlane and it works much better but now it fails on \nbundler: failed to load command: danger (/Users/distiller/hype/vendor/bundle/ruby/2.0.0/bin/danger)\nDanger::DSLError: \n[!] Invalid `Dangerfile` file: undefined method `device_grid' for #<Danger::Dangerfile:0x007fa3541579e0>. Updating the Danger gem might fix the issue.\n. Closed as this doesn't seem to be an issue with danger\n. Continuing the discussion here: fastlane/fastlane#5020\n. I think it would be rather neat to use danger_id as context name, it makes the most sense.\n. Was just writing that I would! \ud83d\ude04\n. @thiagofelix nah, go ahead! The important thing is that it gets done \ud83d\ude03\n. When trying to run the git commands locally I get:\ngit rev-parse --quiet --verify <hash> returns the hash \u2705 \ngit branch test_head <hash> gives me fatal: Not a valid branch point: \ud83d\udc80 \nSo that's probably what happens.\n. git fetch solves it\n. Alright, will see if I can reproduce \ud83d\udc4d \n. git --no-pager show <hash> gives me fatal: bad object on commit that hasn't been fetched yet and the content of the commit if it has.\n. Ah now I get it. It should actually be git rev-parse --verify --quiet \"<hash>^{commit}\" otherwise it just verifies that it's a valid ~~sha1~~ commit hash \ud83d\ude06 \n. So now I'm wondering; why does danger need the latest commit instead of just using the current commit?\n. Made a PR to fix this but I'm still curious about the reasoning for doing this at all :)\n. Confirmed that the crash doesn't happen anymore with v3.4.2 \ud83c\udf89 \nHowever this makes Danger report status on a future commit on github.\n. Don't think so but the main problem is that the status gets set on the next commit.\n. So user makes commit A -> build A starts\nUser makes commit B -> build B starts\nBuild A reports success -> commit B looks successfull\nNot sure if this can be fixed easily and it's not really problem if the repo have other branch requirements set (which they should).\n. @orta Yeah I guessed that it was like that... I'll keep an eye out for any solutions in the future and I think that this original issue is fixed \ud83d\udc4d \n. @orta sure!\n. Thanks @orta \ud83c\udf89 \n. Only need to fix line 83 in lib/danger/ci_source/jenkins.rb, I'm on it... \ud83d\udcaa \n. Added support for GitLab and Bitbucket (in theory) \n. Addressing the original bug in #978.\nReleased version 1.1.0 of danger-jazzy that works around this issue.. ",
    "Srividya86": "Getting kind of error \n[15:07:19]: Exit status of command 'bundle exec danger --verbose --danger_id=IDScan_ExampleTests, --dangerfile=../DangerFile,' was 1 instead of 0.\nno_proxy is unsupported\n[!] Could not find a Dangerfile.\n. ",
    "lukewar": "Yeah, constructing this URL automatically from host may cause too much issues.\nHow does switching to DANGER_GITHUB_API_URL going to play out with backward compatibility?\n. ",
    "rbsgn": "\n@rbuussyghin is not a contributor yet, would you like to join the Danger org?\n\n@DangerCI no\n. @orta done. Any ETA on next release?\n. Oh, that's great. I'm in the middle of setting up Danger for my project and I can't wait for the next release with TeamCity support!\n. Similar issue #266 \n. Yep, I've configured this manually the same way. Unfortunately, TeamCity doesn't export GitHub specific info via environment variables. So you have to add these environment variables manually to your project or build configuration.\n. ",
    "dantoml": "There are still a couple of places using puts/print, but that's in Interviewer, and an error dump in GitHub. I'm not sure of a good way to handle those.\n. \n. \n. Now injects a board into Interviewer\n. @orta I think pr would allow people to be more platform agnostic and easier to understand, but then we run the risk of still having special cases :/\n. @orta Good point. \ud83d\udc4d for dropping. \n. \ud83d\udc4d for consistency. Especially because rubocop can automatically fix them.\n. @orta Also looks like Rubocop has a bug in the string literal cop. Autocorrect works fine, but then fails lint :/. Will special case now and see if I can PR Rubocop.\n. @orta this just reverted #301 / #300 essentially too\n. I'd be fine with having \" everywhere. The perf difference in Danger won't be noticeable either way. But a nonsensical mix is more confusing to Non-Ruby developers. (because there's no rule at that point)\n. \ud83c\udf4f \n. \ud83c\udf89 Can also \ud83d\udd25 the .rubocop_todo.yml now too\n. @orta Good spot! \ud83d\udc4d \n. @orta @KrauseFx could also maybe use danger-config or have it passed as an argument? (To prevent conflicting with forks of danger)\n. @KrauseFx Would that handle if someone forked danger/danger to Artsy/danger for example?\n. @dbgrandi Nice word, this will be super useful!\n. We recently fixed this in CircleCI, and PR associations are significantly more reliable.. @orta Will do :+1: . so just ui.puts?\n. Wanna add a - orta?\n. We want this to be enabled for consistency see https://github.com/danger/danger/issues/300\n. We need these to enable StringLiteral checking. (On CI, Rubocop doesn't detect emoji in strings as being special characters, but seems to locally :/)\n. Would be nice to move this into a setup_pry method?\n. Might need to require red carpet here?\n. <3 \ud83d\udcaf example\n. We probably still want to cache this?\n. ",
    "kennethlynne": "@justMaku \n\n. git log --merges --oneline\n\n. @justMaku export LOCAL_GIT_PR=20 && bundle exec danger init yields\nruby\nNo recent pull requests found for this repo, danger requires at least one PR for the local mode. (RuntimeError)\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/ci_source/local_git_repo.rb:52:in `initialize'\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/commands/init.rb:137:in `new'\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/commands/init.rb:137:in `current_repo_slug'\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/commands/init.rb:235:in `circle_token'\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/commands/init.rb:160:in `setup_danger_ci'\n        /usr/local/lib/ruby/gems/2.3.0/gems/danger-0.8.2/lib/danger/commands/init.rb:35:in `run'\n. @justMaku export LOCAL_GIT_PR_ID=20 && bundle exec danger init\nyields the exact same error :C \n. Yes, should be set-up, but I will double check that the token is valid, and passed correctly. The feedback can probably be better in this case \n. Yeah, sorry, token set up incorrectly\n. ",
    "champo": "wouldn't it make sense to build this PR in two parts? One preparing danger to go multi source and then another adding GitLab? Some of the changes in this PR would be really nice to have even if GitLab doesn't release the gem.\n. @orta I was thinking something along the same lines. The first alternative would call the second one when possible, since GH can only handle comments on the diff itself and not on the file.\nMy idea was to transparently fallback to adding a table of \"inline\" comments like some of the example Dangerfiles do now.\n. @orta I think this might end being a massive PR. I'm probably going to split it in several smaller steps if I can.\n. I avoided markdown because I thought the use case was different, but now that you mention it, it should also be supported.\nBy api_source, do you mean the RequestSource classes? If you do, I've got a working version for Github's RequestSource with a few TODOs (mostly around making the markup reflect inline comments).\nAbout the org, I do!\n. I've good a few more hours of work ahead, but I might not be able to sit down and tackle it until the next weekend. I'll see how to best organize the work then! \n. I'm going to close this PR and turn this onto a working branch.\nOn the other hand, I'm having trouble figuring out how to print markdowns that can't be actually set inline and have to fall back on the global comment. Right now the only option I'm considering is:\n```\n line \n<< your markdown here! >>\n```\nhttps://github.com/champo/phub-test/blob/d6118f0c1bfeb685d9cd67b078721655b46870e5/longfie#L23\nI think it'd look kinda ugly and clunky. And if the user includes a heading in his markdown it'll probably confusing.\n. That was actually a stray copy paste! But I am testing on a toy private repo. I might make it public when submiting some of the most complicated parts of this.\n. maybe something on how to fake a CI environment? danger local runs against a closed PR which isn't useful for testing things that need updating the PR as you test. I ended writing a small script that sets the env variables like it's travis. \n. ah, that makes a lot more of sense than writting it down! I've reported an issue on it https://github.com/danger/danger/issues/370. Also, it would be related to https://github.com/danger/danger/issues/368.\n. yeah, I think it will. Particularly since I'll be using that style for comments that fall back on the table (I'm adding a link to the file in the commit that produces the comment).\nI didn't know it was private by default! It is now corrected.\n. @orta working on the feedback you gave, I've just realized I never tested a non-sticky message. It's behaving rather badly for those cases... If a non-sticky comment is sent twice by danger, it will get shown twice (where a sticky would only appear once). I'm thinking the expected behaviour for non-sticky would be to just delete the comment unless it's re-set?\n. @orta makes lot of sense! changes coming up.\n. @orta I think I've covered all points now. Is there anything you think is missing?\n. @orta yeah this is blocked on the tests. I've been having some crazy weeks\nat work and haven't had the time to look at them. If you can give it a head\nstart I would really appreciate it!\nOn Sat, Aug 20, 2016, 15:32 Orta notifications@github.com wrote:\n\n@champo https://github.com/champo if this is just blocked on specs, I\ncan take a look at this?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/pull/412#issuecomment-241216081, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAMX6NYPLvTEAmaub9u1_bRY0IO_wRAFks5qh0hCgaJpZM4Jd8od\n.\n. @orta thanks for seeing this through! awesome work\n. Would this need to be a breaking change? The original behaviour could be kept, only for ruby files. I'm inclined to the breaking change though, the limited behaviour would be unintuitive.\n. as far as I can see from the API example, the changes property is in an\nunified diff format. Doing the join as you propose should produce a valid\nunified diff!\n\nOn Mon, Aug 22, 2016, 05:50 Hugo Tunius notifications@github.com wrote:\n\nThe GitHub plugin has a pr_diff, but for GitLab mr_diff isn't yet\nimplemented. The problem we ran into with mr_diff is that while GitLab's\nAPI\nhttp://docs.gitlab.com/ce/api/merge_requests.html#get-single-mr-changes\ndoes return the diff of an MR I am not sure it can be converted to Uniform\nDiff format nicely. I don't know enough about Uniformed Diff to understand\nif one could construct a proper diff from the output of changes.\nAnother option is to just use data[:changes].map { |change| change[:diff]\n}.join(\"\\n\") which produce a similar text blob to the Uniform Diff of\nGitHub.\ncc @connorshea https://github.com/connorshea\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/460, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAMX6NTOkfVURSiMZUHCJDWfML6GThChks5qiWLDgaJpZM4Jpo0F\n.\n. https://en.m.wikipedia.org/wiki/Diff_utility doesn't show any of those\nlines. I guess it's an extension, but not required. It can easily be added\nby code if you want them to be exactly the same.\n\nOn Mon, Aug 22, 2016, 09:50 Hugo Tunius notifications@github.com wrote:\n\nThe difference I noticed between the GitHub and GitLab formats is that the\nGitHub format includes lines such as\ndiff --git a/Artsy.xcodeproj/project.pbxproj b/Artsy.xcodeproj/project.pbxproj\nWhich aren't present in the GitLab responses. I am not sure if those are\nrequired for Unified Diff format, but that was my concern\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/460#issuecomment-241402595, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAMX6NdWxvh1m64txzFU6TUQ1swRM2c-ks5qiZsQgaJpZM4Jpo0F\n.\n. I've been thinking about this line, and with the non-sticky comments it's no longer effective. This might end up leaving resolved violations without updating.\n. \n",
    "deanpcmad": "This looks good :+1:  Any update so far? I would like to use Danger for all my projects :smile: \n. Ah ok, I'll see if I can copy the GH tests and get them working. Can my commits be added to this PR or would I need to create a separate one?\n. I've fixed a couple of tests. I can't work out why the EnvironmentManager tests fail though... \n. Ah, I found the culprit! ENV should have been env \ud83d\ude03 \n. I've just created a MR for adding CI_MERGE_REQUEST_ID into GitLab - https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/5698\n. @k0nserv go ahead :)\n. :+1: looking forward to adding this to all my tests now :smiley: \n. ",
    "paweldudek": "I'm seeing this issue both on Jenkins and locally. \n. Definitely better! I also see insertions and deletions are now correctly calculated \ud83d\udc4d \n+----------------------+--------------------------------------------------------------------------------------------------+\n|                                                      Danger v0.8.4                                                      |\n|                                                     DSL Attributes                                                      |\n+----------------------+--------------------------------------------------------------------------------------------------+\n| status_report        |                                                                                                  |\n| violation_report     |                                                                                                  |\n| added_files          | AirHelp/Classes/Account/AccountViewControllerSpec.swift                                          |\n|                      | AirHelp/Classes/Account/View/AccountTableViewCell.xib                                            |\n|                      | AirHelp/Classes/Account/View/AccountVersionFooterView.swift                                      |\n|                      | AirHelp/Classes/Generic/Table View Cell Registration/NibLoadable.swift                           |\n|                      | AirHelp/Classes/Generic/Table View Cell Registration/ReusableView.swift                          |\n|                      | AirHelp/Classes/Generic/Table View Cell Registration/TableViewCellRegistration.swift             |\n|                      | AirHelpSpecs/ReferenceImages/AccountViewControllerSpec/account_view@2x.png                       |\n|                      | AirHelpSpecs/Test Helpers/AirHelpSpecsHelper.swift                                               |\n| deleted_files        | AirHelp/Classes/Account/View/AccounterVersionFooterView.swift                                    |\n| lines_of_code        | 1041                                                                                             |\n| deletions            | 292                                                                                              |\n| insertions           | 749                                                                                              |\n| commits              | 9a6dd3dda868e090b8ed19768c42507b70c03fef                                                         |\n| pr_title             | Grouped account view                                                                             |\n| pr_labels            | []                                                                                               |\n| branch_for_base      | develop                                                                                          |\n| branch_for_head      | feature/grouped-account-view                                                                     |\n| base_commit          | 40008fb14a6df6b7f9a393727ec9cff49d1df0db                                                         |\n| head_commit          | 9a6dd3dda868e090b8ed19768c42507b70c03fef                                                         |\n| pr_json              | [Skipped]                                                                                        |\n| api                  | Octokit::Client                                                                                  |\n| ---                  | ---                                                                                              |\n| SCM                  | Danger::GitRepo                                                                                  |\n| Source               | Danger::CISource::LocalGitRepo                                                                   |\n| Requests             | Danger::RequestSources::GitHub                                                                   |\n+----------------------+--------------------------------------------------------------------------------------------------+\nThere's only one concern (not sure whether this should be the default behavior here) - I'm seeing the deleted file in both deleted and modified files. \nI've checked previous version (aka 0.8.4, current one) and this was the case before as well there - added and deleted files pop up in modified files as well. (I've stripped modified files from report above for sake of readability).\n. Awesome, thanks for helping out! \u2764\ufe0f You can close this issue once #305 gets in. \n\n. ",
    "bentrengrove": "It looks as if when the build is not the result of a pull request the environment variables are as follows.\nBUILDKITE_PULL_REQUEST_REPO=\nBUILDKITE_PULL_REQUEST=false\nWhen it is a pull request they are\nBUILDKITE_PULL_REQUEST_REPO=git://github.com/....git\nBUILDKITE_PULL_REQUEST=1\nCan probably check if BUILDKITE_PULL_REQUEST_REPO is nil before proceeding.\n. I have given it a go!\n. Not sure how to fix that travis error. If someone could point me in the right direction, that would be great.\n. Sorry @orta I still can't work out what to change. The tests all pass locally.\nI can see the test assumes the first CI build source is Buildkite but it looks like on the actual run it ends up trying circle? How does it work out the first build source and should I change the test to the environment variables for Circle instead?\n. No luck \ud83d\ude1e \n. Did I disable them correctly?\n. Yay! \ud83d\ude4c \n. I think my change might have stopped it from recognising Buildkite when its not in a PR. What should I return when I can see its Buildkite but not a PR?\n. This sounds like a good idea to me, beyond my skills though. I can contribute a fix for buildkite in the meantime though if that helps?\n. ",
    "dzlobin": "\nCould it be different build envs are returning different commit ranges?\n\nThis sounds like what I might be seeing where Danger is showing this when running on our CI, but not locally:\n\nbut the PR is only ~50 lines\n\n. If only Fastlane's danger plugin respected the --verbose flag when you pass it in ^-^\n. That's the plan when I have some time in the next few days, along with https://github.com/danger/danger/issues/282\n. @marcelofabri I actually just fixed that, complete PEBKAC error.\n. Also worth noting my problem above was related to #305 \n. ",
    "schayes04": "It would also be great to add support for BitBucket Server for enterprise teams as well. Not sure if that would require anything additional compared to regular BitBucket\n. Awesome. Let me know if you need help testing anything\n. ",
    "HeEAaD": "@schayes04 I already started with Bitbucket Server / Stash support some days ago (https://github.com/HeEAaD/danger/commits/bitbucker_server). A PR will follow in the next days.\n. https://github.com/danger/danger/pull/481\n. @orta Wait a bit. I'll extract the network stuff out of bitbucket_server.rb (see https://github.com/danger/danger/pull/481#discussion_r76518367)\n. @orta extracted the network calls in aa60dbe. Now we have a much cleaner BitbucketServer.\nI guess its ok to merge this PR now.\n. Unfortunately not. Bitbucket and Stash (Bitbucket Server) are two separate products and they have different APIs.\nhttps://developer.atlassian.com/static/rest/stash/3.11.6/stash-rest.html vs https://confluence.atlassian.com/bitbucket/use-the-bitbucket-cloud-rest-apis-222724129.html\n. https://developer.atlassian.com/static/rest/stash/3.11.6/stash-rest.html#authentication says:\n\nThe prefered authentication methods are HTTP Basic (when using SSL) and OAuth.\n. @k0nserv Any suggestions where to put this file?\n. I added pr_link, branch_for_base, branch_for_head, base_commit and head_commit in 20c79b8. I'm unsure about the diff. This will need another REST request and you can simply use git. diff_for_file in the Dangerfile.\n. HTML links makes no sense here because bitbucket server supports markdown comments only.\nWe should rename this to markdown_link and generate markdown following this guide.\n. I checked if with our bitbucket server installation. Its for example:\nhttps://stash.example.com/projects/IOS/repos/FancyApp/browse/Classes/Main%20Categories/Feed/FeedViewController.m?at=bd87fd739d67a6d64ef4d2f5a41b61449ba21bf8#200\n- https://stash.example.com/projects/IOS/repos/FancyApp/browse is pr_json[:fromRef][:repository][:links][:self].flat_map { |l| l[:href] }.first\n- Classes/Main%20Categories/Feed/FeedViewController.m is path with escaped spaces\n- the at parameter can be a commit or branch name\n- #200 is the line number\n. \n",
    "fabb": "Is there documentation on how to integrate it?. ok found it, it's all here:\nhttp://danger.systems/guides/getting_started.html\nhttp://danger.systems/reference.html. ",
    "samdmarshall": "I saw this again last night, looks like if you push any commits to a branch that CircleCI is watching while it is already running a session it will spawn a new session for each additional commit that was made. This results in all but the most recent commit failing (in my experience). I guess this can be added to the list of things that is kinda broken with CircleCI?\n. I ran into this yesterday and was thinking shouldn't the ruby string be covered over to HTML, so it doesn't require the users to insert markdown that doesn't really represent the formatting of the string?\n. I ran into this in a brand new repo that has no PRs or other branches yet. It caused a CI failure, which i think should not be a hard failure but instead a message like you have suggested be displayed.\n. Also the case of what happens if you have multiple repos that match the name pattern of an org-level Dangerfile repo.\n. ah, you are right, for some reason i remember the guide saying that you could name the repo danger/Danger/dangerfile/Dangerfile but that isn't the case.\n. @orta how are the features to danger local looking these days? I had some ideas recently about how this could be incorporated into pre-commit workflows but haven't been up to date with how development is progressing with danger.. would we be able to write the dangerfile completely in JavaScript or Python or whatever language, or would it require we add the boilerplate code to get it to be handled by ruby?\n. Hmmm, I wonder if it might not be better to write a C library that uses the Ruby and Python FFI interfaces to transfer things across then. I don't know enough about Ruby to do that myself though. I took a quick look at the rubypython interface and it feel that it seems a bit overly complicated to feel like it is worth supporting vs the javascript implementation being \"pure\". Something I thought about a lot when designing the pyconfig DSL was how close to Python I wanted to keep it -- if it might be worth looking changing Danger to be less of a ruby-subset and more of a DSL?\n. This is still happening for me on non-PR builds and causes CI to fail consistently.\n. Gotcha. Sorry, I should have clarified i was trying to give more information as this was previously happening on a PR branch and telling Circle to rebuild resolved it, but now it happens on primary my branch and PR branches and rebuilding doesn't resolve the issue has it previously had. I wanted to make sure those data-points were captured in this issue.\n. After updating to 2.1.2, i stopped getting failures on my PR branches, but I am still getting failures on my primary branch: https://circleci.com/gh/samdmarshall/pyconfig/267\n. Maybe this could be added to the danger.systems FAQ? I am sure more people will run into this in the future.. Is there anything I can do to help move this along? I would like to close out some internal tracking related to this issue. If someone can point me at the relevant code I can put up a PR for it myself (i think).. Ace, thanks @orta.. Ok I had some time to look at this over the weekend and i'm wondering if this is the correct approach. I feel danger should buffer and manage output of the results automatically against the GitHub API. I can foresee a fix for this particular issue going in but still not correctly handling the case of what happens with joint output of Markdown and messages/warnings/errors where the total goes over the character limit?\nPatching in multiple places doesn't seem ideal or a long-term solution here. . yeah, which is why i'm thinking that every time you submit something to the markdown api call, it gets separately packaged up, similarly to how message or warn or fail works (except without the formatting). This way it would be on the plugin writers to provide a safe and correct way to enclose their output in the case it needs to be truncated due to the API limit. . yeah, it would also encourage people to not create massive blocks of markdown, but smaller and more actionable results (which generally should be translatable to the file: line: api as you mentioned). that seems like a better way to approach this in my mind, as it seems like danger intentionally gives you small actionable items to address (\"don't worry, everything is fixable\").. won't that behavior post back to the PR? in this case i would just like to run it locally.. hmmm, feels like i am misunderstanding something -- why isn't the pr command not a flag on local then?. ",
    "paulcbetts": "@orta Surf isn't necessarily something you run (like a service), it's just as easy to use it locally:\n``` sh\nnpm install -g surf-build\nMan, I wish I had a clean build of what I'm working on locally\ngit push\nsurf-build\n```\nOr\n``` sh\nMan, I wish I had CI on Windows, or whatever\nsurf-client\nOpen a new console window\ngit commit\ngit push      # CI runs in other window\n``\n. Surf 0.9.2 is now up on npm and has full Danger support, thanks all!\n. Yeah, this part is a bit tricky to test, since its a chicken-and-egg scenario\n. @ortabuild.sh` is one of the ways you can tell Surf how to build your project. I haven't added Ruby support yet (you can see the available platforms at https://github.com/surf-build/surf/tree/master/src/build-discoverers), so I had to add the explicit script\n. ",
    "Palleas": "I'm running into this issue as well but I'm not sure how to fix it: \n\u279c  romain-pouclet.com git:(setup-danger) bundle exec danger local\nbundler: failed to load command: danger (/usr/local/opt/rbenv/versions/2.2.4/bin/danger)\nRuntimeError: No recent pull requests found for this repo, danger requires at least one PR for the local mode\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/ci_source/local_git_repo.rb:40:in `initialize'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/environment_manager.rb:14:in `new'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/environment_manager.rb:14:in `block in initialize'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/environment_manager.rb:9:in `each'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/environment_manager.rb:9:in `initialize'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/commands/local.rb:22:in `new'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/lib/danger/commands/local.rb:22:in `run'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/claide-1.0.0/lib/claide/command.rb:334:in `run'\n  /usr/local/opt/rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems/danger-0.7.3/bin/danger:5:in `<top (required)>'\n  /usr/local/opt/rbenv/versions/2.2.4/bin/danger:23:in `load'\n  /usr/local/opt/rbenv/versions/2.2.4/bin/danger:23:in `<top (required)>'\nI've set my DANGER_GITHUB_API_TOKEN and I have a couple of opened pull request: https://github.com/Palleas/romain-pouclet.com/pulls. \nAm I in a weird glitch or am I doing something wrong? \ud83d\ude01 \n. I don't think I am... It happens that I merge branches without opening a pull request though, could that be the issue? If I understand correctly, danger local looks for closed PR to run against?\n. Oh cool, thanks!\n. @orta I'm going to run some additional tests on other platforms but let me know if there is anything else I need to tweak :). Thanks for the quick merge! . Terrific, thank you!. I'm going to grab a cup of coffee \ud83e\udd26\u200d\u2642\ufe0f . We are currently updating the documentation, so this is a chicken or egg situation. I'll check with the team and get back to you. . I've updated the docs in the to include a link to our documentation. I'll open a new pull request once the documentation is out. . ",
    "unlobito": "Great! Thank you. (:\n. ",
    "MSNexploder": "Typo in screenshot (\"auto-generated form\" -> \"auto-generated from\") \ud83d\ude31\ud83d\ude48\n. ",
    "hboon": "This sounds close to what I am looking for, but not sure if they are exactly the same thing. That's being able to run Danger in a pre-commit hook.\n. ",
    "epologee": "Yes, it was from danger init, after reading the manual (:wink:) at http://danger.systems/guides/getting_started.html\n. Note to self: next time also check the closed issues!\nAt least I got to submit issue #666. Thanks @marcelofabri!. ",
    "jankeesvw": "For our project a build takes about 20 minutes, so that's quite a long time. I think i'm going to put Danger in a separate build on the CI server. Thanks for the info!\n. ",
    "ananyo2012": "I am still facing this problem. I am on v4.0.5. ",
    "mtitolo": "I do like the idea of being able to run this against local changes. But this does end up losing context. \nFor instance, I have a rule that checks the pr_body for screenshots whenever a storyboard or xib is modified, and fails when there are none. I don't want to maintain separate Dangerfiles for running locally vs as a PR. How would those kinds of differences work with the new system?\nAlso, I'm behind a firewall and anything that requires the command line to talk to the internet is difficult. To get Danger working I already need a command line proxy running. So I'm \ud83d\udc4e  for using raw HTTP links to run Danger locally.\n. It's almost as if people need to be able to setup danger workflows. We'd need at least 4 different Dangerfile versions, due to a complicated git process due to a large team. While we could have multiple Dangerfiles in different branches/forks, it'll get difficult to run locally when you need to use a target's Dangerfile instead of the copy you have.\nI seem to only complicate things >.<\n. This is a documentation issue. There are 2 env variables and they are not referenced on the Troubleshooting page that talks about local, just the FAQ. Made a PR: https://github.com/danger/danger.systems/pull/85\n. This fixes the issue for me \ud83d\udc4d \n. @JuanitoFatas the pull URL is the API. Should the endpoint passed to local be the HTML URL or the API?. ",
    "iainsmith": "What do people think about reusing the concept of lanes from Fastlane? If no explicit lanes are defined, the Danger file works as it does today. When lanes are defined they need to be called explicitly. \nSpecifically this would be great when you want a pre push hook to run some simple (and fast) checks against your current branch and master. \n. ",
    "urkle": "Will this overhaul of danger local also support being able to run a danger file against local commits (not pushed)..  as while I'm developing my dangerfile I need to test on scenarios of commits and being able to run it all local would be really nice.  IMHO something that fakes a PR and takes current HEAD and finds the merge-base against master and uses that range to do the git range for the danger file would be awesome.\nAlso removing the assumption in danger local that everyone uses the github UI to do PR merges would be great too.. as we don't use the github UI and instead we rebase+merge thus danger local is 100% useless to us right now.. ",
    "forrestfiller": "\n:+1: :+1: :+1: :+1: \nWorks Great!\n. ",
    "Bugagazavr": "As i know kramdown can support GFM http://kramdown.gettalong.org/parser/gfm.html\n. ",
    "LeFnord": "@orta \u2026 yeap I would also prefer kramdown over redcarpet\n. \u2026 its so cool \ud83d\ude04 \n. thanks for the offer @orta, but I think I can also contribute without to be a member \ud83d\ude09 \nand yeah maybe think about these policy and differ between small changes \u2013 such as this one, and more significant one \u2026 similar to the grape membership\n. normally yeap, but Kramdown behaves a bit different to Redcarpet, it needs a string for initialising, so by caching the object it has always the same string to render, think this is not what would be expected\n. ",
    "dblock": "No thanks, I have too many responsibilities :)\n. Personally, I think it's much easier to stick to Rubocop defaults and call it a day. This means your workflow becomes:\n1) Write code.\n2) rubocop -a\n3) rubocop --auto-gen-config\n4) Profit.\nNo more arguing over tabs or spaces :)\n. It may be better not to deprecate import_dangerfile and not add import, because there's also import_plugin. I could make import_dangerfile support both Hash and String, and I think String should be deprecated with a warning, I am not sure what's best? @orta\n. This is ready to be merged AFAIK.\n. Here's an example of how this is used: https://github.com/ruby-grape/grape/pull/1480\n. But please don't release it yet! I want to run the whole thing end-to-end first.\n. This PR is a good example why you want to increment a version right after you release a gem. In this case I want ruby-grape-danger to depend on danger code that's on master, and I want to make sure nobody can accidentally uses ruby-grape-danger with an older version of danger wondering why it doesn't work.\n. Right. I usually increment the patch number after release. And I change the major number with the first pull request that breaks things, for example.\nAnd I just made this mistake forgetting to add a dependency on danger master and it rightfully complained with:\n```\nBundler could not find compatible versions for gem \"danger\":\n  In Gemfile:\n    ruby-grape-danger was resolved to 0.1.0, which depends on\n      danger (~> 3.2.0)\nCould not find gem 'danger (~> 3.2.0)', which is required by gem 'ruby-grape-danger', in any of the sources.\n```\nCorrect testing with:\ngem 'danger', github: 'danger/danger'\n  gem 'ruby-grape-danger', github: 'dblock/ruby-grape-danger', branch: 'ruby-grape-danger-gem', require: false\n. I was moving like 100 projects to use Danger at the same time, I am sure this was the problem here ;) Check whether that check happens before the imports or something like that?\n. I don't think it's a dup because you'll still have to deal with this for gitlab support.\n. Claid is a CocoaPods plugin which shows info about available CocoaPods plugins or helps you get started developing a new plugin. It has been reused in Danger but not updated to be a generic thing. I don't think I am motivated enough to go down the rabbit hole of refactoring that thing to add a command to danger :)\n. This test that runs the plugin fails on Windows. AFAIK danger plugin will fail on Windows too. What should I do about that?\n. I've conditioned the test not to run on Windows and opened https://github.com/dbgrandi/claide-plugins/issues/4.\n. If someone else refactors claide-plugins to be reusable, I'll gladly update this PR.\n. FYI this fixes downstream plugins' build, maybe you want to release it?\n. Currently having to write:\n``` ruby\nrequire 'danger_plugin'\ndef testing_ui\n  Cork::Board.new(silent: true)\nend\ndef testing_env\n  {\n    'HAS_JOSH_K_SEAL_OF_APPROVAL' => 'true',\n    'TRAVIS_PULL_REQUEST' => '800',\n    'TRAVIS_REPO_SLUG' => 'dblock/danger-changelog',\n    'TRAVIS_COMMIT_RANGE' => '759adcbd0d8f...13c4dc8bb61d',\n    'DANGER_GITHUB_API_TOKEN' => '123sbdq54erfsd3422gdfio'\n  }\nend\nA stubbed out Dangerfile for use in tests\ndef testing_dangerfile\n  env = Danger::EnvironmentManager.new(testing_env, testing_ui)\n  Danger::Dangerfile.new(env)\nend\n```\nWill be:\nruby\nrequire 'danger_plugin/rspec'\n. Ok, global functions are an anti-pattern though. \n. There's also stuff like #585. \n. That's another anti-pattern, shipping automatically required test code in non-test environments.\nI think at the very least this code should be transformed into a shared context in the plugin generator, https://github.com/danger/danger-plugin-template/blob/master/spec/spec_helper.rb, I've opened https://github.com/danger/danger-plugin-template/issues/9 for that.\n. Seeing this in https://github.com/mongoid/mongoid-grid_fs/pull/65 as well. Suggested fix?. I think we can fix this in Danger, won't get to it till tomorrow, hopefully someone can beat me to it ;). My editor removed them. I can do surgery to put them back, but why? :)\n. I love me a good tabs vs. spaces debate :) +1 @JuanitoFatas to make a PR to remove that.\n. ",
    "nakiostudio": "I will answer myself. I need to update the plugin using the git object instead of calling the method straight away.\n. Just released danger-xcov 0.1.3 fixing this problem: https://github.com/nakiostudio/danger-xcov/pull/7\n. Actually... the problem persists:\n``\n/Users/travis/build/nakiostudio/EasyPeasy/vendor/bundle/ruby/2.0.0/gems/danger-2.0.1/lib/danger/danger_core/dangerfile.rb:60:inmethod_missing':  (Danger::DSLError)\n[!] Invalid temporary_danger.rb file: undefined local variable or method `modified_files' for #. Updating the Danger gem might fix the issue.\n #  from /var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/d20160731-3136-1yblktt/temporary_danger.rb:4\n #  -------------------------------------------\n #  \n\nhas_app_changes = !modified_files.grep(/lib/).empty?\n #  has_test_changes = !modified_files.grep(/spec/).empty?\n #  -------------------------------------------\n```\n\nhttps://travis-ci.org/nakiostudio/EasyPeasy/builds/148698030\n. I wouldn't never ever guess this one, thanks \ud83d\udc4d \n. ",
    "rynbyjn": "Circle CI...\n. ",
    "ioveracker": "Yeah, the PR that it was running against does have the \ud83d\udcfa emoji in the title.\n. Yeah, stripping would certainly be acceptable for the danger local terminal output. I wonder why it works in versions prior to Danger 2.0, though?\n. ",
    "rhysforyou": "I can confirm I'm also still seeing failures on non-PR branches. I can't link the build output because it's from a private repo, but the bundle exec danger step gives the following output:\n``\nbundler: failed to load command: danger (/usr/local/bin/danger)\nOctokit::InvalidRepository: Invalid Repository. Use user/repo format.\n  /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.3.0/lib/octokit/repository.rb:87:inraise_invalid_repository!'\n  /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.3.0/lib/octokit/repository.rb:31:in initialize'\n  /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.3.0/lib/octokit/repository.rb:55:innew'\n  /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.3.0/lib/octokit/repository.rb:55:in path'\n  /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.3.0/lib/octokit/client/pull_requests.rb:31:inpull_request'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-2.1.2/lib/danger/request_source/github.rb:55:in fetch_details'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-2.1.2/lib/danger/danger_core/environment_manager.rb:39:infill_environment_vars'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-2.1.2/lib/danger/danger_core/executor.rb:31:in run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-2.1.2/lib/danger/commands/runner.rb:56:inrun'\n  /usr/local/lib/ruby/gems/2.3.0/gems/claide-1.0.0/lib/claide/command.rb:334:in run'\n  /usr/local/lib/ruby/gems/2.3.0/gems/danger-2.1.2/bin/danger:5:in'\n  /usr/local/bin/danger:22:in load'\n  /usr/local/bin/danger:22:in'\nbundle exec danger returned exit code 1\n```\n. ",
    "rzane": "Our builds are failing on master every single time.\n``\n/usr/local/bundle/gems/danger-4.0.3/lib/danger/ci_source/circle.rb:82:ininitialize': Danger::Circle.rb considers this a PR, but did not get enough information to get a repo slugand PR id. (RuntimeError)\nPR path: ''\nKeys: [\"PATH\", \"HOSTNAME\", \"TERM\", \"CIRCLE_BUILD_NUM\", \"CI\", \"POSTGRES_HOST\", \"RAILS_ENV\", \"CI_PULL_REQUESTS\", \"CIRCLE_BUILD_URL\", \"CI_REPORTS\", \"CIRCLE_SHA1\", \"CIRCLE_PREVIOUS_BUILD_NUM\", \"CIRCLECI\", \"CIRCLE_PROJECT_USERNAME\", \"CIRCLE_BUILD_IMAGE\", \"CIRCLE_COMPARE_URL\", \"CIRCLE_USERNAME\", \"CI_PULL_REQUEST\", \"CIRCLE_PROJECT_REPONAME\", \"CIRCLE_BRANCH\", \"CIRCLE_NODE_INDEX\", \"CIRCLE_ARTIFACTS\", \"DANGER_GITHUB_API_TOKEN\", \"CIRCLE_TEST_REPORTS\", \"CIRCLE_REPOSITORY_URL\", \"CODECLIMATE_REPO_TOKEN\", \"CIRCLE_NODE_TOTAL\", \"RUBY_MAJOR\", \"RUBY_VERSION\", \"RUBY_DOWNLOAD_SHA256\", \"RUBYGEMS_VERSION\", \"BUNDLER_VERSION\", \"GEM_HOME\", \"BUNDLE_PATH\", \"BUNDLE_BIN\", \"BUNDLE_SILENCE_ROOT_WARNING\", \"BUNDLE_APP_CONFIG\", \"NODE_VERSION\", \"HOME\", \"BUNDLE_GEMFILE\", \"BUNDLER_ORIG_PATH\", \"GEM_PATH\", \"BUNDLE_BIN_PATH\", \"RUBYOPT\", \"RUBYLIB\", \"MANPATH\"]\n```. Sure no problem!. Done! Thanks!. ",
    "cysp": "I see that kind of backtrace when Danger runs as a result of a push, not in the context of a PR.\nIn that scenario, BUILDKITE_REPO is set but BUILDKITE_PULL_REQUEST_REPO is the empty string.\nShould .repo_url use the former variable? (Or perhaps fall back to it, if the latter is not useful?)\nIt appears that that used to be the case but was changed here.\n. Cools, take a squiz at that wording. Would you prefer the technical detail of the environment variable to be exposed in the changelog?\n. Sure. \ud83d\ude00 \nHaha, it's hard to say no when you're invited to something named Danger.\n. I was able to reproduce this, with a PR that was raised from one-commit-behind-HEAD of the target branch.\nThe commit that git complained about not being able to find was the current HEAD of the target branch.\nIt seems to me that the problem is that we're using the sha that Github (in this case) tells us is the head of the target (base) branch but the CI system (in my case, Buildkite) has not fetched that target branch so it does not have that commit locally.\n. I'm inclined to fix this in the CI, by either getting it to fetch the merge commit for the PR or both the PR's head and the target branch's head.\n(Though I understand that this might not be a possible solution for all CI services. \ud83d\ude1d )\n. Is the error the same as seen at https://circleci.com/gh/danger/danger.systems/89, referenced from https://github.com/danger/danger/issues/480?\n. When I saw this happen, it was actually the from argument to merge_base that did not exist locally, so I think that we'll already have raised an error by this point?\n. Isn't it this commit (https://github.com/danger/danger.systems/commit/3e956f142ee4f9b5da9fb26f0c2e041b199c6c7a)? It looks like it would have been the HEAD of master at the time that that CI build was running.\nI suspect that the test for the presence of the commit that git merge-base tells us about can be omitted, as I'd be quite surprised if git was able to produce a merge base that it does not have details of.\n. ",
    "suchow": "@DangerCI Yes, I would be happy to join the organization.\n. Okay, whatever you just did has fixed the draft display issue, so now all new releases are visible on the release page. Hurray.\n(As a side note, I don't think using Chandler would change anyone's workflows or incentives. Developers would continue to update CHANGELOG.md, which is the only place to register a human-readable description of changes. When a PR is merged into master, chandler is run on Travis, which then updates the GitHub release page to mirror the same notes already included in the change log.)\n. Another possibilitiy might be partitioning the response into the smallest number of comments that's under the message-length limit?. ",
    "vittoriom": "Would you like me to change it back or is it something that may turn out faster for you to do?\n. Deal ;) \nHere it is: #467 \n. No problem, it took half an hour from issue creation to merge, and a few more minutes for the new release. Can't really complain \ud83d\ude04 \n. Sure! \n. ",
    "phillfarrugia": "Oh okay, I did some investigating and I think the specific error message shown above is because I happened to be running bundle exec danger manually in terminal - BUILDKITE_PULL_REQUEST wasn't set and Danger failed to handle this properly.\nI think this line here - https://github.com/danger/danger/blob/5993c6e5ee987be3deb1d5bd033ef34faa4af2cf/lib/danger/danger_core/executor.rb#L16 might need improvement. I'm not very proficient in ruby, so potentially someone with more experience could take a look.\n. Ah I've just noticed that #310 is the reason this environment variable changed from \"BUILDKITE_REPO\" to \"BUILDKITE_PULL_REQUEST_REPO\".\nI'm a bit confused by this change, as far as I can see Danger will always 404 on PRs as its trying to build the api.github.com url with the PR slug not the main repo slug. \nAs opposed to just creating a PR that changes it back, I'll leave it up for discussion.\n. Thanks for reviewing, I'd love to join the Danger org if that's a thing that can be done! \ud83d\ude0a\nAlways looking for an opportunity to contribute.\n. ",
    "pepibumur": "It happens to me as well when I locally without the local flag.\n. ",
    "bogren": "Sure - I was just about to ask how I would go a head and tag/write my changelog entry. I'll add you to my Fork. Yes please! \ud83d\udc4d \n. I'm looking for new possible solutions \ud83d\udd0e \n. ",
    "barakwei": "I hit this problem today. Danger 4.0.4.\nTo solve this, I use git.modified_files.map { |path| path.gsub(/{(.*) => (.*)}/, '\\2') }. Since the last comment i've upgraded it:\nruby\nmodified_files = git.modified_files.map { |path| path.gsub(/{(.*) => (.*)}/, '\\2') }\nchanged_files = (git.added_files + modified_files - git.deleted_files).uniq\nThen I use changed_files with my plugins.. Will this solve #498?. ",
    "thebugcode": "I am also experiencing issues when setting this up. In particular danger tries to fetch the Merge Requests like this:\nRequest URI: https://gitlab.mydomain.net/api/v3/projects/myteam/myproject_name/merge_request/38823\n(Gitlab::Error::NotFound)\nAnd that indeed returns a 404. The right URI that returns valid data is https://gitlab.mydomain.net/api/v3/projects/1243/merge_requests/38823\nso it looks like we should replace projects/myteam/my_project_name with projects/1234.\nAny ideas why the endpoint seems to be different for me? I have GitLab Enterprise Edition 8.14.3 . @orta I fail to install the gitlab gem from master. Do you mind giving me a short instruction of how to install it from master such that danger can still use it?. Opening the URL with the project path fails even in my browser. It seems our Gitlab doesn't support this api request for some weird reason.\nGiven your knowledge of the source code, is there a way for me to force that the MR is fetched using ProjectID instead of project path? Maybe a environment variable gets checked. @k0nserv Thanks. I'll keep trying to see why this doesn't work but according to my best guess right now: Fetching Gitlab MRs using the project path is not documented and not supported. The only documentation I can find is using the project ID: https://docs.gitlab.com/ee/api/merge_requests.html#get-single-mr. But does this work?\napi/v3/projects/your_team/your_projectname/merge_request/:id\nThis is what danger is trying to access and fails. Awesome, thanks guys. This is what I was looking for, ill try it asap.. Guys this is awesome . I'm dropping the workaround and coming back to the official version. Many thanks. ",
    "born4new": "I would love that feature...If you are interested, I can go ahead an make a PR for it?\nWaiting on your feedback before starting anything else.... It sure it @ZJvandeWeg :). I'll propose to implement the endpoint on there as well.. ",
    "ZJvandeWeg": "@born4new Danger depends on https://github.com/NARKOZ/gitlab/ and I didn't spot any discussion related endpoints in https://github.com/NARKOZ/gitlab/tree/master/lib/gitlab/client, I think thats a required first step?. ",
    "saurabhnanda": "I'm integrating Danger into our Gitlab project and stumbled upon this issue. This is waiting for someone to implement it, now that the gitlab gem has support for MR discussions, right?. Thanks @NARKOZ \ud83d\udc4d \nIIUC, danger gem now needs to be upgraded to take advantage of this new functionality, right?. ",
    "NARKOZ": "I've just released the gitlab gem v4.4.0 with MR discussions feature \u270c\ufe0f. ",
    "dimazen": "Any updates on it?. @orta sorry for disturbing you, but just to confirm:\nIn order to have inline comments for the GitLab we need to implement in gitlab.rb:112 logic similar to what Danger current has in github.rb:143? \ni.e. GitHub uses warnings from Danger to build inline messages, while GitLab simply generates a single comment. \nAm I right?. ",
    "masters3d": "They print.\nLimit vertical whitespace to a single empty line  Currently 2\n/exercises/accumulate/AccumulateTest.swift\n37\nI changed something. \nIs there a difference between ?\nwarn(message: \"\", file:\"\", line:1 )\nwarn(\"\", file:\"\", line:1 )\n. I think the issue is the first argument label that I added is somehow being passed down as an object (perhaps the message() function? ) so when when a string method is call on this object then it cant be found. \nAnyway, the issue is revolved by just removing the extraneous message argument label.\n. Another way that it crashes similarly is if the string variable is named the same as the message function.\nruby\n...\nmessage = \"myString\"\nmessage(message, file:\"someFile\", line:1)\n. Got it :) Thanks for introducing me to Ruby with Danger. \n. ",
    "tikitu": "@orta Surely can, using the same diff information you do. I'll rename it to info_for_file in that case. I'm only wondering if it overlaps too much with diff_for_file (since that info is already available in the Git::Diff::DiffFile object) -- if you reckon it's worth exposing it more explicitly, though, I'm happy to go ahead with it.\n. @orta Sure, hook me up. (I could have replied to Danger, I suppose, sorry.)\n. I'm not a rubyist and am only guessing at the appropriate format for the @return annotation.\n. Thanks, fixed\n. Good call, that was cargo-cult code. Now that I'm adding file contents I probably will end up stubbing though. Thanks for the sharp eyes.\n. On second thoughts: I think we do still need the stubbing, or at least, removing it is beyond the shallow understanding I have so far. It's giving us access to a pre-prepared diff (see run_in_repo_with_diff at the head of the file) which we otherwise wouldn't have because @repo doesn't really have a diff to report on.\n. Oops... thanks, good catch.\n. ",
    "ge-fa": "Hi @orta ,\n\nI would have to manually re-create the certs every 90 days, which is too short a timeframe for me to say I will do for as long as Danger exists \n\nWhy do you have to re-create the certs manually? Could you elaborate? \nThanks!. Alright I see, thanks. I wasn't aware that the URL points to GitLab.. ",
    "thiagofelix": "The GitHub API allows to associate multiple status to a given commit. In order to do so you have to specify a different \"context\" for each status.\nDanger always submit the status with the same context. Therefore the last execution will determine the final status of the commit.\nI think it would be nice if we could pass the context as arguments to the CLI interface or use the danger_id as the context of the status.\nI am using danger in similar way, running it multiple times during the build pipeline lifecycle.\n- Quick validate if the PR is good (#loc changes, changelog updated or not?, )\n- Publish test results\n- Upload artifacts to external server once the build finishes\n. Hi guys.\nI was investigating the same issue before find this page, just submitted a PR #571.\nIt should allow users to distinguish the status from different danger execution based on the context and danger_id.\nHope you don't mind @fwal that I PR your issue. If you are working on a PR by yourself I won't mind if we closes mine and merges yours.\n. @JuanitoFatas want me to fix the Rubocop offenses? They were already in the master branch when I forked.\n. > Good to go after all the merge PR faffing \ud83d\udc4d\n\n@thiagofelix would you like to join the org?\n\n@orta sure! \ud83d\ude04 \n. @orta I merged instead of rebase, is that ok? I am assuming you will squash everything during the PR merge.\n. @JuanitoFatas Thanks! \ud83d\udc4d \n. Ops, working on the fix.\n. ",
    "notjosh": "Ha, I'm delving into Danger on a project at the moment. If(/when) there's a real PR, let's do the org thing then.\n. Ah, duh. Great point. Thanks!\n. Heh, let's do it! We've started using Danger at work, so I suspect there'll be more contributions in the future :)\n. \ud83d\udca5\u2757\ufe0f\n. ",
    "felipesabino": "\n@felipesabino want to be in the org?\n\n@orta sure, this would awesome\n. @orta ok, thanks!\nOh, and about \n\n@felipesabino is not a contributor yet, would you like to join the Danger org?\n\nAny idea if this is related to #128 ?\n. Oh, got it! And I forgot about the org profile visibility thing, just changed mine to public then, no worries. Thanks\n. Well, diff.config docs say that renamelimit config is the same as git diff -l option, and I could reproduce it locally and prevent the warning using it.\nThere are some performance concerns depending on other parameters passed with -l, which I assume it is why the default value for renamelimit is not \u221e \ud83d\ude2c \nAlso, I am not so familiar with the git gem used by danger and if it even allows params for git diff, so that can also be a concern when fixing this\nReproducing it locally for testing purposes\n\nAdd the following setting to your .gitconfig\n[diff]\n  renamelimit=1 # needs to be > 0\nExecute a $ git diff on a repo you are aware that contains 2 or more files\nThe following git warning must be shown\nwarning: inexact rename detection was skipped due to too many files.\nwarning: you may want to set your diff.renameLimit variable to at least 701 and retry the command.\nExecute the same diff command with -l value as a huge number. $ git diff -l 99999\nDiff is shown and no warning is displayed\n\n. Fixed :)\n. ",
    "JanStevens": "Hello,\nAny help needed? We are really looking forward using danger but we have GitlabCI :(\nRegards\n. ",
    "ashwin31": ":+1: . ",
    "bruno-rocha-movile": "Since this would be a result of multiple runs of danger, perhaps --new-comment ?\n. That worked @orta ! Awesome!\nI do believe this functionality needs an argument with a more obvious name though, so I'll definitely take a shot at this :)\n. Here's what happens:\n\nIt makes it easier to read your pull request, depending on your team's rules for pull requests. In my team's case, it's wonderful :)\n. @JuanitoFatas @orta of course! Thanks for the invite! I have some other interesting improvements that I was planning to do as well, Danger is amazing :)\n. Merged on #644 \n. Merged! (I screwed up the rebase, sorry)\n. Hmmm I didn't expected that to happen, thank you!\n. Seems like there's a code violation from something unrelated to this. Will check it out\n```\nlib/danger/danger_core/dangerfile.rb:292:7: C: Favor a normal unless-statement over a modifier clause in a multiline statement.\n  ui.title(title) do ...\n\n  ^^^^^^^^^^^^^^^^^^\n\n```\n. Thank you @JuanitoFatas !\n. I didn't wanted to give the impression that removing the argument on a subsequent build would make Danger edit the new comment... I think someone could be confused by it, what do you think?\n. ",
    "viktorbenei": "Sure, feel free to summon me ;)\nJust one note: --depth=1 is not the default configuration on Bitrise, this only happens if you manually set the depth to 1 for any reason.\n. Also, instead of fetch --all you should use git fetch --unshallow (in case the initial fetch was performed with a --depth param) - http://stackoverflow.com/questions/6802145/convert-shallow-clone-to-full-clone#comment35228922_6802238\n. @DangerCI would love to, thanks ;). Tests were not updated because no code was changed. One more info/detail, the related code seems to be https://github.com/danger/danger/blob/master/lib/danger/ci_source/bitrise.rb#L40 -> this regex will only work for the git@github.com:... style git clone URL (GIT_REPOSITORY_URL), and not for the https://github.com/... one.. I created an internal tracker card for this, hope we can allocate some engineering hours to fix it \ud83d\ude09. could be shorter:\nreturn true if !env[\"BITRISE_PULL_REQUEST\"].to_s.empty?\nor just\nreturn !env[\"BITRISE_PULL_REQUEST\"].to_s.empty?\n. hmm.. I don't think we have this as an env var right now..\nBuild Slug is the app's Bitrise.io build slug\n. you could use something like this instead https://github.com/danger/danger/blob/master/lib/danger/ci_source/buildkite.rb#L41\n. not yet\n. or you could use BITRISE_IO - set to \"true\" on bitrise.io VMs ; although that's true for our Docker images as well, if you'd use it locally https://github.com/bitrise-docker/bitrise-base/blob/master/Dockerfile#L15 \n. ",
    "fcy": "``` ruby\nProtect released Core Data models\nEDITABLE_CORE_DATA_MODEL_VERSION = 20\nis_version_valid = File.exist?(\"TTKit/Assets/TophatModels.xcdatamodeld/TophatModels.v#{EDITABLE_CORE_DATA_MODEL_VERSION - 1}.xcdatamodel\")\nif is_version_valid\n  modified_models = git.modified_files.map{ |f|\n    $1.to_i if f =~ /TTKit\\/Assets\\/TophatModels.xcdatamodeld\\/TophatModels.v([0-9]+).xcdatamodel\\/.*/\n  }.select{ |e| e != nil }\n  modified_models ||= []\ndid_modify_correct_model = modified_models.count == 0 || (modified_models.count == 1 && modified_models.include?(EDITABLE_CORE_DATA_MODEL_VERSION))\n  unless did_modify_correct_model\n    modified_models.reject! { |v| v == EDITABLE_CORE_DATA_MODEL_VERSION }\n    modified_models.each do |version|\n      if version < EDITABLE_CORE_DATA_MODEL_VERSION\n        msg = \"TophatModels.v#{version} cannot be changed.\"\n      elsif version > EDITABLE_CORE_DATA_MODEL_VERSION\n        msg = \"Current Core Data model version is #{EDITABLE_CORE_DATA_MODEL_VERSION}, you seem to have created TophatModels.v#{version}.\"\n      end\n  fail(\"#{msg} Use or create `TophatModels.v#{EDITABLE_CORE_DATA_MODEL_VERSION}`\")\nend\n\nend\nmodified_models.each do |version|\n    sqlite = \"TTKit/Tests/Unit/Models/Databases/TestDataModel.v#{version}.sqlite\"\n    fail_msg = \"TophatModels.v#{version} changed but not its corresponding TestDataModel.v#{version}.sqlite, \" +\n      \"they must be in sync at all times. Read the docs in DataModelMigrationSpec.m on how to \" +\n      \"generate a sqlite for a model.\"\n    fail(fail_msg) unless git.modified_files.include? sqlite\n  end\nelse\n  version_invalid_msg = \"#{EDITABLE_CORE_DATA_MODEL_VERSION} is not a valid EDITABLE_CORE_DATA_MODEL_VERSION \" +\n    \"since TophatModels.v#{EDITABLE_CORE_DATA_MODEL_VERSION - 1}.xcdatamodel doesn't exist.\"\n  fail(version_invalid_msg)\nend\nMake it more obvious that a PR is a work in progress and shouldn't be merged yet\nif github.pr_title.include?(\"WIP\") || github.pr_body.include?(\"do not merge\") || github.pr_body.include?(\"WIP\")\n  warn(\"PR is a Work in Progress\")\nend\nHandling merge commits\nMERGE_COMMIT_REGEX = /^Merge branch 'master'/\nif git.commits.any? { |c| c.message =~ MERGE_COMMIT_REGEX }\n  non_merge_commits = git.commits.reject {|c| c.message =~ MERGE_COMMIT_REGEX }\n  if non_merge_commits.count == 1\n    warn('Since you have only 1 commit, you can use the Squash and Merge option to get rid of the merge commit(s)', sticky: false)\n  else\n    warn('Please rebase to get rid of the merge commits in this PR')\n  end\nend\nPrefer squashing for 1 commit changes\nif git.commits.count == 1\n  message('Single commit PR: prefer merging with Squash and Merge to keep the history cleaner.', sticky: false)\nend\n```\n. No, that is why I'm trying to use the ignore feature to bypass this error this one time.\n. Are we talking about the same thing? I'm getting lost here.\nFrom the reference page:\n\nIt is possible to have Danger ignore specific warnings or errors by writing Danger: Ignore \"[warning/error text].\n\nThat logic is not wrong. I want to use that \ud83d\udc46feature to ignore the logic in a single case. \n. I also tried without \">\". Let me know how I can help more.\n. Sure, here it is:\n\"body\": \"This change didn't produce a new sqlite, ignoring this:\\r\\n>Danger: Ignore \\\"`TophatModels.v20` changed but not its corresponding TestDataModel.v20.sqlite, they must be in sync at all times. Read the docs in `DataModelMigrationSpec.m` on how to generate a sqlite for a model.\\\"\",\n. I'm having this problem but on Jenkins and not locally. I know why but not how to fix it, so I'm posting here to see if maybe help someone in the future.\nAs orta mentioned the commit is coming from GH API, in my case the missing one is the base. The base is the most recent master commit but when Jenkins checkout the PR it only fetches the branch to be tested so any commits in master that are newer than the branch being tested are not in the local clone.\nI'm trying to find a way to make Jenkins include master on the checkout as well. I'll update here if I find anything.\nI'm on Danger 5.3.4.. @zdenektopic I solved it by making Jenkins checkout master as well as the PR it is going to build. I'm on leave right now, I don't recall the exact setting but it was related to manually specifying extra ref specs and adding master to it.\n\n. ",
    "darrarski": "It could be Bitrise issue. From my observations, Danger crashes on each PR from feature branch to another feature branch, but the same crash happened once on PR from feature branch to master. More than 50  builds on PR from feature branch to master passed without Danger crashing in the meantime.\nIt's hard for me to give more details right now. @orta if you have some hints what could be helpful in solving the issue, like logs etc - let me know, but I am not sure if I will be able to get those from Bitrise.\n. ",
    "mattdelves": "Any update on this? We're still running into the issue after doing a rebase and force push. (I work on the same app as Gio).. ",
    "eygraber": "Any tips for someone who can't update danger, and is running into this issue?. ",
    "mitsuhiko": "Found the problem. It's the extra newline after <tbody> that causes github to fail to parse it.. ",
    "dzenbot": "Did Github recently change on their end? Things were silky smooth a few days ago.. Thanks @kivikakk !. \ud83c\udf89\ud83d\udc4f. Great, thanks @orta. Will give this a try.. \ud83c\udf89 . ",
    "kivikakk": "Hey all -- we're currently moving to a CommonMark-compliant parser, which does affect how HTML is interpreted. You can see the spec (we're currently at ~~0.26~~ 0.27) for more details, but here's a test case demonstrating the issue.\nPer the \"HTML blocks\" section of the spec:\n\nEverything until the next blank line or end of document gets included in the HTML block.\n\ntl;dr: removing any blank lines in HTML blocks will fix the issue going forward.\nWe're doing our best to transition old documents in the coming days to render properly, so existing comments made by Danger will be fixed.. @marcelofabri: ah, yes, good point! Edited and new comments are using the new engine, and old comments are using the old one. We're gradually transitioning the whole site over to the new engine, and are updating comments as we do update them to the new engine so they don't break.. I have some time, so I'll try getting a PR up!. @ajfigueroa: I suspect it's a time difference thing (whether they were posted before or after the CommonMark switch was flicked) \u2014 they should all be looking okay as of a day or so from now when the transition completes. If you have any specific examples, feel free to link and I'll look into them!. Awesome! And sure, I'd love to!. Great, thank you! :smile_cat:. ",
    "ajfigueroa": "v4.0.1 works great. \ud83c\udf89 \nOut of curiosity, are new lines treated differently for warn vs fail? \nI'm seeing the same formatting issue only for warns messages that contain news line characters. However, my fail messages which also contain new line characters are rendering fine.. ",
    "Buju77": "@orta I just updated my PR with abort and rebased.. doh ... forgot to fetch upstream \ud83d\ude02 \nshould be fine now \ud83d\ude0a . @orta thx a lot :). is there any way to make this more prominent? like color the first part of the message in red or something?. can someone explain? what is Cork? and how to use it? ;). its new to me too \ud83d\ude02. ",
    "krin-san": "@JuanitoFatas, sure, I'd like to. I could help with something in future =]. @JuanitoFatas you was first :). It was a different invitations! \ud83d\ude02\n@JuanitoFatas, you invited me to a repo contributors granting with a push action rights\n@orta, you invited to the Danger github organization.\nSo I can't judge who was the first =). Tests are failing at this point. I have two options how to fix them:\n completely remove html formatting code with tests\n move this fix to danger-xcode_summary plugin repo and call a proper method based on chosen RequestSource. @JuanitoFatas, offer a best way to skip these tests:\n using metadata , skip: true\n prefixing with x like it -> xit\n* removing tests completely. This way we also do't see any \"No reason given\" warnings. You're right! The warning emoji \u26a0\ufe0f is valid for BBS - I got no 500 error.\nI'll use it instead of red one I chosen.. Good idea, but it needs some refactoring.\nWould be nice to have a separate attribute like @emoji_mapper to map emoji character names into chars without re-defining the template. How about this?\n```ruby\nclass EmojiMapper\n  DATA = {\n    \"github\" => {\n      \"no_entry_sign\"    => \"\ud83d\udeab\",\n      \"warning\"          => \"\u26a0\ufe0f\",\n      \"book\"             => \"\ud83d\udcd6\",\n      \"white_check_mark\" => \"\u2705\"\n    },\n    \"bitbucket_server\" => {\n      \"no_entry_sign\"    => \"\\u274C\", # \u274c\n      \"warning\"          => \"\\u26A0\", # \u26a0\ufe0f\n      \"book\"             => \"\\u2728\", # \u2728\n      \"white_check_mark\" => \"\\u2705\"  # \u2705\n    }\n  }\ndef initialize(template: \"github\")\n    @template = (DATA.include? template) ? template : \"github\"\n  end\ndef map(emoji)\n    emoji.delete! \":\"\n    DATA[template][emoji]\n  end\nprivate\nattr_reader :template\nend\nEmojiMapper.new().map(\":warning\").to_s + \" \" + \\\nEmojiMapper.new(template: \"bitbucket_server\").map(\":warning\").to_s + \" \" + \\\nEmojiMapper.new(template: \"bitbucket\").map(\":warning\").to_s\n``. Thanks, @JuanitoFatas! That's the way I'm looking for.. @JuanitoFatas,to_sused just to text this code in Online Ruby shell without crashes whennilis returned.\nLook my last commit, I added this mapper to the project. Also I noticed noone is using methodcharacter_from_emoji` except bitbucket_server.. ",
    "m1guelpf": "@orta I want to give a badge if there weren't errors, and another if there were.\nHow can I get the errors to another ruby script out of Danger?. @orta Git.commits returns commit data, not the number.\nCan you help processing that?. @JuanitoFatas That code triggers when there is only one commit or where there is more that one?. @orta If you don't mind, I'll add the webhook option to the OrgManager roadmap, as it is a very good idea.. @orta Just deployed the OrgManager Autoinviter to production!. @orta If you want to use it, you have to follow two simple steps:\n1. Add the Danger organization to OrgManager. Direct Link\n2. Install the OrgManager Autoinviter GitHub Integration to the Danger Organization, and select the repos you want to use it with.\nAnd it should be ready!. ",
    "wongzigii": "Will danger plan to add such api into internal library? @orta . ",
    "tbaranes": "Doesn't seem to be that, I just logged in the bot account, there's no extra comments in the PR. \nIs there any manipulation / tests I can do to get more information?. > Did you set DANGER_GITHUB_API_TOKEN on Travis?\nYeah, I checked a few times and even generate a new one before posting here \ud83e\udd13\nWhen I used your code in the REPL, I got a 404, but when trying to paste in the navigator it's has an json as output. Does that mean the issue is from the token? \ud83e\udd14\nOctokit::NotFound: POST https://api.github.com/repos/IBAnimatable/IBAnimatable/statuses/280cbb3d8fd10a902b5b408277633dd9e48961fc: 404 - Not Found // See: https://developer.github.com/v3\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/response/raise_error.rb:16:in `on_complete'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/response.rb:9:in `block in call'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/response.rb:61:in `on_complete'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/response.rb:8:in `call'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/middleware/follow_redirects.rb:73:in `perform_with_redirection'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/middleware/follow_redirects.rb:61:in `call'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/rack_builder.rb:139:in `build_response'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/connection.rb:377:in `run_request'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/faraday-0.10.0/lib/faraday/connection.rb:177:in `post'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/sawyer-0.8.1/lib/sawyer/agent.rb:94:in `call'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/connection.rb:154:in `request'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/connection.rb:28:in `post'\n    from /usr/local/lib/ruby/gems/2.3.0/gems/octokit-4.6.2/lib/octokit/client/statuses.rb:43:in `create_status'\n    from (irb):17\n    from /usr/local/bin/irb:11:in `<main>'. Thanks for your quick answers \ud83c\udf89\nYeah, I have even tried to give it more access, but nothing changed... Consulting github is a good idea, I will keep you in touch!. > The reason why that POST request is failing is that the user for which you created the token (IBAnimatableBot) doesn't have write permissions to the repository in question (IBAnimatable/IBAnimatable). The user needs to have write permissions in order to create statuses. You're able to fetch statuses because fetching them requires read permissions only, and since it's a public repository -- everyone has read permissions.\nHere the intestering part of their answer! I didn't test it yet (will do tomorrow), but I think I read in the danger FAQ / setup that we shouldn't add the bot the repository (when the repository is public), does that seem normal to you?. Good news! Giving write access to IBAnimatableBot by adding it to the repository works (using REPL). I'm letting that issue open for one more question, is that the normal since you write in the getting set up: \n\nDo not add the bot to your repo or to your organization.\n. I see, I didn't get the difference between posting the comment and posting the statuses. Also, I was thinking that Danger will always trigger something even if everything there's no error (don't know why I suppose that).\n\nI try it again following your comments, and everything is now working as expected! The bot is not a member anymore, CI failed, and Danger give me a warning \ud83c\udf89\nSo, there's was no issue from the beginning, just a misunderstanding of the expected behaviour.\nAdding an explanation about this to the FAQ is definitely worth it, pretty sure that will help anyone who is started. Also, not sure that is really necessary, but maybe add a default comment in the default Dangerfile to say \"\ud83d\udc4d\"?\n@orta @JuanitoFatas Thanks a lot for the explanations and help! I have now a better understanding of Danger (and github API).\n\ud83d\udcaf . ",
    "JakeLin": "You guys rock, thank you very much for your help and super quick response \ud83d\udc4d\ud83d\udc4d\ud83d\udc4d. ",
    "JLLeitschuh": "Still be broke.\nhttp://danger.systems works fine though.\nConsider changing the link on the repo title bar till this is fixed?. ",
    "johnallen3d": "Thanks @orta and @JuanitoFatas for your feedback! Let me take a crack at implementing a ci_source and submit it for feedback. I'll try to find out if there is anything logically different between the classic and docker platforms and decide if a Danger::CodeshipDocker CI source would make sense.\nI like the idea of using the GitHub API to determine if there is an open PR associated with the branch in lieu of Codeship exposing the appropriate variable. I'm thinking that the CircleCI source would be a good example for me to work from. I'm going under the assumption that supporting just Github is acceptable initially, is that a valid assumption?. Sorry, I'm not been able to make any progress on this. For this reason and a couple of others my team is considering a switch to CircleCI. . ",
    "polok": "I am using Danger in version 4.2.1 on Jenkins and I have exactly the same problem.. @orta Thank you for your quick answer. I will have a look later today/tomorrow and put an update here.. Still without any luck:\n```\n+ bundle exec danger\nCould not set up API to Code Review site for Danger\nFor your GitHub repo, you need to expose: DANGER_GITHUB_API_TOKEN\nYou may also need: DANGER_GITHUB_HOST, DANGER_GITHUB_API_BASE_URL\nFound these keys in your ENV: DANGER_GITHUB_API_TOKEN.....\n```. ",
    "rahul-narkhede": "We too have the same problem.  We added\nexport DANGER_GITHUB_API_TOKEN=5deotng34...\nWE still get the same problem. \n```\n+ bundle exec danger\nno_proxy is unsupported\n\u001b[33m\nCould not set up API to Code Review site for Danger\n\u001b[0m\nFor your GitHub repo, you need to expose: \u001b[33mDANGER_GITHUB_API_TOKEN\u001b[0m\nYou may also need: DANGER_GITHUB_HOST, DANGER_GITHUB_API_BASE_URL\nFound these keys in your ENV: ghprbPullId, DANGER_GITHUB_API_TOKEN, BUILD_URL, ghprbPullLink, RVM_BIN_PATH, ANDROID_HOME, GEM_HOME, HUDSON_SERVER_COOKIE, SHELL, SSH_CLIENT, TMPDIR, ghprbSourceBranch, IRBRC, SYSTEM_VERSION, BUILD_TAG, ghprbPullAuthorLogin, FASTLANE_HIDE_GITHUB_ISSUES, MY_RUBY_HOME, ROOT_BUILD_CAUSE, DANGER_GITHUB_API_BASE_URL, WORKSPACE, JOB_URL, RVM_RUBY_STRING, ghprbPullDescription, com.apple.java.jvmTask, USER, http_proxy, ghprbAuthorRepoGitUrl, ghprbTriggerAuthorLoginMention, _SYSTEM_TYPE, ghprbCommentBody, __CF_USER_TEXT_ENCODING, GIT_AUTHOR_NAME, ghprbPullTitle, GIT_COMMITTER_NAME, ghprbActualCommitAuthorEmail, DANGER_GITHUB_HOST, RVM_DELETE_FLAG, BUILD_CAUSE_GHPRBCAUSE, GIT_COMMIT, JENKINS_HOME, MAIL, PATH, GIT_COMMITTER_EMAIL, ghprbPullAuthorLoginMention, PWD, JAVA_HOME, HUDSON_URL, JOB_NAME, _SYSTEM_ARCH, BUILD_DISPLAY_NAME, sha1, BUILD_CAUSE, BUILD_ID, ROOT_BUILD_CAUSE_GHPRBCAUSE, JENKINS_URL, BUILD_TIMESTAMP, ghprbActualCommit, https_proxy, FASTLANE_SKIP_UPDATE_CHECK, RVM_VERSION, HOME, SHLVL, JAVA_MAIN_CLASS_49229, GIT_BRANCH, no_proxy, FASTLANE_DONT_STORE_PASSWORD, EXECUTOR_NUMBER, JENKINS_SERVER_COOKIE, GIT_URL, NODE_LABELS, ghprbActualCommitAuthor, LOGNAME, ghprbTriggerAuthor, SSH_CONNECTION, GEM_PATH, RVM_PATH, HUDSON_HOME, NODE_NAME, ghprbPullLongDescription, BUILD_NUMBER, ghprbTargetBranch, HUDSON_COOKIE, JAVA_ARCH, ghprbTriggerAuthorLogin, GIT_AUTHOR_EMAIL, ghprbCredentialsId, RVM_PREFIX, RUBY_VERSION, _SYSTEM_NAME, ghprbGhRepository, , BUNDLER_ORIG_PATH, BUNDLER_ORIG_GEM_PATH, BUNDLE_BIN_PATH, BUNDLE_GEMFILE, BUNDLER_VERSION, RUBYOPT, RUBYLIB, MANPATH.\n```. ",
    "showpony": "I am also getting this error when trying to connect to my GitHub enterprise instance.\nMy environment variable 'DANGER_GITHUB_HOST' is a custom URL to my GitHub enterprise server (xxxghub.xxx.com).  It looks like this piece of code is inferring which source code repository you're using by using a regular expression to match on the string 'github', -which I don't have-.  \ndef get_repo_source(repo_url)\n      if repo_url =~ /github/i\n        RequestSources::GitHub\n      elsif repo_url =~ /gitlab/i\n        RequestSources::GitLab\n      elsif repo_url =~ /bitbucket\\.(org|com)/i\n        RequestSources::BitbucketCloud\n      end\n    end. Yeah I think this code could be refactored to just check for a non-null environment variable for DANGER_GITHUB_HOST, and if it's non-null, use that one.\n. ",
    "antalindisguise": "Any news on this @orta ? I am experiencing the same issue with a enterprise gitlab instance with a custom hostname that does not contain gitlab. All right. Let me look into it as soon as I get the time this week.\nOn Tue, 22 Aug 2017, 22:16 Orta notifications@github.com wrote:\n\nNope - not received any PRs on this I think, you're welcome to take a look\nat it.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/danger/danger/issues/685#issuecomment-324139454, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AA5H2VtFwLdvbTpmApevUWVEH_aEJx8Tks5sazc1gaJpZM4LSr8j\n.\n-- \n\n@anthonymonori\n. ",
    "barbosa": "My pleasure!. @orta not yet :). Thanks, @orta \ud83c\udf89 . ",
    "timbroder": "Great, and to confirm that this would be part of danger, not a plugin correct? Because the documentation looks in this directory?\nAlso, what is the best way to test this on the CI itself without publishing a gem for it to install? I can mimic the env variables locally, but for a final test. @pabloelizalde thanks for hopping on this ticket! I haven't had time to properly turn attention to it yet\nIf you want another set of eyes on it or another buddybuild instance to test on let me know!. @pabloelizalde I have some time tomorrow and Monday I can dedicate to working on this. Checking in to see if your work is viable or if I should start fresh? Thanks!. @pabloelizalde @garnett have reached out. Will do!. From BuddyBuild:\n\nHi there!\nYes buddybuild supports Danger natively. As long as your repository contains a Dangerfile and a Gemfile, then buddybuild will run your Danger step automatically after the build.\nRichard\n\n@orta where is the best place to mention this in the documentation? It looks like the site pulls from ci_source. Should I add a skeleton one for BuddyBuild or something else?. @orta don't even check GitHub! Have fun!. Quick update from me. I've had this working and stable for about 3 weeks. Need to update docs and will submit PR. ",
    "pabloelizalde": "Hi guys, I have been taking a look to integrate Danger with buddybuild CI. As you said, there is no ci_source for it. I have created a my own buddybuild.rb based on the other examples. My first problem is that I am missing some environment vars like \"BUDDYBUILD_PULL_REQUEST_ID\". Should I add this ENV var in the buddybuild_postclose.sh?\nIf this buddybuild.rb is correct, I can do a PR, but how can I test this before getting merged? \nThanks. Thanks for the quick reply.\nWe were in contact with buddybuild, and looks like they have an early version of automatic Danger support. So there is no need to create ENV VARs anymore, and no need to include a script to run the commands bundle install and bundle exec danger.. @timbroder I would say contact buddybuild first. They were able to build our projects with Danger support directly. So I didn't have to include any ENV var or modify any script. Good luck!. Hi, I am just facing this issue. Was this feature implemented? Is it possible to use danger pr with a bitbucket repo?. ",
    "delebedev": "@timbroder please share your findings if you contact Buddybuild as @pabloelizalde suggests.. ",
    "milind-mevada-stl": "I've setup everything. On my pull request BuddyBuild start generating build.\nBut in the log, i could see: Could not find the type of CI for Danger to run on.\nI've also added DANGER_GITHUB_API_TOKEN to BuddyBuild ENV variables. @orta Can you tell me one more thing? \nIs this error comes when BuddyBuild can't find Environment variables ?. It looks like my code is already passing from BuddyBuild.ts file. Because it verifys if it is a Pull Request or Single commit.\nAnd as far as it's pull request it's working further.. @orta \nRe-integrating app to buddyBuild done my work. :smile: Thanks . ",
    "RishabhTayal": "I do think that \"This is a regular Github account\" is misleading. Also, it doesn't make it clear that we need to make a new account as a \"bot\". How does the bot account connects with the individual account repo?\nRegards,\nRishabh Tayal\nrtayal11@gmail.com\nOn Jan 6, 2017, 5:28 PM -0600, Orta notifications@github.com, wrote:\n\nHi, I don't think we should take you through step by step on how to create an account on GitHub/GitLab or BitBucket - that is generally pretty obvious and when we do it, it will be out of date very quickly.\nI also don't want to be updating these guides whenever one of these providers update their login screens.\nDo you feel like\n\nThis is a regular GitHub account\n\n\nDidn't give across the idea that it was a non-org account? There are not GitHub bot accounts, only organizations and users.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/danger/danger/issues/696#issuecomment-271038124), or mute the thread (https://github.com/notifications/unsubscribe-auth/ACALxjs00UIkRe8inJJyoxE81l2GjUW1ks5rPs4cgaJpZM4LdMde).\n\n. @olbrichj Are you still facing this issue?. So we can close this? @orta?. I started looking into implementing danger pr for bitbucket today. Not able to figure out how to go about it.. Created a PR for this fix #796 . Here. Took a shot. https://github.com/danger/danger/pull/785. It works now in 5.0.2. Just tested. \ud83d\udc4d . @orta I added a test case and CHANGELOG.md. Please review.. @orta Fixed!. Awesome. I not sure if I have the skills to contribute in ruby, but definitely going to try and contribute.. @orta found a issue where it's always using ssl while making http call. refer: bitbucket_server_api.rb. Will create another PR to fix this. Hopefully we can have another release with this fix.. @DangerCI running @danger-systems on @danger-systems repo. \ud83d\udcaf . Added change log\n. Looks like this line has wrong syntax. I copied the same line in my Dangerfile and got error. Changed it to has_jira = github.pr_body.include? \"jira\" and it worked.. The examples on the website are really nice to start with but I think there is much more someone can do with danger. We need to show off that somewhere with examples. For e,.g in the above mentioned presentation file there is a mention of Spell Check Markdown and highlight undocumented methods. It would be nice to show an example of how to achieve that rule.. That's fine. I will close the issue now. Thanks. . It's not giving any error while running danger now but I don't think command is actually working. \nI tried \nsystem(\"cd test\")\nsystem(\"pwd\")\nIt doesn't print anything in the console. It should print the current folder path.. Same here. It works for system(\"echo HERE!\") and system(\"pwd\") but not for system(\"cd Documentation\"). \n. Wow! That works! \ud83d\udc4d \nDoes that mean when we do only system(\"cd Documentation\"), it's not switching to the Documentation folder or does that mean that it's switching to Documentation folder but the subsequent system(\"pwd\") doesn't work because of the subshell thing?. Closing this issue now.. Can someone point me in the right direction on how to implement this the right way?. Thanks. Appreciate your help. . Currently I am not getting enough time to work on this. You can close it. . Thanks. I hope I can work on it in near future. . Having the same issue. Any solutions?. Update: The reason for the error I was getting was that I had invalid credentials setup for bitbucket server. After putting in correct credentials, it's working for me now.. Getting an error if I use the following code:\ncontains_commented_code = git.diff\nmessage \"diff\" + contains_commented_code\nError: \nundefined method `diff' for #<Danger::Dangerfile:0x007f90c20a4358>. Updating the Danger gem might fix the issue. Your Danger version: 5.2.0, latest Danger version: 5.3.4. Could give more details about how to add logs and debugging? Not much familiar with Ruby.. sorry but what kind of more information you need? git.diff is a pretty simple statement. I am not sure how can debug more.. I don't think git.diff will work for me. I don't understand why. However I am trying a different approach.\nfor file in git.modified_files\n  message file\n  diff = git.diff_for_file(file)\n  if diff && diff.patch =~ \"//\"\n    warn 'Contains commented code.'\n  end\nend. however git.diff_for_files(file) is not working because file is a string and diff_for_file is expecting a File.. @orta If you want I can create a PR for this.. Awesome! I have already started working on it. Will let you know if I have any question.. Not able to get the PR id from appcenter environment variables. Contacted their team about it. They don't expose that variable. . Would be great if @orta you could help me with getting the PR id using Github api. Not able to figure out how to do that.. I found the issue. I have a closed source project and didn't invite bot as a collaborator to the repo.. @orta Did you publish the docker image to the hub?. I will make the change once you push it here: https://hub.docker.com/u/dangersystems. Updated.. as mentioned in the Getting started guide I am using the duck8823/actions/danger docker image.\n. @orta I have this Docker image which can be used for loading plugins and running danger in github actions. Feel free to use it in your guides.. I am still testing this setup. Will let you know once everything seems to be working. Right now I am getting error when running danger in docker. . I am not too familiar with docker so its taking some time. Let me know if you can help. . @orta opened a pr for this.. Still working on it.\nSeems like Appcenter environment variables doesn't have any reference to pull request id. \ud83e\udd37\u200d\u2642\ufe0f\nDo you know any way to get it?. These are all the environment variables in Appcenter system\nISROOT\nSYSTEM_TEAMFOUNDATIONCOLLECTIONURI\nBUILD_SOURCEBRANCH\nSYSTEM_TASKDEFINITIONSURI\nAGENT_VERSION\nSYSTEM_JOBATTEMPT\nDANGER_GITHUB_API_TOKEN\nBUILD_QUEUEDBY\nSYSTEM_COLLECTIONURI\nSYSTEM_HOSTTYPE\nSYSTEM_JOBPARALLELISMTAG\nBUILD_REPOSITORY_GIT_SUBMODULECHECKOUT\nANDROID_HOME\nNVM_CD_FLAGS\nMD_APPLE_SDK_ROOT\nRUNTESTS\nSHELL\nMOBILECENTER_SOURCE_DIRECTORY\nBUILD_STAGINGDIRECTORY\nAGENT_MACHINENAME\nTMPDIR\nMODULENAME\nAPPCENTER_BRANCH\nPR_CHECK_ID\nSYSTEM_WORKFOLDER\nCOMMON_TESTRESULTSDIRECTORY\nAPPCENTER_ANDROID_MODULE\nApple_PubSub_Socket_Render\nAGENT_JOBNAME\nBUILDVARIANT\nMSDEPLOY_HTTP_USER_AGENT\nJAVA_HOME_8_X64\nXCODE_9_DEVELOPER_DIR\nRCT_NO_LAUNCH_PACKAGER\nAGENT_OSARCHITECTURE\nBUILD_REQUESTEDFOREMAIL\nNUNIT_BASE_PATH\nAGENT_ACCEPTTEEEULA\nNUNIT3_PATH\nLC_ALL\nSYSTEM_CULTURE\nAPPCENTER_ANDROID_VARIANT\nSYSTEM_DEFINITIONNAME\nINPUT_ARGS\nJAVA_HOME_11_X64\nBUILD_REPOSITORY_PROVIDER\nBUILD_REPOSITORY_CLEAN\nBUILD_SOURCEBRANCHNAME\nAGENT_TEMPDIRECTORY\nUSER\nNVM_DIR\nSYSTEM_JOBIDENTIFIER\nXCODE_10_DEVELOPER_DIR\nSYSTEM_TEAMFOUNDATIONSERVERURI\nTF_BUILD\nSYSTEM_TASKDISPLAYNAME\nAZURE_HTTP_USER_AGENT\nBUILD_QUEUEDBYID\nAPPCENTER_OUTPUT_DIRECTORY\nSSH_AUTH_SOCK\nVSTS_PROCESS_LOOKUP_ID\nAGENT_ROOTDIRECTORY\nSYSTEM_TEAMPROJECTID\nBUILDSCRIPTS_TOOLSET\n__CF_USER_TEXT_ENCODING\nSYSTEM_TEAMPROJECT\nAGENT_HOMEDIRECTORY\nMOBILECENTER_BUILD_ID\nAGENT_TOOLSDIRECTORY\nBUILD_REPOSITORY_ID\nBUILD_REPOSITORY_LOCALPATH\nSYSTEM_JOBDISPLAYNAME\nagent.jobstatus\nAGENT_BUILDDIRECTORY\nBUILD_REASON\nSYSTEM_PIPELINESTARTTIME\nSYSTEM\nAGENT_OS\nRUNLINT\nBUILD_SOURCESDIRECTORY\nPATH\nSYSTEM_DEBUG\nSYSTEM_ISSCHEDULED\nMOBILECENTER_OUTPUT_DIRECTORY\n_\nMOBILECENTER_BRANCH\nMOBILECENTER_ANDROID_MODULE\nSYSTEM_PULLREQUEST_ISFORK\nBUILD_BUILDURI\nPWD\nCONDA\nSYSTEM_DEFINITIONID\nJAVA_HOME\nJAVA_HOME_7_X64\nMOBILECENTER_TRIGGER\nLANG\nAPPCENTER_BUILD_ID\nSYSTEM_TASKINSTANCENAME\nSYSTEM_PHASEDISPLAYNAME\nBUILD_REPOSITORY_NAME\nSYSTEM_SERVERTYPE\nXPC_FLAGS\nBUILD_REPOSITORY_URI\nBUILD_DEFINITIONNAME\nAGENT_WORKFOLDER\nJAVA_HOME_9_X64\nBUILD_REQUESTEDFOR\nSYSTEM_JOBNAME\nXPC_SERVICE_NAME\nSYSTEM_TIMELINEID\nSYSTEM_ARTIFACTSDIRECTORY\nAGENT_ID\nSHLVL\nHOME\nJAVA_HOME_10_X64\nXCODE_8_DEVELOPER_DIR\nAPPCENTER_TRIGGER\nAGENT_RETAINDEFAULTENCODING\nBUILD_BINARIESDIRECTORY\nBUILD_REQUESTEDFORID\nBUILD_ARTIFACTSTAGINGDIRECTORY\nBUILD_BUILDID\nAUTOMATICSIGNING\nMOBILECENTER_ANDROID_VARIANT\nSYSTEM_TASKINSTANCEID\nSONOMA_TAGS\nLOGNAME\nBUILD_SOURCEVERSION\nLC_CTYPE\nUSER-DEFINED_DANGER_GITHUB_API_TOKEN\nPKG_CONFIG_PATH\nSYSTEM_DEFAULTWORKINGDIRECTORY\nSYSTEM_JOBID\nANDROID_NDK_HOME\nAGENT_NAME\nBUILD_DEFINITIONVERSION\nSYSTEM_PLANID\nSYSTEM_PHASEID\nTASK_DISPLAYNAME\nSYSTEM_COLLECTIONID\nAGENT_JOBSTATUS\nENDPOINT_URL_SYSTEMVSSCONNECTION\nAPPCENTER_SOURCE_DIRECTORY\nSYSTEM_PHASENAME\nBUILD_BUILDNUMBER\nSECRET_KEYSTOREENCODED\nBUILD_CONTAINERID. PR_CHECK_ID=44920015 while pr url is https://github.com/username/repo/pull/289. It doesn't match.. so we would need to call github's api to get the PR info?. can you point to existing code base (if we have any) which calls github apis?. ",
    "maxfriedrich": "I tried it with #662. Now there is no crash (:tada:), but Danger didn't run on the commit that the CI job was started with but on the newest commit. Jenkins sets the status to green on the first commit and Danger sets it to green on the newer commit. Can I specify which commit Danger should look at?. OK, thanks! I still do need #662 though, I tried it again with the current release and got this:\n+ bundle exec danger --new-comment --head=0b71e64d207768becee06a6619c90e640bc5debd\nfatal: --unshallow on a complete repository does not make sense\nbundler: failed to load command: danger (/Users/jenkins/.rvm/gems/ruby-2.3.1/bin/danger)\nRuntimeError: Commit 3a894fca doesn't exist. Are you running `danger local/pr` against the correct repository? Also this usually happens when you rebase/reset and force-pushed.\n...\n3a894fca is the newer commit again. Should we just git pull again before running Danger for now?. Fixed with #662 \ud83d\udc4d . ",
    "michaelherold": "Hmm, that's interesting. I know that the only thing that was reported by Danger was the \"Big pull request\" message.\nI'll see if I can reproduce the issue on a clean repository and get back to you, I guess!. ",
    "turekj": "Yeah @orta, I will publish a fix shortly :) \ud83d\udc4d . ",
    "SuriyaaKudoIsc": "@hanneskaeufler \ud83d\udc4d Thank you! It works!. @orta \n\n\nI already set up DANGER_GITHUB_API_TOKEN in Travis CI.\nI don't need DANGER_GITHUB_HOST DANGER_GITHUB_API_BASE_URL because I run my repo in github.com.\n\n\n\n. @orta GitHub tokens should be secured if not the token will be displayed in Travis CI log!. > As the getting started guide says, if the bot has no access to anything, then there is nothing to lose\nSo the scope public_repo has no access to anything else?. @orta Thank you for helping me.. ",
    "vincentisambart": "Note that GitHub Enterprise currently does not have an API for reviews, so it's not surprising to get a 404 when trying to access it.\nIf I was using github.review I would indeed be expecting an error, but I'm not and the error seems to be in the initialization code.. Works fine now. Thank you \ud83d\ude04. ",
    "olbrichj": "We actually stopped looking into it.. ",
    "lukaskukacka": "For anyone interested, I got danger (5.8.2) working locally (for testing purposes) with Bitbucket Server as follows:\nDANGER_BITBUCKETSERVER_HOST=\"https://your-bitbucket-server.com\" \\\nDANGER_BITBUCKETSERVER_USERNAME=\"USERNAME\" \\\nDANGER_BITBUCKETSERVER_PASSWORD=\"PASSWORD\" \\\nJENKINS_URL=\"https://your-jenkins.com\" \\\nGIT_URL=ssh://git@your-bitbucket-server.com/project/repo.git \\\nCHANGE_ID=1 \\\nbundle exec danger\nCouple of notes:\n- JENKINS_URL - It can technically be anything. It is just to force Jenkins behavior of Danger\n- GIT_URL - Address of your GIT repo (set by Jenkins by default)\n- CHANGE_ID - ID of the PR\nMake sure your locale is UTF-8 to avoid crashes\nbash\nprintenv LC_ALL\nen_US.UTF-8. I was getting a similar crash running Danger with Bitbucket Server on Jenkins.\nThis topic + the fact it worked fine locally on macOS was a hint is just locale issue.\nSo to get rid of the crash, just:\nexport LC_ALL=\"en_US.UTF-8\"\n\nbefore you call Danger.. ",
    "pschneider": "I can confirm that this also works fine testing on a for Self-Hosted GitLab environment if you use the GITLAB_ environment variables for host, base url and access token. \n\nFor anyone interested, I got danger (5.8.2) working locally (for testing purposes) with Bitbucket Server as follows:\nDANGER_BITBUCKETSERVER_HOST=\"https://your-bitbucket-server.com\" \\\nDANGER_BITBUCKETSERVER_USERNAME=\"USERNAME\" \\\nDANGER_BITBUCKETSERVER_PASSWORD=\"PASSWORD\" \\\nJENKINS_URL=\"https://your-jenkins.com\" \\\nGIT_URL=ssh://git@your-bitbucket-server.com/project/repo.git \\\nCHANGE_ID=1 \\\nbundle exec danger\nCouple of notes:\n\nJENKINS_URL - It can technically be anything. It is just to force Jenkins behavior of Danger\nGIT_URL - Address of your GIT repo (set by Jenkins by default)\nCHANGE_ID - ID of the PR\n\nMake sure your locale is UTF-8 to avoid crashes\nshell\nprintenv LC_ALL\nen_US.UTF-8\n. \n",
    "php-coder": "Looks like danger looking for commits with the format Merge pull request #xxx from. This is probably why it doesn't work for me because I'm not merging in this way.\nNow my question is: does it work with repos with flat commits history? If not, then this should be documented.. > Yeah, this is why we've been recommending people use danger pr which is a lot more polished\nWhere do you recommend it? I follow getting started guide and run danger init that suggested to me to use danger local. Could you update this message then?. I would better to rely on you :). Could you update the documentation (http://danger.systems/reference.html) and clarify this moment?. And we can't use secure environment variables? Is it because they aren't available for pull requests?. Yes, it's frustrating :-( Unfortunately I had a dig into the Rube code because there is no other way to understand what's going on.. ~After removing a comment in PR, danger doesn't put it back :-(~ Aha, it re-creates a comment after I remove it manually.. But why it fetches all my tags? Is it really necessary?. Could you improve this message by printing what/why she is doing? Maybe only in verbose mode. Also it's better to hide this git output by default.. > Danger has failed this build. \n\nFound 19 errors.\n\nBehavior behind this message is a bit weird: https://github.com/danger/danger/blob/76ee6308a8920530460e93ffa038eaf748ff1331/lib/danger/request_sources/github/github.rb#L200-L222\nWhen danger fails to update status, she doesn't mention about this fact at all if there are some errors.. This issue is reproduced on one of my PRs and danger doesn't work at all :(. 4.3.2 Should I try 4.3.1?. No, it's definitely not related to a new version because another PR is also running on a new version and doesn't fail with such error.. > Sounds like this is a dupe of #768 then\nDuplicate of itself? :). > No, it's definitely not related to a new version because another PR is also running on a new version and doesn't fail with such error.\nI was wrong, it fails on both of PRs. I'm trying to rollback to 4.3.1. I confirm that rolling back to 4.3.1 is solving this error.. I'm not sure that this issue is the same as #660 because error messages and stack traces are different.. Could it be related to custom git clone depth in TravisCI?\nyaml\ngit:\n  depth: 1. ",
    "johnlinvc": "The CI tests are failing for the reason in #738 .\nI'll rebase again when 738 is merged. . Joined! looking forward to help the community.. ",
    "leonhartX": "yes, so can we have an option to ignore those out-of-diff messages when they are out-of-my-concern too, like i don't want the whole file's lint violations result but only in my changes?. thanks for the advice! i'm not so good at english so it's really helpful.. since this method name is dismiss_out_of_range_messages, i think when someone calls it without any arguments, he will expect this to dismiss messages as the name's meaning.\nhow do you think about this? maybe change to another name is better?. ",
    "zdnk": "Any change? I have this issue too with Jenkins and bitbucket. I have got past that now, I am stuck on:\n\n/Library/Ruby/Gems/2.0.0/gems/danger-5.4.0/lib/danger/scm_source/git_repo.rb:104:in `find_merge_base': Cannot find a merge base between 26f1d51abbf3c41362179254cd7c3e8e37ff752b and 890f88879b43d3e7feba10e7837f796e8fc9fa01. (RuntimeError). I have this issue too with jenkins and Bitbucket.\nThis is our config:\n\nAnd what it does:\n\n. \n",
    "tonyo": "danger local works fine for me when executed against private repos.\n@garnett How do you define your DANGER_GITHUB_API_TOKEN variable? Perhaps you don't export it as an environment variable?\nFor example, export DANGER_GITHUB_API_TOKEN=123 is how it's done in bash.. ",
    "pboling": "What specific permissions should this token have @orta . Is that behavior documented anywhere?  I checked danger local --help and did not see it.. Seems like it worked.  Also not understanding the meaning of the output very well.\n+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|                                                                                    Danger v5.3.4                                                                                     |\n|                                                                                    DSL Attributes                                                                                    |\n+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|    status_report |                                                                                                                                                                   |\n| violation_report |                                                                                                                                                                   |\nDoes blank mean it passed?. Yeah, I would like to!  Will check out the project and see what I can do :). ",
    "sunshinejr": "Huh, that was clean! \ud83d\ude05 Thanks @orta! \ud83d\udcaa. ",
    "barrault01": "I run : bundle exec danger pr https://bitbucket.org/antoinebarrault/project-ios/pull-requests/1 locally and I get : \nbundler: failed to load command: danger (/Users/antoinebarrault/.rbenv/versions/2.3.1/bin/danger)\nOctokit::NotFound: GET https://api.github.com/repos/antoinebarrault/project-ios/pulls/1: 404 - Not Found // See: https://developer.github.com/v3\n. ",
    "leverdeterre": "I' have made some tests.\ngem install bundler\n\nFetching: bundler-1.14.6.gem (100%)\nERROR:  While executing gem ... (Gem::FilePermissionError)\n    You don't have write permissions for the /Library/Ruby/Gems/2.0.0 directory.\n\nthat smell bad ... but why not ?\n\n\nsudo chown -R jeromemorissard /Library/Ruby/Gems/\ngem install bundler\n\nFetching: bundler-1.14.6.gem (100%)\nERROR:  While executing gem ... (Gem::FilePermissionError)\n    You don't have write permissions for the /usr/bin directory.\n\nthat smell very bad ... \n\n\ngem install bundler -n /usr/local/bin\nSuccessfully installed bundler-1.14.6\nParsing documentation for bundler-1.14.6\n1 gem installed\n\n\nOk cool, but after that bundle install keep failing.\n\n\nbundle -v\nBundler version 1.10.6\n/usr/local/bin/bundle -v\nBundler version 1.14.6\nSo I try to install bundle using this specific bin \n/usr/local/bin/bundle install\n\n\nBundle complete! 18 Gemfile dependencies, 70 gems now installed.\nUse bundle show [gemname] to see where a bundled gem is installed.\n\n\nRun the tests (555 exemples, 4 failed)\n/usr/local/bin/bundle exec rake spec\nRandomized with seed 26553\nFinished in 15.71 seconds (files took 1.32 seconds to load)\n555 examples, 4 failures, 2 pending\nFailed examples:\nrspec ./spec/lib/danger/commands/local_spec.rb:11 # Danger::Local prints help danger local -h prints help\nrspec ./spec/lib/danger/commands/local_spec.rb:6 # Danger::Local prints help danger local --help flag prints help\nrspec ./spec/lib/danger/commands/pr_spec.rb:11 # Danger::PR prints help danger pr -h prints help\nrspec ./spec/lib/danger/commands/pr_spec.rb:6 # Danger::PR prints help danger pr --help flag prints help\nRandomized with seed 26553\n. ",
    "kgaidis": "We had this error because there were two branches with the same name: feature/iOS-11 and feature/ios-11 (a mistake). Deleting one of the branches fixed the error. \nThe tricky thing is that PR's unrelated to these branches were failing, so out of nowhere, all PR's were failing. \nCould there be some branch naming collision \"bug\" in Danger? \nRelated: https://stackoverflow.com/a/38494084/826435\nbundler: failed to load command: danger (/Users/behance/.rbenv/versions/2.3.1/bin/danger)\nRuntimeError: Cannot find a merge base between danger_base and danger_head.\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/scm_source/git_repo.rb:104:in `find_merge_base'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/scm_source/git_repo.rb:16:in `diff_for_folder'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/danger_core/dangerfile.rb:259:in `setup_for_running'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/danger_core/dangerfile.rb:269:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/danger_core/executor.rb:27:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/lib/danger/commands/runner.rb:66:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.3.2/bin/danger:5:in `<top (required)>'\n  /Users/behance/.rbenv/versions/2.3.1/bin/danger:22:in `load'\n  /Users/behance/.rbenv/versions/2.3.1/bin/danger:22:in `<top (required)>'\nBuild step 'Execute shell' marked build as failure\n[BFA] Scanning build for known causes...\n[BFA] No failure causes found\n[BFA] Done. 0s. I think I forgot to comment on an update.\nI'm pretty sure that what @rob-keepsafe said worked. We had shallow clone of depth 1, and once it was changed to shallow clone of depth 100 it has worked since. The 100 is just a random number to maximize the chance of this issue not happening. . Having a similar issue that sometimes is there, and sometimes isn't (has been happening on-and-off for the past year or so):\nfatal: Couldn't find remote ref refs/heads/danger_base\nfatal: Couldn't find remote ref refs/heads/danger_head\nfatal: Couldn't find remote ref refs/heads/danger_base\n...\nRuntimeError: Cannot find a merge base between danger_base and danger_head.\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/scm_source/git_repo.rb:128:in `find_merge_base'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/scm_source/git_repo.rb:16:in `diff_for_folder'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/danger_core/dangerfile.rb:261:in `setup_for_running'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/danger_core/dangerfile.rb:271:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/danger_core/executor.rb:28:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/lib/danger/commands/runner.rb:68:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  /Users/behance/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/danger-5.6.2/bin/danger:5:in `<top (required)>'\n  /Users/behance/.rbenv/versions/2.3.1/bin/danger:22:in `load'\n  /Users/behance/.rbenv/versions/2.3.1/bin/danger:22:in `<top (required)>'. Just putting an update for others who may view this in the future.\nMy issue was \"fixed\" by looking into shallow clone: \nhttps://github.com/danger/danger/issues/768#issuecomment-398893158\nWe had shallow clone of depth 1, and once it was changed to shallow clone of depth 100 it has worked since. The 100 is just a random number to maximize the chance of this issue not happening. . ",
    "raymondhoagland": "I'm seeing this as well with Jenkins and Github.  We are doing shallow clones with a depth of 1 and the error appears to be sporadic.\nMost of the time the job works fine, but ~20% it runs into the error.  Usually running the job again seems to fix it which makes it even more confusing for us to track down.\n\nSeems almost like it bails every time fetch has to do either a forced update or gets a new ref.. I'm not sure - the issue only seems to pop up when using a shallow clone with a very specific refspec (it's a huge repo that can't be reasonably fully cloned very often).  It seems like if the refspec doesn't include whatever commit Danger is looking for, it falls back to git_fetch_branch_to_depth as expected but in the process ignores removes anything besides what it's looking for along the way which results in this output.\nI did start seeing failures pop up sporadically around this - my best guess for when/how it happened at the time was that a new commit was added to the base branch at the same time (or thereabouts) that Danger gets the commit from the API.  The Github API, at least the Enterprise version that I'm running on, appears to report the new commit before it's actually available to fetch which means Danger doesn't start out with the commit.   Because the commit isn't available for Danger, it starts trying to perform incremental fetches and ends up removing the danger_head and danger_base branches along the way because of the --prune in the refspec.. I'm actually using danger from fastlane, so I'm a little hesitant to make that switch. Fixed with #967 . @orta not sure I understand why this would make sense as a CLI option.  Is there an expected benefit to using the --all flag?  \nThe current code only handles if there is one response, but asks for multiple.  That seems like a bug that should be addressed for everyone not made optional unless there is a use case where we'd prefer to get multiple responses and fail for some reason.  If that's the case then maybe documentation/comments are needed to explain why that's desired.. ",
    "rob-keepsafe": "Just dropping a breadcrumb: we were doing shallow clones on CI for PR builds and once the # of commits on that PR surpassed that depth, it started failing with this error. ",
    "JoeSSS": "It feels like danger does some black magic to get the base and the HEAD, which is not really compatible to what shallow clone is about. What helped to me is adding master additionally to refspec: +refs/pull/${ghprbPullId}/merge:refs/remotes/origin/pr/${ghprbPullId}/merge +refs/heads/master:refs/remotes/origin/master and then defining base and the head on my own while calling danger like: danger --head=\\$(git rev-parse HEAD) --base=\\$(git rev-parse origin/master) ..... It feels like danger does some black magic to get the base and the HEAD, which is not really compatible to what shallow clone is about. What helped to me is adding master additionally to refspec: +refs/pull/${ghprbPullId}/merge:refs/remotes/origin/pr/${ghprbPullId}/merge +refs/heads/master:refs/remotes/origin/master and then defining base and the head on my own while calling danger like: danger --head=\\$(git rev-parse HEAD) --base=\\$(git rev-parse origin/master) ..... What I\u2019m trying to solve is the problem with the spam in PRs, as we have several jobs responding to the PR via Danger after every commit. We tried to use standard flags but it didn\u2019t work as the PRs can be quite long or maybe people are just too lazy to look through whole PR searching Danger output. So, everything works fine using \u2018\u2014new-comment\u2019 but it is spammy. \nTrue, emails are annoying, but we deal with the environment where developers most likely disabled all the emails from git, as we are ~30 devs developing on a daily basis. Would be really nice to reduce the noise at least on the GitHub level.. @orta I tested the new flag on GitHub and it works as expected with all combinations of flags. \nI couldn't test other services, but it looks safe: https://github.com/danger/danger/pull/949/commits/48e0b3d0d4ab9867e7f6a794c9cabab72246a4e6 (I feel a bit uncomfortable with this commit, as I'm not sure that post_results method for all the services is called only from here: https://github.com/danger/danger/pull/949/files#diff-ca185af64c4a32761b631ddaff2c6cfeR245. Thanks for fast reviews \ud83d\udc4d . the problem must be here: https://github.com/JoeSSS/danger/blob/3bda96eb104a50f0f255ba6b1a66b07d788162f6/lib/danger/request_sources/gitlab.rb#L131\nthe logic should be decoupled from comment posting. . @znacloud can you please create a PR with your changes? :). ",
    "litmon": "It error caused me too.\nI tried to find the cause, but I could not found because of no more information.\nI want to be able to see the error detail, and also I want to not fail to the CI job.\nI propose the solution, the code will change like below. How about this? @orta\ndiff\nif matching_comments.empty?\n- client.create_pull_request_comment(ci_source.repo_slug, ci_source.pull_request_id, \n-     body, head_ref, m.file, position)\n+ begin\n+   client.create_pull_request_comment(ci_source.repo_slug, ci_source.pull_request_id,\n+       body, head_ref, m.file, position)\n+ rescue Octokit::UnprocessableEntity => e\n+   // TODO show some error detail. ex. body, file, head_ref, and position\n+   // sorry I don't know how to ouput logs in Danger project...\n+\n+   next false // next false(=not reject) because this comment has not completed\n+ end\nelse\n  # Remove the surviving comment so we don't strike it out\n. Thanks\ud83d\ude04 I will make the Pull Request.. Yes, run danger after some commits pushed, duplicated comments happen every time.\nit is happend when head_ref changed.\n. I tried a patch like below, the bug fixed.\n```\n--- a/lib/danger/request_sources/github/github.rb\n+++ b/lib/danger/request_sources/github/github.rb\n@@ -312,13 +312,14 @@ module Danger\n           end\n       matching_comments = danger_comments.select do |comment_data|\n\n\nif comment_data[\"path\"] == m.file && comment_data[\"commit_id\"] == head_ref && comment_data[\"position\"] == position\nif comment_data[\"path\"] == m.file && comment_data[\"position\"] == position\n               # Parse it to avoid problems with strikethrough\n               violation = violations_from_table(comment_data[\"body\"]).first\n               if violation\n                 messages_are_equivalent(violation, m)\n               else\ncomment_data[\"body\"] == body\nblob_regexp = %r{blob/[0-9a-z]+/}\ncomment_data[\"body\"].sub(blob_regexp, \"\") == body.sub(blob_regexp, \"\")\n               end\n             else\n               false\n``. FIrst, I tried to remove&& comment_data[\"commit_id\"] == head_refbecause duplicated comment is happened when head_ref is changed.\nBut it is not succeeded because of comparingcomment_data[\"body\"]andbodyis failed, why the difference between these is just commit hash inblob_regexp.. Thanks! I'm looking forward to next release.. @ortabundle exec rubocop lib` has failed due to below. Should I fix this?\n\n```\nOffenses:\nlib/danger/commands/init.rb:185:21: C: Prefer using YAML.safe_load over YAML.load.\n      config = YAML.load(File.read(\".travis.yml\"))\n                    ^^^^\nlib/danger/commands/init.rb:198:21: C: Prefer using YAML.safe_load over YAML.load.\n      config = YAML.load(File.read(\"circle.yml\"))\n                    ^^^^\n```. ",
    "diogot": "Thanks, let me know if there is something that I can do.. Great, thanks!. ",
    "giginet": "\nWould you like to join the danger organization? \n\nI'm interested in. But I have no experience using danger \ud83d\ude1b.\nWhen I use it more, I'll help you.. I found the issue about this feature.\nI'll fix and add test in another PR.\nPlease do not release until that. \ud83d\ude47 . Awesome!!!!. I personally prefer to declare this to let scope.\nBacause, when specs are added, we can reuse it.. You can disable dismiss_out_of_range_messages.\nruby\ndismiss_out_of_range_messages(false). ",
    "fmartingr": "Thank you @orta, I'm learning Ruby atm and was in the process of looking for an open source project to contribute to ^_^. @orta I'm currently setting up some agents at work so I can check out changes between updates, though the documentation is not 100% helpful, the people on the gitter channel are very supportive. Will keep an eye on the issues in case something comes biting.. @k0nserv Good approach, thank you for this.. ",
    "allewun": "Thanks for the amazingly quick turnaround @orta!. Not sure why tests are failing :(. @orta what triggers the website to fetch documentation updates? . @orta looks like I need an approval to merge. And you can update this guy too:\n\n. @tomburns would you be able to share a snippet of the JSON that danger is attempting to parse?\nIf your repo is public (e.g.):\n$ curl https://circleci.com/api/v1/project/artsy/eigen/5234\nIf it's private, you have to add an API key to the request (?circle-token=xxxxx). I unified these variables. The docs only mention DANGER_CIRCLE_CI_API_TOKEN, so I'm guessing the other one is there for compatibility. I hope it's fine to remove support for that.. Older versions of Danger have CircleCI API failures anyway, so I don't think this will unexpectedly break anyone's config.. ",
    "mlammers": "@orta Thanks for the quick fix!. ",
    "mrh-is": "Cool, thanks! \ud83d\udc4f . ",
    "mihai8804858": "@RishabhTayal Have you tried system(\"cd test\")? I'm using it in Dangerfile to run a gem.. Ok. I tried running this in my Dangerfile:\nsystem(\"echo HERE!!!\")\nsystem(\"cd Documentation\")\nsystem(\"pwd\")\nand it printed\nHERE!!!\n/Users/mseremet/Desktop/\nIt printed the message and current directory path, but looks like it didn't change the path to Documentation folder.. We finally configured danger to run on our Jenkins. The problem was that \"ghprbPullId\" environment variable was not exported. I saw that this variable is exported automatically by GitHub pull request builder plugin, but we're not using this plugin because it's not compatible with our job's configuration, so we manually export this environment before running danger. And it works!\nThank you @orta and @nikolaykasyanov for your help.\n@4oby I think we can close this PR.. @orta Yes, I'll take a took over this.. Investigated this a bit. Looks like danger uses DANGER_GITHUB_API_TOKEN when downloading Dangerfile from private repo. I got 404 - Not found because token's user didn't had access to the repo. After opening access I'm able to download Dangerfile from private repo.. ",
    "vassilevsky": "Hi \ud83d\udc7b I wrote this tool a while back to post inline comments to Stash:\nhttps://github.com/vassilevsky/face_control\nYou can use my code if you want.\nI can also answer questions maybe, though I might not remember something already.. ",
    "netbe": "@RishabhTayal need any help on this? We're integrating danger with BBS and that feature would be great.\nalso looking for approvals like in https://wiki.jenkins-ci.org/display/JENKINS/Bitbucket+Approve+Plugin, @orta does Danger already support this?. Here's the body of the comment that fails:\n\"All green. Well done.\\n\\n| | 1 Message |\\n|---|---|\\n| \\xE2\\x9C\\xA8 | Hello, this worked |\\n\\n\\n\\nGenerated by [Danger](https://danger.systems/ \\\"generated_by_danger\\\")\\n\". @sleekybadger  thx, it does not crash anymore and publish to bitbucket.\nHowever as you can see below, some characters are not posted correctly, not sure where the encoding should be modify to have the proper effect:\n\n. @sleekybadger it seems fine:\nirb(main):001:0> __ENCODING__.to_s\n=> \"UTF-8\"\nirb(main):002:0>\nUsing ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin14] with rbenv. @sleekybadger that looks better:\n\n. @sleekybadger  Ok I got a new error in update_pull_request:\nEncoding::CompatibilityError: incompatible character encodings: UTF-8 and US-ASCII\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/lib/danger/request_sources/bitbucket_server.rb:78:in `update_pull_request!'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/lib/danger/danger_core/dangerfile.rb:247:in `post_results'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/lib/danger/danger_core/dangerfile.rb:280:in `run'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/lib/danger/danger_core/executor.rb:27:in `run'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/lib/danger/commands/runner.rb:66:in `run'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/claide-1.0.1/lib/claide/command.rb:334:in `run'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bundler/gems/danger-12e049770916/bin/danger:5:in `<top (required)>'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bin/danger:23:in `load'\n  /Users/jenkins/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/bin/danger:23:in `<top (required)>'. @orta not sure what you mean by that:\n\ninvestigating this from the swift format side.\n\nAs stated I do get violations via swiftlint directly.. Ok got it, the violations were not part of the git diff hence no comments on the PR.\n. ",
    "4oby": "It works, but does not post, danger pr is easier, IMO, to hook into our current Jenkins setup.. Jenkins is setup to run on a detached head, so any attempts to run danger ends in \"not a pr\" message.. ",
    "costincalugaru": "So how would you go about implementing the exclusion of certain file paths from lines_of_code?. ",
    "jlubeck": "Isn't the ci_source for a CI server? We are using Bitrise for that. But the git repo and ticket system is on Assembla. So I was hoping for danger to post comments in there! \nThanks!. Awesome!\nThanks!. ",
    "ghost": "Had a look into this this morning. It was pretty straight forward to get what we needed working. This meets our needs, however, the ability to update the end of the PR might still be useful to others, so I'm happy to leave this open. \nIf anyone cares, it's as easy as:\ngithub.api.update_pull_request(\n    github.pr_json.base.repo.full_name,\n    github.pr_json.number,\n    {:body => github.pr_body + \"Some new text\"}\n).\n",
    "daveallie": "I'd be interested in taking this on, I think we could definitely use some kind of boundary in the document so that others editing the description don't have their content wiped by Danger. A possible solution would be to use HTML comments (which aren't rendered into the markdown) to outline a 'dangerzone'.\n<!-- DANGERSTART -->\nDanger Report:\n...\n<!-- DANGEREND -->\nNot 100% sure how this will work on other VCS providers. \nIn my experience, some PRs can get large and as a result, Danger comments can get lost. Putting them in the description would make it any kind of outstanding violations immediately obvious.\nI wrote a bot at my workplace that modifies github PR descriptions and one thing I have noticed is that things become a bit messy if you're editing the description when the bot makes changes. When you go to save your changes, github errors out and will force you to reload (losing all of your changes). Given that, I think this should definitely be an opt-in flag and not something we force upon new/existing users.\nE: Just read into https://github.com/artsy/emission/pull/558, and using a data attribute is another good way.. Hmmm, those rubocop violations seem to all be from the 0.50 upgrade? Did you guys recently do that update?. Yeah had me stumped for a while, danger was just crashing without a comment and complained about basename not being a method on a string, but basename wasn't even being used in the Dangerfile \ud83d\ude16 . ",
    "tamasprezi": "Hmm I see, so what exactly should be set in the environment for danger to recognize a PR? I'm getting Not a Pull Request - skipping ``danger`` run messages on Jenkins, even though the build was triggered by a GitHub PR webhook.. Awesome, thanks for pointing it out, for some reason the ghprbPullId was missing from the env vars, added it and now it works like a charm!. ",
    "nikhilsh": "I've already tried setting faraday to 0.12.1 but it didn't seem to help. @orta Does this look like a possible reason as to why no_proxy is not being respected now? https://github.com/lostisland/faraday/issues/701. Basically calling Faraday.get without first initialising the connection. If so, this should be fixed in 0.12.2. Hi @orta, I've looked into faraday 0.12.2 which supposedly would have fixed the no_proxy issue, but seems like we're getting two other issues, that I've figured out locally, but would love your opinion before submitting a PR.\nThe first error is: \n'connect_nonblock': SSL_connect returned=1 errno=0 state=error: certificate verify failed (Faraday::SSLError)\nThis fails as our GitHub Enterprise has a self-signed SSL cert and hence the verification fails when dealing with Octokit. I've managed to get bundle exec danger pr to work by adding a flag --verify-ssl flag and within pr.rb, I've modified the code as such:\nruby\ndef configure_octokit(cache_dir)\n  # setup caching for Github calls to hitting the API rate limit too quickly\n  cache_file = File.join(cache_dir, \"danger_local_cache\")\n  cache = HTTPCache.new(cache_file, clear_cache: @clear_http_cache)\n  p @verify_ssl\n  Octokit.configure do |config|\n    config.connection_options[:ssl] = { :verify => @verify_ssl }\n  end\n  Octokit.middleware = Faraday::RackBuilder.new do |builder|\n    builder.use Faraday::HttpCache, store: cache, serializer: Marshal, shared_cache: false\n    builder.use Octokit::Response::RaiseError\n    builder.adapter Faraday.default_adapter\n  end\nend\nThis works in solving the SSL issue, but I'm not too sure if this is the only/best place to set this. Would love your advice on this.\nThe second issue seems to be https://github.com/bundler/bundler/issues/5300, and the fix for that is by installing a temporary gem: http://ermaker.github.io/blog/2017/02/06/proxy-error-on-ruby-2.4.0.html. This error happens when a no_proxy variable is set on Ruby version 2.4.0/2.4.1. I could submit another PR for that but not too sure if you would like to install that gem. \nThank you!. Fixed in #880. Closing this issue. Thanks @orta! . ",
    "atelic": "I just went through setting up Danger with TeamCity and was able to do the following for pull requests:\nbranch=\"%teamcity.build.branch%\"\nGITHUB_PULL_REQUEST_ID=(${branch//\\// }). @orta You might be able to ask users to add the following to their Simple Command Runner:\nbash\nexport TEAMCITY_BRANCH=\"%teamcity.build.branch%\"\nthen in Danger\nruby\nbranch_name = ENV[\"TEAMCITY_BRANCH\"]\nGITHUB_PULL_REQUEST_ID = branch.split('/')[0]\nI don't believe that %teamcity.build.branch% is available in ENV without exporting it though. ",
    "almozavr": "@orta I've created the very new MR, so not sure this is the case. What you say is Danger uses Gitlab's API to figure out commits history for particular MR, right? No git manipulation?. @orta you're right. So I've checked Gitlab API call and found the problem... Since gitlab api v4 every request is paginated and default per_page is 20 and guess what? The problematic MR has >20 commits (so base_commit is not actually what it is). \nIt seems like auto_paginate option doesn't work well at gitlab-gem or danger-gem level. \nauto-paginate is used here: https://github.com/danger/danger/blob/master/lib/danger/request_sources/gitlab.rb#L99\n. The interesting thing is: my config is pointing to gitlab api v3 and despite docs Gitlab gem seems to still support it. In terms of Gitlab's merge_request_commitsapi call, v3 and v4 differ with the MR argument (id for v3 and iid for v4). The question is: does Danger provide id or iid for it? It hides beneath ci_source argument\nP.S. I've checked auto_paginate on Gitlab gem with my MR and it's totally OK.. OK, so it seems like Danger relies on MR's id (not iid) param: https://github.com/danger/danger/blob/master/lib/danger/ci_source/jenkins.rb#L85\nSo it means Gitlab API v3 is the right way to go and commits request page size is not the case anyway. So, the problem is elsewhere -> maybe, in the way system creates log for list of commits for MR (gosh). @sleekybadger \nruby\n13:23:04 /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/request_sources/gitlab.rb:64:in `base_commit': undefined method `last' for nil:NilClass (NoMethodError)\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/request_sources/gitlab.rb:92:in `setup_danger_branches'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/danger_core/environment_manager.rb:57:in `ensure_danger_branches_are_setup'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/danger_core/dangerfile.rb:258:in `setup_for_running'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/danger_core/dangerfile.rb:269:in `run'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/danger_core/executor.rb:27:in `run'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/lib/danger/commands/runner.rb:66:in `run'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bundler/gems/danger-e9427ddbd309/bin/danger:5:in `<top (required)>'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bin/danger:23:in `load'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bin/danger:23:in `<main>'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bin/ruby_executable_hooks:15:in `eval'\n13:23:04    from /opt/rvm/gems/ruby-2.3.1/bin/ruby_executable_hooks:15:in `<main>'. @sleekybadger yeap, already did -> v3 api returns all commits at once (seems like no per_page is needed). So my bet, there was something wrong with this request and it has failed, so default git.log param was used (which is master). If it's so, there is no more such issue but a point of improvement (e.g. to throw exception and not to use default params). @sleekybadger there were commits, which targetBranch has already contained -> so I suppose it was Gitlab API problem. Seems like we can close this issue, as I can't reproduce the problem and don't see possible root cause.. Thanks everyone for assistance, anyway \ud83d\udc4d . Firstly, use proper ids (iids?) from gitlab for MRs.\nFull docs here: https://docs.gitlab.com/ce/api/v3_to_v4.html. ",
    "nikhilmat": "@orta updated the changelog entry - thanks for the quick approval!. Quoting fixed!. Woops - for sure. ",
    "WiesnerPeti": "@sleekybadger Thank you for the quick answer and the great suggestion! :). ",
    "NeQuissimus": "We did something like this in a Jenkinsfile:\nwithEnv([\n        \"DANGER_GITHUB_HOST='https://github.company.com'\",\n        \"DANGER_GITHUB_API_BASE_URL='https://github.company.com/api/v3/'\"\n      ]) {\n        sh \"bundle exec danger\"\n      }\nIf you single-tick the ENV values, things don't work. It needs to look like this instead:\nwithEnv([\n        \"DANGER_GITHUB_HOST=https://github.company.com\",\n        \"DANGER_GITHUB_API_BASE_URL=https://github.company.com/api/v3/\"\n      ]) {\n        sh \"bundle exec danger\"\n      }\n. ",
    "Dimdron": "Great! For me, it works fine.. @sleekybadger I tested it on Jenkins.. ",
    "glensc": "also i do not understand how to use danger-ci with gitlab.\njust following the instructions, i get:\n1. from terminal\n\u2794 bundle exec danger --verbose\nCould not find the type of CI for Danger to run on.\n2. from ci:\n$ bundle exec danger --verbose\nNot a Pull Request - skipping `danger` run\nThen there's this PR comment https://github.com/danger/danger/pull/861#issuecomment-317365766 linking to https://gitlab.com/gitlab-org/gitlab-ce/issues/15280\nfrom there i see there's workaround:\n```\nexport PR_BRANCH=$(curl -s \"http://domain/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.source_branch\")\nexport PR_ID=$(curl -s \"http://domain/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\n```\nhowever none of that helps, i verified that those vars get proper value, yet danger doesn't check those variables (PR_BRANCH, PR_ID), i grepped sourcecode.. but there's still no doc what the other env vars are, and looks like that DANGER_GITLAB_HOST needs to be a hostname matching git remote, so current the definition \"host that gitlab is running on\" is rather vague.\n\nmy gitlab is running i host named soa.example.net\nmy gitlab web url is https://gitlab.test.example.net\nmy gitlab git clone url is git@gitlab.example.lan:glen/danger.git\n\nwhat do i assign to DANGER_GITLAB_HOST value?. tried with #861 gemfile patch applied. my DANGER_GITLAB_API_TOKEN is definately set, it's visible in prior env command.\n```\n$ bundle exec danger --verbose\nCould not set up API to Code Review site for Danger\nFor Danger to run on this project, you need to expose a set of following the ENV vars:\n - GitHub: DANGER_GITHUB_API_TOKEN\n - GitLab: DANGER_GITLAB_API_TOKEN\n - BitbucketServer: DANGER_BITBUCKETSERVER_USERNAME, DANGER_BITBUCKETSERVER_PASSWORD, DANGER_BITBUCKETSERVER_HOST\n - BitbucketCloud: DANGER_BITBUCKETCLOUD_USERNAME, DANGER_BITBUCKETCLOUD_PASSWORD\n```\ni need updated gitlab gem too?\n\u2794 bundle exec gem list|grep dange\ndanger (5.3.3)\ndanger-gitlab (5.0.1)\nbut danger-gitlab-gem has no git tags published:\nhttps://github.com/danger/danger-gitlab-gem/releases. \neven with seemingly versions you say that work, it does not\nUsing danger 5.3.3 from git://github.com/sleekybadger/danger.git (at feature/gitlab-api-v4@2e122d5)\nUsing danger-gitlab 5.0.2 (was 5.0.1) from git://github.com/danger/danger-gitlab-gem.git (at 8bff3e6@8bff3e6)\nall three required vars are also present:\nDANGER_GITLAB_API_BASE_URL=https://gitlab.test.example.net/api/v3\nDANGER_GITLAB_API_TOKEN=XXX\nDANGER_GITLAB_HOST=https://gitlab.test.example.net\n. as for the examples not showing up on webpage, i think the page renderer is broken, because the examples are present in source file:\n\nwebpage\nsource\n\ni used github example (it's broken as well) because the javascript that shows/hides ci specific blocks does not support auto expand based on anchor from url.\ni think the javascript \"smart code\" should be just removed, it's not worth it if it's so half-baked. just show all content on page.. btw, why set gitlab related variables manually? for example there exists CI_REPOSITORY_URL and CI_PROJECT_URL\nhttps://docs.gitlab.com/ce/ci/variables/. all there: #1089 . alright, thanks for making immediate release, so i don't have to hack with git installation!. ",
    "viezel": "@glensc I might be able to help out. I agree, the docs are quite vague.\nhere is my setup:\n```yml\nstages:\n  - test\n  - review\nvariables:\n  DANGER_GITLAB_API_TOKEN: \"XXXXXXXX\"\n  DANGER_GITLAB_HOST: \"git.example.com\"\n  DANGER_GITLAB_API_BASE_URL: \"https://git.example.com/api/v4\"\nbefore_script:\n  - export PULL_REQUEST_ID=$(git ls-remote -q origin merge-requests*\\head | grep $CI_COMMIT_SHA | sed 's/.refs\\/merge-requests\\/([0-9])\\/head/\\1/g')\n  - export PR_BRANCH=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.source_branch\")\n  - export PR_ID=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\n  - export CI_MERGE_REQUEST_ID=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\ntest-sim:\n  stage: test\n  script:\n    - pod install\n    - xcodebuild clean -workspace MyApp.xcworkspace -scheme MyApp\n    - xcodebuild test -workspace MyApp.xcworkspace -scheme MyApp -destination 'platform=iOS Simulator,name=iPhone 7,OS=10.3.1' \n  tags:\n    - ios\ndanger:\n  stage: review\n  script:\n    - bundle install\n    - bundle exec danger --verbose\n  tags:\n    - ios\n```\nI get:\n$ bundle exec danger --verbose\nNot a Pull Request - skipping `danger` run\nJob succeeded\nI dont have it working fully working, but at least I think im connected to my self hosted GitLab. . @Jeroenbb94 youre right. Its actually not working :( \nLets hope this new version will solve it. . @orta You should be able to run and test it out using the free gitlab.com account. They have free shared docker based runners for its CI. . @Jeroenbb94 thats great news.\nHow does your gitlab-ci.yml file look like? \nwith varialbes, exports etc ?. @Jeroenbb94 I got it working too. I had to change the dangerbot user to reporter. ",
    "Jeroenbb94": "At moment I have the same issue that danger is not finding my merge request a.k.a. pull request.\n@viezel When I try your \"exports\" I'm receiving the following response:\n$ export PULL_REQUEST_ID=$(git ls-remote -q origin merge-requests\\*\\head | grep $CI_COMMIT_SHA | sed 's/.*refs\\/merge-requests\\/\\([0-9]*\\)\\/head/\\1/g')\n$ export PR_BRANCH=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.source_branch\")\njq: error (at <stdin>:0): Cannot index string with string \"sha\"\n$ export PR_ID=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\njq: error (at <stdin>:0): Cannot index string with string \"sha\"\n$ export CI_MERGE_REQUEST_ID=$(curl -s \"https://git.example.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened\" | jq -r \".[]|select(.sha == \\\"$CI_COMMIT_SHA\\\")|.iid\")\njq: error (at <stdin>:0): Cannot index string with string \"sha\"\n$ bundle exec danger\nNot a Pull Request - skipping `danger` run\nJob succeeded\n. I'm using danger 5.3.4 that was released 2 days ago and danger-gitlab 6.0.0.\nI've tried both gem 'danger' and gem 'danger-gitlab'. Both gave the same response \"Not a Pull Request - skipping danger run while there is a merge request.\nP.S. I've also tried the information that is provided in the PR https://github.com/danger/danger/pull/861, still no luck.. @orta Thanks for your response, I'll add some debugging logs tomorrow :). During debugging in gitlab_ci.rb I noticed that I had a CI_PULL_REQUEST_ID that matches my merge Request id from gitlab, thanks to the export CI_PULL_REQUEST_ID. But the CI_MERGE_REQUEST_ID was empty.\nWhen I added:\n- export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\\*\\head | grep $CI_COMMIT_SHA | sed 's/.*refs\\/merge-requests\\/\\([0-9]*\\)\\/head/\\1/g')\nThe danger runned successfully. \nP.S. This is the only export I'm using, I've removed the previous ones. @viezel Like this:\n```ruby\nstages:\n  - review\nvariables:\n  DANGER_GITLAB_API_TOKEN: \"XXXXXXXX\"\n  DANGER_GITLAB_HOST: \"git.example.com\"\n  DANGER_GITLAB_API_BASE_URL: \"https://git.example.com/api/v4\"\ndanger:\n  stage: review\n  before_script:\n    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests*\\head | grep $CI_COMMIT_SHA | sed 's/.refs\\/merge-requests\\/([0-9])\\/head/\\1/g')\n    - bundle install\n  script:\n    - bundle exec danger --verbose\n```. Version 5.3.4, fun fact: When I remove the export line, danger seems to work. I'm guessing it's a cache thing.\nThese are the versions I use:\nInstalling public_suffix 2.0.5\nInstalling claide 1.0.2\nInstalling colored2 3.1.2\nInstalling nap 1.1.0\nInstalling open4 1.3.4\nInstalling multipart-post 2.0.0\nInstalling git 1.3.0\nInstalling kramdown 1.14.0\nInstalling unicode-display_width 1.3.0\nInstalling multi_xml 0.6.0\nUsing bundler 1.14.6\nInstalling addressable 2.5.1\nInstalling cork 0.3.0\nInstalling faraday 0.12.2\nInstalling terminal-table 1.8.0\nInstalling httparty 0.15.6\nInstalling claide-plugins 0.9.2\nInstalling faraday-http-cache 1.3.1\nInstalling sawyer 0.8.1\nInstalling gitlab 4.2.0\nInstalling octokit 4.7.0\nUsing danger 5.3.4. ",
    "dsexton": "We submit merge requests from forked repositories, and in this case the project ID is that of our fork, and not of the main repository. This results in an empty list of merge requests when querying the project API. There are several issues on the gitlab project about this. (i.e. #23902) \nAs a workaround, you can hit the project API and get the upstream project id from the forked_from_project object. There is also a root merge request API coming in Gitlab 9.5.. @glensc because CI pipelines belong to the project a given branch is pushed to, so if you have forked the project and push to your fork, then this ID differs from the project ID of the upstream repository.\nWhen you submit a merge request to the upstream project, the merge request belongs to the upstream project, not your fork's project. Now we are in conflict. If you query merge requests via CI_PROJECT_ID, then you will receive an empty list, since the merge request is not yours, it belongs to upstream.\nFurthermore, we have a timing issue here. As soon as you push a new branch, a pipeline is kicked off. If the danger job is ran before you submit your changes via a merge request, then they will be skipped. Your options are remembering to re-run this job, or (the route we took) create a \"danger\" binstub that will return a proper error code failing the job if no merge request id exists. We have this working on our on-prem instance of gitlab using a binstub to manually find the merge request ID.. ",
    "dvlprliu": "I finally get it working with gitlab-ci, here is my config:\n```yaml\n.gitlab-ci.yml\nstages:\n  - danger\nDanger:\n  dependencies: []\n  stage: danger\n  script:\n    - gem install bundler\n    - bundle install\n    - fastlane danger_krn\n```\n```ruby\nFastfile\nfastlane_version '2.40.1'\ndefault_platform :ios\nplatform :ios do\n  lane :danger_krn do\n    ENV['DANGER_GITLAB_API_TOKEN'] = 'XXXXXXXXXXXXXXX'\n    ENV['DANGER_GITLAB_HOST'] = 'mygitlab.com'\n    ENV['DANGER_GITLAB_API_BASE_URL'] = 'https://mygitlab.com/api/v4'\n    remotes = sh(\"git ls-remote -q origin merge-requests\\head|grep #{ENV['CI_COMMIT_SHA']} || echo 'no pr' \")\n    match_data = /.merge-requests\\/([0-9]+)\\//.match(remotes)\n    if match_data && match_data[1]\n      ENV['CI_MERGE_REQUEST_ID'] = match_data[1] \n    else\n      ENV['CI_PROJECT_ID'] = ''\n   end\n   bundel exec danger\n  end\nend\n```\nThis will work with the fork workflow, because I set the upstream CI_PROJECT_ID manually, and the GitlabCI would find CI_MERGE_REUQEST_ID for me. \nBut the bsearch block implementation has a little issue, we should use >= instead of == according to the ruby doc, I've created a PR to fix this. https://github.com/danger/danger/pull/883\nFor the timing issue, I think it can be fixed by adding a trigger to the Danger job.. @DangerCI Of course, would love to. \ud83d\ude03 . ",
    "asos-petergoldsmith": "Wrong github account. ",
    "raven": "@DangerCI @orta sure, would love to. ",
    "dcsg": "I am having the same issue!. ",
    "kamranpirwani": "I'm actually running into this exact same issue as well -- noticing I'm also unable to run pry on a pr to debug -- only working locally. ",
    "sarpsolakoglu": "I'm having the same issue when trying to run danger pr.\nOutput is like this\nNoMethodError: undefined method `[]' for nil:NilClass\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-xcodebuild-0.0.6/lib/xcodebuild/plugin.rb:52:in `parse_warnings'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:133:in `block (2 levels) in method_values_for_plugin_hashes'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:121:in `map'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:121:in `block in method_values_for_plugin_hashes'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:117:in `each'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:117:in `flat_map'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:117:in `method_values_for_plugin_hashes'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:150:in `print_known_info'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:174:in `parse'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:274:in `run'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/commands/pr.rb:61:in `block in run'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/commands/local_helpers/local_setup.rb:38:in `setup'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/lib/danger/commands/pr.rb:60:in `run'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/gems/danger-5.5.10/bin/danger:5:in `<top (required)>'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/bin/danger:23:in `load'\n  /Users/ssolakoglu/Developer/Zendesk/zendesk_scarlett_ios/vendor/bundle/bin/danger:23:in `<top (required)>'. ",
    "paveg": "having the same issue.\nfile contains multibyte characters.\nI don't know if it help.. ",
    "trsneed": "@jkaan did you resolve this? I am seeing this in PR's only created by one of my teammate's and am vexxed.. Just an update. Ruby Git doesn't like \u00f6\u00e4\u00e5 \ud83d\udc4d . ",
    "joeboyscout04": "Apparently it doesn't like \u2122 either. . ",
    "jpsim": "You'll notice that I attempt to avoid this by trying to filter out these messages before reporting them to Danger, to no effect:\nruby\nif line.start_with? 'Permanently added the RSA host key for IP address'\n  # Don't report to Danger. > P.S. Hm, I think you can try to remove your .ssh/known_hosts file, to reproduce this locally.\nNot quite, that would log the following message, waiting for user interaction indefinitely, which isn't what's happening on circle ci:\nThe authenticity of host 'github.com (192.30.255.113)' can't be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no)?. Except that my Dangerfile & accompanying scripts don't do anything over ssh. Git cloning is done via https.. @sleekybadger just saw this again with the added logging in https://github.com/realm/SwiftLint/pull/1793, CI job available here: https://circleci.com/gh/realm/SwiftLint/1609\nAny ideas?. I'm seeing this but for an OSS project. Azure Pipelines has DANGER_GITHUB_API_TOKEN set and working with PRs from branches on the main remote repo, but seems to fail when running on PRs with branches from a forked repo. See https://dev.azure.com/jpsim/SwiftLint/_build/results?buildId=101 for build details.\n2019-01-17T23:02:06.4344620Z bundle exec danger --verbose\n2019-01-17T23:02:06.4403740Z [command]/bin/bash --noprofile --norc /Users/vsts/agent/2.144.0/work/_temp/a00f9da8-91c1-4531-bfa1-427437e98b5a.sh\n2019-01-17T23:02:07.7461950Z bundler: failed to load command: danger (/Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/bin/danger)\n2019-01-17T23:02:07.7474290Z Octokit::Unauthorized: GET https://api.github.com/repos/realm/SwiftLint/pulls/2004: 401 - Bad credentials // See: https://developer.github.com/v3\n2019-01-17T23:02:07.7475100Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/response/raise_error.rb:16:in `on_complete'\n2019-01-17T23:02:07.7475770Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/response.rb:9:in `block in call'\n2019-01-17T23:02:07.7476320Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/response.rb:61:in `on_complete'\n2019-01-17T23:02:07.7476880Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/response.rb:8:in `call'\n2019-01-17T23:02:07.7477450Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/middleware/follow_redirects.rb:73:in `perform_with_redirection'\n2019-01-17T23:02:07.7478020Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/middleware/follow_redirects.rb:61:in `call'\n2019-01-17T23:02:07.7478640Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/request/retry.rb:128:in `call'\n2019-01-17T23:02:07.7479200Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/rack_builder.rb:143:in `build_response'\n2019-01-17T23:02:07.7479820Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/connection.rb:387:in `run_request'\n2019-01-17T23:02:07.7480380Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/faraday-0.15.3/lib/faraday/connection.rb:138:in `get'\n2019-01-17T23:02:07.7480910Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.1/lib/sawyer/agent.rb:94:in `call'\n2019-01-17T23:02:07.7481500Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/connection.rb:156:in `request'\n2019-01-17T23:02:07.7482060Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/connection.rb:19:in `get'\n2019-01-17T23:02:07.7482630Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/octokit-4.13.0/lib/octokit/client/pull_requests.rb:33:in `pull_request'\n2019-01-17T23:02:07.7483260Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/lib/danger/request_sources/github/github.rb:117:in `fetch_details'\n2019-01-17T23:02:07.7483830Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/lib/danger/danger_core/environment_manager.rb:51:in `fill_environment_vars'\n2019-01-17T23:02:07.7484370Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/lib/danger/danger_core/dangerfile.rb:268:in `run'\n2019-01-17T23:02:07.7484930Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/lib/danger/danger_core/executor.rb:28:in `run'\n2019-01-17T23:02:07.7485980Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/lib/danger/commands/runner.rb:70:in `run'\n2019-01-17T23:02:07.7486840Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n2019-01-17T23:02:07.7487370Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/gems/danger-5.8.0/bin/danger:5:in `<top (required)>'\n2019-01-17T23:02:07.7487880Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/bin/danger:23:in `load'\n2019-01-17T23:02:07.7488480Z   /Users/vsts/agent/2.144.0/work/1/s/vendor/bundle/ruby/2.6.0/bin/danger:23:in `<top (required)>'\n2019-01-17T23:02:07.7761740Z ##[error]Bash exited with code '1'.\n. I had DANGER_GITHUB_API_TOKEN as private, making it public worked.. ",
    "adam-moss": "Looks like the method for GitLab is file_contents rather than contents, but when I put that in I then get\nsh\n[!] Invalid `Dangerfile` file: undefined method `nil' for nil:NilClass. ",
    "koffeinfrei": "The method def file_url(organisation: nil, repository: nil, branch: nil, path: nil) is not overwritten in https://github.com/danger/danger/blob/master/lib/danger/request_sources/gitlab.rb. It uses the \"abstract\" one from https://github.com/danger/danger/blob/master/lib/danger/request_sources/request_source.rb#L76-L78:\nruby\ndef file_url(_organisation: nil, _repository: nil, _branch: \"master\", _path: nil)\n  raise \"Subclass and overwrite file_url\"\nend\n--> The implementation of file_url is missing for gitlab.. ",
    "devandanger": "Cool thanks for the info.. ",
    "miccheng": "Thank u @JuanitoFatas!! . ",
    "serima": "@orta Thanks! Yeah I'm happy. Good to merge \ud83d\ude80 . @orta yea, I definitely want to join \ud83d\ude04 . @orta Thank you so much. I will try Danger JS instead.. ",
    "petester42": "All feedback has been addressed!. Fixed!. Sounds good. Take your time. No worries.. ",
    "cyupa": "Hey @petester42 , thanks for the VSTS plugin, do you have any idea why danger would not offer feedback to VSTS? What should I be looking at?\nI do have the DANGER_VSTS_API_TOKEN set to my PAT, DANGER_VSTS_HOST to $(System.TeamFoundationCollectionUri)$(System.TeamProject) and even set DANGER_VSTS_API_VERSION to 3.0.\nDanger returns the following output on the VSTS Agent but not comment ends up in VSTS:\n```\nResults:\n\u001b[32m\n\u001b[31mErrors:\u001b[0m\n- [ ] Please remove period from end of commit subject line.\nea951317d0b0d68f1bd81752b15988c74a01c07d\n- [ ] Total coverage less than 60%\n- [ ] Sources/MySKD/MySKDRouter.swift has less than 30% code coverage\n- [ ] Sources/MySKD/MySKDService.swift has less than 30% code coverage\n- [ ] Sources/Shared/RequestConverter.swift has less than 30% code coverage\n- [ ] Sources/Shared/RoutesProtocol.swift has less than 30% code coverage\n\u001b[32m\n\u001b[33mWarnings:\u001b[0m\n- [ ] Big PR\n\u001b[32m\nMarkdown:\u001b[0m\nCode coverage\nTotal coverage: 8.57%\nFile | Coverage\n-----|-----\nSources/Course/MySKDeRouter.swift | 0.00%\nSources/Course/MySKDService.swift | 0.00%\nSources/MySKD.swift | 42.86%\nSources/Shared/RequestConverter.swift | 0.00%\nSources/Shared/Router.swift | 100.00%\nSources/Shared/RoutesProtocol.swift | 0.00%\n\nPowered by Slather\n``. Provided a fix here: https://github.com/danger/danger/pull/909. @orta sorry for the messy way of doing this. I have limited experience with Ruby and it was mostly a trial and error process \ud83d\ude04 . Cool, I'll look at how I can update the tests to cover this. I've tested the implementation against a VSTS project, hence the commit madness \ud83d\udca9 . @orta This should do it. Thanks!. Thanks again for this awesome tool @orta \ud83d\udc4d . \n",
    "josete89": "Thanks @orta seems I was not in the correct folder in the docker image. Now I'm getting this one \n/usr/local/bundle/gems/danger-5.4.0/lib/danger/request_sources/bitbucket_server_api.rb:51:in `encode': \"\\xE2\" on US-ASCII (Encoding::InvalidByteSequenceError)\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/request_sources/bitbucket_server_api.rb:51:in `to_json'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/request_sources/bitbucket_server_api.rb:51:in `post_comment'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/request_sources/bitbucket_server.rb:80:in `update_pull_request!'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/danger_core/dangerfile.rb:247:in `post_results'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/danger_core/dangerfile.rb:277:in `run'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/danger_core/executor.rb:27:in `run'\n    from /usr/local/bundle/gems/danger-5.4.0/lib/danger/commands/runner.rb:66:in `run'\n    from /usr/local/bundle/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n    from /usr/local/bundle/gems/danger-5.4.0/bin/danger:5:in `<top (required)>'\n    from /usr/local/bundle/bin/danger:22:in `load'\n    from /usr/local/bundle/bin/danger:22:in `<main>'. Just fixed seems in the linux version of the docker image doesn't support en.UTF_8 so I used C.UTF-8 and seems working. Thanks for your guidance \ud83c\udf89 . It was an issue from my side the configuration, now works perfectly!. this fixed the problem :) thanks. If want to use puts or something for debug that doesn't show in the pull request, what should I use?. ",
    "ghiculescu": "Hey @JuanitoFatas what do you think about https://github.com/ghiculescu/danger/compare/41e8b500673ca86dce6c3df9302459854cfe272c...118fadb61a25789b95b933964b2138b775c306ab ?\nThe problem here is that codeship doesn't expose a PR number in ENV the way most other CIs seem to. The workaround is to look up Github and check for a PR whose head matches the branch we are merging into (code). However, it is unlikely that there would ever be a PR where master is the head (unless you're using a weird git structure).\nAre you happy with these sorts of assumptions in Danger? The other idea I had was to do something like this: !Danger::RequestSources::GitHub.new(nil, env).get_pr_from_branch(..., ..., ...).nil? but it seems fairly grimey, and means there will be an extra github API called made for every build.. Updated: https://github.com/ghiculescu/danger/compare/41e8b500673ca86dce6c3df9302459854cfe272c...8dd90faa7b47a9d1bd5524cf6d6b3ffc36a4af4a. Yeah okay sign me up!\nCan you please let me know when the next gem release goes out so I can point our gemfile to it? :D. Not sure if ^ is the right label, but I'm happy to build this if it will get accepted.. @orta   I'm not seeing it in https://github.com/danger/danger/blob/master/lib/danger/danger_core/executor.rb#L7\nThere's fail_on_errors but that only fails if Danger runs - which won't happen if no PR is found. (Which tbh I would consider an error, but I'm wary of repurposing that flag.). Thank you!. omg how did you automate \"merge on green\" i want that. ci_source gets used by a bunch of stuff eg here and here - i wasn't keen to take on a full refactor.. it's just not required in my particular case - i just need a github client. if you prefer, i can try and find a neater way of writing that.. wait, i misread your comment... fixed in https://github.com/danger/danger/pull/892/commits/a49fc306196afe79f69b77fd03eb4f3052cf040d. ",
    "deecewan": "for reference @ghiculescu, the extra API call is what we do on danger-js\nI don't necessarily think you can assume that master is : a) the 'master' branch, or b) never PRed. ",
    "edvakf": "Thank you.. Is this going to be released as a new version any time soon? I need it for a PR to danger-rubocop.. ",
    "thedavidharris": "Just ran into this today and had the same thought, was pretty confused.\nInstead of deprecating it, would it be better for danger local to actually run against locally checked out code? Does that functionality exist in Danger already? I would find that to be a useful feature. ",
    "mrackwitz": "Isn't this fixed by #932?. ",
    "dalemyers": "We are seeing this issue as well running on VSTS. Same Dangerfile, same problem. The log looks like:\nfatal: Couldn't find remote ref refs/heads/danger_base\nfatal: Couldn't find remote ref refs/heads/danger_head\nfatal: Couldn't find remote ref refs/heads/danger_base\nfatal: Couldn't find remote ref refs/heads/danger_head\nfatal: Couldn't find remote ref refs/heads/danger_base\nfatal: Couldn't find remote ref refs/heads/danger_head\nfatal: Couldn't find remote ref refs/heads/danger_base\nfatal: Couldn't find remote ref refs/heads/danger_head\nFrom https://[redacted].visualstudio.com/[redacted]/_git/[redacted]\n   1cc96ae9b7..9e854a4b96 [redacted] -> origin/[redacted]\nbundler: failed to load command: danger (/usr/local/bin/danger)\nRuntimeError: Cannot find a merge base between danger_base and danger_head.\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/scm_source/git_repo.rb:128:in `find_merge_base'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/scm_source/git_repo.rb:16:in `diff_for_folder'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/danger_core/dangerfile.rb:261:in `setup_for_running'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/danger_core/dangerfile.rb:271:in `run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/danger_core/executor.rb:28:in `run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/lib/danger/commands/runner.rb:68:in `run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  /usr/local/lib/ruby/gems/2.5.0/gems/danger-5.5.11/bin/danger:5:in `<top (required)>'\n  /usr/local/bin/danger:23:in `load'\n  /usr/local/bin/danger:23:in `<top (required)>'\nThe branches that it refers to are totally random however. They have nothing to do with the build being run. I think it was just the latest push to the repo. . ",
    "caffeineflo": "I'm able to parse and use the pr_author property from bitbucket_server, shouldn't .pr_json have some value then?\nI simply took this part from your examples ... . @orta I put a debug message in, trying to output the pr_json object. Unfortunately nothing came back, so I assume the whole object is missing. \nDo you happen to know if this is a BitBucket Server setting oder how I could further debug the absence of the JSON object?. Thank you! Great project. ",
    "Dannyguk": "I started working on this, Heroku exposes most of the required information except the PR number, which I could retrieve (in a slightly hacky way) using the branch name via Github.\nThe issue i'm having is that Heroku doesn't seem to actually clone the repo into the CI instance, it just takes a copy of the source, so an error occurs when trying to get the remote.\nCould someone confirm danger does require the CI to actually have the repo, rather than just the source. Thanks\n. ",
    "orj": "@JuanitoFatas I looked at the other CI sources and it wasn't clear that it was relevant.  Other CI sources get the repo name/slug differently.. ",
    "Nef10": "I could track it down to danger-jazzy when it has warnings or errors to show . I tried to create a simple project to reproduce but there everything works: https://github.com/Nef10/Danger-924/pull/2. I added \nputs \"WARNINGS\"\nputs warnings\nputs \"ERRORS\"\nputs errors\nputs \"messages\"\nputs messages\nputs \"markdowns\"\nputs markdowns\nin line 500 and get the following output:\nWARNINGS\nERRORS\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 12 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 16 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 23 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 24 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 25 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 28 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 29 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 30 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 31 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 35 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 41 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 49 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 51 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 52 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 53 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 54 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 55 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 56 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 60 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File1.swift, line: 65 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 17 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File2.swift, line: 48 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File3.swift, line: 17 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File4.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File4.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File4.swift, line: 12 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File4.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 21 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 22 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 23 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 24 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 26 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 12 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File5.swift, line: 28 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 16 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File6.swift, line: 18 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File7.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File7.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File7.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File7.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File7.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File8.swift, line: 16 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 11 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 13 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 14 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 15 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 16 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 17 }\nViolation Undocumented symbol. { sticky: false, file: MyProjectName/File9.swift, line: 19 }\nmessages\nmarkdowns. It seems to be related to either some violations having line as null or that some violations are duplicated. I fixed all these violations and it is no longer crashing.\nSee realm/jazzy#936 . @fwal thanks!. DANGER_GITHUB_API_HOST=MYTOKEN bundle exec danger pr https://github.com/Nef10/MyProjectName/pull/9 also leads to \nbundler: failed to load command: danger (/Users/Steffen/.rbenv/versions/2.2.3/bin/danger)\nURI::BadURIError: both URI are relative\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/2.2.0/uri/generic.rb:1100:in `rescue in merge'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/2.2.0/uri/generic.rb:1097:in `merge'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/faraday-0.13.1/lib/faraday/connection.rb:416:in `build_exclusive_url'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/faraday-0.13.1/lib/faraday/rack_builder.rb:194:in `build_env'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/faraday-0.13.1/lib/faraday/rack_builder.rb:141:in `build_response'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/faraday-0.13.1/lib/faraday/connection.rb:387:in `run_request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/faraday-0.13.1/lib/faraday/connection.rb:137:in `get'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/sawyer-0.8.1/lib/sawyer/agent.rb:94:in `call'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/octokit-4.7.0/lib/octokit/connection.rb:156:in `request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/octokit-4.7.0/lib/octokit/connection.rb:19:in `get'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/octokit-4.7.0/lib/octokit/client/pull_requests.rb:31:in `pull_request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/support/pull_request_finder.rb:68:in `remote_pull_request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/support/pull_request_finder.rb:49:in `pull_request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/support/pull_request_finder.rb:29:in `check_if_any_pull_request!'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/support/pull_request_finder.rb:15:in `call'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/local_git_repo.rb:93:in `found_pull_request'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/ci_source/local_git_repo.rb:45:in `initialize'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/danger_core/environment_manager.rb:30:in `new'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/danger_core/environment_manager.rb:30:in `initialize'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/commands/pr.rb:57:in `new'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/lib/danger/commands/pr.rb:57:in `run'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  /Users/Steffen/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/danger-5.5.5/bin/danger:5:in `<top (required)>'\n  /Users/Steffen/.rbenv/versions/2.2.3/bin/danger:23:in `load'\n  /Users/Steffen/.rbenv/versions/2.2.3/bin/danger:23:in `<top (required)>'. ",
    "misterwell": "Any ideas on how to resolve this? Is it an issue within danger-jazzy or danger itself? . ",
    "GRiMe2D": "I'm currently having same crash.\nOutput of bundle exec danger pr <pr_url>\nWarnings:\n- [ ] app/src/main/java/PreferencesHelper.java#L8: \nAvoid unused imports such as 'com.google.gson.Gson'\n- [ ] app/src/main/java/PreferencesHelper.java#L9: \nAvoid unused imports such as 'com.google.gson.reflect.TypeToken'\n- [ ] app/src/main/java/PreferencesHelper.java#L15: \nAvoid unused imports such as 'java.util.List'\n- [ ] app/src/main/java/PreferencesHelper.java#L25: \nAvoid unused imports such as 'Place'\n- [ ] app/src/main/java/PreferencesHelper.java#L136: \nThese nested if statements could be combined\n- [ ] app/src/main/java/PreferencesHelper.java#L5: \nAvoid unused imports such as 'android.util.Log'\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L8: \nAvoid unused imports such as 'com.google.gson.Gson'\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L9: \nAvoid unused imports such as 'com.google.gson.reflect.TypeToken'\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L15: \nAvoid unused imports such as 'java.util.List'\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L25: \nAvoid unused imports such as 'Place'\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L136: \nThese nested if statements could be combined\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L5: \nAvoid unused imports such as 'android.util.Log'\n- [ ] app/src/main/java/PlacesAdapter.java#L8: \nAvoid unused imports such as 'com.google.gson.Gson'\n- [ ] app/src/main/java/PlacesAdapter.java#L9: \nAvoid unused imports such as 'com.google.gson.reflect.TypeToken'\n- [ ] app/src/main/java/PlacesAdapter.java#L15: \nAvoid unused imports such as 'java.util.List'\n- [ ] app/src/main/java/PlacesAdapter.java#L25: \nAvoid unused imports such as 'Place'\n- [ ] app/src/main/java/PlacesAdapter.java#L136: \nThese nested if statements could be combined\n- [ ] app/src/main/java/PlacesAdapter.java#L5: \nAvoid unused imports such as 'android.util.Log'\n- [ ] app/src/main/java/DataManager.java#L829: Line is longer than 130 characters (found 144).\n- [ ] app/src/main/java/MapActivity.java#L353: WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/MapActivity.java#L353: WhitespaceAround: '}' is not preceded with whitespace.\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L135: WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L136: WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L290: WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L290: WhitespaceAround: '}' is not preceded with whitespace.\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L293: WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/PlaceAddMapActivity.java#L293: WhitespaceAround: '}' is not preceded with whitespace.\n- [ ] app/src/main/java/PlaceAddMapPresenter.java#L51: WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)\n- [ ] app/src/main/java/PlacesAdapter.java#L65: Line is longer than 130 characters (found 131).\n- [ ] app/src/main/java/MapUtils.java#L201: WhitespaceAround: '{' is not preceded with whitespace.\nOutput when in CI\nbundler: failed to load command: danger (Vendor/Bundle/ruby/2.3.0/bin/danger)\nArgumentError: comparison of Danger::Violation with Danger::Violation failed\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/request_sources/github/github.rb:502:in `sort'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/request_sources/github/github.rb:502:in `inline_violations_group'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/request_sources/github/github.rb:163:in `update_pull_request!'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:248:in `post_results'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/danger_core/dangerfile.rb:279:in `run'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/danger_core/executor.rb:28:in `run'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/lib/danger/commands/runner.rb:68:in `run'\n  Vendor/Bundle/ruby/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n  Vendor/Bundle/ruby/2.3.0/gems/danger-5.5.10/bin/danger:5:in `<top (required)>'\n  Vendor/Bundle/ruby/2.3.0/bin/danger:22:in `load'\n  Vendor/Bundle/ruby/2.3.0/bin/danger:22:in `<top (required)>'. ",
    "mbogh": "So problem was that I included port number in DANGER_GITLAB_HOST and the GitLab CI runners would clone over https and not ssh. This made the regex fail in environment_manager.rb.. Do you suggest an throwing a warning/error?. If you can give me some guiding, I can make the change :)\nIt looks like the best place to do it would be either on the callsite of validates_as_ci or in the declaration of validates_as_ci in request_source?\nBut I am unsure if validates_as_ci could be called multiple times in a single run. So I have an idea on how to fix this.\nCurrently update_pull_request in gitlab.rb just ends by updating the Merge Request.\nIf we add something like this at the end of that method the job would fail instead of succeeding.\nruby\n  raise \"Errors #{errors}\" unless errors.empty?. The MR status is determined from the pipeline status, so if the pipeline succeeds. Then the MR is considered green.\nThe API docs does not mention of a way of failing a MR.. \nThe Danger step here actually had errors.\n. D'oh I missed that flag.. ",
    "bhargavms": "Nevermind you can close this issue, I managed to run it locally using danger pr command, after generating the coverage report. Of course i have to create a PR, but thats ok. ",
    "provTheodoreNewell": "Would this be an appropriate regex to support one or more .s in the repo name:\n([\\/:])([^\\/]+\\/[^\\/.]+.*?)(?:.git)?$. Cool, preparing tests and a PR for this.\n. Ah, looks similar to #922.. ",
    "Blackjacx": "Jepp I can confirm that git.modified_files does only return a subset of the modified files. Not sure why... We have modified tests but the test directory does not appear in git.modified_files. That's pretty strange.. ",
    "simerlec": "This is still an issue - after some time working with danger local my git object does not change anymore, no matter what I remove/add/modify in the codebase.\nEDIT: Nevermind - just read the docs again and realized that my assumption as to how local works was wrong \ud83e\udd37\u200d\u2642\ufe0f . ",
    "peril-staging[bot]": "Thanks for the PR @tbroadley.\nThis PR has been shipped in vv5.5.6 - CHANGELOG.\n. \n  Thanks for the PR @mbogh.\nThis PR has been shipped in vv5.5.6 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @neilkimmett.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @neilkimmett.\nThis PR has been shipped in vv5.5.7 - CHANGELOG.\n. \n  Thanks for the PR @m1guelpf.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n. \n  Thanks for the PR @m1guelpf.\nThis PR has been shipped in vv5.5.6 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @copini.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @copini.\nThis PR has been shipped in vv5.5.7 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @saantiaguilera.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @saantiaguilera.\nThis PR has been shipped in vv5.5.7 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @davevdveen.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @davevdveen.\nThis PR has been shipped in vv5.5.7 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @JoeSSS.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @sogame.\nWe conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @tbrand.\nThis PR has been shipped in vv5.5.12 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @ivantse.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @ivantse.\nThis PR has been shipped in vv5.5.12 - CHANGELOG.\n. \n  Thanks for the PR @fwal.\nThis PR has been shipped in vv5.5.12 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @masahide318.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @dbgrandi.\nThis PR has been shipped in v5.6.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @allewun.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks allewun :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @allewun.\nThis PR has been shipped in v5.6.0 - CHANGELOG.\n. \n  Thanks for the PR @allewun.\nThis PR has been shipped in v5.6.0 - CHANGELOG.\n. \n  Thanks for the PR @allewun.\nThis PR has been shipped in v5.6.1 - CHANGELOG.\n. \n  Thanks for the PR @rymai.\nThis PR has been shipped in v5.6.1 - CHANGELOG.\n. \n  Thanks for the PR @fandyfyf.\nThis PR has been shipped in v5.6.2 - CHANGELOG.\n. \n  Thanks for the PR @kompiro.\nThis PR has been shipped in v5.6.3 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nDanger run resulted in 1 markdown; to find out more, see the checks page.\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @dstranz.\nThis PR has been shipped in v5.6.3 - CHANGELOG.\n. \n  Thanks for the PR @dstranz.\nThis PR has been shipped in v5.6.4 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @stephengroat.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks stephengroat :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @stephengroat.\nThis PR has been shipped in v5.6.5 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @tbrand.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks tbrand :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @tbrand.\nThis PR has been shipped in v5.6.5 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @otaznik-net.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks otaznik-net :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @otaznik-net.\nThis PR has been shipped in v5.6.7 - CHANGELOG.\n. \n  Thanks for the PR @otaznik-net.\nThis PR has been shipped in v5.7.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @phantomwhale.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks phantomwhale :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @phantomwhale.\nThis PR has been shipped in v5.7.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @koffeinfrei.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks koffeinfrei :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @koffeinfrei.\nThis PR has been shipped in v5.7.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @MadsBogeskov.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks MadsBogeskov :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @leipert.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks leipert :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @leipert.\nThis PR has been shipped in v5.7.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @tumugin.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks tumugin :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @daveallie.\nThis PR has been shipped in v5.8.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @cnoon.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks cnoon :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @cnoon.\nThis PR has been shipped in v5.8.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @r7kamura.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks r7kamura :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @r7kamura.\nThis PR has been shipped in v5.8.2 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @yoshino.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks yoshino :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @yoshino.\nThis PR has been shipped in v5.9.0 - CHANGELOG.\n. \n  Thanks for the PR @hotbott.\nThis PR has been shipped in v5.9.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @colorbox.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks colorbox :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @colorbox.\nThis PR has been shipped in v5.9.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @jmromanos.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks jmromanos :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @jmromanos.\nThis PR has been shipped in v5.10.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @colorbox.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks colorbox :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @colorbox.\nThis PR has been shipped in v5.10.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @serg-kovalev.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks serg-kovalev :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @serg-kovalev.\nThis PR has been shipped in v5.10.3 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @Kyaak.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks Kyaak :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @Kyaak.\nThis PR has been shipped in v5.10.2 - CHANGELOG.\n. \n  Thanks for the PR @jmromanos.\nThis PR has been shipped in v5.11.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @duck8823.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks duck8823 :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @duck8823.\nThis PR has been shipped in v5.11.0 - CHANGELOG.\n. \n  Thanks for the PR @RishabhTayal.\nThis PR has been shipped in v5.12.0 - CHANGELOG.\n. \n  Thanks for the PR @RishabhTayal.\nThis PR has been shipped in v5.11.1 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @leslau.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks leslau :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @RicardoBelchior.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks RicardoBelchior :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @RicardoBelchior.\nThis PR has been shipped in v5.12.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @bugtender.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks bugtender :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @bugtender.\nThis PR has been shipped in v5.12.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @pbendersky.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks pbendersky :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @pbendersky.\nThis PR has been shipped in v5.12.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @colorbox.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks colorbox :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @colorbox.\nThis PR has been shipped in v5.12.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @HelloCore.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks HelloCore :tada:\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n  Thanks for the PR @HelloCore.\nThis PR has been shipped in v5.13.0 - CHANGELOG.\n. \n  Thanks for the PR @ghiculescu.\nThis PR has been shipped in v5.14.0 - CHANGELOG.\n. \n  Thanks for the PR @pbendersky.\nThis PR has been shipped in v5.16.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @cojoj.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks cojoj :tada:\n\n  Generated by :no_entry_sign: dangerJS against 7d27344265e4e82e9482ee5f91b02f31fbd7e0f9\n\n. \n  Thanks for the PR @cojoj.\nThis PR has been shipped in v5.16.0 - CHANGELOG.\n. \n<!--\n  0 failure: \n  0 warning: \n1 markdown notices\n  DangerID: danger-id-peril;\n-->\nThanks for the PR @RDIL.\nThe Danger org conform to the Moya Community Continuity Guidelines, which means\n  that we want to offer any contributor the ability to control their destiny.\nSo, we've sent you an org invite - thanks RDIL :tada:\n\n  Generated by :no_entry_sign: dangerJS against 2ab77575ecd558a9c49991317e0d33ad50e24ae3\n\n. \n  Thanks for the PR @RDIL.\nThis PR has been shipped in v5.16.0 - CHANGELOG.\n. \n  Thanks for the PR @pbendersky.\nThis PR has been shipped in v5.16.1 - CHANGELOG.\n. \n  Thanks for the PR @RDIL.\nThis PR has been shipped in v6.0.0 - CHANGELOG.\n. \n  Thanks for the PR @RDIL.\nThis PR has been shipped in v6.0.0 - CHANGELOG.\n. \n  Thanks for the PR @RDIL.\nThis PR has been shipped in v6.0.0 - CHANGELOG.\n. \n  Thanks for the PR @daniel-beard.\nThis PR has been shipped in v6.0.0 - CHANGELOG.\n. \n  Thanks for the PR @pbendersky.\nThis PR has been shipped in v6.0.0 - CHANGELOG.\n. \n  Thanks for the PR @pbendersky.\nThis PR has been shipped in v6.0.1 - CHANGELOG.\n. ",
    "rattrayalex-stripe": "This seems related to https://github.com/danger/danger/issues/382 but I haven't read that thread thoroughly. . Awesome, yeah danger trial <repo_url> --count sounds \u2728 \u2728  !. \u2764\ufe0f \nThis is terrific, thank you so much!. ",
    "mylifeasdog": "Problem still occurred on Danger 5.5.6. ",
    "dbwest": "looking.\nseems like it gets that using env vars...\nruby\n    def self.repo_url(env)\n      if env[\"GIT_URL_1\"]\n        env[\"GIT_URL_1\"]\n      elsif env[\"CHANGE_URL\"]\n        change_url = env[\"CHANGE_URL\"]\n        case change_url\n        when %r{\\/pull\\/} # GitHub\n          matches = change_url.match(%r{(.+)\\/pull\\/[0-9]+})\n          matches[1] unless matches.nil?\n        when %r{\\/merge_requests\\/} # GitLab\n          matches = change_url.match(%r{(.+)\\/merge_requests\\/[0-9]+})\n          matches[1] unless matches.nil?\n        when %r{\\/pull-requests\\/} # Bitbucket\n          matches = change_url.match(%r{(.+)\\/pull-requests\\/[0-9]+})\n          matches[1] unless matches.nil?\n        else\n          change_url\n        end\n      else\n        env[\"GIT_URL\"]\n      end\n    end\nMy env vars are messed up in Jenkins.\nhttps://stackoverflow.com/questions/47946662/jenkins-env-in-pipeline-from-jenkinsfile-is-null\n. ",
    "neilkimmett": "Hmm that test that failed passes locally on my Mac. Think its something to do with not escaping the \" properly in the URL.. Sure thing heres the core_lint_output\n[warn]: @param tag has unknown parameter name: or \n    in file `lib/danger/danger_core/plugins/dangerfile_github_plugin.rb' near line 234\n[warn]: Invalid tag format for @example in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb` near line 70\n[warn]: @param tag has unknown parameter name: message \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: file \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: line \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: String, \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: sticky \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: file \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: line \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: String, \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: sticky \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: file \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: line \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: String, \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: sticky \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: file \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: line \n    in file `lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\nFiles:           8\nModules:         1 (    0 undocumented)\nClasses:         8 (    0 undocumented)\nConstants:       0 (    0 undocumented)\nAttributes:      0 (    0 undocumented)\nMethods:        99 (    0 undocumented)\n 100.00% documented\nTests now passing on Circle but not Travis \ud83d\ude2d. 1. \n``\nbundle exec danger plugins lint lib/danger/danger_core/plugins/*.rb --warnings-as-errors\n[warn]: @param tag has unknown parameter name: or\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_github_plugin.rb' near line 234\n[warn]: Invalid tag format for @example in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb near line 70\n[warn]: @param tag has unknown parameter name: message\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: file\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: line\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 98\n[warn]: @param tag has unknown parameter name: String,\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: sticky\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: file\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: line\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 121\n[warn]: @param tag has unknown parameter name: String,\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: sticky\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: file\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: line\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 145\n[warn]: @param tag has unknown parameter name: String,\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: sticky\n    in file /Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: file\n    in file/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[warn]: @param tag has unknown parameter name: line\n    in file `/Users/neil/projects/danger/lib/danger/danger_core/plugins/dangerfile_messaging_plugin.rb' near line 170\n[!] Passed\n```\n\nDone in 5b041ff. Now seems to be failing in /lib/danger/request_sources/github/github.rb:132:in 'fetch_issue_details', only on Ruby 2.4.0 \ud83e\udd14 . I should probably add some better error messaging too, right now if Danger can't find a PR for the given branch it'll error out with NoMethodError: undefined method [] for nil:NilClass which isn't very user friendly.. Added some better error messaging in 136f9be. Let me know if you want anything else, if not I'll squash these fixups.. \nSquashed.. Looks reasonable to me \ud83d\udc4d . If I were to nitpick I'd suggest maybe squashing those little one line commits into the relevant earlier commit?. \n",
    "copini": "Thanks! I'm willing to try, but I read in #727 that running locally doesn't allow you to test against Bitbucket Server. But now that I think about it, I might be able to run a fork in Bitrise to test it... I'll check tomorrow ;-). Works for us, see PR #940.. ",
    "saantiaguilera": "Done :) I had to implement the hash and eql? method since Array#uniq uses them for comparison (its not bad having the DTO with those so I guess its still useful for hashing and performance equality). I can implement the unicity on myself if not.\nAs for the hash function, I used the standard one based on prime numbers and delegations..\nI have no idea how to become a contributor. How should I?. ",
    "bsameh": "I've double checked the URL, it seems to be the correct one. I tried pointing it to the host itself as well as use the exact repository URL, neither worked.\nI understand that support for VSTS was added via a PR, so I don't expect much support, was just wondering if anyone else has come across this.\nThanks @orta! :) Great library, by the way, works seamlessly on GitHub.. Will try that. Thanks!. ",
    "znacloud": "--remove-previous-comments flag work incorrect on gitlab-ci, all comments will be removed and no comment displayed.\n--new-comment flag still update previous comment instead of creating new one.\ndanger version is 5.6.7. Here  remove_previous_comments should be keep. Because remove_ previous_comments means needing create new comments(if has) at the same time.. ",
    "SpeakyDre": "Oh ok I missed this page! Thanks :). ",
    "Manuel-Manoury": "Okay, thanks for your feedback ! I'll try it out. If you're interested, I will keep you updated when I've got a working solution :). ",
    "HannesT117": "Hi shravanjnaidu,\nhave you declared ghprbGhRepository=(not quite sure) and ghprbPullId=\"${env.CHANGE_ID}\" as environment variables in your jenkinsfile? At least this was an issue for me using BitBucket.. ",
    "RomanTysiachnik": "@orta I don't really understand what's going on. When I use something like <details> everything works fine. But when I write a long string with <img src=\"... > it doesn't work properly.. ",
    "sogame": "Note I haven't been able to run the tests locally, as when executing bundle exec rake spec I get the error:\nIgnoring byebug-10.0.0 because its extensions are not built. Try: gem pristine byebug --version 10.0.0\nCould not find byebug-10.0.0 in any of the sources\nAnd when running gem pristine byebug --version 10.0.0 I get:\nERROR:  While executing gem ... (Gem::Exception)\n    Failed to find gems [\"byebug\"] = 10.0.0. ",
    "tbrand": "Hi @raymondhoagland\nI've created the patch at https://github.com/danger/danger/pull/967\nBTW, I've fixed it by changing a way to fetch the repositories like this\ngit init\ngit remote add origin <some origin>\ngit fetch origin <base_branch> --depth 1\ngit fetch origin +refs/pull/<pr_number>/merge\ngit reset --hard FETCH_HEAD\nIt's inspired by Travis-CI\nRegards.. Oops, this issue is duplicted with https://github.com/danger/danger/issues/965\nSorry.. Thanks!!. ",
    "authiatr": "I also tried to import the gitlab gem in my Gemfile but it didn't change the result. . And our gitlab version is: GitLab Enterprise Edition 10.6.0-rc4-ee. I get another error when I specify the DANGER_GITLAB_API_BASE_URL (https://gitlab.com/api/v4/projects/patho%2F I tried different values) it fail with the next error:\nArgumentError: wrong number of arguments (given 2, expected 1). ",
    "dstranz": "@orta Same issue in your project. I have:\nDANGER_GITLAB_HOST = git.myhost.com\nDANGER_GITLAB_API_BASE_URL = https://git.myhost.com/api/v4\nMy repository URL has following format: https://git.myhost.com/TEAM1/TEAM2/REPOSITORY_NAME.\nI received this error:\n\nGitlab::Error::NotFound: Server responded with code 404, message: 404 Project Not Found. Request URI: https://git.myhost.com/api/v4/projects/TEAM2%2REPOSITORY_NAME/merge_requests/4\n\n. @orta should I update documentation? What does Core Docs Error mean?. @orta All checks have passed - That's strange ;). Yes, I also has this problem :/ I have ready PR with another fix - will submit it in a moment.. ",
    "rymai": "I think that was probably broken before that. I will fix this bug.. Danger::DangerfileGitLabPlugin#html_link is fixed, as you can see here: https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/19066#note_74205712. > any reason for the WIP?\n@orta Thanks, I wanted to make sure the change worked as expected in real usage, and it is (see my above comment).. @orta Thanks!. I'm not sure why we don't only use the MR diff: https://github.com/danger/danger/blob/master/lib/danger/request_sources/gitlab.rb#L84-L89. Maybe we could use this API to get the base_sha: https://docs.gitlab.com/ee/api/merge_requests.html#get-mr-diff-versions similarly to what's done for GitHub https://github.com/danger/danger/blob/1687f6d9d89b318900a488a8ea31cac78153e0e1/lib/danger/danger_core/plugins/dangerfile_github_plugin.rb#L167?. > That said, it might just be worth using the GitLAb API via the included Gem in your Dangerfile in this case, or do you see it being used in a lot of Dangerfiles for the community?\nWe can definitely start with the \"manual\" way in our own Dangerfile, and see if there's traction on this integrated proposal. \ud83d\udc4d . ",
    "kingcos": "We found this issue, too. And we are using it in GitLab EE.. ",
    "72A12F4E": "Interesting, we are also using it in Gitlab EE.. ",
    "stephanecopin": "Makes sense, I'll try to take a look see if this can fixed a simple way. In any case, it definitely feels like edge-casey as it will be working as intended 99% of the times anyway.. @orta I agree, that'd be a good fix for probably most of the times it'd be an issue. I'll try to look into it this weekend. ",
    "masahide318": "It works now in 5.5.13. Just tested.\nThanks.. ",
    "jywarren": "We seem to be seeing a 401 error just as of the past few days with Danger as part of our Travis CI run. Could this be related? Thanks, we love Danger!!!. ",
    "jhoareau": "@orta Any update on porting this feature from danger-js to danger? . ",
    "tomburns": "based on that trace, it looks like that element isn't present in the JSON at all, right? This setup was also working fine for quite a while until yesterday, though I wouldn't rule out an unnoticed change on our end if you have any ideas where to look. We are (and have been) on 2.0 and I believe this API is actually shared between them -- I'll keep digging on my end \ud83d\udd75\ufe0f . Probably worth pointing out that this is happening on both PR and non-PR builds for us right now too --- previously both of these were okay \ud83d\ude16  . Took out the circle API token from our env vars and added a manual circle env var check to our fastfile for now before running danger -- back to green, but I'll leave this open; let me know if there's anything I can to do help nail this down!. Closing this for now, as I've got a workaround in place -- I'll be giving this another shot later in the week and will reopen if needed.. ",
    "dlackty": "Running into same issue and after debugging for a while, it turned out that my Circle CI API token was invalid. Not sure why this happened and how Danger worked before #987.\nTo test validity for your token, try:\nbash\ncurl https://circleci.com/api/v1.1/me?circle-token=YOUR-TOKEN. ",
    "crsantos": "Beware that you need : before the token:\ncurl https://circleci.com/api/v1.1/me?circle-token=:YOUR-TOKEN. ",
    "v-ahadke": "I am facing similar issue when my PR contains images. This happens on Github as well https://github.com/danger/danger/issues/1055. @daniel-beard Thanks for checking the issue on your side. I tried updating the DangerFile as mentioned above to verify this issue on 5.15.0 but I am still facing the same issue. I have also added the stack trace as requested. Can you please have a look at it? Thanks\n. Hi @interstateone . Thank you for the workaround. After using it, my issue got fixed. It would be great to have https://github.com/ruby-git/ruby-git/pull/405 gets merged in & Danger updates the git version :) . ",
    "fandyfyf": "Thanks! I am still new to ruby. :). ",
    "brbrr": "\nthis is the wrong repo BTW\n\nOuch, sorry. I thought this is a 'main' repo, and rb and js are just implementations :) Should I move this issue into relevant repo? \n\nIn open source projects you've probably not given access to the bot to write to your repo\n\nHere is the list of scopes I've added into access token: repo:status, repo_deployment, public_repo\nTo make it clear - my user is newly created, and is not a member of org.\n. Our folks have those things at the bottom here: https://github.com/wordpress-mobile/WordPress-iOS/pull/9577 (they using -rb and BuddyBuild CI). ",
    "kompiro": "I think you can use separate danger_id by container like danger-rspec-${CIRCLE_NODE_INDEX}. danger manages comment by dagner_id.. @Startouf \nI use --fail-on-errors=true option to detect failed things. Please try\n- run:\n    name: run danger for RSpec tests\n    command: >\n      bundle exec danger\n      --danger_id=danger-rspec-${CIRCLE_NODE_INDEX}\n      --dangerfile=Dangerfile-rspec\n    when: always\nto change\n- run:\n    name: run danger for RSpec tests\n    command: >\n      bundle exec danger\n      --danger_id=danger-rspec-${CIRCLE_NODE_INDEX}\n      --dangerfile=Dangerfile-rspec\n      --fail-on-errors=true\n    when: always. ",
    "BradMcEvilly": "@Startouf were you able to get this to work? I'm experiencing a similar issue. \n. ",
    "brodock": "@oderkach have you set-up DANGER_GITLAB_API_TOKEN variable in the CI Variables configuration? . ",
    "oderkach": "@brodock Yes. By the way it works correctly with version 5.5.13.. ",
    "martiall": "I think the bug is located in gitlab_ci.rb line 42:\nmerge_requests = client.merge_requests(project_path, state: :opened)\nAccording to Gitlab API documentation - List project merge requests the parameter must be the project id and not the project path.\nSeems that the bug was introduced by commit e78cb621d8855cc43342a77e8fc62a8098a10637 . ",
    "jorgifumi": "Hi, I have been experiencing same problem using Bitrise on my company's Hosted Gitlab and after a lot of research, I've noticed that when running locally with Bitrise CLI it works!\nFinally I think I have found the root of the problem and is this: https://gitlab.com/gitlab-org/gitlab-ce/issues/35079\nHope can help someone else.\nEdit: This answer ended up helping us to solve the problem: https://gitlab.com/gitlab-org/gitlab-ce/issues/35079#note_76374269. ",
    "hotbott": "@FranciscoAmado are you trying to import a Dangerfile from a private or a public repo?. Can you try to verify your credentials / setup via the API directly?\ne.g. via the command line:\nsh\ncurl -H \"Authorization: token $DANGER_GITHUB_API_TOKEN\" https://api.github.com/repos/Organization/danger-ios/contents/Dangerfile. The import_dangerfile method calls that API internally and downloads the file given in the download_url property.\nNot sure how to help you now \ud83e\udd14 It's hard to debug without an option to reproduce it.... ",
    "FranciscoAmado": "It's from a private repo. It works great. Prints out the JSON response with all the details related to the Dangerfile. I understand. Even we can't reproduce it either.\nThanks for the support. I'll let you know if we find anything related to this in the future.. ",
    "abhinavmsra": "@orta I am logged in as the same user and am still not seeing any comments. . @orta It should be documented IMO. Shall i open a PR for it?. ",
    "toineheuvelmans": "Actually I'm still struggling with this issue, as the regex used in this file still only captures a single slash. Would that involve a similar adjustment to the regex?. Great, thanks @dstranz \ud83d\udc4d . ",
    "huyvohcmc": "@orta So, do you have a workaround for this? I'm facing a problem where my pull requests contain lots of Rubocop violations but it still gets merged because Danger check is green/skipped.. This is my first time contributing to this and I don't really understand the code base. Does it mean I can just change the exit status code when skipping Danger run from 0 to 1?\n```ruby\nCould we determine that the CI source is inside a PR?\ndef validate_pr!(cork)\n  unless EnvironmentManager.pr?(system_env)\n    ci_name = EnvironmentManager.local_ci_source(system_env).name.split(\"::\").last\n    cork.puts \"Not a #{ci_name} Pull Request - skipping danger run\".yellow\n    exit(0)\n  end\nend\n```. ",
    "damacus": "It's slightly different semantically, fail isn't going to be a caught exception whereas raise is expect to be caught. In Danger's context I think either is fine to be honest. . Any chance we can get this monkey patched in please? :) . ",
    "ayufan": "cc @rymai . ",
    "twk3": "This appears to be an issue with the data not being available in the gitlab merge request api. Instead the plugin just looks at the commit before the first commit in the MR. Which would work for a rebase workflow, but not if you are merging master into your branch.\nGitLab should have this data somewhere, as it is used to update the diff. We should find if it's stored somewhere we can access from the api, or propose adding it if it is not.\ncc\\ @rymai . ",
    "AliSoftware": "@daniel-beard Danger only support inline comments on GitHub & GitHub EE.\nSo if you're using GitLab, BitBucket or VSTS, inline comments haven't been implemented yet (i'm guessing either because of lack of time by the contributors of Danger or because the API of those don't support inline comments yet)\nSee the table \"FEATURES\" in the documentation\nDepending on what Git hosting system you're using, there are issues tracking support for inline comments for each, e.g. #522 for support of those inline comments in GitLab.. ",
    "muuvmuuv": "Okay, it seems this is caused because there is no local bitbucket support yet... When will this happen?. I don't think I have time for this and really no knowledge or experience with ruby \ud83d\ude04 . @orta that was easy, thanks!! So sorry, I'm not familiar with Linux and Docker and thought some file was missing. . Thanks, @orta but this does not help\u2026\nMy steps to reproduce:\nSystem GitLab is running:\nDebian Virtual Maschine on vServer in our company with Docker installed for GitLab runners\nProjet is in private group with Guest bot that has access to it and all variables are passed within the .gitlab-ci.yml file.\n\ncreate minimal repo to reproduce: https://gist.github.com/muuvmuuv/dc036e4da2ddd3d016a9b40a8f826147\npush it to master\nmake changes and push again\ngo to Jobs panel\nerror\n\nHope this helps. \ud83d\ude15 . ",
    "viktorchukhantsev": "I have the same problem. It's a very interesting situation when you using GitLab only as CI for your project but source code still on GitHub. Have no idea what to do now. Any ideas?. ",
    "alexandreraulin": "Hi, sorry I forgot one thing, according to the documentation (https://danger.systems/reference.html), this method are already implemented. I looked the code and this method exist dangerfile_bitbucket_cloud_plugin.rb\nI can try to debug that but I'm a beginner in Ruby \ud83d\ude2c . ",
    "otaznik-net": "Oh, sorry for letting the PR broken (I was little too tired to wait for tests =/ - ashamed), will fix that today or tomorrow ...\nand thanks for instruction how to fix it ;o)\n=)K . ",
    "MadsBogeskov": "Ill implement a test later this evening for this.. ",
    "leipert": "@orta I finalized this MR. If you have any questions, feel free to ask me. I am not a ruby pro, but we at @gitlab really need it.. Thanks for the fast turn-around and the org invite!\nI see that danger.js is missing GitLab support completely. Maybe my next weekend thing \ud83d\ude06 . ",
    "lordcodes": "Thanks, I will have a look. Completely forgot to check that.. ",
    "Vocal-fairy-iosBot": "hi @orta \nthank you for your respond\ni've changed the token for about five times, but it never success or do i miss something?\n. i selected full control of private repositories, do i need to change something?. ",
    "allen-zeng": "I have the same problem. Our Enterprise GitHub deployment has private mode turned on, which means a token is not enough - authentication is still needed. Is there a way to supply credentials at the moment?. ",
    "kimdv": "@jpsim I can see that it works on SwiftLint now.\nCan you explain how you got it working?\nI'm getting the same error: https://dev.azure.com/aar-sef/TriforkSwiftExtensions/_build/results?buildId=73\nJust with a PR from the main repo: https://github.com/trifork/TriforkSwiftExtensions/pull/35\nI have added DANGER_GITHUB_API_TOKEN to my variable group with public access.. ",
    "CDRussell": "In case anyone else hits this, as a workaround, I manually exported the GIT_REPOSITORY_URL before invoking Danger\nexport GIT_REPOSITORY_URL=\"git@github.com/duckduckgo/android.git\"\nbundle install\nbundle exec danger\n\nAnd this let me get it building again.. ",
    "nicolas-brousse": "Looks like Danger::DangerfileDangerPlugin#import_dangerfile_from_github use request_source to download the Dangerfile.\nSince in my case I use GitLab, I guess that danger.import_dangerfile try to load it from my GitLab instance.. Sounds weird for me to could prefix with github: and having Danger trying to load Dangerfile from my GitLab instance with danger.import_dangerfile(github: \"pantographe/danger\").\nI didn't notice before, but the example I copied was without github:/gitlab: key. But yes, if I use github: it use the same code and I was expected to have my GitHub Dangerfile loaded.. ",
    "prokopsimek": "Same issue here.\nUsing Gitlab CI\nDangerfile:\ndanger.import_dangerfile(github: \"Applifting/danger\"). ",
    "Kyaak": "Yep, that's a nice idea.\nIs there any reason that only methods without attributes are selected?\nhttps://github.com/danger/danger/blob/b5b1ca80ff5f25cdd44cbdc2eb59ecbb4dfb18a7/lib/danger/danger_core/dangerfile.rb#L120\nIt seems you are trying to get a return value right?\nhttps://github.com/danger/danger/blob/b5b1ca80ff5f25cdd44cbdc2eb59ecbb4dfb18a7/lib/danger/danger_core/dangerfile.rb#L134\nMaybe we can access yard doc if available? . Yeah, maybe at this point, only core plugins should be printed.\nRelying on all plugins to be safe to call methods without parameters seems to be odd.\nFurthermore this breaks quite the usage of the verbose log, since most plugin methods which execute their intended \"plugin\" functionality will have attributes.\nThe profit to print 1/5 methods, where actually all methods are interesting is not so high.. I can see in ci_source/jenkins that this is strictly matched to two fields. For an ssh link the regex should be easy to capture everything after :. https://github.com/danger/danger/blob/8f9ba9472e9d1fd55add72f1898d60523b5c3b4a/lib/danger/ci_source/jenkins.rb#L86\nAn http/s link could habe another path so it is hard to find where the repository begins https://company.com/gitlab/first/second/project.git.\nCould we use the DANGER_XY_HOST env to match here correctly?. I took that from Getting Set Up\nDANGER_GITLAB_HOST=git.corp.evilcorp.com\nDANGER_GITLAB_API_BASE_URL=https://git.corp.evilcorp.com/api/v4\nSo you suggest another env for the project, that must be set before every danger run?\nI would rather go to check the HOST env variables and integrate them into the regex.. Sounds good \ud83d\udc4d . @orta \nAny updates on this one?. ",
    "freak4pc": "If anyone knows enough Ruby or knows this repo enough to at least direct me to the right area, I'd love take a crack at this! My attempt at this was unsuccessful, to say the last :D . Yeah that's what I already played with but I'm just not fluent with Ruby Specs, Fixtures, and all that jazz. Couldn't really get it to feel. Any help from anyone in this community would be highly appreciated \ud83d\ude4f . ",
    "colorbox": "I think this issue has solved.\nI research about this problem and find out that this problem derives from GitHub API.\nI posted a question on GitHub community and get answered that problem has solved.\nhttps://github.community/t5/GitHub-API-Development-and/How-can-I-create-PR-comment-on-the-file-that-includes-space/m-p/16503\nAfter getting answer, My PR to test this problem has been solved.\n@freak4pc  How about your PR on your repository?\nIs this issue solved?\n. I'll fix CI.. thank you for your additional commit \ud83d\ude4f . ",
    "btzc": "Yeah! So I've tried a few things. First I tried disabling using SSL to verify entirely using git config http.sslVerify false but still got the same output. I've also tested curling the Github API from that same machine using the authentication code I setup and it was able to give me a 200 response. If it helps I'm trying to set this up using Enterprise Github.. I set the following environment variables before running danger locally:\nexport DANGER_GITHUB_HOST=our_github_host\nexport DANGER_GITHUB_API_BASE_URL=https://our_github_host/api/v3\nexport DANGER_GITHUB_API_TOKEN=our_authentication_token\nI've tried setting the API to just http instead of https but it threw a different error:\n/Users/my_user/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/danger-5.8.2/lib/danger/request_sources/github/github.rb:131:in `fetch_issue_details': undefined method `[]' for nil:NilClass (NoMethodError)\n. ",
    "javaguirre": "FYI I'm using this option \n\n. ",
    "serg-kovalev": "@orta Can you please review this PR?. ",
    "jmromanos": "It seems that it is my fault \ud83d\ude13 . I don't know how it got duplicated. I'll fix it in a moment \ud83d\udc4d . ",
    "rist": "could to recheck this PR - as some checks failed it wasn't merged. I forked and added some debug statements and get this:\n```\nPOST https://github.beeone.at/api/v3/repos/BeeOne-Mobile/george-app-ios/statuses/3a0d5c1ea3f1325bc19ed6868c82e81df9077dbc: 422 - Invalid request.\nFor 'properties/target_url', nil is not a string. // See: https://developer.github.com/enterprise/2.16/v3/repos/statuses/#create-a-status\n[\"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/response/raise_error.rb:16:in on_complete'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/response.rb:9:inblock in call'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/response.rb:61:in on_complete'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/response.rb:8:incall'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/middleware/follow_redirects.rb:73:in perform_with_redirection'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/middleware/follow_redirects.rb:61:incall'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/request/retry.rb:128:in call'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/rack_builder.rb:143:inbuild_response'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/connection.rb:387:in run_request'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/faraday-0.15.4/lib/faraday/connection.rb:175:inpost'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/sawyer-0.8.1/lib/sawyer/agent.rb:94:in call'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/connection.rb:156:inrequest'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/connection.rb:28:in post'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/octokit-4.13.0/lib/octokit/client/statuses.rb:43:increate_status'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/request_sources/github/github.rb:222:in submit_pull_request_status!'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/request_sources/github/github.rb:204:inupdate_pull_request!'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/danger_core/dangerfile.rb:247:in post_results'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/danger_core/dangerfile.rb:278:inrun'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/danger_core/executor.rb:28:in run'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/lib/danger/commands/runner.rb:70:inrun'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in run'\", \"/Users/georgegoci/gems/ruby/2.3.0/gems/danger-5.12.0/bin/danger:5:in'\", \"/Users/georgegoci/gems/ruby/2.3.0/bin/danger:22:in load'\", \"/Users/georgegoci/gems/ruby/2.3.0/bin/danger:22:in'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli/exec.rb:74:in load'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli/exec.rb:74:inkernel_load'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli/exec.rb:28:in run'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli.rb:424:inexec'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/vendor/thor/lib/thor/command.rb:27:in run'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:ininvoke_command'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/vendor/thor/lib/thor.rb:387:in dispatch'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli.rb:27:indispatch'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/vendor/thor/lib/thor/base.rb:466:in start'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/cli.rb:18:instart'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/exe/bundle:30:in block in <top (required)>'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/lib/bundler/friendly_errors.rb:124:inwith_friendly_errors'\", \"/Library/Ruby/Gems/2.3.0/gems/bundler-1.16.3/exe/bundle:22:in <top (required)>'\", \"/usr/local/bin/bundle:22:inload'\", \"/usr/local/bin/bundle:22:in `'\"]\nAll green. Good on 'ya.\n```\nafter putting some hardcoded value into details_url it works. my ruby knowledge is really bad, but when trying to understand the flow in github.rb I assume that comment_result doesn't get any value assigned which contains a html_url value if the check in line 187 evaluates to false\nbut perhaps this was never a problem until the most recent github enterprise update?\nBut what I could offer is a PR simply containing a fallback for target_url and perhaps prints a more helpful error message than Danger does not have write access to the PR to set a PR status.. ",
    "interstateone": "Hi! I was having the same issue and this bugfix PR branch for ruby-git fixed the issue for us. Also contains an excellent explanation of the problem. Workaround was implemented by adding this to our Gemfile:\n```\nTemporary workaround for bug in binary file diffing\nhttps://github.com/danger/danger/issues/1055\nhttps://github.com/ruby-git/ruby-git/pull/405\ngem 'git', :git => 'https://github.com/jcouball/ruby-git.git', :branch => 'normalize_encoding'\n```. ",
    "RicardoBelchior": "By running locally you mean with danger local or danger pr ?\nRunning danger local , gives me:\n/Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/local_git_repo.rb:61:in `raise_error_for_missing_remote': \ndanger cannot find your git remote, please set a remote. And the repository must host on GitHub.com or GitHub Enterprise. (RuntimeError)\nBut I'm on Bitbucket, so I'm not sure if it's possible.\nAnd running: danger pr https://bitbucket.org/trinitymirror-ondemand/androidmirrornews/pull-requests/1319\nI get the output:\n/Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/find_repo_info_from_url.rb:22: warning: already initialized constant Danger::FindRepoInfoFromURL::REGEXPBB\n/Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/find_repo_info_from_url.rb:13: warning: previous definition of REGEXPBB was here\nTraceback (most recent call last):\n    16: from /Users/ricardobelchior/.rbenv/versions/2.5.3/bin/danger:23:in `<main>'\n    15: from /Users/ricardobelchior/.rbenv/versions/2.5.3/bin/danger:23:in `load'\n    14: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/bin/danger:5:in `<top (required)>'\n    13: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n    12: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/commands/pr.rb:57:in `run'\n    11: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/commands/pr.rb:57:in `new'\n    10: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/danger_core/environment_manager.rb:30:in `initialize'\n     9: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/danger_core/environment_manager.rb:30:in `new'\n     8: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/local_git_repo.rb:45:in `initialize'\n     7: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/local_git_repo.rb:95:in `found_pull_request'\n     6: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/pull_request_finder.rb:17:in `call'\n     5: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/pull_request_finder.rb:31:in `check_if_any_pull_request!'\n     4: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/pull_request_finder.rb:51:in `pull_request'\n     3: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/ci_source/support/pull_request_finder.rb:82:in `remote_pull_request'\n     2: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/request_sources/bitbucket_server_api.rb:35:in `pull_request'\n     1: from /Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/request_sources/bitbucket_server_api.rb:40:in `fetch_pr_json'\n/Users/ricardobelchior/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/danger-5.10.2/lib/danger/request_sources/bitbucket_server_api.rb:66:in `fetch_json': undefined method `request_uri' for #<URI::Generic:0x00007fcc16352318> (NoMethodError)\nSorry this is not very helpful. I'm glad to try out other things if you guide me through.. Maybe stupid question... but is it possible to run danger locally, given that I'm working on a Bitbucket repository? . Looks like the new feature you mentioned is for BitbucketServer, whereas I'm on bitbucket cloud \ud83d\ude1e \nLooking at the code in https://github.com/danger/danger/blob/master/lib/danger/ci_source/local_git_repo.rb\nI don't see any mention to Bitbucket Cloud. I was hoping that bitbucket server would also work for bitbucket cloud, but it seems not. \nAny other tip to see why danger is failing with that ParserError (in my original question) ? \nLike running bundle exec danger --verbose or something similar.... So, I decided to clone the repository and try running it on my machine... I add to change a lot of files and hardcoded some variables but finally got it running locally. And in the end... the danger script ran as expected. The question I now have is, why is it failing on my CI (Bitrise)? \nAlong the way, I encountered the same error I was looking for (JSON::ParserError). It happened whenever the request bitbucket_cloud_api#fetch_json failed and returned an empty json. In my case it failed because of wrong environment variables for the DANGER_BITBUCKETCLOUD_USERNAME/PASSWORD. But it can probably fail for other reasons too..\nAny tips?. Ok, it now looks like the problem is fixed after changing some stuff on Bitrise. Looks like the environment variables were not being made available at runtime \ud83e\udd37\u200d\u2642\ufe0f \nI think that, by now, I could prepare a pull request to allow running danger on bitbucket cloud, locally. Would you be interested on that ?\n. That's awesome! Thank you.. ",
    "leslau": "ruby\nreturn env[\"CI_MERGE_REQUEST_IID\"] if env[\"CI_MERGE_REQUEST_IID\"]\nreturn env[\"CI_MERGE_REQUEST_ID\"] if env[\"CI_MERGE_REQUEST_ID\"]\nmaybe something like this?. ",
    "pbendersky": "This was fixed with #1072 . @orta while I tend to agree as an ideal, I don't think we can do it as it is.\nThe gitlab gem uses GitLab's API v4. That API expects a Merge Request IID instead of a Merge Request ID (see the docs), and it has since GitLab 9.0, released on March 2017, so that change needs to remain.\nI'll review the change of CI_MERGE_REQUEST_PROJECT_PATH, which is newer (introduced in 11.6) , and keep backwards compatibility.\nI should note, though, that as it was, it was broken for me: danger would try to fetch merge requests for the fork project instead of the main project. Maybe there's an alternative for older versions that I can explore.. @orta just updated the PR with support for the older variables as a fallback.. I saw it, and it doesn't appear to be needed... Just including the new path of the file and the line seems to be enough (and the commit hashes, that we always have).. Will do. What's the desired funcionality? When is a comment edited / deleted?. I think my latest commit covers the missing cases with specs. In any case, feel free to review and comment :). I'll check, they were passing for me.... What version should it support? I'll fix the specs in that version.. How would that work? Older versions of the gitlab gem use the (now deprecated) v3 API.... @orta not sure why Circle failed the last time, but I think the tests are ok now.. @JanPawlov what is your GitLab server version?. I can't reproduce it... any other info you can provide me? Are you using forks? What branch are you trying to merge to?. Just was able to reproduce it. I'll try to fix it during the day.. Do you know if the linter message is on one of the modified files or not? Thank you. @JanPawlov sorry! Just uploaded a fix. Would you mind trying it before we merge?\nYou can change your Gemfile as:\ngem \"danger\", :git => \"https://github.com/pbendersky/danger.git\", :branch => \"issue-1106\". They should be added to the regular comment, not the last inline comment. I do wonder if this is a product of your MR having the inline comments already present?\nCan you delete all the danger generated comments and retry?. Sounds ok to me then. On a new MR it should work properly. I don\u2019t think it\u2019s worth looking into the issue as it happened if you had previously run another version of danger. Do you agree?. Hopefully! Thanks again for the feedback!. Are there any comments generated by danger in that MR? That code path should execute to edit the last comment.\nWhat does the API call for https://git.domain.com/api/v4/projects/my_project/merge_requests/37/notes return?. What about \nhttps://git.domain.com/api/v4/projects/my_project/merge_requests/37/discussions? Do you get results there? How many of those are generated by danger? Any of those not inlined? Thank you!. I think so. ",
    "marcuswu0814": "Hi @orta, really thanks for quick reply. From here, I can't find any doc for setting the danger-id, how to do that?. It seems work, really thanks. \ud83d\ude4f\nSent with GitHawk. ",
    "RtgrV": "Yea, it seems it can't parse the json data. So probably it returns an error. Is there any way I can see the error?\nBut it is weird that with a normal authorized GET call I am able to get it from our bitbucket server. And it actually is in the right format (from what I saw in code).. Good thinking, I can try with a Fork. Thanks! The verbose one didn't say anything differently.\nHmm good to know, I'll start diving then.. I didn't have the time to look into the issue and due to circumstances I won't be able to do it soon. Some priorities shifted. I'm sorry, I wish I was able to use such a nice product :-). ",
    "AlexDenisov": "Shall I submit the patch then?. Resolved via #1085 . Seems like Windows box on CI does not feel good.. Sounds great, @orta. I've seen some duplication there as well, so this feature may require some ground work before.\nI will do some more digging into the matter to see how to approach it and will get back to you then, hopefully with some plan or pull requests :). ",
    "JanPawlov": "{\"version\":\"11.8.0\",\"revision\":\"ce13864\"}. There are no forks in the project, MR is to default branch. OK. I did some testing.  I resolved all issues found by Detekt, job succeded.\nThen I noticed I did not use inline mode, so i switched to android_lint.lint(inline_mode: true), job succeded and linter messages were successfully added to changed files.\nAfter that, I reverted all the changes that were caught by detekt initially. Some of them were successfully commented on the diff, but the job failed. So, the issue seems to be caused by some of detekt issues. \nFor example, job succeded when detekt found: \nRuleset: exceptions - 20min debt\n    TooGenericExceptionCaught - [e] at /builds/...\nRuleset: formatting - 5min debt\n    SpacingAroundCurly - [PsiElement(LBRACE)] at /builds/...\nBut failed when \nRuleset: exceptions - 20min debt\n    TooGenericExceptionCaught - [e] at /builds/...\nRuleset: formatting - 10min debt\n    NoUnusedImports - [Element(IMPORT_DIRECTIVE)] at /builds/...\n    SpacingAroundCurly - [PsiElement(LBRACE)] at /builds/...\nDespite the fact all issues that are in the changed files (NoUnusedImports, SpacingAroundCurly) are inlined were successfully commented.\nOn my last resort I removed all detekt issues (except TooGenericExceptionCaught, which is not in the modified files), and job failed with:\n/var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/request.rb:67:in `validate': Server responded with code 400, message: Bad Request. Request URI: https://git.domain.com/api/v4/projects/my_project/merge_requests/1/discussions/98cfb80d9b3ff234b5bdc2124b8ad98d2d4cb65b/notes/35931 (Gitlab::Error::BadRequest)\n    from /var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/request.rb:46:in `block (2 levels) in <class:Request>'\n    from /var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/client/merge_requests.rb:284:in `update_merge_request_discussion_note'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:421:in `block in submit_inline_comments_for_kind!'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:374:in `reject'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:374:in `submit_inline_comments_for_kind!'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:335:in `submit_inline_comments!'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:187:in `update_pull_request_with_inline_comments!'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/request_sources/gitlab.rb:154:in `update_pull_request!'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/danger_core/dangerfile.rb:247:in `post_results'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/danger_core/dangerfile.rb:278:in `run'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/danger_core/executor.rb:29:in `run'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/lib/danger/commands/runner.rb:72:in `run'\n    from /var/lib/gems/2.6.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n    from /var/lib/gems/2.6.0/gems/danger-5.16.1/bin/danger:5:in `<top (required)>'\n    from /usr/local/bin/danger:23:in `load'\n    from /usr/local/bin/danger:23:in `<main>'\nThis might indicate problems with resolving an issue that is no longer in the code. I'll try to find some more patterns tommorow.. @pbendersky Will do just that\n. @pbendersky Works fine, however all the warnings that failed are are added to the last inline comment. This results is that I have warnings in the inline comment that are not related to the diff itself. Is this intentional behaviour? Could failed warning be added as a normal comment, so they are not linked to the wrong diff?. This might be the case. Ran danger before I cleared all the comments and all the warnings got posted into last inline comment. After clearing the comments there were no errors and everything was added into inline comments properly. After that I retried once again, some errors occurred, only this time all the warnings got posted as a regular comment, leaving inlines intact. \nTo test the behaviour I'm triggering 3 issues with the code, 2 of them are in the single file. I noticed that if I removed that extra issue from the code danger runs seamlessly,inline comment fails emerge when there is more than 1 issue per file.. I agree, this should be lookined into on a fresh MR with new release, I think we\u2019re slowly getting there with the funcionallity \ud83d\udc4c. Running danger on a fresh MR today resulted in \n/var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/request.rb:67:in `validate': Server responded with code 404, message: 404 Not found. Request URI: https://git.domain.com/api/v4/projects/my_project/merge_requests/37/notes/36755 (Gitlab::Error::NotFound)\n    from /var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/request.rb:46:in `block (2 levels) in <class:Request>'\n    from /var/lib/gems/2.6.0/gems/gitlab-4.10.0/lib/gitlab/client/notes.rb:269:in `edit_merge_request_note'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/request_sources/gitlab.rb:215:in `update_pull_request_with_inline_comments!'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/request_sources/gitlab.rb:154:in `update_pull_request!'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/danger_core/dangerfile.rb:247:in `post_results'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/danger_core/dangerfile.rb:278:in `run'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/danger_core/executor.rb:29:in `run'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/lib/danger/commands/runner.rb:72:in `run'\n    from /var/lib/gems/2.6.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n    from /var/lib/gems/2.6.0/bundler/gems/danger-51ac60a9599a/bin/danger:5:in `<top (required)>'\n    from /var/lib/gems/2.6.0/bin/danger:23:in `load'\n    from /var/lib/gems/2.6.0/bin/danger:23:in `<main>'. There are no notes on this MR and https://git.domain.com/api/v4/projects/my_project/merge_requests/37/notes returns [ ]. There should be 3-4 issues, not necessarily inlined. MR was fresh, there was no comments (/notes and /discussions returned emprty arrays). \nI reran the job and it succeeded.. ",
    "davidstosik": "@orta Thanks for the early review! \ud83d\ude47 \nStill trying to figure things out with Gemfile, gemspec and dependency, but I'll get there. \ud83d\ude05 . \u267b\ufe0f This is a drastic suggestion, but I'm interested in alternatives if there are any.\nMaybe could use a different gem to parse Github-flavored Markdown (such as CommonMarker)?. I thought dependencies where sorted alphabetically, so I put this conditional here, but then noticed cork is after terminal-table. I'm open to moving this somewhere else if it looks better.. > Does that mean forcing 2.3.0 only?\nYes, kramdown 2 and above requires Ruby 2.3 or more recent.\nMoreover, kramdown-parser-gfm has dependencies that will fail to install with Ruby < 2.3, making the following impossible as well:\nrb\nspec.add_runtime_dependency \"kramdown\", \">= 1.5\"\nspec.add_runtime_dependency \"kramdown-parser-gfm\", \"~> 1.0\"\n\nMaybe Danger needs a major version update?\n- keep requiring \"kramdown\", \"~> 1.5\" in 5.x\n- switch to \"kramdown\", \"~> 2.0\"  with the addition of \"kramdown-parser-gfm, \"~> 1.0\" in 6.x, with the added requirement of Ruby 2.3+\n5.x can keep getting bugfixes for a few months to allow a smooth transition. . ",
    "Goos": "@orta yeah the commit exists but it seems like it's trying to look at the wrong remote (origin) instead of my fork.. @orta thanks for the quick response \u2013 this part right here looks like it's defaulting to the origins, if I'm reading it correctly. Would it be possible to use the slug to construct a URL instead somehow?. ",
    "sobolevn": "I have created a security issue on Gitlab's tracker. Since they use it for production. Maybe I am just missing something.. ",
    "houndci-bot": "Do not write to stdout. Use Rails' logger if you want to log.\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Line is too long. [96/80]\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Line is too long. [83/80]Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Line is too long. [100/80]\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Trailing whitespace detected.\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Do not write to stdout. Use Rails' logger if you want to log.\n. Redundant self detected.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Line is too long. [100/80]\n. unexpected token tSTRING\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Space inside string interpolation detected.Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Redundant curly braces around a hash parameter.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Space inside string interpolation detected.Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Do not use parentheses for method calls with no arguments.\n. Redundant curly braces around a hash parameter.\n. Useless assignment to variable - token.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Line is too long. [81/80]\n. Line is too long. [100/80]\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n. Line is too long. [108/80]\n. Line is too long. [108/80]\n. Line is too long. [104/80]\n. Line is too long. [94/80]\n. Use %r around regular expression.\n. Redundant return detected.\n. Line is too long. [81/80]\n. Favor unless over if for negative conditions.\n. Favor unless over if for negative conditions.\n. Use the new Ruby 1.9 hash syntax.Space inside { missing.Space inside } missing.\n. Use the new Ruby 1.9 hash syntax.Space inside { missing.Space inside } missing.\n. Line is too long. [94/80]\n. Line is too long. [98/80]\n. Line is too long. [100/80]\n. Line is too long. [98/80]\n. Line is too long. [98/80]\n. Line is too long. [98/80]\n. Line is too long. [88/80]Space missing after comma.Space found before comma.\n. Line is too long. [99/80]\n. Line is too long. [106/80]Unnecessary spacing detected.\n. Line is too long. [86/80]\n. Extra empty line detected at block body end.\n. Align the operands of a condition in a return statement spanning multiple lines.\n. Use the new Ruby 1.9 hash syntax.Space found before comma.\n. Align the operands of a condition in a return statement spanning multiple lines.\n. Extra empty line detected at method body end.\n. Align the operands of a condition in a return statement spanning multiple lines.\n. Extra empty line detected at block body end.\n. Extra empty line detected at class body end.\n. Use the new Ruby 1.9 hash syntax.\n. Use the new Ruby 1.9 hash syntax.\n. Use the new Ruby 1.9 hash syntax.\n. Trailing whitespace detected.\n. Indent the first parameter one step more than the start of the previous line.Indent the first line of the right-hand-side of a multi-line assignment.\n. unexpected token tLBRACK2\n(Using Ruby 2.3 parser; configure using TargetRubyVersion parameter, under AllCops)\n. unexpected token tLBRACK2\n(Using Ruby 2.3 parser; configure using TargetRubyVersion parameter, under AllCops)\n. Extra empty line detected at method body beginning.\n. Extra empty line detected at class body beginning.\n. ",
    "BenchR267": "There is actually a difference between Bitbucket and Bitbucket Server. Bitbucket Server is just the new name for Stash. Bitbucket is the Github-like service. So it's like Github and Github Enterprise.\n. ",
    "WolfgangD": "if I understood this correctly this is the template for the comment that get's posted to bitbucket. As the systems should be similar and the comment looks okay; I decided to stay with the same template.\n. ",
    "yuki24": "Are you going to deprecate it eventually or fail will be available as-is but it's just not recommended?. Then alias should be fine :+1:. "
}