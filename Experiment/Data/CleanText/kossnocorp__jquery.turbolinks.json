{
    "kossnocorp": "Thanks from my heart!\n. Thanks!\n. I released gem v0.2.0 with your fix.\n. https://github.com/rails/turbolinks/pull/86 ;-)\n. Without jquery.turbolinks all works in normal way?\n. Can you show me your manifest file?\n. Thanks! I'm going to create test application and debug this issue. Give me 30 minutes :-).\n. Got it! Thanks. New version will be ready soon.\n. Done. Please update jquery-turbolinks to v0.2.1: https://rubygems.org/gems/jquery-turbolinks/versions/0.2.1\n. Now everything is ok?\n. Good.\n. not working for me... When i follow a link it breaks the foundationNavigation (as an example). Please let me know if you did anything special to get this to work. Thanks\n@Flink can you describe how it breaks? I'm not sure I clearly understand problem.\n. @elfassy thank you!\n. Ok :smile: \n. Good catch! Thanks for reporting! I'm gonna fix a soon as possible.\n. :beers: \nFix released in 1.0.0-rc. Can you check is everything is ok?\n. @glebm you are right, this issue need in an additional commit.\n. I was released jquery-turbolinks v1.0.0-rc1, so can you confirm what everything works as expected?\n. Thanks!\nIf something is wrong with this issue, please let me know. I have plans to refactor code base and release 1.0.0 soon.\n. @gbchaosmaster thanks!\n@jokklan but adding turbolinks as dependency doesn't hurt you?\nAlso it's good to determine turbolinks version because in future jquery.turbolinks may be merged in main repo.\n. Your changes released in 1.0.0-rc. Thanks!\n. You problem should be solved by https://github.com/kossnocorp/jquery.turbolinks/commit/6c750972d04b62eeadfc85469537aaea60125eda.\nI was released jquery-turbolinks v1.0.0-rc1, so can you confirm what everything works as expected?\n. Great :smile:. Thank you for reporting!\n. Now it's broken again and probably not be fixed in near future. Sorry but if you want to use latest version of jquery.turbolinks you should change your code and avoid document binding inside $(->) in future.\n. @ericf not every person read code what he uses (I wish but it's cruel reality) and jQuery Turbolinks has very tricky behaviour. So I think is good idea to have detailed explanation how it works internally to prevent misunderstandings (monkey-patching, store callbacks in internal array and so on). /cc @rstacruz \n. @rstacruz current jQuery Turbolinks realisation is very flexible and can be used not only with original Turbolinks (for example @jokklan uses it with pjax). But I think it's be better to use your implementation in v2.0.0 because this is jQuery Turbolinks, but jQuery Anything. But v1.0.0 still can be used with pjax or anywhere else. What do you think about it?\n. @rstacruz can you push this code into branch v2.0.0?\n. Thanks!\n. Thanks!\n. This problem because of https://github.com/kossnocorp/jquery.turbolinks/blob/master/src/jquery.turbolinks.coffee#L27 and this: https://github.com/kossnocorp/jquery.turbolinks/issues/8. Any ideas how to fix it?\n. Look like I need to hack $.fn.on method to prevent double handlers on document.\n. Thanks!\n. jquery-turbolinks-1.0.0.rc2 with fix for this issue is available on RubyGems.\n. README was updated. Thanks for reporting!\n. Thanks!\n. Thank you a lot!\nI'm gonna release it as v1.0.0-rc2.\n@rstacruz can you also describe problem with [B] and recommended solution in README?\n. I see few problems:\n- console.log can be undefined;\n- better to use console.error;\n- what will happen with call stack in this case?\n. @rstacruz agree. It's important to save ability to manually catch errors.\n@uranazo can you do it? Also please do not change version number and don't commit JS too. Thanks!\n. @uranazo ping :beers:!\n. @uranazo do you want to finish this pull-request or better to done it by myself?\n. @uranazo no problem. Thanks a lot any way!\n. @rstacruz I'm also didn't know that. Agree with you, jQuery Turbolinks should not change jQuery behaviour.\n. @rstacruz thanks! \nDone.\n. Done!\n. It definitely should be in readme.\n. Are you sure what every module are wrapper into $(function() {}) and not (function() {})()? If yes, what kind of CoffeeScript subset do you use?\n. No problem :v:\n. Please show what is inside of your application.js\nOn Oct 17, 2013, at 4:09 PM, Abhinay Kumar notifications@github.com wrote:\n\nAfter following all the instructions i am getting this error \n\"Sprockets::FileNotFound in StaticPages#home\nShowing /home/abhinay/rails_projects/sample_app/app/views/layouts/application.html.erb where line #9 raised:\ncouldn't find file 'jquery.turbolinks'\n(in /home/abhinay/rails_projects/sample_app/app/assets/javascripts/application.js:16)\n\"\ncan you please tell me what is Happening here.\n\u2014\nReply to this email directly or view it on GitHub.\n. @abhinay302 thank you!\n. @sairam is it an actual problem, or it's not relevant anymore? Sorry for such a long delay, I don't work with Turbolinks for last 3+ years. Also, see https://github.com/kossnocorp/jquery.turbolinks/issues/56#issuecomment-202255494\n\nClosing this issue because it's 3 years old. Please reopen if it's actual.\n. You think it should to? How you going to use it? This maybe really unexpectable behaviour because you don't get ajax stop event when you navigating by regular get request.\n. Closing this issue. If you really need to catch it, just add handler to one of Turbolink events.\n. Sorry, I'm not involved into Turbolinks world for three years already (I'm a React-hipster \u00af_(\u30c4)_/\u00af) and it's hard to me to make an adequate conclusion regarding depreciation issue.\nI completed trust @rstacruz, but I'll love to see jQuery Turbolinks moving forward while there are users. If there are people who want to take control over the project, please welcome (on any your conditions).\n. @rstacruz it's possible to re-build jquery.turbolinks on top of onmount API to simplify migration?\n. Please see https://github.com/kossnocorp/jquery.turbolinks/issues/56#issuecomment-202255494\nTL;DR: I'm looking for a new project owner.\n. @dalpo please upgrade version to 4.4: https://github.com/kossnocorp/jquery.turbolinks/blob/master/package.json#L23\nIt should help with Travis CI.\n. Please see https://github.com/kossnocorp/jquery.turbolinks/issues/56#issuecomment-202255494\nTL;DR: I'm looking for a new project owner.\n. I just realized that tests are green :wink:. WDYT about https://github.com/kossnocorp/jquery.turbolinks/pull/58?\n. @dsandstrom thanks!\n. :+1:\n. @rstacruz let's make it finally deprecated. Sorry that it took me that long.\nCould you please update README and direct people to your solution? I did really lost track and don't understand all the issues of jquery.turbolinks, so I won't be able to clearly communicate it.. Lovely, thank you a lot!. Time flies!\n. :+1: \n. ",
    "anayden": ":-)\n. ",
    "Flink": "Yes, except for bindings to $.ready() of course :) But there is no error when loading foundation without jquery.turbolinks.\n. Here it is:\n//= require jquery\n//= require turbolinks\n//= require jquery.turbolinks\n//= require foundation\n//= require jquery_ujs\n//= require jquery.ui.core\n//= require jquery.ui.widget\n//= require jquery.ui.autocomplete\n//= require rails-timeago\n//= require formatcurrency\n//= require_tree ./frontend\n. Great! Thanks :)\n. Yes everything\u2019s ok with foundation now, thanks a lot! :)\n. @kossnocorp  Seems you can re-close the issue ;)\n. ",
    "elfassy": "@kossnocorp I posted that message and then deleted it. It was not an issue with jquery.turbolinks but with my setup. In fact i can validate that jquery.turbolinks works great! Thanks\n. ",
    "glebm": "Is something else\n. :beers: \n. Everything is OK with how I use it! Thanks!\nHowever I am a bit concerned by $.isReady never being set to false\n. I wonder what happens if the following page gets requested by turbolinks\n<body>\n    <script>$(function(){  console.log($('#el').length) });</script>\n    <div id=\"el\"></div>\n</body>\n. I would've tested it, but it's 5:30 AM here\n. Yes, works great! \nThere are still some issues with results of the browser \"back\" button, but those may be fixed by the last turbolinks commits -- I'll let you know \n. jQuery turbolinks should probably clear all event listeners on document\nFor now a workaround is not to attach this inside document ready!\n. Are you thinking of preventing double handlers by checking if a function has already been binded?\nSomething like this? (not tested)\n```\ndiff --git a/src/jquery.turbolinks.coffee b/src/jquery.turbolinks.coffee\nindex 405e608..0def112 100644\n--- a/src/jquery.turbolinks.coffee\n+++ b/src/jquery.turbolinks.coffee\n@@ -24,7 +24,6 @@ turbolinksReady = ->\n# Fetch event handler\n fetch = ->\n-  $(document).off(undefined, '**')\n   $.isReady = false\n# Bind ready to DOM ready event\n@@ -47,6 +46,14 @@ $.setFetchEvent = (event) ->\n     .off('.turbolinks-fetch')\n     .on(event + '.turbolinks-fetch', fetch)\n+originalOn = $.fn.on\n+$.fn.on = (types, selector, data, fn) ->\n+  if selector == document && fn\n+    for type in types when fn\n+      handlers = $._data(@, 'handlers')[type] || []\n+      return @ for h in handlers when h == fn\n+  originalOn.apply(@, arguments)\n+\n # Bind ready to Tubolinks page:load\n $.setReadyEvent('page:load')\n```\n. Whoever wants to test if this prevents double submits, you can use:\ngem 'jquery-turbolinks', github: 'glebm/jquery.turbolinks', branch: 'refs-12'\n. Double-firing in the referred case happens because it's binded in jQuery(->) which gets re-evaluated every page:change\n. I was referring to https://github.com/kossnocorp/jquery.turbolinks/issues/8. That issue is the reason jquery.turbolinks started clearing the document events on fetch:\n$(document).off(undefined, '**')\nWhich is why your code above will stop working after the first fetch.\nMy patch removes the off, but adds a duplication check on on\n. This breaks https://github.com/kossnocorp/jquery.turbolinks/issues/8\n. #8 is [B] by the way.\nA way to sort of fix both is to override on to ignore duplicate bindings on document\nNote that although doing [B] might seem strange, it is actually quite common (i.e. happens in a lot of codebases that I've seen). \n. What I am talking about is overriding on + removing off completely (like in this pull request). Such hack would make both [A] and [B] work! (Overall, it is more important that [A] works of course.)\n/cc @kossnocorp \n. The handler is called twice because Turbolinks 5, unlike the Classic one, calls turbolinks:load on the initial page load as well. Additionally, turbolinks:load is also called on restores from cache.\nHowever, there is a bigger elephant in this room:\nTurbolinks 5 caches the body by cloning it, which means none of the bound event handlers are preserved (unlike Turbolinks classic).\nThis means all of the DOM transformations on load need to be either idempotent, or the transformation should be reverted before caching (this effectively means the user must call old-school plugin destructors on turbolinks:before-cache).\njQuery.Turbolinks could be rewritten to do something like this:\njs\njQuery(function() {\n  if (!('Turbolinks' in window || !window.Turbolinks.supported)) {\n    triggerOnPageLoad();\n  } else {\n    // jquery.turbolinks must be required before Turbolinks, so that\n    // the `turbolinks:load` event will not have triggered yet.\n    document.addEventListener('turbolinks:load', () => {\n      triggerOnPageLoad();\n    });\n  }\n});\nHowever, because of the aforementioned changes in the Turbolinks 5 caching mechanism, jquery.turbolinks can no longer just \"make\" the old stuff work unless the user disables Turbolinks 5 Caching entirely.\nWe would need to instruct the users to make the DOM modifications idempotent or remind them to revert these on turbolinks:before-cache, e.g.:\njs\n$(() => { $('select').select2() }\ndocument.addEventListener('turbolinks:before-cache', () => {\n  $('select').select2('destroy');\n  $('.select2-drop, .select2-drop-mask').remove();\n});\n. Can this be merged and a new version released?\n. ",
    "jokklan": "This is not necessarily a good feature. I personally use this gem with pjax instead of turbolinks, by adding $.setReadyEvent('pjax:end'); to my application.js file.\n. ",
    "dinershtein": "forgot to say, that $(document).on is nested in $(document).ready\n. Works like a charm\nThank you!\n. ",
    "rstacruz": "\nforgot to say, that $(document).on is nested in $(document).ready\n\nCurious, isn't the better solution to this to move it outside $(document).ready?\n$(document).off(undefined, '**') will break some 3rd-party script behavior, like rails_ujs's. I reverted from v1.0.0-rc1 to v0.2.1 (which doesn't have this) to fix it.\n. Hm, closing this\u2014I don't think there's a solution to this. If anyone has further insight, just leave a comment or create a new issue.\n. What sort of documentation did you have in mind?\n. As an exercise, I tried to refactor jQuery.Turbolinks to remove the main 'complex' things that may need documentation (IMHO), $.setReadyEvent and $.setFetchEvent. Here's how it turned out: https://gist.github.com/rstacruz/5308599\n(Not saying it should be merged in, but it kinda demonstrates how much impact one feature has made to the codebase.\n. I don't have a strong stance on the issue, really. :-)\nAlternate take: how about in 2.0, consider API changes that would make documentation less necessary? Here's how it is now:\njavascript\n$.setFetchEvent('pjax:start');\n$.setReadyEvent('pjax:end');\n$.isReady;\nPutting everything in a namespace might make things more obvious:\njavascript\n$.turbo.use('pjax:start', 'pjax:end');\n$.turbo.isReady;\n(Proof of concept: https://gist.github.com/rstacruz/5308759)\n. Done.\n. -1 on this... changing jQuery behavior (supressing double-binding) seems like a very bad idea.\nIf events are double-fired, they are most likely bound twice. If they are bound twice, they're most likely executed twice because you have your script tags in <body>, not <head>.\nTry moving all your scripts to <head>, and ensuring that your load order is jquery.js -> jquery.turbolinks.js -> other scripts -> turbolinks.js.\n. Rails-ujs doesn't work inside a jQuery(->) block. It hooks events via delegate ($(document).delegate('[data-method]', function() {...} )), not binding to the elements directly.\nI suspect that you only need change your load order to this:\nhtml\n<html>\n<head>\n  <script src='jquery.js'></script>\n  <script src='jquery.turbolinks.js'></script>\n  <script src='jquery_ujs.js'></script>\n  <!-- other scripts here -->\n  <script src='turbolinks.js'></script>\n</head>\n<body>\n  ...\n</body>\n</html>\nNote that it's inside <head> and not inside the body.\n. Why is the duplicate check of on needed?\nIf you bind your delegates (eg, $(document).on('click', 'button', ..)) outside a $(document).ready wrapper, double-binding shouldn't be a problem.\n. I think this can be closed now with 1.0.0-rc2. :)\n. Here's how I'd do this:\nSolution 1: move the code to a JS file\nMove the code to a JS file instead of putting it inline in a <script> tag.\nYour problem with this, though, is that it'd  be called on all pages, while you only intend it to work on a certain page. To get around this, add a class to the <body> tag that marks the correct page:\njavascript\n$(function() {\n  if ($(\"body\").is(\".profile-page\") {\n    window.handler = new Handler().init();\n  }\n});\nSolution 2: Don't use a document.ready wrapper\nIt's redundant: since your intention is for it to run after all DOM elements are in place, and your scripts are placed after all the DOM elements (presumably), there's no need for you to wrap it in a $(document).ready wrapper.\nhtml\n<script>\n    window.handler = new Handler().init();\n</script>\n. Related: rails/turbolinks#167\n. Even if there's a patch to override on to disallow duplicates, this will still break the behavior of rails_ujs.\nDespite [B] existing in many codebases, [A] still the technically-superior solution as there would be less code invoked on every page load, and less code needed from Turbolinks or jQuery.Turbolinks to work. [A] exists in many codebases as well.\n. Ah, my mistake. How can you reliably handle duplicates, though? Let's say:\n``` js\nvar onload = function() {\n  $(document).on('click', 'a.button', function() {\n    console.log(\"Clicked!\");\n  });\n};\n// Call it twice:\nonload();\nonload();\n```\nThe handler (the anonymous function) on the two calls will be different instances of Function. To illustrate:\n``` js\n// Let's say we monkey-patched $.fn.on with something like this:\nvar handlers = [];\nfunction addHandler(handler) {\n  for (var i = 0; i < handlers.length; ++i) {\n    if (handler === handlers[i]) {\n      console.log(\"Duplicate found!\");\n    }\n  }\n  handlers.push(handler);\n}\n// Then let's simulate a $(...):\nvar onload = function() {\n  addHandler(function() { console.log(\"Hello\"); });\n};\n// And call it twice:\nonload(); onload();\n```\nThis example will not yield \"Duplicate found!\" because the functions created in the two onload() calls are different.\n. Looking at your code, it looks like the same handler === handlers[i] comparison is used. I tried injecting a console.log in there to intercept when it happens:\n``` coffee\noriginalOn = $.fn.on\n$.fn.on = (types, selector, data, fn) ->\n  if selector == document && fn\n    for type in types when fn\n      handlers = $._data(@, 'handlers')[type] || []\n      for h in handlers when h == fn\n        console.log \"Double-binding prevented!\" # <-- here\n        return @\n  originalOn.apply(@, arguments)\nSimulate calling the onload handler twice\nfor i in [1..2]\n  $(document).on 'click', 'a.button', ->\n    alert \"Clicked\"\n```\n...as expected, it doesn't yield \"Double-binding prevented!\" for the same reason. I also tried other ways of comparison (handlers.indexOf(h)).\nThere will never be a comparison that will work except:\ncoffee\nfor h in handlers when h.toString() is fn.toString()\n...but personally, I'm not comfortable with this approach because Function.prototype.toString behavior is not standardized. While it works on Webkit and Gecko, there's no guarantee it'll work elsewhere.\n. Also, some relevant reading: https://coderwall.com/p/ypzfdw :-)\n. Can't this be solved by underscore.js's once?\n$ _.once ->\n  # do this only once\nThe implementation of that is pretty simple, like so:\nonce = (fn) ->\n  ran = false\n  ->\n    return if ran\n    ran = true\n    fn.apply this, arguments\nOn Saturday, February 23, 2013, Lu\u00eds Ferreira wrote:\n\nI came across this problem when trying to trigger callbacks on the context\nof a single page, i. e., in one page I wanted to run some JS that should\nnot be ran on another page.\nSince the stuff on the  will only be evaled once, I added this code\nto the body, which means it will be ran every time and for non-idempotent\nfunctions this is a problem.\nI solved by having a special function called run_once, that is not added\nto the callbacks, and runs only on the context of the page.\nIf this makes any sense I'll be glad to add tests to it. If there's a\nbetter way of doing it, even better.\nYou can merge this Pull Request by running\ngit pull https://github.com/zamith/jquery.turbolinks master\nOr view, comment on, or merge it at:\nhttps://github.com/kossnocorp/jquery.turbolinks/pull/23\nCommit Summary\n- Adds named callbacks\n- Adds a run_once function\nFile Changes\n- M src/jquery.turbolinks.coffeehttps://github.com/kossnocorp/jquery.turbolinks/pull/23/files#diff-0(9)\n- M vendor/assets/javascripts/jquery.turbolinks.jshttps://github.com/kossnocorp/jquery.turbolinks/pull/23/files#diff-1(20)\nPatch Links:\n- https://github.com/kossnocorp/jquery.turbolinks/pull/23.patch\n- https://github.com/kossnocorp/jquery.turbolinks/pull/23.diff\n. You can do it like so:\n\n$(once(function () {\n  ...\n}));\n...just offering alternative solutions here, @kossnocorp would have to be\nthe one to decide on how jQuery.turbolinks should move forward with this.\nOn Saturday, February 23, 2013, Lu\u00eds Ferreira wrote:\n\nYes, it is possible, thanks for the tip, but in my case it would mean\ndoing something like this:\nvar fun = _.once(function(){\n  sms_sender.init();\n  conversation_scroller.init();\n});\njQuery(function($){\n  fun(); <-- This is registered as a callback on jquery.turbolinks\n});\nInstead of this:\njQuery(function run_once($){\n    sms_sender.init();\n    conversation_scroller.init();\n});\nPlus, the changes to jquery.turbolinks are about the same size in number\nof lines as the once function and with my solution you don't have to load\nunderscore.js, nor define the once function if you do not wish to load it\ncompletely.\nSo, I believe these are two valid solutions for the same problem, but I\nstill prefer mine in this particular situation.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kossnocorp/jquery.turbolinks/pull/23#issuecomment-13991125.\n. I also don't like this approach for these reasons:\n1. It relies on Function.prototype.name, which is not guaranteed to work. It's a non-standard property (it's not present in any version of ECMAScript), and it is very possible for function names to be munged out by JS compressors in production code.\n2. You can't make named functions in CoffeeScript.\n3. With this solution, you can only have one run_once per scope.\n4. It breaks user's expectations of the behavior of $, as this is not jQuery-standard behavior. Changing the internal name of a function to change its behavior is not an obvious expectation for users.\n5. The requirement to name your callback run_once implies that jQuery.Turbolinks will be suggesting that you use underscored_names in your project. Not only is this inconsistent with the rest of jQuery.Turbolinks, but a general-purpose library should not force that convention to its users.\n\nAdd these to my previous reason 6. it's something that can be accomplished by implementing your own once() function, or just otherwise making your callback idempotent through other means.\nFor these reasons, I'm closing this request, sorry. You can implement a simple run-only-once callback with this: https://gist.github.com/rstacruz/5024624\n. Actually its probably better to throw it after.\nOn Saturday, March 16, 2013, Sasha Koss wrote:\n\nI see few problems:\n- console.log can be undefined;\n- better to use console.error;\n- what will happen with call stack in this case?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kossnocorp/jquery.turbolinks/pull/24#issuecomment-14987325\n.\n. Perhaps it's best to:\n\ncatch e\n  setTimeout (-> throw e), 0\n...so multiple errors will be handled. However, hmm--what's jQuery's\ndefault behavior on this?\n. Just realized that jQuery's default $(document).ready behavior is to stop when an error is encountered, making the current behavior consistent with jQuery's default, so I vote that this change not be merged in. I believe it's always better to follow POLS.\n. This is intended behavior. That event you bound to $(window) will not disappear just because you loaded a new page.\n. Oh man, seems like jQuery(function($) { .. }) isn't working anymore as part of the move to use jQuery's own triggering mechanism for 2.0.\n. Just issued a fix. See if this helps\u2014it should now work as expected.\nFor now, you'll need to upgrade to the latest unreleased version to try it out.\nruby\ngem 'jquery-turbolinks', github: 'kossnocorp/jquery.turbolinks'\n$ bundle update jquery-turbolinks\n. @kossnocorp I've bumped to v2.0.1 (and even drafted a release in /releases) \u2014 feel free to rake release whenever :)\n. It's specifically bad in the case that you're using jquery.turbolinks, because the very raison d'\u00eatre of the plugin is to redefine $(function() {})'s behavior.\nOn any other case, it's still better to define your delegate event handlers ($(document).on(x, y, fn)) outside the $() construct because it ensures that your event handler is available to use even before document.ready is fired, which is great for long HTML pages that have the scripts loaded in the <head>.\nAlso, the jQuery(document).ready(function ($) { ... }) will not really help much: it's simply rewriting $(function() { ... }) to play well with other JS libraries that may be using $ (like mootools).\n. > While I like this style, (becuase it gaurantees events won't be bound twice, How can I reference functions that have been defined inside my jQuery.ready() block from outside the block?\nIf by \"referencing\" you mean to trigger the event handler, this can perhaps be done best using jQuery's event handler namespaces.\n``` js\n$(document).on('click.share-to-facebook', 'button.share', function() {\n  // ...\n})\n// Elsewhere:\n$('button.share').trigger('click.share-to-facebook');\n```\n- http://api.jquery.com/event.namespace/\n- http://css-tricks.com/namespaced-events-jquery/\n. > First, thinking for the gem, I would like to ask if there are any way that jquery-turbolink gem get to work even for the functions in wrappers because I can change my own functions, but I rather not need to change the scripts in the gems that Im using.\nMake a new script that's used to \"unload\" the previous script, and put that before the 3rd-party script in question. Such as:\njs\n//= require jquery\n//= require jquery-turbolinks\n..\n//= require jquery.foostar-unloader\n//= require jquery.foostar\n..\n//= require turbolinks\nAnd the contents of that script would be to \"undo\" anything that was done by the 3rd-party plugin:\njs\n$(function() {\n  // unbind the click handlers defined by jquery.foostar. (for example)\n  $(document).off('click.foostar');\n})\n..this would of course vary from script to script, but in general, that's a pretty safe bet.\n. Thanks! merging this in and moving the node down to the Troubleshooting section.\n. good catch, let's change that\n. I've updated the Readme to remove the Zurb section.\n. Done. Sorry about that! Re-releasing as v2.0.2.\n. Okay, pushed. Swell!\n. Interesting. I don't think there's any way to make $(document).on('ready') to work \u2014 the way jquery.turbolinks works is it hijacks the $.fn.ready callback-registration mechanism, not the event that triggers the ready event.\n. Anyway, I've updated the docs to highlight this fact. Thanks for the issue report!\n. Thanks for a well-formatted patch with tests!\n. v2.1.0 is out!\n. yes, keep in mind that anything you call in $(function() { ... }) has to be idempotent.\nYou need to do either one of these:\na. Unbind the functions before binding them, or\nb. Use jQuery event delegation outside the $(document).ready({ ... }) block.\nPerhaps you can split your .init() into things that will be ran only once (ie, outside document.ready), and things that will be ran on every page load (inside document.ready?)\n``` js\nApp.Supertestes.bindFunctions();\n$(document).ready(function () {\n  App.Supertestes.initOtherThings();\n});\n```\n. You'll need to un-initialize chosen somehow. Perhaps chosen isn't compatible with Turbolinks.\n. jquery-turbolinks is more of a hack than an elegant solution.\nperhaps this will be a better fit: http://ricostacruz.com/onmount/\n. Put that in your application.js which should be included in your <head> tag.\n. Yes, don't bind turbolinks events inside a $(...) :). hi folks \u2014 maintainer here but haven't checked in in a while. anyone got suggestions for a resolution?\n. is it inside $(function() { ... }) ?\n. is the script loaded inside <body>? place it on <head>.\n. nice, glad you had it sorted out!\n. wow, it's in vendor? maybe that's gotta change...\n. Motioning to deprecate this gem and not implement support for rails 5.\nAnyone in favor/opposed? @kossnocorp\nOn Friday, March 25, 2016, Andrea Dal Ponte notifications@github.com\nwrote:\n\n[image: :+1:]\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/kossnocorp/jquery.turbolinks/issues/56#issuecomment-201045993\n. jQuery Turbolinks simply makes $(function) work like $(document).on('turbolinks:load'). There's no provision to teardown whatever was initialized using $(function).\n\nAs of Turbolinks 5, teardowns need to happen on turbolinks:before-cache.\nMaking jQuery Turbolinks work with Turbolinks 5 is not going to be simple.\njQuery Turbolinks's reason-for-living is these two things, as far as I'm concerned:\n1. syntactic sugar to make $(function) easier to write.\n2. make legacy plugins work.\nAs for (1), the additional abstraction isn't worth the small benefit of a few less bytes to write. As for (2), well, they're legacy... the responsibility to make them Turbolinks compatible should probably be better handled in those projects rather than a shim.\nWith that said, it should be easy to make jQuery Turbolinks work for TL5 by simply changing the event names, as others have noted. However, you'll likely run into some problems along the way as a result of the concerns above.\n. I'd like to offer an alternative to make jQuery + Turbolinks a little easier to deal with:\n\nhttp://ricostacruz.com/onmount\n\nIt isn't a replacement for jquery.turbolinks, but it may address some of the reasons you might want to use jquery.turbolinks in the first place.\n. @kossnocorp I'm not sure that's possible... the two of them work rather differently.\n. Neat, but I think it should detect which Turbolinks.VERSION you're using first. Also, like @kossnocorp said, what do you think of #58? It has the exact same lines you did here, plus updated tests.\n. @kossnocorp it's time to deprecate this gem :(\n. If I may suggest, if you're using elixir, try instantclick.io instead.\nOn Thu, Oct 13, 2016, 12:38 PM David Miranda notifications@github.com\nwrote:\n\nHello there, I found that by default webpack doesn't find\njquery.turbolinks module but if you add this:\n\"main\": \"vendor/assets/javascripts/jquery.turbolinks.js\",\nafter\n\"license\": \"MIT\",\nat package.json file, it will work perfectly!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kossnocorp/jquery.turbolinks/issues/64, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AAEikQ28cz2kKqnPAaUW7mUAK6oR2j2Bks5qzbW9gaJpZM4KVetP\n.\n. Sorry, but please consider this project deprecated. In hindsight, it really isn't an ideal solution at all.\n\nConsider http://ricostacruz.com/rsjs instead (disclaimer: I wrote this document, and onmount which it mentions a few times). Done - #67, I've also outlined a quick rationale to explain why. :). V4 doesn't exist haha\nOn Mon, Jul 18, 2016, 12:34 PM Aleksey Ivanov notifications@github.com\nwrote:\n\nIn jquery-turbolinks.gemspec\nhttps://github.com/kossnocorp/jquery.turbolinks/pull/63#discussion_r71099904\n:\n\n@@ -25,5 +25,5 @@ Gem::Specification.new do |gem|\n   gem.rubygems_version  = '1.8.15'\ngem.add_dependency 'railties', '>= 3.1.0'\n-  gem.add_dependency 'turbolinks'\n-  gem.add_dependency 'turbolinks', '< 4'\n\nWhy is it not < 5?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kossnocorp/jquery.turbolinks/pull/63/files/c40b554104c85b67df632d079d82993beb91563f#r71099904,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAEikVp6qPS7fLY_xKuymjXVxGPccBKAks5qWwJVgaJpZM4JOYX4\n.\n. \n",
    "ericf": "@kossnocorp the thing is a few lines of code https://github.com/kossnocorp/jquery.turbolinks/blob/master/src/jquery.turbolinks.coffee\nThere's so much project ceremony for such little code.\n. ",
    "ghiculescu": "One workaround is to remove the $(document).ready(), and just move the <script> block to the bottom of the page. This feels riskier; I'd prefer to use $(document).ready() wherever possible.\n. I ended up using Solution 2.\n. ",
    "rposborne": "I think this is a sacrifice of overloading the set ready event.  Every time a new page comes in it re runs the inbound .ready(), and hence duplicates your event. \nIs there a way to access the non overloaded on .ready()?  This would allow the best of both worlds.  The blind rewrite to make 3rd party code just work.  And have the developer decide what really needs to run on initial dom ready?\n. ",
    "hayksaakian": "The one from turbolinks seems to work.\n. ",
    "zamith": "Yes, it is possible, thanks for the tip, but in my case it would mean doing something like this:\nvar fun = _.once(function(){\n  sms_sender.init();\n  conversation_scroller.init();\n});\njQuery(function($){\n  fun(); <-- This is registered as a callback on jquery.turbolinks\n});\nInstead of this:\njQuery(function run_once($){\n    sms_sender.init();\n    conversation_scroller.init();\n});\nPlus, the changes to jquery.turbolinks are about the same size in number of lines as the once function and with my solution you don't have to load underscore.js, nor define the once function if you do not wish to load it completely.\nSo, I believe these are two valid solutions for the same problem, but I still prefer mine in this particular situation.\n. That's a good idea, thanks.\nStill, it implies that you have underscore.js loaded, which is not always true, I believe.\n. ",
    "uranazo": "Sorry, what?\nOn Mar 28, 2013, at 6:53 AM, Sasha Koss notifications@github.com wrote:\n\n@uranazo ping !\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry I don't have time. I probably should not of even submitted it as it was done on company time. We already built a custom version of your gem which has the fix because we couldn't wait for the pull request to make it to a stable version.\n\nSorry, I probably should have submitted an issue instead.\nOn Mar 28, 2013, at 12:48 PM, Sasha Koss notifications@github.com wrote:\n\n@uranazo do you want to finish this pull-request or better to done it by myself?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "munkius": "Of course, it makes sense as it is the same window. It might be good to include something about this in the documentation :)\n. ",
    "nickurban": "I downgraded to 1.0 and it's working again, so this seems like a 2.0 problem.\n. Thanks, that seems to work.\n. ",
    "jxdx": "That didn't work for me, still have the same issue.\n. Also for me\n. ",
    "abacha": "oh sorry, you are right\nits just a function() {}\nbut all my events are firing more than once\nI'm binding like this:\n(function() {\n  window.StockIndex = {};\n  StockIndex.document_ready = function() {\n    $(\"#export\").bind('click', function() {\n      StockIndex.export_data();\n      return false;\n    });\n  StockIndex.export_data = function() {\n    var export_path;\n    export_path = StockIndex.link_to_submit().replace(\"?\", \"export?\");\n    return window.open(export_path);\n  };\n}).call(this);\n. nevermind, my mistake\nI was invoking \"document_ready\" multiple times on my view\nsorry\n. ",
    "abhinaykumar": "Content of application.js\n// This is a manifest file that'll be compiled into application.js, which will include all the files\n// listed below.\n//\n// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,\n// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.\n//\n// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the\n// compiled file.\n//\n// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details\n// about supported directives.\n//\n//= require jquery\n//= require jqurey.turbolinks\n//= require jquery_ujs\n//= require bootstrap\n//= require turbolinks\n//= require_tree .\n. Well i think some time , problem looks bigger then actually it is and its solution makes us Laugh cause just found my answer here.\nI have restarted my Rails application and Done..it is now working..By the way thank you soo much for making such a helpful gem .. :+1: \n. ",
    "marcamillion": "I had this issue, and what was happening for me was that I had the jquery gems in an :assets group in my Gemfile, which I shouldn't have had.\nOnce I removed it...everything was gravy.\nHope that helps someone else.\n. ",
    "joshdance": "I was having this problem. Adding resources in this exact order fixed it for me. \nMy applications.js file\nheader etc\n//= require jquery\n//= require jquery.turbolinks\n//= require jquery_ujs\n//= require bootstrap\n//= require turbolinks\n//= require masonry/jquery.masonry\n//= require_tree .\n. ",
    "fabiosangregorio": "@abhinaykumar THANKS, I needed to restart the application too, kinda laughing too\n. ",
    "frank6060": "restart your server. ",
    "Hamdan85": "I have the same doubt. Matter in fact I first dont understand why Rails Dev had included turbolinks on the distro having this huge issue with jquery, the first js framework for it. The jQuery.ready is crucial for most of the gems and resources that we use to trigger any event.\nFirst, thinking for the gem, I would like to ask if there are any way that jquery-turbolink gem get to work even for the functions in wrappers because I can change my own functions, but I rather not need to change the scripts in the gems that Im using.\nCould you guys keep helping us?\n. ",
    "ashrocket": "I hunted for an IRC channel or a google groups, but found none, so I'm posting here again.\njavascript\n/* BAD: don't bind 'document' events while inside $()! */\n$(function() {\n  $(document).on('click', 'button', function() { ... })\n});\nI think if someone could elabortate on this code it might be helpful.  Not sure 'why' it's bad practice to use the $(document).on pattern inside the Jquery ready event block?\nAnd if it is bad, is there a better practice for using Jquery.on?  that will work with Turbolinks.jquery.  Perhaps using\njavascript\njQuery( document ).ready(function( $ ) {\n  $('body').on('click', 'button', function() { ... })\n});\n. ",
    "itsjbecks": "Found the real issue: the require turbolinks has to go after the foundation initialize call.\n. ",
    "ryankc33": "@rstacruz moving the require turbolinks after the foundation initialize call will result in turbolinks not being loaded. note\n\nSprockets will not look for directives in comment blocks that occur after the first line of code.\n. \n",
    "harrisrobin": "I had my javascript file in the head which is why it did not work. if anyone encounters this, just make sure to put your JS file in the footer. \n. ",
    "marcoschicote": "No problem, thanks for the quick answer.\nGreat gem by the way!\n. Great. Thanks\n. ",
    "steakknife": "Closing because there's a workaround.\n. ",
    "chrisjacob": "+1 \nI'm new to Turbolinks... how do people deal with 3rd party libraries that use $(window).on('load', function() {});?\nHere is a related post on the Turbolinks issue list (currently: Open)\nhttps://github.com/rails/turbolinks/issues/295\n. You could use this hack (but probably shouldn't). It won't behave at all like Window.onload (i.e. it won't wait for Images, CSS, JS to be processed... it just triggers a fake Window.onload).\n// see some output in your console when the window is loaded\n$(window).on('load', function(){console.log('Window Loaded')});\n// when you change to a new page via Turbolinks (cached or uncached) trigger the windows 'load' event\n$(document).on('page:change', function(){ $(window).trigger('load'); });\nFeels very dirty... there must be a better solution?\n. Ok I think I have a better solution, see: https://github.com/rails/turbolinks/issues/295#issuecomment-70036212\nWhen working with Turbolinks all JS and CSS is loaded in the header on the first page load (...or you could put your JS at the end of the body with data-turbolinks-eval=\"false\"). Either way the first Window.onload behaves as normal for the first page loaded.\nWhen you navigate to another page via Turbolinks the CSS and JS stays around... so the only hold up for Window.onload being fired should be Images that are in that new page's content. If we wait for those images to all load, then manually trigger the Window.onload event via $(window).trigger('load'); everyone is happy right?\n@supercodepoet I know this ticket was posted a long time ago, but let me know if this helps solve the Bootstrap 3 issue you were having (or if you came up with another solution).\n. FYI, I tested out my solution on a page with some large images and the Bootstrap Affix.js  $(window).on('load'... was triggered as expected. :)\n. ",
    "sameerkhanna": "Another cause for this could be you have your javascript placed at the end of body. It should be in the head. I noticed this when bootstrap dropdowns would work on initial page load, but not after subsequent clicks.\n. ",
    "stefanocomba": "don't know why... it disappeared... thanks anyway\n. ",
    "lokeshjain2008": "How, to write this code with CoffeeScript. \nas i do \njQuery ->\n    $('.chosen-select').chosen\n       allow_single_deselect: true\n       no_results_text: 'No results matched'\n       console.count 'called'\nI see count multiple time and this increases every time i click my Home button.\n. Plz, help me this behaviour stops me working on some of the functionality for my website. \n. ",
    "acandael": "Hi,\nI'm also having this issue.\nBefore I implemented the jquery-turbolinks , this responsive navigation menu wich changes the horizontal menu in a dropdown menu for mobile screens was working fine:\n```\n\n  $(document).ready(function() {\n    var menu = $('#navigation-menu');\n    var menuToggle = $('#js-mobile-menu');\n    var signUp = $('.sign-up');</p>\n<p>$(menuToggle).on('click', function(e) {\n     e.preventDefault();\n     menu.slideToggle(function(){\n      if(menu.is(':hidden')) {\n        menu.removeAttr('style');\n      }\n    });\n  });\n\n```\nnow, when clicking the menu in dropdown mode, it drops down and pulls up a couple of times and then stays pulled up.\nThis behaviour can be checked here:\nhttp://178.62.173.211\nhow can I fix this?\nthanks for your help,\nAnthony\n. I added the unbind() method to the menuToggle element, and the issue seems fixed now:\nvar menuToggle = $('#js-mobile-menu').unbind();\n. ",
    "dnagir": "As far as I can see, this issue is caused by the JS being within the page rather than in an external file.\nIf you'll put this JS on one single page:\nhtml\n    <script type=\"text/javascript\">\n      $(function() {\n        alert('hiii')\n      });\n    </script>\nAnd navigate to that page, you'll obviously see the alert.\nBut you will also see the alert when you navigate away from the page to any other, that doesn't even have the JS above.\nWhen you go to the page with that JS again, you now see two alerts and so on.\nSo there's nothing to do with idempotency.\nAnd as far as I can see, the jquery.turbolinnks is being used correctly here.\nThe only workaround I can see ATM is to move that JS into a separate file, which is a bit of a shame for small bit of initialiser code.\nCan you confirm this? Is it misused or that's an actual issue?\n. ",
    "shadowed87": "i have a ready() function that is fired when page loads normally, and when turbolinks loads a page\n$(document).ready(ready);\n$(document).on('page:load', ready);\nWith this configuration the ready function fires once per page load, in any other turbolinks apps. \nBut when using jquery mobile and jquery.turbolinks it fires twice, both events are triggered.\nCommenting out $(document).on('page:load', ready); solved this issue for me.\n. ",
    "obromios": "I am getting the same problem with turbolinks. If I put data-no-turbolinks='true' in the enclosing container, it switches off turbo-links for that page and stops the cascading rendering of the graph down the page.\n. This does look elegant, however I am having trouble getting it to work. Following the instructions at http://ricostacruz.com/onmount/turbolinks.html, I have tried putting the following code  near the end of the page  and also tried it in the , and neither seems to fix the problem.\n<script>\n  $(document).on('ready page:change', function () { $.onmount() })\n</script>\nIs there something else I need to do?\nChris\n. My application.js is loaded my head tag.  I have tried putting the onmount document ready statement in my application.js file (see below), but alas, I still have the same problem.  Am I putting the statement in the wrong place?\n// Place your application-specific JavaScript functions and classes here\n// This file is automatically included by javascript_include_tag :defaults\n//= require jquery\n//= require onmount\n//= require jquery.turbolinks\n//= require jquery_ujs\n//= require jquery-ui\n//= require jquery.plugin\n//= require jquery-placeholder\n//= require fitvids.js\n//= require jquery.flexslider\n//= require turbolinks\n//= require turbolinks_compatability\n//= require js-cookie\n//= require bootstrap-sprockets\n//= require raphael\n//= require morris\n//= require announcements\n//= require main\n//= require addtohomescreen\n//= require_self\n//= require_tree .\n$(document).on('ready page:change', function () { $.onmount() })\n/* rest of file omitted */\n. I have retried Morris.js with version 5 of turbolinks.  The problem re-occured with the code like this\nready = ->\n  $(document).on \"turbolinks:load\", ->\n    Morris.Line\n      element: 'progress_chart'\n      data: window.progress\n      xkey: window.xkey\n      ykeys: window.ykeys\n      labels: window.labels\nhowever, if I removed\nready = ->\nthe problem disappeared. Evidently wrapping the code in a javascript function can cause this repetition, i.e. in my case it was not a Morris.js problem per se but the way I was writing my coffeescript code for turbolinks.. For different reasons, I had to put back the ready -> into the above code which meant the multiple graphs came back.  Accordingly, I had to dig deeper. \nThe fundamental reason I was getting the repeated rendering of the code was that turbo links was triggering the code more than once. Each time it was triggering, then a new graph was inserted.  The turbo links 5 documentation is very clear that any transformation to the html of a page should be idempotent.  In other words, firing the code more than once should leave page the same.  In this case, firing the Morris.Line more than once was inserting a new graph each time.  \nThe way I solved it, and this time I think it is a robust permanent solution, was to check if the target element already had a svg element. If did, then the Morris.line code was not called. The code looks like this\npid = $('#progress_chart')\n  if pid.length > 0\n    svg_missing = (pid.find('svg').length == 0)\n    if svg_missing\n      Morris.Line\n        element: 'progress_chart'\n        data: window.progress\n        xkey: window.xkey\n        ykeys: window.ykeys\n        labels: window.labels\n. ",
    "Jimeh87": "Happening to me as well.\n. No longer happening to me. It turned out to be an issue with my code. I was calling a function with .ready() and .bind('page:change') due to some previous frustrations with turbolinks. I took out the .bind() which fixed things.\n$(document).ready(foo());\n$(document).bind('page:change', foo());\n. I take back my previous comment. At one point I'm pretty sure I fixed the issue by cleaning up the above code, but the issue is back.\n. ",
    "Abello966": "Happening here aswell\n. ",
    "petres-a": "Same here. Did anyone find a solution?\n. ",
    "amnesia7": "Same here. Back button doesn't seem to be firing my $(function(){....]); code as I was expecting it to.\nIt looks like the issue is caused by the fact that when the back button is used turbolinks only fires:\npage:before-unload\npage:after-remove\npage:change\npage:update\nbut jquery.turbolinks is only listening for:\n$.turbo.use('page:load', 'page:fetch');\nWhen a page is first loaded that uses turbolinks it seems to fire:\npage:change\npage:update\n@kossnocorp any suggestions how this could be resolved?\n. @sandrodz this worked for me https://github.com/rails/turbolinks/issues/533#issuecomment-101658077\n. As far as I can tell if you put a js alert in the body on a page, then click a link to another page, then press the back button the browsers that I tested all (except firefox) showed the alert again. This SO question seems to confirm the same thing (http://stackoverflow.com/questions/2638292/after-travelling-back-in-firefox-history-javascript-wont-run).\nSince the majority of browsers run the javascript when you press the back button does that mean that this plugin should run it as well.\nRather than using page:fetch and page:load should it use either page:before-unload or page:after-remove (depending on https://github.com/rails/turbolinks/issues/536) and then page:change since these are fired for both fresh and cached page loads?\nI suppose it also depends on the use of data-turbolinks-eval by turbolinks because that might be required to run normal standalone javascript whereas this plugin would only re-fire the jquery-bound javascript which could lead to some javascript running and some not since if the js file is loaded at the bottom of the page body then it doesn't actually need to be within $(function(){ to run unless you need all assets to have loaded as well.\nMaybe @Thibaut could offer a suggestion about how best to proceed with this or whether https://github.com/rails/turbolinks/issues/533#issuecomment-101658077 should actually be the resolution and just needs mentioning in the readme somewhere.\n. @rstacruz page:change is the one to bind to to run the jquery on every page load (fresh or cached via back button etc) although it would probably need to be mentioned in the readme that it gets called on every load (fresh or cached) so if something needs to only be called once then it would be better in a $(document).on('page:load', call instead of the normal $(function(){.\nI'm not sure whether you would be better using page:before-unload or page:after-remove. Does the element still need to be on the page when you turn off the jquery binds or does it not matter if they have already been removed?\n. Thanks @Thibaut, sounds like its best to hold back on making a decision about how jquery.turbolinks should work with back button until https://github.com/rails/turbolinks/issues/551 has been resolved.\n. @sandrodz @rstacruz The plugin is working as expected for me too with js only being run for new page loads and then I'm using page:restore to make it run any particular js if the back button is clicked (cached page is restored).\n. ",
    "Thibaut": "Not sure I fully understand this issue. If you want code to be executed every time the DOM is updated by Turbolinks (e.g. to attach event listeners to new elements), you should bind to the page:change event. Since today we now attach the affected nodes in event.data; see rails/turbolinks#537 (README update coming soon).\nThe page:load fires only when a particular piece of markup (body or partial replacement) is inserted in the DOM for the first time. It doesn't fire on history back/forward & cache restore. As indicated in the README, this is to let you run non-idempotent JavaScript that changes the markup, which you wouldn't want to run twice on the same elements.\nLet me know if this didn't answer your question.\n. @amnesia7 looks like I was wrong about page:load / page:change. See https://github.com/rails/turbolinks/issues/551.\n. Sorry, wrong link: https://github.com/rails/turbolinks/issues/551\n. ",
    "heyogrady": "@sandrodz this fix by @Thibaut resolved all my back button issues: https://github.com/rails/turbolinks/commit/25f07dd9c12f7ecef0a01138d1430afeb94c9f2d\n. ",
    "jeremylynch": "How I solved this problem: \n1) Use the master version of turbolinks:\nruby\ngem 'turbolinks', :git => 'https://github.com/turbolinks/turbolinks-classic'\nWhy? The latest version released was 2.5.3, which does not include this fix: turbolinks/turbolinks-classic@25f07dd\n2) Use page:restore method\njavascript\n$(window).on('page:restore', function(e) {\n  console.log('backspace')\n});\n. ",
    "luizkowalski": "nope...it is just as I pasted above\n. it is placed before the </body>\n. Sorry for the long delay...that actually worked. Why?\n. @jlerpscher here is the answer: https://github.com/kossnocorp/jquery.turbolinks/issues/51#issuecomment-121845953\n. I asked the same question above hahahaha\n. ",
    "jlerpscher": "+1\n. Thank you @luizkowalski but why we have to place it on <head>?\n. ",
    "Subtletree": "Putting the script in the body would defeat the purpose of turbolinks as turbolinks reloads the body but keeps the head to save time. \nI think that turbolinks (or jquery-turbolinks) cancels previous handlers etc on page change as the page hasn't actually reloaded according to the browser. Script run in the body though will run each time it is loaded and will stack on top of each other causing events to fire multiple times.\n. ",
    "de-ocampo": "Was able to resolve this issue by placing the JS library that was calling this method after require jquery but before require jquery-turbolinks. Unclear on why that particular library was causing an issue, but it is fixed.\n. ",
    "agungyuliaji": "bind your button like this what? seems missing\n. ",
    "u007": "+1\n. i added a work around,\ndoes this help? its in my comment somewhere at the bottom\nhttps://github.com/turbolinks/turbolinks/issues/9\n. ",
    "dalpo": ":+1: \n. Personally, I would love the rails 5 support :smiley: \n. ",
    "dsandstrom": "If this is deprecated, what should we use instead?  Change our listeners to turbolinks:load?\n. This seems to work, add after requires in application.js:\n$.turbo.use('turbolinks:load', 'turbolinks:request-start')\nExcept I'm getting some leftover js validation errors after re-visiting a form.  But it quickly resets after load.\nEdit\nThe leftover errors are present because they are getting cached by turbolinks.  Here are some possible workarounds:\n- Disable turbolinks caching on form pages.\nBottom of head tag on application.html.erb:\nerb\n<%= content_for?(:head) ? yield(:head) : '' %>\nForm views:\nerb\n<% content_for :head do %>\n  <meta name=\"turbolinks-cache-control\" content=\"no-cache\">\n<% end %>\n- Remove form errors before caching.\nBottom of application.js:\n``` javascript\nvar resetForms = function () {\n  // this depends on your use\n  // this is for foundation 6's abide\n  $('form').each(function () {\n    $(this).foundation('destroy');\n  });\n};\ndocument.addEventListener(\"turbolinks:before-cache\", function() {\n  resetForms();\n});\n```\n. > As of Turbolinks 5, teardowns need to happen on turbolinks:before-cache.\nThanks for the link.  So what I need to do for the form validation is destroy on turbolinks:before-cache and re-initialize on turbolinks:load.\n. I swear that wasn't up when I made this PR.  Yeah, if that one works, close this one.\n. ",
    "wshostak": "We recently implemented turbolinks 5 at work and this https://github.com/wshostak/turbolinks-jquery is the solution we came up with for dealing with jQuery on and ready. It allowed us to keep working with our current jQuery scripts/ plugins with out having to make changes to them. Thought I would share since seems like a few others like us could use it.\n. ",
    "Lowryderch": "I wrote an easy solution here:\nhttps://github.com/kossnocorp/jquery.turbolinks/issues/61#issuecomment-246404796 \nBasically add this file:\nhttps://github.com/turbolinks/turbolinks/blob/master/src/turbolinks/compatibility.coffee \n. Here is my solution:\n1. install gem 'jquery-turbolinks'\n2. add this .coffee file to your app: https://github.com/turbolinks/turbolinks/blob/master/src/turbolinks/compatibility.coffee \n3. name it turbolinks-compatibility.coffee\n4. at application.js\n   //= require jquery\n   //= require jquery_ujs\n   //= require jquery.turbolinks\n   //= require turbolinks\n   //= require turbolinks-compatibility\n. ",
    "ryanbelke": "@Lowryderch that worked for me, using Rails 5 and Turbolinks 5 - Thanks a lot \ud83d\udc83 \n. ",
    "xiaohui-zhangxh": "This is my solution, override jQuery.fn.ready:\njQuery.fn.ready = (fn)->\n  $(this).on 'turbolinks:load', fn\n. ",
    "drselump14": "@Lowryderch it works on local environment, but somehow doesn't work on staging/production environment. \nTurbolinks 5.0.1\nany suggestion will be appreciated. ",
    "merialvarado": "@wshostak solution worked for me. But I updated the code to handle events that are not String type( I encounter problem with datepicker ). \nif (typeof events === 'string' || events instanceof String){\n      var splitEvents = events.split(' ');\n    }\n    else{\n      var splitEvents = Object.keys(events);\n    }. ",
    "aldefouw": "Something that I did which seems to make them work properly on Rails 5 is the following:\n```\nfunction_name_here = ->\n#YOUR CODE HERE\n$(document).ready(function_name_here)\n$(document).on('page:load', function_name_here)\ndocument.addEventListener('turbolinks:request-start', function_name_here)\ndocument.addEventListener('turbolinks:load', function_name_here)\n```\nNot sure if this is a recommended way to do things, but it seems to work by putting the listener on.\nI am running Rails 5.0 and turbolinks 5.0 in my gemfile.. ",
    "dancallaghan": "Just tested this and it appears that onLoad is being triggered twice.\nHere is a JSFiddle of the issue.\nI noticed if I comment out $(this.onLoad); in the register function, it only fires once. \n. ",
    "Argonus": "@kossnocorp Any news about this issue ;) ?\n. ",
    "tagliala": "duplicate of #56 \n. ",
    "mahendhar9": "Meanwhile, try this \n$(document).on('turbolinks:load', function() {\n...your javascript goes here...\n});\n. Meanwhile, try this\n$(document).on('turbolinks:load', function() {\n  ...your javascript goes here...\n});\n. ",
    "nchatu": "Lowryderch's steps worked for me expect I didn't want to add jquery.turbolinks\n. ",
    "adeeb1": "@Lowryderch Would it be possible to make a JavaScript version of your script, please?\n. @AndrewSouthpaw Thanks a lot! It seems your script requires the use of ES6?. ",
    "tacoplz": "Had this problem for about a day, this solution worked great, thanks so much @Lowryderch!\n. ",
    "ChaosPredictor": "Thanks @Lowryderch it's work for me as well, but with some side effects. I have now 2 superfish span.sf-sub-indicator images after refresh. And after using of link_to I'm stay just with one (as should be). Maybe you have any Idea why is it like this?\n. Hi @UsinaSites, I just remove the element. it's not kind of solution the work for you\n. ",
    "UsinaSites": "Hi @ChaosPredictor, I got more or less the same issue, after the second click, my assets are executed twice (as you can see on that screenshot: https://postimg.org/image/fuest7qjx/). Did you solve your problem ?\n. ",
    "vijay-ror-dev": "Thanks @Lowryderch it's work for me as well.\n. ",
    "AndrewSouthpaw": "@adeeb1 I created one here: https://gist.github.com/AndrewSouthpaw/5a3144d9b2ed5334e0ada83a78ace42d\nUsing it:\njs\nimport jQueryTurbolinksCompatibility from './jquery-turbolinks-compatibility'\njQueryTurbolinksCompatibility(). Yeah. It would require only minor modifications to make it work for ES5.. ",
    "andreaslillebo": "Thanks @Lowryderch. This works perfectly. If anyone are having trouble with this, make sure your application.js is like this:\njavascript\n//= require jquery\n//= require jquery_ujs\n//= require jquery.turbolinks\n//= require turbolinks\n//= require turbolinks-compatibility\nother scripts...\nand not something like:\njavascript\n//= require jquery\n//= require jquery_ujs\n//= require jquery.turbolinks\nother scripts...\n//= require turbolinks\n//= require turbolinks-compatibility. ",
    "waleedarshad": "\n. Can anybody tell me why i am receiving this error?. ",
    "ivanovaleksey": "Seems like the problem with turbolinks gem version.\nIt should be < 5 since your gem code is using page:load event while turbolinks 5 is using turbolinks:load, shouldn't it?\nI edit turbolinks version in my Gemfile like \ngem 'turbolinks', '< 5'\nand it seems now like everything is working fine.\nMaybe you need to update version in turbolinks dependency in jquery-turbolinks.gemspec?\n. Sorry guys. I didn't see issue #61 (I wonder how, it is on the top place).\n. Thanks for proposed solutions.\nNow I just use turbolinks 2.5.3. This gem works fine with the 2.5.3.\n. Guys may I close the issue?. @rstacruz can you merge the PR?. Why is it not < 5?\n. So as V3) \nI added < 5 and it installed 2.1.0 (if I remember right).\nUPDATE 1\nrubygems says last non5 version is 2.5.3.\nUPDATE 2\nI was wrong.\ngem 'turbolinks', '< 5' installed 2.5.3 as it should be.\n. ",
    "1v": "Just add https://github.com/turbolinks/turbolinks/blob/55af148d880a3f80654a3a4cde9c8c41dadac861/src/turbolinks/compatibility.coffee to your app and all works.\n. ",
    "davidchappy": "Thank you. Reverting to Turbolinks 2.5.3 seems to work for me.\n. ",
    "r3cha": "62\nIn this issue find  compatibility.coffee script and add to project \n//= require jquery. \n//= require jquery.turbolinks. \n//= require jquery_ujs. \n//= require lightbox. \n//= require ....  \n//= require_tree .  \n//= require turbolinks. \n//= require turbolinks.compatibility.coffee\n. ",
    "aastik1208": "thanks , i'll check\n. "
}