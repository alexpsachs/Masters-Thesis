{
    "zachborboa": "Possible implementation.\nCall one url with the multiple data sets (one to many):\n$curl = new Curl();\n$curl->get(array(\n    'https://www.example.com/search',\n), array(\n    'q' => 'first search',\n), array(\n    'q' => 'search #2',\n), array(\n    'q' => '3rd search',\n));\nCall multiple urls all with the same data (many to one):\n$curl = new Curl();\n$curl->get(array(\n    'https://duckduckgo.com/',\n    'https://search.yahoo.com/search',\n    'https://www.bing.com/search',\n    'http://www.dogpile.com/search/web',\n    'https://www.google.com/search',\n    'https://www.wolframalpha.com/input/',\n), array(\n    'q' => 'first search',\n));\nCall multiple urls with the multiple data sets (many to many).\n$curl = new Curl();\n$curl->get(array(\n    'https://duckduckgo.com/',\n    'https://search.yahoo.com/search',\n    'https://www.bing.com/search',\n    'http://www.dogpile.com/search/web',\n    'https://www.google.com/search',\n    'https://www.wolframalpha.com/input/',\n), array(\n    'q' => 'first search',\n), array(\n    'q' => 'search #2',\n), array(\n    'q' => '3rd search',\n));\nCall a url with data (one to one):\n$curl = new Curl();\n$curl->get('https://www.example.com/search', array(\n    'q' => 'keyword',\n));\n. Implementation with success, error, and complete callbacks.\n$curl = new Curl();\n$curl->success(function($instance) {\n    echo 'call was successful.' . \"\\n\";\n    echo 'response was' . \"\\n\";\n    echo $instance->response . \"\\n\";\n});\n$curl->error(function($instance) {\n    echo 'call was unsuccessful.' . \"\\n\";\n    echo 'error code:' . $instance->error_code . \"\\n\";\n    echo 'error message:' . $instance->error_message . \"\\n\";\n});\n$curl->complete(function($instance) {\n    echo 'call completed' . \"\\n\";\n});\n$curl->get(array(\n    'https://www.example.com/search',\n), array(\n    'q' => 'first search',\n), array(\n    'q' => 'search #2',\n), array(\n    'q' => '3rd search',\n));\n. Calling get() in parallel is now supported. TODO: Implement post(), put(), patch(), and delete() in parallel #14.\n. Namespacing sounds great! It is however only available as of PHP 5.3.0. I'm okay with making >= PHP 5.3.0 a requirement.\n. Thanks for all the work @rockerBOO.\nI'd like to keep the PHP Curl Class name. Can we use php-curl-class?\n{\n    \"name\": \"php-curl-class/php-curl-class\",\n    \"description\": \"PHP Curl Class\",\n    \"autoload\": {\n        \"classmap\": [\"lib/\"]\n    }\n}\n. Thank you @DaniSancas and @rockerBOO \n. Thanks!\n. @Philzen thank you for commenting.\n\na. if at all, this should be done as a seperate class that consumes a CurlHandle via a clearly defined interface\n\nI like this idea. I'm open to an implementation of this. Perhaps\nphp\nclass ParallelCurl {}\n. Obsolete. Implemented MultiCurl.\n. Thanks!\n. Yes not a problem. Would this be best done as a pull request?\n. Tagged 1.0.0. Thanks!\n. Thanks for the report!\n. setCookieFile() and setCookieJar() has been added in 0a683fc98ab36f19fa8dfbbbb4e756829d0b8ce9.\n. Hi @aufa. You may not be using the class correctly. You should not disable the header. The response is available in $curl->response. Here is an example.\n```\n<?php\nrequire 'lib/Curl.class.php';\n$curl = new Curl();\n$curl->get('http://www.example.com/');\necho $curl->response;\n``\n. I believe setting both the optionCURLOPT_ENCODINGand theAccept-Encoding` header is redundant. Both set the contents of the \"Accept-Encoding: \" header.\n. Merged. Thank you\n. Proxy usage is supported as is.\nphp\n$curl = new Curl();\n$curl->setOpt(CURLOPT_PROXY, 'user:password@127.0.0.1:8888');\n. Tumblr - Upload a photo with V2 api\nhttps://gist.github.com/codingjester/1649885\n. Box - Upload a file\nhttps://developers.box.com/docs/#files-upload-a-file\n. Dropbox - Upload a file\nhttps://www.dropbox.com/developers/core/start/php#uploading\n. Evernote - Create a note\nhttp://dev.evernote.com/doc/articles/creating_notes.php\n. OkCupid - Send message\nhttps://code.google.com/p/okcupid-pidgin/source/browse/trunk/okc_messages.c#463\n. WordPress - Create a new post\nhttps://codex.wordpress.org/XML-RPC_WordPress_API/Posts#wp.newPost\n. WordPress - Upload a file\nhttps://codex.wordpress.org/XML-RPC_WordPress_API/Media#wp.uploadFile\n. Facebook - Upload a photo.\nhttps://developers.facebook.com/docs/graph-api/reference/v2.0/user/photos\nhttps://developers.facebook.com/docs/facebook-login/access-tokens\n. Twilio - Send SMS and MMS.\nhttp://www.twilio.com/docs/api/rest/sending-messages\n. Digital Ocean - Authenticate.\nhttps://developers.digitalocean.com/#authentication\n. Digital Ocean - Create a droplet.\nhttps://developers.digitalocean.com/#create-a-new-droplet\n. Pinterest - Search domain pins\nhttps://developers.pinterest.com/api_docs/v3_domain_search_pins/\n. Pinterest - Pin It\nhttps://developers.pinterest.com/android/\nhttps://developers.pinterest.com/manage/\n. The New York Times - The Best Sellers API\nhttp://developer.nytimes.com/docs/best_sellers_api/\n. The New York Times - The Most Popular API\nhttp://developer.nytimes.com/docs/most_popular_api/\n. The Guardian - Content search\nhttp://open-platform.theguardian.com/documentation/search.html\n. Google Drive - Upload a resumable file.\nhttps://developers.google.com/api-client-library/php/guide/media_upload\n. SendGrid - Send an email.\nhttps://sendgrid.com/docs/Code_Examples/php.html\n. Yahoo - Get current weather conditions.\nhttps://developer.yahoo.com/weather/\n. Yahoo - Geocode an address.\nhttps://developer.yahoo.com/boss/placefinder/\n. Walk Score - Retrieve the Walk Score for a location.\nhttp://www.walkscore.com/professional/api.php\n. Pinboard - Add a bookmark\nhttps://pinboard.in/api#posts_add\n. Many examples are available. Please file a ticket if you didn't find an example that fits your use case.\n. ``` php\nclass CaseInsensitiveArray implements ArrayAccess, Countable {\n    private $container = array();\npublic function offsetSet($offset, $value) {\n    if (is_null($offset)) {\n        $this->container[] = $value;\n    }\n    else {\n        $index = array_search(strtolower($offset), array_keys(array_change_key_case($this->container, CASE_LOWER)));\n        if (!($index === false)) {\n            unset($this->container[array_keys($this->container)[$index]]);\n        }\n        $this->container[$offset] = $value;\n    }\n}\n\npublic function offsetExists($offset) {\n    return array_key_exists(strtolower($offset), array_change_key_case($this->container, CASE_LOWER));\n}\n\npublic function offsetUnset($offset) {\n    unset($this->container[$offset]);\n}\n\npublic function offsetGet($offset) {\n    $index = array_search(strtolower($offset), array_keys(array_change_key_case($this->container, CASE_LOWER)));\n    return $index === false ? null : array_values($this->container)[$index];\n}\n\npublic function count() {\n    return count($this->container);\n}\n\n}\n. php\n$curl->response_headers[] = 'Content-Type: application/json; charset=utf-8';\n$curl->response_headers[] = 'content-type: application/json; charset=utf-8';\n$curl->response_headers[] = 'Content-Type: application/json';\n$curl->response_headers[] = 'content-type: application/json';\n$curl->response_headers[] = 'CONTENT-TYPE: application/json';\n$curl->response_headers[] = 'CONTENT-TYPE: APPLICATION/JSON';\npreg_grep('/^Content-Type: application\\/json/i', $curl->response_headers);\n$response = json_decode($curl->response);\n``\n. @hi2u - The response has historically been automatically decoded for known content types including json and xml. You can see how this is handled inparseResponse`. There isn't any way to turn this off.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/Curl.php#L949\n. Fixed in 360058c529c9a936eb71939e7c5268ddd3ecad72.\n. All tests passed with PHPUnit 4.1.0.\n. Hi thank you for the report. Do you have an example?\n. Thank you for the report! It appears that \"function array dereferencing\" is available >= 5.4.0.\n\nFunction array dereferencing has been added, e.g. foo()[0].\n\nhttp://php.net/manual/en/migration54.new-features.php\n. Fixed in 4b7e328b840b9564867951703672203fe537d1ab.\n. Moved to #25.\n. Merged. Thanks!\n. Thanks!\n. Look in $curl->response_headers.\n. php\n$curl = new Curl();\n$curl->get('https://github.com/timeline.json');\necho $curl->response_headers['Content-Type']; // application/json; charset=utf-8\nThis works for me.\n. You can make the response an associative array by doing this.\nphp\n$curl = new Curl();\n$curl->get('http://www.example.com/data.json');\n$curl->response = json_decode(json_encode($curl->response), true);\n. Hi @DEN007. This is error is expected as CURLOPT_HEADER set to true is required.\n. Hi @nansenat16. What value are you trying to set the cookie? Is there an issue with spaces or plus signs? Thanks\n. php\n$this->setOpt(CURLOPT_COOKIE, http_build_query($this->cookies, '', '; ', PHP_QUERY_RFC3986));\n. 2d883cef476315c33337966b38225e1d21d76136\n. Can you use var_dump() instead of print_r()? Thanks\nphp\nprint_r(array(\n    'false' => false,\n    'empty' => '',\n    'true' => true,\n    '1' => 1,\n));\nArray\n(\n    [false] => \n    [empty] => \n    [true] => 1\n    [1] => 1\n)\n. php\n$curl = new Curl();\n$curl->setCookie('APSCOOKIE_3506421940', urldecode('Era%3D0%26Payload%3DFKKkxM9jWmffo2zpExeU+sY3AwPKjwNFPpLfRkY2u78wAbsqRu5wq8CBsEWs8Kw4%0A8Qnz0WZgF1J2X+eM68G5sUiNaqw9FntvM1Wed6cP6Be+V3K+umi4Hm2Wn1f+p3vN%0AV5ZW5UxrkhkYAh0qVh3SnRevKNhNd2m9r0meKXjjDSaubLU098Eh1qLRvEuq1qHe%0AVAlgybymPRmfJAgPZ9T0au+i+nieu7lY%0A%26AuthHash%3DgacmqF6UvP6aSSw3sKRq9zN%2F2KcA%0A'));\n$curl->setCookie('ccsrftoken', '2F721697F7557E33D1B060C13DC2FEB7');\n$curl->setCookie('opmode', '');\n$curl->setCookie('rl', '');\nAPSCOOKIE_3506421940=Era%3D0%26Payload%3DFKKkxM9jWmffo2zpExeU%20sY3AwPKjwNFPpLfRkY2u78wAbsqRu5wq8CBsEWs8Kw4%0A8Qnz0WZgF1J2X%20eM68G5sUiNaqw9FntvM1Wed6cP6Be%20V3K%20umi4Hm2Wn1f%20p3vN%0AV5ZW5UxrkhkYAh0qVh3SnRevKNhNd2m9r0meKXjjDSaubLU098Eh1qLRvEuq1qHe%0AVAlgybymPRmfJAgPZ9T0au%20i%20nieu7lY%0A%26AuthHash%3DgacmqF6UvP6aSSw3sKRq9zN%2F2KcA%0A; ccsrftoken=2F721697F7557E33D1B060C13DC2FEB7; opmode=; rl=\n. Fixed. Thanks!\nhttps://github.com/php-curl-class/php-curl-class/releases\n. Great work. Thanks!\n. You can now access $instance->base_url. Added in 530c412da5514aff321e1d4c5eba792935780036. Thanks\n. Thank you for the issue. Can you provide an example use case?\n. Hi. Thank you for the report. Is this a publicly available api where I can attempt to reproduce?\n. Possibly related to http://blog.travis-ci.com/2014-09-03-minor-language-update/\nTry https://github.com/travis-ci/travis-ci/issues/1697#issuecomment-29542251\nfrom travis-ci.com support\n. Hi @willianpts, thank you for the pull request. We also need match possible variations of the content-type application/json so in_array() will not work well here. Here are some of those variations:\nAPPLICATION/JSON\nAPPLICATION/JSON; CHARSET=UTF-8\nAPPLICATION/JSON;CHARSET=UTF-8\napplication/json\napplication/json; charset=utf-8\napplication/json;charset=UTF-8\nAPPLICATION/JSON\nAPPLICATION/JSON; CHARSET=UTF-8\nAPPLICATION/JSON;CHARSET=UTF-8\napplication/json\napplication/json; charset=utf-8\napplication/json;charset=UTF-8\nAPPLICATION/JSON\nAPPLICATION/JSON; CHARSET=UTF-8\nAPPLICATION/JSON;CHARSET=UTF-8\napplication/json\napplication/json; charset=utf-8\napplication/json;charset=UTF-8\n. Thanks!\n. Hi @karboom thank you for the pull request. I'm not sure we need a default timeout unless there is more interest. Even then the timeout may need to greater like 30 seconds which happens to be the default for max_execution_time().\nhttp://php.net/manual/en/info.configuration.php#ini.max-execution-time\n. Thanks!\n. Hi @qt06. referer with 1 R is a misspelling of referrer. I'll add an alias so both work.\n. Hi @ke-da. You can now PUT json data.\nphp\n$curl = new Curl();\n$curl->put('https://www.example.com/', json_encode(array(\n    'foo' => 'bar',\n)));\n. Hi @akeinhell. Thank you for the pull request. Would you happen to have a raw HTTP response that causes this to fail?\n. Hi @akeinhell. Thank you for the pull request! A download() method would be very useful. I'll get that incorporated. Thanks!\n. Could be related to #110. Do you have error logging enabled and see any error?\n. This should be fixed as we no longer rely on CURLOPT_WRITEHEADER.\n. Fixed. Thank you\n. Obsolete. No longer using php://memory nor php://temp\n. Thanks!\n. Hi qt06. I haven't been able to reproduce that error on either version: 5.4.29 or 5.4.35. Are you using XAMPP or similar by any chance?\n. I was able to reproduce the error using XAMPP.\n\n. Can you see if this change fixes the issue?\nhttps://github.com/zachborboa/php-curl-class/commit/4cb1436983bd7c73096bdcd0461b9a3bf4d12998\n. Great thank you!\n. @gotardo - so like this?\nphp\n$curl->post(array(\n    'key' => 'val',\n    'strings' => array(\n        'a',\n        'b',\n        'c',\n    ),\n));\n. Should be fixed in 891a66c3275a98d8b26264019747a7fd67d368f8.\n. release timelines: will move towards new releases for changes that require incrementing major, minor, and patch changes.\ncomposer/packagist: updated maintainer\nsemantic versioning: have been using semantic versioning for some time now\n. The server you are POSTing to may be running an older version of Apache Traffic Server. The response is unique in that a 400 Content Length Required isn't actually a valid HTTP response. It probably meant 411 Length Required even though Content-Length isn't required for POST requests. This issue has been fixed in more recent versions of Apache Traffic Server (https://github.com/apache/trafficserver/commit/db3de18 / Allow POST requests without a Content-Length header).\nA couple options:\n- Update the server\n- Specify a Content-Length header\n. Referenced\nhttps://issues.apache.org/jira/browse/TS-2902\n. php\n$curl->setJsonDecoder(function($response) {\n    return json_decode($response, true);\n});\n. Sounds like a great idea. Thank you\n. Possible example usage:\nphp\n$curl = new Curl();\n$curl->addGet('http://www.example.com/search', array(\n    'q' => 'keyword',\n));\n$curl->addPost('https://www.example.org/email', array(\n    'subject' => 'Re: hi',\n    'body' => 'hello world',\n));\n$curl->addDelete('https://blog.example.org/entry', array(\n    'id' => '1234',\n));\n$curl->start();\n. Settings different options per request.\nphp\n$curl = new Curl();\n$get = $curl->addGet('http://www.example.com/search', array(\n    'q' => 'keyword',\n));\n$get->setUserAgent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1');\n. Experimental methods for MultiCurl have been added.\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->addGet('https://www.google.com/search', array(\n    'q' => 'hello world',\n));\n$multi_curl->addGet('https://duckduckgo.com/', array(\n    'q' => 'hello world',\n));\n$multi_curl->addGet('https://www.bing.com/search', array(\n    'q' => 'hello world',\n));\n$multi_curl->start();\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_get.php\n. @flyon - make sure you are using the latest HEAD version of php-curl-class\n. This should no longer be an issue as CURLOPT_WRITEHEADER is no longer used.\n79d099b9abf39f0df9d9a42d704bb1c11ee6c8e0\n. @WebnetMobile - I wish I could. I don't have access to update the version on packagist.org\n. @WebnetMobile - updated! thank you\n. Hi. Would you mind describing what you are attempting to accomplish in this change? Thanks\n. Thanks!\n. #82\n. Thanks!\n. Here's a post on Netbeans annotation support\nhttps://blogs.oracle.com/netbeansphp/entry/brand_new_annotations_support\n. Hi. Backwards compatibility is ideal, but not a strict rule. We're tracking changes permitted by PHP version in #380.\nClosing this in favor of #380.. Use Read the Docs webhook.\nUse markdown.\n. This library is fairly intuitive. For more info, see examples https://github.com/php-curl-class/php-curl-class/tree/master/examples. Thanks!\n. Updated readme in https://github.com/php-curl-class/php-curl-class/commit/02e7c0e6d53ea7bd4ee2dd1cdb99e6f46b4becc5\n. Fixed. Added php-curl-class as maintainer. Added Packagist service hook.\n. Hi, thank you for the report. I'm able to reproduce on 5.5.9. I will investigate.\n. Fixed in 343252cfdfd6111d2d9f367e81dbe1c52b5c6085. Can you try again with the latest version?\n. Thanks!\n. Hi,MultiCurl is available for this.\n``` php\n$multi_curl = new MultiCurl('https://www.example.com/search');\n$multi_curl->complete(function($instance) {\n    // Call completed. Do something.\n});\n$multi_curl->addGet(array('q' => 'foo'));\n$multi_curl->addGet(array('q' => 'bar'));\n$multi_curl->addGet(array('q' => 'baz'));\n$multi_curl->start();\n``\n. Thanks!\n. Hi. Order matters in this case. Set your callbacks before adding requests (addGet()`).\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->success(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was successful.' . \"\\n\";\n});\n$multi_curl->error(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was unsuccessful.' . \"\\n\";\n});\n$multi_curl->complete(function($instance) {\n    echo 'call completed' . \"\\n\";\n});\n$multi_curl->addGet('http://www.baidu.com');\n$multi_curl->addGet('http://www.qq.com');\n$multi_curl->start();\n. Fixed in 234d2bc5ae56bcd2f7e1ee2770918e29b01f89a8. Thanks\n. Hi @Kehet. The spec doesn't explicitly forbid a body in a delete. I'll add a third parameter in delete() to allow body data.\nBefore:\nphp\n$curl->delete($url, $query_parameters);\nAfter\nphp\n$curl->delete($url, $query_parameters, $request_body);\nhttp://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request\nhttp://stackoverflow.com/questions/14323716/restful-alternatives-to-delete-request-body\n. Hi. Here is a multicurl example with callbacks.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_get_callbacks.php\n. Fixed. Thank you!\n. Hi Wayne. What is the value of the $value parameters passed to the setCookie function? Also, what is the expected value of the cookie after calling the function? Thanks\n. Hi Wayne. Content-Length is added automatically by cURL.\nphp\n$curl = new Curl();\n$curl->post('http://www.example.com/', 'test');\nvar_dump($curl->request_headers);\nResponse\nclass Curl\\CaseInsensitiveArray#4 (1) {\n  private $container =>\n  array(6) {\n    'Request-Line' =>\n    string(15) \"POST / HTTP/1.1\"\n    'User-Agent' =>\n    string(94) \"PHP-Curl-Class/3.4.5 (+https://github.com/php-curl-class/php-curl-class) PHP/5.6.5 curl/7.38.0\"\n    'Host' =>\n    string(15) \"www.example.com\"\n    'Accept' =>\n    string(3) \"*/*\"\n    'Content-Length' =>\n    string(1) \"4\"\n    'Content-Type' =>\n    string(33) \"application/x-www-form-urlencoded\"\n  }\n}\n. Related to #171.\n. Hi. Is the content-type you are trying to match application/x-json?\n. Hi. Which IDE are you using?\n. \n. Related to #182.\n. May also want to include non-standard content-types: application/x-json, text/json, text/x-json\n. php\nprivate $json_pattern = '...';\nhttp://www.regexr.com/\nhttps://regex101.com/\n. #68, #174 \n. Added temporary fix in e11daecd4c45f5867ffeb428c125caf625e75a61.\n. php\nclass Curl {\n    public function __get($name) {\n        $deprecated = array(\n            'error_code' => 'errorCode',\n            'error_message' => 'errorMessage',\n            'curl_error' => 'curlError',\n            'curl_error_code' => 'curlErrorCode',\n            'curl_error_message' => 'curlErrorMessage',\n            'http_error' => 'httpError',\n            'http_status_code' => 'httpStatusCode',\n            'http_error_message' => 'httpErrorMessage',\n            'base_url' => 'baseUrl',\n            'request_headers' => 'requestHeaders',\n            'response_headers' => 'responseHeaders',\n            'raw_response_headers' => 'rawResponseHeaders',\n            'raw_response' => 'rawResponse',\n            'before_send_function' => 'beforeSendFunction',\n            'download_complete_function' => 'downloadCompleteFunction',\n        );\n        if (in_array($name, array_keys($deprecated))) {\n            trigger_error('Use of ' . $name . ' is deprecated. Use ' . $deprecated[$name] . ' instead', E_USER_DEPRECATED);\n            $name = $deprecated[$name];\n        }\n        return $this->$name;\n    }\n}\n. It is possible to POST without specifying a content-length.\nbash\n$ curl -X POST 'http://httpbin.org/post'\n{\n  \"args\": {}, \n  \"data\": \"\", \n  \"files\": {}, \n  \"form\": {}, \n  \"headers\": {\n    \"Accept\": \"*/*\", \n    \"Host\": \"httpbin.org\", \n    \"User-Agent\": \"curl/7.38.0\"\n  }, \n  \"json\": null, \n  \"origin\": \"XX.XXX.XXX.XXX\", \n  \"url\": \"http://httpbin.org/post\"\n}\nI suppose this is more likely expected:\nbash\n$ curl 'http://httpbin.org/post' -d \"\"\n{\n  \"args\": {}, \n  \"data\": \"\", \n  \"files\": {}, \n  \"form\": {}, \n  \"headers\": {\n    \"Accept\": \"*/*\", \n    \"Content-Length\": \"0\", \n    \"Content-Type\": \"application/x-www-form-urlencoded\", \n    \"Host\": \"httpbin.org\", \n    \"User-Agent\": \"curl/7.38.0\"\n  }, \n  \"json\": null, \n  \"origin\": \"XX.XXX.XXX.XXX\", \n  \"url\": \"http://httpbin.org/post\"\n}\n. I'm proposing that this change is made:\nBefore\nphp\n$curl->post('http://httpbin.org/post'); // no content-length\n$curl->post('http://httpbin.org/post', ''); // content-length: 0\n$curl->post('http://httpbin.org/post', array()); // no content-length\n$curl->post('http://httpbin.org/post', null); // content-length: 0\nAfter\nphp\n$curl->post('http://httpbin.org/post'); // no content-length (same)\n$curl->post('http://httpbin.org/post', ''); // content-length: 0 (same)\n$curl->post('http://httpbin.org/post', array()); // content-length: 0 (changed)\n$curl->post('http://httpbin.org/post', null); // content-length: 0 (same)\n. A Content-Length of 0 is now included in POST requests for empty, '', array(), and null.\n``` php\n$curl = new Curl();\n$curl->post('https://httpbin.org/post');\necho $curl->response->headers->{'User-Agent'} . \"\\n\";\nvar_dump($curl->response->headers->{'Content-Length'});\n$curl = new Curl();\n$curl->post('https://httpbin.org/post', array());\necho $curl->response->headers->{'User-Agent'} . \"\\n\";\nvar_dump($curl->response->headers->{'Content-Length'});\n$curl = new Curl();\n$curl->post('https://httpbin.org/post', '');\necho $curl->response->headers->{'User-Agent'} . \"\\n\";\nvar_dump($curl->response->headers->{'Content-Length'});\n$curl = new Curl();\n$curl->post('https://httpbin.org/post', null);\necho $curl->response->headers->{'User-Agent'} . \"\\n\";\nvar_dump($curl->response->headers->{'Content-Length'});\n```\n```\nResponse\nPHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.6.5 curl/7.38.0\nstring(1) \"0\"\nPHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.6.5 curl/7.38.0\nstring(1) \"0\"\nPHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.6.5 curl/7.38.0\nstring(1) \"0\"\nPHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.6.5 curl/7.38.0\nstring(1) \"0\"\n```\n. Thanks!\n. Hi. I've tested what you've described and I'm not able to reproduce. Is this a comparable test?\nphp\n$curl = new Curl();\n$curl->post('http://httpbin.org/post', '<?xml version=\"1.0\" encoding=\"UTF-8\"?><rss>...</rss>');\nvar_dump($curl);\n. Closing due to no reply. Thanks\n. I believe this was the fix @witul used.\nhttps://github.com/witul/php-curl-class/commit/ce4d1faa9b33e0a4775e8664c84ac18d8600cb0f\n``` php\n     private function parseHeaders($raw_headers)\n     {\n         $raw_headers = preg_split('/\\r\\n/', $raw_headers, null, PREG_SPLIT_NO_EMPTY);\n         $http_headers = new CaseInsensitiveArray();\n     $raw_headers_count = count($raw_headers);\n     for ($i = 1; $i < $raw_headers_count; $i++) {\n\n\nif(substr($raw_headers[$i],0,5)=='<?xml')\ncontinue;\n             list($key, $value) = explode(':', $raw_headers[$i], 2);\n             $key = trim($key);\n             $value = trim($value);\n             // Use isset() as array_key_exists() and ArrayAccess are not compatible.\n             if (isset($http_headers[$key])) {\n                 $http_headers[$key] .= ',' . $value;\n             } else {\n                 $http_headers[$key] = $value;\n             }\n         } return array(isset($raw_headers['0']) ? $raw_headers['0'] : '', $http_headers);\n\n}\n``\n. Hi. You'll pass the same parameters that you would pass tocurl_setopt`.\n\n\nphp\n$this->setOpt(CURLOPT_PROXY, '123.123.123.123:80');\n. Thanks!\n. Hi. Both curl_error_code and http_status_code are available to differentiate.\n. curl_error_code has been renamed to curlErrorCode.\nhttp_status_code has been renamed to httpStatusCode.\nphp\nif ($curlError) {\n    echo 'Curl error: ' . $curlErrorCode . \"\\n\";\n} else if ($httpError) {\n    echo 'Http error: ' . $httpError . \"\\n\";\n}\n. Here's a way to accomplish retries.\n``` php\n$url = 'https://www.example.com/';\n$retries = 0;\n$curl = new Curl();\n$curl->error(function($instance) use ($url, &$retries) {\n    if ($retries < 3) {\n        $curl->get($url);\n        $retries += 1;\n    }\n});\n$curl->get($url);\n. Hi. I clicked the \"Force Update\" button and it doesn't look like version 2.1.2 was added. Is there any reason you can't use the latest stable? Thanks\n. php\n/\n * Set Retry\n \n * @access public\n * @param  $decider\n /\npublic function setRetry(callable $decider)\n{\n}\n```\n. Retry is currently possible.\n``` php\n$url = 'https://www.example.com/';\n$data = array('foo' => 'bar');\n$retries = 0;\n$curl = new Curl();\n$curl->error(function($instance) use (&$curl, &$retries, $url, $data) {\n    if ($retries < 2) {\n        $retries += 1;\n        $curl->post($url, $data);\n    }\n});\n$curl->post($url, $data);\n```\n. @KTP95 - yes Curl::exec().\nphp\n$retries = 0;\n$curl = new Curl();\n$curl->error(function($instance) use (&$curl, &$retries) {\n    if ($retries < 2) {\n        $retries += 1;\n        $curl->exec();\n    }\n});\n$curl->post('https://www.example.com/', array('foo' => 'bar'));\n. @leopucci - so the logic you'd like is if $instance->error, automatically retry?\n. Implemented as\nphp\n$curl->setRetry($max_retries);\nor\nphp\n$curl->setRetry(function ($instance) {\n    return $instance->retries < 3;\n});\nin #468. We need a way to specify the amount of time to wait before making successive requests.\n. Okay, we can table this. As @thebeline mentioned, rate limiting is trivial to implement.\n. Hi. Do you have an example where buildURL fails without using urldecode and succeeds with using urldecode? I want to create a test case for this. Thank you\n. Hi thank you for the pull request. Do you have an example I can reproduce this for a test case?\n. That pointed me in the right directions. Thanks!\n. Fixed in d170b11672244f2a80d335a8fd5a0fe8e6ab4ba8. Thank you\n. Hi @raniellyferreira thank you for the pull request. I'm unable to reproduce the error.\nphp\n$curl = new Curl();\n$curl->post('http://httpbin.org/post', array(\n    'p_id_pais' => '1',\n    'p_id_mercado_comum' => '',\n    'p_id_area' => '',\n    'p_id_produto' => '',\n    'p_relatorio' => 'prod_aut_estab_bra_exp_pais.rdf',\n));\n. Correct. This is not an issue with PHP Curl Class, but the cURL installation.\n. Hi. Here's an example:\n``` php\n$data = json_encode(array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'date' => date('Y-m-d H:i:s'),\n));\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('https://httpbin.org/post', $data);\nvar_dump($curl->response->json);\n```\n. Hi. I've contacted Packagist for a fix.\nVersion 3.6.6 has already been released (https://github.com/php-curl-class/php-curl-class/releases/tag/3.6.6) and the Packagist Webhooks/Services has been active yet the latest version is not available on https://packagist.org/packages/php-curl-class/php-curl-class. I've also tried forcing an update through packagist.org to no avail.\n. 3.6.7 released. Thanks!\n. I see a memory leak when not using $curl->close();. By using $curl->close(), I don't see a memory leak.\nphp\n// Memory leak\nfor ($i = 0; $i < 5; $i++) {\n    $curl = new Curl();\n    $curl->close();\n    echo $i . ' ' . number_format(memory_get_usage()) . \"\\n\";\n    sleep(1);\n}\n$ php memory_leak.php \n0 450,280\n1 454,008\n2 457,688\n3 461,368\n4 465,048\nphp\n// No memory leak\nfor ($i = 0; $i < 5; $i++) {\n    $curl = new Curl();\n    $curl->close();\n    echo $i . ' ' . number_format(memory_get_usage()) . \"\\n\";\n    sleep(1);\n}\n$ php no_memory_leak.php \n0 447,904\n1 447,984\n2 447,984\n3 447,984\n4 447,984\n. ``` php\n$myfile = curl_file_create('cats.jpg', 'image/png', 'test_name');\n$curl = new Curl();\n$curl->post('https://www.example.com/upload', array(\n    'myfile' => $myfile,\n));\n``\n. I was unable to get this working. Mashape errored with \"You need to subscribe to a plan before consuming this API.\" The v1 endpoint errored with{\"message\":\"unauthorized: invalid API client ID\"}. I may just remove this example file.\n. Hi. What's the full url for the request you're calling? Is this it?https://www.example.com/Aros?$filter=Model eq webapi.Models.Model`\n. Might be similar to #217. A possible solution:\nphp\n$curl = new Curl();\n$url = str_replace(' ', '%20', 'https://www.example.com/Aros?$filter=Model eq webapi.Models.Model');\n$curl->download($url, '/tmp/myfile.bin');\n. Hi. Do you have an example url I can test with? Thanks\n. The url with %20 is the correct url.\n$ curl -I \"http://ktpbestuploader.altervista.org/Please Try Download This File.rar\"\nHTTP/1.1 404 Not Found\nDate: Thu, 13 Aug 2015 17:26:00 GMT\nServer: Apache\nContent-Length: 2978\nConnection: close\nContent-Type: text/html\n$ curl -I \"http://ktpbestuploader.altervista.org/Please%20Try%20Download%20This%20File.rar\"\nHTTP/1.1 200 OK\nDate: Thu, 13 Aug 2015 17:26:18 GMT\nServer: Apache\nLast-Modified: Thu, 13 Aug 2015 16:40:30 GMT\nETag: \"2886ccb-be-51d33fe449b80\"\nAccept-Ranges: bytes\nContent-Length: 190\nContent-Type: application/x-rar-compressed\nTry this:\nphp\n$curl = new Curl();\n$url = str_replace(' ', '%20', 'http://ktpbestuploader.altervista.org/Please Try Download This File.rar');\n$curl->download($url, '/tmp/file.rar');\n. I've test more sites and we can't assume urls with spaces and with %20 are the same.\n$ curl -I \"http://www.example.com/privacy%20policy%202009.htm\"\nHTTP/1.1 200 OK\nContent-Length: 66504\nContent-Type: text/html\nLast-Modified: Thu, 19 Jan 2012 19:17:44 GMT\nAccept-Ranges: bytes\nETag: \"7e5da85dfd6cc1:0\"\nServer: Microsoft-IIS/7.5\nX-Powered-By: ASP.NET\nDate: Tue, 25 Aug 2015 23:59:03 GMT\n$ curl -I \"http://www.example.com/privacy policy 2009.htm\"\nHTTP/1.1 400 Bad Request\nContent-Length: 311\nContent-Type: text/html; charset=us-ascii\nServer: Microsoft-HTTPAPI/2.0\nDate: Tue, 25 Aug 2015 23:59:33 GMT\nConnection: close\n. Something like this should work.\nphp\n$curl = new Curl();\n$curl->download('https://www.example.com/path/to/something/', function($instance, $tmpfile) {\n    $filename = 'Untitled.bin';\n    if (isset($headers['Content-Disposition']) &&\n        preg_match('/filename=\"(.*)\"/', $headers['Content-Disposition'], $matches)) {\n        $filename = $matches['1'];\n    } else if (isset($headers['Content-Type']) &&\n        preg_match('/name=\"(.*)\"/', $headers['Content-Type'], $matches)) {\n        $filename = $matches['1'];\n    }\n    $save_to_path = '/tmp/' . $filename;\n    $fh = fopen($save_to_path, 'wb');\n    stream_copy_to_stream($tmpfile, $fh);\n    fclose($fh);\n});\nwith a response header like this\nclass Curl\\CaseInsensitiveArray#1 (1) {\n  private $container =>\n  array(5) {\n    'Server' =>\n    string(5) \"nginx\"\n    'Date' =>\n    string(29) \"Sun, 02 Aug 2015 18:45:13 GMT\"\n    'Content-Disposition' =>\n    string(35) \"attachment; filename=\"starfish.gif\"\"\n    'Content-Transfer-Encoding' =>\n    string(6) \"base64\"\n    'Content-Type' =>\n    string(30) \"image/gif; name=\"starfish.gif\"\"\n  }\n}\n. Hi. I don't think we should be modifying the response headers. If the server isn't sending the correct resonse headers, you can parse response manually.\nphp\n$json_response = json_decode($curl->rawResponse, false);\n$xml_response = simplexml_load_string($curl->rawResponse);\n. Merged. Thanks for the pull request!\n. Thanks!\n. Fixed in 473f080a12322365a4dac1e1a414590ea9fc1839. Thanks\n. Fixed. Thank you\n. Hi. Thank you for the pull request.\nUsing getCookie could return an unexpected value. Consider this scenario:\n``` php\n$curl = new Curl();\n$curl->setCookie('foo', 'bar');\necho $curl->getCookie('foo'); // returns \"bar\" as expected\n$curl->get('https://www.example.com/'); // response changes cookie foo to \"baz\"\necho $curl->getCookie('foo'); // returns \"baz\", not \"bar\"\n```\nDo you think this is acceptible behavior going forward?\n. Perhaps renaming getCookie to getRequestCookie and adding getResponseCookie would clear things up.\n. This does sound useful. A possibly use case would be something like this:\n``` php\n$multi_curl = new MultiCurl();\n$multi_curl->complete(function($instance) {\n    $next_url = get_next_url();\n    if ($next_url) {\n        $multi_curl->addPost($next_url);\n    }\n});\n$multi_curl->addPost('https://www.foo.com/');\n$multi_curl->addPost('https://www.bar.com/');\n$multi_curl->addPost('https://www.baz.com/');\n$multi_curl->start();\n``\n. Thanks!\n. Thanks!\n. Thanks!\n. Hi.unsetHeader()` correctly sets the header key without a value causing the header to not be included in the request headers. From the man page:\n\nRemove an internal header by giving a replacement without content on the right side of the colon, as in: -H \"Host:\". If you send the custom header with no-value then its header must be terminated with a semicolon, such as -H \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n\nhttp://curl.haxx.se/docs/manpage.html#-H\n. Example test:\nphp\n// index.php\necho $_SERVER['HTTP_X_FOO'];\nphp\n$curl = new Curl();\n$curl->setHeader('X-FOO', 'BAR');\n$curl->post('http://127.0.0.1:8000');\necho $curl->rawResponse . \"\\n\"; // returns 'BAR'\nphp\n$curl = new Curl();\n$curl->setHeader('X-FOO', 'BAR');\n$curl->unsetHeader('X-FOO');\n$curl->post('http://127.0.0.1:8000');\necho $curl->rawResponse . \"\\n\"; // returns 'Notice: Undefined index: HTTP_X_FOO'\n. Can you provide a use case for implementing Curl::setDefaultHeader?\n. As mentioned in https://github.com/php-curl-class/php-curl-class/pull/237#issuecomment-134778822, unsetHeader() unsets the header you previously set. It does not reset any header. A use case is needed for implementing Curl::setDefaultHeader.\n. Additional note, think of unsetHeader() as removeHeader() which will remove an internal header.\n. Reopening to implement separate unsetHeader() and removeHeader().\n. Thanks for the suggestion!\n. We can make CURLINFO_HEADER_OUT optional. However, I think the default should remain true so that request headers are included by default.\nphp\n// Request headers included\n$curl = new Curl();\n$curl->get('https://www.example.com/');\nvar_dump($curl->requestHeaders);\nphp\n// Verbose enabled without request headers\n$curl = new Curl();\n$curl->setOpt(CURLINFO_HEADER_OUT, false);\n$curl->verbose();\n$curl->get('https://www.example.com/');\n. Thanks for the report!\n. Thanks!\n. Post/Redirect/Get tests using curl.\nbash\n$ curl --version\ncurl 7.43.0\n```\nPOST receives a 301 Moved Permanently. Subsequent request is a GET.\n\nPOST\n< 301\nGET\n```\n\n```\nPOST receives a 302 Found. Subsequent request is a GET.\n\nPOST\n< 302\nGET\n```\n\n```\nPOST receives a 303 See Other. Subsequent request is a GET.\n\nPOST\n< 303\nGET\n```\n\n```\nPOST receives a 307 Temporary Redirect. Subsequent request is a POST.\n\nPOST\n< 307\nPOST\n```\n\n```\nPOST receives a 308 Permanent Redirect. Subsequent request is a POST.\n\nPOST\n< 308\nPOST\n``\n. Post/Redirect/Get tests usingPHP Curl Class`.\n\n```\nPOST receives a 301 Moved Permanently. Subsequent request is a POST, but should be a GET.\n\nPOST\n< 301\nPOST\n```\n\n```\nPOST receives a 302 Found. Subsequent request is a POST, but should be a GET.\n\nPOST\n< 302\nPOST\n```\n\n```\nPOST receives a 303 See Other. Subsequent request is a POST, but should be a GET.\n\nPOST\n< 303\nPOST\n```\n\n```\nPOST receives a 307 Temporary Redirect. Subsequent request is a POST.\n\nPOST\n< 307\nPOST\n```\n\n```\nPOST receives a 308 Permanent Redirect. Subsequent request is a POST.\n\nPOST\n< 308\nPOST\n``\n. @Sigill - Thanks for the work on this. I'll review and comment inline.\n. I feel like we should follow the same behavior ascurlin that for all non-GETrequests that receive a301,302, or303response, we default to making subsequent requests usingGET`.\n\nFrom the manual:\n\nWhen curl follows a redirect and the request is not a plain GET (for example POST or PUT), it will do the subsequent request with a GET if the HTTP response was 301, 302, or 303. If the response code was any other 3xx code, curl will re-send the following request using the same unmodified method.\n. Ok let's post-redirect-get on 303 only.\n\nLet's do both: defaulting to doing post-redirect-get and supporting other types of requests. We can bump the major version number as this will be a backwards-incompatible api change.\n. @jdiefenbach83 this or a version of this will be merged in.\nStill need to decide how to handle support in versions that don't allow resetting the CURLOPT_CUSTOMREQUEST using null.\n. @Sigill Thank you!\n. Fixed. Thank you!\n. Hi. If you want your data json encoded when it POSTs, set the content-type to application/json.\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->setHeader('Content-Type', 'application/json');\n$multi_curl->addPost($data);\n. php\n$curl = new Curl();\n$curl->setHeader('X-Auth-Email', 'user@example.com');\n$curl->setHeader('X-Auth-Key', 'c2547eb745079dac9320b638f5e225cf483cc5cfdda41');\n$curl->setHeader('Content-Type', 'application/json');\n$curl->patch('https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/settings/development_mode', array(\n    'value' => 'off',\n));\n. php\n$curl = new Curl();\n$curl->setHeader('X-Auth-Email', 'user@example.com');\n$curl->setHeader('X-Auth-Key', 'c2547eb745079dac9320b638f5e225cf483cc5cfdda41');\n$curl->setHeader('Content-Type', 'application/json');\n$curl->delete('https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/purge_cache', array(\n    'purge_everything' => true,\n));\n. Yes proxy use is supported.\nphp\n$curl = new Curl();\n$curl->setOpt(CURLOPT_HTTPPROXYTUNNEL, 1);\n$curl->setOpt(CURLOPT_PROXY, 'someproxy.com:9999');\n$curl->setOpt(CURLOPT_PROXYUSERPWD, 'username:password');\n. Thanks!\n. Hi. Thanks for the pull request. There are a few changes.\n. Thanks!\n. @maxvodo - Not to worry. Thanks for the pull request.\n. Thanks!\n. Fantastic. Thanks!\n. @thebeline - Works for me. Make Curl::RFC2616 and Curl::RFC6265. Remove CurlCookieConst. Correct? Can you send me a pull request with what you had in mind. Thanks\n. Obsolete by 1ecdd55983c1afb3939dd45809652be1751c59de.\n. Hi. Thank you for the pull request. I believe the library correctly parses headers. If you find anything that hasn't been addressed, please let me know.. Hi. Thank you for the pull request. A lot has changed and been addressed since this was first opened. If you find anything that hasn't been addressed, please let me know.. Hi, apologies for the (very) late reply. I'm not yet convinced it's worth the effort to lock things down more. I would probably need to see frequent issues arise from misuse of the library. Thank you for the suggestion.. getOptand setOpts have been implemented. Thanks for the pull request.\n. @thebeline Will do\n. This is possible using CURLINFO_EFFECTIVE_URL.\nphp\ncurl_getinfo($ch, CURLINFO_EFFECTIVE_URL);\n. Hi. This can be accomplished without a code change.\n``` php\n$results = array();\n$multi_curl = new MultiCurl();\n$multi_curl->complete(function($instance) use (&$results) {\n    // Save the result.\n    $results[] = $instance;\n});\nfor ($i = 0; $i < 5; $i++) {\n    $multi_curl->addGet('https://httpbin.org/get', array('i' => $i));\n}\n$multi_curl->start();\n// Do something here with the results.\nforeach ($results as $result) {\n    echo $result->response->url . \"\\n\";\n}\n```\n. Hi. PhpStorm 10.0.1 doesn't seem to complain about this property.\n. Possible solutions:\nA) Update PhpStorm IDE\nB) Ignore warning\n. Travis CI seems to be using an old version of HHVM (3.6.6). Last environment update was 2015-04-09.\nhttps://docs.travis-ci.com/user/build-environment-updates/2015-04-09/\nhttps://docs.travis-ci.com/user/build-environment-updates/\nNeed at least HHVM 3.12.X scheduled \"January 29th 2016 (cut on January 18 2016)\" for this pull request to succeed.\nhttps://github.com/facebook/hhvm/wiki/Release%20Schedule\n. Hi C\u00e9dric. Can you simply unlink the vendor symlink?\nbash\n$ unlink php-curl-class/examples/vendor\n. Proposing to remove the symlink, that should solve things, right?\n. @Linuxhombre Yes interested. Thank you\n. Here's an example:\nphp\n$curl = new Curl();\n$curl->setCookie('foo', 'bar');\n$curl->get('https://httpbin.org/cookies');\nvar_dump($curl->response->cookies->foo === 'bar');\n. You'll want to use getResponseCookie() to get the cookie from the response headers.\n. Replaces array_key_exists() (slower) with isset() (faster) and removes unnecessary class CurlCookieConst.\n`` php\n<?php\n$associative = array(\n    \"'\" => true, '!' => true, '#' => true, '$' => true, '%' => true, '&' => true, '(' => true, ')' => true, '*' => true,\n    '+' => true, '-' => true, '.' => true, '/' => true, '0' => true, '1' => true, '2' => true, '3' => true, '4' => true,\n    '5' => true, '6' => true, '7' => true, '8' => true, '9' => true, ':' => true, '<' => true, '=' => true, '>' => true,\n    '?' => true, '@' => true, 'A' => true, 'B' => true, 'C' => true, 'D' => true, 'E' => true, 'F' => true, 'G' => true,\n    'H' => true, 'I' => true, 'J' => true, 'K' => true, 'L' => true, 'M' => true, 'N' => true, 'O' => true, 'P' => true,\n    'Q' => true, 'R' => true, 'S' => true, 'T' => true, 'U' => true, 'V' => true, 'W' => true, 'X' => true, 'Y' => true,\n    'Z' => true, '[' => true, ']' => true, '^' => true, '_' => true, '' => true, 'a' => true, 'b' => true, 'c' => true,\n    'd' => true, 'e' => true, 'f' => true, 'g' => true, 'h' => true, 'i' => true, 'j' => true, 'k' => true, 'l' => true,\n    'm' => true, 'n' => true, 'o' => true, 'p' => true, 'q' => true, 'r' => true, 's' => true, 't' => true, 'u' => true,\n    'v' => true, 'w' => true, 'x' => true, 'y' => true, 'z' => true, '{' => true, '|' => true, '}' => true, '~' => true,\n);\n$numeric = array(\n    \"'\", '!', '#', '$', '%', '&', '(', ')', '*', '+', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n    ':', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\n    'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\n    'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~',\n);\n$rounds = 1000000;\n$chars = array();\nfor ($i = 0; $i < $rounds; $i++) {\n    $chars[] = substr(str_shuffle(md5(microtime())), 0, rand(1, 10));\n}\n$start = microtime(true);\nforeach ($chars as $key) {\n    array_key_exists($key, $associative);\n}\necho 'associative array_key_exists: ' . number_format(microtime(true) - $start, 6) . \"\\n\";\n$start = microtime(true);\nforeach ($chars as $key) {\n    isset($associative[$key]);\n}\necho '           associative isset: ' . number_format(microtime(true) - $start, 6) . \"\\n\";\n$start = microtime(true);\nforeach ($chars as $key) {\n    in_array($key, $numeric);\n}\necho '            numeric in_array: ' . number_format(microtime(true) - $start, 6) . \"\\n\";\n```\nResults\nassociative array_key_exists: 0.140183\n           associative isset: 0.073476\n            numeric in_array: 0.987348\n     numeric in_array strict: 0.709985\n. #262\n. Hi. Why can't curl_getinfo($curl->curl, CURLINFO_EFFECTIVE_URL); be used?\n. Added $curl->effectiveUrl. Thanks\n. #287\n. Hi. You may want to look into using a HEAD request.\nbash\ncurl --head \"https://www.example.com/path/to/video.avi\"\nphp\n$curl->head('https://www.example.com/path/to/video.avi');\n. Hi. Casting the variable to a string should work.\n``` php\n$response = <<\n\n\n<![CDATA[https://www.example.com/]]>\n    \n\n<![CDATA[https://www.another-example.net/]]>\n    \n\n\nEOF;\n$xml_obj = @simplexml_load_string($response);\necho $xml_obj->items->item['0']->link . \"\\n\"; // https://www.example.com/\necho $xml_obj->items->item['1']->link . \"\\n\"; // https://www.another-example.net/\n```\n. You can now use a custom xml decoder.\nphp\n$curl = new Curl();\n$curl->setXmlDecoder(function($response) {\n    return simplexml_load_string($response, 'SimpleXMLElement', LIBXML_NOCDATA);\n});\n. #295\n. Perhaps a Curl::getResponseCookies()?\n. Hi. A pull request would be great. Are you looking for something like this?\nphp\npublic function getResponse() {\n    return $this->response;\n}\n. Hi, I'm revisiting this issue. If you'd like to test things you can pull in #529. Thank you. Thanks for the pull request. At this time I don't think we will be adding getters for public attributes. An example, I'd rather use var_dump($curl->response); than var_dump($curl->getResponse());.. Hi. Please pull in the latest version (4.11.0) which includes getResponseCookies. Thank you\n. @hayesrobin @ruslanbakanov @luisfavila my mistake. There's no getResponseCookies() method. You can simply use $curl->responseCookies.. To reproduce the Too many open files error:\n``` php\nuse \\Curl\\MultiCurl;\n$m = new MultiCurl();\nfor ($i = 0; $i <= 300; $i++) {\n    $m->addDownload('https://www.example.com/', 'file' . $i);\n}\n```\n\nPHP Warning:  fopen(filename): failed to open stream: Too many open files in ...\n. Hi. The too many open files was fixed in #375. I'm also seeing __destruct() being called as expected.\n\nbash\n$ php test.php \n__construct1\n__construct2\n__destruct2\n__destruct1\n``` php\n// test.php\n<?php\nclass MyCurl1 {\n    public $curl;\n    private $closure;\npublic function __construct()\n{\n    echo '__construct1' . \"\\n\";\n    $this->curl = curl_init();\n    $this->closure = function() {\n    };\n}\n\nfunction __destruct()\n{\n    echo '__destruct1' . \"\\n\";\n}\n\n}\nclass MyCurl2 {\n    public $curl;\npublic function __construct()\n{\n    echo '__construct2' . \"\\n\";\n    $this->curl = curl_init();\n}\n\nfunction __destruct()\n{\n    echo '__destruct2' . \"\\n\";\n}\n\n}\n$a = new MyCurl1();\n$b = new MyCurl2();\n``\n. Take a look at the output ofvar_dump($curl);`.\n. Check out this example.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/post_json.php\n. @sojic When queuing a new request with MultiCurl, a unique internal id is set. In the callback, $instance->id is available for use.\nphp\n$curl->id = $this->nextCurlId++;\nhttps://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/MultiCurl.php#L586\n. MultiCurl contains an id.\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->complete(function($instance) {\n    var_dump($instance->id);\n});\n$multi_curl->addGet('https://httpbin.org/get');\n$multi_curl->start();\n. 3ad8997bb9f9784f3c8d9f1a686abd0c9bfc1471 - Can this commit be broken out as a separate pr? Possibly related to #307.\n. @thebeline It's getting caught up by https://github.com/php-curl-class/php-curl-class/blob/master/tests/script.sh\nTab characters.\n\nTab character found in ./src/Curl/MultiCurl.php:43:    * Auto Close \nTab character found in ./src/Curl/MultiCurl.php:44:  \nTab character found in ./src/Curl/MultiCurl.php:45:  * Wether to auto-close child Curl Requests one complete\nTab character found in ./src/Curl/MultiCurl.php:46:  * \nTab character found in ./src/Curl/MultiCurl.php:47:  * @param bool $true (optional)\nTab character found in ./src/Curl/MultiCurl.php:48:  * \nTab character found in ./src/Curl/MultiCurl.php:49:  * @return void\nTab character found in ./src/Curl/MultiCurl.php:50:  * \nTab character found in ./src/Curl/MultiCurl.php:51:  * @access public \nTab character found in ./src/Curl/MultiCurl.php:52:  /\n. Thanks for the pull request. The issues addressed should now be resolved.\n. Look at the response headers for Location.\n\nphp\nvar_dump($curl->responseHeaders);\n. php\n$curl->responseHeaders['Location']\n. Automatic response parsing can now be disabled.\nphp\n$curl->setDefaultDecoder(false);\n$curl->setJsonDecoder(false);\n$curl->setXmlDecoder(false);. Thank you for the pull request. Some of these changes have now been incorporated.. Looks great thanks!\n. Hi @CashCode. Requests are now automatically added each time a request completes using MultiCurl.\n. Hi @CashCode the memory issues should now be fixed (3789e2077b0c6fe3acc828c1235cf01726b3e1fe). Try the latest 6.0.0 release. Thanks\n. @tomswinkels I think you can use something like this\nphp\n// curl -v -X POST --header \"Transfer-Encoding: chunked\" -F mysong=@song.mp3 \"http://127.0.0.1:8000/\"\n$curl = new Curl();\n$curl->verbose();\n$curl->setHeader('Transfer-Encoding', 'chunked');\n$curl->post('http://127.0.0.1:8000/', array(\n    'mysong' => '@song.mp3',\n));\n. @aisn Has this issue been resolved?\nFor php < 5.5.0 when CURLFile class doesn't exists, the library will use the old @filename file uploading.\n. Closing as this seems to no longer be an issue. Please comment if the issue persists. Thanks\n. Thanks!\n. Hi. This is a known and unfixable issue that affects PHP <= 5.5.11. Please use a new curl object for each request if you're unable to update the version of php you are using.\n. Hi. Thanks for opening a ticket. I don't feel there's sufficient justification to reimplement this library using fsockopen, fopen/stream_context_create, or similar.\n. I don't think it's a good idea to remove the ssl certificate verification in this example.\n. Hi. I'm unable to reproduce. The library checks that the file referenced exists[1]. Make sure you've updated your composer dependencies.\n``` php\n// test.php\n<?php\nrequire DIR . '/vendor/autoload.php';\nuse \\Curl\\Curl;\n$curl = new Curl();\n$curl->post('http://127.0.0.1:8001/', array(\n    'username' => 'myusername',\n    'password' => '@MyPasswordStartWith@',\n));\n```\nphp\n// server.php\n<?php\nerror_log($_POST['password'], 4);\n$ php -S 127.0.0.1:8001 server.php \nPHP 7.0.2 Development Server started at Thu Jun  2 01:38:24 2016\nListening on http://127.0.0.1:8001\nDocument root is /Users/user\nPress Ctrl-C to quit.\n[Thu Jun  2 01:38:28 2016] @MyPasswordStartWith@\n[Thu Jun  2 01:38:28 2016] 1\n[1] https://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/Curl.php#L154\n. Proxy can now be set like this\nphp\n$curl = new Curl();\n$curl->setProxy('proxy.example.com', '1080', 'username', 'password');\n$curl->setProxyTunnel();\n$curl->get('https://httpbin.org/get');\nvar_dump($curl->response);. Thank you for the suggestion. Not sure if a specific function like this needs to be added to the library since it can be added fairly easily using Curl::setOpt. I would also rename it to something like Curl::setMaxDownloadSize or Curl::setMaxDownloadSizeBytes.\n. Accepting this as curl includes a --max-filesize <bytes> option:\n```\nSpecify  the maximum size (in bytes) of a file to download. If the file requested is larger than this value, the\ntransfer will not start and curl will return with exit code 63.\nNOTE: The file size is not always known prior to download, and for such files this option has no effect even  if\nthe file transfer ends up being larger than this given limit. This concerns both FTP and HTTP transfers.\n``\n. Thanks!\n. @dotancohen Whilecurl's--max-filesizedoes not prevent downloading a file larger than the specified size,Curl::setMaxFilesize()does abort the transfer when the number of downloaded bytes exceeds the specified number of maximum bytes.. The code changes seem to suggest that this request is to allow for setting a default decoder (not to have a default decoder).\n. This pr looks like it was an accident. Closing.\n. Thanks for the suggestion. Use of method chaining is a bit controversial. I'm-1` on adding this.\n\nOptimize for the reading case. NEVER optimize to make code faster to write. After all, you'll write it once, but read it over and over and over.\n\nhttps://www.reddit.com/r/PHP/comments/251699/method_chaining_yes_or_no_only_for_setters/chcn3zc\n. Fixed. Thanks\n\n. Thanks!\n. @thebeline You raise a good point. Do you think Curl::totalTime would be best removed and do which of the following:\n1. Left as is and call as needed; e.g. $totalTime = curl_getinfo($curl->curl, CURLINFO_TOTAL_TIME);\n2. Implemented as Curl::getInfo so $totalTime = $curl->getInfo(CURLINFO_TOTAL_TIME);\n3. Implemented as Curl::getTotalTime so $totalTime = $curl->getTotalTime();\n. I'm leaning towards implementing Curl::getInfo as this will also allow retrieving other information listed on https://secure.php.net/manual/en/function.curl-getinfo.php\nphp\n$totalTime = $curl->getInfo(CURLINFO_TOTAL_TIME);\n$uploadSpeed =  = $curl->getInfo(CURLINFO_SPEED_UPLOAD);\n$downloadSpeed =  = $curl->getInfo(CURLINFO_SPEED_DOWNLOAD);\n. Hi. Base url is meant to be set for all the subsequent calls with only the data being passed to the follow. This is how it would be rewritten:\nphp\n$curl = new \\Curl\\Curl($endpoint . '/request-uri');\n$response = $curl->get([\n    'someParam' => $myParamValue\n]);\n. Thanks for the suggestion. Ticket #347 created.\n. It's not currently possible to retry multicurl calls. Maybe either of these could be implemented:\nphp\n$multi_curl->setRetry(function($instance) {\n    return $instance->runCount < 3;\n});\nor\nphp\n$multi_curl->error(function($instance) {\n    if ($instance->runCount < 3) {\n        $instance->run();\n    }\n});\nThis issue is similar to https://github.com/php-curl-class/php-curl-class/issues/202.\n. Implemented as\nphp\n$multi_curl->setRetry($max_retries);\nor\nphp\n$multi_curl->setRetry(function ($instance) {\n    return $instance->retries < 3;\n});\nin #468. Thanks for the suggestion.\n. I believe the uploaded attachments key needs to be specified like this:\nphp\n$postData = array(\n    'attachments' => curl_file_create(\"/home/harpreet/Pictures/products/elisabeth1.jpg\", \"image/jpeg\", \"elisabeth1.jpg\"),\n);\n$this->curl->post($this->url, $postData);\n. Here's a full example:\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/upload_file.php\n. ``` php\n$username = 'BE-SURE-TO-PUT-YOUR-OWN-PASSWORD-HERE';\n$password = 'X';\n$curl = new Curl();\n$curl->verbose();\n$curl->setBasicAuthentication($username, $password);\n$curl->setHeader('Content-Type', 'multipart/form-data');\n$curl->post('https://BE-SURE-TO-PUT-YOUR-OWN-SUBDOMAIN-HERE.freshdesk.com/api/v2/tickets', array(\n    'name' => 'My Ticket',\n    'description' => 'My Ticket\\'s Description.',\n    'status' => 2,\n    'subject' => 'My Ticket\\'s Subject',\n    'priority' => 1,\n    'email' => 'user@example.com',\n// Option 1.\n// 'attachments[]' => new CURLFile('/tmp/Lenna.png'),\n\n// Option 2.\n// 'attachments[]' => '@/tmp/Lenna.png',\n\n));\n```\n. #340\n. Yes this appears to be a bug that occurs with a multidimensional array that includes a file. I'll investigate.\nPossible test case:\nphp\n$data = array(\n    'requester_id' => 16000825186,\n    'custom_fields' => array(\n        'hospital_selected' => 'Sample Hospital',\n        'lyfboat_inquiry_id' => 744,\n        'patient_first_name' => 'Test',\n        'patient_last_name' => 'User',\n        'patient_age' => 10,\n        'patient_gender' => 'Male',\n        'patient_country' => 'Algeria',\n        'patient_city' => 'hullu',\n        'treatment_selected' => 'High Intensity Focused Ultrasound',\n        'lyfboat_member_id' => 264,\n        'timeframe' => 'Within next 30 Days',\n    ),\n    'type' => 'Inquiry',\n    'subject' => 'Inquiry for High Intensity Focused Ultrasound',\n    'description' => '<h1> Big Sample Text </h1>',\n    'status' => 2,\n    'priority' => 2,\n    'attachments' => '@/home/harpreet/Pictures/products/elisabeth1.jpg',\n);\n. Narrowed it down to a bug in PHP. You can't use a multidimensional array with either CURLFile nor the @filename API.\nMultidimensional arrays and CURLFile in CURLOPT_POSTFIELDS\nhttps://bugs.php.net/bug.php?id=67477\n\nAs of PHP 5.2.0, value [passed to CURLOPT_POSTFIELDS] must be an array if files are passed to this option with the @ prefix.\n\nThis prevents you from using http_build_query with the @filename API.\n\nAs of PHP 5.5.0, the @ prefix is deprecated and files can be sent using CURLFile.\n\nThis discourages the use of the @ prefix.\nTests assume the calling php is php55 and ignore the deprecation warnings:\n\nDeprecated: curl_setopt(): The usage of the @filename API for file uploading is deprecated.\n\n``` php\n// Works\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => '@/tmp/1.txt',\n    'attachments[1]' => '@/tmp/2.txt',\n);\n// Works\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => new CURLFile('/tmp/1.txt'),\n    'attachments[1]' => new CURLFile('/tmp/2.txt'),\n);\n// Fail\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => '@/tmp/1.txt',\n    'attachments[1]' => '@/tmp/2.txt',\n    'baz' => array(\n        'a',\n        'b',\n        'c',\n    ),\n);\n// Fail\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => new CURLFile('/tmp/1.txt'),\n    'attachments[1]' => new CURLFile('/tmp/2.txt'),\n    'baz' => array(\n        'a',\n        'b',\n        'c',\n    ),\n);\n// Fail\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => '@/tmp/1.txt',\n    'attachments[1]' => '@/tmp/2.txt',\n    'baz' => array(\n        'a' => '1',\n        'b' => '2',\n        'c' => '3',\n    ),\n);\n// Fail\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => new CURLFile('/tmp/1.txt'),\n    'attachments[1]' => new CURLFile('/tmp/2.txt'),\n    'baz' => array(\n        'a' => '1',\n        'b' => '2',\n        'c' => '3',\n    ),\n);\n```\nWith code:\n$curl = curl_init();\ncurl_setopt($curl, CURLINFO_HEADER_OUT, false);\ncurl_setopt($curl, CURLOPT_VERBOSE, true);\ncurl_setopt($curl, CURLOPT_STDERR, STDERR);\ncurl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'POST');\ncurl_setopt($curl, CURLOPT_POST, true);\ncurl_setopt($curl, CURLOPT_POSTFIELDS, $post_data);\ncurl_setopt($curl, CURLOPT_URL, 'http://127.0.0.1:8000/');\ncurl_setopt($curl, CURLOPT_SAFE_UPLOAD, false);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_exec($curl);\nA possible solution would be to make 2 separate requests. First request would be the multidimensional post data without a file. The 2nd request would have the file data.\n. POSTing the following is possible in curl from the command line, but not in php.\nphp\n$post_data = array(\n    'foo' => 'bar',\n    'attachments[0]' => '@/tmp/1.txt',\n    'attachments[1]' => '@/tmp/2.txt',\n    'baz' => array(\n        'a',\n        'b',\n        'c',\n    ),\n);\nbash\ncurl \\\n    --request POST \\\n    \"http://127.0.0.1:8000/\" \\\n    --form \"foo=bar&baz%5B0%5D=a&baz%5B1%5D=b&baz%5B2%5D=c\" \\\n    --form \"attachments[]=@/tmp/1.txt\" \\\n    --form \"attachments[]=@/tmp/2.txt\"\n. Hi this should now be possible with the 5.0.0 release.\n. Implements using an absolute or relative URL\nhttps://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n. Possibly useful for test cases.\nhttp://w3c-test.org/url/url-constructor.html. 4.12.0 has been released. Thanks\n. Hi. Can you give an example of what you are trying to accomplish? Also, buildPostData should not typically be used directly. Here's an example of how to POST json data. https://github.com/php-curl-class/php-curl-class/blob/master/examples/post_json.php\n. #333 \n. Thanks for the suggestion!\n. released!\n. @nesttle \nphp\n$curl = new Curl();\n$curl->setDefaultJsonDecoder($assoc, $depth, $options);\n. Hi thanks for filing a bug. Similar to https://github.com/php-curl-class/php-curl-class/issues/345\nI've been working on a fix, hang tight. Thanks\n. Hi. This should now be fixed with the 5.0.0 release. Thanks\n. Hi. You should probably only be calling start() once. In your example, it would be after queueing the requests.\n```\n$curl_opts = [\n    CURLOPT_CONNECTTIMEOUT=>3,\n    CURLOPT_TIMEOUT=>5\n];\n$multi_curl = new MultiCurl();\nforeach($curl_opts as $key=>$value)\n    $multi_curl->setOpt($key, $value);\n$multi_curl->complete(function($instance){\n    echo 1;\n});\nforeach($domains as $domain){\n    $multi_curl->addGet('http://'.$domain);\n}\n$multi_curl->start();\n```\nHere's another example\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_get_callbacks.php\n. Fixed in 52f4df9cfe1514b49daef5893c499212c3a8546d.\n. Hi. Thanks for the pull request. Can't say I've needed this request method, but seems fine. Will wait until the build finishes.\n. Hi @Gormartsen Glad you like it! I've merged your changes. Thanks!\n. Try $curl->setHeader('Content-Type', 'multipart/form-data');.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/upload_file.php\n. Hi. Thanks for the suggestion. I was wondering what your use case for this would be.\n. Active support for PHP 5.6 ended on Jan 19, 2017. We may just jump to requiring 5.6+\n\nhttps://secure.php.net/supported-versions.php. @gotardo Since there's still a high percentage of users on old versions of PHP and the library works on 7.x as is, I personally am not going to dive into making PHP 7+ only changes just yet.\n\nfrom https://wordpress.org/about/stats/. Hi. 302 is redirection. Take a look at var_dump($curl->responseHeaders);, specifically var_dump($curl->responseHeaders['Location']);.\n. @zuoRambo \nphp\n$curl = new Curl();\n$curl->setOpt(CURLOPT_FOLLOWLOCATION, true);\n$curl->download('https://www.example.com/image.png', '/tmp/image.png');\n. Thanks for the suggestion!\n. Here's an example https://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_upload_file.php\n. Hi. Here's an example https://github.com/php-curl-class/php-curl-class/blob/master/examples/download_file_with_redirect.php\n. Fixed in 36ad0e4ecf24ffd1d576113fa826be949df6cc1c. Thanks!\n. Each of these\nbash\n$ curl http://127.0.0.1:8000/ -d 'foo[]=bar&foo[]=baz'\nbash\n$ curl http://127.0.0.1:8000/ -d 'foo[0]=bar&foo[1]=baz'\nphp\n$curl->post('http://127.0.0.1:8000/', array(\n    'foo' => array(\n        'bar',\n        'baz',\n    ),\n));\nphp\n$curl->post('http://127.0.0.1:8000/', array(\n    'foo[0]' => 'bar',\n    'foo[1]' => 'baz',\n));\nwill return this output displaying the $_POST data\narray(1) {\n  [\"foo\"]=>\n  array(2) {\n    [0]=>\n    string(3) \"bar\"\n    [1]=>\n    string(3) \"baz\"\n  }\n}\nusing this php page\nphp\n<?php\nvar_dump($_POST);\n. Pass data as a string to Curl::post(). http_build_query_without_indexes should work as long as your data array is not multidimensional.\n``` php\n<?php\nrequire DIR . '/vendor/autoload.php';\nuse \\Curl\\Curl;\nfunction http_build_query_without_indexes($query) {\n    $array = array();\n    foreach ($query as $key => $value) {\n        $key = rawurlencode($key);\n        if (is_array($value)) {\n            foreach ($value as $v) {\n                $v = rawurlencode($v);\n                $array[] = $key . '=' . $v;\n            }\n        } else {\n            $value = rawurlencode($value);\n            $array[] = $key . '=' . $value;\n        }\n    }\n    return implode('&', $array);\n}\n$data1 = array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'param' => array(\n        'hello',\n        'world',\n    ),\n);\n$curl = new Curl();\necho $curl->post('http://127.0.0.1:8000/', http_build_query_without_indexes($data1));\n// id=1&content=Hello%20world%21&param=hello&param=world\n```\nphp\n<?php\n// index.php\necho file_get_contents('php://input');\nbash\n$ php -S 127.0.0.1:8000 index.php\n. @zuoRambo Those examples look correct. If you need foo=hello&foo=world, use http_build_query_without_indexes(). The normal behavior will encode your examples to foo%5B0%5D=hello&foo%5B1%5D=world.\n. Perhaps the content-type in the response headers isn't xml. Look at var_dump($curl->responseHeaders['content-type']);or var_dump($curl->responseHeaders);.\n. #237 \n. Hi. UTF-8 is not a valid argument for CURLOPT_ENCODING. Try an empty string instead.\nphp\n$curl->setOpt(CURLOPT_ENCODING, '');\n. Hi. You can set custom headers with $curl->setHeader().\n. Thanks!\n. Fixed. Thanks!\n. Hi. When using MultiCurl, the connection information is cached and reused where possible.\n\nIf you instead use the multi interface, the connection cache will be kept within the multi handle and will be shared among all the easy handles that are used within the same multi handle.\n\nhttps://curl.haxx.se/docs/faq.html#What_about_Keep_Alive_or_persist\n. Here's an example for how to reuse using Curl instead of MultiCurl.\nphp\n$curl = new Curl();\n$curl->get('https://www.example.com/');\nvar_dump($curl->response);\n$curl->get('https://www.example.com/');\nvar_dump($curl->response);\n. Right now we have\nphp\n$curl = new Curl();\nif ($curl->error) {\n    // Handle error.\n} else {\n    // Handle response.\n}\nWhat would you like to be able to do?\n. Try/Catch For:\n- Keeps error-handling code separate\n- Handling different error types\n- Cascading exceptions\n- Handle errors with user-defined error handler (set_error_handler()). Try/Catch Against:\n- Slower (but does not add significant overhead)\n- Backwards compatible. Ideas for exceptions\nhttp://docs.guzzlephp.org/en/latest/quickstart.html#exceptions\nhttps://github.com/guzzle/guzzle/tree/master/src/Exception. Thanks for the suggestion!\n. Thanks for the suggestion!\n. Hi. Here's an example showing how to POST json.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/post_json.php\nYou need\nphp\n$curl->setHeader('Content-Type', 'application/json');\n. Hi. Try to get from options:\nphp\n$data = $instance->getOpt(CURLOPT_POSTFIELDS);\n. php\n$curl->setOpt(CURLOPT_SSLVERSION, 6);\n. Seems to have been caused by a lack of a trailing newline in the cookie file and thus the cookie file fails to be read correctly.\nhttps://github.com/php-curl-class/php-curl-class/pull/414/commits/7a623ac0de3d045700b37765b681496f2b635059. Fixed in #414.. Hi. Thanks for the suggestion. Will implement Curl::setCookies.\nphp\n$cookie = $curl->responseCookies;\n$curl->setCookies($cookie);. Fixed in #418.. Hi. Adding a callback for multicurl downloads is currently possible. Here's an example:\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->success(function ($instance) {\n    echo 'call to \"' . $instance->url . '\" was successful.' . \"\\n\";\n});\n$multi_curl->error(function ($instance) {\n    echo 'call to \"' . $instance->url . '\" was unsuccessful.' . \"\\n\";\n});\n$multi_curl->addDownload('https://www.example/image.png', '/tmp/image.png');\n$multi_curl->addDownload('https://www.example/another-image.png', '/tmp/another-image.png');\n$multi_curl->start();. https://github.com/php-curl-class/php-curl-class/issues/415#issuecomment-268959368. #413 . Thanks for the pull request. Just realized this is like #441. I believe what you're trying to do is now possible.\nphp\n// https://httpbin.org/get?foo=bar&foo=baz\n$curl = new Curl();\n$curl->get('https://httpbin.org/get', 'foo=bar&foo=baz');. This should accomplish what you're trying to achieve.\n```php\n$multi_curl = new MultiCurl();\n$multi_curl->complete(function($instance) {\n    echo \"Job ID: \".$instance->jobId.\" is done\";\n});\n$mc = $multi_curl->addPost('https://site.org/get', $data1);\n$mc->jobId = 1;\n$mc = $multi_curl->addPost('https://site.org/get', $data2);\n$mc->jobId = 2;\n$mc = $multi_curl->addPost('https://site.org/get', $data3);\n$mc->jobId = 3;\n$multi_curl->start();\n```. > curl --insecure --cert-type pem --cert keyStore.pem -H 'Content-Type: application/json' -X POST -d '{\"foo\": \"bar\"}' \"https://api.sandbox.foo.com/xyz/endPoint\" | json_pp\nDoes this curl call from the command line return a successful http status code?\n. > here is the code: ...\nThis would be the equivalent\nphp\n$curl = new Curl();\n$curl->setHeader('Accept', 'application/json');\n$curl->setHeader('Content-Type', 'application/json');\n$curl->setOpt(CURLOPT_SSLCERT, 'keyStore.pem');\n$curl->setOpt(CURLOPT_SSLKEY, 'keyStore.pem');\n$curl->setOpt(CURLOPT_SSL_VERIFYPEER, 1);\n$curl->post('https://api.sandbox.foo.com/xyz/endPoint', array('foo'=>'bar'));\nvar_dump($curl->response);\nMaybe try comparing curl --verbose ...and $curl->verbose();.. If you're still having trouble, please follow up on Stack Overflow (https://stackoverflow.com/). Thanks. Hi. Please post this help question on Stack Overflow (https://stackoverflow.com/) or similar. Thanks. Replace null with empty string.\nphp\n$multi_curl->addPost('http://127.0.0.1:8000/', array(\n    'to' => 'alice',\n    'subject' => 'hi',\n    'body' => 'hi Alice',\n    '(symbols)' => '',\n));\n$multi_curl->addPost('http://127.0.0.1:8000/', array(\n    'to' => 'bob',\n    'subject' => 'hi',\n    'body' => 'hi Bob',\n    '(symbols)' => '',\n));. Hi. MultiCurl requests are made concurrently. Use Curl::setConcurrency() as needed.\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->setConcurrency(25);\n$multi_curl->addDownload('https://www.example.com/image1.png', '/tmp/1.png');\n$multi_curl->addDownload('https://www.example.com/image2.png', '/tmp/2.png');\n$multi_curl->start();. Hi. Please provide a test case so I can reopen and look into it. Thanks. Renewed the cert. Attempted to fix the cron that renews the cert. Thanks. Calling Curl::setUrl() and Curl::exec() directly should work.\nphp\n$curl = new Curl();\n$curl->setOpt(CURLOPT_CUSTOMREQUEST, 'GET');\n$curl->setOpt(CURLOPT_NOBODY, 1);\n$curl->setOpt(CURLOPT_HEADER, 1);\n$curl->setUrl('https://httpbin.org/get');\n$curl->exec();\nvar_dump($curl->httpStatusCode);. @asktobeasked can you provide a code snippet to reproduce the problem? Thanks. @asktobeasked I'm unable to reproduce the issue. Can you reply with a code sample to reproduce? That would really help. I also created a pull request (https://github.com/php-curl-class/php-curl-class/pull/434) with the changes mentioned, but it breaks the build.. Unable to reproduce the \"process cannot access the file\" error. As suggested, tried:\nphp\n$curl = new Curl();\n$curl->download('https://secure.php.net/images/logos/php-med-trans.png', '/tmp/php-med-trans.png');. Reopening since there are more reports of this bug. Still need to determine how exactly to reproduce this issue.. According to @Chak10's comment, it appears this bug occurs when using Wampserver.. Thank you for the comments and help debugging this issue. I was able to reproduce on Windows. A fix will be out shortly.. Hi. Can you try this fix https://github.com/php-curl-class/php-curl-class/pull/433/files? Thanks. @wolaiye1010 can you provide a code snippet to reproduce the problem? Thanks. I would save and compare the output of var_dump($curl); via the command line versus php-fpm. Perhaps there's a difference in the request.. Hi. What content-type is the server expecting? If the server is expecting multipart/form-data, you can do this:\nphp\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'multipart/form-data');. I'm not following. I don't see bodyParams in your examples.\nI need a better example of what your full script looks like. Does it look like this?\n```php\n$curl = new \\Curl\\Curl();\n$curl->post($server_host, array('name' => 'name'));\nvar_dump($curl->response);\n$curl->post($server_host, array('name' => 'name'));\nvar_dump($curl->response);\n. Here's what I tested. I created a file `file.txt` and ran the following. Do you see the same?php\nuse \\Curl\\Curl;\n$curl = new \\Curl\\Curl();\n$curl->setHeader('Content-Type', 'multipart/form-data');\n$curl->post('http://127.0.0.1:8000/', array('file' => '@file.txt'));\necho 'response 1:' . \"\\n\";\nvar_dump($curl->response);\n$curl->close();\n$curl_new = new \\Curl\\Curl();\n$curl_new->post('http://127.0.0.1:8000/', array('name' => 'name'));\necho 'response 2:' . \"\\n\";\nvar_dump($curl_new->response);\n$curl_new->close();\n```\n$ php example.php \nresponse 1:\nstring(84) \"string(70) \"multipart/form-data; boundary=------------------------56dc8a146f910c92\"\n\"\nresponse 2:\nstring(47) \"string(33) \"application/x-www-form-urlencoded\"\n\". For the server\nphp\n<?php\nvar_dump($_SERVER['CONTENT_TYPE']);\n$ php -S 127.0.0.1:8000 index.php. I'm unable to reproduce. What operating system are you using?\nphp\n<?php\nvar_dump(PHP_VERSION);\nvar_dump($_SERVER['HTTP_CONTENT_TYPE']);\nFrom the command line\n$ php --version\nPHP 5.5.25 (cli) (built: Jul  3 2017 03:30:51) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v2.5.0, Copyright (c) 1998-2015 Zend Technologies\n$ php page.php \nresponse 1:\nstring(103) \"string(6) \"5.5.25\"\nstring(70) \"multipart/form-data; boundary=------------------------ae3a2490b7056095\"\n\"\nresponse 2:\nstring(66) \"string(6) \"5.5.25\"\nstring(33) \"application/x-www-form-urlencoded\"\n\"\nFrom the browser\nresponse 1:\nstring(103) \"string(6) \"5.5.25\"\nstring(70) \"multipart/form-data; boundary=------------------------ca76eaf006042e19\"\n\"\nresponse 2:\nstring(66) \"string(6) \"5.5.25\"\nstring(33) \"application/x-www-form-urlencoded\"\n\". Confirmed version latest stable (v7.2) working with Laravel.\n\"require\": {\n        \"php\": \">=5.6.4\",\n        \"laravel/framework\": \"5.4.*\",\n        \"laravel/tinker\": \"~1.0\",\n        \"php-curl-class/php-curl-class\": \"^7.2\"\n    },. 1. The protocols supported are HTTP, FTP, IMAP, POP3, and SMTP. The values GET and POST are supported and not meaningless.\n2. You can restore CURLOPT_CUSTOMREQUEST to the the default by using null. We use it where supported or trigger an error.\nClosing since you found a solution.. Commented on pull request\nhttps://github.com/php-curl-class/php-curl-class/pull/440#issuecomment-292159452. I believe I've found the issue. May need to move the callback function to the global scope to avoid the memory leak / circular reference.\nphp\n// memory leaks\n$this->setOpt(CURLOPT_HEADERFUNCTION, array($this, 'headerCallback'));\nphp\n// no memory leaks\n$this->setOpt(CURLOPT_HEADERFUNCTION, 'headerCallback');. Fixed in #445. Ended up being 2 separate memory leaks. Thanks!. Hi. Memory usage is expected when adding additional requests. I don't see a memory leak here since the memory usage is the same before calling MultiCurl::close() and after close()/unset().. ```php\n$multi_curl = new MultiCurl();\nfor ($i0 = 0; $i0 < 10; $i0++) {\nfor ($i = 0; $i <= 1000; $i++) {\n    $multi_curl->addGet(Test::TEST_URL);\n}\n\n$multi_curl->start();\n\necho $i0 . ' memory: ' . memory_get_usage(true) . \"\\n\";\n\n}\necho 'before close: ' . memory_get_usage(true) . \"\\n\";\n$multi_curl->close();\necho 'after close:  ' . memory_get_usage(true) . \"\\n\";\nunset($multi_curl);\necho 'after unset:  ' . memory_get_usage(true) . \"\\n\";\n\n0 memory: 16777216\n1 memory: 23068672\n2 memory: 31457280\n3 memory: 37748736\n4 memory: 46137344\n5 memory: 54525952\n6 memory: 60817408\n7 memory: 67108864\n8 memory: 75497472\n9 memory: 83886080\nbefore close: 83886080\nafter close:  83886080\nafter unset:  83886080\n```. Yes this is expected when using anonymous functions.\nhttps://bugs.php.net/bug.php?id=68132\nhttps://bugs.php.net/bug.php?id=33487\nhttps://bugs.php.net/bug.php?id=69615\nPerhaps anonymous functions should be replaced.. Commented https://github.com/php-curl-class/php-curl-class/issues/439#issuecomment-298226161. Hi. Are you making a POST request, a GET, request or something else? Can you provide a sample request you're making? Thanks. How are you constructing the request in php? Can you just make the request like this?\nphp\n$curl = new Curl();\n$curl->get('https://api.sendbird.com/v3/users?user_ids=user_1,user2');. Thanks for explaining further. I've created a pull request to allow using a string.\nphp\n$curl = new Curl();\n$curl->get('https://www.example.com/', 'user_ids=user_1,user_2');. Hi. Ocp-Apim-Subscription-Key should be set as a header.\nphp\n$curl = new Curl();\n$curl->setHeader('Ocp-Apim-Subscription-Key', 'my-key');\n$curl->get('...');. Hi. You'll want to avoid manually setting CURLOPT_POSTFIELDS. Try this\nphp\n$this->curl = new Curl\\Curl();\n$this->curl->setHeader('Content-Type', 'application/json');\n$this->curl->get($this->apiUrl.'getcustomers?'. http_build_query($_arrParams), $this->requestData);. Thanks for report.\nNote: similar to #279. Hi. You may be running into limits on resources. Try to clean up with $curl->close();.. Thanks!. Hi. To return an array use Curl::setDefaultJsonDecoder.\nphp\n$curl->setDefaultJsonDecoder($assoc, $depth, $options);. Possibly something like this\n```php\n$groups = array();\n$multi_curl = new MultiCurl();\n$multi_curl->success(function ($instance) use (&$groups) {\n    $groups[$instance->group] = $instance->response;\n});\n$get_1 = $multi_curl->addGet('https://www.example.com/');\n$get_1->group = 'a';\n$get_2 = $multi_curl->addGet('https://www.example.net/');\n$get_2->group = 'b';\n$get_3 = $multi_curl->addGet('https://www.example.org/');\n$get_3->group = 'c';\n$multi_curl->start();\nvar_dump($groups);\n``. Hi. There are not any plans to implement PSR-7.. Hi. CallingaddGet()` with an array is not possible as implemented. Something like this could work:\nphp\n$multi_curl = new MultiCurl();\nforeach ($list_of_urls as $url) {\n    $multi_curl->addGet($url);\n}\n$multi_curl->start();. Hi. I believe this error means that curl couldn't find an encryption that both client and server support. For the sites where this happens, you may try entering the domain on https://www.ssllabs.com/ssltest/analyze.html to see what encryption algorithms are supported.. Merged in https://github.com/php-curl-class/php-curl-class/commit/cd08b5dee7d2a9ae04acc19e2237d8cd193dccc7 Thanks!. Should consider XML External Entity attacks.\nhttps://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Prevention_Cheat_Sheet. Fixed in #527.. Hi. Yes completed requests are automatically removed from the queue and additional requests may be added. Here's an example that uses multi curl:\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_get.php\nAll examples can be found here:\nhttps://github.com/php-curl-class/php-curl-class/tree/master/examples. You can add all the urls first, then call $multi_curl->start();. You may also increase the number of simultaneous by using $multi_curl->setConcurrency($concurrency);.. Hi. Yes you can add additional requests (e.g. via addGet, addPost, etc.) after starting.\n```php\n$urls = array();\nfor ($i = 0; $i < 10; $i++) {\n    $urls[] = 'https://www.example.com/?' . md5(mt_rand());\n}\n$multi_curl = new MultiCurl();\n$multi_curl->complete(function ($instance) use (&$multi_curl, &$urls) {\n    $next_url = array_pop($urls);\n    if (!($next_url === null)) {\n        $multi_curl->addGet($next_url);\n    }\n});\n$multi_curl->addGet(array_pop($urls));\n$multi_curl->start();\n. Hi. Disabling `CURLOPT_SSL_VERIFYPEER` is not recommended. If you can't establish a connection without disable ssl protections, the connection cannot be (reasonably) guaranteed. Try using a different computer or a different connection when making the request.. Hi. You're probably missing additional POST fields in the request. Taking a look at their form, they have a `Login[username]`, a `Login[password]` and a `_csrf` token.. Hi. Thanks for reporting the issue and the code to reproduce. The issue should now be fixed.. Hi. Similarly to #472, I believe this issue also should be fixed. Regards. @sganz You're very welcome. Hi. Did you run both curl commands with and without the library from the same machine? Is the code being run from the command line or from a web server?. Are you sure the original is working? What's the output of `var_dump($res);`?php\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_URL, $url);\n$res = curl_exec($curl);\nvar_dump($res);\n. Hi. Try accessing as you would an array `$curl->responseHeaders['meuspedidosid']`.. Hi. I like the idea. However, can we also keep `README.md` and `SECURITY.md`?. Thanks!. Hi. Would this be a better example?\n$curl = new Curl();\n$curl->setOpt(CURLOPT_ENCODING , '');\n$curl->download('https://www.example.com/file.bin', '/tmp/myfile.bin');\n``. Hi. It may beneficial to organize theexamples` directory. Possibly into 2 categories:\nexamples/\n\u251c\u2500\u2500 curl\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 get.php\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 post.php\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ...\n\u2514\u2500\u2500 multicurl\n    \u251c\u2500\u2500 multi_curl_get.php\n    \u251c\u2500\u2500 multi_curl_post.php\n    \u2514\u2500\u2500 .... That seems like a fairly good example. I would like to keep the maintenance of the examples to a minimum if possible.. No response so closing for now.. Hi. You need to change the socket. This works:\nphp\n$curl = new Curl();\n$curl->setUrl('http://localhost');\n$curl->setOpt(CURLOPT_UNIX_SOCKET_PATH, '/var/run/docker.sock');\n$curl->get('/containers/json');\nvar_dump($curl->response);. Hi. I suppose, if implemented, it could look like this:\n```php\nuse Http\\Adapter\\Curl\\Client;\n$config = [\n    // ...\n];\n$adapter = new Client($config);\n$request = new Request('GET', 'https://www.example.com/');\n$response = $adapter->sendRequest($request);\n. Hi. I believe you're trying to make requests in parallel, but handle responses differently depending on the type of request. Something like this should work:php\n$multi_curl = new MultiCurl();\n$multi_curl->success(function ($instance) {\n    echo 'call to \"' . $instance->url . '\" was successful.' . \"\\n\";\n    echo 'response: ' . $instance->response . \"\\n\";\n    if ($instance->handler === 'response_type_1') {\n        // Handle response type 1.\n    } else if ($instance->handler === 'response_type_2') {\n        // Handle response type 2.\n    } else if ($instance->handler === 'response_type_3') {\n        // Handle response type 3.\n    }\n});\n$get1 = $multi_curl->addGet('https://www.example.com/');\n$get->handler = 'response_type_1';\n$get2 = $multi_curl->addGet('https://www.example.org/');\n$get2->handler = 'response_type_2';\n$get3 = $multi_curl->addGet('https://www.example.net/');\n$get3->handler = 'response_type_3';\n$multi_curl->start();\n```. Hi. You are able to loop through all the headers.\nphp\nforeach ($curl->responseHeaders as $key => $value) {\n    echo $key . ' => ' . $value . \"\\n\";\n}\nStatus-Line => HTTP/1.1 200 OK\nConnection => keep-alive\nContent-Type => application/json\nAccess-Control-Allow-Origin => *\nAccess-Control-Allow-Credentials => true\n.... Thanks!. Hi. You're right that getOpt() could be used here. However, I think the isset version reads more clearly.. Great find! Thank you. Reproducibles for addPost and addDelete.\n```php\nuse \\Curl\\Curl;\nuse \\Curl\\MultiCurl;\n$multi_curl = new MultiCurl();\n$multi_curl->setHeader('Content-Type', 'application/json');\n$multi_curl->complete(function ($instance) {\n    var_dump($instance->response);\n});\n$multi_curl->addPost('http://127.0.0.1:8000/', array(\n    'a' => '1',\n    'b' => '2',\n    'c' => '3',\n));\n$multi_curl->start();\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('http://127.0.0.1:8000/', array(\n    'a' => '1',\n    'b' => '2',\n    'c' => '3',\n));\nvar_dump($curl->response);\n```\n```php\nuse \\Curl\\Curl;\nuse \\Curl\\MultiCurl;\n$multi_curl = new MultiCurl();\n$multi_curl->setHeader('Content-Type', 'application/json');\n$multi_curl->complete(function ($instance) {\n    var_dump($instance->response);\n});\n$multi_curl->addDelete('http://127.0.0.1:8000/', null, array(\n    'a' => '1',\n    'b' => '2',\n    'c' => '3',\n));\n$multi_curl->start();\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->delete('http://127.0.0.1:8000/', null, array(\n    'a' => '1',\n    'b' => '2',\n    'c' => '3',\n));\nvar_dump($curl->response);\n```\nphp\n$http_raw_post_data = file_get_contents('php://input');\necho $http_raw_post_data;\nbefore\nstring(11) \"a=1&b=2&c=3\"\nstring(25) \"{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}\"\nafter\nstring(25) \"{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}\"\nstring(25) \"{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}\". Sounds like you were able to find a solution. Adding an example based on the docs (https://developer.box.com/reference#upload-a-file):\nsh\ncurl https://upload.box.com/api/2.0/files/content \\\n  -H \"Authorization: Bearer ACCESS_TOKEN\" -X POST \\\n  -F attributes='{\"name\":\"tigers.jpeg\", \"parent\":{\"id\":\"11446498\"}}' \\\n  -F file=@myfile.jpg\nphp\n$curl = new Curl();\n$curl->setHeader('Authorization',  'Bearer ACCESS_TOKEN');\n$curl->setHeader('Content-Type', 'multipart/form-data');\n$curl->post('https://upload.box.com/api/2.0/files/content', array(\n    'attributes' => json_encode(\n        array(\n            'name' => 'tigers.jpeg',\n            'parent' => array(\n                'id' => '11446498',\n            ),\n        ),\n    ),\n    'file' => '@myfile.jpg',\n));. Hi. I adhere to semantic versioning (https://semver.org/) as much as possible so that minor and patch version updates can be done safely.\nAnother option to see the changes between versions, is the compare page.\nhttps://github.com/php-curl-class/php-curl-class/compare/8.0.0...8.0.1. Thanks!\nPR: #500. This could work.\n```php\nuse \\Curl\\MultiCurl;\n$params = [\n    ['c', 'd'],\n    ['e', 'f'],\n    ['g', 'h'],\n    ['i', 'j'],\n];\n$multi_curl = new MultiCurl();\nforeach ($params as $param) {\n    $url = 'https://www.google.com/a/b/' . implode('/', $param);\n    $multi_curl->addGet($url);\n    echo $url . \"\\n\";\n}\n$multi_curl->start();\n. If you really wanted, you could create an instance like thisphp\n$curl = new Curl();\n$curl->error = true;\n$curl->httpStatusCode = 404;\n$culr->errorMessage = '404 Not Found';\n$curl->response = 'Page not found';\n``. Hi, thank you for the bug report. PHP Curl Class uses theparse_url` function which only works on UTF-8 characters. Until a fix is implemented, you will need to percent-encode urls. Here is that url percent-encoded.\nhttp://balemala.com/index.php/vmchk/%D0%91%D0%B0%D0%BD%D0%B0%D0%BD-%D0%BA%D0%BE%D0%BC%D0%BD%D0%B0%D1%82%D0%BD%D1%8B%D0%B9-%D1%81%D0%B0%D0%B6%D0%B5%D0%BD%D1%86%D1%8B-%D0%B1%D0%B0%D0%BD%D0%B0%D0%BD%D0%B0/View-all-products.html. Fixed. Thanks for the suggestion. Thanks!. I would try using CURLOPT_PROXYHEADER.\nphp\n$curl = new Curl();\n$curl->setOpt(CURLOPT_PROXYHEADER, ...);\nSee also the documentation for CURLOPT_HEADEROPT.\n\nhttps://secure.php.net/manual/en/function.curl-setopt.php. Hi. Here's how to send a POST request without a body:\nphp\n$curl = new Curl();\n$curl->post('https://www.example.com/');\nVerify POST body is empty.\nphp\n$curl = new Curl();\n$curl->post('https://httpbin.org/post');\nvar_dump($curl->requestHeaders['Content-Length'] === '0');\nvar_dump($curl->response->headers->{'Content-Length'} === '0');\nOutput\nbool(true)\nbool(true). Thanks for checking again. I needed to set a json content-type. This reproduces the error:\nphp\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('https://httpbin.org/post');\nvar_dump($curl->requestHeaders['Content-Length'] === '0');\nvar_dump($curl->response->headers->{'Content-Length'} === '0');. If you'd like to test again, please use the latest version.\n$ composer require php-curl-class/php-curl-class @dev. Thanks!. Great work. Thank you!. zh_CN: \u8c22\u8c22!\n\nen_US: Thank you!. Thanks!. Hi, thanks for the idea. Maybe it could be implemented so this would work:\n```php\n$curl = new Curl();\n$curl->setUserAgent('My test user-agent');\n// Reset all previously set options.\n$curl->reset();\n$curl->get('https://www.example.com/');\n``. Hi, You can editapplication/config/config.php` and set\n```php\n$config['composer_autoload'] = true;\n````\nFrom the source file\nphp\n/*\n|--------------------------------------------------------------------------\n| Composer auto-loading\n|--------------------------------------------------------------------------\n|\n| Enabling this setting will tell CodeIgniter to look for a Composer\n| package auto-loader script in application/vendor/autoload.php.\n|\n|   $config['composer_autoload'] = TRUE;\n|\n| Or if you have your vendor/ directory located somewhere else, you\n| can opt to set a specific path as well:\n|\n|   $config['composer_autoload'] = '/path/to/vendor/autoload.php';\n|\n| For more information about Composer, please visit http://getcomposer.org/\n|\n| Note: This will NOT disable or override the CodeIgniter-specific\n|   autoloading (application/config/autoload.php)\n*/\n$config['composer_autoload'] = FALSE;\nhttps://github.com/bcit-ci/CodeIgniter/blob/develop/application/config/config.php\nDocumentation on Auto-loading Resources\nhttps://www.codeigniter.com/user_guide/general/autoloader.html. Thanks!. Fixes #465.. Hi, The Curl::download() method will resume a download if the download was interrupted (and the temporary file exists). Once the file download completes, the completed temporary file is renamed to the filename specified in the 2nd parameter passed to Curl::download().\nIf you would like to ensure that a file is not appended, you could unlink() the file.\nhttps://secure.php.net/manual/en/function.unlink.php. Hi, I'm unable to reproduce. What version of PHP and PHP Curl Class are you using?. Hi, It appears you are using 8.0.1. Please use the latest version 8.1.0.. Hi, do you have an example of the request you're trying?\nHere's how to make a json post request:\n```php\n$data = array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'date' => date('Y-m-d H:i:s'),\n);\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('https://httpbin.org/post', $data);\n. The data can be encoded before:php\n$data = json_encode(array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'date' => date('Y-m-d H:i:s'),\n), JSON_UNESCAPED_UNICODE);\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('https://httpbin.org/post', $data);\n``. Hi, turn on error reporting witherror_reporting(E_ALL);` and you should see this error:\n```bash\n$ php examples/get.php \nPHP Warning:  curl_setopt() expects parameter 2 to be integer, string given in ../php-curl-class/src/Curl/Curl.php on line 989\nWarning: curl_setopt() expects parameter 2 to be integer, string given in ../php-curl-class/src/Curl/Curl.php on line 989\n```\nUse constants, not strings:\nphp\n$curl->setOpts([\n    CURLOPT_FOLLOWLOCATION => true,\n    CURLOPT_AUTOREFERER => true,\n]);. Thanks for the suggestion!. Hi, thank you for the suggestion. I've added a placeholder CHANGELOG.md file.\n(Previous discussion: #497). Thanks!. Thanks!. Hi. You'll most likely want to use separate requests:\n```php\nfunction getNewRequest() {\n    $curl = new Curl();\n    $curl->setHeader('Content-Type', 'application/x-www-form-urlencoded');\n    $curl->setHeader('Referer', 'https://github.com/');\n    return $curl;\n}\n$curl_1 = getNewRequest();\n$curl_1->setBasicAuthentication('username', 'password');\n$curl_1->get('http://127.0.0.1:8000/');\nvar_dump($curl_1->requestHeaders);\n$curl_2 = getNewRequest();\n$curl_2->get('http://127.0.0.1:8000/');\nvar_dump($curl_2->requestHeaders);\n``. Hi. You'll need to make 2 requests. Pull the csrf token in the first request. Once you have the token, include the token in the second request. For Django sites, the csrf name should becsrfmiddlewaretoken`.\n```php\n// Get token.\n$curl = new Curl();\n$curl->get('https://www.example.com/login');\npreg_match('...', $curl->response, $matches); // TODO: Implement token extraction.\n$csrf_token = $matches[1];\n// Do POST action with csrf token.\n$curl = new Curl();\n$curl->post('https://www.example.com/login', array(\n    'csrfmiddlewaretoken' => $csrf_token,\n    'username' => '',\n    'password' => '',\n));\n```. Hi, This is the response I received. It correctly displays the json index. Can you try the request again?\n$ php post_json_array_response.php \narray(3) {\n  [\"content\"]=>\n  string(12) \"Hello world!\"\n  [\"date\"]=>\n  string(19) \"2018-10-11 01:23:17\"\n  [\"id\"]=>\n  string(1) \"1\"\n}. @sganz the 'json' index is for this particular example so that it displays the POSTed json content:\n\"json\": {\n    \"content\": \"Hello world!\",\n    \"date\": \"2018-10-11 01:23:17\",\n    \"id\": \"1\"\n  },\nFull raw response:\n{\n  \"args\": {},\n  \"data\": \"...\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Connection\": \"close\",\n    \"Content-Length\": \"64\",\n    \"Content-Type\": \"application/json\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"PHP-Curl-Class/8.3.2 (+https://github.com/php-curl-class/php-curl-class) PHP/x.x.x curl/x.x.x\"\n  },\n  \"json\": {\n    \"content\": \"Hello world!\",\n    \"date\": \"2018-10-11 01:23:17\",\n    \"id\": \"1\"\n  },\n  \"origin\": \"12.34.56.78\",\n  \"url\": \"https://httpbin.org/post\"\n}. Hi. Take off the \"json\" index. I would look a these values:\nphp\nvar_dump($NcUrl->response);\nvar_dump($NcUrl);. Hi. 407 is Proxy Authentication Required. Remove the quotes:\nphp\n$parser->setProxy($proxy, '3128', $login, $pass);. Hi, I've added an example here\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/post_xml.php. @nronsisvalle can you provide a code sample? Thanks. Hi, I've added an example here\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/proxy_socks5.php\nThere's no support for automatic detection of proxy type.. Thanks!. @kn-id done. https://github.com/php-curl-class/php-curl-class/releases. Thanks!. Hi, There is no flag to set so that callbacks are called. When the request is successful, the success callback is called. When the request is not successful, the error callback is called. The complete callback is then called.. Here's an example that should work.\n```php\nuse \\Curl\\MultiCurl;\n$urls = array(\n    'tag3' => 'https://httpbin.org/post',\n    'tag4' => 'https://httpbin.org/get',\n    'tag5' => 'https://httpbin.org/html',\n);\n$multi_curl = new MultiCurl();\n$multi_curl->success(function ($instance) {\n    echo 'call to \"' . $instance->myTag . '\" was successful.' . \"\\n\";\n});\n$multi_curl->error(function ($instance) {\n    echo 'call to \"' . $instance->myTag . '\" was unsuccessful.' . \"\\n\";\n});\n$multi_curl->complete(function ($instance) {\n    echo 'call to \"' . $instance->myTag . '\" completed.' . \"\\n\";\n});\nforeach ($urls as $tag => $url) {\n    $instance = $multi_curl->addPost($url, array(\n        'to' => 'alice',\n        'subject' => 'hi',\n        'body' => 'hi Alice',\n    ));\n    $instance->myTag = $tag;\n}\n$multi_curl->start();\nbash\n$ php multi_curl_post.php \ncall to \"tag4\" was unsuccessful.\ncall to \"tag4\" completed.\ncall to \"tag3\" was successful.\ncall to \"tag3\" completed.\ncall to \"tag5\" was unsuccessful.\ncall to \"tag5\" completed.\n```\nHope that helps.. Thank you for the report!. Hi, Please update composer:\nbash\n$ composer self-update\n(Probably related to this bug https://github.com/composer/composer/issues/7783). Can you provide the output of these commands?\nFirst change into the library folder\nbash\n$ cd ../php-curl-class\nThen\nbash\n$ composer --version\n$ composer info. Thanks!. @jared-conexed released 8.4.0. Hi. If you'd like to make asynchronous requests, you can can use MultiCurl. Here's an example: https://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_post.php\nIf you'd like to make non-blocking requests, try these:\nbash\n$ curl --request POST \"https://www.example.com/\" --data \"a=1&b=2&c=3\" > /dev/null 2>&1 &\nbash\n$ php do_post_request.php > /dev/null 2>&1 &. Thank you for the suggestion. Proxy can now be set like this\nphp\n$multi_curl = new MultiCurl();\n$multi_curl->setProxy('someproxy.com', '9999', 'username', 'password');\n$multi_curl->setProxyTunnel();\n$multi_curl->addGet('https://httpbin.org/ip');\n$multi_curl->complete(function ($instance) {\n    var_dump($instance->response);\n});\n$multi_curl->start();. Hi. You'll need to add your handling inside one of the callbacks success, error, or complete.\nHere's an example using Curl::success callback:\n```php\nfunction do_something_with_instance($instance) {\n    echo 'url requested was' . $instance->url . \"\\n\";\n}\n$multi_curl->success(function ($instance) {\n    do_something_with_instance($instance);\n});\n``. Hi. Can you add to your script and provide the output ofvar_dump($curl);`?. Hi, Here's an example using proxy and multicurl:\nhttps://github.com/php-curl-class/php-curl-class/blob/master/examples/multi_curl_proxy_socks5.php. Hi. Can you provide a code sample?. Hi. Can you provide a code sample? Also, what version of Windows did the request fail on?. Hi. Thank you for the pull request.\nSo running something like $curl->Cookies = $cookies; would actually call $curl->setCookies($cookies);. I'm leaning towards being able to use only the more explicit set methods (e.g. $curl->setCookies()). What are the advantages to having multiple ways to do the same thing? The magic form seems to decrease readability.. @case - please change the 3rd slash to a period. Thanks!\n. Please fix typo\n. Can you remove the trailing whitespace from these lines? Thanks\n\n. > Fatal error: Using $this when not in object context in /home/travis/build/php-curl-class/php-curl-class/src/Curl/Curl.php on line 548\nCan we use use for the array_map function for PHP 5.3 compatibility?\nphp\narray_map(function($name) use ($instance) { ... }\nhttps://travis-ci.org/php-curl-class/php-curl-class/jobs/87628295\n. I believe we should set default options first. Then apply the user's preferred options after.\nphp\n        $this->setOpt(CURLINFO_HEADER_OUT, true);\n        $this->setOpt(CURLOPT_HEADERFUNCTION, array($this, 'headerCallback'));\n        $this->setOpt(CURLOPT_RETURNTRANSFER, true);\n        $this->setOpts($options);\n. Why is (bool)added here? curl_setopt always returns either true or false.\n. Can we include other 30x codes where this applies? Change to something like\n\nPerform a post-redirect-get request where a POST request receiving a 301, 302, or 303 redirection response, is followed by a GET request.\n. \"If true, will cause 301, 302, and 303 redirections to be followed using ...\"\n. Also include 301, 302, and 303 here\n. Can you revert changes to this file. These changes don't really contribute to the library and are more of a personal preference.\n. Were these comments added by an IDE? I don't think they're necessary.\n. Do you need all these methods? For example completeFunction is used internally, but made public to be reused internally.\n. Are these tests really needed?\n. I believe this could be simplified to:\n\nphp\npublic function setCookieString($value) {\n    return $this->setOpt(CURLOPT_COOKIE, $value);\n}\nUsage:\nphp\n$value = 'fruit=apple; colour=red';\n$curl->setCookieString($value);\n. ",
    "php-curl-class": "@DaniSancas - thanks for the pull request!\n. Fixed in 5ead0ee6dcf23dc79b33d39e2175699a51309ffb\n. Merged. Thanks!\n. ",
    "DaniSancas": "You're welcome, mate!!\nI think I also have another issue (hehehe), let me analyze it ;)\n. You're welcome, mate!\nI also have ANOTHER issue (yes, I wont let you be, hahahahaha)\n. @zachborboa, I think that if you merge his with yours, you can write the name you want. In fact it will be correct, because the @rockerBOO 's repo and your's are not the same. So is correct to have different names at Composer file.\nIt's my opinion :)\n. You're welcome, mate.\n. Is it correct? Look the changed files:\nREADME.md\n$ composer require php-curl-class/php-curl-class\ncomposer.json\n\"name\": \"citizennet/php-curl-class\",\n. ",
    "user52": "Thanks!\n. ",
    "lakshgandikota": "Thank you!!\n. ",
    "rockerBOO": "The problem with namespace/composer is the dashes in the name. \nI made a version without the dashes, adding composer, namespace support. \nhttps://github.com/rockerBOO/curl/compare/php-curl-class:master...composer\n. The problem is the dashes in the name for namespaces. \"Parse error: syntax error, unexpected '-', expecting \\ (T_NS_SEPARATOR) or ';' or '{' \". \nI made a simpler, composer specific, branch which allows Curl to be autoloaded in the global namespace. https://github.com/php-curl-class/php-curl-class/pull/15\n. ",
    "Philzen": "I really like the wrapper for it is just making code more readable and manageable and was happy to discover it as i would have eventually written it myself otherwise.\nBut what i really don't like that it actually tries to implement anything regarding parallel curl requests b/c:\na. if at all, this should be done as a seperate class that consumes a CurlHandle via a clearly defined interface\nb. it tries to re-invent the wheel, namely epiCurl / php-multi-curl - epicurl can just consume the configured curl resource handle from php-curl-class\n. ",
    "zborboa-g": "I merged his changes and updated the composer name in ff2283478ddec79b4933034084b290d17b05bbeb.\n. Thank you for the report. Can you provide a code sample where you're seeing this issue? Thanks\n. Amazon - Upload a file\nhttp://docs.aws.amazon.com/AmazonS3/latest/dev/LLuploadFilePHP.html\nhttp://docs.aws.amazon.com/AmazonS3/latest/dev/UploadObjSingleOpPHP.html\n. Stripe - Authenticate\nhttps://stripe.com/docs/api/curl#authentication\n. Stripe - Charge a credit card\nhttps://stripe.com/docs/api/curl#create_charge\n. LinkedIn - View a profile.\nhttps://developer.linkedin.com/documents/profile-api\n. Google Drive - Upload a file.\nhttps://developers.google.com/drive/v2/reference/files/insert\n. Balanced - Debit a credit card.\nhttps://docs.balancedpayments.com/1.1/guides/debits/#debit-a-credit-card\nhttps://docs.balancedpayments.com/1.1/overview/resources/#test-credit-card-numbers\n. StackExchange - Search questions.\nhttps://api.stackexchange.com/docs/advanced-search\nhttps://api.stackexchange.com/docs/authentication\nhttps://api.stackexchange.com/2.2/search/advanced?q=%22php-curl-class%22&site=stackoverflow\n. Moves - Show daily activities\nhttps://dev.moves-app.com/docs/api_activities\n. Uber - Authenticate\nhttps://developer.uber.com/v1/auth/\n. Uber - Price estimates\nhttps://developer.uber.com/v1/endpoints/#price-estimates\n. Braintree - Create transaction\nhttps://developers.braintreepayments.com/ios+ruby/sdk/server/transaction-processing/create\nhttps://developers.braintreepayments.com/ios+ruby/reference/general/testing\n. Spreedly - Make a purchase\nhttps://docs.spreedly.com/basics/purchase/\n. Disqus - Authenticate\nhttps://disqus.com/api/docs/auth/\n. Disqus - Create a new post\nhttps://disqus.com/api/docs/posts/create/\n. Spotify - Authorize\nhttps://developer.spotify.com/web-api/endpoint-reference/\n. Spotify - Search\nhttps://developer.spotify.com/web-api/search-item/\n. VirusTotal - Upload and scan file.\nhttps://www.virustotal.com/en/documentation/public-api/#scanning-files\n. Mailgun - Send an email.\nhttp://documentation.mailgun.com/api-sending.html#sending\n. Hacker News - Retrieve top stories.\nhttps://github.com/HackerNews/API#top-stories\n. Possible implementation and usage.\n``` php\n<?php\nnamespace Curl;\nclass Curl\n{\n}\n```\n``` php\n<?php\nuse \\Curl\\Curl;\n$curl = new Curl();\n$curl->get('https://www.example.com/');\n``\n. Validate .travis.yml usingtravis-lint`.\nbash\ngem install travis-lint\nhttp://docs.travis-ci.com/user/travis-lint/\n. Hi @bangbang93 thank you for the pull request. Can you provide a use case for this change? Thanks\n. php\n$curl = new Curl();\n$curl->setOpt(CURLOPT_CONNECTTIMEOUT_MS, 4000);\nor\nphp\n$curl = new Curl();\ncurl_set_opt($curl->curl, CURLOPT_CONNECTTIMEOUT_MS, 4000);\n. See RFC2616 \u00a7 14.43.\nhttp://www.ietf.org/rfc/rfc2616.txt\n. Thank you for the pull request. I'll take a look.\n. https://github.com/gratipay/gratipay.com#api\n. Here is how this could be implemented\n``` php\n$curl = new Curl();\n$curl->setUrl('https://api.example.com/inbox/');\n// OR\n$curl = new Curl('https://api.example.com/inbox/');\n```\nAnd the usage:\nphp\nfor ($i = 1; $i <= 10; $i++) {\n    $curl->get(array(\n        'page' => $i,\n    ));\n}\nHowever, there would be a bit of ambiguity. For example, $curl->get() currently expects a url string or an array of urls as the first parameter. Using $curl->setUrl() and then calling $curl->get() with an array of data would be ambiguous as we would not know if the array passed is a set of urls or data.\n. Actually I believe there is a way this could work by using Curl::is_array_assoc() on the first parameter. A user is going to do parallel requests using get() with an indexed array and not with an associated array.\n. You may need to explicitly set Content-Length. Something like\nphp\n$curl->setHeader('Content-Length', http_build_query($post));\n. Also, what is the default curl you're using that works?\n. Hi and thank you for the report. Is this on a production server or your local development? How can I reproduce this? Thanks\n. I'm not sure actually. Typically there's a log like the one on this page.\nhttps://travis-ci.org/php-curl-class/php-curl-class/jobs/44489509\n. > Trailing whitespace found in ./src/Curl/Curl.php:N:\n. Thanks for the pull request. I believe what you are trying to accomplish has been implemented.\nhttps://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/Curl.php#L440\n. @gotardo - 2.1.2 released which includes json request encoding (https://github.com/php-curl-class/php-curl-class/commit/80adf0f3a1c9f0ef9a5c2763675f7d3a4cb84c35).\n. @gotardo - would this be an example of what you are describing?\nphp\n$curl = new Curl();\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post(array(\n    'foo' => array(\n        'key' => 'val',\n    ),\n));\n. @gotardo - can you check that the latest head fixes json-encoding of multidimensional arrays? Thank you\n. Regarding composer, we have had a few bugs filed in the past related to the packagist being out of date. @failpunk is the current maintainer. Hopefully he can chime in and get that updated (or add me as a maintainer). Thanks\n. Hi @rkmax. Can you provide an example to reproduce? Thank you\n. Hi Eray. I'm not the maintainer of php-curl-class on packagist.org (https://packagist.org/packages/php-curl-class/php-curl-class).\nPerhaps we can get @failpunk to update to the latest version or add me as an admin so that I may do so.\n. Was fixed in 4cb1436 for #110.\n. Thank you for the bug report. How are you running the script?\nThis may be due to the way the script is being called.\n\nThese constants are not available if reading the PHP script from stdin.\n\nhttps://php.net/manual/en/features.commandline.io-streams.php\nhttps://bugs.php.net/bug.php?id=43283\n. We may be able to add annotations. What IDE/plugins are you using?\nThanks\n. Also replace \"Quick Start and Examples\" section with a \"Documentation\" section.\n\"Documentation is available at https://www.example.com/\"\n. I don't believe we can have non-blocking in the way you described. start() keeps curl alive with curl_multi_select() and curl_multi_exec(). By returning immediately, requests would be left unfinished.\nThe example on the curl_multi_exec documentation is similar to how it is achieved in php-curl-class.\nhttps://php.net/curl_multi_exec#refsect1-function.curl-multi-exec-examples\n. Use setCookie()?\n. We should include $data as part of the url in GET requests or the following two GET requests will be seen as the same url.\nphp\n$curl->get('https://www.example.com/'); // http://www.example.com/\n$curl->get('https://www.example.com/', array('q' => 'keyword'); // http://www.example.com/?q=keyword\nChange with something like\nphp\n$url = $this->buildURL($url, $data);\n$curl->setUrl($url);\n$curl->setOpt(CURLOPT_URL, $url, $curl->curl);\n. Include $data in the url here as well.\n. Include $data in the url here as well.\n. ",
    "failpunk": "I don't think you can tag a release via pull request.  I would just go to \"releases\" on the main menu an add a version.\n. Make a pull request!\n. ",
    "aufa": "hello all structure is true, but maybe about my cookies or my cached to request call back from the url thanks for the response :)\nand btw I was request pulls on this link https://github.com/php-curl-class/php-curl-class/pull/19\n. ",
    "gotardo": "Hi!\nIf I do something like this:\n$curl =  new Curl();\n    $curl->put('http://service.com/api/a/method/', $data);\n    $curl->get('http://service.com/api/other/method/');\nThe first request is setting PUT as the method. The second request is not cleaning the headers, so it is generating a HTTP Error 411 Length required.\n. Hi,\nI see the problem: I am using composer to update my project dependencies. The last version in composer is 2.1.0, which still has not the fix. Are you planning to deliver this so we can take advantage of this update via composer?\nThanks!\n. I also see that the current solution in v2.1.1 is failing to encode in JSON when passing a multidimensional array, for example, an array as a post var.\n. Hi, yes, that's a similar case. One of the vars I need to post is a list of strings.\n. Yes,  like this\n\nGotardo Gonz\u00e1lez\nPHP Consultant\ncontacto@gotardo.es\n(+34) 616238080\nGTalk/iChat: gotardogoque@gmail.com\nSkype: gotardo.gonzalez\n\nEl 16/01/2015, a las 03:09, Zach Borboa notifications@github.com escribi\u00f3:\n@gotardo - so like this?\n$curl->post(array(\n    'key' => 'val',\n    'strings' => array(\n        'a',\n        'b',\n        'c',\n    ),\n));\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\nBoth type hintings for params and return types could be cool. But, is backwards compatibility a 'must' in the project? May be it is interesting to start a new version for PHP7.x.\n. Hi,\nWould it be interesting to work on a branch for PHP7.x? . Hi, \nI'd like to be able to have a better control con the error with something like this:\n\nphp\n$curl = new Curl();\ntry {\n    $curl->get($url, $data);\n}\ncatch (CurlException $e) {\n    MyErrorLogger::log($e->getMessage())\n}\nIt means that the logic to read the error message should be inside the ::exec()method. I think that the logic of the error control would be easier to reuse this way.\n. ",
    "hi2u": "Maybe I'm a bit confused about something here, but I'm wondering why this class sometimes (when the response is XML or JSON) parses and overwrites $Curl->response with a different data type automatically by default.\nIt seems like a pretty dangerous default to me, and has tripped me up a few times when my code expects the class to be consistent ($Curl->response is a regular string of data - as it is for all other Content-Type responses).\nI know I can instead access $Curl->rawResponse to get a consistent data type (a string), but this seems backwards to me.  Surely the $Curl->response should stay consistent (the actual response with no tampering), and if people want a parsed array/object, they get these data types from a method like $Curl->getParsedResponse() \nIs there a way to turn it off?  It's also unnecessary resource usage for people that have no need for it.\nAlso I think it would be helpful to put a note on the main README.md to warn new users about this unexpected inconsistent behaviour.\nAnyway, thanks for the work on this, I appreciate it.\n. ",
    "leeuweriq": "Yes please. When using in a namespace manner, the instantiation of the Curl class returns nothing.\n. ",
    "mako0403": "when i call the code : require 'Curl.class.php';\nPHP throws an error.\nWhen I modified\nrow 391\nunset($this->container[array_keys($this->container)[$index]]); to unset($this->container[array_keys($this->container)]);\nrow 410\nreturn $index === false ? null : array_values($this->container)[$index]; to return $index === false ? null : array_values($this->container);\nEverything back to normal\nPHP manual also did not find out about  array_key()[var] this syntax\n. ",
    "malcolmb": "I had this issue as well when I loaded php-curl-class on a server running PHP 5.3.5 but no issue on PHP 5.4.24. Related to http://stackoverflow.com/questions/16358973/parse-error-syntax-error-unexpected-with-php-5-3\n@hzg0403 Thanks for your fix. Worked for me!\n. That ended up not working correctly for me but this did.\nphp\n        $ak = array_keys($this->container);\n        $ak = $ak[$index];\n        unset($this->container[$ak]);\n        //unset($this->container[array_keys($this->container)[$index]]);\n        .......\n        $av = array_values($this->container);\n        $av = $av[$index];\n        return $index === false ? null : $av;\n        //return $index === false ? null : array_values($this->container)[$index];\n. ",
    "bangbang93": "for example\n$curl->setOpt(CURLOPT_FOLLOWLOCATION, 1);\n$curl->get('http://www.bangbang93.com'); //this page has a 301 redirect to /forum.php\n$res = $curl->response;\necho $res;\nbefore my commit,the second HTTP header become a part of response body.Like this.look at the top of this page\n\nafter that it can get the page currectly\n\nif the body is a json or xml document,this may make program unable to decode\n. sorry wrong click\n. ",
    "shadu120": "most of the internet sites can reply the char-set in Headers. but some cannot. \n. ",
    "kroder": "Yeah, i know some ways of how to do that. Just was curious maybe you are ready to implement something, actually it would be great to have opportunity to get raw json in addition to auto-parsed answer. Not a big deal if no, thanks for answer.\n. ",
    "nansenat16": "PHP\nmy cookie is\nArray\n(\n    [APSCOOKIE_3506421940] => \"Era%3D0%26Payload%3DFKKkxM9jWmffo2zpExeU+sY3AwPKjwNFPpLfRkY2u78wAbsqRu5wq8CBsEWs8Kw4%0A8Qnz0WZgF1J2X+eM68G5sUiNaqw9FntvM1Wed6cP6Be+V3K+umi4Hm2Wn1f+p3vN%0AV5ZW5UxrkhkYAh0qVh3SnRevKNhNd2m9r0meKXjjDSaubLU098Eh1qLRvEuq1qHe%0AVAlgybymPRmfJAgPZ9T0au+i+nieu7lY%0A%26AuthHash%3DgacmqF6UvP6aSSw3sKRq9zN%2F2KcA%0A\"\n    [ccsrftoken] => \"2F721697F7557E33D1B060C13DC2FEB7\"\n    [opmode] => \n    [rl] => \n)\nhttp://stackoverflow.com/questions/10967813/php-http-build-query-special-symbols\n. it's print_r output the string have double quotation. it's encode to %22\n. ",
    "sergeyklay": ":+1: \n. :+1: \n. I vote up for SemVer\n. Why not $this->json_pattern?\n. why public if u have setter?\n. php\npublic function setJsonResponseToArray($flag = true) {\n    $this->json_to_array = (bool) $flag;\n    return $this;\n}\n. and add please getter\n. ",
    "matteodelabre": "Good point about the data part.\nHowever, maybe would it be useful to separate data from base URL so that we can simply check which query we are dealing with. For instance:\n``` php\n$curl->success(function ($instance) {\n    // following check is duplicating data\n    // if ($instance->getUrl() === 'https://foo.bar/?q=hello%20world') {\n    // better check\n    if ($instance->getUrl() === 'https://foo.bar/') {\n        // process\n    }\n});\n$curl->get(array(\n    'https://foo.bar/',\n    'https://example.com/'\n), array(\n    'q' => 'hello world',\n));\n```\nI can think of several solutions: either storing data as a separate var, or storing url as an array with base URL and query string separated, or creating an URL class for representing URLs.\n. ",
    "hackel": "Anything in which you are performing multiple requests to the same URL.  E.g.:\nphp\n$curl->setUrl('http://somegreat/api');\n$curl->post(array('name'=>'foo');\n$curl->get(array('q'=>'keyword'));\n$curl->patch(array('id'=>100, 'name'=>'bar');\nIt's not a requirement, I can certainly include the URL in every request (which I am doing now), it just seems like it might be a natural/elegant method to add.  Even what I wrote above seems too procedural.  Possibly chaining them like this might be better:\nphp\nCurl::url('http://somegreat/api')\n    ->setOpt(CURLOPT_AUTOREFERER, true)\n    ->setCookie(...)\n    ->get(...);\n. Yes, I don't see an obvious way to maintain backward compatibility...  You could possibly move the parallel processing into it's own get_parallel function or something, and then check if $url is an array in every function, and if so use it as $data.  This might be too big a change, though.\n. ",
    "bliszka": "Unfortunately api is not public yet. But i resolved this problem by adding the same code line as in PUT method.\n\n$put_data = http_build_query($data);\nif (empty($this->options[CURLOPT_INFILE]) && empty($this->options[CURLOPT_INFILESIZE])) {\n               $this->setHeader('Content-Length', strlen($put_data));\n }\n. \n",
    "willianpts": "Please see my last commit. I think a regexp will do the job.\n. ",
    "Oxicode": ":+1: Timeout\n. +1\n. Cc @zachborboa \n. +1\n. Min 5.6 . ",
    "akeinhell": "Sorry, cannot say. Error found after more 1k requests in log's.\n. don't forget this :-)\ncurl_setopt($this->curl, CURLOPT_FILE, NULL);\n. ",
    "RhuanGonzaga": "Hi, thank you for reply, my english is not good, this is \"default curl\" code:\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, 'https://tiu.unifenas.br/pegacodigo.asp');\ncurl_setopt($ch, CURLOPT_POST, 1);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, 'codigoaluno='. $_POST[\"matricula\"] .'&nascimento='. $_POST[\"senha\"] .'&Opcao=1');\ncurl_setopt($ch, CURLOPT_COOKIEJAR, 'cookie.txt');\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n$store = curl_exec ($ch);\n. Just for feedback, I comment some lines and now it's working...\n```\n    public function post($url, $data = array())\n    {\n        / if (is_array($data) && empty($data)) {\n            $this->unsetHeader('Content-Length');\n        } /\n    $this->base_url = $url;\n    $this->url = $url;\n    $this->setOpt(CURLOPT_URL, $this->url);\n    // $this->setOpt(CURLOPT_CUSTOMREQUEST, 'POST');\n    $this->setOpt(CURLOPT_POST, true);\n    // $this->setOpt(CURLOPT_POSTFIELDS, $this->postfields($data));\n    return $this->exec();\n}\n\n```\nMaybe it's something wrong with my code lol\nThank you for your time!\n. ",
    "thebeline": "If you see the SO question, you will see that it is a known issue.  Unfortunately, I was unable to get the suggested solution working either, so I continue with my solution.  It is in my pull request.\n. Either way, it is broken, but fixed in my pull.\nAlthough, it seems this is a much longer standing issue than just the latest version.  See SO thread.\n. I am a bit confused, how do I see what failed in the travis build?\n. The command \"bash tests/script.sh\" exited with 1.\nUnsure.\n. I saw that.\n. Wow, do I genuinely hate TravisCI...  Fair, though.\n. And, with any luck, that should be it...\n. Ok, this I genuinely do not understand.  What happen this time?  Undefined index in tests/PHPCurlClass/server.php.  I didn't touch anything in there, so I am a mite bit confused.  Also, I don't have Travis or any of those things set up on this server, so I can not reproduce/debug.\nIf you give me guidance I'd be happy to resolve this, but as it stands, I have no idea what is going on.\n. Oh my lordy.  Finally.\n. I suppose, I should probably break these out into separate pull requests...  :-(\n. No.  If there is anything in this PR that you would like to separated, let me know, but I am going to leave this PR as-is for now.  Let me know if there is anything additional I can do.\n. I think this will be my last code-change for this pull-request.  This last one was pulling out the file handle for Headers, and patching the Memory Stream to work by using an anonymous function for writes (as suggested here: http://stackoverflow.com/questions/27550145/php-fopen-and-php-memory-not-working-as-expected-data-loss).\n. php://temp uses memory until the size reaches a certain point, then flips to filesystem.\nIf you look at some of the previous commits, you will not that I was doing a temporary file generation+unlink to create a file handle to write to the file system.\nThis new solution (most recent version) is the best solution while keeping the header data off from the disk, and in (the very fast) memory.\n. I would push against making this a \"standard\" feature.  It \"is\" standard, in a way.  Figure, you need to determine what IS an \"error,\" also, many APIs require a pause between retries, or possibly data changes (signed time-stamps, etc).  So making a \"standard\" retry system would be disadvantageous compared to using the framework in the way it was designed.  Two ways this can be handled:\n// Standard Error Retry (similar to above).\n$curl = new Curl();\n$curl->retries = 3;\n$curl->error(function($curl) {\n    if ($curl->retries-- > 0) $curl->exec();\n});\n$curl->post('https://www.example.com/', array('foo' => 'bar'));\nOr with own error detection:\n$curl = new Curl();\n$curl->retries = 3;\n$curl->complete(function($curl) {\n    if (/* some error detection using $curl */) {\n        // Set Curl vars for Error state (I actually hate this, access violations, but alas).\n        if ($curl->retries-- > 0) {\n            $curl->exec();\n        } else {\n            // Throw or raise error?  Set OTHER error variables?\n        }\n    }\n});\n$curl->post('https://www.example.com/', array('foo' => 'bar'));\nNote how neither require using (use), and can be any callable (so if this is getting called in an object, it can be an object method, etc).\n. I imagine @zachborboa is referring to a behavior similar to: http://stackoverflow.com/questions/9212953/curl-sleep-delay-between-requests\nSo if you are making multiple requests, you incur a delay between them.\nIf that is so, I would refer him to the answers cited there, in that, the Curl requests are synchronous, so all you would have to do is run a foreach loop with a sleep at the end to incur the desired delay.\n. We don't, however.\nIf you are sending requests to the same server, and need to delay between requests to prevent your script from hitting a requests rate limit, implement the loop yourself.\nI know that sounds a little harsh/blunt, but there is a limit to specific one-offs for a library.\nTake this for instance:  I have an API that requires that, once something fails, I make 3 requests to revoke the previous transaction.  The delay between those requests should be logarithmic.  That is to say, wait 10 seconds before sending the first request, then 100 seconds, then 1000 seconds.  Once we implement a basic delay, should we implement that as well?\nIt is possible to implement this basic idea by having the complete callback sleep for a period of time, which may be of interest to you.\n. This changes the way the Headers are assigned.  Breaks backwards compatibility and deviates from the standard behavior of Curl in PHP.  \nSeee http://php.net/manual/en/function.curl-setopt.php\n. This is not an issue with the library.  See this question on Stack Overflow (google).  \nhttp://stackoverflow.com/questions/24611640/curl-60-ssl-certificate-unable-to-get-local-issuer-certificate\n. I am guessing this is due to a circular reference?  As much as I do not like the CaseInsensativeArray object, I believe it is needed.  Have you tried handling the explicit destruction of the object with a __destruct method on the Curl object?  Would this work?\n. I would weigh in with: If it breaks compatibility with versions of PHP we are maintaining support for, we probably should not do it.  As of this very moment:\n[ec2-user@blp01 curl]$ curl http://api.wordpress.org/stats/php/1.0/ | jq '.'\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100    72    0    72    0     0    405      0 --:--:-- --:--:-- --:--:--   406\n{\n  \"5.2\": 11.293,\n  \"5.3\": 29.285,\n  \"5.4\": 40,\n  \"5.5\": 13.166,\n  \"5.6\": 6.237,\n  \"7.0\": 0.02\n}\nI know, it stinks, but we can't just drop support for a whooping 80% of developers.  Now, granted, developers using this kind of a library are more likely to be using a newer version of PHP, but still...  Looking at PHP.net's stats (http://w3techs.com/technologies/details/pl-php/5/all) we get ~80%.\nIf you still want to add support, perhaps put a check in there that raises a User Notice without failing the tests.  That way it is available to the people who can support it.\n. Just saw the merge go in and, while late to the party, figured I would chime in:\nI have a few qualms about this. It adds yet another class to the file (not a standard we follow, but still) and the class and execution is unnecessary.  A class whose only responsibility is to contain two arrays and it is overly complicated. The arrays could remain on the Curl class, and could be coded manually, eliminating the need of a separate class and method calls.\n. Deprecated?  Also, this is a benchmark, and not a Test.  I am not sure it is applicable here.\n. Thanks.  I know it is still a sep class, and that was one of my gripes, but I realized that, in the future, I would be interested in making full, fledged classes for this CookieJar, Cookie.  Might actually do it in a few days...\n. @zachborboa - I updated this, the pull request is not exactly accurate now (no abstract class), but the failure confuses me.  Nothing is really failing, except nginx failed in hhvm for some reason...  ??\n. The question is: Do we want the initialization flags?  Or should that be an setter function?\n. Never-mind, I amended my commit.  It makes more sense to have it as a setter.\n. @zachborboa - Is there something blocking this? (I am asking this on a few)\n. @maxvodo - My DocBlocks follow the PHPDocumentor2 standard, and beyond that, have white-space separation between the Title, Description, Parameters, Return, Meta and Author tags.  The format is auto-generated.  I can adjust by hand, but it is unlikely that I would remember to do so on all PRs, so it is probably best to leave it as is.\n. @zachborboa - Is/was there something blocking this? (I am asking this on a few)\n. Hmmmm...  Looking into it, this breaks MultiCurl, which I guess came in some time after I forked.  Alas.  I would prefer some form of protection, but it looks like this can not be it.  I will consider other alternatives.\n. Three years... lolz\nFair enough.. Hmmm, seems I broke the expected behavior of overriding.  Interesting.  Send me your thoughts on how this \"should\" work, and I will patch.\n. Ok, so, my concern is that, while we do want functions added to MultiCurl to be called against Curl objects no matter when the callbacks or Curl's are added, we only want Options/Headers/etc to be added to the Curl objects if added in the correct order.  Is this correct?\nThis seems confusing and inconsistent and I am completely on the fence about this.\nOn one hand, I feel that things set on the MultiCurl group should be respected across all children (they are a part of the group, after all).  But at the same time, I can see how you may need something set on the Curl object it's self to take priority.\nHow can we handle this?  I don't think there is a single clean way.  I will think on it.\n. It may make sense to have the MultiCurl have it's own callbacks, independent of the individual Curl objects'.\nBy the same token, it may make also make sense to put a foot down and have setOpt cascade to all children, as getOpt will only ever return what is set on the MultiCurl object, a single value, and it's integrity breaks if we do not enforce this across  all children.  This will modify people's use-cases, certainly, but that is the trade-off.  We could provide a mechanism to get the children so people can modify them as needed, and this would break integrity, but it would not do-so with the guise of maintaining integrity, and it would clearly cater to a deviant use-case.\nSomething that would assist this would be allowing to assign options at Curl instantiate (second parameter) and allowing people to set options in bulk (as an array, setOpts).  I will bring both of these in shortly.\n. @zachborboa - I am going to swap those params, beyond that, is there something blocking this? (I am asking this on a few)\n. @zachborboa - ack, that's what happens when one walks away for a bit.  Your concern about the + operator is exactly as I expected, the user values override the defaults (values preceding the + do not get overwritten).\nhttps://secure.php.net/manual/en/language.operators.array.php\nThat said, I can see there being a possible issue if the user's preferred options are incorrect/fail, it may leave the object in an undesirable state.  Should we throw an error instead at that point?  If there is an error?  Currently, even if we set the defaults first, then the user's second, there will be no warning.  I would almost rather:\nif(!$this->setOpts($opts + $default_opts)) {\n    throw new \\Exception();\n}\nWhat do you think?\n. @zachborboa - Can you add the braces check and @author check to your tests so I can handle that prior to PR?\n. For what it is worth, ^[ \\t]*(?![ \\ta-z]*[ \\t]+)?function(?![ \\t]+[ \\ta-z]*)?[ \\t]+[a-z_]+\\([^\\)]+\\)[ \\t]*{ will detect opening brackets on the same line as the method declaration.\n. Also, it is rudimentary, but /^[ \\t]+\\/\\*\\*((?!\\*\\/).)*\\n[ \\t]+\\*[ \\t]+@author((?!\\*\\/).)*\\*\\//ism will detect any DocBlock that contains an @author tag.\nMay or may not help.\n. @zachborboa - I believe you are referring to b226bad?\n. @zachborboa - Both of those commits, actually, all of these commits, will resolve and mitigate #307.  So...  :-/  no?\nSimply differing the creation does no stop too many handles, as they will all be queued on start.  Also, without closing, even concurrency will not stop it, as the handles will remain open while the object is un-closed due to the handle still being referenced by the open curl handle, which will remain referenced due to a circular reference between the Curl object, and the curl handle.\nThese must remain together to resolve that issue.\n. @zachborboa - What am I failing on in CI?\n. @zachborboa - GAH!  You have some of the most annoying CI rules evar...  lol  Every time I try to open a PR with you, I spend as much time fixing spaces/tabs/caps/etc as I did writing the code in the first place...  :-P\n. @zachborboa - betterer.  That PHP 7 memory leak is a doozey...\n. Ignore this, this is me testing garbage collection on PHP 7.\n. Newp...  nevermind....\n. I can get behind this.  I am not sure about the variables, I would rather allow inheritance, but then I start to see that they rely on each-other, so you kind of need them private.  Meh.  I would like to see the rather large exec function start to get broken down, however...  :-/\nBesides that, I totally agree with this.\nMAYBE BETTER, have a private getter handle these items, so that they are only parsed if accessed???  Ohhhh, I kind of like that idea...\n. Yeah, I like the sentiment, but I think getters would be helpful, I am going to draft some creative up for that.\n. With #314, you can work with multiple status codes/decoders/etc while also deferring decoding of the payload by:\nif($curl->exec(null, false)) {\n    // success, do what you will\n} else {\n    // Some kind of failure\n}\nOr\n$curl->exec(null, false);\nswitch($curl->errorCode) {\n    case '200':\n        // HTTP Success\n        break;\n    // ...\n}\nOr\n$multi->complete(function($curl) {\n    switch($curl->errorCode) {\n        case '200':\n            // HTTP Success\n            break;\n        // ...\n    }\n});\nEtc.\nI will consider implementing a a conditional complete handler, like:\n$multi->complete(function ($curl) { }, 200);\nIf that is something you are interested in.\n. Ok, conditional functions as part of the primary class are simply not an option.  I can not determine a sane way to store and manage the callbacks.  Your best bet is to use one of my example patterns on complete or success or error.\nWith #314, you can use complete to change/remove the decoder prior to accessing $curl->response or whatever you would like to do.  That is going to have to suffice, as I am not sure status-code-based decoders/callbacks are possible in a \"clean\" manner.\n. !?  Please elaborate?\n. @Linuxhombre - If you are suggesting that the base \\Curl class be slimmed down to not include, by default, decoding or callbacks, I can KIND of get behind that.  However, that would entail a considerable refactor of the core class, significant rewrite of the test suite, and breaking changes for existing implementations.  To a degree, perhaps yes, this single class is attempting to do too much, but it is a little late in the game to suggest removing or breaking out large chunks of functionality.\nAs it stands, the decoding and callback implementations in the current class do not add significant overhead, and bypassing them is possible (to a degree, and certainly with a few of the Pull Requests I have pending).  I do not think any meaningful gains can be had by pairing functionality down at this point.  Maybe in a future major version release, but ultimately that is up to @zachborboa.\n. @Linuxhombre ?  What do you use daily?  Again, if it is a slimmed version of the core class, even-though you may have it (and indeed, I have a slimmed version in an implementation as well, from some time ago, when I thought it mattered), it would still require a refactor for the test suite, and breaking changes for current integrations.  \nIf you feel that may not be true, by all means, please submit a PR to my fork so I can have a look.  I am not sure how @zachborboa would feel about it, but I wouldn't mind poking it with a stick.\n. Should resolve #313\n. Gah, I keep forgetting all sorts of bitty things.  Full disclosure: no, I didn't test, yes, I am using Travis to test.\n. About time...  You and your tests...  :-D (I jest)\n. @zachborboa - Ok, it seems Travis is having a stroke right now.  Again with nginx not behaving in hhvm, I would consider that last test as passing.\n. @zachborboa - Were there questions of concerns about this PR?\n. @zachborboa - The one situation when failure is a good thing...  Weird.\n. With only 20, #310 would be fine, just add all tasks, and set concurrency to 10.\nWithout #310, or with 1000's of tasks, or if you are trying to be mindful of memory usage: \nFirst, find a way to describe your tasks in an array:\n$a_queue_of_tasks = array(\n    array(\n        'action' => 'download',\n        'params' => array()\n    ),\n    //...\n);\nThen, add 10 tasks:\nfor($i = 10; $i > 0; $i--) {\n    $task = array_shift($tasks);\n    $adder = 'add'.ucwords($task['action']);\n    call_user_func_array(array($multi, $adder), $task['params']);\n}\nAnd then hook into the 'complete' callback to add more as each one completes:\n$completed = array();\n$multi->complete(function($instance) use (&$tasks, &$completed, &$multi) {\n    $completed[] = $instance;\n    $task = array_shift($tasks);\n    $adder = 'add'.ucwords($task['action']);\n    call_user_func_array(array($multi, $adder), $task['params']);\n});\nYou may want to do some status checking in there, ensure that array_shift returns a non-null, maybe not store the entire object in $completed, etc.  Tailor it to your needs, but that's the general gist.\nA full imp may look like:\n```\n// Utility function so you can do this, without repeating yourself each time\nfunction addNextFactory(Array &$tasks, Curl\\MultiCurl $multi) {\n    return function() use (&$tasks, &$multi) {\n        if($task = array_shift($tasks)) {\n            $adder = 'add'.ucwords($task['action']);\n            call_user_func_array(array($multi, $adder), $task['params']);\n        }\n        return !empty($task);\n    };\n}\n// Your to do tasks\n$tasks = array(\n    array(\n        'action' => 'download',\n        'params' => array()\n    ),\n    //...\n);\n// Completed task handles\n$completed = array();\n$multi = new Curl\\MultiCurl;\n// Build the function\n$add_next = addNextFactory($tasks, $multi);\n// Add your initial set of 10\n$initial = 10;\nwhile($initial-- && $add_next()) { ; }\n// When complete, add the next one.\n$multi->complete(function($instance) use (&$add_next, &$completed) {\n    $completed[] = $instance;\n    $add_next();\n});\n``\n. Because it does not garbage collect, ever, due to a recursive dependency.  See #310 WEEEE\n. ALSO, you might be working on a different branch or something, as there is nosetOptArray` currently.  I implemented something like that with #271, but, for some strange reason, I can get a dentist apt before getting a PR accepted.\n@zachborboa :-)\n. You won't be \"downloading a fix,\" not unless you like juggling detached heads, anyway.  Best bet is to wait for it to be merged in to master and pull it at that point.  Either that or you can manually patch it using the code from the linked pull request.\nIt may be a simple merge, as well.  Go ahead and save your changes to your local branch, and try to pull my branch in, it might \"just work.\"\n. Can you please provide the full text of the fatal error?\n. It is important to note that include does not fatal if the directory/file is not found, it simply returns false, so include_once(CURLFile.php): failed to open stream is not what is fataling your application.\nThis is an issue with PradoBase.php, and not with this library.  As you can see, looking at the PradoBase.php source here, Prado is creating the fatal.  Auto-loaders should not throw exceptions or fatal errors, and should let PHP handle the resulting errors internally, otherwise, functions like class_exists (which you would not know if the class exists unless you load it) are no longer useful.  It defeats the purpose of the function, which is to conditionalize behavior on the existence of a class, and to auto load it if it can, not fatal the application.  FURTHER, auto-loaders should be able to stack, with one auto-loader attempting to load a class, and returning true or false and passing the attempt down the line.  Fataling the application breaks this behavior.  This is unacceptable.\nThis is not an issue with this library, and you should submit a ticket outlining the issue to the Prado repository.  That behavior breaks more things about PHP and class loading than I can list.\n. Made a ticket for you.\n. Unless I am missing something, that is what class_exists and auto-loaders are for.  You want to instantiate a class, but you use class_exists to see if you can so you do not fatal the application.  Using class_exists should not fatal the application on it's own.  Many frameworks do not implicitly load any class definitions, save for the auto-loaders, at all.\nThere are two options:\n1. Expect it exists, is loaded, or can be loaded, and simply instantiate it $obj = new Class - This will fatal for people who do not have the class.\n2. Check without auto-loading - This will disable it for anyone who relies on auto-loaders.\nAs the documented, default, and expected behavior for class_exists is to attempt to auto-load the class, I don't see why we should change the behavior.  \nHowever, ultimately, it is up to @zachborboa, I guess.\n. @aisn Sometimes it pays to be the squeaky wheel.  This will be resolved in Prado 3.3.1 in a few days.\nhttps://github.com/pradosoft/prado/pull/583\n. Are you using PHP7?  \nIt may be worth calling $curl->close(), as even though the object is overwritten, it is not destructed (see #310).\nIf you are using PHP 7, then you may be running into a known memory leak.  Try close() first.\n. Please provide sample code.\n. I don;t use a proxy, so I am not sure, but this looks interesting.  Write it up and submit a pull request, would be very interested in seeing what that looks like...\n. It isn't.  This could cause all sorts of headaches depending on the mismatch.  If you know you are working with an API that doesn't really know what it is doing or can't pick it's right from left, catch it, with one of the callbacks.\n. @zachborboa - I hate to do this on a merged PR, but whereas the total time is not something that will always be accessed, and this happens in the exec call, it seems not great to add the (minimal, to be sure, but still present) overhead of calling that function for something that may not be used in 90% of use-cases.  For instance, I will nearly never use that information in my usage, but this will always be called...\nIn a case like #314, this would be moot, and an interesting thing to have.  But otherwise, it seems unnecessary...\n. Personally?  I like my deferred properties PR, and we could add all of those to the deferred properties list, so:\n$total_time = $curl->total_time;\n$upload_speed = $curl->speed_upload;\n// etc.\nThis will cache the results, too, referencing $curl->total_time; multiple times just pulls the property on subsequent calls.\nThat said, sure, I mean, implementing getInfo() would be good, it could even be used with deferred properties.  (I'm partial, I know)\n. @zborboa-google - This is confusing.  This is the only place in the class where the $curl->url and the actual CURLOPT_URL are set to different things.  I can make this match, but I had assumed it was in error. (this now causes this pull to fail tests)\nIf this is not an error, what is the reasoning here?\n. I take that back, it is here too.  Why is this desired behavior?\n. This still stores in memory, until the data hits a threshold...\n. http://php.net/manual/en/wrappers.php.php\n. Note how this did not behave in a case-insensitive manner.\n. Test the Key, as we know that the key will never equal NULL (this triggers a push) and using current($array) !== FALSE prevents the use of bool values (beyond our use-case, but this is a generic class, so let's do it right).\n. I prefer to have the test variables inherently linked in some manner, so as to prevent future edits to cause them to diverge.  Ideally, scalar types (arrays, integers, strings) would be configured in a central configuration file that both the Server and the Test use.  I was looking around here, so I touched it, but I am not going that far yet.\n. CaseInsensitiveArray has it's own tests, re-testing it in this way serves no further purpose.  A false-positive in one such test (generic POST, JSON or XML) would result in the others failing, so I removed this to conserve time (minimally).\n. Moved these two arrays (in a mildly modified manner) to the Helper class so they can be re-used without being re-defined.\n. This is the only \"breaking\" change.  The JSON and XML patterns are now stored differently, as evidenced here.  This increases accessibility, but it may cause if an extending class uses this property.  As this was a protected property already, this will have no effect for 99.9% of use-cases.\n. I don't understand why you wouldn't just have the default to true.  By having them set in here, you may walk on an inheriting class.\n. I would rather see this as protected, allowing an inheriting class to set it as part of it's definition.\n. Since your adding to all of this, could we not make these protected methods additionally?\n. I am not sure how I feel about the default of null, I would think requiring a developer to call it in full $curl->setJsonDecoder(null); (set it to null) would make more semantic sense that allowing $curl->setJsonDecoder(); (set it to...  what?).\nJust personal preference, however.\n. So, swap the params around +?\n. (sometimes) I try to force ably cast return values if I can.  It's, um, a weird habit.  Follows along with my too many spaces in docblocks.\n. @Linuxhombre - I implemented deferred parsing of a number of the response components, including the $response, but I am not sure I understand what you are suggesting in regards to \"custom outbound return messaging/codes and\nALSO variable handling for inbound return strings.\"\nMy pull request allows change between returning the parsed response, or if there is an error state.  If you are working off the single Curl class, then you pass false as the second parameter, and handle the object as you will (if you do not call $curl->response your response will not be parsed).\nAre you suggesting being able to configure when something will or will not be parsed, down to the error code?\n. ",
    "ubazinga": "If did not help you php://memory, try the php://temp\n. ",
    "coveralls": "\nChanges Unknown when pulling eaf942ca14d4d2c85b0689d4d5002fa481241b4d on thebeline:master into * on php-curl-class:master*.\n. ",
    "chadwhitacre": ":-)\n. ",
    "qt06": "I am using PHP's own server.\n@4cb1436  has fixed it.\n. ",
    "erayaydin": "I am searched repo and I see download() method, but when I use composer update --dev I can't see download() method in vendor.\ncomposer.json\n{\n    \"require\": {\n        \"php-curl-class/php-curl-class\": \"dev-master\"\n    }\n}\ncomposer update\nnothing to install or update\n\nI think problem is my req. stability in composer.json\n. Oh ok, packagist package is old. Please update :+1:\n. \n",
    "droidmunkey": "Good idea to make a generic function, thanks.\nI extended the class and replaced the setDefaultJsonDecoder() function to create the functionality I wanted\n. ",
    "ghost": "Actually i tried to write something helpfull: (n00bie)\n``` php\nclass Curl_Mult extends Curl {\npublic function multInit() {\n    $this->multi_parent = true;\n    $this->curls = array();\n    $this->curl = curl_multi_init();\n    return $this;\n}\n\npublic function addGet($url, $data = array()) {\n    $curl = new Curl();\n    $curl->multi_child = true;\n    $curl->base_url = $url;\n    $curl->url = $this->buildURL($url, $data);\n    $curl->setOpt(CURLOPT_URL, $curl->url, $curl->curl);\n    $curl->setOpt(CURLOPT_CUSTOMREQUEST, 'GET');\n    $curl->setOpt(CURLOPT_HTTPGET, true);\n    foreach ($this->options as $key => $value) {\n        $curl->setOpt($key, $value);\n    }\n    // checking errors before pushing new Curl to list\n    $curlm_error_code = curl_multi_add_handle($this->curl, $curl->curl);\n    if (!($curlm_error_code === CURLM_OK)) {\n        throw new \\ErrorException('cURL multi add handle error: ' . curl_multi_strerror($curlm_error_code));\n    }\n    $this->curls[] = $curl;\n    return $curl;\n}\n\npublic function multExec() {\n    do {\n        curl_multi_select($this->curl);\n        $status = curl_multi_exec($this->curl, $active);\n    } while ($status === CURLM_CALL_MULTI_PERFORM || $active);\n    while (!($info_array = curl_multi_info_read($this->curl)) === false) {\n        if (!($info_array['msg'] === CURLMSG_DONE)) {\n           continue;\n        }\n        foreach ($this->curls as $ch) {\n            if ($ch->curl === $info_array['handle']) {\n                $ch->curl_error_code = $info_array['result'];\n                break;\n            }\n        }\n    }\n\n    foreach ($this->curls as $ch) {\n        $this->exec($ch);\n    }\n}\n\npublic function multClose() {\n    foreach ($this->curls as $curl) {\n        curl_multi_remove_handle($this->curl, $curl->curl);\n    }\n    if (is_resource($this->curl)) {\n        curl_multi_close($mh);\n    }\n}\n\n}\n$curl = new Curl_Mult();\n$curl_multi = $curl->multInit();\n$curl1 = $curl_multi->addGet('http://google.com/search', array('q'=>'hello google'));\n$curl1->setUserAgent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1 (first)');\n$curl2 = $curl_multi->addGet('https://www.yandex.com/yandsearch', array('text'=>'hello yandex'));\n$curl2->setUserAgent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1 (second)');\n$curl->multExec();\n$curl->multClose();\nvar_dump($curl);\n```\n. ",
    "WebnetMobile": "You may want to update packagst's repo, as it still serves outdated version: https://packagist.org/packages/php-curl-class/php-curl-class\n. Then at least you should add a warning to your README. If this packagist entry is not your own, you may want to try to take it over contacting packagist maintainers. Current situation hurts your directly\n. ",
    "ufukugurr": "$value = 'content';\n$newvalue = preg('', '', $value);\necho $newvalue;\n///////////////////////////////////////////////////////\ncontent\n. ",
    "k00ni": "You welcome :)\n. Why not create multiple MultiCurl classes and use different proxies?\n```php\n$multi_curlA = new MultiCurl();\n$multi_curlA->setProxy('127.0.0.1:8080');\n// setup instance, run addGet, ...\n$multi_curlB = new MultiCurl();\n$multi_curlB->setProxy('127.0.0.1:9999');\n// setup instance, run addGet, ...\n// start\n$multi_curlA->start();\n$multi_curlB->start();\n```\nUntested. ",
    "someother1": "Netbeans 8.0.2 is currently my preferred IDE.\nJust the Netebans \"HTML5 & PHP\" Package without any other Plugins.\nThe Workflow with correctly setted Annotations is amazing!\nKindly Regards\n. ",
    "antons-": "Yes, it's working as expected now (no warning), thanks for the quick fix :)\n. ",
    "case": "Fixed!\n. Ah ok, that makes sense. Feel free to close this PR.\n(it basically just requires a Mashape account + passing in the key they provide, like how Stripe works)\n. ",
    "temuri416": "Hi,\nI've tried this against my local API server's wait action:\n``` php\n$multi_curl = new \\Curl\\MultiCurl('http://api.example.com/v1/wait');\n// NOT INTERESTED IN A CALLBACK\n//$multi_curl->complete(function($instance) {\n//});\n$multi_curl->addGet(array('some' => 'var'));\n$multi_curl->start();\necho 'OK';\n```\nwait action does nothing except sleep(10).\nI executing above example makes a blocking call to API server - PHP script gets blocked for 10 seconds.\nI was expecting that 'OK' would be executed immediately acted ->start() call (i.e. non-blocking).\nAm I missing something?\nThanks!\n. yes, I have realised that too. after reading more about it, it seems the only way to achieve what I need is to fork a process or use gearman/beanstalk..\n. ",
    "Filix": "@zachborboa thank you! It works well!\n. ",
    "flyyang": "Thanks for the reply.\nI have seen the example before and used nearly the same code as the example.\nNow the success method was fired, but don't know where to get the POST return data.\n. Get the data from $instance->response.\n$multi_curl->success(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was successful.' . \"\\n\";\n    echo 'response: ' . $instance->response . \"\\n\";\n});\n$multi_curl->error(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was unsuccessful.' . \"\\n\";\n    echo 'error code: ' . $instance->error_code . \"\\n\";\n    echo 'error message: ' . $instance->error_message . \"\\n\";\n});\n$multi_curl->complete(function($instance) {\n    echo 'call completed' . \"\\n\";\n});\nWhat the $instance object contain anyway?Is there a doc for this object?\n. Problem solved.Thanks @ricwein.\n. ",
    "ricwein": "Hey, did you take notice of the correct order of calling the multi_curl methods? see here. This could prevent you from getting correct responses. So first call the callback methods like complete() followed by addinge the request addPost().\nTo get all available variables of the $instance object just try printing it with print_r($instance); or look in the sourcecode of the curl-class line 10-34.\n. ",
    "yan12125": "I think I've found the cause, but I don't know what's the best way to fix it. In this line, $this->options[CURLOPT_HEADERFUNCTION] holds a reference to $this, and the result is circular references. If I add the following line to Curl::close(), memory leaks do not exist anymore.\nphp\nunset($this->options[CURLOPT_HEADERFUNCTION]);\nThe test result is:\n```\n$ php curl-class-test.php\nuname=Linux PC951 4.0.0-2-ARCH #1 SMP PREEMPT Tue Apr 14 07:14:46 CEST 2015 x86_64\nphp version=5.6.8\nphp curl version=\nArray\n(\n    [version_number] => 469248\n    [age] => 3\n    [features] => 968605\n    [ssl_version_number] => 0\n    [version] => 7.41.0\n    [host] => x86_64-unknown-linux-gnu\n    [ssl_version] => OpenSSL/1.0.2a\n    [libz_version] => 1.2.8\n    [protocols] => Array\n        (\n            [0] => dict\n            [1] => file\n            [2] => ftp\n            [3] => ftps\n            [4] => gopher\n            [5] => http\n            [6] => https\n            [7] => imap\n            [8] => imaps\n            [9] => pop3\n            [10] => pop3s\n            [11] => rtsp\n            [12] => scp\n            [13] => sftp\n            [14] => smb\n            [15] => smbs\n            [16] => smtp\n            [17] => smtps\n            [18] => telnet\n            [19] => tftp\n        )\n)\nCurl class version=3.5.5\nmemory usage before=414712\nmemory usage after=414760\nmemory usage before=414760\nmemory usage after=414760\nmemory usage before=414760\nmemory usage after=414760\nmemory usage before=414760\nmemory usage after=414760\nmemory usage before=414760\nmemory usage after=414760\nmemory usage before=414760\nmemory usage after=417680\nmemory usage before=417680\nmemory usage after=417680\nmemory usage before=417680\nmemory usage after=417680\nmemory usage before=417680\nmemory usage after=417680\nmemory usage before=417680\nmemory usage after=417680\n```\n. ",
    "winkexp": "JSESSIONID=0000wd-PcsB3bZ-KzYGAqm_rKlm:17925chrl\nThis is a example of the cookie, so it will be changed by urlencode in http_build_query sometimes when it contains the special chars.\n. Cheers,\n. ",
    "KTP95": "Yes,is right.\nas the title of this issue\n. Also To me interess this too much,\nMaybe is possible write it on \"completeCallback\" that is already existed.. ?\n. Very Thanks Sir, \nthere a method of execute again the last curl-request ?\ni want don't pass $url/$data in use(), because i have a long, very long script /12-15 curl request) and every is different - no only post or only get , there are a mix.\nis right for this call the $curl->exec() inside the callback ?\nThanks,\n. $curl = new Curl\\Curl();\n$curl->download('http://ktpbestuploader.altervista.org/Please Try Download This File.rar', DIR.'/file.rar');\nurl: http://ktpbestuploader.altervista.org/Please Try Download This File.rar\nreturn the html page downloaded of 404 page.\n. yes, i know, this thread is only for inform you, maybe you want insert this replace (space in %20) in next release..\n. Yes, also I Think that is better integrate the fix of space in the class (and others fix if need).\nhorever, @jhuliano your code is bad, because urlencode encode also sign as / or : that are a part of a string so the example url will be\nhttp%3A%2F%2Fktpbestuploader.altervista.org%2FPlease%20Try%20Download%20This%20File.rar\nbreak url, is need use str_replace, no urlencode.\n. OK, you are right, I Dont know curl 100%, i'm sorry. but there are a problem:\nBy Default Curl send the following headers with a value auto-retrieve:\nRequest-Line , Host , Accept\nSo if i force another value, for example for \"Host\" with\n$curl->setHeader('Host', 'example.com');\nDon't exist a method, in your class for restore to 'Host' a default value that is auto-retrived\nI thought that unsetHeader will be planned for do this, but it is planned for Remove header, not for restore, so is missing a method: setDefaultHeader \n. Horever in your class there're a bug, please try this\n$curl = new Curl();\n$curl->unsetHeader('Host');\n$curl->setHeader('X-FOO', 'BAR');\n$curl->get('http://example.com:8080/');\nthe header 'Host' will be reset to default value and it is present in the request\nunsetHeader() function must be edit and remove the unset \n/**\n * Unset Header\n *\n * @access public\n * @param  $key\n */\npublic function unsetHeader($key)\n{\n    $this->setHeader($key, '');\n}\n. i was write the setDefaultHeader() method , please let see if everything is ok\npublic function setDefaultHeader($key)\n{\n    unset($this->headers[$key]);\n    $this->buildHeaders();\n}\n\n```\n$curl = new Curl();\n$curl->setHeader('Host', 'example.com');\n$curl->get('http://127.0.0.1:8000/');\n[requestHeaders] => CaseInsensitiveArray Object\n    (\n        [container:CaseInsensitiveArray:private] => Array\n            (\n                [Request-Line] => GET /test/ HTTP/1.1\n                [User-Agent] => PHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.4.16 curl/7.29.0\n                [Accept] => /\n                [Host] => example.com\n            )\n)\n\n```\n\n```\n$curl = new Curl();\n$curl->setHeader('Host', '');\n$curl->get('http://127.0.0.1:8000/');\n[requestHeaders] => CaseInsensitiveArray Object\n    (\n        [container:CaseInsensitiveArray:private] => Array\n            (\n                [Request-Line] => GET /test/ HTTP/1.1\n                [User-Agent] => PHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.4.16 curl/7.29.0\n                [Accept] => /\n            )\n)\n\n```\n\n```\n$curl = new Curl();\n$curl->setHeader('Host', 'example.com');\n$curl->setDefaultHeader('Host');\n$curl->get('http://another-example.com/');\n[requestHeaders] => CaseInsensitiveArray Object\n    (\n        [container:CaseInsensitiveArray:private] => Array\n            (\n                [Request-Line] => GET /test/ HTTP/1.1\n                [User-Agent] => PHP-Curl-Class/4.6.9 (+https://github.com/php-curl-class/php-curl-class) PHP/5.4.16 curl/7.29.0\n                [Host] => another-example.com\n                [Accept] => /\n            )\n)\n\n```\n\nI Thinks is all right now, \nConfirm ?\n. Sincerally also I not user never proxy , but i will try build this functions\n\nedit:\nfrom a first search,\nCURLOPT_PROXY ( https://curl.haxx.se/libcurl/c/CURLOPT_PROXY.html )\nIt supports a definite syntax that can incluse a lot parameters\nso CURLOPT_PROXY can be a string content scheme://$user:$paswd@$host:$port\nSo, considering this, are need only 3 params,\n$curl->setProxy($CURLOPT_HTTPPROXYTUNNEL , $CURLOPT_PROXY, $CURLOPT_PROXYAUTH);\nI write it after\n. Sorry For response, i know it is out topic.\nit should be\n$curl = new Curl();\n// Popular UA for make it stealth\n$curl->setUserAgent('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36');\n// Referrer for make it stealth\n $curl->setReferrer('http://-page-where-you-find-the-javascript');\n$curl->setHeader('Content-Type', 'application/json');\n$curl->setHeader('Ocp-Apim-Subscription-Key', 'xxxxxxxxxxxxxxxxxxx');\n\n\n$curl->post('https://westus.api.cognitive.microsoft.com/vision/v1.0/ocr?language=unk&detectOrientation=true', array('url'=>'http://static.animalpolitico.com/wp-content/uploads/2012/12/imagen-1-1.png'));.\n",
    "tixlegeek": "it was a pleasure!\n. ",
    "xZero707": "Oh, I was though if call is setOpt, CURLOPT can be excluded. Thank you, and sorry for interruption. \nBest regards!\n. ",
    "lhwparis": "Wow Thanks for the quick fix :)\n. ",
    "jlawrence11": "Adding an echo statement on failed attempt? Should return error to programmer in some other way - not dump it to the user.\n. ",
    "leopucci-zz": "I prefer the retry as a standard feature, it can be a parameter that the user can set also, but a default retry value should be included, no one needs to handle connections error if the curl class itself could deal with it.\n. @zachborboa \nYour approach is nice. \nThe user can treat retry by himself now. \nBut what if the user just send a :\n$curl = new Curl();\n$curl->post('https://www.example.com/', array('foo' => 'bar')); \nThen he does not have any retry feature.\nretry 1 time more by default, if he does not want to retry, he need to set this explicity to 0. \n$curl = new Curl();\n$curl->retry=0;\n$curl->post('https://www.example.com/', array('foo' => 'bar')); \n. ",
    "zuoRambo": "The retry mechanism is necessary for one great HTTP Client.\nAs you know, Guzzle HTTP support RetryMiddleware to help developer to define their application when to retry or resend request.\n```php\n    Middleware::retry(\n            function (\n                $retries,\n                RequestInterface $request,\n                ResponseInterface $response = null\n            ) {\n                // Limit the number of retries to 2\n                if ($retries <= 2 && (null === $response || $response->getStatusCode() >= 500)) {\n                    return true;\n                }\n            return false;\n        },\n        function ($retries) {\n            $retries++;\n\n            return $retries * $retries * 200;\n        }\n    );\n\n``. Nice\uff5e. how to support CURLOPT_FOLLOWLOCATION\n. when i use download function to download a file from one url,if the response header is 302,my file save to local is 0 bytes. \n. that's pretty cool! \n. that's good then i add 'setPost(CURLOPT_FOLLOWLOCATION, true)' in Curl-get() [src/Curl/Curl.php#L413]\n.foo[]=bar&foo[]=bazandfoo[0]=bar&foo[1]=baz` has no problem.\nhow to build foo=bar&foo=baz?\nin this case, my role is client, the server side was java  and they only allow use foo=bar&foo=baz.\n. ``` php\n<?php\nrequire DIR . '/vendor/autoload.php';\nuse \\Curl\\Curl;\n$data1 = array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'param' => array(\n        'hello',\n        'world',\n    ),\n);\n$data2 = array(\n    'id' => '1',\n    'content' => 'Hello world!',\n    'param[0]' => 'hello',\n    'param[1]' => 'world',\n);\n$curl = new Curl();\nvar_dump($curl::VERSION);\nvar_dump($curl->buildPostData($data1));\nvar_dump($curl->buildPostData($data2));\n```\nbash\nstring(5) \"6.0.0\"\nstring(65) \"id=1&content=Hello+world%21&param%5B0%5D=hello&param%5B1%5D=world\"\nstring(65) \"id=1&content=Hello+world%21&param%5B0%5D=hello&param%5B1%5D=world\"\nbash\nstring(6) \"4.13.0\"\nstring(65) \"id=1&content=Hello%20world%21&param%5B%5D=hello&param%5B%5D=world\"\nstring(65) \"id=1&content=Hello+world%21&param%5B0%5D=hello&param%5B1%5D=world\"\nthe buildPostData function was not idempotent\n. @zachborboa thanks a lot,Pass data as a string to Curl::post() works well. but there's still some questions.\nphp\n$curl = new Curl();\n$data1 = ['foo' => ['hello', 'world']];\n$data2 = ['foo[0]' => 'hello', 'foo[1]' => 'world'];\nvar_dump($curl::VERSION);\nvar_dump($curl->buildPostData($data1));\nvar_dump($curl->buildPostData($data2));\noutput:\nbash\nstring(5) \"6.0.0\"\nstring(33) \"foo%5B0%5D=hello&foo%5B1%5D=world\"\nstring(33) \"foo%5B0%5D=hello&foo%5B1%5D=world\"\nso, @php-curl-class https://github.com/php-curl-class/php-curl-class/commit/371a09b6e9cbb6a4fd8a052c10f81694ce3e7aa2 has problem\n. you could setDefaultDecoder('xml')\n. support set how to send multi data in one key. $attempt_retry = false; => $need_retry = false;. $attempt_retry = call_user_func($this->retryDecider, $this);. ",
    "kirugan": "Can you explain why you need such feature ?\n. ",
    "valeriitropin": "Hello,\nI dont have any idea how to write test for this case because it is php notice.\nYou can try to reproduce it using the following example:\n$curl = new Curl\\Curl();\n$curl->patch('http://localhost', [\n    'data' => [\n        'key' => 'value',\n        'key1' => 'value2',\n    ],\n]);\nAnd as the result you'll get the following:\nNotice: Array to string conversion in /home/valerio/projects/php/localhost/libraries/Curl/Curl.php on line 681\n. ",
    "AucT": "this shows when I run your example\nmulti_curl_get_callbacks.php\n. ",
    "chaos-drone": "For tag 3.6.6 the version in composer.json is 3.6.5 that's why there is problem with packagist. You should fix the version in composer so it is the same with the tag. I don't know how can you do that without releasing new version 3.6.7 e.g. :)\n. ",
    "rbrzezinski": "Curl::close() is called in Curl::__destruct() method, but it won't work. Only if it's called manualy before removing object ($curl = null;)\n. ",
    "MayankPratap": "I am very  sorry , I am just a beginner and trying to learn about curl.. I cant help you.\n. ",
    "jhuliano": "@KTP95 Oh, sorry! You are right, I did URL Encode the whole thing without even thinking about it. Please disregard it.\nI still think that it would be a good idea to \"partially\" URL Encode the $url param. The idea would be doing something just like Chrome does with the URL bar.\n. ",
    "fealXX": "I mostly focused on getting the values after a request, my use case was looking more like that:\n```\n$curl = new Curl();\n$curl->setCookieFile(realpath(dirname(FILE)).'/cookie.txt');\n$curl->setCookieJar(realpath(dirname(FILE)).'/cookie.txt');\n$curl->get('https://www.example.com/'); //sets Session or something\necho $curl->getCookie('foo'); \n```\nSo I wasn't trying to replace the CookieJar functionality and did not look into setCookie.\nYour example is still the behavior I would expect, since the server is telling me that the new \"correct\" Value for foo should be baz, but maybe it would be better to go for a solution replacing setCookieFile/setCookieJar or editing it to be getResponseCookieValue(), since it would still send bar as the value for foo in the next request.\n. Gonna re-submit it with the changes. :)\n. ",
    "Savageman": "Great, I will make the PR tomorrow then.\n. Closing here in favor of the new PR.\n. ",
    "Sigill": "I (finally) took some time to update my patch (thanks zachborboa for the gentle reminder).\nI first tried to raise a user notice if the PHP version was too old, but I discovered that the HHVM behavior when setting the CUSTOMREQUEST option to null is broken (it causes HTTP requests to be sent with an empty request method). which was leading to some hacky code.\nSince the main problem is to reset the CUSTOMREQUEST option, the easiest solution is to not reuse an existing Curl object where this option has already been set, and to not set it in case of a post-redirect-get (this solution works on every PHP version and on HHVM). If the user really wants to reuse an existing Curl object, he has to handle the option manually, which might not work depending of the version of the PHP engine used.\n. About documenting the support of 301 & 302, I have to disagree: even if cURL (or other user agents) performs post-redirect-get on 301 & 302, it goes against the HTTP specs. It certainly works (I have the patch nearly ready), but I would prefer to not see this \"feature\" documented.\nAbout having the same behavior as cURL, do you mean doing post-redirect-get by default, or supporting other types of requests (PUT, DELETE...)? Actually, I agree with both options. Doing post-redirect-get by default might be a bit disruptive to people expecting post-redirect-post, but it should indeed be the default behavior.\n. After a closer look, it does not seems possible to support {put|patch|delete|options}-redirect-get since these methods require the CUSTOMREQUEST option to be set.\nThis last version of the pull request makes post-redirect-get the default behavior when doing a POST.\n. I've just updated my patch in order to make things more straightforward: on compatible PHP engines, it is now possible to reuse existing Curl objects, while on incompatible ones, an error will be triggered.\nFrom what I know, the only way to work with PHP engines don't allow resetting the CURLOPT_CUSTOMREQUEST using null is to not reuse existing Curl objects.\n. ",
    "jdiefenbach83": "Hello, will this pull request be merged on main branch? I'm facing this behavior and the solution is just what @Sigill did.\nThx\n. Thank you guys! You're awesome!\n. ",
    "epsa-dev": "Example: \nhttps://api.cloudflare.com/#zone-settings-change-development-mode-setting\n. Thanks!\ni am trying whit DELETE:\ncurl -X DELETE \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/purge_cache\" \\\n-H \"X-Auth-Email: user@example.com\" \\\n-H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n-H \"Content-Type: application/json\" \\\n--data '{\"purge_everything\":true}'\nBut....\nError: 400: HTTP/1.1 400 Bad Request\n. ",
    "maxvodo": "For first attempt I also using\nphp\n... }, array_keys($this->cookies), array_values($this->cookies))));\nBut for performance reason (double iteration over single cookies array for get and keys and values) I chose using of $this inside closure. On my PHP version 5.5.9-1ubuntu4.13 code with array_map() with using $this looked good, sorry.\n. @thebeline, @zachborboa - Encapsulating arrays into Curl class it's good idea anyway. I just wanted to describe thing: is needed predefined arrays.\n. @thebeline - Looks cool\n. On my opinion need to be less blank lines in doc-block comments. At the same time code formatting looks good.\n. ",
    "0xff00ff": "\"Hi. PhpStorm 10.0.1 doesn't seem to complain about this property.\"\nit can be, but phpstorm 7.x shows. i do not want to update my ide by error that i can correct :)\nthis code do not affect to functionality\n. ",
    "cedx": "Yes of course :) Thanks, so easy after all.\n. ",
    "roydekleijn": "We also face this problem, I feel this is not a good practice..\n. ",
    "Linuxhombre": "I have created a version that hops every parameter posted and can also\nTraverse a file, using the headers as post parameters for the end PHP cURL\nURL. Let me know if interested.\nOn Mar 19, 2016 1:47 AM, \"Roy de Kleijn\" notifications@github.com wrote:\n\nWe also face this problem, I feel this is not a good practice..\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/php-curl-class/php-curl-class/issues/279#issuecomment-198669294\n. Perfect.\n\nSent from my SNote, sorry for any typos!\nOn Jan 22, 2016 8:08 PM, \"Zach Borboa\" notifications@github.com wrote:\n\nAdded $curl->effectiveUrl. Thanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/php-curl-class/php-curl-class/issues/287#issuecomment-174127878\n.\n. This should absolutely be included\n\nOn 01/29/2016 11:18 AM, Nenad Novakovic wrote:\n\nI started a project yesterday that depends on your CURL class and I \nnoticed that there's a problem with response. Before your class, I \nused another one that always returned \"string\" as response, no matter \nwhat Content-Type it actually is.\nSo after converting to your class, I noticed that my project is \nfailing everywhere I used |json_decode()| or |new SimpleXMLElement|, \nas it returns the properly formatted object already, except that it \nfails for XML in some situations.\nI tracked down your method |parseResponse| and noticed that \n|simplexml_load_string| is not good for every XML situation where it \nmay contain nested XML objects.\nSo I just made slight modification from this:\n|$xml_obj = @simplexml_load_string($response);|\nTo this:\n|$xml_obj = @simplexml_load_string($response, 'SimpleXMLElement', \nLIBXML_NOCDATA);|\nAnd now it works perfectly... Just a tip, hopefully it will get \nupdated officially after you read this.\nI am not familiar with contributions - where I make changes and you \nadd to the master branch, so I'll try to avoid that for now and just \nopen the issue as it's simpler this way.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/295.\n. Super easy to pop in return codes etc after the curl execution.  Also, I actually add an ID property to the multiCurl() element myself, based on the encryption at-hand, values passed in, etc.\n. if $response == $desiredValue kind of logic I imagine, yes?\n- if so, we just have to be sure to update the logic ALSO to handle this \n  for JSON,XML and all other methods should inherit this capability.\n  On 3/23/16 8:18 AM, Mihail Ivanov(x0r) wrote:\nA user may wish to disable the XML parsing, since when downloading to \na file, such parsing shouldn't do anything, since rawResponse wouldn't \ncontain a string anyway.\nAlso should be able to disable XML or JSON parsing by giving null as a \nhandler.\n\n    You can view, comment on, or merge this pull request online at:\n\nhttps://github.com/php-curl-class/php-curl-class/pull/313\n    Commit Summary\n\n* Fixing parsing in progress\n  * Fixes relating to parsing of response and response headers.\n    File Changes\n\n* M src/Curl/Curl.php\n    https://github.com/php-curl-class/php-curl-class/pull/313/files#diff-0\n    (65)\n    Patch Links:\n\n* https://github.com/php-curl-class/php-curl-class/pull/313.patch\n  * https://github.com/php-curl-class/php-curl-class/pull/313.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/pull/313\n. I say callbacks are never stored, that could be forked or something.\nJust a conditional response in real-time, ie; it could be a \n'verification layer trigger' if one were using this to receive / verify \nphone numbers / post them out accordingly, as an example.\nOn 3/30/16 10:31 AM, Michael Mulligan wrote:\nOk, conditional functions as part of the primary class are simply not \nan option. I can not determine a sane way to store and manage the \ncallbacks. Your best bet is to use one of my example patterns on \n|complete| or |success| or |error|.\nWith #314 https://github.com/php-curl-class/php-curl-class/pull/314, \nyou can use |complete| to change/remove the decoder prior to accessing \n|$curl->response| or whatever you would like to do. That is going to \nhave to suffice, as I am not sure status-code-based decoders/callbacks \nare possible in a \"clean\" manner.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/pull/313#issuecomment-203541765\n. I use this functionality daily; happy to post my PHP code for \nintegration/use within the core as you see fit..\nOn 3/30/16 1:33 PM, Michael Mulligan wrote:\n@Linuxhombre https://github.com/Linuxhombre - If you are suggesting \nthat the base |\\Curl| class be slimmed down to not include, by \ndefault, decoding or callbacks, I can KIND of get behind that. \nHowever, that would entail a considerable refactor of the core class, \nsignificant rewrite of the test suite, and breaking changes for \nexisting implementations. To a degree, perhaps yes, this single class \nis attempting to do too much, but it is a little late in the game to \nsuggest removing or breaking out large chunks of functionality.\nAs it stands, the decoding and callback implementations in the current \nclass do not add significant overhead, and bypassing them is possible \n(to a degree, and certainly with a few of the Pull Requests I have \npending). I do not think any meaningful gains can be had by pairing \nfunctionality down at this point. Maybe in a future major version \nrelease, but ultimately that is up to @zachborboa \nhttps://github.com/zachborboa.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/pull/313#issuecomment-203622506\n. An incremental append or overwrite switch with return loop by placing a \n'listener' in the directory or a sniffer upon it would be great.\nOn 4/4/16 7:49 AM, Tom Swinkels wrote:\nHi,\nIs there some support for sending chunk files with curl?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/322\n. Yes, you can add a supplemental function easily (there's a lot of \noptions out there too to, for example, randomly rotate through proxies \nalong with user agents, so forth).\n\nOn 5/11/16 12:31 PM, KTP95 wrote:\n\nSincerally also I not user never proxy , but try build this functions\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/331#issuecomment-218564937\n. This would be simply amazing.  I'd be happy to battle-test a bit.\n\nOn 12/15/16 3:56 AM, Zach Borboa wrote:\n\nHi. Thanks for the suggestion. Will implement |Curl::setCookies|.\n$cookie = $curl->responseCookies;\n$curl->setCookies($cookie);\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/413#issuecomment-267310598, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AE5vq8UVPaZD69PVhuqgRt9AuLfoCrd3ks5rISrfgaJpZM4LKtdW.\n\n\n. let's provide a multiCurl example too for the library!!! That'd be killer.\nOn 12/16/16 7:07 AM, Karel Wintersky wrote:\n\nI think, it will be something like this:\n|/* * Add download with two callback functions * @param $url * @param \n$callback_success * @param $callback_error * @return bool|Curl / \npublic function addDownloadExtended($url, $callback_success, \n$callback_error) { $curl = new Curl(); $curl->setUrl($url); if \n(is_callable($callback_success) && is_callable($callback_error) ) { \n$curl->downloadCompleteFunction = $callback_success; $curl->fileHandle \n= tmpfile(); $curl->errorFunction = $callback_error; } else return \nfalse; $curl->setOpt(CURLOPT_FILE, $curl->fileHandle); \n$curl->setOpt(CURLOPT_CUSTOMREQUEST, 'GET'); \n$curl->setOpt(CURLOPT_HTTPGET, true); $this->queueHandle($curl); \nreturn $curl; } |\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/415#issuecomment-267613937, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AE5vq4BLzJubS8c1Tii6dLkjQ5kHUHBzks5rIqlCgaJpZM4LPQnB.\n\n\n. This is good stuff.\nCould we agree on an anonymize-r class?\nCheers!\nJosh\n-- \nJoshua M. Feldman\nSkype: LinuxHombre\nPhone: 424.283.0045\nRing.to (web call me!): https://ring.to/joshuafeldman/\nwww.linkedin.com/in/feldmanj/en\nOn 1/31/17 3:51 AM, KTP95 wrote:\n\nSorry For response, i know it is out topic.\n|$curl = new Curl(); |\n/ Popular UA for make it stealth /\n$curl->setUserAgent('Mozilla/5.0 (X11; Linux x86_64) \nAppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 \nSafari/537.36');\n/ Referrer for make it stealth /\n$curl->setReferrer('http://-page-where-you-find-the-javascript');\n$curl->setHeader('Content-Type', 'application/json');\n$curl->post('https://westus.api.cognitive.microsoft.com/vision/v1.0/ocr? \nlanguage=unk&detectOrientation=true', \narray('url'=>'http://static.animalpolitico.com/wp-content/uploads/2012/12/imagen-1-1.png'));\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/issues/423#issuecomment-276343949, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AE5vq623WR7Wy8Bw2GhTaIM2MpaDXnCjks5rXyAtgaJpZM4LwsIT.\n\n\n. I would trigger this just to output the response by default so the user can\ndeal with the return codes themselves\nOn Jan 31, 2016 11:32 AM, \"Zach Borboa\" notifications@github.com wrote:\n\nIn src/Curl/MultiCurl.php\nhttps://github.com/php-curl-class/php-curl-class/pull/247#discussion_r51365778\n:\n\n@@ -190,12 +190,16 @@ public function addPatch($url, $data = array())\n      * @access public\n      * @param  $url\n      * @param  $data\n-     * @param  $post_redirect_get If true, will cause 303 redirections to be followed using\n\nAlso include 301, 302, and 303 here\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/php-curl-class/php-curl-class/pull/247/files#r51365778\n.\n. Yes, there wonderful examples, You just implement them in whatever \npermutation needed for the application thereof.\n\nOn 3/8/16 10:51 PM, Zach Borboa wrote:\n\nIn tests/PHPCurlClass/PHPCurlClassTest.php \nhttps://github.com/php-curl-class/php-curl-class/pull/304#discussion_r55478327:\n\n\n$this->assertEquals(\"oo\",$curl->getId());\n$curl->rawResponse = \"pp\";\n$this->assertEquals(\"pp\",$curl->getRawResponse());\n$curl->rawResponseHeaders = \"qq\";\n$this->assertEquals(\"qq\",$curl->getRawResponseHeaders());\n$curl->requestHeaders = \"rr\";\n$this->assertEquals(\"rr\",$curl->getRequestHeaders());\n$curl->response = \"ss\";\n$this->assertEquals(\"ss\",$curl->getResponse());\n$curl->responseHeaders = \"uu\";\n$this->assertEquals(\"uu\",$curl->getResponseHeaders());\n$curl->successFunction = \"vv\";\n$this->assertEquals(\"vv\",$curl->getSuccessFunction());\n$curl->url = \"aa\";\n$this->assertEquals(\"aa\",$curl->getUrl());\n}\n\n\nAre these tests really needed?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/pull/304/files#r55478327.\n. We should certainly allow for custom outbound return messaging/codes and \nALSO variable handling for inbound return strings.\n\nOn 3/23/16 8:20 AM, Michael Mulligan wrote:\n\nIn src/Curl/Curl.php \nhttps://github.com/php-curl-class/php-curl-class/pull/313#discussion_r57177702:\n\n@@ -96,6 +98,8 @@ public function __construct($base_url = null)\n$this->curl = curl_init();\n     $this->id = 1;\n-        $this->responseParsing = true;\n\nI don't understand why you wouldn't just have the default to |true|. \nBy having them set in here, you may walk on an inheriting class.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub \nhttps://github.com/php-curl-class/php-curl-class/pull/313/files/76c6e92cdaa5b1b0594a2b395636a3373207517c#r57177702\n. \n",
    "Fohlen": "Funnily, I can retrieve the cookie with getCookie() but setting it again with setCookie() or leaving it as-is does not send it in the header\n. Really, that doesn't work, well, try it yourself\nphp\n        $curl = new Curl();\n        $curl->setCookie('79varZ', ('9e846d3d6b41ab71e8d6ba6cfff521ad:6:0'));\n        $file = $curl->get('https://www31.adrive.com/public/79zarV.html');\n        var_dump($curl->response->cookie); // this will be empty\n        $curl->close();\n@zachborboa you can obtain a valid 79varZ cookie from https://nightly.inexor.org\nI have this use case since their API is actually a pain in the ass and explicitly wants to prohibit external usage, but that doesn't mean I stop there :+1: \nUsing the exact same example on the command line, in comparison, works like a charm\n``` php\n$ch = curl_init();\n$url = 'https://www31.adrive.com/public/79zarV.html';\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Cookie: 79zarV=9e846d3d6b41ab71e8d6ba6cfff521ad:6:0'));\ncurl_setopt($ch, CURLOPT_URL, $url);\n$result = curl_exec($ch);\n```\n. ",
    "feeho": "@zachborboa \nSame result fI use: curl_getinfo($curl->curl, CURLINFO_EFFECTIVE_URL);\nYes,I used it.But add a varaiable is better?\n. ",
    "random-robbie": "set a timeout and can return what is required.\n. how would i echo out the content-type from the headers? rawResponseHeaders is a string.\nis it possible to echo out from the responseHeaders object?\n. ",
    "B4rb4ross4": "Exactly. Then you can mock out the class that way in PHPUnit:\n``` php\n$curl = $this->getMockBuilder('Curl\\Curl')\n                 ->disableOriginalConstructor()\n                 ->getMock();\n$curl->expects($this->once())->method('getRawResponse')->will($this->returnValue('{}'));\n```\n. Can you have a look into it, why the hhvm test failed? It seems to be this one Memory leak test, which was ok when i ran the tests locally. I just have no Idea what you want to assure there so a heads up would be nice if I should fix something ;)\n. Sure I can revert this changes, but it would make no sense. From the git documentation:\n\nThe purpose of gitignore files is to ensure that certain files not tracked by Git remain untracked.\nTo stop tracking a file that is currently tracked, use git rm --cached.\n\nIDE workspace files is something you don't wanna commit in a project. For that reason they belong into the .gitignore file.\nSee also https://github.com/github/gitignore\n. Yes they are necessary for 3 reasons:\na) You should simply always document your code. How should someone who uses the lib know what data type he can when he uses it. And guys like me who write extension should also know what data type they're working with\nb) Typehinting in IDE just does not work if you don't phpDoc your Code\nc) Code generators generate code with the correct comments/types if you document your attributes\n. http://stackoverflow.com/questions/1568091/why-use-getters-and-setters\nIf you only want to use it internally, why not protected then?\n. ",
    "ruslanbakanov": "\"Fatal error: Call to undefined method Curl\\Curl::getResponseCookies()\"\nHello!\nThe same situation\nAnd i just clone repository and have the latest version :)\n. ",
    "luisfavila": "I don't thing there's a getResponseCookies but a getResponseCookie only. I was searching for this too @ruslanbakanov . ",
    "jmurphy45": "Is there a way to get the data without using var_dump to convert the data to json?\n. ",
    "CashCode": "setOptArray  is my own fucntion, it just calls setOpt with array. But I didn't download anything. I can't understand this fix, what should I change? Explain me more widely, if possible ) thanks\n. But sometimes it's not enough, sometimes it has about 200 tasks to do in a short limit of time.  Server can keep only 50 properly. And when one is completed I want to put another one. That's the idea.. ",
    "aisn": "Additionaly i can narrow down the issue causes an error only for using a custom autoloader.\nDisable the autoload in class_exists call is required in my case. \nMy error log isn\u00b4t representative, i use Prado Framwork...\n\n2016-04-06 15:30:45 Error handler:include_once(CURLFile.php): failed to open stream: No such file or directory, Zeile: 101 in File: D:\\Zend\\Apache2\\htdocs\\jobportal\\framework\\PradoBase.php,\n. Thanks for your effort. \n\nI still think there\u00b4s generally no need to possibly invoke a autoloader function to load PHP supported libcurl Library Class CURLFile (PHP 5 >= 5.5.0, PHP 7) here.\n. ",
    "dlstadther": "I'm using Php Version 5.5.31.\nI'll try using $curl->close()\n. $curl->close(); solved the issue! Thanks @thebeline !\nCorrect code below:\n``` php\n$fp = fopen($path_to_file, \"w\");\nwhile(True) {\n   $curl = new Curl();\n   $curl->setBasicAuthentication($username, $password);\n   $curl->get($url);\n//check httpStatusCode for rate limiting purposes\n   //possibly sleep for some amount of time then continue with the next iteration of this loop\n$response = $curl->response;\n   foreach($response->a as $a) {\n       // keep only the attributes I want\n       fputcsv($fp, array('id' => $a->id, 'name' => $a->name));\n   }\n//get url for next page of results\n   if (property_exists($response, 'next-page') {\n       $url = $response->{'next-page'};\n   } else {\n       break;\n   }\n   $curl->close();\n}\nfclose($fp);\n```\n. ",
    "zimeng": "//By Curl\nphp\n\n<prequire ROOT_PATH . 'vendor/autoload.php';\nuse \\Curl\\Curl;\nclass httpex {\n    var $method;\n    var $cookie;\n    var $post;\n    var $header;\n    var $ContentType;\n    var $errno;\n    var $errstr;\n```\nfunction __construct() {\n$this->method = 'GET';\n$this->cookie = '';\n$this->post = '';\n$this->header = '';\n$this->errno = 0;\n$this->errstr = '';\n\n}\nfunction post($url, $data = array(), $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n     $this->method = 'POST';\n    $this->params=$data;\n    return $this->request($url, $referer, $limit, $timeout, $block);\n}\nfunction get($url, $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n    $this->method = 'GET';\n    return $this->request($url, $referer, $limit, $timeout, $block);\n}\nfunction upload($url, $data = array(), $files = array(), $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n$this->method = 'POST';\n$this->params=$data;\nforeach($files as $filekey) {\n    $filename=$_FILES[$filekey]['name'];\n    if($filename){\n       $this->params[$filekey]=curl_file_create(basename($filename),$this->get_mime($filename),$filekey);\n    }\n}\nreturn $this->request($url, $referer, $limit, $timeout, $block);\n\n}\nfunction request($url, $referer = '', $limit = 0, $timeout = 60, $block = TRUE) {\n$curl=new Curl();\n\nif($this->cookie){\n    foreach($this->cookie as $k=>$v){\n        $curl->setCookie($k,$v);\n    }\n}\nif($referer == '') $referer = config(\"system/site_url\");\n//$curl->setReferrer($referer);\n//$curl->setUserAgent($_SERVER['HTTP_USER_AGENT']);\nif($timeout > ini_get('max_execution_time')) @set_time_limit($timeout);\n$curl->setConnectTimeout($timeout);\n\nif($this->method==\"POST\"){\n    $curl->post($url,$this->params);\n}else{\n    $curl->get($url,$this->params);\n}\n\nif ($curl->error) {\n\n    $this->errno = $curl->errorCode;\n    $this->errstr= $curl->errorMessage;\n\n    $this->_status=false;\n\n}else {\n    $this->data=$curl->response;\n\n    $this->_status=true;\n}\n\n\n$curl->close();\n\nreturn $this->_status;\n\n}\nfunction save($file) {\n    dir_create(dirname($file));\n    return file_put_contents($file, $this->data);\n}\nfunction set_cookie($name, $value) {\nif(!is_array($this->cookie)){\n    $this->cookie=array();\n}\n$this->cookie[$name]=$value;\n\n}\nfunction get_cookie() {\nreturn $this->_cookies?:array();\n\n}\nfunction get_data() {\n    return $this->data;\n}\nfunction get_header() {\n    return $this->header;\n}\nfunction get_mime($file) {\n    $ext = strtolower(trim(substr(strrchr($file, '.'), 1, 10)));\n    if($ext == '') return '';\n    $mime_types = array (\n                      'acx' => 'application/internet-property-stream',\n                      'ai' => 'application/postscript',\n                      'aif' => 'audio/x-aiff',\n                      'aifc' => 'audio/x-aiff',\n                      'aiff' => 'audio/x-aiff',\n                      'asp' => 'text/plain',\n                      'aspx' => 'text/plain',\n                      'asf' => 'video/x-ms-asf',\n                      'asr' => 'video/x-ms-asf',\n                      'asx' => 'video/x-ms-asf',\n                      'au' => 'audio/basic',\n                      'avi' => 'video/x-msvideo',\n                      'axs' => 'application/olescript',\n                      'bas' => 'text/plain',\n                      'bcpio' => 'application/x-bcpio',\n                      'bin' => 'application/octet-stream',\n                      'bmp' => 'image/bmp',\n                      'c' => 'text/plain',\n                      'cat' => 'application/vnd.ms-pkiseccat',\n                      'cdf' => 'application/x-cdf',\n                      'cer' => 'application/x-x509-ca-cert',\n                      'class' => 'application/octet-stream',\n                      'clp' => 'application/x-msclip',\n                      'cmx' => 'image/x-cmx',\n                      'cod' => 'image/cis-cod',\n                      'cpio' => 'application/x-cpio',\n                      'crd' => 'application/x-mscardfile',\n                      'crl' => 'application/pkix-crl',\n                      'crt' => 'application/x-x509-ca-cert',\n                      'csh' => 'application/x-csh',\n                      'css' => 'text/css',\n                      'dcr' => 'application/x-director',\n                      'der' => 'application/x-x509-ca-cert',\n                      'dir' => 'application/x-director',\n                      'dll' => 'application/x-msdownload',\n                      'dms' => 'application/octet-stream',\n                      'doc' => 'application/msword',\n                      'dot' => 'application/msword',\n                      'dvi' => 'application/x-dvi',\n                      'dxr' => 'application/x-director',\n                      'eps' => 'application/postscript',\n                      'etx' => 'text/x-setext',\n                      'evy' => 'application/envoy',\n                      'exe' => 'application/octet-stream',\n                      'fif' => 'application/fractals',\n                      'flr' => 'x-world/x-vrml',\n                      'flv' => 'video/x-flv',\n                      'gif' => 'image/gif',\n                      'gtar' => 'application/x-gtar',\n                      'gz' => 'application/x-gzip',\n                      'h' => 'text/plain',\n                      'hdf' => 'application/x-hdf',\n                      'hlp' => 'application/winhlp',\n                      'hqx' => 'application/mac-binhex40',\n                      'hta' => 'application/hta',\n                      'htc' => 'text/x-component',\n                      'htm' => 'text/html',\n                      'html' => 'text/html',\n                      'htt' => 'text/webviewhtml',\n                      'ico' => 'image/x-icon',\n                      'ief' => 'image/ief',\n                      'iii' => 'application/x-iphone',\n                      'ins' => 'application/x-internet-signup',\n                      'isp' => 'application/x-internet-signup',\n                      'jfif' => 'image/pipeg',\n                      'jpe' => 'image/jpeg',\n                      'jpeg' => 'image/jpeg',\n                      'jpg' => 'image/jpeg',\n                      'js' => 'application/x-javascript',\n                      'latex' => 'application/x-latex',\n                      'lha' => 'application/octet-stream',\n                      'lsf' => 'video/x-la-asf',\n                      'lsx' => 'video/x-la-asf',\n                      'lzh' => 'application/octet-stream',\n                      'm13' => 'application/x-msmediaview',\n                      'm14' => 'application/x-msmediaview',\n                      'm3u' => 'audio/x-mpegurl',\n                      'man' => 'application/x-troff-man',\n                      'mdb' => 'application/x-msaccess',\n                      'me' => 'application/x-troff-me',\n                      'mht' => 'message/rfc822',\n                      'mhtml' => 'message/rfc822',\n                      'mid' => 'audio/mid',\n                      'mny' => 'application/x-msmoney',\n                      'mov' => 'video/quicktime',\n                      'movie' => 'video/x-sgi-movie',\n                      'mp2' => 'video/mpeg',\n                      'mp3' => 'audio/mpeg',\n                      'mpa' => 'video/mpeg',\n                      'mpe' => 'video/mpeg',\n                      'mpeg' => 'video/mpeg',\n                      'mpg' => 'video/mpeg',\n                      'mpp' => 'application/vnd.ms-project',\n                      'mpv2' => 'video/mpeg',\n                      'ms' => 'application/x-troff-ms',\n                      'mvb' => 'application/x-msmediaview',\n                      'nws' => 'message/rfc822',\n                      'oda' => 'application/oda',\n                      'p10' => 'application/pkcs10',\n                      'p12' => 'application/x-pkcs12',\n                      'p7b' => 'application/x-pkcs7-certificates',\n                      'p7c' => 'application/x-pkcs7-mime',\n                      'p7m' => 'application/x-pkcs7-mime',\n                      'p7r' => 'application/x-pkcs7-certreqresp',\n                      'p7s' => 'application/x-pkcs7-signature',\n                      'pbm' => 'image/x-portable-bitmap',\n                      'pdf' => 'application/pdf',\n                      'pfx' => 'application/x-pkcs12',\n                      'pgm' => 'image/x-portable-graymap',\n                      'php' => 'text/plain',\n                      'pko' => 'application/ynd.ms-pkipko',\n                      'pma' => 'application/x-perfmon',\n                      'pmc' => 'application/x-perfmon',\n                      'pml' => 'application/x-perfmon',\n                      'pmr' => 'application/x-perfmon',\n                      'pmw' => 'application/x-perfmon',\n                      'png' => 'image/png',\n                      'pnm' => 'image/x-portable-anymap',\n                      'pot,' => 'application/vnd.ms-powerpoint',\n                      'ppm' => 'image/x-portable-pixmap',\n                      'pps' => 'application/vnd.ms-powerpoint',\n                      'ppt' => 'application/vnd.ms-powerpoint',\n                      'prf' => 'application/pics-rules',\n                      'ps' => 'application/postscript',\n                      'pub' => 'application/x-mspublisher',\n                      'qt' => 'video/quicktime',\n                      'ra' => 'audio/x-pn-realaudio',\n                      'ram' => 'audio/x-pn-realaudio',\n                      'ras' => 'image/x-cmu-raster',\n                      'rgb' => 'image/x-rgb',\n                      'rmi' => 'audio/mid',\n                      'roff' => 'application/x-troff',\n                      'rtf' => 'application/rtf',\n                      'rtx' => 'text/richtext',\n                      'scd' => 'application/x-msschedule',\n                      'sct' => 'text/scriptlet',\n                      'setpay' => 'application/set-payment-initiation',\n                      'setreg' => 'application/set-registration-initiation',\n                      'sh' => 'application/x-sh',\n                      'shar' => 'application/x-shar',\n                      'sit' => 'application/x-stuffit',\n                      'snd' => 'audio/basic',\n                      'spc' => 'application/x-pkcs7-certificates',\n                      'spl' => 'application/futuresplash',\n                      'src' => 'application/x-wais-source',\n                      'sst' => 'application/vnd.ms-pkicertstore',\n                      'stl' => 'application/vnd.ms-pkistl',\n                      'stm' => 'text/html',\n                      'svg' => 'image/svg+xml',\n                      'sv4cpio' => 'application/x-sv4cpio',\n                      'sv4crc' => 'application/x-sv4crc',\n                      'swf' => 'application/x-shockwave-flash',\n                      't' => 'application/x-troff',\n                      'tar' => 'application/x-tar',\n                      'tcl' => 'application/x-tcl',\n                      'tex' => 'application/x-tex',\n                      'texi' => 'application/x-texinfo',\n                      'texinfo' => 'application/x-texinfo',\n                      'tgz' => 'application/x-compressed',\n                      'tif' => 'image/tiff',\n                      'tiff' => 'image/tiff',\n                      'tr' => 'application/x-troff',\n                      'trm' => 'application/x-msterminal',\n                      'tsv' => 'text/tab-separated-values',\n                      'txt' => 'text/plain',\n                      'uls' => 'text/iuls',\n                      'ustar' => 'application/x-ustar',\n                      'vcf' => 'text/x-vcard',\n                      'vrml' => 'x-world/x-vrml',\n                      'wav' => 'audio/x-wav',\n                      'wcm' => 'application/vnd.ms-works',\n                      'wdb' => 'application/vnd.ms-works',\n                      'wks' => 'application/vnd.ms-works',\n                      'wmf' => 'application/x-msmetafile',\n                      'wmv' => 'video/x-ms-wmv',\n                      'wps' => 'application/vnd.ms-works',\n                      'wri' => 'application/x-mswrite',\n                      'wrl' => 'x-world/x-vrml',\n                      'wrz' => 'x-world/x-vrml',\n                      'xaf' => 'x-world/x-vrml',\n                      'xbm' => 'image/x-xbitmap',\n                      'xla' => 'application/vnd.ms-excel',\n                      'xlc' => 'application/vnd.ms-excel',\n                      'xlm' => 'application/vnd.ms-excel',\n                      'xls' => 'application/vnd.ms-excel',\n                      'xlt' => 'application/vnd.ms-excel',\n                      'xlw' => 'application/vnd.ms-excel',\n                      'xof' => 'x-world/x-vrml',\n                      'xpm' => 'image/x-xpixmap',\n                      'xwd' => 'image/x-xwindowdump',\n                      'z' => 'application/x-compress',\n                      'zip' => 'application/zip',\n                    );\n    return isset($mime_types[$ext]) ? $mime_types[$ext] : '';\n}\nfunction is_ok() {\n    if(!$this->_status) {\n        return false;\n    }\n    return true;\n}\nfunction errno() {\n    return $this->errno;\n}\nfunction errmsg() {\n    return $this->errstr;\n}\n```\n}\n?>\n//By fsockopen\nphp \nclass http {\n    var $method;\n    var $cookie;\n    var $post;\n    var $header;\n    var $ContentType;\n    var $errno;\n    var $errstr;\n\n<p```\nfunction __construct() {\n    $this->method = 'GET';\n    $this->cookie = '';\n    $this->post = '';\n    $this->header = '';\n    $this->errno = 0;\n    $this->errstr = '';\n}\nfunction post($url, $data = array(), $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n    $this->method = 'POST';\n    $this->ContentType = \"Content-Type: application/x-www-form-urlencoded\\r\\n\";\n    if($data) {\n        $post = '';\n        foreach($data as $k=>$v) {\n            $post .= $k.'='.rawurlencode($v).'&';\n        }\n        $this->post .= substr($post, 0, -1);\n    }\n    return $this->request($url, $referer, $limit, $timeout, $block);\n}\nfunction get($url, $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n    $this->method = 'GET';\n    return $this->request($url, $referer, $limit, $timeout, $block);\n}\nfunction upload($url, $data = array(), $files = array(), $referer = '', $limit = 0, $timeout = 30, $block = TRUE) {\n    $this->method = 'POST';\n    $boundary = \"AaB03x\";\n    $this->ContentType = \"Content-Type: multipart/form-data; boundary=$boundary\\r\\n\";\n    if($data) {\n        foreach($data as $k => $v) { \n            $this->post .= \"--$boundary\\r\\n\"; \n            $this->post .= \"Content-Disposition: form-data; name=\\\"\".$k.\"\\\"\\r\\n\"; \n            $this->post .= \"\\r\\n\".$v.\"\\r\\n\"; \n            $this->post .= \"--$boundary\\r\\n\";\n        } \n    }\n    foreach($files as $k=>$v) {\n        $this->post .= \"--$boundary\\r\\n\"; \n        $this->post .= \"Content-Disposition: file; name=\\\"$k\\\"; filename=\\\"\".basename($v).\"\\\"\\r\\n\"; \n        $this->post .= \"Content-Type: \".$this->get_mime($v).\"\\r\\n\"; \n        $this->post .= \"\\r\\n\".file_get_contents($v).\"\\r\\n\"; \n        $this->post .= \"--$boundary\\r\\n\"; \n    }\n    $this->post .= \"--$boundary--\\r\\n\";\n    return $this->request($url, $referer, $limit, $timeout, $block);\n}\nfunction request($url, $referer = '', $limit = 0, $timeout = 60, $block = TRUE) {\n    $matches = parse_url($url);\n    $host = $matches['host'];\n    $path = $matches['path'] ? $matches['path'].($matches['query'] ? '?'.$matches['query'] : '') : '/';\n    $port = $matches['port'] ? $matches['port'] : 80;\n    if($referer == '') $referer = URL;\n    $out = \"$this->method $path HTTP/1.1\\r\\n\";\n    $out .= \"Accept: /\\r\\n\";\n    $out .= \"Referer: $referer\\r\\n\";\n    $out .= \"Accept-Language: zh-cn\\r\\n\";\n    $out .= \"User-Agent: \".$_SERVER['HTTP_USER_AGENT'].\"\\r\\n\";\n    $out .= \"Host: $host\\r\\n\";\n    if($this->cookie) $out .= \"Cookie: $this->cookie\\r\\n\";\n    if($this->method == 'POST') {\n        $out .= $this->ContentType;\n        $out .= \"Content-Length: \".strlen($this->post).\"\\r\\n\";\n        $out .= \"Cache-Control: no-cache\\r\\n\";\n        $out .= \"Connection: Close\\r\\n\\r\\n\";\n        $out .= $this->post;\n    } else {\n        $out .= \"Connection: Close\\r\\n\\r\\n\";\n    }\n    if($timeout > ini_get('max_execution_time')) @set_time_limit($timeout);\n    $fp = @fsockopen($host, $port, $errno, $errstr, $timeout);\n    $this->post = '';\n    if(!$fp) {\n        $this->errno = $errno;\n        $this->errstr = $errstr;\n        return false;\n    } else {\n        stream_set_blocking($fp, $block);\n        stream_set_timeout($fp, $timeout);\n        fwrite($fp, $out);\n        $this->data = '';\n        $status = stream_get_meta_data($fp);\n        if(!$status['timed_out']) {\n            $maxsize = min($limit, 30240000);\n            if($maxsize == 0) $maxsize = 30240000;\n            $start = false;\n            while(!feof($fp)) {\n                if($start) {\n                    $line = fread($fp, $maxsize);\n                    if(strlen($this->data) > $maxsize) break;\n                    $this->data .= $line;\n                } else {\n                    $line = fgets($fp);\n                    $this->header .= $line;\n                    if($line == \"\\r\\n\" || $line == \"\\n\") $start = true;\n                }\n            }\n        }\n        fclose($fp);\n        return $this->is_ok();\n    }\n}\nfunction save($file) {\n    dir_create(dirname($file));\n    return file_put_contents($file, $this->data);\n}\nfunction set_cookie($name, $value) {\n    $this->cookie .= \"$name=$value;\";\n}\nfunction get_cookie() {\n    $cookies = array();\n    if(preg_match_all(\"|Set-Cookie: ([^;]*);|\", $this->header, $m)) {\n        foreach($m[1] as $c) {\n            list($k, $v) = explode('=', $c);\n            $cookies[$k] = $v;\n        }\n    }\n    return $cookies;\n}\nfunction get_data() {\n    if (strpos($this->header,'chunk')) {\n        $data = explode(chr(13), $this->data);\n        return $data[1];\n    } else {\n        return $this->data;\n    }\n}\nfunction get_header() {\n    return $this->header;\n}\nfunction get_status() {\n    preg_match(\"|^HTTP/1.1 ([0-9]{3}) (.*)|\", $this->header, $m);\n    return array($m[1], $m[2]);\n}\nfunction get_mime($file) {\n    $ext = strtolower(trim(substr(strrchr($file, '.'), 1, 10)));\n    if($ext == '') return '';\n    $mime_types = array (\n                      'acx' => 'application/internet-property-stream',\n                      'ai' => 'application/postscript',\n                      'aif' => 'audio/x-aiff',\n                      'aifc' => 'audio/x-aiff',\n                      'aiff' => 'audio/x-aiff',\n                      'asp' => 'text/plain',\n                      'aspx' => 'text/plain',\n                      'asf' => 'video/x-ms-asf',\n                      'asr' => 'video/x-ms-asf',\n                      'asx' => 'video/x-ms-asf',\n                      'au' => 'audio/basic',\n                      'avi' => 'video/x-msvideo',\n                      'axs' => 'application/olescript',\n                      'bas' => 'text/plain',\n                      'bcpio' => 'application/x-bcpio',\n                      'bin' => 'application/octet-stream',\n                      'bmp' => 'image/bmp',\n                      'c' => 'text/plain',\n                      'cat' => 'application/vnd.ms-pkiseccat',\n                      'cdf' => 'application/x-cdf',\n                      'cer' => 'application/x-x509-ca-cert',\n                      'class' => 'application/octet-stream',\n                      'clp' => 'application/x-msclip',\n                      'cmx' => 'image/x-cmx',\n                      'cod' => 'image/cis-cod',\n                      'cpio' => 'application/x-cpio',\n                      'crd' => 'application/x-mscardfile',\n                      'crl' => 'application/pkix-crl',\n                      'crt' => 'application/x-x509-ca-cert',\n                      'csh' => 'application/x-csh',\n                      'css' => 'text/css',\n                      'dcr' => 'application/x-director',\n                      'der' => 'application/x-x509-ca-cert',\n                      'dir' => 'application/x-director',\n                      'dll' => 'application/x-msdownload',\n                      'dms' => 'application/octet-stream',\n                      'doc' => 'application/msword',\n                      'dot' => 'application/msword',\n                      'dvi' => 'application/x-dvi',\n                      'dxr' => 'application/x-director',\n                      'eps' => 'application/postscript',\n                      'etx' => 'text/x-setext',\n                      'evy' => 'application/envoy',\n                      'exe' => 'application/octet-stream',\n                      'fif' => 'application/fractals',\n                      'flr' => 'x-world/x-vrml',\n                      'flv' => 'video/x-flv',\n                      'gif' => 'image/gif',\n                      'gtar' => 'application/x-gtar',\n                      'gz' => 'application/x-gzip',\n                      'h' => 'text/plain',\n                      'hdf' => 'application/x-hdf',\n                      'hlp' => 'application/winhlp',\n                      'hqx' => 'application/mac-binhex40',\n                      'hta' => 'application/hta',\n                      'htc' => 'text/x-component',\n                      'htm' => 'text/html',\n                      'html' => 'text/html',\n                      'htt' => 'text/webviewhtml',\n                      'ico' => 'image/x-icon',\n                      'ief' => 'image/ief',\n                      'iii' => 'application/x-iphone',\n                      'ins' => 'application/x-internet-signup',\n                      'isp' => 'application/x-internet-signup',\n                      'jfif' => 'image/pipeg',\n                      'jpe' => 'image/jpeg',\n                      'jpeg' => 'image/jpeg',\n                      'jpg' => 'image/jpeg',\n                      'js' => 'application/x-javascript',\n                      'latex' => 'application/x-latex',\n                      'lha' => 'application/octet-stream',\n                      'lsf' => 'video/x-la-asf',\n                      'lsx' => 'video/x-la-asf',\n                      'lzh' => 'application/octet-stream',\n                      'm13' => 'application/x-msmediaview',\n                      'm14' => 'application/x-msmediaview',\n                      'm3u' => 'audio/x-mpegurl',\n                      'man' => 'application/x-troff-man',\n                      'mdb' => 'application/x-msaccess',\n                      'me' => 'application/x-troff-me',\n                      'mht' => 'message/rfc822',\n                      'mhtml' => 'message/rfc822',\n                      'mid' => 'audio/mid',\n                      'mny' => 'application/x-msmoney',\n                      'mov' => 'video/quicktime',\n                      'movie' => 'video/x-sgi-movie',\n                      'mp2' => 'video/mpeg',\n                      'mp3' => 'audio/mpeg',\n                      'mpa' => 'video/mpeg',\n                      'mpe' => 'video/mpeg',\n                      'mpeg' => 'video/mpeg',\n                      'mpg' => 'video/mpeg',\n                      'mpp' => 'application/vnd.ms-project',\n                      'mpv2' => 'video/mpeg',\n                      'ms' => 'application/x-troff-ms',\n                      'mvb' => 'application/x-msmediaview',\n                      'nws' => 'message/rfc822',\n                      'oda' => 'application/oda',\n                      'p10' => 'application/pkcs10',\n                      'p12' => 'application/x-pkcs12',\n                      'p7b' => 'application/x-pkcs7-certificates',\n                      'p7c' => 'application/x-pkcs7-mime',\n                      'p7m' => 'application/x-pkcs7-mime',\n                      'p7r' => 'application/x-pkcs7-certreqresp',\n                      'p7s' => 'application/x-pkcs7-signature',\n                      'pbm' => 'image/x-portable-bitmap',\n                      'pdf' => 'application/pdf',\n                      'pfx' => 'application/x-pkcs12',\n                      'pgm' => 'image/x-portable-graymap',\n                      'php' => 'text/plain',\n                      'pko' => 'application/ynd.ms-pkipko',\n                      'pma' => 'application/x-perfmon',\n                      'pmc' => 'application/x-perfmon',\n                      'pml' => 'application/x-perfmon',\n                      'pmr' => 'application/x-perfmon',\n                      'pmw' => 'application/x-perfmon',\n                      'png' => 'image/png',\n                      'pnm' => 'image/x-portable-anymap',\n                      'pot,' => 'application/vnd.ms-powerpoint',\n                      'ppm' => 'image/x-portable-pixmap',\n                      'pps' => 'application/vnd.ms-powerpoint',\n                      'ppt' => 'application/vnd.ms-powerpoint',\n                      'prf' => 'application/pics-rules',\n                      'ps' => 'application/postscript',\n                      'pub' => 'application/x-mspublisher',\n                      'qt' => 'video/quicktime',\n                      'ra' => 'audio/x-pn-realaudio',\n                      'ram' => 'audio/x-pn-realaudio',\n                      'ras' => 'image/x-cmu-raster',\n                      'rgb' => 'image/x-rgb',\n                      'rmi' => 'audio/mid',\n                      'roff' => 'application/x-troff',\n                      'rtf' => 'application/rtf',\n                      'rtx' => 'text/richtext',\n                      'scd' => 'application/x-msschedule',\n                      'sct' => 'text/scriptlet',\n                      'setpay' => 'application/set-payment-initiation',\n                      'setreg' => 'application/set-registration-initiation',\n                      'sh' => 'application/x-sh',\n                      'shar' => 'application/x-shar',\n                      'sit' => 'application/x-stuffit',\n                      'snd' => 'audio/basic',\n                      'spc' => 'application/x-pkcs7-certificates',\n                      'spl' => 'application/futuresplash',\n                      'src' => 'application/x-wais-source',\n                      'sst' => 'application/vnd.ms-pkicertstore',\n                      'stl' => 'application/vnd.ms-pkistl',\n                      'stm' => 'text/html',\n                      'svg' => 'image/svg+xml',\n                      'sv4cpio' => 'application/x-sv4cpio',\n                      'sv4crc' => 'application/x-sv4crc',\n                      'swf' => 'application/x-shockwave-flash',\n                      't' => 'application/x-troff',\n                      'tar' => 'application/x-tar',\n                      'tcl' => 'application/x-tcl',\n                      'tex' => 'application/x-tex',\n                      'texi' => 'application/x-texinfo',\n                      'texinfo' => 'application/x-texinfo',\n                      'tgz' => 'application/x-compressed',\n                      'tif' => 'image/tiff',\n                      'tiff' => 'image/tiff',\n                      'tr' => 'application/x-troff',\n                      'trm' => 'application/x-msterminal',\n                      'tsv' => 'text/tab-separated-values',\n                      'txt' => 'text/plain',\n                      'uls' => 'text/iuls',\n                      'ustar' => 'application/x-ustar',\n                      'vcf' => 'text/x-vcard',\n                      'vrml' => 'x-world/x-vrml',\n                      'wav' => 'audio/x-wav',\n                      'wcm' => 'application/vnd.ms-works',\n                      'wdb' => 'application/vnd.ms-works',\n                      'wks' => 'application/vnd.ms-works',\n                      'wmf' => 'application/x-msmetafile',\n                      'wmv' => 'video/x-ms-wmv',\n                      'wps' => 'application/vnd.ms-works',\n                      'wri' => 'application/x-mswrite',\n                      'wrl' => 'x-world/x-vrml',\n                      'wrz' => 'x-world/x-vrml',\n                      'xaf' => 'x-world/x-vrml',\n                      'xbm' => 'image/x-xbitmap',\n                      'xla' => 'application/vnd.ms-excel',\n                      'xlc' => 'application/vnd.ms-excel',\n                      'xlm' => 'application/vnd.ms-excel',\n                      'xls' => 'application/vnd.ms-excel',\n                      'xlt' => 'application/vnd.ms-excel',\n                      'xlw' => 'application/vnd.ms-excel',\n                      'xof' => 'x-world/x-vrml',\n                      'xpm' => 'image/x-xpixmap',\n                      'xwd' => 'image/x-xwindowdump',\n                      'z' => 'application/x-compress',\n                      'zip' => 'application/zip',\n                    );\n    return isset($mime_types[$ext]) ? $mime_types[$ext] : '';\n}\nfunction is_ok() {\n    $status = $this->get_status();\n    if(intval($status[0]) != 200) {\n        $this->errno = $status[0];\n        $this->errstr = $status[1];\n        return false;\n    }\n    return true;\n}\nfunction errno() {\n    return $this->errno;\n}\nfunction errmsg() {\n    return $this->errstr;\n}\n```\n}\n?>\n. ",
    "Bogdaan": "@zachborboa \nAgree with you. But download method \"without limit\" is security hole in the system.\nYou can generate terabyte file on remote (by user-agent or ip).\nActually this issue was created due to the fact that someone in my project use this hole.\n. ",
    "dotancohen": "I'm two years too late to help, but the suggested solution --max-filesize will not help against an attacker. If the attacker does not set a Content-Length header then curl will happily download the bytes until your hard drive is full.\nSetting the range (-r) from 0 to the max filesize wanted would not be effective either.. @zachborboa \nI see. The method is was a bit misleading to those familiar with curl, but I've looked at the source and I see that it is overwriting the default CURLOPT_PROGRESSFUNCTION and using the return value to abort if necessary. Very clever, I did not realize this was possible.\nI apologize for the noise!. ",
    "Naresh206": "Hi,\n I think that is wrong way.\nis it working\nOn Fri, May 27, 2016 at 7:09 AM, undercloud notifications@github.com\nwrote:\n\n[image: Boxbe] https://www.boxbe.com/overview This message is eligible\nfor Automatic Cleanup! (notifications@github.com) Add cleanup rule\nhttps://www.boxbe.com/popup?url=https%3A%2F%2Fwww.boxbe.com%2Fcleanup%3Fkey%3DTCWEv5%252Fs3bON5fO17Jg7fIsC%252BX7ekXehmG0dpbcOlLk%253D%26token%3D14UD4ix16W5ddUpNl337cXQYJaU4VdQPBrqt%252BpVR%252BChiZXAUnVtbVWxtRH4B4fynh%252F9%252BsTQVG5tBrkdq5bboiVOXt%252FYwxAbHtNvucxQQJr%252FOhofh%252FJfVD4TOYR7Ia9SzQfBeZgL88f6B4i8sfYMDig%253D%253D&tc_serial=25554262226&tc_rand=1288928303&utm_source=stf&utm_medium=email&utm_campaign=ANNO_CLEANUP_ADD&utm_content=001\n| More info\nhttp://blog.boxbe.com/general/boxbe-automatic-cleanup?tc_serial=25554262226&tc_rand=1288928303&utm_source=stf&utm_medium=email&utm_campaign=ANNO_CLEANUP_ADD&utm_content=001\nAdd chaining like this? It's cool!\ncurl = new Curl();$curl->setBasicAuthentication('username', 'password')         ->setUserAgent('')         ->setReferrer('')         ->setHeader('X-Requested-With', 'XMLHttpRequest')         ->setCookie('key', 'value')         ->get('http://www.example.com/')\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/php-curl-class/php-curl-class/issues/335, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/ASY-h94nFkXlFIN_mkmeUUGwvW6C7LBqks5qFvr-gaJpZM4IoiVf\n.\n. \n",
    "WyriHaximus": "They're free at letsencrypt\n. ",
    "cgurubest": "PHP Fatal error:  Call to undefined method Curl\\Curl::run()\n. ",
    "56quarters": "Thanks!\n. ",
    "harpreetsb": "i have seen the example. But does not seem to work. with fresh desk.\nhttps://developer.freshdesk.com/api/#create_ticket\n. check my new issue\nhttps://github.com/php-curl-class/php-curl-class/issues/345\n. ",
    "patricknelson": "What was the point of closing my original ticket #338? You'd simply setup a PR to implement the change/bug pointed out in the original ticket :smile: Anyway now that I've commented here at least I'll be notified if/when it's implemented. Thanks.\n. ",
    "funkytaco": "Oh, I see. Thanks, it works now.\nThe $curl->post() example confused me as I thought the username password needed to be posted where you put the $data array. I should have read the docs a little more closely.\n. ",
    "domnulnopcea": "great! thanks! when are you going to release a new composer package with this feature included? we are depending on it\n. ",
    "nesttle": "How can I set 'TRUE'? I'm using @dev release.\nThanks!\n. Thanks! :)\n. ",
    "julianrutten": "Thanks :) Sorry for not checking. Closing this issue as its a duplicate.\n. ",
    "Gormartsen": "Hi @zachborboa \nI like php-curl-class and I use it for many projects.\nRight now I am working on not trivial CURL RESTFul service where SEARCH method used instead of GET with params.\nSEARCH method is exactly what we need here (send search params in JSON format).\nI see that build finished with strange error while tests shows OK.\nOK (108 tests, 2662 assertions)\nIs here anything that I can do about it?\nPS thank you for php-curl-class! I like it.\n. ",
    "peter279k": "It should be min is 5.5 I think because the json_last_error_msg function only supports php-5.5+.. Ok, good categories. I also think we need to have the online doc for usage and sample code inexamples like this.\nWhat do you think?. The Travis CI is broken. After checking the Travis CI build log, I found the following problem.\n\nThe php-5.4 cannot support json_last_error_msg function because this will support php-5.5 at least.\nThe php-5.3 has the same function problem, too and the dist should set precise in .travis.yml. \n\nThe php-5.4 and php-5.5 is too old and it should not be supported for the next released.\nAnd let this package require php-7.0 version in the future.. ",
    "Philipp91": "Thank you!\n. ",
    "stamster": "Thanks @zachborboa !\n. ",
    "Bertutchio": "Thanks !\n. ",
    "mcred": "That got it! Thank you. \n. ",
    "KarelWintersky": "I think, it will be something like this:\n```\n/*\n     * Add download with two callback functions\n     * @param $url\n     * @param $callback_success\n     * @param $callback_error\n     * @return bool|Curl\n     /\n    public function addDownloadExtended($url, $callback_success, $callback_error)\n    {\n        $curl = new Curl();\n        $curl->setUrl($url);\n        if (is_callable($callback_success) && is_callable($callback_error) ) {\n            $curl->downloadCompleteFunction = $callback_success;\n            $curl->fileHandle = tmpfile();\n            $curl->errorFunction = $callback_error;\n        } else return false;\n    $curl->setOpt(CURLOPT_FILE, $curl->fileHandle);\n    $curl->setOpt(CURLOPT_CUSTOMREQUEST, 'GET');\n    $curl->setOpt(CURLOPT_HTTPGET, true);\n    $this->queueHandle($curl);\n    return $curl;\n}\n\n```\n. Fixed: https://github.com/php-curl-class/php-curl-class/pull/417\nadded example. old pullreq removed. this implementation is not useful. wtf? O.o\nNo syntax errors detected in ./examples/multi_curl_download_with_conditional_callback.php\nbut checks have failed. $curl->get($url);\nreturns object, not string!. ",
    "orodsem": "Yes it does return a successful response.\nI actually kind of figured out the problem :-P after I've looked at the code, I think there is something not right on post func to encode the given array at line 612 on Curl.php class\nbecause I've used curl_init lib and I could get the successful response back, here is the code:\n$headers = array(\n    'Accept: application/json',\n    'Content-Type: application/json'\n);\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_URL, \"https://api.sandbox.foo.com/xyz/endPoint\");\ncurl_setopt($ch, CURLOPT_SSLCERT, \"keyStore.pem\");\ncurl_setopt($ch, CURLOPT_SSLKEY, \"keyStore.pem\");\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode(array('foo'=>'bar')););\ncurl_setopt($ch, CURLOPT_POST, 1);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$contents = curl_exec($ch);\ncurl_close($ch);\nprint_r(json_decode($contents));\n. ",
    "bensekh": "Thank you @zachborboa. The clue is every value in post data cannot contains null, so need to be replaced with an empty string. The symbol string in the key is not the issue.. ",
    "webaddicto": "It works perfectly, thank you.\nIt would be great to add that example on the web page:\nhttps://github.com/php-curl-class/php-curl-class\nWith the other examples.. Found the issue, it was not related to cURL but to gethostbyname()\nProblem solved.. ",
    "knowsee": "Sorry , it's my framework error. I fix it.\nThanks your dedications. ",
    "tansautn": "Check your file \"DIR . '/download/image.png'\" , it might be wirting/reading by another process. Also can be another curl session . ",
    "asktobeasked": "No. It's a bug. This error occur because of  you call rename function before you close resource. To fix it, open file Curl.php, find\nprivate function downloadComplete($fh)\n{\n    if (!$this->error && $this->downloadCompleteFunction) {\n         rewind($fh);\n         $this->call($this->downloadCompleteFunction, $fh);\n        $this->downloadCompleteFunction = null;\n       }\n\n    if (is_resource($fh)) {\n        fclose($fh);\n    }\n\nchange to:\nprivate function downloadComplete($fh)\n{\n\n    if (is_resource($fh)) {\n        fclose($fh);\n    }\n\n    if (!$this->error && $this->downloadCompleteFunction) {\n        //rewind($fh); //Unnecessary\n        $this->call($this->downloadCompleteFunction, $fh);\n        $this->downloadCompleteFunction = null;\n    }\n\nwith function download, you should add mode as a parameter to user can easy custom it \n. And because of function download will call function get so that you should add $data as a parameter too. It should be as \npublic function download($url, $data = array(), $mixed_filename, $mode = 'wb')\n...\nthis->get($url, $data);\n.... @zachborboa As I said above, the problem occur because of the function rename run while file resource still open. So that to fix it, simple close resource before call downloadCompleteFunction. It's my code:\nFind:\n        // Move the downloaded temporary file to the destination save path.\n        $this->downloadCompleteFunction = function ($fh) use ($download_filename, $filename) {\n            rename($download_filename, $filename);\n        };\n\nReplace by\n        // Move the downloaded temporary file to the destination save path.\n        $this->downloadCompleteFunction = function ($fh) use ($download_filename, $filename) {\n            if($this->error)\n                unlink($download_filename);\n            else\n                rename($download_filename, $filename);\n\n        };\n\nFind:\n        if (!$this->error && $this->downloadCompleteFunction) {\n            rewind($fh);\n            $this->call($this->downloadCompleteFunction, $fh);\n            $this->downloadCompleteFunction = null;\n        }\n    if (is_resource($fh)) {\n        fclose($fh);\n    }\n\nReplace by:\n    if (is_resource($fh)) \n    {\n        fclose($fh);\n    }\n\n    if ($this->downloadCompleteFunction) {\n        //rewind($fh);\n        $this->call($this->downloadCompleteFunction, $fh);\n        $this->downloadCompleteFunction = null;\n    }\n\n. The issue from download method, friend. You can easy test it by the code:\n$curl = new Curl();\n$curl->download('https://secure.php.net/images/logos/php-med-trans.png', '/tmp/php-med-trans.png');\nYou will receive the error above because you call rename function before you close the file resource\n. After carefully check it, I found the problem. The error occur because you used CURLOPT_CUSTOMREQUEST option for get, post...It's meaningless. Please see https://curl.haxx.se/libcurl/c/CURLOPT_CUSTOMREQUEST.html\n\nCURLOPT_CUSTOMREQUEST option only accept value HTTP, FTP, IMAP, POP3, and SMTP. So that GET and POST value are meaningless\nPlease read http://stackoverflow.com/questions/4163865/how-to-reset-curlopt-customrequest\nIt's a php bug, you cannot reset CURLOPT_CUSTOMREQUEST by NULL \nI'm testing by set value of $follow_303_with_post to true (default in your script is false) that mean it will set CURLOPT_CUSTOMREQUEST = POST but some server when require more Content-Lenght. So that need write more code for header\n\n=> My solution is \n1. Remove $this->setOpt(CURLOPT_CUSTOMREQUEST, 'GET') in get(...) function method\n2. Remove \n    if ($follow_303_with_post) {\n        $this->setOpt(CURLOPT_CUSTOMREQUEST, 'POST');\n    } else {\n        if (isset($this->options[CURLOPT_CUSTOMREQUEST])) {\n            if ((version_compare(PHP_VERSION, '5.5.11') < 0) || defined('HHVM_VERSION')) {\n                trigger_error(\n                    'Due to technical limitations of PHP <= 5.5.11 and HHVM, it is not possible to '\n                    . 'perform a post-redirect-get request using a php-curl-class Curl object that '\n                    . 'has already been used to perform other types of requests. Either use a new '\n                    . 'php-curl-class Curl object or upgrade your PHP engine.',\n                    E_USER_ERROR\n                );\n            } else {\n                $this->setOpt(CURLOPT_CUSTOMREQUEST, null);\n            }\n        }\n    }\n\nin post(...) function method:\nDone ;). ",
    "Chak10": "I have the same error.\nphp\n$curl = new Curl();\n$curl->download('https://lh4.googleusercontent.com/-v0soe-ievYE/AAAAAAAAAAI/AAAAAAADwkE/KyrKDjjeV1o/photo.jpg', 'image.jpg');\nResult \ntext\nWarning: rename(image/image.jpg.pccdownload,image/image.jpg): Failed to access file. File used by another process. (Code: 32) in C:\\wamp64\\www\\class\\cURL\\Curl.php on line 287.\nIt works with @asktobeasked bug fix.\n[This Line] (https://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/Curl.php#L301) Replaced with:\nphp\n$this->downloadCompleteFunction = function($fh) use ($download_filename, $filename) {\n    if($this->error){\n    unlink($download_filename);\n    } else {\n    rename($download_filename, $filename);\n    }               \n};\nand [This Line] (https://github.com/php-curl-class/php-curl-class/blob/master/src/Curl/Curl.php#L1225) \nReplaced with:\n```php\nprivate function downloadComplete($fh) {\n        if (is_resource($fh)) {\n            fclose($fh);\n        }\nif (!$this->error && $this->downloadCompleteFunction) {\n        //rewind($fh);\n        $this->call($this->downloadCompleteFunction, $fh);\n        $this->downloadCompleteFunction = null;\n    }\n\n    // Fix \"PHP Notice: Use of undefined constant STDOUT\" when reading the\n    // PHP script from stdin. Using null causes \"Warning: curl_setopt():\n    // supplied argument is not a valid File-Handle resource\".\n    if (!defined('STDOUT')) {\n        define('STDOUT', fopen('php://stdout', 'w'));\n    }\n\n    // Reset CURLOPT_FILE with STDOUT to avoid: \"curl_exec(): CURLOPT_FILE\n    // resource has gone away, resetting to default\".\n    $this->setOpt(CURLOPT_FILE, STDOUT);\n\n    // Reset CURLOPT_RETURNTRANSFER to tell cURL to return subsequent\n    // responses as the return value of curl_exec(). Without this,\n    // curl_exec() will revert to returning boolean values.\n    $this->setOpt(CURLOPT_RETURNTRANSFER, true);\n\n}\n```. ",
    "wolaiye1010": "no ,it doesn't work ,i just try it .\nwhen  program the fourth times  execute \u201ccurl_multi_select($this->multiCurl)\u201d \nthe site  is still 502 . @zachborboa ,\nIt's magic !\nwhen php-cli execute this code \uff0cit is ok\uff01\nbut when nginx php-fpm execute this code , the site will 502\uff0cand no error msg.\nthe code is \uff1a\n```php\nrequire_once '/server/www/ganji/ganji_online/fuwu/vendor/autoload.php';\nini_set('display_errors','On');\nerror_reporting(E_ALL);\n$curl=new \\Curl\\MultiCurl;\n$curl->setJsonDecoder(function ($response) {\n    return json_decode($response, true);\n});\n$curl->success(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was successful.' . \"\\n\";\n    echo 'response:' . \"\\n\";\n    var_dump($instance->response);\n});\n$curl->error(function($instance) {\n    echo 'call to \"' . $instance->url . '\" was unsuccessful.' . \"\\n\";\n    echo 'error code: ' . $instance->errorCode . \"\\n\";\n    echo 'error message: ' . $instance->errorMessage . \"\\n\";\n});\n$curl->addGet('http://api.abtest.58corp.com/exp', [\n    'cookie' => '6978306004333685185595-853088371',\n    'layer' => 'GJHUANGYE_107',\n]);\n$curl->addGet('http://api.abtest.58corp.com/exp', [\n    'cookie' => '6978306004333685185595-853088371',\n    'layer' => 'GJHUANGYE_106',\n]);\n$curl->start();\n$curl->close();\n//var_dump($curl);\ndie;\n```. @zachborboa ,thank you for your attention to my question!. ",
    "yinfuyuan": "@zachborboa  The server is not expecting multipart/form-data and server is expecting bodyParams.\n but if i do this in first curl request:\n$curl->setHeader('Content-Type', 'multipart/form-data');\nThe server received bodyParams is empty at the second curl requests.\nThe two curl requests are in the same http request.. @zachborboa Yes. Now I'll give a complete example:\n```\n$file_data = array('file' => 'file');\n$request_url = ''; // Need to fill in a url\n$curl = new \\Curl\\Curl();\n$curl->setHeader('Content-Type', 'multipart/form-data'); // #anchor-1\n$curl->post($request_url, $file_data);\nif(!$curl->error) {\n    var_dump($curl->response);//The value is \"array(0) { }\", If i annotation \"#anchor-1\", the value is 'object(stdClass)#94 (1) { [\"file\"]=> string(4) \"file\" }'\n    echo '';\n}\n$curl->close();\n$data_new = array('name' => 'name');\n$request_url_new = ''; // Need to fill in a url\n$curl_new = new \\Curl\\Curl();\n$curl_new->post($request_url_new, $data_new);\nif(!$curl_new->error) {\n    var_dump($curl_new->response);//The value is \"array(0) { }\", If i annotation \"#anchor-1\", the value is 'object(stdClass)#99 (1) { [\"name\"]=> string(4) \"name\" }'\n}\n$curl_new->close();\n```\nThe object  $curl setHeader('Content-Type', 'multipart/form-data') has influenced on the new object $curl_new result.. @zachborboa \nI use browser run your example\uff0cand get the result is this:\nresponse 1: string(33) \"string(19) \"multipart/form-data\" \" response 2: string(33) \"string(19) \"multipart/form-data\" \"\nI try to use console run your example and run the same command, but I get result is null like this:\nresponse 1:\nstring(5) \"NULL\n\"\nresponse 2:\nstring(5) \"NULL\n\"\nand i get the notice from server:\nPHP Notice:  Undefined index: CONTENT_TYPE in ...\nI change \nvar_dump($_SERVER['CONTENT_TYPE']);\nto\nvar_dump($_SERVER);\nI get the result is this:\nresponse 1:\nstring(1171) \"array(22) {\n  ......\n  [\"HTTP_CONTENT_TYPE\"]=>\n  string(70) \"multipart/form-data; boundary=----------------------------06995504e60f\"\n  ......\n}\n\"\nresponse 2:\nstring(1082) \"array(21) {\n   ......\n  [\"HTTP_CONTENT_TYPE\"]=>\n  string(33) \"application/x-www-form-urlencoded\"\n  ......\n}\n\"\nI use browser get var_dump($_SERVER); result is this:\n```\nresponse 1: string(1763) \"\narray(36) {\n  ......\n  [\"CONTENT_TYPE\"]=>\n  string(19) \"multipart/form-data\"\n  ......\n  [\"HTTP_CONTENT_TYPE\"]=>\n  string(19) \"multipart/form-data\"\n  ......\n}\n\"\nresponse 2:\nstring(1760) \"\narray(36) {\n  ......\n  [\"CONTENT_TYPE\"]=>\n  string(19) \"multipart/form-data\"\n  ......\n  [\"HTTP_CONTENT_TYPE\"]=>\n  string(19) \"multipart/form-data\"\n  ......\n}\n\"\n```\nMy php version info is:\nPHP 5.5.25 (cli) (built: Feb 28 2017 09:48:53) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v2.5.0, Copyright (c) 1998-2015 Zend Technologies\n    with XCache v3.2.0, Copyright (c) 2005-2014, by mOo\n    with XCache Cacher v3.2.0, Copyright (c) 2005-2014, by mOo. @zachborboa  My operating system is CentOS release 6.5 (Final)\nSince you unable to reproduce\uff0cyou can close this issue now. This issue maybe affected with my other environment.When i find specific info,I'll report to you again.Thank you very much for your help.. ",
    "ddavaham": "I use it in Laravel with no issue. Below is the portion of my composer.json that would help with your situation. Once you make the modification necessary, do the following:\n\ncomposer dumpautoload\ncomposer update nothing (This will install no dependency without attempting to update existing ones)\n\n\"require\": {\n        \"php\": \">=5.6.4\",\n        \"3rdpartyeve/phealng\": \"~2.0\",\n        \"anlutro/l4-settings\": \"^0.4.9\",\n        \"doctrine/dbal\": \"^2.5\",\n        \"laravel/framework\": \"5.3.*\",\n        \"php-curl-class/php-curl-class\": \"^7.1\",\n        \"zizaco/entrust\": \"5.2.x-dev\"\n    },. ",
    "adrianceding": "close and unset multi_curl \nbut memory also be used\nIs this normal?. unset $this->activecurl[xxxx] not tigger curl's __destruct\nThis causes a memory leak\nmaybe a bug in php\nbut by the way\nIf i dont know the situation,it may cause a very serious situation\nTemporary solution is manually closed\nCan u record it.Just to remind others\nAfter all, not everyone knows this\n. ",
    "rainlay": "Hi, I was made a GET request \nthe sample is like (the queryString after http_build_query) :\n\nfail request\n\nhttps://api.sendbird.com/v3/users?user_ids=user_1%2user_2\n\nresponse\n\n{\n  \"users\": [],\n  \"next\": \"\"\n}\n\nsuccess request\n\nhttps://api.sendbird.com/v3/users?user_ids=user_1,user2\n\nresponse\n\n{\n  \"users\": [\n    {\n      \"user_id\": \"user_1\",\n      \"is_active\": true,\n      \"is_online\": false,\n      \"last_seen_at\": 1490683927390,\n      \"nickname\": \"user_1\",\n      \"profile_url\": \"\"\n    },\n    {\n      \"user_id\": \"user_2\",\n      \"is_active\": true,\n      \"is_online\": false,\n      \"last_seen_at\": 1490685668791,\n      \"nickname\": \"user_2\",\n      \"profile_url\": \"\"\n    }\n  ],\n  \"next\": \"\"\n}\n. Yes, just build it manually like this (even is not good)\n$queryString = $this->build_http_query($data);\n        $queryString .= '&'. 'user_ids=' . $user_ids;\n$this->curl->get($url, $queryString);. ",
    "tomcyr": "@zachborboa Thanks.. ",
    "drcrash84": "That's what i search, thanks.\n$get_1 = $multi_curl->addGet('https://www.example.com/');\nBut how to use array of urls in your example instead one url?\nLike this:\n$urls = array ('https://www.example.com/', 'https://www.example.com/', 'https://www.example.com/');\n$get_1 = $multi_curl->addGet($urls);\n- but this construction not working. ",
    "Pirenko": "Thanks for your response!. ",
    "sganz": "Not sure if this is the same thing I'm running into. I am doing a PUT and after I do no subsequent POST operations will work due to time out. I looked at some of the dumps from CURL directly (use verbose()) and seems like the content-length header might be carrying over from the last PUT operation, but it's never set (Or I don't think it is) for the POST. Going to try to manually set it and see if it helps. \n. Ok, I fixed it in my case but setting the content-length correctly. I'm not sure if this applies to the get call but it fixed my issue. I'm going to open a new issue for it.. I'll pull a new version and give it a test. Hopefully that will fix the issue on the post as well. Thanks for the quick reply!\nSandy. I tried a hack and a PR but didn't realize that the post data could also be an array. I think the problem only shows up when the post data is a string type not an array.\nSorry for the hack PR :). Zach -\nJust ran all the code on the new version and worked well. \nAgain thanks for an easy to use well thought out package!\nSandy. This code might be making a big assumption that the data is only a string when called by a put, I suspect that is the cause of all the CI errors. Looking for a better solution, unless you have one ;)\n. Odd, I'll double check my code, it's all working but I'm not using the the index on the respone and getting things back OK. \nMight be a setting I missed, or something trivial I'm doing that's different. \nOtherwise, working great, made it easy to get the task done.. Using Php-Curl-Class - 8.3.2 / Php 7.2.7 on Ubuntu\nHere is a snippet of the code. Not sure why (or if I need to) use the 'json' index, but when I do I get an undefined index error. Not sure if their is something else I'm missing.\nHere's the snipped of code that I'm using and working OK. \n```      \n        $curl = new Curl();\n        $curl->setHeader('Content-Type', 'application/json');\n        $curl->setDefaultJsonDecoder(true);\n    // set up post data\n    // $post_dat = [...] ;\n\n    $curl->post($vendor_service_url, $post_data);\n    $curl->close();\n\n    // $envelope = $curl->response['json']; throws undefined index 'json'\n\n    $envelope = $curl->response;\n\n```\n$envelope returns the php array with the data.\nMore for my own learning of what I might be doing wrong...\nSandy\n. Thanks, totally missed that, didn't even think it was related to content, thought it was a different way to access the resulting JSON data. So obvious now. Thanks for taking the time to explain.. Caught me too :). ",
    "walangkaji": "@sganz yap, i think the problem in content-length,\nI've just insert this opt after PUT method:\n$curl->removeHeader('Content-Length');\n. ",
    "giansalex": "In same machine, with library, using WebServer, but same errror using command line.   \n\n. ubuntu server 16, same error.\n\n. Command line & web server, same result. If you open the url,  it show same result.\n\n. I could resolve problem.\nphp\n$curl = new \\Curl\\Curl();\n$curl->setUserAgent(''); // empty user agent\n$html = $curl->get($url);\necho $html;\nThanks. Ok, this is the output\n\n. ",
    "Thalisson": "Thanks, accessing via array he brought normally, was treating as json the return.\nThank you very much. ",
    "divinity76": "yes!\n(but personally i would use a filetype that is guaranteed to benefit from compression, like .xml , but that's not important). ",
    "helencaia": "I have been working on the problem several day, and no any progress.  I tried even other way to send POST: \"file_get_contents()\", and got the same problem: no response. This service on the server-side should be working correctly. What is the problem in my code?\nHere is my code:\n<?php\n$clientId = \"K21000119\";\n$customerId = \"K21000119\";\n$parternId = 'u2Z1F7Fh';\n$string  = \"\";\n$string  .= \"\".$clientId.\"\"; \n$string  .= \"YTO\";\n$string  .= \"\".$customerId.\"\";\n$string  .= \"\";\n//echo \"$string.$parternId:\";\n//print_r($string.$parternId);\n$clientId = \"K21000119\";\n$customerId = \"K21000119\";\n$parternId = 'u2Z1F7Fh';\n$data_digest= \"\";//base64_encode(Bytes::toStr(Bytes::getBytes(md5($string.$parternId,true))));\n$data=array();\n$data['logistics_interface']=$string;//urlencode();\n$data['data_digest']=($data_digest);\n$data['clientId']=$clientId;\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, 'http://58.32.246.71:8000/CommonOrderModeBPlusServlet.action');\n curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n curl_setopt($curl, CURLOPT_POST, 1 );\n curl_setopt($curl, CURLOPT_POSTFIELDS, $data);\n  curl_setopt($curl, CURLOPT_HEADER, 0);\n//var_dump($curl);\n$tmpInfo = curl_exec ($curl);\ncurl_close ($curl);\necho $tmpInfo;\n?>. ",
    "lpj145": "Please, before open this issue i search around internet and issues here, not found any solution to this problem.. i searching by curl extension php, sorry.. ",
    "madsem": "ok already solved by taking a suggestion from one of your other replies:\n```php\n$translation = $multi_curl->addPost('https://translation.googleapis.com/language/translate/v2', array(\n                'key'    => $gApiKey,\n                'source' => $language,\n                'target' => $lang,\n                'q' => $sentence\n            ));\n            $translation->trgtlang = $lang;\n\n```\nThen I can get it along with the $instance object in success(), like $instance->trgtlang\n. ",
    "KyranRana": "Fair enough :+1: . ",
    "daninthemix": "OK, this is resolved by doing json_encode on all the file metadata and including it as the 'attributes' post field.. ",
    "SpazzMarticus": "Going through a list of commits to see what changed is quite time consuming. Maybe you could pinpoint to the major changes in the releases.\nYou can close this issue, if you want.. ",
    "timomayer": "i agree with @SpazzMarticus . a CHANGELOG.md file with the breaking changes would be helpful. going through commits for each new major version is not an option. ",
    "sainttt": "Can I help you with a review? May be separate to several pull requests/branches/commits?. ",
    "watari": "Hi. That is exactly how I do when get 400 error code from API.\nThis error code caused by this line Curl.php:615\nPlease reread description of issue. Thanks.. @zachborboa, in old version before setting this option check was performed.\n   if(!(is_array($data) && empty($data))) {\n        $this->setOpt(CURLOPT_POSTFIELDS, $this->buildPostData($data));\n    }. Thanks for fix. Now all works fine..\n",
    "MattJVarney": "I can confirm this issue. ",
    "IMN-MichaelL": "There appears to be more issues with the latest version of the library with multibyte handling in the parseUrl function. I however have not debugged that at this time.. PHP: 7.0.30-1+ubuntu14.04.1+deb.sury.org+1\nPHP Curl Class: 8.0.1. ",
    "gufei": "no,\nJson_encode is used in the post method. Json_encode needs to add options value to JSON_UNESCAPED_UNICODE in Chinese.\nSometimes this is needed, sometimes not necessary, and optional.\nIn the 144 line of the Curl.php file\n\n$json_str = json_encode($data,JSON_UNESCAPED_UNICODE);\n. ok,thanks. \n",
    "luolongfei": "It's working for me, thank you very much!. ",
    "laocoi": "My bad. ",
    "ikeyan": "This is my workaround.\n```php\n$contentType = \"multipart/form-data\"; // arbitrary content-type\n$body = [\"hoge\" => \"fuga\"];\n$isMultipartFormData = (bool)preg_match(\"#^multipart/form-data[\\t ]*($|;)#\", $contentType);\n$curl = new class($isMultipartFormData) extends Curl {\n    private $isMultipartFormData;\n    public function __construct(bool $isMultipartFormData, $base_url = null) {\n        parent::__construct($base_url);\n        $this->isMultipartFormData = $isMultipartFormData;\n    }\npublic function buildPostData($data) {\n    if (is_array($data) && $this->isMultipartFormData) {\n        if (\\Curl\\ArrayUtil::is_array_multidim($data)) {\n            $data = \\Curl\\ArrayUtil::array_flatten_multidim($data);\n        }\n        return $data;\n    }\n    return parent::buildPostData($data);\n}\n\n};\n$curl->setHeader(\"Content-Type\", $isMultipartFormData ? \"multipart/form-data\" : $contentType);\n$curl->post($url, $body);\n```. ",
    "naja7host": "Add new function to set headers\nfunction setCustomHeader($headers){\n    $this->custom_global_headers = $headers.\n}\nRemove $this->custom_global_headers from construct\nSo you can set headers for every request like\n$t = new test();\n$t->setCustomHeader([your header array]);\nvar_dump($t->reqOne());\n$t->setCustomHeader([]);\nvar_dump($t->reqTwo());\nLe dim. 16 sept. 2018 \u00e0 00:36, gokaybiz notifications@github.com a \u00e9crit :\n\n<?php\nrequire 'Curl.php';\nuse Curl\\Curl;\nclass test {\n  private $curl;\n  private $custom_global_headers;\nfunction __construct(){\n      $this->custom_global_headers = ['Content-Type' => 'application/x-www-form-urlencoded', 'Referer' => 'https://github.com'];\n      $this->curl = new Curl();\n      $this->curl->setHeaders($this->custom_global_headers);\n  }\n  function reqOne(){\n      $this->curl->setBasicAuthentication(\"funnyguy54\", \"password\");\n      return $this->ch->get(\"http://plai.de\");\n  }\n  function reqTwo(){\n      $this->curl->get(\"https://google.com/\");\n      return $this->curl;\n  }\n}\n$t = new test();\nvar_dump($t->reqOne());\nvar_dump($t->reqTwo());\nHow can i reset to defaults (like construct) after every request?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/php-curl-class/php-curl-class/issues/548, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ACWULwmMkmeWP7rS9AfM6mvrjuDWjETLks5ubY7tgaJpZM4WqlxW\n.\n. \n",
    "gokaybiz": "\nAdd new function to set headers function setCustomHeader($headers){ $this->custom_global_headers = $headers. } Remove $this->custom_global_headers from construct So you can set headers for every request like $t = new test(); $t->setCustomHeader([your header array]); var_dump($t->reqOne()); $t->setCustomHeader([]); var_dump($t->reqTwo()); Le dim. 16 sept. 2018 \u00e0 00:36, gokaybiz notifications@github.com a \u00e9crit :\n\u2026\n<?php require 'Curl.php'; use Curl\\Curl; class test { private $curl; private $custom_global_headers; function __construct(){ $this->custom_global_headers = ['Content-Type' => 'application/x-www-form-urlencoded', 'Referer' => 'https://github.com']; $this->curl = new Curl(); $this->curl->setHeaders($this->custom_global_headers); } function reqOne(){ $this->curl->setBasicAuthentication(\"funnyguy54\", \"password\"); return $this->ch->get(\"http://plai.de\"); } function reqTwo(){ $this->curl->get(\"https://google.com/\"); return $this->curl; } } $t = new test(); var_dump($t->reqOne()); var_dump($t->reqTwo()); How can i reset to defaults (like construct) after every request? \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#548>, or mute the thread https://github.com/notifications/unsubscribe-auth/ACWULwmMkmeWP7rS9AfM6mvrjuDWjETLks5ubY7tgaJpZM4WqlxW .\n\nIn this way, shouldn't i use setBasicAuthentication? Because auth header (\"funnyguy54\", \"password\") still there.. Yeah i did like that 13 days ago. Thank you anyway.. ",
    "ChoonKwang": "Thanks for your assistance, it works perfectly fine!. Hey, it works perfectly fine. Thanks for your help!. ",
    "sbaikov96": "but when I specify a proxy manually, without variables, the result is the same. ",
    "nronsisvalle": "Hi, thank you for your response.\nI tried your example but it doesn't change this behaviour. XML is still changed in \ndata=%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0A%3COrder+xmlns%3D%22http%3A%2F%2F.......\n. ",
    "kn-id": "Could you make a new release for this? @zachborboa . ",
    "e-baker": "Hey @zachborboa - thanks for the response!\nI'd already thought about version issues for both php and composer. Already running composer v1.8 before I opened the issue. I agree it could be an issue with composer, though. . ",
    "sjared": "Thank you as well.\nWill you be tagging this as a new version any time soon for composer?. ",
    "Kuzanin": "Hi. Output: object(Curl\\Curl)#3 (41) { [\"curl\"]=> resource(5) of type (curl) [\"id\"]=> string(23) \"5c3591e0aaeb00.84333263\" [\"error\"]=> bool(true) [\"errorCode\"]=> int(7) [\"errorMessage\"]=> string(94) \"Couldn't connect to server: Failed to connect to 109.196.175.182 port 3842: Connection refused\" [\"curlError\"]=> bool(true) [\"curlErrorCode\"]=> int(7) [\"curlErrorMessage\"]=> string(94) \"Couldn't connect to server: Failed to connect to 109.196.175.182 port 3842: Connection refused\" [\"httpError\"]=> bool(false) [\"httpStatusCode\"]=> int(0) [\"httpErrorMessage\"]=> string(0) \"\" [\"url\"]=> string(22) \"http://httpbin.org/get\" [\"requestHeaders\"]=> object(Curl\\CaseInsensitiveArray)#6 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"request-line\"]=> string(0) \"\" } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"request-line\"]=> string(12) \"Request-Line\" } } [\"responseHeaders\"]=> object(Curl\\CaseInsensitiveArray)#7 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"status-line\"]=> string(0) \"\" } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"status-line\"]=> string(11) \"Status-Line\" } } [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } [\"response\"]=> bool(false) [\"rawResponse\"]=> bool(false) [\"beforeSendCallback\"]=> NULL [\"downloadCompleteCallback\"]=> NULL [\"successCallback\"]=> NULL [\"errorCallback\"]=> NULL [\"completeCallback\"]=> NULL [\"fileHandle\"]=> NULL [\"downloadFileName\":\"Curl\\Curl\":private]=> NULL [\"attempts\"]=> int(1) [\"retries\"]=> int(0) [\"childOfMultiCurl\"]=> bool(false) [\"remainingRetries\"]=> int(0) [\"retryDecider\"]=> NULL [\"jsonDecoder\"]=> string(25) \"\\Curl\\Decoder::decodeJson\" [\"xmlDecoder\"]=> string(24) \"\\Curl\\Decoder::decodeXml\" [\"cookies\":\"Curl\\Curl\":private]=> array(0) { } [\"headers\":\"Curl\\Curl\":private]=> object(Curl\\CaseInsensitiveArray)#5 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(0) { } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(0) { } } [\"options\":\"Curl\\Curl\":private]=> array(14) { [10018]=> string(95) \"PHP-Curl-Class/8.5.0 (+https://github.com/php-curl-class/php-curl-class) PHP/7.2.13 curl/7.62.0\" [13]=> int(30) [2]=> bool(true) [20079]=> object(Closure)#4 (2) { [\"static\"]=> array(1) { [\"header_callback_data\"]=> object(stdClass)#2 (2) { [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } } } [\"parameter\"]=> array(2) { [\"$ch\"]=> string(10) \"\" [\"$header\"]=> string(10) \"\" } } [19913]=> bool(true) [10002]=> string(22) \"http://httpbin.org/get\" [10004]=> string(15) \"109.196.175.182\" [59]=> string(4) \"3842\" [10006]=> string(23) \"secret:secrets\" [61]=> bool(true) [10036]=> string(3) \"GET\" [80]=> bool(true) [10023]=> array(0) { } [44]=> bool(false) } [\"jsonDecoderArgs\":\"Curl\\Curl\":private]=> array(0) { } [\"jsonPattern\":\"Curl\\Curl\":private]=> string(84) \"/^(?:application|text)\\/(?:[a-z]+(?:[.-][0-9a-z]+){0,}[+.]|x-)?json(?:-[a-z]+)?/i\" [\"xmlDecoderArgs\":\"Curl\\Curl\":private]=> array(0) { } [\"xmlPattern\":\"Curl\\Curl\":private]=> string(53) \"~^(?:text/|application/(?:atom+|rss+|soap+)?)xml~i\" [\"defaultDecoder\":\"Curl\\Curl\":private]=> NULL [\"headerCallbackData\"]=> object(stdClass)#2 (2) { [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } } }\n. Free Proxy from free-proxy-list net\nobject(Curl\\Curl)#3 (41) { [\"curl\"]=> resource(7) of type (curl) [\"id\"]=> string(23) \"5c3593198217b5.15025765\" [\"error\"]=> bool(true) [\"errorCode\"]=> int(7) [\"errorMessage\"]=> string(92) \"Couldn't connect to server: Failed to connect to 103.21.163.81 port 6666: Connection refused\" [\"curlError\"]=> bool(true) [\"curlErrorCode\"]=> int(7) [\"curlErrorMessage\"]=> string(92) \"Couldn't connect to server: Failed to connect to 103.21.163.81 port 6666: Connection refused\" [\"httpError\"]=> bool(false) [\"httpStatusCode\"]=> int(0) [\"httpErrorMessage\"]=> string(0) \"\" [\"url\"]=> string(22) \"http://httpbin.org/get\" [\"requestHeaders\"]=> object(Curl\\CaseInsensitiveArray)#6 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"request-line\"]=> string(0) \"\" } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"request-line\"]=> string(12) \"Request-Line\" } } [\"responseHeaders\"]=> object(Curl\\CaseInsensitiveArray)#7 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"status-line\"]=> string(0) \"\" } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(1) { [\"status-line\"]=> string(11) \"Status-Line\" } } [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } [\"response\"]=> bool(false) [\"rawResponse\"]=> bool(false) [\"beforeSendCallback\"]=> NULL [\"downloadCompleteCallback\"]=> NULL [\"successCallback\"]=> NULL [\"errorCallback\"]=> NULL [\"completeCallback\"]=> NULL [\"fileHandle\"]=> NULL [\"downloadFileName\":\"Curl\\Curl\":private]=> NULL [\"attempts\"]=> int(1) [\"retries\"]=> int(0) [\"childOfMultiCurl\"]=> bool(false) [\"remainingRetries\"]=> int(0) [\"retryDecider\"]=> NULL [\"jsonDecoder\"]=> string(25) \"\\Curl\\Decoder::decodeJson\" [\"xmlDecoder\"]=> string(24) \"\\Curl\\Decoder::decodeXml\" [\"cookies\":\"Curl\\Curl\":private]=> array(0) { } [\"headers\":\"Curl\\Curl\":private]=> object(Curl\\CaseInsensitiveArray)#5 (2) { [\"data\":\"Curl\\CaseInsensitiveArray\":private]=> array(0) { } [\"keys\":\"Curl\\CaseInsensitiveArray\":private]=> array(0) { } } [\"options\":\"Curl\\Curl\":private]=> array(13) { [10018]=> string(95) \"PHP-Curl-Class/8.5.0 (+https://github.com/php-curl-class/php-curl-class) PHP/7.2.13 curl/7.62.0\" [13]=> int(30) [2]=> bool(true) [20079]=> object(Closure)#4 (2) { [\"static\"]=> array(1) { [\"header_callback_data\"]=> object(stdClass)#2 (2) { [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } } } [\"parameter\"]=> array(2) { [\"$ch\"]=> string(10) \"\" [\"$header\"]=> string(10) \"\" } } [19913]=> bool(true) [10002]=> string(22) \"http://httpbin.org/get\" [10004]=> string(13) \"103.21.163.81\" [59]=> string(4) \"6666\" [61]=> bool(true) [10036]=> string(3) \"GET\" [80]=> bool(true) [10023]=> array(0) { } [44]=> bool(false) } [\"jsonDecoderArgs\":\"Curl\\Curl\":private]=> array(0) { } [\"jsonPattern\":\"Curl\\Curl\":private]=> string(84) \"/^(?:application|text)\\/(?:[a-z]+(?:[.-][0-9a-z]+){0,}[+.]|x-)?json(?:-[a-z]+)?/i\" [\"xmlDecoderArgs\":\"Curl\\Curl\":private]=> array(0) { } [\"xmlPattern\":\"Curl\\Curl\":private]=> string(53) \"~^(?:text/|application/(?:atom+|rss+|soap+)?)xml~i\" [\"defaultDecoder\":\"Curl\\Curl\":private]=> NULL [\"headerCallbackData\"]=> object(stdClass)#2 (2) { [\"rawResponseHeaders\"]=> string(0) \"\" [\"responseCookies\"]=> array(0) { } } }\n. I'm Sorry. The error was that the hosting blocked requests from non-standard ports. Thank you very much.. ",
    "nerokc2": "But in example uses 1 proxy for many concurency . i say about proxy list for many concurency. ",
    "masroore": "Initiate your own Curl instances with individual proxies and add it to the MultiCurl instance.\nThis should give you an idea:\nphp\n$a = new Curl(); $a->setProxy('127.0.0.1:8080');\n$b = new Curl(); $b->setProxy('127.0.0.1:8888');\n$mc = new MultiCurl();\n$mc->addCurl($a);\n$mc->addCurl($b);\nuntested\nAlternately you may use MultiCurl::beforeSend() to customize each Curl object... Hi @zachborboa Thank you for the prompt response.\nI agree, apart from small syntactic sugar there aren't many advantages. (Personally, as someone with python, C# background, I am biased towards getter/setters \ud83d\ude04). ",
    "phatnt93": "Hi,\nCode example:\n\n$curl = new Curl();\n$curl->post('https://api.example.com/profile/', array(\n    'image' => '@path/to/file.jpg',\n));\nOR\n$curl = new Curl();\n$curl->post('https://api.example.com/profile/', array(\n    'image' => new CURLFile('path/to/file.jpg'),\n));. ",
    "crazePhper": "maybe is PHP env is  diff , . "
}