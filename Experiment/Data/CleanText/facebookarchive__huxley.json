{
    "petehunt": "Does easy_install huxley work? How about running the setup.py script directly from a checkout?\n. I'll check out this issue further when I get back from vacation next week. Thank you guys for tracking down a workaround!\n. I think this has been fixed. Please reopen if you see any issues; thanks!\n. This is in 0.3\n. So the issue here is that you're trying to navigate to a new page and currently Huxley doesn't support it. We could build this feature though. Normally we set up test pages and don't require navigating from page to page. Does your use case require us to build this feature? We can, but it'll be a little ugly.\n. @ratpik I think the difference between \"unit testing\" and \"integration testing\" tends to be simply characterized by the size of the unit being tested. I think Huxley probably qualifies as an integration test of the front-end unit of your project. Regardless, I'll make this error message better.\n. Fixed in bbae0729e527f64eaa2f2656cb1f5346285a7dfe\n. Nice! Can you sign https://developers.facebook.com/opensource/cla and comment when it's done? Thanks!\n. Thanks!\n. D'oh! Thanks for fixing this! Can you please sign the CLA and let me know when it's completed? Thanks! https://developers.facebook.com/opensource/cla\n. Thanks for the contribution! Can you please sign the CLA and let me know when you've done it? Thanks! https://developers.facebook.com/opensource/cla\n. Hey there, if you can rebase I can merge this in!\n. It looks like there's a lot of extra changes in this, can you rebase?\n. Looks like this was picked up in #5. Thanks for the fix though! Rookie mistake :P\n. The issue is that you're trying to navigate to a new page. This isn't currently supported, but we could build a feature to do so (it would require manually letting huxley know when you've changed pages via the console though)\n. Hey @bharatvamsi -\nHuxley is designed mainly for hitting test pages you've created rather than third-party sites. Gmail may take precautions to avoid the injection of third-party JS which Huxley requires to work. There may be ways to fix this but I think it's outside the scope of what Huxley is intended to do. You may be better off using Selenium/webdriver directly.\nLet me know if you have any questions; thanks!\n. Are you running the command in the directory that contains the Huxleyfile?\n. So this is nontrivial because we need to detect when the user is changing pages (easy), persist the old events list (easy via localstorage) and insert javascript into the new page (harder). I think there are a few hacky ways to do this, like adding a console command to inject JS, but I haven't come up with anything better. Any WebDriver ninjas out there have any ideas?\n. cc @pivotal-casebook\n. Cool find. I think this is a webdriver bug. I suppose it could be hacked around by hacking the DOM before each click (i.e. removing overflow:hidden anywhere in the parent), but this should really be fixed upstream, no?\nI'd consider a PR for this, but I'm unsure what the implications of changing the layout like that would be (what happens if it changes where the click target is?) and I am not sure I can prioritize this right now. Is there a bug we could bump in webdriver?\n. Hey @robfe11 - I ran into this today and just added c04a47951cb3e286dcafe568dbb5e2c04424ffbe which fixed it for my modal implementation. Can you reinstall from github and let me know if it works for you?\n. So when you record, Huxley will do playback twice to be sure that it'll work when you run it again. Did that process complete successfully or is that where this failure is coming from?\nAlso what may be helpful is running Huxley with the --save-diff option so you can identify exactly what's wrong.\n. I wonder if there are two modal masks stacked on top of each other?\n. Does Phantom support screen shots? I tried it once and it came back a big gray square but I certainly may have screwed something up.\n. OK, so I am debugging a similar issue that came up with our modals today and the stuff I just pushed is working for me (we're using React though, not bootstrap). Maybe fetch from GitHub again and see if it works.\nAt Instagram we record using browsers on our laptops and then playback on a remote server. It appears that PhantomJS supports webdriver -- all you need to do is set the HUXLEY_WEBDRIVER_REMOTE environment variable to point to your Selenium server for PhantomJS and it should just work. If you get this running let me know!\n. So if PhantomJS supports elementFromPoint() and can take screenshots we should be able to record on Firefox and playback on Phantom. Did you try using Phantom only for playback (i.e. only changing HUXLEY_WEBDRIVER_REMOTE?) rather than for both?\nSo Selenium was sending keystrokes to the wrong input box? \n. Ah, looks like phantom doesn't have click(): http://stackoverflow.com/questions/15739263/phantomjs-click-an-element\nI think we could probably inject that polyfill and it would work. Can you try adding that to your page to see if it works? If so we can just include it in Huxley.\n. Well, that's progress! I do think that x/y is the most reliable way to go and if you could make that work it would be great. If you really can't make that work reliably, another thing you could try is looking at the element you are clicking on and try to construct an xpath expression or something equivalent by traversing its parents and storing that instead. However I really don't like this as one of Huxley's strengths is that it doesn't care about the structure of your DOM and is resilient to refactors.\n. I'm not opposed to injecting jQuery if that's the highest leverage way we can get this to work. Thank you so much for your hard work with this issue -- I'm sure lots of people will benefit from it.\n. @mrdeep thanks for doing this!\nI am a little concerned about using a timer though. I believe that it will be possible to have a race condition such that we miss some events and it's confusing to the end-user since we have no way of detecting the error. Would you be opposed to, at least initially, modifying this to not use a timer and instead require a console message (i.e. type \"i\" to re-inject the JS)? I think eventually we may want to go with the timer, but I would rather make things explicit and move forward rather than starting with them implicit and having to backpedal later.\n. I've just merged a fix for this; thanks!\n. Hey @10io , mind signing https://developers.facebook.com/opensource/cla so I can take this? Thanks!\n. Thanks! Will do.\n. Are you sure this is an issue? I just added an example which indicates that it works.\n. Cool, I can't actually merge this until I've confirmed that you've signed the CLA :/ sorry. However that's pretty lame that you need an FB account to sign the CLA, I'll bring that up with our open-source folks today. Comment here when you manage to use the Word version, if you're stuck we can figure something else out.\n. Thanks!\n. I originally had a different command-line interface that exposed all of these options, but I felt like it got unwieldy. This can be accomplished by launching a different Selenium server and pointing Huxley at the correct URL -- do you think that's sufficient or can you see a reason why we would need this instead?\n. So I've been thinking about this a little more.\nThe problem with putting the browser in the Huxleyfile is that you may want to reuse the same recording on multiple platforms (imagine testing every old IE at once!). However today that's not possible since each test case has a single set of screenshots regardless of the platform.\nAdditionally we use Huxley in continuous integration, where we prefer to use the selenium server URL, so if we add this feature we need to support selenium URLs too.\nI'm thinking that we take a more aggressive approach to this. What if there were HuxleyEnvironment file sitting in the root of your project that listed all of your test environments. Something like:\ndev=browser:firefox\ndev-chrome=browser:chrome\njenkins-ie=webdriver:http://seleniumURI\njenkins-opera=webdriver:http://seleniumURI\njenkins-firefox=webdriver:http://seleniumURI\nThen you could specify the environment(s) you want to run in with the huxley command. A different set of screenshots could be kept for each platform.\nIf no HuxleyEnvironment was found we'd have a default one which uses the current behavior of hitting a localhost selenium server.\nWould this solve your problem? Would this be too complicated for people to understand?\n. I will be working on this soon!\n. Beginning work on this this week. Part of this is going to involve adapting Huxley to work in a team environment a bit better.\n. As part of this I landed parallel runs into master; still working on the rest of these features.\n. Have you looked at the HUXLEY_WEBDRIVER_REMOTE and HUXLEY_WEBDRIVER_LOCAL variables?\n. Thanks for the report\n. Ew, seems like I messed up the setup.py file. Will definitely try to get this one fixed, thanks!\n. I'll try to cut a new release this week to fix this.\nSent from my iPhone\nOn Oct 6, 2013, at 3:38 PM, \"Kevin Lamping\" notifications@github.com<mailto:notifications@github.com> wrote:\nFYI, for anyone else interested in the steps to install with the dependencies the way they are, here's how I did it:\n1.  First, you need to have Opera installed before all of this. Do that here: http://www.opera.com/computer/https://urldefense.proofpoint.com/v1/url?u=http://www.opera.com/computer/&k=ZVNjlDMF0FElm4dQtryO4A%3D%3D%0A&r=qYx6qLphxKhA5vHBqr9vuw%3D%3D%0A&m=XWNZ24MvzfBT0lAhk3D17tqvFcThJESXcfTkUXmpVQY%3D%0A&s=097519243086065b3da1e9a08e8f6cc23c853e642e77bc4519887dbfc2fc2caf\n2.  Install jsonpickle v0.4.0 (i had to use sudo, you may not)\n$ sudo pip install jsonpickle==0.4.0\n1.  Install the remaining dependencies (again, i had to use sudo, you may not)\n$ sudo pip install plac\n$ sudo pip install selenium\n$ sudo pip install pil\n1.  Then you can install huxley itself:\n   $ sudo pip install huxley\n\u2014\nReply to this email directly or view it on GitHubhttps://urldefense.proofpoint.com/v1/url?u=https://github.com/facebook/huxley/issues/22%23issuecomment-25774981&k=ZVNjlDMF0FElm4dQtryO4A%3D%3D%0A&r=qYx6qLphxKhA5vHBqr9vuw%3D%3D%0A&m=XWNZ24MvzfBT0lAhk3D17tqvFcThJESXcfTkUXmpVQY%3D%0A&s=3cbb9665200b59a54ef24a8eed38f57a1e00a127e99bbce2d347aad2365f6cb9.\n. Fixed in 0.4. Thanks!\n. So recording and playing back every browser event with 100% accuracy is quite tricky. Instead I've taken a use-case based approach. That is, what real-world problem are you facing that requires this problem to be fixed? By looking at that problem maybe the tradeoffs will become clearer.\nFor example, the reason why we don't support this today is because for many use cases all that matters is \"I typed some stuff into a textfield and something else happened\" -- usually the \"stuff\" that was typed in doesn't matter so much in a test environment. But if there's a case where this isn't true we should definitely fix it.\n. First of all I'm totally down to fix this as long as we can do it reliably. I think we can probably handle a subset of this functionality reliably.\nHowever my general approach has been to isolate my front-end into smaller pieces with mocked data/IO to make the tests run more reliably, so I've never run into this issue. Your tests may become more fragile if you rely on end-to-end testing of things like login flows.\nWhat if we just recorded the browser modifier keys in the event logs and changed the keys sent accordingly?\n. Let's move the discussion to #19 \n. This is a little outside the scope of Huxley; it's designed to be a test-like tool for small pieces of UI, not a scraper. Closing out :/\n. Thanks for this! I'm currently traveling (JSConf EU) so it will be about a week until I can take a look at this.\n. Hey @memoryboxes ! Few pieces of feedback.\n1. What's the motivation behind history mode? Is checking your screenshots into Git not working for you? I like using Git or another VCS rather than creating a new solution since there are lots of tools (e.g. bisect) built around existing workflows.\n2. As far as creating test cases goes, I like the general idea. Can we iterate on it in a separate PR?\n3. Drag and drop seems cool too, can we put this in a separate PR too?\nThanks!\n. So hover states should be normalized away because we don't actually use the screenshots from your record session. We replay the log of actions you performed in an automated way and take screenshots without actual user interaction.\nWith that said it may be a browser window focus issue. I've seen this on a few platforms. Try making sure the window isn't focused when running Huxley after you record. What I do at Instagram is run the records on my local machine and all playback on a remote webdriver server.\nWhat platform are you on? I wonder if there is a way we could fix this in a platform-independent way, or at least throw a warning in there.\n. @igreulich your misunderstanding is probably the result of a bug in the docs -- any feedback for how we could clear that up?\n. I like that the default behavior is writing new screenshots because that's the whole point of the workflow :) I'm afraid if it's not the default people may feel that --update has more friction and should be used sparingly which is not the case.\nWhat if instead I printed a message to the console saying exactly what was going on when the tool is started?\n. Hey @pivotal-casebook --\nSo, even though I think that there are better ways to do this per the best practices like @jacobangel said, I would like to support this use case if we can do it reliably. See https://github.com/facebook/huxley/pull/12 for a pull request that adds support for this feature as well as some of my concerns about its reliability. Would definitely appreciate any thoughts you would have on it.\nWith that said we already have an issue for this at https://github.com/facebook/huxley/issues/10 so I am going to close this out in favor of keeping that one open. Feel free to chime in on that issue or the pull request to share any additional context you may have. Thanks for the report!\n. The original (pre-open source) version of Huxley worked like this. In fact it's how Facebook writes webdriver tests (i.e. \"click an element with this xpath\"). The problem is that when you change the implementation details of your UI due to refactoring markup/JS/etc you may break the test and force a re-record of everything. I've found that using x/y has been pretty resilient to both UI and markup changes. Have you identified a particular case that this fails at (i.e. you say small UI changes, can you give an example?) I would be willing to make this strategy pluggable, though it would take a bit of refactoring.\n. So the x/y clicking is supposed to simulate a human running through the test plan (in an automated way). I think what you want is actually clicking on the menu item with the same text each time, right?\nWhat if instead Huxley looked at the item that was clicked and looks for a data-huxley-id attribute, which will be used instead of x/y if it exists?\n. It's extremely important that Huxley is resilient to changes in the underlying implementation, so I would like to expose this as an explicit contract between Huxley and the application being tested rather than have it be implicit, magical, and hard to understand.\n. I believe this is a problem with one of the dependencies, not Huxley, as this doesn't have any C code. Closing out :/\n. Well, it's done during re-record and playback so we can consistently record without focus. The screenshots from the original record were always useless.\n. How about mouseup?\n. The click doesn't happen until mouseup, right?\n. This is probably OK. Are you seeing any related issues?\n. This is strange. Do you have specific repro steps?\n. Try setting the http_proxy environment variable before running. Does that work?\n. Did this end up working?\n. Can you paste the full trace back?\n. Good idea, https://github.com/facebook/huxley/issues/44\n. Do you have firefox installed?\n. This should work with Python 2. It does not work with Python 3\n. ",
    "cyildirim": "I have same problem with @pythonmobile . But i didnt take any error with @petehunt 's method. Thanks.\n. It works. I knew it was quite easy. Thanks.\n. ",
    "pythonmobile": "I tried easy_install, and it complained that I did not have permission to write some file (I was in admin mode). Are you using PIL on this project? Have you tried pillows? \n. Here is another problem I hit : (I could run it on debian)\nAny ideas what is wrong? \n\nRunning Huxley file: Huxleyfile\nRunning test: toggle\nBegin record\nPress enter to take a screenshot, or type Q+enter if you're done\nQ\nTraceback (most recent call last):\n  File \"/usr/local/bin/huxley\", line 9, in \n    load_entry_point('Huxley==0.2', 'console_scripts', 'huxley')()\n  File \"/usr/local/lib/python2.7/dist-packages/huxley/cmdline.py\", line 126, in main\n    sys.exit(plac.call(main))\n  File \"/usr/local/lib/python2.7/dist-packages/plac_core.py\", line 309, in call\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"/usr/local/lib/python2.7/dist-packages/plac_core.py\", line 195, in consume\n    return cmd, self.func((args + varargs + extraopts), *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/huxley/cmdline.py\", line 105, in _main\n    record=True\n  File \"/usr/local/lib/python2.7/dist-packages/huxley/main.py\", line 109, in main\n    TestRun.record(local_d, d, (url, postdata), screensize, filename, diffcolor, sleepfactor, save_diff)\n  File \"/usr/local/lib/python2.7/dist-packages/huxley/run.py\", line 127, in record\n    events = d.execute_script('return window._getHuxleyEvents();')\n  File \"/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py\", line 397, in execute_script\n    {'script': script, 'args':converted_args})['value']\n  File \"/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py\", line 165, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py\", line 152, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.WebDriverException: Message: u\"window._getHuxleyEvents is not a function\\nBuild info: version: '2.33.0', revision: '4e90c97', time: '2013-05-22 15:32:38'\\nSystem info: os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-4-amd64', java.version: '1.6.0_27'\\nDriver info: driver.version: unknown\" ; Screenshot: available via screen ; Stacktrace: Method anonymous threw an error in http://mydomain.com/~user\n. ",
    "djg10": "It worked when I installed it from the .zip file directly. I couldn't get it working using easy_install or pip.\n. ",
    "vinht23": "@djg10, Thanks for the tip. This install method works!\n. @rick-li You download the zip repository of Huxley. Then you unzip it and run setup.py install.\n. ",
    "rick-li": "@djg10 Hi, how do you install from .zip file, which zip file are you referring to? thanks!\n. ",
    "anth0nyc": "Win7 Pro Python34  - I am getting: NameError: name 'execfile' is not defined\nnote: also tried with Python 27 but it didn't have pip\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  Al\nC:\\Users\\Z003BXMW>pip install huxley\nDownloading/unpacking huxley\n  Downloading Huxley-0.5.tar.gz\n  Running setup.py (path:C:\\Users\\Z003BXMW\\Ap\n    Traceback (most recent call last):\n      File \"\", line 17, in \n      File \"C:\\Users\\Z003BXMW\\AppData\\Local\\T\n        execfile(os.path.join(DIRNAME, 'huxle\n    NameError: name 'execfile' is not defined\n    Complete output from command python setup\n    Traceback (most recent call last):\nFile \"\", line 17, in \nFile \"C:\\Users\\Z003BXMW\\AppData\\Local\\Temp\\\nexecfile(os.path.join(DIRNAME, 'huxley',\nNameError: name 'execfile' is not defined\n. ",
    "jigisha9": "I donot find zip file to download huxley from: https://github.com/facebook/huxley/tree/master/huxley\nor https://github.com/facebook/huxley... can you send me link where this zip file resides?\n. ",
    "ratpik": "Well navigation would be a good feature to have. More importantly, would Huxley work with urls that require authentication? My first use case was to test a new user signup/login flow which requires both authentication and re-direction.\nThis can all be done via configuration as long as Huxley respects cookie based sessions.\n. That does make sense. I might have confused Huxley with an integration testing tool as opposed to a unit testing one.\n. ",
    "jacobangel": "I have to disagree. I tried to add multiple steps to my tests the first time I popped up a script. I was a bit confused by the error, but after some reflection it made sense. I (speaking with limited experience) think I would be hesitant to provide the navigation feature, since doing so kind of attacks the 'soul' of the project.\nHuxley is asking you to try to test your components independently, falling closer to unit tests side of things than integration test. Restricting navigation implicitly keep your tests 'more honest'. If anything, I think that it'd be better if Huxley threw a better error upon navigation, since this is probably going to be a common misconception, and the error is a bit unintuitive to understand. \n. signed. thanks, pete!\n. From the best practices:\n\nDon't test a live app. Use mocking to make your components reliable instead. If you hit your live app, failures in any number of places could trigger false failures in your UI tests. Instead of hitting a real URL in your app, create a dedicated test URL for Huxley to hit that uses mocking (and perhaps dependency injection) to isolate your UI component as much as possible. Huxley is completely unopinionated; use whatever tools you want to do this.\n\nYou may get more out of huxley if you create a test page with the isolated component, instead of trying to use this as a high level integration test. You might be better off using a phantom js if you're looking for something to crawl your website/app. \n. ",
    "maxlinc": "Done.\nNote - I thought it was broken for a minute, but then I realized that no\ndiff.png is produced if the screenshots are a different size.\nhuxley.errors.TestError: Different dimensions between\n'toggle.huxley/screenshot0.png' ((1024, 538)) and 'toggle.huxley/last.png'\n((1024, 663))\nvs\nhuxley.errors.TestError: Screenshot 0 was different; compare\ntoggle.huxley/screenshot0.png with toggle.huxley/last.png. See\ntoggle.huxley/diff.png for the comparison. diff=(957.9512855899463, 1024,\n663)\nOn Thu, Aug 1, 2013 at 4:14 PM, Pete Hunt notifications@github.com wrote:\n\nNice! Can you sign https://developers.facebook.com/opensource/cla and\ncomment when it's done? Thanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/huxley/pull/4#issuecomment-21962371\n.\n. \n",
    "TheSriram": "Signed CLA. Thanks!\n. ",
    "bharatvamsi": "Following is the error received:\nD:\\PythonAssignments\\ImageComparison>huxley -r\nRunning Huxley file: Huxleyfile\nRunning test: toggle\nBegin record\nPress enter to take a screenshot, or type Q+enter if you're done\n1 screenshots taken\nPress enter to take a screenshot, or type Q+enter if you're done\n2 screenshots taken\nPress enter to take a screenshot, or type Q+enter if you're done\n3 screenshots taken\nPress enter to take a screenshot, or type Q+enter if you're done\n4 screenshots taken\nPress enter to take a screenshot, or type Q+enter if you're done\nq\nTraceback (most recent call last):\n  File \"C:\\Python27\\Scripts\\huxley-script.py\", line 9, in \n    load_entry_point('Huxley==0.1', 'console_scripts', 'huxley')()\n  File \"C:\\Python27\\lib\\site-packages\\huxley-0.1-py2.7.egg\\huxley\\cmdline.py\", line 126, in main\n    sys.exit(plac.call(main))\n  File \"C:\\Python27\\lib\\site-packages\\plac-0.9.1-py2.7.egg\\plac_core.py\", line 309, in call\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"C:\\Python27\\lib\\site-packages\\plac-0.9.1-py2.7.egg\\plac_core.py\", line 195, in consume\n    return cmd, self.func((args + varargs + extraopts), *_kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\huxley-0.1-py2.7.egg\\huxley\\cmdline.py\", line 105, in _main\n    record=True\n  File \"C:\\Python27\\lib\\site-packages\\huxley-0.1-py2.7.egg\\huxley\\main.py\", line 109, in main\n    TestRun.record(local_d, d, (url, postdata), screensize, filename, diffcolor, sleepfactor, save_diff)\n  File \"C:\\Python27\\lib\\site-packages\\huxley-0.1-py2.7.egg\\huxley\\run.py\", line 127, in record\n    events = d.execute_script('return window._getHuxleyEvents();')\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 397, in execute_script\n    {'script': script, 'args':converted_args})['value']\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 165, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 152, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.WebDriverException: Message: u\"window._getHuxleyEvents is not a function\\nBuild info: version: '2.3\n3.0', revision: '4e90c97', time: '2013-05-22 15:32:38'\\nSystem info: os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1',\njava.version: '1.6.0_25'\\nDriver info: driver.version: unknown\" ; Screenshot: available via screen ; Stacktrace: Method anonym\nous threw an error in https://accounts.google.com/SignUp?service=mail&continue=http%3A%2F%2Fmail.google.com%2Fmail%2F&ltmpl=de\nfault\n. Hi petehunt,\nThank you for the instant reply. I'm not navigating to a new page as I'm using \"http://www.gmail.com\" in huxley file. Please can you elaborate on this?\nRegards,\nvamsi.\n. Hi Petehunt,\nThank you for sharing the detailed information.\nRegards,\nvamsi.\n. ",
    "jessicard": "I commented on https://github.com/facebook/huxley/pull/12, but was curious if this was dead, or if there's still a chance https://github.com/facebook/huxley/pull/12 could be finished/merged in to fix this? This feature would be quite nice.\n. I noticed this hasn't been touched in awhile but the support would be really awesome - any plans on finishing this/merging this in for https://github.com/facebook/huxley/issues/10?\n. ",
    "robfe11": "Actually, I spent a bit more time testing it, I think it's because we change the content within the modal after clicking the button.  Selenium thinks that the new content is still hidden, even though it's now visible.\nModal in action can be found here, just click the \"Start watching\" button, and enter a random e-mail address, then click submit.  The step after submit is where it fails.  \nAlso, I tested this using the Chrome driver instead, and it fails even before.  Looks like Selenium can't find the input box in the modal:\nTraceback (most recent call last):\n  File \"/usr/local/bin/huxley\", line 8, in <module>\n    load_entry_point('Huxley==0.3', 'console_scripts', 'huxley')()\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 150, in main\n    sys.exit(plac.call(_main))\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 309, in call\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 195, in consume\n    return cmd, self.func(*(args + varargs + extraopts), **kwargs)\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 127, in _main\n    screensize=screensize\n  File \"/Library/Python/2.7/site-packages/huxley/main.py\", line 109, in main\n    TestRun.record(local_d, d, (url, postdata), screensize, filename, diffcolor, sleepfactor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 152, in record\n    cls.rerecord(test, path, url, remote_d, sleepfactor, diffcolor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 75, in rerecord\n    run._playback(sleepfactor)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 95, in _playback\n    step.execute(self)\n  File \"/Library/Python/2.7/site-packages/huxley/steps.py\", line 45, in execute\n    run.d.find_element_by_id(id).click()\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/webelement.py\", line 54, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/webelement.py\", line 228, in _execute\n    return self._parent.execute(command, params)\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 165, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 152, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.WebDriverException: Message: u'unknown error: Element is not clickable at point (854, 42). Other element would receive the click: <div class=\"modal-backdrop fade in\"></div>\\n  (Session info: chrome=28.0.1500.95)\\n\n. Hi @petehunt, \nThanks for making that change, recording works great now, but the playback now has an issue.  I am taking two screenshots, one after the modal appears, and then another one after the form submit in the modal (modal is still open).  The recording portion runs without any issues, but then the playback fails at the first screenshot:\nBegin playback\n  Sleeping for 1197.0 ms\n  Clicking [967, 363]\n  Sleeping for 1620.0 ms\n  Typing A\n  Sleeping for 416.0 ms\n  Taking screenshot 0\nTraceback (most recent call last):\n  File \"/usr/local/bin/huxley\", line 8, in <module>\n    load_entry_point('Huxley==0.3', 'console_scripts', 'huxley')()\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 150, in main\n    sys.exit(plac.call(_main))\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 309, in call\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 195, in consume\n    return cmd, self.func(*(args + varargs + extraopts), **kwargs)\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 127, in _main\n    screensize=screensize\n  File \"/Library/Python/2.7/site-packages/huxley/main.py\", line 109, in main\n    TestRun.record(local_d, d, (url, postdata), screensize, filename, diffcolor, sleepfactor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 152, in record\n    cls.rerecord(test, path, url, remote_d, sleepfactor, diffcolor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 79, in rerecord\n    cls.playback(test, path, url, d, sleepfactor, diffcolor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 85, in playback\n    run._playback(sleepfactor)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 95, in _playback\n    step.execute(self)\n  File \"/Library/Python/2.7/site-packages/huxley/steps.py\", line 93, in execute\n    raise TestError('Screenshot %s was different.' % self.index)\nhuxley.errors.TestError: Screenshot 0 was different.\nThe odd part is that when I run through the same test case, but only take that first screenshot, then do the playback, it executes without any issues.  \nAny ideas?\n. It fails in the second playback.  Didn't know about --save-diff, just ran it with that option, and the screenshots are different.  The modal opacity in screenshot0 is correct, whereas in screenshot1, there's no opacity.\n\n\n. Just checked the CSS, there's only one.  Also, I was watching the FF windows are it was recording it, the modal panel shows up fine in the browser, but not in the screenshots.  It's really odd...\n. On a side note, did you look into PhantomJS when selecting headless browsers?\n. Yah, it does, we use it for one of our projects, and it's a really good headless browser.  It supports all CSS selectors, and it's easy to retrieve data.  CasperJS (http://casperjs.org/) can run on top of it for scripting test cases ala Selenium.  I'm not sure how you would record user input though like you currently do for huxley (which is the huge timesaver).\n. So I tried again using your latest code and the Selenium server, no dice.\nI also spent the morning trying to get PhantomJS to play nice, but it didn't work.  The main reason is that PhantomJS is a headless browser (no UI), so the recording step doesn't work.  I was trying to hack around with your code to write the JSON file using FF, but then have PhantomJS do the actually playback.   \nTo get Huxley to connect to PhantomJS, I had to add a try/except block - https://github.com/robfe11/huxley/commit/8661ca4568f69e61e5fe5c57c2ad0b3b8121c91f   \nAfter that, I tried a couple things:\n- Running PhantomJS as a remote webdriver, it's easy enough using /usr/local/bin/phantomjs --webdriver 8085\n* Connection to it worked, but you are unable to record the steps since it's a headless browser \n- Running PhantomJS through Selenium grid hub, use -role hub when running the Selenium server, then /usr/local/bin/phantomjs --webdriver 7001 --webdriver-selenium-grid-hub=http://127.0.0.1:4444 for phantomjs\n  * Connection worked, but once again, couldn't record\nAnyways, the above could be useful, if you want to ever move Huxley to work serverside.\nHaving said that, I figured out why Selenium was failing in the first place, and why the modal panel had 0 opacity.  For some reason Selenium is not selecting the right input box, and ends up using an input box that's behind the modal panel.  So maybe your latest selector code needs to be updated? \n. Yes, I did only change HUXLEY_WEBDRIVER_REMOTE but then FF wouldn't launch anymore.  I will try it again this afternoon.  \nYes, Selenium was sending the keystrokes to the input box behind the modal panel.\n. So I tried again by just setting HUXLEY_WEBDRIVER_REMOTE, and it's throwing the following error on playback:\nTraceback (most recent call last):\n  File \"/usr/local/bin/huxley\", line 8, in <module>\n    load_entry_point('Huxley==0.3', 'console_scripts', 'huxley')()\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 153, in main\n    sys.exit(plac.call(_main))\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 309, in call\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"/Library/Python/2.7/site-packages/plac_core.py\", line 195, in consume\n    return cmd, self.func(*(args + varargs + extraopts), **kwargs)\n  File \"/Library/Python/2.7/site-packages/huxley/cmdline.py\", line 130, in _main\n    screensize=screensize\n  File \"/Library/Python/2.7/site-packages/huxley/main.py\", line 111, in main\n    TestRun.record(local_d, d, (url, postdata), screensize, filename, diffcolor, sleepfactor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 152, in record\n    cls.rerecord(test, path, url, remote_d, sleepfactor, diffcolor, save_diff)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 75, in rerecord\n    run._playback(sleepfactor)\n  File \"/Library/Python/2.7/site-packages/huxley/run.py\", line 95, in _playback\n    step.execute(self)\n  File \"/Library/Python/2.7/site-packages/huxley/steps.py\", line 40, in execute\n    'document.elementFromPoint(%d, %d).click();' % (self.pos[0], self.pos[1])\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 397, in execute_script\n    {'script': script, 'args':converted_args})['value']\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 165, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Python/2.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 152, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.WebDriverException: Message: u'Error Message => \\'\\'undefined\\' is not a function (evaluating \\'document.elementFromPoint(744, 257).click()\\')\\'\\n caused by Request => {\"headers\":{\"Accept\":\"application/json\",\"Accept-Encoding\":\"identity\",\"Connection\":\"close\",\"Content-Length\":\"123\",\"Content-Type\":\"application/json;charset=UTF-8\",\"Host\":\"127.0.0.1:7001\",\"User-Agent\":\"Python-urllib/2.7\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\\\"sessionId\\\\\": \\\\\"a23df920-08ff-11e3-bb1a-bbf957ff882c\\\\\", \\\\\"args\\\\\": [], \\\\\"script\\\\\": \\\\\"document.elementFromPoint(744, 257).click();\\\\\"}\",\"url\":\"/execute\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"execute\",\"directory\":\"/\",\"path\":\"/execute\",\"relative\":\"/execute\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/execute\",\"queryKey\":{},\"chunks\":[\"execute\"]},\"urlOriginal\":\"/session/a23df920-08ff-11e3-bb1a-bbf957ff882c/execute\"}' ; Screenshot: available via screen\nThis error happens after you do any clicking on the page.  Looks like it's not able to execute the \"click()\" function, do you inject jQuery into the DOM anywhere? \n. Just did that actually, replaced line 40 in steps.py with a JS only click event trigger:\nfunction eventFire(el,etype){if(el.fireEvent){(el.fireEvent(\"on\"+etype));}else{var evObj=document.createEvent(\"Events\");evObj.initEvent(etype,true,false);el.dispatchEvent(evObj);}}eventFire(document.elementFromPoint(%d, %d),\"click\");\nRunning into a different problem now!  Seems like phantomJS is taking screenshots using it's own browser, which changes interprets the font size differently (i.e. we are using px instead of em).  This cause xy coordinates to not be consistent across the Chrome browser and phantomjs'.  Trying to see how I can get around that...\n. I agree, using the x/y is the most reliable way, which means that recording in a browser, then executing in a headless browser is not the best solution for that.  So back to the drawing board trying to get Selenium to play nice with forms inside of a modal panel. \n. Probably not the best solution, but I've been replacing some of your JS calls with jQuery calls to try to narrow down the issue.  Turns out that document.activeElement.id returns null for forms within the modal panel, probably because it wasn't visible when the DOM was loaded.  I'm trying to replace that portion of your code with jQuery, at least for testing.  Anyways, I'll have to continue working on it later this week.\n. Sorry, been really busy for the past couple months, I have some time coming up, is this something that would still be beneficial for Huxley?\n. Thanks for that, haven't had a chance to test it out yet, does it work for all cases? \n. ",
    "javed-atp": "Hi,\nI want to use Huxley for crossbrowser testing. In our application we need to navigate to different pages on the same domain. \nSuccessfully installed the huxley, currently facing the problem while recording - getting the below error\nTestError: Could not call window._getHuxleyEvents(). This usually means you navi\ngated to a new page, which is currently unsupported.\nI have tried the solution described in the above comment, it is not working. \nCould any one please suggest how to proceed...\nThanks\n. ",
    "dsainati1": "I also had the same issue just now, with a very similar traceback, the only differences being in the File locations. \n. ",
    "danielviolin": "I also had the same issue. My huxley version is 0.4. \nmy traceback is here, thx:\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Python27\\Scripts\\huxley-script.py\", line 9, in \nload_entry_point('Huxley==0.4', 'console_scripts', 'huxley')()\n  File \"build\\bdist.win-amd64\\egg\\huxley\\cmdline.py\", line 153, in main\n  File \"C:\\Program Files\\Python27\\lib\\site-packages\\plac_core.py\", line 309, in\ncall\n    cmd, result = parser_from(obj).consume(arglist)\n  File \"C:\\Program Files\\Python27\\lib\\site-packages\\plac_core.py\", line 195, in\nconsume\n    return cmd, self.func(_(args + varargs + extraopts), *_kwargs)\n  File \"build\\bdist.win-amd64\\egg\\huxley\\cmdline.py\", line 130, in _main\n  File \"build\\bdist.win-amd64\\egg\\huxley\\main.py\", line 109, in main\n  File \"build\\bdist.win-amd64\\egg\\huxley\\run.py\", line 152, in record\n  File \"build\\bdist.win-amd64\\egg\\huxley\\run.py\", line 79, in rerecord\n  File \"build\\bdist.win-amd64\\egg\\huxley\\run.py\", line 85, in playback\n  File \"build\\bdist.win-amd64\\egg\\huxley\\run.py\", line 95, in _playback\n  File \"build\\bdist.win-amd64\\egg\\huxley\\steps.py\", line 93, in execute\nWindowsError: [Error 32] The process cannot access the file because it is being used by another process: 'toggle\n.huxley\\last.png'\n. ",
    "BasJansen": "Same problem here. Is there a fix or workaround allready? \nWhen I get this error the record.json file is 0 bytes so all recorded information is lost.\n. ",
    "charu9": "One workaround that worked for me. I changed this line in \\Python27\\Lib\\site-packages\\huxley\\steps.py\nin finally block in class ScreenshotTestStep(TestStep) , changed \n           finally:\n                if not run.save_diff:\n                    os.unlink(new)\nTO\n         finally:\n                if not run.save_diff:\n                    print 'end'\n. ",
    "chenglou": "You can check the screenshot difference with the --save-diff flag.\n. yo @petehunt, key input on form elements doesn't actually work lol.\nThe problem is that faking a click on the input doesn't actually focus it, so subsequent key presses are really sent against nothing. This patch fixes this but actually introduces two problems:\n1. The screen shot when the window is active vs non-active will be different, because only the active window shows the blue hue around focused elements. Simplest way of working around this is to ask the tester to never focus on the browser window during the entire rerun/replay procedure, but this is kind of lame\u2026\n2. ~~This introduces a new bug. Following the sequence click input1 -> press a -> click input2 -> press b will actually result in huxley inputting ab on input1, leaving input2 alone. input2's actually focused briefly thanks to the above patch, but somehow the b key press still ends up on input1. I suspect this has to do with KeyTestStep, will check further.~~ Edit: fixed below.\n. Alright, the above change fixes the bug 2. There are some KEY_IDs lying around but they don't seem to do anything, so I replaced the ones concerning the patch. Didn't touch the rest.\nStill, what about problem 1?\n. That's really weird, I just clone the new version and installed it; doesn't work.\n(Selenium 2.35.0)\n. By the way, if you use ff 23 selenium will crash on < 2.35.0. This has been fixed since.\n. Hey, to see the difference between screenshots, pass the --save-diff flag. The difference will be highlighted.\nMost of the times this is due to the window focus. For example, if you had your input focused, the blue input aura will be captured. It isn't displayed the same way for an unfocused window.\n. @petehunt I was thinking of opening a second small window during the playback so that it automatically unfocuses the first one, what do you think?\n@igreulich do you touch anything after the before-last step? Like petehunt said, the screenshots you captured during the recording phase don't do anything actually. The playback is e first real recording and the verification is where it fails. Try, during these two steps, to manually focus the window both times. If that doesn't work, unfocus me both times.\n. Woah, let's get some stuff cleared so that we dont hav\u00e9 any fondamental misunderstanding: the steps are\n- manually record\n- followed by auto playback\n- then auto verification\nIf you want to verify again, you only run huxley --playback-only. You don't manually re-record anything. Right?\n. Running huxley actually updates the screenshots. Don't do that right after you change the UI in your case. \n. You don't re-record w screenshots manually. The 'update screenshot' option is huxley.\n. Can you upload a small screen recording somewhere? It'll help a lot because I suspect the problem is in some detail. QuickTime can record screencasts. \n. Glad to help!\n. @petehunt to add my own experience: I've had probably the same problem initially, so in my port the options are only --record and --update  The default is playback, and an explicit playback flag doesn't exist. This is less for convenience reason and more for preventing newcomers accidentally overriding their old screenshots thinking that huxley is for verification. Like we discussed before, I also don't record any screenshot during record to prevent confusion. There's also no automatic verification after the initial recording (just a playback to actually record the screenshots).\nTl; dr: hux --update to update, hux --record to record followed by an automatic --update and hux to compare and automatically save diff (no explicit flag). Three modes with minimal overlap.\n. Update can be written as hux -u so it's no extra hassle. But you're right, it's more mental than anything else.\u00a0\nBetter messages is nice. I use red/yellow/green to indicate error/warning/success. They really stand out.\nAbout saving screen shots during recording: that might still be confusing?\nOn Thu, Sep 19, 2013 at 12:01 PM, Pete Hunt notifications@github.com\nwrote:\n\nI like that the default behavior is writing new screenshots because that's the whole point of the workflow :) I'm afraid if it's not the default people may feel that --update has more friction and should be used sparingly which is not the case.\nWhat if instead I printed a message to the console saying exactly what was going on when the tool is started?\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/huxley/issues/27#issuecomment-24750668\n. SImply running huxley will re-record the screenshots again without comparison. That's what you want.\n. This partially solve your problem: https://github.com/facebook/huxley#how-do-i-use-a-remote-webdriver-server\n\nAbout multiple browsers, I've opened an issue: #32\n. This is not a bug. It's how selenium interprets the dimensions being passed. I guess huxley could track the chrome dimensions and pass the correct values to selenium... Btw, I get 662 instead of 663.\n. @edmadcap the height is either the default or the one you specified. If you pass x, it takes x (unless x is bigger than your screen of course). And currently you must pass the various heights.\n. What I mean is for --playback-only and plain huxley, the dummy browser window doesn't show up. \n. P.S. can you test this please? I'm sure it works (works on node-huxley) but I can't get pip to install something in my current directory, lol.\n. why not mousedown? Also, mouseup might happen during a different time.\nBut yeah, why not mousedown?\n. oh wow you're right... fixed\n. But the only way the size could have changed is if you specified it in the huxleyfile; if you did that, don't you already know the image's changed?\n. How would that work though? As in, just let huxley take a screen shot by itself and move on?\n. Of course, though I'm not not sure how useful it is since you can copy paste a record file over to achieve that\n. Oh, sorry misunderstood. You can't take the screen shot without opening the browser, at least not with selenium (which powers Huxley) afaik? So you can only save two or three keystrokes.\n(FYI: with the current implementation, the first batch of screen shot (during recording) is actually discarded because of input fields focus aura (the auto rerecording defocuses all)).\n. it's a limitation. Scrolling isn't supported yet afaik.\n. Edit: nvm.\nScrolling should be easy to add!\n. Cross-posting from https://github.com/chenglou/node-huxley/issues/30\nThe node version has a jasmine-like xname option to temporarily disable some tests. I'm also considering dropping it and opt instead for >name instead, which allows you to run a single test.\n. You're welcome =). It's written in the best practices here.\n. ^ This usually means you've navigated away from a page. Currently, Huxley records what's on the initial page only, as it injects a script during page start to track your actions.\nThere might be some use cases for navigating to another page, but I'd say usually when you're testing single components, you should be fine.\n. Cool, so this is a different issue right? Can you open a new one? Easier to diagnose this way.\n. Random plug! @petehunt is super busy nowadays. I maintain a node port here. There are a few differences, but give it a try if you want!\n. Is the anywhere word actually there? Because that's in my node-huxley but not in this huxley.\n. @jamesgpearce @petehunt \n. ",
    "10io": "@petehunt it's done\nIt might be a good idea to add a \"Contributing\" section in the README file explaining that we need to sign https://developers.facebook.com/opensource/cla to propose a patch.\n. ",
    "emanlove": "Note this applies to issue #1 \n. Signed CLA on it's (electronic) way.\n. @paazmaya: It looks as if the latest version of Huxley posted on PyPI, which is where I am assuming your call to pip grabbed the packages from, is 0.4 and was posted 2013-10-08. The change from Pill to Pillow occurred with e5396e79d22703ec1aceac1c833274fb167ecc0a merged on 2013-11-13. So the version on PyPI is a little old. You might be able to get @petehunt to make a new release. \n. @petehunt: If I may, I'd also recommend tagging the git repository using\ngit tag -a v<ver> -m \"<ver> release\"\ngit push --tags\ne.g.\ngit tag -a v1.0.0 -m \"1.0.0 release\"\ngit push --tags\nAn example is the releases under the Selenium2Library.\n. ",
    "scottmac": "It was a design decision made 3 years ago to help prevent spam and basically ease of use. We have a paper version of the CLA and @jamesgpearce is working on removing the Facebook account requirement.\n. ",
    "davewasmer": "+1 for this - I'm relatively new to selenium, and the less time I have to spend learning the difference between Selenium RC 1, Selenium Service, ChromeDriver, and a dozen other concepts, the better.\nRight now I'm trying to get my tests to run with Chrome, and can't seem to get huxley to launch using it.\n. Had a similar issue, and found that manually installing the dependencies worked (pip install jsonpickle).\n. Use cases are always helpful :)\nIn my instance, I'm testing a single page web app. The entire app requires authentication however. Ideally, I'd like to test the registration and login flows along with the rest of the app, rather than hacking a test environment that is already logged in, or some other workaround. \nThe registration and login forms require an email, and the client side validation fails if the input doesn't pass an email regex (as it should). But because Huxley doesn't properly record the @ symbol, it is unable to register or login in playback, meaning I can't test the rest of the app.\nJust brainstorming other solutions:\nMaybe a good tradeoff would be some kind of middle ground - by default, huxley would record using it's current method, but allow an alternate method with the exact character input matters? The added benefit here is allowing for fixtures with the testing (i.e. repeat the login test using several edge case inputs).\nWe could implement this as an alternate option during huxley's recording run. For example, press <Enter> to take a screenshot, while pressing some other key would either:\n1. insert text from stdin, or\n2. insert text from some kind of fixtures or test data file\nI think (2) is a more robust solution. What are your thoughts?\n. ",
    "smonami": "@petehunt, I was thinking this way we will not need multiple instances of selenium servers. This will give flexibility to test in different browsers just by adding/modifying one setting! \nAlso there will be just one place to put all our configuration/parameters so it will be easy to manage test cases.\n. @petehunt this will solve the browser selection problem. And proper documentation/example can reduce the complexity of implementation details!\n. @petehunt, Another thought, can we provide both the features? One, attached to this issue and the other bigger change what you are working on?\n. ",
    "YoDK": "+1 \n. :+1: \n. Did you take a look at : https://github.com/facebook/huxley/pull/19\n. ",
    "tukkajukka": "Any progress with this one? In the 0.4 version, I cannot set Huxley to use Chrome instead of Firefox in Windows environment. \nLooks like that in the Python code it defaults to using Firefox even though there are other options listed. Passing the parameter -Dwebdriver.chrome.driver=\"path to chromedriver.exe\" to Selenium Server does not have any effect.\n. ",
    "plasticine": "Hey guys,\nNot sure if it is off-topic for this discussion, but I\u2019ve been thinking about a use-case that I think might be worth considering.\nI was wondering if it might be worth considering dividing the modes of operation a bit more, and being able to define a \u201crecord browser\u201d  (something with a GUI, say, Firefox via selenium) which is responsible for recording/re-recording user interactions and producing the record.json. It would then be possible to farm out the actual testing and screenshot production to a set of \u201ctest browsers\u201d, whether they be something headless like PhantomJS, or a whole range of browsers and mobile devices via Selenium Grid (or whatever).\nThis seems like a better division of responsibilities to me \u2014 a constant browser with a GUI that produces a record.json that can be picked up by anything that speaks web-driver and tested.\nWhat do you think? Hope that makes sense :)\n. Any ETA on a fix for this? Not being able to pip install is sad :(\n. @nikglavin Extract common UI patterns out into isolated/reproducible examples, and test those. Testing whole pages is always going to have a higher rate of false positives and it too broad of an approach IMO.\n. My $0.02;\n\nI understand the idea of testing ui components, however do you test against \"live\" (component) templates, or are you just testing against a static template that has been mocked specifically for the test ?\nThis is how I had initially began to test but found that this is not ideal as it doesn't account for changes to the templates. Rather only test against changes to the css against the idilic structure of the component. Although still helpful this doesn't take into account changes to the structure of the \"live\" template.\n\nYep, we use the exact same partials/presenters/templates as the ones in the app.\nI work at a Ruby shop, and we\u2019ve had a lot of success with tools like https://github.com/kneath/kss running within the app, and with rendering the component example using the exact Rails partial/presenter/whatever, exactly like we would in the app.\n\nFor me to test against \"live\" components I would have to create some rather large clunky objects to provide a static set of data for each test.\n\nIf you were writing unit tests you would always do this, testing the UI is no different really.\n. I should also add though that we are not actually using Huxley for this at the moment, we\u2019re using a homebaked setup that uses a bunch of the tools that are already in our testing toolchain; RSpec, Capybara, Selenium and Browserstack.\n. ",
    "fionawhim": "I'd really like to be able to specify Chrome from the command line. Can I help at all with the coding to make it happen?\n. ",
    "kalupa": "Is there any chance this will be merged in? I'd rather use a pip installation than a github one to get this feature.\nYes, you can point it at different servers. But the great part of selenium is that you can tell the grid which capabilities you want to test against. This would be an ideal use case if you want to use a SaaS selenium grid like BrowserStack, etc.\n. :thumbsup: \n. ",
    "klausbreyer": "Allready installed all dependencies manually. :( \n. kb1$ sudo pip install --upgrade huxley fixed it\n. ",
    "ericclemmons": "Yikes, and it gets worse.  Apparently pip install jsonpickle installs 0.6.1, whereas huxley needs 0.4.0:\n$ \u2b80huxley\nTraceback (most recent call last):\n  File \"/usr/local/bin/huxley\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.45-py2.7.egg/pkg_resources.py\", line 2854, in <module>\n    parse_requirements(__requires__), Environment()\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.45-py2.7.egg/pkg_resources.py\", line 594, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: jsonpickle==0.4.0\n. Geeze @petehunt!  Never thought I'd expect that from you.  You're right, that is ewwww...\n\n. ",
    "klamping": "FYI, for anyone else interested in the steps to install with the dependencies the way they are, here's how I did it:\n1. First, you need to have Opera installed before all of this. Do that here: http://www.opera.com/computer/\n2. Install jsonpickle v0.4.0 (i had to use sudo, you may not)\n$ sudo pip install jsonpickle==0.4.0\n3. Install the remaining dependencies (again, i had to use sudo, you may not)\n$ sudo pip install plac\n$ sudo pip install selenium\n$ sudo pip install pil\n4. Then you can install huxley itself:\n   $ sudo pip install huxley\n. ",
    "skilesare": "Did this ever get addressed?  I'm building something that relies on capturing shift+arrow key events.  This physically changes the order of things on the screen and I want to record those tests.  I guess I could fake it via javascript, but that seems to defeat the purpose.\n. ",
    "lazyxiong": "Thanks - I certainly missed that !:) Though, the changes I have made locally enable this functionality via env variables, this solution of putting it in a Huxleyfile should work for me too.\n. ",
    "memoryboxes": "Hey @petehunt \nvery sorry for reply so late.\n\nWhat's the motivation behind history mode?\n\nI want to browse each testcase results screenshots, so I must save them.And i create an easy tools, here:\nhttps://github.com/memoryboxes/huxleyview\nI think it's useful and interesting for review each screenshot and find the different between them.\n\nAs far as creating test cases goes, I like the general idea. Can we iterate on it in a separate PR?\nDrag and drop seems cool too, can we put this in a separate PR too?\n\nOK.\nBest wishes!\n. ",
    "gustavo-almeida": "@memoryboxes \nI'm testing your version of Huxley, but when I try to record a test using login_handle adapted for my project, when huxley starts the step of \"Begin playback\", something goes wrong: Webdriver is loading homepage without load login page before. \n. ",
    "igreulich": "So I ran huxley toggle --save-diff on the included example app.\nHuxley Toggle Fail\ndiff.png\n\nlast.png\n\nI think maybe Huxley is recording with the button's hover state active?\nRegardless, this time, for some reason, the test ran w/o errors. However, I still cannot get Huxley to --record successfully (or --save-diff). I get a similar error as before:\nHuxley Record Fail\nI tried running huxley just to see if it did record, and I get ValueError: No JSON object could be decoded. I presume that is because Huxley didn't successfully record.\n. I am on OS X 10.8.5.\nOn my test app (one I created in rails) huxley doesn't finish a huxley --record. The Huxley Record Gist shows the output.\nWhile running huxley --record I do the following;\nNote: Selenuim and my test app are already running.\n- huxley --record\n- (Selenium opens 2 Firefox windows, a blank one, and one containing my test app)\n- Click the Huxley terminal (might not be strictly necessary)\n- Press return to record initial screenshot.\n- Click the browser window with my test app.\n- Click a button one time (that changes color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Press return, to record second screenshot.\n- Click the browser window with my test app.\n- Click the aforementioned button once.\n- Click the Huxley terminal.\n- Press return, to record final screen shot.\n- Press q, then return to quit.\n- Wait for Huxley to rerun the recorded actions.\n- Watch Huxley fail.\nI can't even get to a point where I could run the playback on a remote webdriver.\n. @chenglou No, I don't change focus from the Huxley terminal. Once I press q, then return, I am hands off.\nHowever, I just tried huxley --record and it worked. Here is what I did this time;\nNote: Selenuim and my test app are already running.\n- huxley --record\n- (Selenium opens 2 Firefox windows, a blank one, and one containing my test app)\n- Click a button four times (that toggles the button color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Press q, then return to quit.\n- Wait for Huxley to rerun the recorded actions.\n- Watch Huxley succeed.\nI then ran huxley, and it succeeded.\nI then ran the following, that also succeeded;\nNote: Selenuim and my test app are already running.\n- huxley --record\n- (Selenium opens 2 Firefox windows, a blank one, and one containing my test app)\n- Click a button one times (that toggles the button color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Click the test app window.\n- Click a button one times (that toggles the button color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Click the test app window.\n- Click a button one times (that toggles the button color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Click the test app window.\n- Click a button one times (that toggles the button color, same as the example app included in Huxley)\n- Click the Huxley terminal.\n- Press q, then return to quit.\n- Wait for Huxley to rerun the recorded actions.\n- Watch Huxley succeed.\nhuxley also succeeded here as well.\nSo, it seems like taking screenshots while recording might be a bit of a problem.\nThanks for the help guys!\n. Is there a good place for general Huxley discussion?\nI ask because I can't make Huxley fail now, and there doesn't seem to be anywhere else to talk about it...\nIn my test app the button I am clicking toggles color; blue -> grey. I am recording blue -> grey -> blue -> grey -> blue. Then to try and make Huxley fail, I switch the order of the toggle to grey -> blue. As I understand it, the test the should playback grey -> blue -> grey -> blue -> grey.\nThe test passes.\nPer the tutorial, changing the button color should make Huxley, rerecord, and warn me that something has changed. Right?\n. So once I --record, after the auto verification passes, I change the ui of my test app. When I run huxley after the ui change, it still passes.\nI ran the same test with huxley --playback-only, it also passes.\nI am trying to see a ui test with Huxley fail.\n. Okay, so I reread the README on the repo. I do have a fundamental misunderstanding of how Huxley works.\nWhat I want to see is the screenshots after I change my ui, (not a failed test). But I am not able to record screenshots per the instructions AND have Huxley complete the auto verification step during huxley --record. \nI always get huxley.errors.TestError: Screenshot 0 was different.\nFull output here.\n. I understand. I am talking about the very first time I run huxley --record, when I am setting up the initial tests w/screenshots for huxley to have something to compare current ui to.\nI cannot, nor have I ever had a successful, run of huxley --record if I record screenshots, as the README instructs.\n. You were apparently correct. There was some detail getting in the way.. Maybe an initial failure in set up or recording.. I am not sure, but when I record the process, everything works fine.\nThank you for taking the time to help me through all this.\nI do feel like I understand how Huxley works much better, having gone through this.\nThanks!\n. @petehunt, If we are talking about making changes to the doc's;\nThere might be some confusion in your README's Step 3 and 4, since they happen at the same time, in the same command.\n- huxley --record - no problem here\n- huxley - Initially I expected this to tell me that something had changed only, not to also update screenshots.\n- huxley --playback-only - This is what I expected huxley to do, (per Step 3). Also calling this CI mode might be unintentionally misleading. (Thought now that I know how Huxley works, and what it is supposed to be doing, this does make some sense.)\nI come from a server side unit test world, so that might have colored my expectations, but I think this makes a bit more sense;\n- huxley --record - same as before\n- huxley runs the tests, but does not update the screenshots, but saves a diff, so it would be equivalent to the current huxley --playback-only --save-diff, but I am not sure you can save a diff if you don't update the screenshot?\n- huxley --update - updates the screenshots, so it would be equivalent to the current huxley. Maybe there is a --save-diff option for huxley --update, making it equivalent to the current huxley --save-diff.\n. I have been trying to recreate the original bug I had. So far, no luck.\nOff the top of my head I think the problem I had was that I misread the docs. I was expecting huxley to be the same as huxley --record.\nWhat dos your Huxleyfile look like?\n. ",
    "pivotal-casebook": "An example would be, suppose I want to click on an menu item in a menu bar. If the UI changes the position of that particular menu item within that menu bar, my click event(on the basis of position) will no longer click on the menu item. If this menu item is used at numerous places, I would need to rerecord the tests(including interactions) for all those pages.\nIf we do click event by element, all I would need to do to update the test suite is to update the screenshots by running the huxley command again. I would not have to worry about recording the interactions again( because they would remain the same in the record.json file since they are stored element wise)\n. Yeah. exactly. It would be nice if Huxley looked at the item that was clicked through a variable like data-huxley-id attribute.\nHowever, I'm wondering why we would need to maintain another attribute (data-huxley-id), instead of using the existing element id?  \nThanks\n. got it! That would be an excellent feature. Thanks!\n. Hey!\nWe were wondering if you have plans to implement this in the near future.\n. ",
    "DirkStevens": "As rendering engines differ accross OS/browsers/versions - how would you setup cross-browser testing?\n- Create a test in Chrome\n- Re-run test for other browsers targets?\n. ",
    "ChrisWren": "@petehunt can you merge this?\n. ",
    "facebook-github-bot": "Thank you for reaching out to us and we'd like to first apoligize for not getting back to you sooner. We're closing out older issues since updates to the project may address the issue you opened or they may no longer be relevant. If you're still experiencing the problem, please reopen the issue - thanks!\n. ",
    "aman4you": "Specifying dimensions for screenshots using selenium firefoxdriver\nfor desktop view, driver.manage().window().setSize(new Dimension(1200, 1200));\nfor tablet view, driver.manage().window().setSize(new Dimension(600, 600));\nfor mobile view, driver.manage().window().setSize(new Dimension(300, 300));\nif web page actual dimension 1614 by 1697 then screenshot dimension\nfor desktop view 1437 by 2770\nfor tablet view 701 by 3695\nfor mobile view 696 by 5082\nwidth of screenshot decreasing while height increasing but screenshot dimension not match with specified dimension\n. ",
    "lmartins": "Never mind, the reason that the screenshot wasn't full page height was related to the app itself.\n. @edmadcap If you pass a 5000px it will make a 5000px tall image, unless the page ends before that, case in which it will create an image with the height of the page. Im not sure of the implications of passing high values for pages height but ultimately that was what I ended up doing. \nThis off course only makes sense when you are testing full pages, which makes sense in my case because im testing style guide pages, not live applications.\n. ",
    "edmadcap": "Can Huxley create entire page screenshots? Or, does it take screenshots of the viewport only?\nFor example, if the viewport is 1,000px tall, but the page is 5,000px tall, will Huxley create the 5,000px tall image?\nAnd, can Huxley take screenshots of pages of various heights (without having to enter a setting for each)?\n. Ok, great. Glad to hear that Huxley can take a screenshot of the entire page (not just the portion that is visible in the viewport).\nI will probably just set the height to be a high number like lmartins is doing.\n. ",
    "mliljedahl": "You are right, I left out that I modified the huxley code to load the full page with only the width set to a fix value. Still think this commit might be useful for the community.\n. ",
    "CaliLuke": "yeah, the problem is that the JSON file containing the steps is completely empty. Screenshots are saved successfully.\n. ",
    "hugoxie": "@petehunt  Thank you! I'll try it today. I wonder that is huxley provide some option to set proxy. if it doesn't. I'll try another way. \n. @petehunt  set http_proxy is work, it didn't report urlopen error anymore, but I got another problem, it said: 'UnicodeDecodeError: 'utf8' codec can't decode byte 0xb4 in position 193: invalid start byte',\nwhat's the matter\n. @petehunt   \nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"E:\\Python27\\lib\\threading.py\", line 810, in bootstrap_inner\n    self.run()\n  File \"E:\\Python27\\lib\\threading.py\", line 763, in run\n    self.__target(_self.__args, _self.__kwargs)\n  File \"build\\bdist.win-amd64\\egg\\huxley\\threadpool.py\", line 32, in thread\n    func(_args, _kwargs)\n  File \"build\\bdist.win-amd64\\egg\\huxley\\cmdline.py\", line 69, in run_test\n    screensize=screensize\n  File \"build\\bdist.win-amd64\\egg\\huxley\\main.py\", line 83, in main\n    d = webdriver.Remote(remote, CAPABILITIES[browser])\n  File \"E:\\Python27\\lib\\site-packages\\selenium-2.35.0-py2.7.egg\\selenium\\webdriv\ner\\remote\\webdriver.py\", line 72, in __init\n    self.start_session(desired_capabilities, browser_profile)\n  File \"E:\\Python27\\lib\\site-packages\\selenium-2.35.0-py2.7.egg\\selenium\\webdriv\ner\\remote\\webdriver.py\", line 114, in start_session\n    'desiredCapabilities': desired_capabilities,\n  File \"E:\\Python27\\lib\\site-packages\\selenium-2.35.0-py2.7.egg\\selenium\\webdriv\ner\\remote\\webdriver.py\", line 163, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"E:\\Python27\\lib\\site-packages\\selenium-2.35.0-py2.7.egg\\selenium\\webdriv\ner\\remote\\remote_connection.py\", line 353, in execute\n    return self._request(url, method=command_info[0], data=data)\n  File \"E:\\Python27\\lib\\site-packages\\selenium-2.35.0-py2.7.egg\\selenium\\webdriv\ner\\remote\\remote_connection.py\", line 404, in _request\n    body = response.read().decode('utf-8').replace('\\x00', '').strip()\n  File \"E:\\Python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xb4 in position 193: invalid\n start byte\n. @petehunt I've print the response.read(), but it seems that open website error, the information show that Connection refused. \nI try set http_proxy and use urllib2.urlopen to open the same website in python cmd mode, the response is the ok.\nI feel puzzled.\n. selenium report error too.\nit said:\nCaused by: org.openqa.selenium.remote.ErrorHandler$UnknownServerException: windo\nw._getHuxleyEvents is not a function\n. hi\uff0cchenglou\uff0cthanks for your comment, when I record only one page, q+enter to finish record, on windows huxley write record.json error by decode error. the default encode is gbk on my system. where can I fixed the problem\n. OK, franks\n. ",
    "paazmaya": "Do you have Pillow 2.2.1 installed, as that is the version required in the setup.py?\nhttps://pypi.python.org/pypi/Pillow\nYou could also change the value in setup.py to 2.2.2, install that version (currently latest of 2.2 branch) and run python setup.py install...\n. Sorry, daughter caught the keyboard. :baby: \n. :+1: \n. ",
    "nathanbirrell": "Thanks, @paazmaya, yes that seems to have fixed it. I believe the issue is still a problem when installing through pip though. This solution has worked for me though. Cheers.\n. Yes, without user input. Would that be possible?\n. Sorry, I mean when recording, rather than opening the browser, having to hit enter and then enter again to rerecord, couldn't that be automated for pages which have no changing UI elements?\n. Ah, okay. Thanks @chenglou.\n. @igreulich could you please explain how you reached a solution?\n. Basically just this, but repeated for a lot of pages:\n[filename.html]\nurl=http://0.0.0.0:4567/filename.html\nsleepfactor:0.3\n. And it only happens on a specific set of our pages which is odd. Does Huxley use any JavaScript that could potentially alter the look of the page?\nIt seems to be changing the length of the window between playback and verification.\n. Okay, so we have solved the problem. It turns out it was an auto-generated lorem ipsum text from Middleman which was changing on every page load: lorem.paragraphs rand(10)+1.\nThanks anyway @igreulich.\n. ",
    "SimplGy": "Prolly should be noted in the docs--it's nice to be honest about constraints. :)\n. Below is the part I didn't know. Seems like the best setup would use one huxleyfile per component, and glob them all into one update run. Then you could record one ui component at a time, which is the common case. Thanks for referencing #30!\n\nMaybe I should make this stand out more in hux -h, but you pass the folders containing the huxleyfiles, aka without the /Huxleyfile.json part.\nBtw, you can also use globs. And multiple globs =). Huxley will dedupe the paths correctly.\n. The docs recommend dedicated urls and single component testing. It would be clearer to describe that you can (and should) have multiple huxleyfiles, in that same section, otherwise you run into issue #48 :)\n\nThe documentation section you referenced (sumarized):\n\n\nCreate a dedicated test URL for Huxley to hit that uses mocking.\nTest a small unit of functionality.\n. \n\n",
    "mvpc": "having the same problem, the error looks like this:\n``` bash\ncc -fno-strict-aliasing -fno-common -dynamic -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -mno-fused-madd -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -IlibImaging -I/Users/[...]/.virtualenvs/[...]/include -I/usr/local/include -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6 -c _imaging.c -o build/temp.macosx-10.9-intel-2.6/_imaging.o\nclang: error: unknown argument: '-mno-fused-madd' [-Wunused-command-line-argument-hard-error-in-future]\nclang: note: this will be a hard error (cannot be downgraded to a warning) in the future\nerror: command 'cc' failed with exit status 1\n```\nIt appears to be related to this: http://kaspermunck.github.io/2014/03/fixing-clang-error/. I haven't tried the fix from the article yet.\n. ",
    "saranrapjs": "The following (from that article) works:\nbash\nsudo ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future pip install huxley\nIn addition, I had to symlink the freetype library:\nbash\n ln -s /usr/local/include/freetype2 /usr/local/include/freetype\n. ",
    "kevin-miles": "ln -s /usr/local/include/freetype2 /usr/local/include/freetype\n+1 symlinking the freetype library fixed the problem for me\n. ",
    "isaacchansky": "Just symlinking worked for me as well. :+1: thanks @saranrapjs \n. ",
    "gunesmes": "ln -s /usr/local/include/freetype2 /usr/local/include/freetype \nthen\nsudo ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future pip install huxley\nfixed my issue.\n. ",
    "nikglavin": "I understand the idea of testing ui components, however do you test against \"live\" (component) templates, or are you just testing against a static template that has been mocked specifically for the test ? \nThis is how I had initially began to test but found that this is not ideal as it doesn't account for changes to the templates. Rather only test against changes to the css against the idilic structure of the component. Although still helpful this doesn't take into account changes to the structure of the \"live\" template.\nFor me to test against \"live\" components I would have to create some rather large clunky objects to provide a static set of data for each test. \nI am interested to know how yourself or others get around or approach this problem ?\n. ",
    "eantz": "Hi\nI'm on Windows and recently fresh install huxley\nI have the same error\nI have firefox installed although it's not my default browser.\nAny ideas?\nEdit\nI did simple workaround to get this error away by comment some codes in C:\\Python27\\Lib\\site-packages\\huxley\\main.py (line 82,83,84)\npython\n        #if remote:\n        #    d = webdriver.Remote(remote, CAPABILITIES[browser])\n        #else:\n        d = DRIVERS[browser]()\nIt seems that huxley force to open remote webdriver, even if remote option is set to None or False\nNext\nI run huxley --record again, error is gone, browser come up, show blank page, and hanging for a while then close by it will with this error message in huxley console : \n```\nhuxley --record\n\nRunning Huxley file: Huxleyfile\n[toggle] Running test: toggle\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"C:\\Python27\\lib\\threading.py\", line 763, in run\n    self.__target(self.args, self.__kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\threadpool.py\", line 32, in thread\n    func(*args, kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\cmdline.py\", line 69, in run_test\n    screensize=screensize\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\main.py\", line 85, in main\n    d = DRIVERSbrowser\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py\",\nline 60, in __init\n    self.binary, timeout),\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\firefox\\extension_conne\nction.py\", line 47, in init\n    self.binary.launch_browser(self.profile)\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\firefox\\firefox_binary.\npy\", line 61, in launch_browser\n    self._wait_until_connectable()\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\firefox\\firefox_binary.\npy\", line 105, in _wait_until_connectable\n    self.profile.path, self._get_firefox_output()))\nWebDriverException: Message: \"Can't load the profile. Profile Dir: c:\\users\\fo\nrmul~1\\appdata\\local\\temp\\tmpmciuy7 Firefox output: 1405577940382\\taddons.xp\ni\\tDEBUG\\tstartup\\r\\n1405577940383\\taddons.xpi\\tDEBUG\\tSkipping unavailable inst\nall location app-system-local\\r\\n1405577940384\\taddons.xpi\\tDEBUG\\tSkipping unav\nailable install location app-system-share\\r\\n1405577940387\\taddons.xpi\\tDEBUG\\tc\nheckForChanges\\r\\n1405577940410\\taddons.xpi\\tDEBUG\\tNo changes found\\r\\n** Bloc\nklist::_loadBlocklistFromFile: blocklist is disabled\\r\\nJavaScript error: chrome\n://browser/content/urlbarBindings.xml, line 651: aUrl is undefined\\r\\nJavaScript\n error: chrome://browser/content/urlbarBindings.xml, line 651: aUrl is undefined\n\\r\\n\"\n```\nFor now, I can't solve this error myself.\nAny suggestion will be very appreciated.\n. # Update\nI don't know if it is a firefox problem, but it runs in chrome.\nBut, I made minor changes to these file to make it work in addition to my previous change above.\nmain.py \n``` python\nline 67\nbrowser='chrome',\n....\nline102-105\n        #if local:\n        #    local_d = webdriver.Remote(local, CAPABILITIES[browser])\n        #else:\n        local_d = d\n\n```\nI change the option here because it doesn't work when I change in the Huxleyfile\nThen I copied chromedriver.exe to C:\\Python27\\Lib\\site-packages\\selenium\\webdriver\\chrome\\ and made a small change to this \nC:\\Python27\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\n``` python\nline 32\ndef init(self, executable_path=\"C:\\Python27\\Lib\\site-packages\\selenium\\webdriver\\chrome\\chromedriver\", port=0,\n```\nI hardcoded the executable_path here\nNote : I'm not familiar with python, so this is my best effort so far :grin:\nNow, I can record and playback test using chrome.\nBut although the test recorded successfully, it always throw this error after that\nTest recorded successfully\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"C:\\Python27\\lib\\threading.py\", line 763, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\threadpool.py\", line 32, in thread\n    func(*args, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\cmdline.py\", line 69, in run_test\n    screensize=screensize\n  File \"C:\\Python27\\lib\\site-packages\\huxley\\main.py\", line 137, in main\n    return 0\n  File \"C:\\Python27\\lib\\contextlib.py\", line 154, in __exit__\n    self.thing.close()\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", l\nine 445, in close\n    self.execute(Command.CLOSE)\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", l\nine 165, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Python27\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\"\n, line 164, in check_response\n    raise exception_class(message, screen, stacktrace)\nWebDriverException: Message: u'no such session\\n  (Driver info: chromedriver=2.9\n.248315,platform=Windows NT 6.1 SP1 x86_64)'\nThen when I run the playback, it always say that Test failed, rerecording... after taking the first screenshot.\nOkay, now I will use it to my real project.\nBut, still hoping that someone clean this up..\nCheers...\n. ",
    "barrymcgee": "I have this same problem on OSX 10.9.4 with Firefox 30 - any ideas?\n. ",
    "charstarstars": "Do you have firefox installed and the firefox binary in your PATH?\n. Try:\nls -al /usr/local/bin | grep huxley\nIf huxley is there, see if /usr/local/bin is in your PATH\necho $PATH\n. ",
    "jhulme": "Issue was resolved by updating Selenium to latest version and then subsequently altering huxley - requires.txt file as per issue #42.\nThis item can be closed off.\n. ",
    "lbain": "thanks!\n. ",
    "Saranyanataraj": "Hi juhi,\nWere u able to solve this issue ? if yes pls let me know.\n. ",
    "Swapan1230": "I have same problem. If you know how to solve this issue, please post it.\n. ",
    "softvar": "This issue has a fix already: https://github.com/facebook/huxley/issues/53\n. ",
    "alitheg": "The crash seems to be fixed by changing this:\nscreenshot_step = ScreenshotTestStep(d.execute_script('return Date.now();') - start_time, run, len(steps))\nto this:\nscreenshot_step = ScreenshotTestStep(d.execute_script('return Date.now().getTime();') - start_time, run, len(steps))\n. Update: the record.json file for these characters which should be modifying the text shows typing the key \"\\u0010\"\n. ",
    "sri85": "Looks like the server which is running huxley is down\n. ",
    "jeromsky11": "Sorry, does someone know where is the documentation of the project?\n. ",
    "vasco3": "Here is the documentation\n\n. ",
    "dimitrieh": "would love to know as well!\ncc: @petehunt . http://www.seleniumhq.org/ => https://saucelabs.com/. ",
    "mmahalwy": "+1. ",
    "a-x-": "\nhttps://github.com/gemini-testing/gemini\nhttps://github.com/gemini-testing/gemini/issues/845\n\n\nhttps://github.com/garris/BackstopJS. \n"
}