{
    "desandro": "Well desandro/classie should still work, but this is good anyway.\n. Classie has no dependencies, so you can just requirejs the file path\njs\nrequirejs( [ 'path/to/classie' ], function( classie ) {\n  classie.add( elem, 'foo' );\n});\n. Nice catch :baseball: !\n. Thanks for the contribution!  UMD advocates that the condition for CommonJS should be  just typeof exports === 'object'. I'd prefer to stick to that. If you update to this, I'll pull it in.\n. Thanks! pulling in :partly_sunny: \n. Thanks! Merged!\nThe NPM-registered classie is a CommonJS port of this library :smirk:  https://github.com/yawetse/classie \n. From reading your code, it looks like #component is not being selected. Is it on the page?\nThis does not sound like a problem with classie specifically. If you have a reduced test case, like in CodePen, I'd be happy to take a look.\n. Whoa! Thanks for the huge contribution. I'll comment inline.\n. After looking it over, this looks to be a substantial change. I appreciate you adding tests (automated tests at that!). I'd prefer to keep this library as lightweight as possible. It looks like some stuff was just thrown in, like the Plato grunt task.\nAs is, I don't feel it's in a place to be merged. Too many changes that don't fit in with previous structure and philosophy. I'm sorry to say no to all this marvelous work.\n. Thank you for this contribution :gift: My style would be to keep this switching functionality separate, but I can see how its useful. I'll keep this PR open for a bit so others can take a look\n. Hi! Thanks for the suggestion. I feel this is out of scope for classie. I'd rather you use your own forEach handler, or loops, or whatever you like. Let's keep classie small :)\n. Closing here. See discussion in #14 \n. Thanks for this contribution. classie.js is a small library to begin with. I don't feel that saving 1 kb is worth adding another file to the repo. I appreciate your effort here, but I'll have to pass.\n. I recommend using classie as a component library. Adding it to CDN's gives the impression that you should added with its own <script>. I'd prefer if you use it with your own build tools to produce compiled files.\n. Thanks!\n. For future Pull Requests, I'd appreciate if you can merge your changes into one Pull Request. Thanks again :)\n. Thanks!\n. Classie works with single elements. https://github.com/desandro/classie/issues/12#issuecomment-86116959\n\nI'd rather you use your own forEach handler, or loops, or whatever you like. Let's keep classie small :)\n. This is outside my area of expertise, so I'm sorry I won't be able to help here.\n. Thanks for reporting this issue. To help understand the problem: What tools are you using with classie?\n. @tunnckoCore Not a bad idea. But as I'm dropping support for IE8 and 9 in 2016, I'm going to leave it as is. Classie will be not be maintained for much longer.\n. Thanks for this contribution. Yeah! This is a nice feature. I see how you could find it useful.\n\nBut, as I'm dropping IE8 & IE9 support this year, I'd like to keep classie as is. Personally, I'd use different kind of logic\njs\nclassie[ state ? 'add' : 'remove' ]( elem, 'classname' )\nIt may be less DRY, but I find it easier to grok.\nAll the same, thanks so much for this contribution. I'll keep the PR open so others can take a look.\n. Here's DOJO module loading documentation. You should be able to load `classie like\njs\nrequire([\n  'path/to/classie'\n], function( classie ) {\n  classie.add( elem, \"class-name\" )\n})\n. Have you tried using window.classie ?\n. Sorry but I won't be able to debug this issue.\n. Thanks for this contribution. Yeah! This is a nice feature. I see how you could find it useful.\nBut, as I'm dropping IE8 & IE9 support this year, I'd like to keep classie as is. I'll keep this PR open in case others are interested.\n. Thank you for this contribution! classie is no longer supported, so it's not open to new PRs. I appreciate your code, but I'm sorry to close this PR.\n. Thanks but no thanks. Polyfills have a different use case. Classie is not under further development, but it still does its purpose just fine \u2014\u00a0being a class helper.\n. Hello! classie is deprecated and no longer supported. Sorry, I won't be able to provide a solution here.. classie is deprecated\n\nUse classie only if you need to support older browsers that do not support classList. classList is supported in IE10+, Android 3+, iOS Safari 5.1+, and modern evergreen browsers. Can I use classList?. Do all these properties need to be declared? I'd like for this to be just what's necessary.\n. I'm a 2 spaces kind of guy. This is the current style.\n. classie supports IE8. Does this throw an error?\n. .forEach is not supported in IE8 :confused: \n. Moving the core file to different folder could break backwards compatibility.\n. \n",
    "emgiezet": "gr8 thx!\n. ",
    "dvorapa": "Nothing large, but small typo, I make sometimes too :beer: \n. ",
    "bpeacock": "Yeah I usually go for the form that's guaranteed not to throw an error if someone overwrote exports in a weird way, but I appreciate sticking to the spec.\n. ",
    "wbinnssmith": "... though it looks like classie is already taken on npm. Could choose a different name for npm though.\n. ",
    "ecasilla": "I just thought it would be nice for you to see where the library stand from a code quality point of view.. its why i put that task in but it can be removed no problem i can also switch the forEach to vanilla for loop i wasn\u2019t aware it supported ie8 i can also trim the jshintrc too i will fix these requests\u2026.\nI know that classie is just a nicer wrapper for the dom api but having to repeat the same thing over and over is just a horrible user experience and pollutes the users code base.. i\nOn Aug 13, 2014, at 6:36 PM, David DeSandro notifications@github.com wrote:\n\nAfter looking it over, this looks to be a substantial change. I appreciate you adding tests (automated tests at that!). I'd prefer to keep this library as lightweight as possible. It looks like some stuff was just thrown in, like the Plato grunt task.\nAs is, I don't feel it's in a place to be merged. Too many changes that don't fit in with previous structure and philosophy. I'm sorry to say no to all this marvelous work.\n\u2014\nReply to this email directly or view it on GitHub.\n. I haven't checked but i used the native Object.prototype.toString method which should be available everywhere but i could be mistaken\n. \n",
    "klamping": "Just my two cents:\n1. I think it's worth adding this functionality in, since it's can be a fairly common use case and is very little overhead to add\n2. I'd rename it to be \"replaceClass\". For some reason that sounds better to me than \"switchClass\"\n. ",
    "merqurio": "+1 :+1: :smile: \n. ",
    "kevinjamesus86": "@tommiehansen you could do something like this. I avoided extending classie itself by returning a new object with the classie methods each-ified.\n``` js\nvar classier = (function(classier) {\nfor (var method in classie) {\n    classier[method] = wrapForEach(method);\n  }\nreturn classier;\n/////\n  /////\nfunction wrapForEach(method) {\n    var fn = classie[method],\n      has = 'has' == method.substr(0,3);\n    return function(elem, c) {\n      var classes = c.match(/\\S+/g),\n        length = classes.length,\n        result = !!length;\n      while (length--) {\n        result = fn(elem, classes[length]);\n        if (has && false === result) {\n          break;\n        }\n      }\n      return has ? result : void 0;\n    };\n  }\n})({});\n```\nwhich leaves you with\njs\n// long hand methods are each-ified as well\n// has* methods will return true if the element has all the classes specified\nclassier.has(el, 'class-one class-two');\nclassier.add(el, 'class-one class-two');\nclassier.remove(el, 'class-one class-two');\nclassier.toggle(el, 'class-one class-two');\n. ",
    "hubdotcom": "I see, I was preparing it for inclusion in http://www.jsdelivr.com (new libraries are required to upload just the .min.js for production use)\n. Fair enough, will keep it off the CDN :+1: \n. No problem, I wasn't sure if you wanted to rename the script so I separated the requests\n. ",
    "ryanbrownhill": ":ok_hand: \n. ",
    "maurcarvalho": "@desandro I faced the same problem trying to use with RequireJS.\nI think based on how this MEAN dependencies has been declared it should be something who works with AMD as RequireJS. classie lib should support it?\n. ",
    "adriancaragea": "@desandro I have the same issue with \"classie is not defined\" when I am using dojo which has AMD. I see that you define classie by doing define( classie ), but how can I retrieve the object and use it further in my code?\nI have also posted a question regarding this on stack-overflow if you want more details:\nhttp://stackoverflow.com/questions/33002527/classie-undefined-how-to-bring-anonymous-objects-in-scope-with-dojo-amd\n. Thank you @desandro  for taking the time to answer my question, but I am including the class in the file where I am using \"classie.add( elem, \"class-name\" )\" so classie is not in a different file than where I am using. I am doing this because I am using it as a inserted js code on other web apps for tracking. Do you know what I am supposed to put into 'path/to/classie' when the classie code and the code that is using classie are in the same page, in the same file? I have did not find this in any of the documentation provided by dojo or other libraries that are using AMD.\n. Yes I have, it is still not working, did it work for you?\n. I have declared define with null in my scope so that it will not use AMD even if it is available. If it supports AMD, it would be a good idea to also provide example on how to use it even if it means using it in a different file and load it with require because the class definition behaves different when AMD is available.\n. ",
    "tunnckoCore": "@desandro we dont need window or document we have element coming in each method so we can just do elem.classList\ni think we can just do\n``` js\nfunction classRe (name) {\n  retirn new RegExp('(^|\\b)' + name.split(' ').join('|') + '(\\b|$)', 'gi')\n}\nfunction hasClass (el, name) {\n  return el.classList\n    ? el.classList.contains(name)\n    : classRe(name).test(el.className)\n}\nfunction addClass (el, name) {\n  if (el.classList) {\n    el.classList.add(name)\n    return el\n  }\n  el.className += ' ' + name\n  return el\n}\nfunction removeClass (el, name) {\n  if (el.classList) {\n    el.classList.remove(name)\n    return el\n  }\n  el.className = el.className.replace(classRe(name), ' ')\n  return el\n}\n(function(f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f()\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f)\n  } else {\n    var g;\n    if (typeof window !== \"undefined\") {\n      g = window\n    } else if (typeof global !== \"undefined\") {\n      g = global\n    } else if (typeof self !== \"undefined\") {\n      g = self\n    } else {\n      g = this\n    }\n    g.classie = f()\n  }\n})(function () {\n  return {\n    has: hasClass,\n    hasClass: hasClass,\n    add: addClass,\n    addClass: addClass,\n    remove: removeClass,\n    removeClass: removeClass,\n    toggle: toggleClass\n    toggleClass: toggleClass,\n  }\n})\n```\nor even without the UMD..\n just use uglify-js@^2.4 and browserify@^11 and few scripts jobs\njson\n\"scripts\": {\n    \"build\": \"npm run bundle && npm run bundle-uglify && npm run standalone && npm run standalone-uglify\",\n    \"bundle\": \"browserify -do dist/classie.js index.js\",\n    \"bundle-uglify\": \"uglifyjs -m -c -o dist/classie.min.js dist/classie.js\",\n    \"standalone\": \"browserify -s Dush -do dist/classie.standalone.js index.js\",\n    \"standalone-uglify\": \"uglifyjs -m -c -o dist/classie.standalone.min.js dist/classie.standalone.js\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^11.0.1\",\n    \"uglify-js\": \"^2.4.24\"\n  },\nor even just add notice to users to go to https://www.brcdn.org/ and build it (get the links) with their hands.\n. ",
    "karimkawambwa": "@desandro i am using classie in nodewebkit for a side menu toggle. Will be using using it for other stuff aswell . \n. ",
    "netsgnut": "Aha! Never thought of this pattern myself. Nice catch ;)\n. ",
    "ardieshghi": "You are welcome. I believe one of the main reasons people use this library is for the fallback on addClass, removeClass and we are actually using it on a project which needs IE8 and IE9 support. Personally I am against progressive enhancement, but I believe there are a lot of projects where people are keen  to support old Browsers. Thanks a lot for your positive feedback again\n. ",
    "sunnykgupta": "I'd like to see this feature in classie! \ud83d\udc4d \n. "
}