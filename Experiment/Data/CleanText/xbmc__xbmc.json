{
    "ghost": "congrats - the first xbmc repo pull processed :)\n. friendly tip. you want to use git pull --rebase when you fetch upstream.\n. even if osx requires them for something else, this is correct. we need to have these under control. so test on osx, if it requires them for some other reason, put it under osx only...\n. please rebase your branch\n. Any particular reason? Can't see any drawbacks to doing this.\n. DISPLAY is only ever unset if a) X server isn't running, or b) user has ssh'ed into a remote machine and attempted to start XBMC without setting DISPLAY first\nCurrently in these cases, XBMC segfaults with a fairly unintelligible (to the average user) python backtrace\n$ xbmc\n/usr/lib/pymodules/python2.6/gtk-2.0/gtk/__init__.py:57: GtkWarning: could not open display\n  warnings.warn(str(e), _gtk.Warning)\nError: unable to open display \n/usr/share/xbmc/FEH.py:69: Warning: invalid (NULL) pointer instance\n  window = gtk.Window(gtk.WINDOW_TOPLEVEL)\n/usr/share/xbmc/FEH.py:69: Warning: g_signal_connect_data: assertion `G_TYPE_CHECK_INSTANCE (instance)' failed\n  window = gtk.Window(gtk.WINDOW_TOPLEVEL)\n/usr/share/xbmc/FEH.py:83: GtkWarning: IA__gtk_settings_get_for_screen: assertion `GDK_IS_SCREEN (screen)' failed\n  button = gtk.Button(\"Quit\")\n/usr/share/xbmc/FEH.py:83: Warning: g_object_get: assertion `G_IS_OBJECT (object)' failed\n  button = gtk.Button(\"Quit\")\n/usr/share/xbmc/FEH.py:88: GtkWarning: Screen for GtkWindow not set; you must always set\na screen for a GtkWindow before using the window\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: GtkWarning: IA__gdk_pango_context_get_for_screen: assertion `GDK_IS_SCREEN (screen)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_context_set_font_description: assertion `context != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_context_set_base_dir: assertion `context != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_context_set_language: assertion `context != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_new: assertion `context != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_set_text: assertion `layout != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_set_alignment: assertion `layout != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_set_ellipsize: assertion `PANGO_IS_LAYOUT (layout)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_set_single_paragraph_mode: assertion `PANGO_IS_LAYOUT (layout)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_set_width: assertion `layout != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: PangoWarning: pango_layout_get_extents: assertion `layout != NULL' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: GtkWarning: IA__gdk_screen_get_default_colormap: assertion `GDK_IS_SCREEN (screen)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: GtkWarning: IA__gdk_colormap_get_visual: assertion `GDK_IS_COLORMAP (colormap)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: GtkWarning: IA__gdk_screen_get_root_window: assertion `GDK_IS_SCREEN (screen)' failed\n  window.show_all ()\n/usr/share/xbmc/FEH.py:88: GtkWarning: IA__gdk_window_new: assertion `GDK_IS_WINDOW (parent)' failed\n  window.show_all ()\nSegmentation fault\nIf you prefer, we could just immediately return the error message \"xbmc: no DISPLAY variable set\" from xbmc.sh (and not try to set it to :0), hence avoiding the backtrace. That would at least make it easier for the user to find their mistake.\nHowever, it likely fixes the issue in 50% of the cases if we do also set it to :0 and attempt to continue, and it doesn't do any harm?\n. nelson11@zoidberg:~$ unset DISPLAY\nnelson11@zoidberg:~$ /usr/local/lib/xbmc/xbmc.bin \nCan't open display \nERROR: Unable to create application. Exiting\nnelson11@zoidberg:~$\nThe binary is fine, it's FEH.py that needs fixing. Who wrote that thing again?\n. okay to close this i assume?\n. Can this not already be done using smart playlists or a slight extension thereof?  I don't really see this being widely used enough for core integration.  Perhaps as a script (smart playlist generator) or plugin would be a better fit?  Another option might be to take a look at the PVR branch and use its plugin interface where a \"channel\" has more relevance.\n. i'm not very enthusiastic about that PlatformImplementation file. that will eventually end up as an utter spaghetti of different features. i'd really like to see a platform/log.h/cpp \n. Right. As my fourth comment in the description stated, not a final solution, not a dumping ground, just a stop gap until we can figure out where things should go.  As such I'm tempted to keep the files around only until platform abstraction is complete.  I have ZERO intention of leaving them in the tree indefinitely.\nI think jmarshall's idea about implementing some (stdio|stat|dirent)_utf8.h/c per platform would probably be the better solution for this specific case.  We'd likely use them for (File|Directory)HD.h/cpp as well, since nearly all of the ifdefery in there is for UTF8.  Obviously we'll use the VFS where ever possible.\n. As we discussed on IRC, there is no log closing logic in our current implementation and adding one is non-trivial due to our insistence on doing important things in dtors of global objects.  As such, adding one is outside the scope of this patchset. OpenLogFile just returns a FILE* anyway, so fclose() is your guy.\nOpenLogFile will likely go away once the damn snow stops falling and I can use my free time for things other than shoveling. I'll implement the *_utf8 functions and use that to replace the current stuff.\n. yes, works with everything i've tried including several plugins etc.\n. didn't add it for the heck of it, sadly needed.\nthis still need osx and windows attention. we can surely remove lib/win32/libmms_win32 and possibly lib/win32/glib\n. this really shouldn't break anything.\n. ping elupus, is that an objection?\n. I guess we just have to ignore elupus' bad habit of adding doubt at the end of his comments ;) look at the pull req page while logged into github. Follow the instructions.\n. i know i'm a PITA but this is two logical blocks. refactoring the GetMoreItem and showing it in the dialog ;)\n. my work, i get to defend it ;P\nmenus menus menus. and boundaries.\n. removing the functionality is not an option, it was an actively requested piece of functionality. but really, non-stackasfile can be handled by generating a playlist. that's good enough.\n. GUIDialogMusicScan and GUIDialogVideoScan (more unification to be done...)\n. I agree with keeping as much history as possible.  The think I thing we should really try to get from this is, how to avoid re-occurrence in the future? \n. pydocs on read() has a typo and is wrong,\nalso this is not quite what i had in mind, in particular it does not implement the stdio interface.\nfread(dest,size,nmemb,file) and so on. once this get to be used in all sorts of add-ons through swig, it will often be used for fileio callbacks. then we need this form. i'm not suggesting replacing, but rather have functions with the stdio calling conventions as well.\n. Wasn't singleexit a hack in the first place?  If so, do we really want to propagate it's use?  It seems to me that anywhere we need such a thing is just a good example of why recursive mutexes are bad.\n. do it.\n. hw decoders / dvdplayer usage; this is not designed for it. unifying pap and dvdp codecs is a separate task. potentially quite a lot of work since pap has no demux layer.\ntopfs2; a lot of these codecs consume the whole file on input. as such, an interface like that is not very fit.\ni misused lStartOffset currentl since it solves the problem of all tracks being selected (since they point to the same file) when you play a specific track in a multitrack file. definitely have to be changed.\nthe void* was for handling float/integer data. i assume AE patches the BitsPerSample thingie in PAP to something more general. once we get AE in, this can easily be changed to provide whatever info we need. i don't think it's necessary to express the buffer in samples, the codec is told you have yeyh dataspace, use it as you see fit. the add-on should always be the one reporting its format to the player, not the other way around. e.g. configurable mix rates etc (using add-on settings), thus there won't ever be any ambiguity as to what format is expected. we should probably supply a hint on init though that the codec can use or ignore as it sees fit.\nas for VFS, the idea is that we'll export a VFS interface from the xbmc library that these add-ons import (lazy linking), then use. while handing in io callbacks directly is tempting, it won't be enough for all cases (not everything has io hooks).\nwe probably should add a cache list for the audio codecs to avoid that db hit,it's quite noticable (i never meant for this to be included as is, i wanted comments)\n. because you don't get the eof on the socket on a suspended computer. i'm 95% certain that's why we use inotify, but i can't dig back in the log as i don't have the old history fetched here.\n. we'll handle it if it pops up i guess.\n. I know this is closed, but I only just now got the mail...\nIt'd be even cleaner yet if you allowed the user to define the TARBALL_LOCATION in some config file (not in tree) which you \"-include\" (doesn't fail if the file is missing) at the top of each makefile, then use ?= (set only if unset) to set default values.  This would also allow the user to store the tarballs outside the tree so they don't have to redl them after git clean -xdf.\nWhy the switch from append to .gitignore to overwrite? The target should only be executed once, so it shouldn't be needlessly growing.\n. looks good to me, can't find anything wrong.\n. if you git am the provided patch you'd keep the author. for future reference..\n. wait for osx approval. plus fneufneu raised a concern for freebsd which also needs to be adressed.\n. same comment as last time - we should mimic stdio. however, we can change that later so no objections on this going in for now.\n. Instead of adding yet another extension mess to core, could we just make the stub file xml and define the type there?  Then all we ever have to look for is .xstub or w/e and handle things accordingly.  This would give the benefit of extending the feature with per stub-type options or whatnot later.\n. linux buildsystem changes can be found in git@github:cptspiff/xbmc.git Slingbox\n. hi elupus, tiben20 has also been experimenting with file caches\n(for my benefit, because i made an addon that streams .avi, which was having buffering issues on slower connections)\nhttp://forum.xbmc.org/showthread.php?t=98782 http://trac.xbmc.org/ticket/11416 (download links are in the trac ticket)\ni've thought of 2 more things that could trigger it:\nA) check whether stream supports skipping, if it doesn't, force file cache.\n(prevents a bug on streams that don't support skipping where pausing for too long kills the stream)\nB) allow addon coders to set in xbmc.player.play a cache file path (which also forces file cache)\n(this lets us provide a cool Stream + Download option in addons) ---- tiben's patch does this\n*PS for the streams that don't support skipping, another nice thing might be to support skipping within the already cached video, but refusing to try to skip beyond the cache limit because we know we won't be able to.\ni hope my suggestions help!\n. ah ok, AFAIK tiben's patch completely switches to use the curl download code used elsewhere in xbmc (like for downloading images) to guarantee a complete download. (if the stream is file cached from the very start, and the stream is not skipped around in)\ni'll ask him to post on this discussion so he can coordinate.\napologies if i have hijacked this pull request with scope creep, maybe i should ask tiben to make a new pull request\n. i still see the point in it... pausing something to load (because it is a slow connection) and then finding it has not is very frustrating.\n. fixed using m_update in 0c664786e07a71df5dfc7dd2f1887177ed14ceb1\n. As far as the patches go, they look good.  It looks like the limit type (or lack of bounds check) problem I'd mention on IRC was already handled.  I still don't really understand why we need multiple jobs though?  Should the totals job run with any other the DB access will effectively serialize their tasks.  It seems like excessive thread creation with little to no gain and I'm guessing the blocking could be costly when using a remote DB.  Couldn't we just pass the flags into the job ctor and use that to pick which stuff to query the DB for in the work function?\nI do disagree with the inclusion of this patch on the principle that this feature is exactly of the type we are trying to move OUT of core.  I can't help but figure it will just be moved right back out to an addon at some point in the (hopefully near) future.  Is extending the addon interface to support the bits this adds really not an option?\n. ofc it can be done as an add-on. but what do we gain? core would still have to issue the refresh. and i can't think of a single other usecase for such a class of add-ons.\nas for starting threads, they are much cheaper than spawning a python interpreter will ever be.\n. @spiff\nGains would be the ability to choose different RA implementations which provide varying degrees of info.  I for one don't desire anything more than title, path, date and thumb, where I'm sure there are others who want the whole mediainfo window.  Additionally, I can see there being a fair number of settings associated with this.  As an addon, we don't have to worry about yet more clutter in core settings.\n@amet:\nI understand what they're used for, just not why they're needed.  It seems the job selection logic could be moved into a single RA::DoWork() and the relevant bits of the individual jobs DoWork() selected there.\n. Looks better, yeah. I think the check for raflag != 0 oughta be moved into CGUIWindowHome::AddRecentlyAddedJobs(), though.  As it stands, its not tested in CGUIWindowHome::OnInitWindow().\nWith that fixed I suppose I'm fine with this going in.  If it ends up bothering me enough, I'll find time to readdonify it such that it keeps everyone happy.\n. Looks good now.\n. fine by me\n. \\o/\n. i'm one of the guys that have to maintain scripts (or plugins). i strongly oppose having this getcwd override in for backwards compat. i want scripts to break.\n. yes it does. proper add-ons do addon.getAddonInfo('path'). something i have enforced for months now.\n. a plugin is gui-less by definition. it's what makes a script differ. the latter have gui's.\n. Please keep your title short and to the point its field is short, use the comment field for discussion.  Please edit your initial post, it was cut off.  I made my best guess at what you were getting at.\n. It's probably safe to dump fixes like this in w/o a PR ;)\n. had a chat with martin storsj\u00f6 (upstream hls dev). he'll add the necessary bits so we can get at the bitrate and use that for stream selection.\n@ elupus; where best to put the too-much-underrun, drop to a lower bitrate logic?\n. added in 8f043b4a1f06a6c2d27373d4bcb4194cdaeff40f\n. yup. deb/rpm/whatever backend your packagekit uses.\n. @ jmarshall; please have a look. i know linux isn't your thing but this touches a lot of your code.\n. iow we have to relicense the texturepacker to use pvrtex.\n. pushed rebased\n. Right, you'd have maps for each value you need to do lookups by.  But like you said, unless we start abusing the keyboard interface in some way, a linear lookup should be plenty.\n. I knew that fancy new button github added was too good to be true. :)\n. I'd rather see the damn button removed (or at least a confirmation dialog added) than your push rights.  Any of us could and likely would have hit it at any point.\n. Yeah, that probably is the more proper hack.  What are the repercussions for assuming the PlayItem call succeeds in either case?\nAnd here I was worried I'd been out of the code too long seeing as it took 2hrs to track that down... Definitely a prime candidate for refactor here.\n. So is returning true in any case the Right Thing(tm) here?  ie will we catch playback errors and notify the user somewhere up the call stack?\n. cheers\n. to answer your question instead of the one elupus answered;\nif you have no need for the branch, you can just delete it. remember, only the things you push is \"global\", everything else is just local to your local clone.\nalso i usually just pull directly into master personally.\nthe question elupus answered was: can i delete the branch on my github repository after i have pushed?\n. i think the advancedsetting should be in there, but that we need 3 levels;\n1) keep nothing\n2) keep controls&xml\n3) keep the lot (including textures)\nalso pieh, you don't have to open a new pull request. just change the branch you asked to pull, and the changes will be reflected in this pull request.\n. this seems to be a fruit salad of a pull request. the wireless stuff for sure doesn't belong here (not saying it's not welcome)\n. cheers. i just pushed the location fix. if you could split out the network stuff that would be great\n. and i am still able to trigger the deadlock\n. success\n. location slider stuff was pushed as i said and in any case shouldn't be here :)\n. no matter how you juggle it, one will have to call the other. i don't really think it's all that cruft-attracting - it's stuff we have to do and it's neatly wrapped.\nthat being said, there's no reason we can't do that in principle\n. happy now?\n. great, thx\n. If it's only ever going to be supported for video, I'd suggest naming the property to imply as such.  This could make sense for something like audiobooks or full concert recordings I guess?  Though I see no need for normal songs.\n. looks fine otherwise\n. I dunno that I agree with this.  Where is the benefit?\nIt seems to me that the lack of strict uniformity in the jump to logic will likely cause confusion ala \"why the hell can't I press 'p' to get to the P's?\".  Though the same situation can arise if the user maps shift-* to an action, they will have brought it upon themselves.  It just sounds like we're gonna end up with a bunch of dumb bug reports if this goes in.\n. If the intent here is to move all of the basic controls to modified versions, go ahead and pull the trigger. I just don't really wanna see ambiguity where any unused key, regardless of modifier is used for list nav.  Ofc, this is fine as a temporary measure so long as the keymap is updated by the next stable release.\n. I agree, to me this file is not a solution, but rather a complete hack. And there is nothing wrong with command line parameters, the only reason they are \"old\" tech is that they have proven their worth for 40 years. And why would we need to customize per profile? Aren't these arch flags?\n. Not to seem picky and all, but maybe squash your commits into one for easier merge, and a prettier log? :)\n. haaah, 50k ;)\nthat being said it's fine if it helps somewhere... oh and you may as well ditch libwv and punt to ffmpeg. it handles more files (there's no libwv that can do old and new)\n. seems fine to me. only slight nag is i prefer \"if (foo) bar; else foobar;\", not \"if (!foo) foobar; else bar;\" ;)\n. Please only open pulreqs for commits you want commented on before merging with master.  We can nag you with commit comments if need be.\n. most welcome.\n. cheers\n. I dunno that I understand the use case here.  Please explain it in detail.\nI'm apt to agree with topfs2 otherwise.\n. OK, in that case I agree with topfs2.  You should submit bug reports (if none exists already) for the issues you're trying to use this to cover up.\n. In light of this new info from chadoe, I suggest we table this and consider refactoring profiles such that there are \"users\" and \"profiles\".  It's not all together a bad idea but I don't really agree with adding a hack when this can probably be implemented cleanly.  Thoughts?\n. all commits use tabs. unfortunately that's a no go, indent is 2 spaces using spaces.\nalso you have to rebase it due to http://trac.xbmc.org/changeset/652f59e9e5097006009168a88e5f7517d276317b\n. there were issues with doing it like proposed. i fixed it up and pushed in 9389dc8389c9f099af55d5eed25d11f2f75fd369\nthanks!\n. Surely the debug log is plenty?  If we had the ability to change key mappings in app it'd be one thing, but I see no reason to display this in GUI.\n. why?\n. then i suggest we leave it around until it is of use.\n. thx for working with me\n. rebased, pull ?\n. resuming stacks works fine here without this patch. how to trigger the problem?\n. aha. right, see https://github.com/xbmc/xbmc/pull/28 until we come to a conclusion there...\n. Note, I haven't yet gone through and filtered out the parts where there is now a redundant redefine of a back key in a context specific situation which is now set in global.\n. Of the things that specify a use of PreviousMenu in their context, these break due to not using context appropriate ParentDir actions,\n- SlideShow,\n- Any Menu Player Controls when nothing is playing. (This might be a bug, since it doesn't bring up the controls, but acts like a new window has been entered?)\n- Settings - Profiles\n- System Status\nBut there may be other things that haven't had a special keymap set because the writer assumed esc/previousmenu would be used.\nI had assumed you wanted me to do deliberate breakage in this commit so testers could find the windows/menus that stopped working because they depended on them?\n. That would be entirely out of my ability of what I understand of XBMC's code, and the amount of testing would probably need a lot of people. Maybe start up a deprecation project to entirely remove all use of it, and only use context sensitive ParentDir would be better?\n. i'm tempted to agree that since the job of the factory is to create the codec with the correct params, parsing belongs in the factory. but i won't press it.\nwhat we do need here is build system changes. i can do linux if you want.\n. that's the windows buildsystem. so you can do that. all entries are done using the gui so that's fine.\nwe have several buildsystems to maintain, one for each platform. for the linux buildsystem, you have to edit Makefile.in and add the files. please add them in alpha order there.\nthe osx guys tend to do stuff afterwards, so we don't have to worry about that one up front. but i don't want broken revisions on linux.\n. no need for -i\n. i volunteer to handle it after the feature freeze is lifted.\n. so.. should we pull now or what?\n. probably not ;) but that would be part of my merging procedure..\n. i'm confused by the lack of a pause button. other than that it worked fine.\n. @malard i've tried pinging on irc 3 times now. pulling without your sign off.\n. i realize, but i have no idea how to refactor as there's no common base for the windows and it touches internals. i could break it out into a subclass, but i don't think it would save much (real) code..\n. conclusion is close and reject?\n. nice\n. please, in the future make it clear from the pull req which language you have changed.\n. Not many but a few. I have no problem flipping a switch though..\n. great. pull at will.\n. @jmarshallnz; all your comments taken into consideration. ok to pull?\n. hmm.. i sorta agree and sorta disagree. i guess we could change the space limit to be a 'desired max', while allowing more usage to keep two archives around of all.\ni was pondering using it to nuke uninstalled addons. but sometimes quick re-adding is also nice. other opinions on that around? i'm fine with going with the consensus..\n. i have done what I am willing to do but it was rejected as can be seen from the comments here.\n. crystal p is not satisfied.\n. @CrystalP, popular demand.. can be revised later.\n. @jmarshallnz; comments taken into consideration, ok to pull once i get the skin stuff?\n. now with skin stuff as well. still waiting for an ack\n. regarding libxml2, libxml2 in itself is a sax parser, it doesn't do dom. we'd have to pull in gdome2 on top in that case (which is a gnome thing so probably not all that portable).\nrewriting everything to sax, now that would be a major PITA with little gain.\n. regarding the first patch, mind the ticket implementing the same (hmm, maybe it was you who submitted). and sure, i see no reason not to add this. but as jezz points out, it needs to be done in a way that's backwards compat\n. i see it now ;)\n. booring, i didn't see any difference apart from the lack of flattening ;)\n. personally i use flattening. however, it feels like an unnecessary complication to have as a separate setting.\nwas pondering; we could have a tick list where peeps can select nodes from a list of presets. then we could have the non-flattened and flattened entries both available, and you simply tick which you want. that would be a much more useful way of achieving it. these presets would be read from a folder, and we could even in theory do addons for presets at some point if we wanted to.\ni'm personally fine with editing the xml but that won't fly with users.\n. yeah, pretty much what i had in mind.\n. \"Could it be abused: Yes, ofcourse it can - skinners can already abuse pretty much anything we add.\"\n^^ this. it's not our job to enforce a good gui, it's our job to provide the means.\n. i want your monkey! ;)\nyes, i think this is still desirable. haven't looked at the patch, but do you clear up the never ending string -> url -> string -> url crap?\n. @jmarshallnz is that a sign-off?\n. this has been done for sources (by me), seems i forgot the pr\n. i never saw what this offered over runscript.\nmy vote is die die die.\n. yeh, if they commented on the old commit (which is not part of the pull req any more - you rewrite history) rather than the pull req itself.\n. it's ready from my pov.\n. okay, pulling to get exposure to bug finding users.\n. aren't i kind?\n. It may not make any difference, but have you tested this again since pull #810 updated master to ffmpeg 0.10.2 ?\n. Can you use mkvmerge to trim out and upload a 20 second sample from the mkv?\n. done in bc8147e\n. i did a somewhat related change in 7149274.\n. fixed differently in 9aee89a. thanks\n. ping, crash bugs should have priority\n. do it\n. the idea here was that we already have a whole platform of users using this. we'd stick these in, and a bandaid in the eden release branch to set the substitute crap from the gui. that way we don't have to point atv2 et al users to advancedsettings.xml, which really feels bad.\nwe all agree this is fugly. but we're exposing it to these users no matter.\n. definitely a bug fix, thus certainly approved for inclusion (haven't reviewed yet!)\n. consider yourself hit.\nwe don't want shit reverted/readded in our history.\n. this is not osx specific. it certainly needs to be implemented on all platforms.\n. @firnsy please contact 'wonslung' in #xbmc - he has update issues.\n. this is something we really want for eden no bob, it's quite the nasty bug..\n. we -I so it will always checks those dirs first (iow it uses the internal copy).\n. @elupus how loud do you protest these changes? it's the only thing i know of that should be in the beta that ain't in place...\n. more reason to have it in the beta so we can get it tested widely. 4 levels of locks, yes, there must be deadlocks hiding in there :)\n. not happening for eden unless there are very good reasons (crash bugs!) for it.\n. these are bug fixes afaict. bug fixes are definitely ok\n. i don't see how it could hurt though..\n. if you have strong feelings against it i won't. but it's quite common on ehrm, some media.. sources :)\n. looks fine.\n. have you tested what happens if you have old local settings?\n. hit it.\n. yes, as in push. as you say, it's not a breakage, it's an api extension. nothing old will break, and we want to encourage use of the new, correct label asap. \n. looks fine to me (not that i'm very qualified on ios audio stuff ;))\n. i agree.\n. changed to use Play(track-1) to avoid the confusion. PlayNext() worked since the current song was -1 since the playlist wasnt yet started.\n. that kinda was the idea actually, i didn't want to reuse the var due to unforseen consequences. but i can change, any suggestions?\n. done. and yeah, that's what the var usually means.\n. Innocuous enough, IMO.  Dump those unrelated output message changes, though.\n. Mainly the \"unrelated\" bit, in the case of a revert for whatever reason.  It's generally bad practice to commit superfluous and/or unrelated changes with those containing a fix to a real problem.\n. 4fd9254..9acb325\nthanks\n. then pull elupus? your turf, mostly, no.\n. hmm, 7ca03bb is something i want to pull for eden. do you have some format doc links so it can be verified?\n. to clarify; i can't find good docs so just asking. pushed the fix, the rest will go in after the feature freeze. thanks\n. ping. please rebase\n. thanks for the reponsiveness and patience.\n. see the part about a hack upon a hack.. i'm well aware - this is a bandaid just to make it work, the whole thing needs to be redone. i have no idea how this crap got in there in the first place..\n. good plan, not a good plan during a freeze.\n. first is okay, second i'm a bit worried about. i agree it looks suspicious, but i think it's the log message that is wrong.\ni believe the intention is to get rid of paths with content set so update library won't sniff em. the paths without content set and with no info assigned will be nuked further down (l6744)\n. put the patch file in order as pointed out by davilla.\n. nobody expressed being against this. i'll pull it.\n. no objections. pulling\n. what a bloody mess. pull is fine with me.\n. see the part about this being a start ;)\ni'm pondering how to do codes and searches. probably something along what you suggest.\n. right, afaik all it's missing now is an addon. to brave souls; some small changes are needed to current addons. i will document those when this is ack'd.\nit's optimized for minimal code changes, not sanity.\n. was already on my list. see added commits\n. all comments adressed and this is working fine now.\ni set the default weather to none after some discussions on irc. pulling.\n. exobuzz outlines it good. thanks but no thanks :)\n. this can't properly resolve it in either case. we want Home on the remote to go to the home window, we do NOT want Home on a real keyboard to do that (rather work like home/end buttons are expected to work). this we cannot handle with a single mapping afaict.\n. it solves a real bug. we need to test it some more, then get it into the beta.\n. this isn't acceptable, i think a lot of add-ons would check settings in tight inner loops.\n. let's just say my coding style was a bit different back in 2005 :)\n. hrm, no idea what i was thinking. i was convinced it wouldnt generate a def constructor calling the constructor of members. but poo, i was surely wrong on that.\n. first commit is fine, second commit is unacceptable in a freeze.\n. that was the idea for whoever gets around to it :)\n. I don't think this is the proper fix. Ossl should be its own dll imo as curl doesn't necessarily even use it.\nHack is fine for Eden obviously\n. No response. Pulling\n. I tried this on a Win7 box with an NVIDIA G210 hooked up to a single screen and it didn't seem to make a difference for me either :/\n. give me one argument not to support it. it's not like we're making it mandatory.\ni'll be here all night.....................\n. Great you are alive !! ;)\nI'm sorry I can't help you cause I'm not a dev but I really hope to see this code in XBMC soon.\nSupport for rating videos is just THE feature needed in XBMC... Cross the fingers.\nCheers.\n. How many beers to complete and add this feature ?\n. Let this wait a bit montellese I have upcoming changes making this redundant.\n. af46070895c102aa46ca9e54e05d78dbbb01be04\n. other than the two commits i commented on and a general need for some squashing (we don't need the history of you fixing bugs in the initial implementation), it looks good to me.\n. i guess not everybody agree but i prefer using the buildsystem, not ifdef'ing out entire files.\n. yup. but you will also find many examples of my method, namely those i redid as this. as i said, not everybody agree ;)\n. looks ay-oh-kay\n. what was that you said? ok? ;P\n. It was simply an attempt at a compromise. It's not needed.\n. @jhsrennie ^^ please review\n. done in b5cf00aec8feec1629b8cba992c9decc9d51a75c\n. since i'm a lazy bugger.... on by default please and this looong winding story will have a happy ending :)\n. personally i think we only need one mechanism. the announcements. extend those with a payload and everything can go through that (sticking to talking json is fine). add a python binding to hook into the bus so it doesnt have to listen on the socket and we're golden. the callback handlers then simply listen on that bus, and we never have to define another interface (just spec the announces).\n. great, so all we need is a receiver flag. i don't think it's worth a private bus, just flag the announcement with an intended receiver. as long as no naughties/privates flies through there, it will be up to clients to not process stuff intended for others.\n. small correction; leading underscore followed by capital letters.\n. all good. for the educational value; you should never ask to pull from your master branch, since a pull request tracks a branch. so if you make changes to your branch, the pull request will also show those changes. you should always create a new branch (branching is dead simple - one of the big plus of git vs svn), and ask us to pull that. that way, there's no chance you accidentially commit other stuff to the branch you want us to pull, something that easily can happen in the master branch.\n. i'm nervous. yes, this will resolve. but we use the gfx context to protect a bit too much for this to feel comfortable :/ that's the 1) in our list.\nthen again it should be their responsibility, so i guess pushing asap and dealing with consequences is the way forward.\n. my main worry is that the gfx context has sorta evolved into a lock the app thread lock.  so somewhere down the line we may be updating some variable which is used in app thread. then again the issue sits wherever that might occur anda tighter lock would be the more appropriate solution. so weighing pros and cons i think it is worth it if there is still a known scenario that is fixed by it.\n. I hope this is good, I'm very skilled on github yet ;)\n. Ehr, I forgot a \"NOT\" in my previous sentence: I'm NOT very skilled on github yet :)\n. Can you help me please? I'm lost :D\n. Hope this is good\n. 2012/3/16 Joakim Plate\nreply@reply.github.com:\n\nGit rebase -i origin/master\nChange last commit to squash save and close editor.\nCheck that all is still correct.\nGit push -f [the name of your GitHub remote] [The name of your local\nbranch, possibly master if you forgot to create a branch for these\nchanges.] [The name of the branch on GitHub, likely same as the local\nbranch, if so can be ommitted \u00a0]\nI'm of skiiing so can only do stuff on my mobile. If you want this in the\nrelease you must get this sorted yourself.\n\nI'll work on it Monday morning, happy skiing :)\nA.\n. 2012/3/16 jmarshallnz\nreply@reply.github.com:\n\nMonday will be too late with any luck ;)\nDoes this cover the main \"Tv shows\" listing - IIRC this is videodb://2/2/ or some such who's parent I'm guessing is videodb://2 ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/771#issuecomment-4547973\n\nYes, simply if parent in videodb://2 set sorting method to Episode,\nelse sort on label.\nWhat does it mean that monday will be too late?\n\nAndrea Mistrali\n. 2012/3/16 jmarshallnz\nreply@reply.github.com:\n\nMonday will be too late with any luck ;)\nDoes this cover the main \"Tv shows\" listing - IIRC this is videodb://2/2/ or some such who's parent I'm guessing is videodb://2 ?\n\nSorting on EPISODE if parent is videodb://2 is better IMHO. Doing so\nanything under TV Shows section will be ordered on EPISODE, even\nGenre, Studios, Actors sections, not simply Title section. Better\nwould be to sort on the key is setted in GUI, but I've not yet read\nmuch code of XBMC to do so, maybe next patch will do this way.\nA.\n. Hope this time I've made all in the correct way...\n. As a good upnp client I can suggest UPNP Inspector (http://coherence.beebits.net/wiki/UPnP-Inspector). It is written in Python using Coherence UPNP framework. I use this to do tests, when I don't have my WDTV handy.\nIf I can tell, I think that some kind of basic sort, even if it is a hack, is better than ONE SINGLE sorting method. For TV Series it is really bad to see episodes ordered by episode title, when the natural order is by episode number.\nThe best thing IMHO would be to use the same sorting the user set in the GUI for that section, but I've no time to look deeply in XBMC code to come up with a nice solution. I'll work on it, but, in the meantime, if no one has objections, please include it.\n. Tested right now on Music and the songs are ordered on title (LABEL for music file) that is awful. Now, I don't think that populating UPNP.cpp with a very long case is good. I'll try to discover how to read from GUI that seems to me the best solution (there are already all defaults and user can change ordering as he likes).\nComments?\n. Il giorno 19/mar/2012, alle ore 19.55, jmarshallnz ha scritto:\n\nI should think it should be up to the client normally to do sorting, but at any rate, check out how CGUIViewState is used in CGUIMediaWindow.\n\nI agree with you and I\u2019m reading http://upnp.org/specs/av/UPnP-av-ContentDirectory-v4-Service.pdf to understand how Sorting and Searching SHOULD work, but, in my experience, many UPNP controllers DO NOT sort items, but pretend to receive them already sorted, so using a default sorting method (depending on context) could be a good thing. I\u2019ll take a look to the code piece you\u2019ve pointed out and see if I can come out with a good patch. Plus, if I understand correctly some piece of codes, in GUI there is already a sort of default sorting method, depending on context.\nA.\n. I've made some tests and seems to work. I know I have to squeeze the two patches, but previously I would like to know if it is good (I'm not very skilled in C++)\n. More: using that patch, ordering of Containers in UPNP is the same that is set in GUI. That should be the best solution, so far. Well, the best one would be to use sorting criteria requested by client, if no sorting is asked, we should fall back to above patch, but, as I already wrote, I think that requesting sorting order is not implemented in many clients.\n. If I understood correctly the code, GUIViewState already has defaults for everything, so, if user did not set a particular Sorting key in GUI, we have defaults anyway and CGUIViewState should use them.\nThis seems to me the best approach: if users do not touch anything, we use default ordering, if users set their personal sorting method, we use that, even for Music or for Searches (anyway I checked and searches are not managed by now, searching for a particular title has no effect and UPnP Server returns all items, should work on this).\nI don't like the idea of changing Episode label to include episode number: Episode Number is one thing, Episode title is another one.\n. Sorry, but I'm really unable to use git/github. The above patch is the best I can do. Hope someone would help and rebase/squash it in the correct way (removing unneded UPNP.cpp~ file)\nA.\n. 2012/6/6 Alasdair Campbell\nreply@reply.github.com:\n\nhi, I'm working on UPnP improvements in XBMC as part of GSoC. I'm about to look at the sorting issues. I think we should keep things as simple as possible, so in that case\n- if sort_criteria is specified, apply that\n- else, sort by the default method for that particular media type.\n\nI agree with you totally. It was the idea behind my patch, but what is\nthe default sort method of particular media type? I decided to use the\none set in the GUI, because the defaults were already good IMHO.\n\nIm not sure applying profile/user specific choice of sorting method to the server is a good idea whatsoever. If the client wants to apply a different sort method then that's all well and good, it can either request it or re-sort on receipt of item list using metadata.\nyou can follow progress in my fork of xbmc here\nNB: on my testing of a few different UPnP clients (including XBMC), none of them specify a sort criteria.\n\nI have made some tests and I've found the same thing, sorting is a\nthing that is not considered by UPNP client implementors.\nI'll check your fork ASAP and report to you.\nAndre\n. Il giorno 07/giu/2012, alle ore 13.18, Alasdair Campbell ha scritto:\n\nWhat I mean if sort criteria is not specified by the control point, we sort according to the GUIViewState defaults - NOT according to what a particular xbmc profile has set. That way, the behaviour is deterministic.\n\nOk, I can agree with you. Let\u2019s code it :)\nA.\n. @anssih it is trivial to make VDR write to a single video file by disabling the file splitting, or alternatively to use the vdrnfofs add-on to expose them via fuse as a single .mpg+.nfo pair\nthis support for the marks.vdr format should definitely go into xbmc master rather than the pvr branch \n. i wrote this? :)\n. very nice. can't find anything on a (somewhat brief) look-through.\n. hit it and see what it does\n. rebased to handle file:// urls.\n. elupus, is there a way to confirm that multithreading is being used?  There are reports on the forum that commit a0fc63d breaks multithreaded decoding.  Without it, many users cannot decode HD hi10 content.  Granted, they could be mistaken, but I cannot find anything in the codec info window that tells how many threads are being used.\n. for future reference; no reason for a new pull request. a pr tracks a branch, update the branch, the pr is updated.\n. all good afaict.\n. rebased to use an add-on to grab region.\n. and filtering moved to window.\n. please rebase\n. ping\n. as you say one does not exclude the other and having it available as vfs makes sense no matter.\n. seems it's already somewhat based on duplication for resume in playmedia builtin. best you can do is break it out in a separate function as is done for ShowResumeMenu..\n. no problem. june it\n. looks fine. woopsie.\n. so the amplification stuff is just dropped?\n. then can it at least be split to reflect these two logical bits?\n. i don't know what olympia has planned (did it on his request), but i can envision shit like prefix'd search results etc e.g. [Album] Bar\n. sure, it's unused so no surprise there.. question is if it is something you see used at a later point...\n. yes. please listen to montellese ;)\n. while granted not a thorough review i have read through it and did not spot anything obvious. show it in there. we will have to deal with it no matter;)\n. please pull.\n. whether it works or not for some is irrelevant. the fix is correct.\n. one looks good, one +1. will have to suffice.\n. how about we simply set a prop ?\n. @elupus can you test the passthrough for me please (it still only enumerates). i have no easy way to do so..\n. pushed.\n. haven't reviewed by in pricinple it's a refinement/fix so yes.\n. it's certainly better than nothing, and can be refined if crystalp has objections when he pops by again. no sense delaying another window imo.\n. please use a gist!\nanyways, your tinyxml is compiled without stl/streams support. enable it.\n. AEStream* AEStreamFactory::MakeStream(Engine* engine) ?\n. if you are absolutely sure.. i did it once and davilla grumped.\n. windows buildsystem work done (thanks grajen). pulling without osx buildsystem as ok'd in general by davilla.\n. A rebase is complicated for me due to using OS X 10.7 as my development environment, and the build environment needing to be rebuilt every time I rebase. Are you certain that these diffs can not be applied cleanly?\n. The number of comits is due to problems with the OS X build enviroment. It needs to be cleared down since it touches stuff that shoud be git-ignored properly, and fixing that would be a different issue. That should actually be obvious from looking at those comits.\nLook at the Diffs.\nLook at the files touched by the Diffs.\nLook at when those Files were last edited.\nLook at when I last did a rebase.\n. These are issues related to having to make changes in the xcode project file for builds in 10.7 and XCode 4.\n. Please note, I barely understand the code I am editing. I am only doing this because when I have tried to get bugs in handling internet streamed media fixed, I've been told to \"submit a patch\" because no one else is interested in working on it. I'm not really that fussed about cosmetics, white space fixing can be done later.\nIf exception handling is needed, I don't know what the exceptions are that need to be handled. Please explicitly identify the exceptions that need to be caught.\nI am unwilling to make the assumption that Flags will be set in stone on Open() calls. \nFileFlags.h was created to make structure easier to understand, rather than leave it burred in iFile.h, as it is relevant to more than iFile. \nPlease suggest a patch for any other changes.\n. Please note, OS X 10.7 / XCode 4 builds are broken again after a required update to the newer version of XCode, so I am unable to continue work on this. I will raise an issue about the build breaking when I have time to look into it properly.\n. My builds are fixed again now, so I should be able to get back to this eventually, but will likely have to close this and refresh from a new tree.\n. Nope, that doesn't work as you can see. My Git tree is too messed up.\nApologies, but this is what you get when you want someone to learn a whole new system so they can submit a patch so you'll pay attention to an issue.\n. I suspect there are many other context sensitive situations where IFile instances might benefit from knowing their context. PVR time shifting comes to mind.\nThis would also be an example of where context that IFiles might need to know about can change after the file has been opened.\n. +1000\ni tried to get this through once earlier, can't recall who stopped it. hit merge before whoever it was notices! ;D\n. Argh. Meant to do that... In a rush this morning.\n. I was, but GitHub seems to be maintaining the old commits anyway. I really don't have time this morning to work out what's going wrong, so I'll do it later. And I just pulled in a commit from upstream that somewhat does the same thing, but only specifies certain directories. I think that ignoring everything except the project file is still better.\n. took the non-skin bits in d9ce56ebd1927da5d7bc441078164175b38d1afe. thanks!\n. imo nfo files suffices until such a time we have import for 'unknown' items going.\n. looks fine to me other than the comment.\n. please rebase\n. Like you always has been able to context menu in the profile settings screen\n. hmm. nasty one. the whole point to the cache was to avoid hitting the filesystem (hurts on network).. but i guess we have to suffer the stat for the archive.\n. they should definitely be moved to the add-on. but i'm not sure whether or not ronin did that so i left them in for now.\n. there are probably some that is only used by the skin, but i don't think there are a lot (unused strings are probably a bigger issue).  we should of course strive to move as many as possible to the addons.\n. so.. back on topic\n. rebased. i also nuked last.fm radio this time since afaik ronie's add-on does that as well. i did not sanity check the list of removed strings but i think it should be fine.\nprojects files done by hand so that needs verification. kept them in a separate commit for convenience, we can squash em in once confirmed.\n. I can sign off on the idea of shortcutting the whole when to do it with a simple answer. I haven't reviewed the code.\n. is this kFoo the new hungarian wine?\n. seems rather limited to not use some handle. now it can only be used to kill all scripts...\n. looks fine. next step would be to use the new stuff in the core but that we can punt for later\n. i like that ^. also you should use the viewstate for this, not do it directly in the window.\n. please, do NOT post shit like this on github! you are spamming over 100 people with that useless comment (and so am i with this...) keep it on the forums!\n. yes please. i actually started on something similar. but please, don't add another extension point. just have CScreenSaver behave differently based on the library type (py vs xbs or whatever it is these days)\n. While not really relevant on full fledged port platforms these defines are really handy when porting to new platforms so please respect.\n. why can't you reuse ::Create and ::Destroy ?\n. ::Create and ::Destroy are the CScreenSaver start/stop methods. it should be abstracted away from the application.\n. great, thanks.\n. please see github.com:cptspiff/xbmc.git fribidi\n. committed as 9ec8887727774f5f49c4cc0dca3fe522a068f4b7\n. looks fine.\n. squash please\n. also, it's not mysql, it's mysqlclient. you'd run the db on a more powerful device.\n. Never argued for this not being welcome.\n. uhm, defines are most certainly not transferred between compilation units.\n. something's arsed with make check. it will build the tests, requiring the gtest headers BEFORE it builds gtest. i had to install the system lib to get it building..\n. also please run xbmc-test through valgrind and fix\n. one reason valgrind complains is that you have to call g_advancedSettings.Initialize().\nseveral functions we call read settings from g_advancedSettings.\n. Gramps should know it is better to rebuild (in particular nuke xbmc.a), then complain than the other way around :-P\n. It is a mighty old leftoter that was there to facilitate an old tv.com scraper. For some stupid reason they used a flat episode number at some point and this code was there to compensate. Nuke at will\n. then go use madvr. but please don't pester us with nagging on our development pages. kthx.\n. you were warned,.\n. i've been through it. no eye-brow-raising stuff found, but it's a lot of code... think we need to do as we did with vids. hit it..\n. if many calls are needed and we cannot find anywhere SANE to put it to reduce the amount of calls so be it. ^^^ is entering the non-logical in the name of saving a few chars of typing imo. changing an url and waking up a remote host is different cups of tea.\n. done in a different pr\n. thx\n. @vdrfan you stuff\n. ^^^ i completely agree with the last sentence there. i always thought this translation nonsense broke that feature - the ability to use a different, specified scraper for a particular item. but you know the old jungle word; never get between the germans and their unstoppable desire to rape every movie there is in the name of their language ;D so i never spoke up..\n. i won't pull anything with the word 'scrapper' in the commit msg. one p! :)\n. imo this should simply\n1) try configured scraper\n2) try the rest of the enabled scrapers\n. hence my use of the term selected. imo the default scrapers serve no purpose than being the preselected one when you set content..\n. looks fine now\n. then we need to ship and build the sucker for linux as well.\n. @Fneufneu need sign-off\n@huceke  need rbp depends stuff\n. if cory read the diff, cory will notice the /*\n. nice. but there is so much untapped potential in such a simple player, e.g. video previews, video thumbs. can you factor it a bit (introduce this player as a general class, use the general class for karaoke).\n. i leave the name at your discretion. but it's FFmpeg so don't make that mistake :)\n. @elupus, @davilla attention please\n@gyunaev i am fairly certain class name and constructor has to match ;)\n. thanks. now squash the commits into one and we are good ;)\n. hit it.\n. you don't have to close and open a new pr. a pr tracks a branch. just push -f the branch, and the pr updates.\n. .. and thanks :)\n. the ffmpeg demuxer checks the input stream type given. it's only DVDSTREAM_TYPE_FFMPEG for a few streaming protocols, mms, rtsp. usually it's DVDSTREAM_TYPE_FILE which reads through our vfs.\n. rebase and inject. elupus indirectly signed off on devcon.\n. merge window is closed. will have to wait till october.\n. looks fine to me. @elupus ?\n. thanks for sticking with me. scheduled for august\n. review and hopefully merge during august window (1-10th).\n. looks fine. now please fold (squash) the fixes into the original commit.\n. thanks for the patience and the contribution!\n. this is fine, but it needs more work. without stream selection code, there is no telling what stream you end up with (i guess the first encountered).\n. if not, all variants are active and you are downloading all streams. i'm not talking about dynamic selection.\n. that's what i was told by a ffmpeg dev, so it's what we have to deal with. i know you can work around it, but let's get it right. we have an 'internet bandwidth' setting that is intended for this usage.\n. i have amended the commit with a change of a cstdstring to a char[21] to avoid potential threading issues.\n. No regression. It always showed 44. Whether this is desired is another discussion.\n. Read my answer. I recognize there may be an issue but it is not a regression.\n. patch/pr most welcome.\n. @jmarshallnz looks fine no?\n. This will break. We need those chars in iso and not utf for reasons I cannot recall right now.\n. I will once on something a bit more practical than my phone.\n. @jmarshallnz remember what http://xbmc.cvs.sf.net/viewvc/xbmc/XBMC/guilib/LocalizeStrings.cpp?r1=1.74&r2=1.75 was about? :)\n. please squash.\n. pushed in squashed form. thx\n. Haven't looked at the code but no stack will break eg two cd movies in cd x subfolders \n. work to be done as in the work the scanner has to perform.\n. sure, we haven't commented on the rest :)\n. if we absolutely need such a mode it should be done by code, not by a butchered scraper + id checks.\nsome tick in the content dialog 'fetch online data' or thereabout. if not enabled on the source, scanner handles appropriately.\n. no, the buttons in that dialog are filled from code.\n. Then skin changes it is\n. yes anything without a useless butchered scraper will fly.\n. no reason to complicate this, it reads into a non-wide string stream and returned in a non-wide string. it won't ever work with wide data, is not intended to work with wide data and certain does not have to work with wide data.\n. ....... process in given order.\n1) define \"properly\". \n2) state exactly what the problem with my code is.\n3) define what benefits your vaguely defined \"proper\" solution has over the existing solution (i assume you are on about using .write() instead of 0 term + <<).\n4) stop wasting my time. i have other sheds to paint.\n. i wasn't aware you had updated the other pr with changed code. idc which is merged.\n. fixed by ad4ad22e135acc9e931c8d3aec91b6fb4a46b226\n. this no good. revert records the revert as a separate commit. that's not what we want. you want to rebase it off, see interactive rebase (git rebase -i)\n. incorporated. osx/ios anyone?\n. thx\n. repushed. sorry about that, so many branches to juggle ;)\n. the amount of lines we (possibly) git rm does not matter. this looks fine, and is confirmed working. nuke the comments and we can merge for now and settle the fate of the dialog later by throwing bikesheds at each other (dibs on the orange with a -1 tint) or whatever ;)\n. that would be stretching the definition of a fix ;) but sure I see no reason not to put this in.\n. is the no serving from remote a regression?\n. langs will sync up through the web service thingie.\n. move it to depends imo. it is an external library.\n. fine in principle but 2b needs resolving. doing it just small preview windows is silly imo. this about annoyance while wanting to do a quick menu op or whatever, not about smooth-as-butter 128x96 movie playback ;)\n. requiring c++-11 is an absolute NO GO at this point in time. try again in 5 years or so. while indeed newer gcc support it, we build on tons of platforms and not all of those have updated toolchains. plus some of them use clang.\n. hash_map is not part of the stl..\n. yeah, it's probably a usable candidate.\n. i meant hash_map can be used to make this pr a usable candidate for inclusion :)\ni agree, if we can optimize, we should.\n. well then...\n. the only way we can gain is from intrinsics, asm code or any auto vectorization done by the compiler which I doubt is much.,.\n. go, but in the future try to split off cosmetics.\n. divide by 1000. done. other way is not doable. it does not hurt and may be useful. that is my line of thought.am I missing something?\n. there is a potential, but the few we have in our repo is worth the risk imo. i tried a couple and they worked fine\n. will do, but as there are several other potential breakers in already i'd prefer to do it separately (and tomorrowish)\n. *conflicts between reads off app thread and writes on the app thread\n. considered a fix no?\n. i see no way around this. question becomes if we should allow some backwards compat here (spec'd in addon.xml). i.e. anything running under py 2.0/1.0 will get their dialog unless specified? bit counter-productive as the bug may very well bite in those plugins, but still this is a rather harsh behaviour change...\n. button is green.......\n. it is a fix. and it works fine i have had it in my builds for a while. green button is up for some hitting.\n. a bit longer into the future than it used to be due to all these useless questions you guys keep nagging us with. eta is when it is ready and not a minute before.\n. new attempt. use a CThread inherit rather than a job. plus i tacked on another fix in MP3codec.cpp that i think is safe and very useful. @jmarshallnz better? i think so since it doesnt hog a CJob slot.\n. pr updated.\n. any remaining concerns?\n. On Mon, Aug 20, 2012 at 12:39 PM, Joakim Plate notifications@github.comwrote:\n\nAn alternate solution is to move the tag parsing up to the player. Would\nbe\ncleaner, but more work.\n\ni'm not sure i agree. streaming tags are protocol specific. granted, the\nsetter thread could in theory run in the player context, but that would tie\nit to specific players, and these days that's not nice..\n. ^^^ i always said do that and fallback to pure C code which is the only thing AE should contain itself. but gnif wanted it selfcontained. since he's a gonner i vote we do it.is it easy to map avr <-> swr?\n. okay, if we start with the \"simple\" bits, it's just converting AEConvert.cpp i guess. ultimately it will be more of a pain though if we want to do remapping and resampling at the same time (which we should), since ae is designed to do those in different steps..\n. imho only option 1) (or well, something is its spirit) is okay. forcing a dependency on anything ffmpeg, though highly silly, scares vendors.\ni guess the resample context needs to be moved from the engine (i.e. resample the incoming stream) to the stream itself (resample before you send to engine). that will allow the resampler context to live longer. this works for everything but nav sounds. problem there is even if we force some format, we may very well have to resample since we may be outputting audio at some other sample rate (nav sounds during media playback). i can't think of a solution to this, perhaps simply resampling those using C code will suffice?\n. as i said it's silly, but they want no trace of ffmpeg. and you cannot argue with phb's.\nif i understood correctly, the problem here is that we resample in the engine, using the resample function \"the cheap initialize API\". to get the context living longer, my idea was to attach it to the AEStream instead. the stream lives for a whole movie/song/whatever. the only ptoblem there is the nav sounds - they are a \"stream\" that are very short lived due to the length of a nav sound..\n. yes, this pr is most welcome in my opinion, independent of any ae change.\nthe point was to change the AE API to suite avr/swr, then optionally use it and fallback to a pure C implementation. i'm all for a simpler approach, i was just thinking out loud based on what i know about ae and what you said makes avr/swr hard to use.\n. no no no no no. we will not maintain swr! haven't we learned anything?\n. looks fine other than that comment.\n. aye\n. see the comments on the individual commits + rebase\n. what distinguishes these 'small fixes' from the other 'small fixes'? please use descriptive pull descriptions.\n. it depends. if they are logically decoupled or on two completely different parts of the source; yes. if they are \"related\", then no. but please do describe them better, 'small fixes' does not tell anyone anything, in particular it does not tell which dev it is relevant for.\n. thx\n. i know I shouldn't but me being me and all ;-)\nthree months later and the problem I mailed about suddenly was real after all :-P\n. i don't. i just saw the nagging in the forums..\n. alsa will hog. pulse will hog but that's by design - you should hog the pulse device - it's your applications' context.\n. basically, what i (mean to) say, is pulse has no reason to release the device. it's a virtual app-specific device, nothing else will ever try to open it.\n. please, if you reopen i'll handle it.\n. not outside a merge window. scheduled for october.\n. hi peter, really bad time right now. our developer conference starts today\nand most devs are on a plane. so don't be discoraged by a lack of immediate\nanswers.\n. users are their own worst enemy. asound.conf being hard to use is a good thing. I fail to see the need for this on our side.\n. there are no new features here. lang updates can go in whenever as far as i am concerned. if i were to make a suggestion they should go in at the end of the month just before a new window opens. that way alphas will have a higher chance of having the translations in placem\n. dont think that is a biggie in reality. most things large enough to include lang updates is worked on for months. so they have to be rebased more than once already. plus lang conflicts are typically trivial to resolve.\n. just in case; i am on about the general approach, hit the button on this one now.\n. you got 20 days to crack at it. assigning to october window.\n. we really need to stop this from happening.\none idea would be that anyone not 100 comfortable with git volunteer to\nhave their push to main repo removed and only work through pr's until such\na time they are certain this won't happen again. they can then request it\nback and get it. the threat of a wtf award is just not enough.\npersonally i have upstream as a read-only remote on my working repo, which\nis where i do the work if it involves more than a few commits. exactly to\nensure this does not happen. one more line to type to pull from my working\nrepo to the upstream writable repo before i push but then i know i cannot\narse up without really wanting to.\nspiff\n. there are d in the big commit. it needs explaion. just a gut reaction with just a phone\n. thanks lars, it was the deleted files i wondered about. that some hunks remove code is less of a concern.\n. On Wed, Sep 5, 2012 at 8:51 PM, jmarshallnz notifications@github.comwrote:\n\nI haven't reviewed, but if others are happy with it I'm happy to review\nthe\nguilib changes after the fact and fix up anything I don't like in master.\n\ngood. we merged it 24h ago ;)\n. leave the gap instead of moving all defines please. less prone to errors should there be order dependent code.\n. couple of friendly hints;\n1) people have no idea what ticket #12012 is about. use a description that describes the problem own its own.\n2) ALWAYS rebase a downstream branch. i.e. you have to rebase it on upstream/master. we won't pull anything with a merge commit in it as it screws up our history. if we merge that, all things you merged in through that merge commit will look like they originated from your branch, not from wherever they originated from originally.\n. no idea how to do it in those gui obfuscations but with git it is git reset ---hard origin/master\n. rebased and squashed and pushed as f7d96ad\n. thx. committed with the missing IsDrained() body.\n. https://gist.github.com/3661329 is probably the way to go\n. imo we can just skip the patch for anything that will brought in with an update.\n. thx\n. if you don't know  you shouldn't be in here. simple as that.\n. -1. if shit end up on my system I want to be told. what if apt did this?\n. ping\n. thx.\n. aye.. now my work email is spammed as well ;)\n. thx\n. @albinoman887 shut up and observe or learn through other channels. this is the absolute final warning, and i mean it. i have a big fat boot and i will not hesitate a second before using it. if. a single new email with your interferences shows up you are out of here.\n. then there is something wrong with our playercore rules.\n. @jmarshallnz, i make the call after oct 10. if you want my opinioin, i don't think think this will cause much trouble if it is merged.\nthat being said, LCD should definitely go from core. it's just a service add-on.\n. this will break if there actually is a subs and a Subs on a case sensitive fs.\n. that is bollocks. we play straight from uncompressed archives. anything which does not do this is a major regression and jit a replacementm\n. if it just does uncompressed directly everything else is just bonus.\n. look at the author..\n. squash and pull\n. looks cool to me.\n. rebase and pull?\n. one stupid and python like ie listdir() and one returning the detailed shit as fileitems. what jm said.\n. mind the default caseless on .Equals. that is the main reason == is not a replacement\n. read this; http://git-scm.com/book/en/Git-Tools-Rewriting-History\n. afaict this is just a refactor. okay by me.\n. that would be acceptable.\n. i dont understand why we are even discussing this. the removal of this was decided 2 years ago. it has had more than enough time in deprecated limbo.\n. re's looks fine to me.\n'a-i or . digit followed by no digit'\n. yes\n. yes.\n. ehm, this does way more than announced..\n. hmm, i ponder if not setting Loaded in the first place is sane or not..\n. right.\n. ^^ me\n. much better.\n. i assume this is gonna get as much attention as cd rip stuff does normally, so;\n@jmarshallnz please at least look at the first commit\n. there's really no logic change other than replace proggy dialog with ext proggy dialog. it's the same job. only other change is i had to add an option to cancel shit since that disappeared with the non-modal dialog, and that required the JobQueue change.\nthis will be followed by a pr backgrounding filemanager operations. it's done, i just have to polish it.\n. now using isprocessing. pulling\n. well the disabling of logging is hardly a fix ;)\n. damm. i rebased this as well ;) cptspiff:rebased_1540\n. this depends on pr #1530\n. better split now and no longer depends on #1530\n. hah, as if i'd ever do such a thing ;) put it in the correct context now + made the new functions const.\n. no other concerns?\n. it's sorta what it does. it does two user-initiated operations in parallel. an operation can be copying n files or n dirs or whatever.\n. i got you. if, however, you mark file a and file b and hit copy, they will be copied in sequence. doing it all in sequence is trivial, that's just removing the 2 thread slots. but imo this is better.\n. +1\n. Is this going to be fixed one way or another? Or just being ignored?\nThanks\n. @pieh ^^\n. you have 4 days...\n. this is not really a regression..\n. objections?\n. If this fixes the subtitles\n+1\n. remove troublesome commit, then inject?\n. probably not but it is returned from server so no  biggie fixing that up.\n. now squash the commits ;)\n. can you do up a fix for ^^ ?\n. 1) for starters make sure the videodatabasedirectory classes can handle it. then check the contextmenu and action hanlding related functions in the video and music (due to mvids there's some code there as well) windows\n. this is a fix in principle. accept.\n. doxy the new functions please (yes, i know there are bad examples to follow ;))\nnot immediately obvious what output and input means in the context.\nand cool.\n. yeah, that's better.\n. rebase please\n. if it is properly tested with slideshows it seems reasonable.\n. jmarshall, i'm surprised if you're not extremely annoyed by everything xbmc by now ;)\n. split\n. ping? all i want is a split into two commits and green buttons will be pushed..\n. split and pulled. thx\n. sign-offs for relevant platforms please.\n. @Fneufneu ?\n. squash and inject cory.\n. other than me having to comment on how fugly void** shit is, it looks fine.\n. you can't hide fuglyness behind a typedef ;)\n. pull at your leisure.\n. somebody should be ashamed.\n. it has the majic word (regression). did you review jonathan?\n. what's the huh addressing? the C H D? where i'm from it's a b c d e f g h.\n. yeah, we all know this is a bandaid. fix up the makefile, squash it up and i'll pull.\n. imo this should be more of an app ping thing. ie it also pings the idle timer.\n. i'm saying rename the function and make it more usable by making it do an app ping rather than just waking up the screensaver.\n. XBMC.PingApp or something like that. \nmy point here is that, while currently there is only idle timer and ssaver, who knows what might pop up later that makes sense. being prepared...\n. makes sense.\n. please rebase\n. cannot call such functions in off application thread. see CApplicationMessenger\n. no. you cannot call that function off application thread.\n. as builtin commands can be called from any thread we need to take concurrency into account. there is no knowing what the application thread is doing and blindly activating the screensaver from another thread is doomed. we thus have to make sure that it is called at a safe point. this is where the application messenger comes in handy. this allows threads to send a message to the application thread and have it do some task at a safe point.\nadd a new message to be used by the builtin. appmessenger is monkey see monkey do buisiness\n. rebase.\n. @FSSDawid if you have nothing to contribute to the discussion at hand, FUCK OFF! you are spamming hundreds of people every time you post to one of the pr's and this is NOT a support channel.\n@jmarshallnz i considered that, but i can't think of a single reason another window would send us that msg when we are active. can you or just being defensive? then again, it surely won't hurt doing that way but diff grows ;)\n. i'd consider this a bugfix as it's a new feature...\n. this is a regression from 14e4dac2d. @jimfcarroll .\n. @pieh ^^\n. what happens here?\n. i can't really comment much on the implementation, but if you put your balls on the table..\n. that was my reasoning.\n. squash and pull the fucker if it works where it has to\n. i like this.\n. split the first commit (refinement, addition).\n. signoff\n. so those are sign offs i take it?\n. i don't like the god damn in-tree pvr addons one bit so this has my -10. a pr removing it completely will get a +10.\n. why is this not packaging friendly? any sane packaging will package up each add-on separately, not one big hunk.\ni know lars wanted this, i also disagree with him and he knows it.\n. in my experience users do not prefer them all in one package. they don't really give a damm how it's packaged, all they care about is convenience. that is; users wants to install them from the add-on browser just like any other add-ons. they also want them to be updated just like anything else. at least i do when i put on my user hat. \nthat's the long term goal here, the wheels are moving slowly but they are moving.\nthe building for different xbmc versions is an issue of infrastructure, which can be resolved by properly using your distros package management system (most likely through separate repositories). carrying hacks in tree for lack of infrastructure is a at best a sad solution, in effect a no solution. i know there's some shit left before this is possible, but anything cementing it into the main tree now will make it harder to do properly later due to legacy. i'm working on the build system for linux to build each addon separately (easy enough) with (optional) usage of system libs. darwin is harder, but we'll get there. going for the easy solution is the wrong choice here, even short term - xbmc is such a big project and any legacy we create we have to carry for years.\nso in conclusion; we are working to make it easier on packagers, not harder. but any temporary hack put in place now creates legacy we have to carry for years. i don't want that.\n. in what twisted reality does it make sense to build them all every time one of them changes?\n. signoff\n. append the fix to the branch, once approved you squash it down.\n. one day in 3030 when cows fly and squirrels rule the world a conflict might occur. everybody will then be glad they listened to some random dude with unusual habits those mere 1000 years ago. the 1000 years of confusion, inconsistencies and support nightmares will all have been worth it.\nit will be a tuesday.\n. fine\n. url should be prettified and stripped for pwds etc.\n. right, it will be prettified by the dialog, forgot that. rebase it up..\n. ace^^^\n. didn't realize there was a reason for the automerge to fail ;) take your time.\n. fine. be warned, the const char games get fugly once you go down into C land :/\n. yeah, don't delete foreign data. ever. painful it is.\n. status?\n. how about you pop in the first 3 and leave 4 for post.\n. meh..\n. @jmarshallnz post-frodo ping.\n. Will this also work for the label / altlabel of the togglebutton?\nEdit:\nOk, thnx. Either way, awesome work.\n. can we have em bumps then?\n. meeh.\n. later than initially. we now have to go to yet another puppy funeral. every time one of you guys write these useless messages, one dies, and we have to attend the funeral.\n. please rebase\n. 6354eff19521843bb80e93fa05849700eb5879af\n. i don't think we support such urls.\n. damn, we do.\n. spiff@micron:~/kode/xbmc$ apt-cache show libarchive12\nPackage: libarchive12\nPriority: optional\nSection: libs\nInstalled-Size: 652\nMaintainer: Ubuntu Developers ubuntu-devel-discuss@lists.ubuntu.com\nOriginal-Maintainer: Debian Libarchive Maintainers ah-libarchive@debian.org\nArchitecture: amd64\nSource: libarchive\nVersion: 3.0.4-2\n. 83f751c038097b305a2d7998d3d4a4aa8aade838\n. Suggestion for giving the user feedback: Maybe just popup the bookmarks window for a few seconds? Show a thumb being added and fade again. If that is possible without allowing interaction.\n. ..and again :)\n. Is this really working for skins that use old method? In my example when I use: \n!IsEmpty(ListItem.Trailer) + [SubString(Container.FolderPath,videodb://1/2/) | SubString(Container.FolderPath,videodb://4/)]\nin DialogContextMenu.xml the button is not visible unless I change the code to:\n!IsEmpty(ListItem.Trailer) + [SubString(Container.FolderPath,videodb://movies/titles/) | SubString(Container.FolderPath,videodb://recentlyaddedmovies)]\n. Also is it normal that everytime you enter main library nodes (TVshows,Movies etc.) debug log prints tons of \nWARNING: CreateLoader - Unsupported protocol(library) in library://video/....\ncomplete list here: http://pastebin.com/da8VfUcd\n. please don't read this as a flame, but your commit messages are pretty much textbook examples of how not to do it ;)\nthe diff tells us exactly what you have written there. yes, we can see that you changed DirectoryCache to not save substituted paths. what it does not tell us, the task to be served by the commit message, is the why.\n. other than my worthless +1, not really. solves a real life issue, code is as minimal as it can be.\n. if you don't know how to apply a damn patch you are in the wrong place. stop spamming over 100 people with your inabilities! this is not a help channel.\n. i understand that nobody's trying to be annoying, but sometimes the cup is full and somebody get the wrath for a few weeks of spamming.. :)\n. i don't plan on nuitering rollbacks for system packages, and thus we have to stick to specifying the versions. we will have to stick copies of addon.xml in packages/ (instead of the zips) to keep track of versions.\nit's all a question of complexity. i'm a big fan of simplicity whenever it solves the problem. by decoupling package version from add-on version, you are adding complexity. if it is deemed necessary, fine, we have to deal with it, but i'm not sure it is in this case. all other add-ons bump version for distribution reasons, why can't we do the same here? IF we let packagers dictate all the grounds here we will end up with a complexity far beyond our needs. general packaging rules are there to handle the global problem of system wide installs, we have a much smaller subset to tackle. we control the installation paths. there should only ever be one copy of the same add-on on the system. i really think it's sane to define rules that are tailored for the subset we look at.\nthat being said, since the addon.xml is controlled by the repo, they may do their own versioning scheme should they choose to.\nas far as keeping in sync we need to distinguish our two roles. one is facilitating the general case, the other is supplying an official repository for ubuntu (atleast).\nas the facilitator, we are basically just an upstream for the distro. they pull the code from our central git and generate their own rpm/deb/aur/whatever (and addons.xml). as such, this is straight forward, and we won't deal with any complexities at all - it's not our concern. we should encourage in-tree packaging for the different distros, but we cannot require this. it is up to the distros when they pull a particular add-on (adds fragmentation, but nothing we can do about that).\nthe other role is as a supplier of an ubuntu repo. here we have to deal with different versions etc. but it's our choice how to deal with it. not a show stopper, my .02c is, as i said, on just saying we support versions 'foo bar foobar, your add-on has to build on all of these to be made available on ubuntu. alternative is to supply a repo for quantal, one for precise etc. again, it's a question of the complexity we want to deal with.\n. thinking a bit more we could probably combine the approaches. the installer is told to install add-on version foo, it's up to the installer to futs that into something which works on their end.\n. so, any conclusions reached?\nmy .02c is that using a metapackage to handle API versioning is the way to go. though i don't see this as a big issue, unless you plan to have a unified pvr add-on repo for all xbmc versions?\nmy idea was to keep it simple stupid and have only one xbmc version per repo.\n. and the server cried out as millions of clients needed dynamic xml's on a 6h cycle.\n. so what we do now.\n. neat. @theuni, can you hook up the xml generator?\n. these are not duplicates. getparentpath implements additional logic that is only valid in media windows. in particular stacks and filedirectories are treated in ways one might not expect\n. i think it would be better to use the 'normal' time format i.e. hh:mm:ss\n. yup\n. Mistake in edit\n. what jmarshall meant is not if item is const. getfootag is overloaded with a const version which does not, obviously, allocate. thus the need for hasfootag.\n. do you plan on fxing up pap after your endevours? its back to eating a full core..\n. it came in on feb 7 (e28aed30). it's a (new) bug, nothing to worry about, the fix is correct.\n. that code is hit about once per frame ;) it sits in the very inner loop of xbmc, Application.cpp ~ l2958\n. make the parsing use XMLUtils for extra credits.\n. yeh, i was a bit uncertain whether or not to include the refresh bit..\n. i guess somebody is afraid of evil casting games.\n. nothing left here right? reopen if there is.\n. rebase\n. @Montellese tick, tock.\n. see CMusicInfoTag::SetArtist()\n. a gui setting seems a bit excessive to me but i guess there is no way to probe for this..\n. i believe you can use iconv to do the conversion. there should be an utf8-mac charset to use as the source. e.g. http://serverfault.com/questions/397420/converting-utf-8-nfd-filenames-to-utf-8-nfc-in-either-rsync-or-afpdw\n. the. unescaped html as well ronie?\n. yes. still wrong. ronie; you decode into the python encoding. you manipulate, then you encode in the encoding you want to return (utf8)\n. ehrr too early read it backwards. that is fine indeed. though you should still move the strip in principle.\n. a typo fix with a typo in the description. nice\n. wat? z: is not a qualified path. never was, never will be. what do you mean with z: anyways? we don't expect '.' to work on linux, you are asking the same for win32. does not compute.\n. rebase please\n. kill the rfc...\n. @flyingrat, \"apologize\" to popcornmix, all he did was open an issue on his repo. github is responsible for the noise..\n. it isnt very hard to see the problem here. usually windows wants to be a type writer. this logic breaks down when windows wants to pretend it is unix. either the tools need to find some common ground, which was the problem that caused the autocrlf in the first place or you deal with this through some variant of (conditional) prebuild patchery. likely not as a patch but through a call to dos2unix.\n. it is no more changing the source than what git does in the first place.. that is after all what the setting discussed inbhere does... anyways i agree a make that handles it is better. what i didnt get was all the confusion that seemed to be around what was happening.\n. squash + rebase\n. squash check, rebase notcheck\n. i think this pr does more than announced ;)\n. fine by me with requested changes.\n. You are right. I did not read sources carefully. I will try change SECTOR_COUNT value. In a few hours I will test it.\n. Great idea. I will read something about C++ (I know C much better :) ) and try what you suggest. I will test it in 24 h.\n. Now updated the patch as you suggested. It works well on RPi. I will try also on GNU/Linux x86.\n. I think we need a variable that checks if buffer is big enough to store m_iSectorCount sectors - I used old iSectorCount.\nI can imagine any other error while reading audio sectors from cd. If it is not connected with number of sectors we should not change m_iSectorCount value. That's way I did second \"cdio_read_audio_sectors\" and only if it solves the problem m_iSectorCount is lowered.\nDo you think this check is unnecessary? \n. Just checked on GNU/Linux x86 and it works with USB and SATA CD drives.\n. IMO it can not: iSectorCount can be lower than m_isc when buffer is small or reading is near end of the track.In this case m_isc shold not be changed.\n. It is my first time with git. I hope I did squash well :)\n. it should.\n. looks good to me (can't comment on its correctness but i assume it works ;))\n. There is HAS_OMXPLAYER because I wanted to be sure I don't break anything on any other platform than RPi. Tomorrow I will try to play audio CDs using dvdplayer on GNU/Linux PC and than play it with paplayer using dvdfactory... I will write about test results. \nI am not sure if we can give up filesystem/CDDA(...) because when I play CD audio with omxplayer there are log messages from filesystem/CDDAFile. I don't know the exact structure of xbmc but I think it used with dvdplayer.\n. It seems to be ok. Please test the code on other platforms.\n. Corrected pts and dts. I think someone should have a look at DVDDemuxBXA.cpp file. I used that file as example and I think there is the same issue with pts and dts inaccuracy.\n. OK. Than I will paste the same patch for BXA.\n. Sure it does! There is new one in constructor and open inits it via Dispose()\n. The patch works fine on RPi, GNU/Linux, wsoltys said that on win32 also. Anything to do to merge it?\n. I removed some class members. I think these were not necessary. I'm not familiar with git. Should I rebase PR to xbmc/xbmc master or anything else?\n. Just rebased. I hope I did what you meant.\n. Separete commits would be better? I thought it is one improvement = one commit.\n. Today I will try to split the commit. It is great opportunity for me to learn git.\nEdit: I hope commits are perfect now :)\n. looks good. scheduled for may window.\n. There is an inaccuracy connected with storing computation results as double. If my understending is good, there can be timing or synchronization problem during long time playing. As long as AirTunes does not support video there is probably no issue. \nThis bug can be source of problem in other demuxer, which supports video, if someone (like me) takes this one as example.\n. dont set c++11. there i lots more that will break i am sure...\n. ",
    "hudokkow": "Thanks.\n;)\n. Thanks for the tips, guys. I'm not used to git, so it's kinda 'learn as you go' for me.\nIt seems you're not so grumpy after all, spiff. :))\n. ",
    "theuni": "What spiff said. Also, if you're going to submit a request for a few commits, may as well do them all at once.\nThanks for the contributions, and for our first pull requests!\n. I agree with Bob, patching FEH is the way to go.\n. I merged this, but I've cleaned it up first. Please be sure to set autocrlf, that's what caused the file to be rewritten.\nSee here: http://help.github.com/dealing-with-lineendings/\nI also fixed the date before committing. Thanks!\n. I'd rather see them committed individually with some reference to the original commit (though there's no use listing the original commit id), so that we at least quickly see the original intention of the code when browsing the log.\nThanks for this, btw.\n. \"there is still much to do ;)\"\nHow about a TODO to that effect?\n. All looks pretty well isolated and safe to me. Imo it's worth the monkeywork to get the TARGET_ stuff right here before merge so that it can be a good example of how to add new platforms. Shouldn't be much more than a few mindless hours (if that) to do it up nicely.\nNice work!\n. Thanks for the last one.\nI'd still rather see TARGET_FREEBSD everywhere than FreeBSD, since the latter is harder to work with (it may be defined on another bsd, or not defined in another compiler.. who knows).\nBut that and the cosmetics in the configure can wait until after merge, no reason to hold it up.\n. grr, ignore the markup, you know what i mean ;)\n. Thanks for that. First commit updated.\n. Queep: I'll have a look at updated translations. These are tough because strings may have been added/changed since Dharma so they're not simple backports. We would need verification from all translators.\nNote: build/sanity on OSX was verified by amet.\n. Added in two more because I have no spine. Window is really closed now.\nCan I get new acks from osx/win32 devs please?\n. builds/runs fine in linux x64. That is not a technical review :)\n. I think it'd be helpful to have BASE_URL as a global somewhere, for easier drop-in replacement. This would allow for a specific mirror to be used for all deps, local cache, proxied downloads, etc. \n. ok. I'll push it in as soon as 10.1 is packaged, otherwise i'd have to backport due to our packaging scripts/buildbot.\n. Made a few changes and pushed it in as 45b7cd6b054c4f73bd4c35261bb2b395db7980a6.\n. This is NOT a Linux sign-off, but it builds and seems to run ok here.\n. not a code signoff, but builds/runs ok in linux.\n. Build error on Linux x64: https://gist.github.com/898779\n. Nope, creates a new one though ;)\nhttps://gist.github.com/899584\n. Careful, github treats xcode files as binary. I'd say there's a very decent chance they use a custom merge driver. Something like: http://tinyurl.com/4xzxzt5 . Bottom line: I would trust the auto-merge to detect all conflicts except for in files that it does not show diffs on by default.\nThere's a very good chance I'm wrong, just putting it out there.\n. I prefer it this way as well, great job.\nThough, as someone who hates it when my favorite apps are changed for \"no reason\", how much effort/maintenance would be involved in keeping vertical as an option?\nAnd I agree with topfs2, the 'xbmc' logo doesn't belong there. Almost as bad as 'projectm' always insisting on jumping around ;) Nothing wrong with some empty space.\n. Can't speak to the other reqs too much, but definitely +1 here.\n. As discussed on IRC, imo, this is the wrong solution.\n1. We already have a standalone mode for exactly this. It is documented and in-use, the heuristics should simply be tuned to work better. At the very least, the two methods should not be working in parallel.\n2. There is no need for another configuration file. The only exception I can imagine would be for shipping a set of default arch overrides, which would be created by a maintainer or oem (as discussed at devcon). We should not expect users to edit an xml file to get a few basic options correct. Most of the answers should be known at install time (xbmc live install vs Windows install), and the rest can be guessed from how it is run (launched by init script != clicking on desktop icon).\n3. Loading from a users's dir guarantees that we can't ship default options for anything but OSs created for XBMC.\n4. Platform != permissions. If i'm running in a standalone mode, why should one user be permitted to shutdown while the other can't? If the answer is 'permissions', this is the wrong approach.\n5. It seems to only address the confluence skin. It would be bypassed by another skin, web interface, event-clients, etc, no? We certainly shouldn't be at the mercy of add-on devs to control our appliance behavior, though admittedly we currently do, see below.\nTo be clear, I'm not opposed to the goal at all. I believe that it is necessary as well. However, the methodology here is entirely backwards. Let's just get standalone fixed up and be done with it.\n. As I said, I can get onboard with a platform config file, but it should be created by the maintainer/packager and pretty much static...\nWe know that xbmc on IOS is an app and not a shell, so mark the platform as such. This has nothing to do with users or profiles.\nOn Linux, we assume it's an app. If distro/OEM wants to override, a system-wide platform-config is where this belongs.\nOn embedded Linux, in addition to the above, we know that we're cpu/mem bound, so let the mainainer tune these things platform-wide. \nI do see the value in this, but i do not agree with adding another xml file for users to edit and be confused by. Let's think it through and decide where and how it should be used, rather than shoving it in and deciding where it's useful later.\n. Yes, I think we're on the same page. A system-wide xml that is shipped with XBMC. Maintainers would edit this xml for their platform, users would have no need to diddle.\nBy \"tune\" and \"mark\", I meant both in the form of a system xml.\n. That works for me too, with the understanding that the file is not to be modified by users. It should be non-specific to any user or profile.\nIMO it should be out of the reach of those not installing, so /etc/xbmc/platform.xml in Linux and equivalent in other OSs. That will mean xbmc itself is unable to change/reset defaults (non-superuser) , so handled at install instead. That will also serve to keep us from putting stuff in there without consideration.\n. Before going any further, could you explain the use-case here? As I've said, I'm 100% onboard if/when it supports rarv3, but otherwise this feels like a classic xbmc solve-a-problem-that-doesn't-exist feature.\n. I can't see any reason to squash them. With them broken out it would be much easier to: take a control, see where it's marked to always render, revert, and fix it proper.\n. Merged in a different PR\n. Looks fine here in Linux with the include firnsy mentioned.\n. @Voyager-xbmc since you've obviously compiled quite a good amount of test-cases here, would you be interested in working to compile a complete(ish) dummy filesystem that could be used to test future cases? We discuss this every now and then, but it never seems to happen.\nIn short, if we had a reference-filesystem with all of our supported cases and corner-cases, we could use it for regression testing, documentation, etc.\n. Linux needs this one on top to fix ronie's problem. I can't test atm, but I can confirm that Linux builds with all 3 applied. http://pastebin.com/YpKRTJYX\n. Is it possible to make the tests implementation agnostic? Currently they don't build without boost_threads linked.\n. I can't speak for the code (this time much more-so than usual), but this gets a big +1 from me. It seems that boost causes odd problems with uClibc while pthreads work as expected.\n. the first is doable, just not 100% safe due to the lack of xml utils available at sourceforge when running the hooks (which is why I haven't done it yet). I suspect we can do text checks rather safely, but that will mean that all version numbers will have to be triplets. That's probably a good thing, but iirc we have some xbmc.* meta addons that are at 1.0 or so.\nAbout checking for version bumps... the current system was designed to purposely not require a version bump. The thought was that we could do some interim commits without deploying them - realistically this has never happened and I would have no problem with changing that around. BUT, for binary addons we will likely (as @cptspiff and I recently discussed) rely on this behavior. We'll commit without bumping the version number, and when all builders go green we'll bump. So we'll probably need to keep the current usage as-is.\n. imo a gui setting here is surely overkill. make it % by default as that's easy to understand, db in an advancedsetting if absolutely necessary.\n. Yea, I spoke too soon. I was thinking we had always shown percent. So +1 from me as well for keeping it how it's always been.\n. commit --amend only changes the commit message.\n'git reset HEAD~1' would undo the commit leaving the changes in place. You would then remove the lines and re-commit.\n. not speaking for the code, but the images above are very nice, and are a massive improvement from what we have now, so +1 from me\n. +1 from me. Tested on very slow hardware. Several anims, especially simultaneous ones, are noticeably smoother.\n. I should probably mention the exact causes for this change.\nA few cases: lib/vgmstream, lib/libUPnP, xbmc/threads/\nAs an example, xbmc/threads/Makefile contains:\nSRCS=Atomics.cpp \\\n     Event.cpp \\\n     LockFree.cpp \\\n     Thread.cpp \\\n     SystemClock.cpp \\\n     platform/Implementation.cpp\nIn this case, Implementation.d would wrongly be copied to xbmc/threads/Implementation.d, meaning that the cp will fail when trying to find xbmc/threads/platform/Implementation.d\n. Builds and passes basic sanity check in Linux. Nice work!\n. Looks fine to me too, though I still don't see why this isn't just set in configure.in or system.h like everything else?\n. If you don't have one of those defined, pretty sure build would bomb way before getting to threading anyway.\n. Updated to reflect davilla's concerns\n. @arnova: you're going to want to ask @jmarshallnz. The other jmarshall only helps with buildsystem problems ;)\n. Well silently fail was not one of the options here ;) Did you mean silently disable functionality? I'm not following your reasoning.\nAs you said, those libs are not needed on some embedded platforms, so we need a way to build without them, hence this PR. We either need to explicitly disable them, or skip them when not found.\n. @davilla: Could I have your ack that osx build works ok with this? Or you just want to fix it up after?\nEither way, I'll remove the osx filter for rsxs so that it continues to build there.\n. Ok, I've updated this and I'm happy with it now. I'm ready to merge, but master is currently broken due to 448cc130. I'll push it in once we are building again, unless someone beats me to it.\n@davilla: Please be sure to check out rsxs. I'm not sure how (or if) it's supposed to be configuring.\n. I can test this for GLES+Linux and help with the necessary modifications to get it running. Though since we don't have any major GLES+Linux targets at the moment, I don't see any reason to hold on that.\nNice work!\n. If there are no issues I'll be pushing this in later today.\n. Committed manually in 9592c126.\n. I have no problem with this going in, but imo \"other devs can make it work on other OSs\" isn't the way this should go.\nCan we at least get a plan for linux/win32 support?\nI can help out with Linux. Have we been in touch with upstream about packaging for distros?\n. @Memphiz Yikes, there's lots going on there. I'll have to do some dep-walking to see which of those we already include, I suspect we already have them all as build-deps, other than afpfs-ng ofcourse.\nI'm still very much against depending on a lib that has no upstream, as that just means we'll have to carry it. But I seem to be the minority there...\n. @davilla I don't see any distros that provide afpfs-ng, otherwise I wouldn't complain. This would be a big headache to get into ppa/Live builds.\n. Yes, please.\n. Scripts break all the time when something they use changes. If a script depends on a website that changes its content, it's marked as broken until it's resolved or deleted.\n. Sounds good to me, anything to rip out cximage. But beware, cximage uses libjpeg too. It's the overhead of the lib itself that causes the slowdown.\n. I asked @topfs2 quickly on IRC if imagemagick would be a possibility:\n\" well as I said I think magick is a no-go on windows\"\nIf we can abstract this away in the future with some cross-platform lib that doesn't sacrifice too much speed, you certainly have my blessing to revert this. But for now, the gains are too big to pass up. And since we're not introducing any new dependencies, I don't think it can hurt.\n. Pushed in b8b6eecd.\n. Linux uses system libass.\n. I tried to come up with a way to split this up for easier review, but it really only makes sense in one chunk.\nThe changes are quite un-invasive to the rest of the codebase.\n. Letting this die. While it is interesting as a concept, this would bring in no additional hardware support at the moment.\nMuch more interesting would be skipping the dfb layer and using mesa+kms directly. See here: http://virtuousgeek.org/blog/index.php/jbarnes/2011/10/31/writing_stanalone_programs_with_egl_and_\n. Heh, fixing x86 is out of my league I'm afraid.\nAs for the tests.. sure. Is anything needed to hook them up?\n. Ok, the python stuff can be removed as they can be influenced with env vars. That leaves the implementation clean.\nI'll be pushing this in soon unless there are any other complaints.\n. Closing this, it'll come as part of a bigger refactor.\n. In the interests of time, I've pushed the uncontroversial stuff into master. I think there are several things that should be cleaned up, but we need the basics in so that we can all be looking at the same thing. Closing this.\n. untested/unverified, but +1 as a relevant bugfix assuming no known regressions.\n. Thanks ronie (this was my request). I'll give this a try asap and let you know my results. Imo a best guess is better than nothing.\nThe only concern is whether users will complain about their IP being used for geolocation without permission. While we know that's utter nonsense (their ip is obviously known any time they request weather info), this is purely a perception issue.\n. I'll stay out of the technical discussion here, but let's please not even consider merging this until Eden is out the door. This would make backporting anything else very difficult.\n. Grr, sorry, wrong button.\n. Wow, yikes. -1 from me.\nThat's a big patch, and libpng is a pretty core dep. Additionally, I don't see 1.5 is any of the major distros. Looks like a patch gentoo should carry imo.\nFor master, we HAVE to ditch cximage once and for all for Frodo anyway.\n. I have no problem with supporting 1.5, my concern is that it could affect <1.5. Many of the changes aren't straight ifdefs, but introduce new code for non-1.5 users (even if it should be functionally equal).\nIf you vouch for the code, I won't stand in your way. I just don't like seeing such a big change at this point (for Eden) that will only benefit a handful of users.\n. I'm not a fan of this for a few reasons:\n1, I'm planning to hook up a native jpeg encoder similar to the new decoder so we can ditch cximage for jpegs altogether.\n2, With #1, we can use dct coefs for scaling with libjpeg-turbo svn, or jpeg-8c. This means nearly instant-decode, possibly no need to keep thumbs at all for local files.\nThat said, the change is minimal and exif thumbs could be hooked up for the new encoder, so really no harm in doing this as a stop-gap.\n. Whoops, seems I already wrote the scaling part. It's like finding $20 in your pocket :)\nhttps://github.com/theuni/xbmc/commits/jpeg-scale-as-needed\nWith that, we can skip thumbnail generation for local jpeg files.\n. It won't go into eden for sure, I'm waiting for Eden release before pushing it into master.\nWorking on an encoder now.\n. It won't make it into Eden anyway as we're feature-frozen. So my hesitance is on including something for Frodo that will be obsoleted by the time Frodo is released, which obviously makes no sense. No issues with your patch/approach ofcourse.\nMy preference would be to get the encoder and the scaling in, and see where we are after that. I'm writing the encoder this very hour.\n. There's no need to use the exif thumb for such big pictures.. We already select a dct coef that's just bigger than the viewport, so you're likely only decoding just over 1920x1080 anyway. That made it into eden, you should already see a huge boost there. In fact, i wouldn't be surprised if those are 10x faster than Dharma.\nI have the jpg encoder done locally. Just a few issues to clear up (orientation and rescaling), then I'll push to my repo for you to try out.\n. Damn, just realized that the thumbnailer doesn't use the new libjpeg path. So you won't see that increase in Dharma. So... good news/bad news: There's a huge boost to be had, but it won't make it in for Dharma.\nI have this fixed locally, it will be included in the encoder work.\n. Give this branch a shot: https://github.com/theuni/xbmc/commits/jpeg-optim\nIt uses some sneaky jpeg tricks to avoid pixel operations entirely. As a result, thumbs aren't 512x512, but a best-guess as to a good size based on the source jpeg. Pretty damn slick imo, but it will need some real-world testing.\nIt's hooked up everywhere but the slideshow/screensaver.\nYou'll want to nuke your local thumbs and image database to be sure that new ones are generated.\n. Your ifdef fix is correct. I forgot about it as I'm using libjpeg6.\nStrange. Could you please paste a long from your thumb generation run? You should see lots of \"image size: x,y, only decoding x2,y2\".\nActually, please start a forum thread with your log and link it here. This has turned into more of a discussion than a pull request :)\n. Aha, I see it. The current check is (accidentally) case sensitive. That also explains why a random few of my files showed no performance increase ;)\nWoah, we do the same thing in Texture.cpp. now that IS a bug that should be fixed for Eden.\nI've pushed a fix. Please re-test and continue at the forum.\n. Disregard. I'm getting on my own nerves, even. .Equals() is case insensitive. Will wait to see your log.\n. Would be nice if a test could be added as well, as I'm sure this will come up again if we decide to shop around xml parsers. Just a dummy function to load/parse/output those specific cases would be very helpful down the road.\n. Grr, that braindead mysql_config is hell for cross. That means you need your staging rootfs in PATH. But this PR doesn't change that, just a general rant.\n+1 for the buildsystem approach, much easier to see what's going on.\n. all modules are built-in static, including ctypes.\n. Think twice about this one. It touches all? files, that will make some post-eden merges more difficult. Git will handle it no problem, but it will introduce some \"do you want the modified copy or deleted copy?\" issues.\nSecondly, we might consider updating our copyright years while we're at it.\n. That wasn't a -1 btw, just a thought.\n. I certainly can't vouch for all of it, but it contains several fixes I have locally and addresses lots of stupids we've been doing for far too long. The whole point of this cycle is to introduce bugs anyway, no ;) ?\nSigned-off-by: theuni theuni-nospam-@xbmc.org\n. Also, any reason (other than avoiding a copy) for not using .Trim() rather than reimplementing?\n. Submodules have many helpful uses, but they are a big pain in the ass. They're incredibly confusing at first, so it would mean confusion for everyone building XBMC.\nIf we move that way, we can turn all of our externals into submodules, and get rid of anything that's not ours. That would be really nice.\nSo.. imo it's all or nothing. If we flip the switch and deal with the pain, we may as well do it everywhere else we can.\n. @elupus the hash that the submodules point at won't be in xbmc, it'll be in the child repo. And it means the extra step of updating that repo any time the submodule is bumped. No big deal ofc, but something else to have to coach people through.\n. that one was done manually. from now on, they'll be alongside nightly builds. last night's was the first to run successfully: http://mirrors.xbmc.org/nightlies/win32/\n. seeing as we've never really used point versions (except for 10.1 which would fall under the same category), seems like they'd fit the bill to me? If so, I can't think of any changes needed here.\n. Yea, I meant what @malard said. Point-releases per merge window, full releases get a major bump.\n. So I guess these should be 11.1 then. How much confidence to we have in this for the first go at it? :p\n. @Memphiz ios wasn't bumped in master, only in Eden. It was released as 11.0.\nSee here: https://github.com/xbmc/xbmc/commit/04d4066d2f6ea573aa365a030816329b0006253b\n. Updated for 11.1, and got configure.in which i missed the first time.\nI think this is the most sane way to go. We can always change our minds and bump to 12.0 later if needed, but we can't go backwards.\n. I would personally prefer not to have Alpha or Beta vesions floating around if there's not actually a release schedule planned yet. Alpha/Beta/RC have meaning to people, and will get reported on whether they match what we're doing or not.\nMy primary reason for using .1 rather than .alpha was related to sorting. Typically, non-numerical version-sorting is frowned upon by packagers. Though, we're free to call the thing whatever we want. just because it's xbmc-12-foo^bar~ doesn't mean we have to refer to it that way.\nA few models to consider:\n- The linux kernel uses X.0-rcY notation, until the rc is dropped. In our case, that would mean 12.0-rc1 would be entirely unstable, where 12.0 is the final stable in the series. The number of rc's is variable and somewhat random, for us each would represent a merge window\n- Many libs will use 11.9.x.y to mean pre-12.0. 11.9.0 could mean the first merge window in the cycle, 11.9.1 would be the second window, etc until 12.0 for the final release.\nI'm rather partial to the first, myself. I realize I've contradicted myself by simultaneously saying we shouldn't arbitrarily be calling live dev branches alpha/beta/rc, but it seems to work quite well for Linux. Ofcourse the difference for us is that we'll have multiple windows per stable release. Tbh I really have no solution there...\n. Ok, after a discussion on irc, I think we've come to a consensus with using -alpha notation for the merge windows. Green it is ;)\nWe'll call our current dev 12.0-alpha1, It will become 12.0-alpha2 when the next merge window opens. This allows for a 12.0 rcX stage before final 12.0 stable release.\nI had to go with 11.9.x for the places where \"alpha\" can't be used (addon.xml and configure.in). As these are not user-facing, I don't see any problems with that.\nI'm planning to push this in tomorrow.\n. Looks like those haven't been bumped in a while, I'm assuming they define the application metadata in file/properties?\nFixed either way.\n. Seems reasonable to assume that if one dimension is given, the image is scaled to that and a/r is preserved, if both are given, it is squished to match those dimensions. This is how it's worked in most cms's i've dealt with, anyway.\nThough I agree with the above comments. Clients are likely to be much more efficient at dealing with these images than we are since only they know the real end-result. And it's quite likely that they'll have to scale either way, so we should avoid doing it on the client+server sides.\nThis would be especially rough on embedded hardware, as it may decode the image in hardware with no means to scale, so it would result in an incredibly slow software decode+scale path rather than just sending the thumb it's already had to (painfully) make already. See rpi as a prime example here.\n. If we're going to do geoip lookups, we need to provide them ourselves rather than relying on some 3rd party site to stay up and fulfill the requests AND not get pissed at us in the process. This has bitten us more than once before.\n. As it wasn't apparent in my tone above..\nWe should be able to handle this easily enough. Addon downloads already do geoip lookups in order to forward to the closest mirror, we'd just need to add a quick function to expose that functionality externally.\n. got our own setup: http://geoip.xbmc.org/json/\nI think that's all that's needed?\n. Ok, added. But the results are pretty poor.\nCompare the free results: https://www.maxmind.com/app/lookup_city?type=geolite\nto the commercial ones: http://www.maxmind.com/app/mylocation\n. Big -1 for this. The negative implications far outweigh the benefit. We managed this long with no geo-ip at at all, and we expose it now as a reasonable default, not an absolute.\nClassic feature creep imo.\n. agreed.\n. Thanks for the quick review. Will squash and push.\n. I'm really not sure that this is the way to go here. Compare to https://github.com/xbmc/xbmc/pull/214\nWith a headless xbmc, you don't get much. But by using xbmc as a lib and being able to create a server around it, you could add lots of functionality that we would never want in mainline.\n. well, the idea would be to start breaking breaking stuff out of Application.cpp and into a \"services\" class.\nSo then you would have an application that includes xbmc's \"services\" header, starts those services, then does whatever else it needs to do. So there would be no duplication, it would be running the same code as the desktop binary.\nI'm not opposed to the headless idea, but it does seem to conflict with the notion of having a libxbmc for similar functionality. So I just want to be sure we think it through before going either route.\n. I've pushed a branch that's updated for master. I'll get it cleaned up and working this week.\nhttps://github.com/theuni/xbmc/tree/shared-lib\n. Well it's not an issue of getting it done, clearly the headless approach works. The issue is that once it goes in we have to support it. And indeed a server-mode is a big deal. Think of all the new-functionality requests we'll get and have to add to xbmc, for a short-term solution.\nBut rather than stalling for the future's sake, I'm working on getting something done up that resembles the current functionality here, but done in a lib-way.\n. Additionally, looking closer at the changes here...\nMost of the things that are special-cased for server mode should instead just not be compiled in. For ex, X, SDL, peripherals, etc.. Otherwise we still end up with tons of deps.. unsuitable for installing in places where this would be the most helpful.\n. Ok, I've pushed some changes that do this using xbmc as a lib, while keeping the spirit of this PR. See my branch here: https://github.com/theuni/xbmc/tree/shared-lib\nAt the moment, it basically functions as @vajonam's headless binary would. The difference is that it is actually only a tiny stub application, that calls into libxbmc and blocks there. See here: https://github.com/theuni/xbmc/blob/shared-lib/xbmc/xbmc_headless.cpp for the example.\nSo it's very uninteresting in its current form. But. If we go this route, we can begin splitting things out into more reasonable chunks. For example, you may want a binary that does nothing more than serves XBMC's webinterface. In that case, a huge chunk of system libs could be removed, leaving you with a clean unit-testable application, or functional server.\nThe work isn't too bad, it mainly entails pulling Application::Create() and Application::Initialize apart and exposing the bits that start services to xbmc.h. Then, it would be dead-simple to create an application that just starts a few of our services and waits.\nI think this also lends itself towards @jimfcarroll's world-domination plans, as iirc he was looking to nuke CApplication altogether.\n. Most credit for the above belongs to @dbrobins btw. I'll be sure to mention that in the commits if we go this way.\n. Wow, what a helpful response. You know we're supposed to be nerds with monstrous egos, right? :p\nHere's how this really went. I have been meaning to get the lib concept into shape for quite a while. You guys came along with something that conflicted with it, so I had no choice but to do my part or shut up and let it go a different direction. So in that way, you definitely got things rolling.\nAll I've done so far is to get things building in a way that facilitates running headless. I created a stub app (xbmc_headless.bin) and verified that it runs the webserver.\nThe todo's mainly look like this:\n- Verify that the reorg in Application.cpp didn't break anything in the desktop usage of XBMC. @jmarshallnz had some valid concerns. This needs to happen first as we can't pull it in if it's breaking stuff.\n- Verify that server stuff actually works. There are bound to be some things that rely on the GUI being present. I don't know how to find these problems other than just hitting them during use.\n- Begin breaking things out into xbmc.h. Again, the hope is that run_xbmc() could go away, and the headless app could just launch individual services instead.\nI could use some help with all of the above. I'd guess that the third probably won't be done until it hits mainline.\nTo help, just merge my branch, commit with --enable-shared-lib on or off, and start hacking.\nI suppose I'll do some github cleanup. Will close this PR as well as the other, and do mine as an RFC. That will make it easier to discuss.\nThanks for the help!\n. @xbmcfanboy what OS are you running? I meant ./configure with --enable-shared-lib\nI will need to discuss with the others, but I'd be ok with merging this in as soon as we could verify that the current functionality works as intended without breaking mainline. It's obviously a popular feature.\n@blades: Thanks, I'll have a look at those. I'd much rather remove those dependencies on the gui than work around them, but I'm not sure what work is involved there yet.\n@vajonam forum probably makes the most sense. \n. I've taken a stab at fixing the scan+gui dependency here: https://github.com/xbmc/xbmc/pull/916. That will mean we won't need those hacks for allowing certain windows to be created. As I mentioned above, I'd prefer to fix any of those dependencies rather than just working around them.\nOnce we get that into mainline (assuming it works!), I'll rebase my lib work and do a new PR. We can begin testing/discussing then.\n. Closing this in favor of https://github.com/xbmc/xbmc/pull/1049\n. It wasn't missed, I was just never really happy with it. I'll see if i can get it cleaned up enough (though maybe slimmed down a bit) for October.\n. Yea, this will come in the Sigma merge for Frodo+1.\n. I can already see this is going to be a long discussion. But I hope we can keep this about the removal implementation itself. If in the end it's nixed, I can live with that.\nThe issue is that these libs (ffmpeg in this case) are poisonous to attorneys. So details like how they're built, what's included, what features are enabled, etc. are irrelevant. Obviously there are many ways to disable offending codecs/implementations, but the core issue here is that they need to be disabled wholesale. Please review with that in mind.\nThink of hardware like the raspberry pi, which may be perfect for a tiny, cheap, streaming device. As all playback is handled in hardware, and it is not powerful enough to do in software anyway, the sw decoders are only a liability.\n. Also, in case it's not obvious, this won't be the default, and nothing about the way we build/release will change.\n. Swscale is guilty by association. It's part of the ffmpeg source, so tainted in that respect.\nAlso consider that if ffmpeg isn't needed, there's likely some way to scale in hardware. That's been the case everywhere I've played, anyway.\n. it all starts to run together after a reading a few, but no complaints on first pass.\n. I agree with @JezzX, but I definitely see the value in this as well. I think it could be solved by making the as.xml setting a size limit rather than bool. We can then set reasonable defaults (say 10mb on embedded, 50mb otherwise?) for various platforms.\n. I agree with @JezzX, but I definitely see the value in this as well. I think it could be solved by making the as.xml setting a size limit rather than bool. We can then set reasonable defaults (say 10mb on embedded, 50mb otherwise?) for various platforms.\n. I just did a few tests with confluence.\nRaw argb: 27mb\nargb+lzo'd textures: 4.1mb\nraw argb, lzo'd whole structure: 4.0mb\nThere's really not much advantage in storing the thing as a whole, so I would agree that caching individual images is the way to go, especially since, as you mentioned, it gives us the ability to prioritize.\n. Though it should also be noted that if we ever get texture atlasing done, we'd want the opposite.\n. @huceke I think what jm meant is that when you load the whole thing into mem, we still have to un-lzo before we upload to gpu, so at any point you could actually have 3 copies of a texture in mem.\n. Texture atlases have pretty much every advantage here (remember that they'll likely use less gpu mem due to the fact that textures are usually stored implicitly as POT) , so the question to ask imo is whether we should add this in as a stop-gap. I have no problem with that, as it will already get us working towards some answers for atlasing anyway, like the question of how to rank, and what are good mem defaults.\n. I can't comment on the implementation, but +1 on the idea for sure.\n. I just double-checked as well. trust, but verify ;)\nLooks ok to me.\n. @jmarshallnz that's certainly less than ideal behavior imo. I'll see if I can find the courage to dive back into the jobqueue code. Unrelated to this PR of course.\n. I was speaking in terms of this PR, so only cancel before fetching if we're already paused.\nThat way if you nav around a bit during playback, you're not bombarded with a bunch of queued (stale) jobs when finished. Can you think of a reason that would be desirable?\nI presume we'd already start thumbing again in the current dir after playback finished either way.\n. Thanks. Win32/OSX patches included. Squashed down and ready to go.\n. Thanks for the rundown, I'll have a look\n. From a quick grep, it appears as though that control is disabled and we're just using it to keep the current screen number. I don't see it being used as a ceiling anywhere. As a quick fix, it should be enough to change g_Windowing.GetNumScreens() to INT_MAX. It's a hack, but imo it's pretty hackish as it is now to be storing that kind of thing in a hidden control.\n. Yea, had another look. Not sure what lead me to believe it was hidden. Though I still think that changing it to a big number is \"safe\", it's certainly no real solution.\nI'll push a quck-fix tomorrow changing this to 32 or so so that nightly builds won't stay borked. Will come up with a proper fix and do a PR after that.\n. Please don't use github for bugs. We only use issues internally for pull request management.\nThat being said, thanks for bringing it up. I know for a fact that linux uses the system lib, and I believe osx/ios/etc do as well. But it looks like Windows doesn't have a build-dep for png, so they very well may be using this internal one.\n. Failed to mention.. it would be appreciated if you could create a ticket at trac.xbmc.org so this doesn't get lost.\n. nice work! can't comment on the code, though I applaud the effort.\n. agreed with @Schischu on the need for this. Unfortunately, mysqlclient is part of the mysql build. Not that you have to install mysqld ofcourse, but having to build the whole thing can be cumbersome on obscure platforms.\nAs for squashing, yes.. do an interactive rebase and change efa4953 from 'keep' to 'fixup'.\n. Looks good to me. Queued for July merge.\nThanks!\n. Pushed manually with 2d79579adf92fbe53a1b5c148348bed7e5ba21d3\nI changed a few things around and squashed back down, otherwise we would've had some broken revisions.\n@Schischu I wanted to be sure your name was on the commit, so let's hope I didn't introduce any breakage that will henceforth be attributed to you :p\n. Much of this could be helpful for other things, not just texturepacker (anything the builder needs built). Why not make it a --with-build-prefix?\nUse of HOST_* is very confusing, as HOST typically means the cross target. I suggest switching to CC_FOR_BUILD and CXX_FOR_BUILD, BUILD_CFLAGS, BUILD_CXXFLAGS as these are common in other cross builds. Same goes for other usage of HOST*\n. -lpthreads and -lrt will vary by platform. These should inherit from values found by xbmc's configure.\n-Please don't execute ./testMain from the makefile. By definition, cross can't do that.\n-Please make the gcheck build optional with a --with-tests. I can't tell you how frustrating it is when a program fails to build because the tests can't build (happens all the time on cross).\n. @amejia1 yes, but it's configured all the time. I don't want xbmc to fail to configure/compile on some obscure arch simply because gcheck can't configure (fyi it looks like that would be exactly the case atm for freebsd due to -lpthreads). That happens to probably 1/3 of our arm deps, and it's infuriating. We have to patch each one.\nIf 'make check' is going to run the application, please verify that it's not a cross build first. We'll have no luck running an arm binary on an x86 machine.\n. and btw, 'this is how autotools does it' isn't the best argument when it comes to cross ;)\n. @amejia1: I've commented on those commits.\n. @amejia1 the rebasing makes it hard to see what's changed. I really suggest that you push commits on top of the current work, then rebase at the end.\nAnyway. If the configure is done with the same flags as ours, it should be fine.\n. We decided quite a while back that glesv1 wouldn't be supported in mainline. Is there v2 path forward? It'd be a pretty hard sell imo to add the support burden of such an outdated spec.\n. Well, beyond the fixed-function pipeline problem, there's also the fact that glesv1 devices are quite unlikely to keep up with the demand of rendering our gui. But I'll wait to see some numbers.\nAs for video decode, we have a 'bypass mode' flag in the gles renderer for decoders that handle their own presentation on a separate plane.\n. Not my area of code to comment on, but kudos on splitting out the whitespace. That makes all the difference for review.\n. If a new wrapped lib would be required with 1.7, imo we should hold off until 1.8. As this would be a non-optional lib, building our own version of an in-repo lib seems overly risky.\n. No, the issue is that Linux end-users depend on their repository packages to supply what they need. And many distros (Ubuntu included) forbid one package to include another lib. So this would mean that Ubuntu users could only install from the first Ubuntu version where 1.8 was packaged.\n. I gave it a really quick hack for linux/android. The android download path needs to be fixed once a lib is uploaded to the mirrors.\nThere's also a quick hack for smb that I didn't look into. It's a start...\nhttps://github.com/theuni/xbmc/commits/taglib\ngit@github.com:theuni/xbmc.git\n. Also, in case it's not 100% clear, all I did here was slash/burn until it built. It's received zero testing, but it does successfully build.\n. Please be sure that android/darwin/windows/etc are all pulling from mirrors, and pulling the same version.\nAlso, as we've discussed on IRC, the smbfile implementation in 62373e932947010bb33234a286b6b10f72bc2a70 is no good as-is. That forces core to gplv3 which is a major issue. That's absolutely a blocker for merge.\nWhat are the options for workaround?\n. @cptspiff i could swear that wasn't there when i read it...\n. yes, #1089 is slated for this window, I plan to pull it in tomorrow. Thanks for the effort though :)\n. Same thing accomplished with 2d79579adf92fbe53a1b5c148348bed7e5ba21d3 from #1089. Thanks though.\n. Nice! Drop it from the tallest building... :)\n(Only glanced through it, not qualified to comment on the X stuff)\n. @elupus worth mentioning that i'm in the middle of a complete rewrite for egl, which will be followed by a rewrite of rendering. The goal is to get a clean abstraction where everything is dynamic as possible, meaning that you could run the same binary on X, wayland, fbdev, etc, and switch between gl/gles/directfb/etc all on the fly.\nI'm getting reasonably far along, I'll push it up somewhere once it runs on a few platforms.\nI don't think it's directly relevant here (except for the egl+X case), but I figured I'd throw it out there.\n. Whew, I wrote my comment, then like a genius hit the green 'merge pull request' button. Thanks for making me verify, Github!\n. Yikes. If we're going to do this, imo we need an \"allow remote computers to alter my files\" setting.\nI'm sure this wouldn't be the only offender, but seems like a good time to start a trend.\n. Yep, a setting.\nThe client/server trust thing isn't the only problem. I have tons of media on my server. I don't want plugins to be able to delete them. Not out of malice.. bugs happen. It's the same reason i mount my server read-only.\n. I have this exact fix in another branch somewhere, will check to see if we did it the same way\n. Hm, nevermind. Slightly different. Mine was for defaulting to the first valid control if the default is disabled. Will do a PR for that one after this is resolved, if it's still an issue.\n. @Memphiz thanks for review. Mind giving the exact sed line that works on osx?\n. All of the above nags have been fixed. Many of them were simply reverted or ifdef'd away. These things can be addressed one-by-one in mainline much easier than they can when they live in another tree, so punt til then.\nEverything should be 100% (I hope) on all platforms now, with the exception of EGL+non-android, which will be fixed up post-merge.\nI'm ready to squash down and shove in. If I get sign-offs from the platform guys, I'll do it Tues. Otherwise I'm away for a few days and will do it Thurs/Fri.\n. blah, fixed. thanks.\n. Probably only squish would've been enabled before because it's used for texturepacker, which is run at build-time rather than run-time. However, 2 copies are usually built, one for each (for other platforms, unsure if win32 does the same). If the runtime side was already built with sse2, then we've had that hw dependency for a long time and there's not much need to discuss it. If not, we'll have to discuss what hw we'd be dropping.\nAs for the others, as @jmarshallnz has been saying, please provide some benches so we can properly weigh the pros/cons here.\n. @wsoltys if squish has already been SSE2, imo we're safe to enable it all over the show since non-compatibile hardware would've already been breaking on xbt load.\nThough I'll admit I'm unfamiliar with the dx side of things. Afaik libsquish will only be used to unpack a dxt? texture if the gpu can't do it natively. I suppose it's possible that in the win32 world that's never the case and the libsquish unpack is only hit in the dds case\n. Please don't use github for bugs, we currently only use the issues for tracking pull requests. Please file a ticket at trac or start a discussion on the forum instead.\nThat being said, this smells like fallout from the android merge. I'll have a look.\n. Thanks for cleaning up my mess.\n. We now have amlplayer and soon to have omxplayer, which means that it's possible to build/distribute xbmc without a trace of ffmpeg. To some this is a big feature due to license/patent/voodoo concerns.\n. @elupus @bobo1on1 ping. \n@gbeauchesne I gave it a really quick look through, let's see what the others have to say.\n. Yea, I'm much happier with that\n. no worries, that's normal when you squash down.. you did it just right.\nThanks for making those changes. Looks good to me for September window.\n. You actually have tested a 2.3.0 device where this is the case?\n. @t-nelson I'll do that as part of a later general cleanup of it, yea.\n. @elupus the issue is that addon author might specify dvdplayer, because that's where it plays best. but on pivos/rpi, it needs to be routed to the hardware player.\nWe have tons of logic in playercorefactory for deciding the right player to use. It's senseless to leave it up to the addon.\n. @amet: of course, that's exactly what this commit does. The player it set to auto, platform uses the default player to play it. on desktop, that'd be dvdplayer. on embedded, it'd be the hardware player.\nI really don't understand the controversy here. All we're doing is ignoring the setting, and using AUTO instead. Desktop users will see zero change.\n. Hesitant bump. We need some decision on this. Imo upnp devices and other future things should be left out of the argument and hash them out as they come in.\n@jmarshallnz how would you propose validating?\n. @jmarshallnz sight unseen, I'll buy you a sixer for any addon you can find in the repo with a legitimate need for specifying any player that it's specifying.\nImo you're asssuming a need here when there's no need. As I see it currently, it's an option that's exposed that can only break things.\n. Reasonable as always, I'll accept that as a fair criteria and report back.\n. What he said. We'll need support for on-the-fly playback of uncompressed rar sets before this can go in.\nNice work though! I really hope ^^ can be worked, out, I'd love to see this go in.\n. @cptspiff: any aversion to this? Asking you as a build-system guy, not the gate-keeper :p\nI would've quickly pulled the trigger after two thumbs-up, but as this has potential to break build, I'd rather get yours as well.\n. We don't want boost.random, our current boost usage is header-only, and we need to keep it that way.\nI actually prefer fape's proposal, but tweaked a bit. We already need the crystax ndk to build, and I've had the suspicion for a while that we'd need to modify it eventually. Looks like this is it. In fact.. one of our deps (samba maybe?) I've already had to hack to bypass rand_r.\nEdit: Posted a request for crystax, maybe we can avoid forking for now. See here: http://www.crystax.net/trac/ndk/ticket/102\nUntil then, I'm ok with adding it the same way we added getdelim.\n. Update: see above link, crystax will add rand_r for the next release. I'm going to create a ticket for getdelim as well.\nFor now, I added a local version in 92e2a05fc358092faf66c75c4fd8b9792f573298.\nThanks all.\n. @elupus switched to references. went ahead and squashed it down since there was no other code discussion.\n. ping @huceke . Reminder to fill these in for rpi :)\n. No library bump needed?\n. I saw that there was no db change, but it looked as though the data would be extracted differently before vs after. I see now that it has nothing to do with the db, so just ignore.\n. @pieh the last few also address the window reloading in a much cleaner (imo) way. Any input there would be appreciated.\nIn case it's not obvious, we destroy the window and skip the render loop until we recreate it. That way we don't burn the cpu while we're backgrounded.\n. @Montellese With this in, we can make the changes we discussed to get the app rolling before we have a window. Just in case you felt like poking around in there :)\n. @gimli: please elaborate. But first, take a good, close look at how the nativewindow is defined in eglplatform.h.\n. @huceke notice that android follows the same paths.. recreating the native window on reconstruction, not destroying the initial context, etc. it all should 'just work' by plugging in the required info.\nI'll break out the pi if i have to.. don't make me ;)\n. that needs to move to render creation and destruction. rendering != windowing :)\n. I've updated this as @huceke and I discussed, with the implementations holding the nativewindow/nativedisplay. It was a pretty major rewrite, so I've just pushed a new rebase.\nI addressed all of your comments except for a few cosmetic ones which make other things I'm working on more difficult to merge.\n@huceke: I've done my best to adapt what you gave me, though I'm sure it will need some help. I've verified that it builds, but that's all. I've added the doxy, so maybe that will make things a bit more clear.\nWould still really like to get this in for october. It's all-consuming trying to keep it up to date across 3 platforms that are all rough to build/test.\n. @huceke ping. This includes your stuff.\nSquashing and hitting the button today unless anyone objects.\n. ehm, are we too cool for AC_CHECK_PROGS?\n. (or AC_PATH_PROGS)\n. Might be worth noting that ios events are sent as joystick events. Unsure if that is relevant at all.\n. @Memphiz See here for the changes needed on the pvr-side to get this rolling: https://github.com/opdenkamp/xbmc-pvr-addons/pull/52\nFor the XBMC side, I took your PR and changed it up a bit to get things into the right places: https://github.com/theuni/xbmc/commits/android-pvr\n. Yea, need to bump the version to after the merge on the pvr side.\n@fape this doesn't include any work needed to actually get them loaded, this is just build/install.\n. I've had a look at the pvr addons, and it seems as though they should load without having to go through a wrapped soloader (whew!). This is because pvr addons build everything in static, and only link to base system libs.\nThe immediate problem will be finding the addons. We can install to 2 places: system libs and profile. If we ship addons with the default apk, which we almost certainly will, they'll need to be installed in lib/$platform/ in the apk. This is an android-ism and is necessary to ensure that we don't break multi-platform. This PR handles that already. \nHowever, the PVR addons expect to find the lib in the same directory as the addon.xml and the rest. For user-installed binary addons (down the road) that will be fine, as there's no concern of multi-arch when we're already installed. But for pre-packaged addons, we'll have to add an android case to look for them in the right place. The trick here is actually to NOT give it a path. So rather than loading \"foo/bar/libaddon.so\", we just need to load \"libaddon.so\".\n. There's one more Android gotcha. The reasonable thing would be to try to load from the addon dir first, and if it's not found, load it without a path. However, due to bionic fun, if you try to load foo/libaddon.so and it fails, you can never load libaddon.so for the life of the program, even if it would now succeed. Bionic caches dlopen failures.\nSo we need to be sure to stat first and verify that the file exists before trying to load it.\n. @elupus xbmc/android/loader ;)\nIn this case it will need to be in the pvr addons as they're trying to dlopen the other addons, so our in-xbmc wrapper doesn't do us any good. And if the wrapper would do nothing more than a quick stat before open, I don't see any reason to abstract that out as it's not a bad sanity check for other platforms as well I'd think?\n. On second thought, I'm not sure if this is what you meant, but an actual __wrap_dlopen could be nicer than messing with the default paths. I'll experiment a bit, thanks for the advice.\n. @mikrohard no, it'll work fine that way, but it's not in fitting with how android uses libs, and it'll cause the libs to be cached, so we're better off storing them in lib/$platform in the apk.\n. I've created a PR on the addons side that fixes the path issues: https://github.com/opdenkamp/xbmc-pvr-addons/pull/64\nI've also rewritten the Makefile to be much friendlier.\nI'm going to close this PR and open a new one with the rebased changes. However, it will need to wait until the above change is in the PVR repo.\nThanks for getting this rolling @memphiz!\n. I looked through this yesterday and nothing jumped out, but i'm not familiar enough with ripping or jobs to be of much use on reviewing the logic of the change.\n. That's all it took? nice :)\n. If the sink knows that it is (or should be) suspended, it will know much better what to do when idle.\nI'd really like to see this logic dropped out of the engine and handled in the sinks instead. It's far too complicated trying to keep up with all of the possible states here.\nImo it should go like this:\n- Drop the continuous streaming handling in the engine, sink decides. Some platforms can handle this and some can't, don't try to override them.\n- Always fire data at the sink, even if it's silence.\n- Engine has a number of possible states: starting/stopping/playing/idle/etc. Advertise which.\n- Engine fires a public event when going from idle->playing or the reverse.\n- Sink does a engine->event.Wait() if we're suspended.\nIf done that way, there's no need for any blind waits, there's no wake/sleep latency, and we're sleeping for the exact right time every time.\nAm I missing an obvious reason for keeping this stuff in the engine?\n. Closed on purpose? I agree with the above. It's not ideal, but at least it fixes the main issues. I can take a crack at Linux/Android tonight or tomorrow.\n. Looks fine for alsa\n. @DDDamian I've pushed the necessary changes for Alsa to my repo: https://github.com/theuni/xbmc/commits/SoftSuspendSink . You'll want to cherry-pick the top 3 to avoid picking up the merge of your branch. Alsa now works perfectly (on my hardware at least).\nImo we should be setting the default virtual functions to false though, in order to assume that the sinks can't sleep. That would give back the old behavior.\n. Ugh, hold on that. Alsa pause seems to mean: lock the whole damn device and render it useless otherwise.\nWill investigate.\n. This is causing tons of buffer underruns with ALSA, I'm poking at it now. Can't rule out local error yet, so I'll report back with what I find. But for now, it's a NAK :(\n. Ok, disregard previous nack. Results are noisy and random, so it's very likely there's no behavioral difference between the two.\n. I think we need to just shove it in and get it tested on more hardware. ALSA is fickle, we'll never get this right without a bigger sample size.\n. Alsa will block in AddPackets. The snd_pcm_wait() blocks (using select() internally) while waiting for free space in the alsa buffer. So it's not sucking up too much cpu time.\n@DDDamian From my experience, Alsa simply isn't reliable enough to bring up/down all the time. I would be thrilled if someone proved me wrong here, but I spent tons of time trying to get it to play nice on my various hardware, with nothing to show for it. Until then, we'll need to leave the SoftSuspend disabled there.\n. So this has my sign-off, we need it for b2. what we have now is much worse than b1 due to the constant create/destroy of the sink.\n. +1 for Frodo since it's back-compat\n. Fixed include, should be fine for win32 now. Thanks @wsoltys \n. +1 for the change, obvious oversight/bugfix\n. I specifically created a type to avoid (trade) void** and appease such fuglyness tyvm :p\n. pushed a small cosmetic change and squashed back down.\n. @cptspiff beat me to it, thanks for the obvious fixes.\n. @maheus did you have to apt-get cmake to build?\n. This is not in fitting with the abstraction, GetNativeWindow() is only supposed to return what the implementation thinks the nativewindow is, CreateNativeWindow() hooks up a new one.\nThis sounds like an implementation bug with your device. The native window is destroyed (fake for android) and recreated (re-queried for android) when we get focus back, this works fine on the devices I've tested, and is in-line with the sparse documentation.\nCould you please give a logcat and stacktrace to go with the crash? Maybe that'll give us an idea of what's different for you.\n. Ok, it looks like the problem here is that this driver does not check the nativewindow before trying to use it. Dammit google!\nYou can see that this works as intended for other devices, the check goes like this (in WinSystemEGL.cpp):\nif (!m_egl->CreateSurface(m_display, m_config, &m_surface))\n  {\n    CLog::Log(LOGNOTICE, \"%s: Could not create a surface. Trying with a fresh Native Window.\",__FUNCTION__);\n    m_egl->DestroyNativeWindow();\n    if (!m_egl->CreateNativeWindow())\nBut instead of returning EGL_BAD_NATIVE_WINDOW as it should, it just blindly tries to use the bad native window.\nIs this driver source public?\nEither way, I'll think on a fix. I'm not entirely happy with your solution, but I can see why you had to do it.\n. Could you please try https://gist.github.com/4008254 ?\nI wrote it blind, so there's a really good chance it'll need a touch-up or two :)\n. Ugh, tegra3.. no chance of contributing to their busted driver.\nLet me know on the gist. I'm ok with pulling that in if it works, after fixing up a few cosmetics.\n. Great, thanks. I'll submit a new PR to replace this one.\nThanks for doing the hard work tracking it down.\nAnd just so it doesn't seem like a case of NIH or me being pedantic, I'll explain why I prefer to do it that way:\nThe implementations were designed to be dumb, they simply fill in the missing bits. With your change, the higher-levels are unaware that the nativewindow has changed, so they're likely to do other bad things as well. With the new change, we invalidate the nativewindow whenever the surface is killed, that way WinSystemEGL never has to worry about one of the underlying structures being invalid without its knowledge.\n. This is good by me, should probably have @Fneufneu verify.\nOtherwise, if @cptspiff greenlight's it I'll squash and hit the button.\n. Ok, I've finally had a chance to test this out.\nThe good: Works great! Instant gui.\nThe bad: Feels MUCH slower, I'd estimate 2-3x slower than before. On my pivos box, it felt like about 1.5 mins, compared to about 30sec before. IMO that is enough of a reason to use the native unzipper instead :(\nI'll run some tests to get some hard numbers before we make any decisions.\n. The numbers:\nBefore: 35-40sec\nAfter: 55-60sec.\nImo that's enough to warrant using the native lib. @Montellese agreed on IRC.\nWhat we'll need to do is call into the lib via jni, and have it do the unzipping. I suppose we'll need to add a callback for progress as well. I'm not sure if we'll need to split the unzipper into its own lib, or if we can open libxbmc.so from jni with no penalty, since we have to open it later anyway. We'll need to experiment there.\nIt's also possible that there's just some inefficiency in the java code that could be eliminated.\n@koying thoughts?\n. Note that the time went down to ~45sec when using a buffer of 4096bytes, like we do in the native implementation.\n. No need for that, there are android java methods for checking neon.\n. subsequent runs are moot, those are always nearly instant.\nReason for checking every file rather than the apk is so that during dev, if you only change 1 file, it doesn't unpack the whole zip (though this is currently broken due to the way the apk is built).\nSo yes, single apk check is fine, I'll add the individual checks back if/when the packager timestamps are ever fixed.\n. Is it possible to use the xbmc splash.png rather than c/p it? For now, we're out of sync because the current one is the \"beta\" splash, while this is the old \"stable\" one. It'd be unfortunate if we always had to remember to keep them in sync.\nOther than that, and Montellese's comment, +1 from me.\n. Yep, if it works, shove it in.\n. first one does, yes.\n. done.\n. Came here to yell about 40 changed lines in configure.in. Was pleasantly surprised :)\n. Hmm, just saw this PR, never noticed it before. Sorry for that.\n@koying Likely your issue was that android refuses to allow unix sockets on removable media.\n. Yep, we need to break log out into its own configurable path.\n. @DDDamian I agree. At a minimum I wanted to get these two in as they get us (the hardware I'm testing under, anyway) back to a usable state. Without them, the second anyway, I was unable to test your PR reliably.\nSo basically, what you said :)\n. @DDDamian Sounds like a plan. Probably the easiest thing would be to make the change to fault by default on your PR, then cherry-pick d266446 there. Then we can close this and prepare to merge the final #1548.\n@davilla I know you've been testing #1548 as well. OK with this for Frodo assuming it all checks out?\n. @DDDamian Thanks for sticking with this despite the delays :)\n. @DDDamian sure. I'm not sure about gimili's patch though. At least on pivos, which is a good example of a low-power board, a buffer size of 8192 is more than enough, we have no problem keeping it full. In fact, it rarely drops lower than 7000. Making it bigger just increases latency.\n@gimli: have you measured to find an empty buffer? Also, you'll want to try d266446 if you haven't already, as that was added to fix the exact error in the commit msg for https://github.com/huceke/xbmc/commit/38c025c1e752c8a28f42b38f4305368b8db2ce65 . Though with the way that AE currently disables the alsa sink, some underruns are inevitable and will happen regardless of the buffer size.\n. Upon rereading, it's not all that clear. I have no issue with https://github.com/huceke/xbmc/commit/38c025c1e752c8a28f42b38f4305368b8db2ce65 , it's fine to go in. I'd just like to understand the reasoning behind it.\n. @huceke I don't understand your change. That makes it look like this:\nHey Alsa, what's your max buffer size?\nAlsa: 4096.\nCool! I'll use a buffer size of 8192.\nI'm not following that logic :)\nI suspect that if this really does make a difference, it's not because the buffersize is actually changed to 8192, but instead because it changes the calculations for periods/periodsize.\nCould you please paste the relevant logs from before/after this change? On pivos it looks like:\nCAESinkALSA::InitializeHW - Request: periodSize 512, periods 16, bufferSize 8192\nCAESinkALSA::InitializeHW - Got: periodSize 512, periods 16, bufferSize 8192\n. @elupus Yup, my first thought was to just use .empty() instead, but since we need to be able to return the size in 2 places (including RemoveTransform(), which gets the most traffic) I opted for local storage. I'm happy to do that though if there's an issue with caching it, other than it being ugly and non-obvious.\n. Please explain why? The rpi (and all egl implementations) explicitly query the possible usable resolutions. All of that clamping is a relic from how things were done before, and we really need to be removing it rather than adding to it.\n. Whoops, a WIP commit slipped in there. Removed.\n. Fine by me, ugly as it may be :). This needs to happen, and we need to deal with any fallout as early as possible.\n. Just noticed that crystax has a fix for this. Investigating.\nNAK for now.\n. Updated PR to reflect new crystax ndk rather than our link script hack.\n. Echoing what @Memphiz said above.\nPlease don't use system() for ping, but implement an actual ping. If root is required, then it will be required to spawn/use the program too, so I'm not following your logic there.\nThis probably won't work on android (if it does, it will be hit or miss), and ping is not guaranteed to exist on embedded systems. Please track down a simple implementation (c/p from busybox should work i'd think) and use it instead.\n. ping @wsnipex \nIf you use tools/tools/mk-release-source to create your tarballs, you'll get pre-bootstrapped/codegen's sources that also contain a VERSION file.\nThe first line is the git revision as it was given (it could be a tag, branch, HEAD~5, etc)\nThe second line is the real git hash for that commit.\nFor non-tagged revisions, they will be the same thing.\nI think this is what you needed here? If you change this to use VERSION (i used that filename because it's relatively common to indicate the version of the tarball), I believe you should be all set.\n. @wsnipex mind simplifying a bit for readability?\nawk 'END{print substr($1,1,16)}' VERSION\nAfter that, I'd say we should get this in for Frodo, since it's harmless and will help us package it better\n. The extensions and the query are correct, problem is that we're asking the wrong place :)\nWe'll have 2 lists of extensions, windowing (egl) and rendering (gles). I believe the issue is that we're calling into windowing and we never actually get to the render extensions. Could you please try this as a quick test?\n``` diff\ndiff --git a/xbmc/windowing/egl/WinSystemEGL.cpp b/xbmc/windowing/egl/WinSystemEGL.cpp\nindex a71e105..1698e26 100644\n--- a/xbmc/windowing/egl/WinSystemEGL.cpp\n+++ b/xbmc/windowing/egl/WinSystemEGL.cpp\n@@ -372,7 +372,7 @@ bool CWinSystemEGL::IsExtSupported(const char* extension)\n   name += extension;\n   name += \" \";\n\nreturn m_extensions.find(name) != std::string::npos;\nreturn (m_extensions.find(name) != std::string::npos || CRenderSystemGLES::IsExtSupported(extension));\n }\n\nbool CWinSystemEGL::PresentRenderImpl(const CDirtyRegionList &dirty)\n```\n. Ok. It's a bit circuitous to go renderer->windowing->renderer, but I think that's probably safest for frodo, because there are several places that query windowing directly (where they shouldn't).\nSo rather than fixing up each and risking missing one, I'll push this change instead and we'll clean it up when the rendering/windowing split happens.\nThanks for bringing this up!\n. I was assuming that this behavior changed with the egl rewrite, but looking at the git logs, it seems as though this (forced npot) is how it as been all along.\nFor that reason, I'm hesitant to \"fix\" this just before release, since it's essentially enabling an un-tested code-path.\nPing @davilla and @gimli. Thoughts? Don't confuse this with the NPOT texture stuff, this will only affect video rendering and fbo's. In fact, fbo's will be disabled for gles as it is.\n@popcornmix Do you recall whether this once worked as intended? Or have we been forcing npot since the early days of rpi?\n. ok. @popcornmix Could you please confirm that video playback works and looks normal with this fixed? This really only affects omxplayer afaik, since all other egl+gles players that i know of use the bypass render method.\n. right, but it doesn't matter because we don't actually render. omxplayer renders frames itself.\n. Check tools/mk-release-source to build a bootstrapped tarball without these dependencies. Final source releases will be packaged this way.\nFYI, that was done specifically with gentoo/debian in mind.\n. There is no need for this. Just like ubuntu and all of the other major distros, the addon you get will depend on the repo you get it from. ie you don't 'apt-get install firefox-amd64', you 'apt-get install firefox' and your distro knows that you're running am64, so it fetches from that repo.\nIf you installed an amd64 xbmc, the distro should either bundle a repo addon that provides addons for your arch, or provide you with packages for the addons themselves.\nOtherwise things would get out of hand very quickly.. x86/x64/arm/mips/new x32 abi/, etc.\nIn addition, an addon for one distro may not work with another due to changes in deps, paths, etc.\nThe other OSs have stable abi's and we're in control of shipping binaries. For Linux, we just have to accept that it's different and cater towards the distros.\nLet's take two examples, ubuntu and openelec.\nUbuntu ships in many abis and many versions. addon-foo.so may work on Precise because it depends on systemlib-bar.so.1, but Quantal  only supplies systemlib-bar.so.2. So already, you need 2 versions of the addon. Now, you need to build for amd64/x86/arm. So we're up to 6 versions.\nIn this scenario, the distro (Ubuntu) should build the addons and create additional packages for them, so that they can be fetched via apt-get. apt-get xbmc-pvr-foo. This way, addons update just like any other system package.\nNow for openelec:\nAfaik, it does not include any kind of package manager, so apt-get is out of the question. However, it builds for limited abis. In this case, for the x86 build (for example), openelec should add a repository.openelec.pvr-addons-x86 (et al), which provides the addons to it users.\nIt's complicated, but it's really the only way that makes sense for Linux.\n. verified working fix for gold:\ndiff\ndiff --git a/configure.in b/configure.in\nindex f037c2f..7ddcff1 100644\n--- a/configure.in\n+++ b/configure.in\n@@ -59,7 +59,7 @@ AC_DEFUN([XB_FIND_SONAME],\n     $1_FILENAME=$($CC -nostdlib -o /dev/null $LDFLAGS -l$2 -Wl,-M 2>/dev/null | grep \"^LOAD.*$2\" | awk '{V=2; print $V}')\n     if [[ -z $$1_FILENAME ]]; then\n       #try gold linker syntax\n-      $1_FILENAME=$($CC -nostdlib -o /dev/null $LDFLAGS -l$2 -Wl,-t 3>&1 1>&2 2>&3 | grep \"$2\")\n+      $1_FILENAME=$($CC -nostdlib -o /dev/null $LDFLAGS -l$2 -Wl,-t 3>&1 1>&2 2>&3 | grep \"lib$2\")\n     fi\n     if [[ ! -z $$1_FILENAME ]]; then\n       $1_SONAME=$($OBJDUMP -p $$1_FILENAME | grep \"SONAME.*$2\" | awk '{V=2; print $V}')\n. Please use the above, as it addresses the real issue\n. agreed. I'd think we should check the return code instead, but i'm not sure that's safe since technically the compile fails anyway\n. for libbluray, it appears we'll be grepping for \"/bluray.so\", rather than \"/libbluray.so\" as (i assume) was intended. @arnova ?\n. @Montellese lol, seems we think exactly alike. The github link from mail sent me to the commits and not the PR, so I commented there without seeing your comments. We said the exact same things ;)\n. Looks ok on the whole, but I'm wondering how helpful this will be without a built-in to enumerate packages and activities as well?\n. I believe this can be closed now, as https://github.com/xbmc/xbmc/pull/2322 adds what remains of this one. Correct?\n. This has been tested with nav sounds on? Like I keep saying, constantly deinit/reinit alsa is a rough road.\n. Additionally, if a SystemClockMillis is enough to drive up the cpu, we're only treating a symptom rather than the really nasty problem.\n. Sure, I'm trying to be constructive. We (@DDDamien and I) agree that the main issue comes from hitting full buffers and therefore never pulling data into the sink, instead tightly spinning in this loop rather than blocking somewhere. It should be relatively easy to address that rather than trying to ease the pain of racing through the loop we shouldn't be in. I can help with the testing when I'm back home on Saturday.\nIt would probably be more straightforward to split this up between the suspend issue and the cpu sucking issue.\n. bzzt :)\nI tried this one too.. it'll lull you into the idea that all is fixed. Til you try to play sound from another app/lib...\nThis breaks Pivos/Linux, and probably many/most other linux flavors as well. alsa_pause in practice seems to not pause audio output, but the entire damn device (interferes with amcodec/amplayer, and any other application touching alsa). When I last looked, I decided it wasn't safe enough to use. Though on this one, I'd be happy to be convinced otherwise.\nAlso, in the case of !can_pause (lots of hardware, including my very common intel desktop chipset), you'll introduce tons of wake-up latency, plus there's some wacky race condition where we're still trying to write into the sink when it's being drained, which leads to underruns and faulty re-inits. You should be able to see this pretty easily by just hard-coding can_pause=0 as a test and fiddling with gui sounds.\nSo, this gets my strongest -1 for frodo, because it's a major change in behavior.\nAgain, I'm not trying to be a contrarian here. Only stating that I tried to make this work correctly for days, only to come to the conclusion that the pause won't work for us as things are.\n. @davilla I won't have a chance to play til tomorrow morning, but here's the change we discussed on the phone:\n``` diff\ndiff --git a/xbmc/cores/AudioEngine/Engines/SoftAE/SoftAE.cpp b/xbmc/cores/AudioEngine/Engines/SoftAE/SoftAE.cpp\nindex c15711b..9136e10 100644\n--- a/xbmc/cores/AudioEngine/Engines/SoftAE/SoftAE.cpp\n+++ b/xbmc/cores/AudioEngine/Engines/SoftAE/SoftAE.cpp\n@@ -1020,6 +1020,11 @@ void CSoftAE::Run()\n       if (m_audiophile && oldMaster != m_masterStream)\n         restart = true;\n     }\n+    else\n+    {\n+      Sleep(10);\n+      continue;\n+    }\n /* Handle idle or forced suspend */\n ProcessSuspend();\n\n```\n. as discussed on irc (and like davilla said), this needs a rebase before we can review any further. There's too much ping/pong of changes here.\nA few quick comments before that:\n- The hiding needs to be abstracted away somewhere. We need a single place (probably CApplication, for lack of a better one) to control whether the tray is visible, so that other platforms can take advantage as well.\n- If the windowing constants aren't available < api 14, how do we know they're safe to use?\n. We don't want this, it was done this way on purpose.\nIf we allow this, we'll end up with non-multi-arch loads.\n@pipelka: is there a specific path you have in mind?\n. Fair enough.\nBut we can't simply re-add the absolute path, as that could bork the refcounting. Android libs are refcounted based on the filename without the path, for better or worse, which is why this implementation handles it that way.\nPlease give this a shot, I think it takes everything into account:\n``` diff\ndiff --git a/xbmc/android/loader/AndroidDyload.cpp b/xbmc/android/loader/AndroidDyload.cpp\nindex db8017d..8f6958a 100644\n--- a/xbmc/android/loader/AndroidDyload.cpp\n+++ b/xbmc/android/loader/AndroidDyload.cpp\n@@ -211,7 +211,7 @@ void CAndroidDyload::Open(const char * path)\n     return handle;\n   }\n   bool checkSystem = IsSystemLib(path);\n-  handle = Open_Internal(filename, checkSystem);\n+  handle = Open_Internal(std::string(path), checkSystem);\n   if (handle != NULL)\n   {\n     CSingleLock lock(m_depsLock);\n@@ -271,7 +271,7 @@ void CAndroidDyload::Open_Internal(string filename, bool checkSystem)\nrecursivelibdep dep;\n   dep.handle = handle;\n-  dep.filename = filename;\n+  dep.filename = filename.substr(filename.find_last_of('/') +1);\n   m_lib.deps.push_back(dep);\nlib.refcount = 1;\n```\n. pushed as eead5ce318bb423bf0ffdad845bcd96d0017a814\nThanks for pointing it out :)\n. @Montellese Just had a look.. that's.. impressive to say the least.\nFor linux you'll need a newish X with multitouch hooked up. I have a laptop that I could use for testing.\n@elupus: Somewhat related, I picked the x11 winevents out of your SDL-nuke tree for something I was working on a few weeks ago, and it looks like it'd be handy here again. Maybe it'd be worth breaking out the input part into a PR of its own? It'd be a shame to hack on multi-touch here when it's just going to be ripped back out.\n. Noting (mainly so I don't forget) that android support was added for 0.9.23. So for android, we're fine to bump whenever the other platforms are ready, and as a bonus we can drop our patches then.\n. android-specific patches, i meant.\n. I'm having trouble understanding what the problem/fix is here as well. It sounds like you're saying that OnEvent/PumpEvents recurse somehow, but I'm not seeing how?\n. The IOS guys will have to comment on whether this is better or worse.\nFor Android, we changed it to the exact opposite because processing mouse movement events once per frame proved to be incredibly laggy and unresponsive. Instead, we process them all at once. @ulion's previous code involved a loop that was funky and hard to decipher, and had the net effect of simply evaluating one event per frame. I asked him to remove that loop and make it simply do that instead.\n@Montellese/@Memphiz: It seems the underlying problem here is that if we enter a modal window, we enter the nasty XBApp recursion scenario where we can end up pumping in a way that apparently we don't handle well. Imo if that's the case, we should be addressing that issue instead. Thoughts?\n. @ulion finally managed to drill what's happening into my head with the above simulation. Thanks for sticking it out!\nThe root issue here is this flow:\nmouse moves -> CApp::OnEvent -> GUIWindowManager (special-cased for video/music overlay) -> GUIWindow mouse event stuff -> GUIWindowFullScreen -> Modal to show OSD.\nThis modal blocks the OnEvent() from the mouse move, which means that the rest of our events are stuck until it finishes. Seems to me like it would have lots of other nasty consequences as well.\n@jmarshallnz Would it make sense to hook up to the app messenger for a special-case here to show the osd rather than blocking the input pump? Or is this so common elsewhere that it's considered normal behavior?\nOtherwise his previous fix seems correct in that it ensures that we never have any dangling events in the case of a modal.\n. Looks ok, but this needs to go after the sdk bump to ICS, since these were added at API 11.\n. @amet: a quick thought, though it's unlikely... Would it be possible for this to coexist in Frodo? Meaning, make the modules depend on xbmc.subtitle.module, which would not be present in the Frodo repo, but shipped with Gotham.\n. The reason I ask is because (as we've discussed), I'd like to move towards a single repo where addons are filtered by apis rather than starting over with each release.\n. @ronie My idea above was to push it into Frodo. This will make for a good test for properly splitting apis.\n@amet Yea, it will need to depend on some meta-addon, then it will be hidden. Probably the most sane way to do it is to have addon.subtitle.foo depend on xbmc.subtitle.module, then xbmc.subtitle.module depend on xbmc.addon > 12.9.1, or something along those lines.\n. Ok, talked this over at length with @amet on irc.\nPlan is to go ahead and create a gotham subtitles repo, and ship it with xbmc. This is temporary, and all will be unified for Gotham release. But for now, we need a distinction, since it's unfortunately too hackish to try to make everything coexist. If there's major opposition to that, the repo could always be distributed as a zip instead.\nI'll get the repo up and going, and amet will get a few things pushed in there. We'll add the repository addon to this PR, and once it's all verified working we'll hit the button.\nIt's not the prettiest, but amet's waited long enough for this.\n. amet: are we ready to go on this?\n. Glad to see you around these parts again :)\nI can certainly say I'm interested, and impressed with the idea as well. Moving these out into addons will mean that distros can help out with the implementations. I'm a fan.\nAfter pondering the possible problems, they pretty much looks like your list of tree'd monkeys. So I suppose I'd mainly like to hear about your thoughts on our versions vs distros, and our role in keeping in sync. First thing that comes to mind is: What are the drawbacks of playing a few string games? eg rather than \"libdemo-123-gitabc-ubuntu0\", say \"give me the latest xbmc_pvr_libdemo\" and be done with it. Obviously that requires abi compatibility between versions, but I think that's pretty much the responsibility of the distros as it is? By doing that, we'd have to maintain more of a bridge with the package manager to get updates not reflected by our repo, but I'm not sure that's a bad thing?\n. I think that's probably best, yea. We're going to have to deal with the manager for status somewhat, but I would certainly prefer to maintain as much of it ourselves as possible. A few cases come to mind:\n1. package maintainer rebuilds a package for some reason (happens all the time, busted flags, forgotten files, etc). It's the same stuff on our side, but ~ubuntuX becomes ~ubuntuX+1. For this reason alone imo we can't hard-code version numbers.\n2. User manually screws with packages. Knee-jerk response is \"well that's their fault!\", but consider something like: user installs pvr-cmyth, it installs libmysqlclient as a dependency, user later does apt-get remove libmysqlclient and is confused as to why pvr-cmyth no longer works.\n3. I suppose I made an assumption with 2. Had you planned on resolving system deps as well?\nI'm not trying to nitpick here.. I know we've fallen into that trap lots of times before. Just giving a few thought-experiments as I assume you're looking for feedback as to future pitfalls. If you're not there yet, let me know and I'll back up to a more comfortable place :)\n. we have one, xbmc.pvr. The same would need to be added for non-pvr apis.\n. @wsnipex: for that, the easy and arguably most correct solution is to package xbmc.pvr addon as a meta-package for dependency resolution. If we do that with all of our api addons, the distro packagers can use the same dependency logic as our xmls. Then, hard-coded versions are taken out of the equation. The more I think about it, the more issues that would solve in one go...\n. Please please please what @opdenkamp said. If we're going to bring package managers into it, we have to let them do their job. In the end it will make our lives infinitely harder if we try to manually sort out these dependencies via string-matching. It may seem complicated, but it really just mirrors the existing addon.xml logic that we've worked hard to establish. I see it going like this (using ubuntu as an example):\nFor each api addon (xbmc.gui, xbmc.pvr, etc) we have a distro package. These packages are version agnostic, but they are paired with the xbmc packages they come from.\nbin addon packages depend on api packages, just as their addon.xml's list those apis as dependencies. So, take an example:\nedit: grr, github ate my xml. retrying.\nxml\npvr.mythtv.cmyth:\n<addon version=\"1.6.7\" >\n <import addon=\"xbmc.pvr\" version=\"1.6.0\"/>\nSo right there, we have pvr.mythtv.cmyth-ubuntu0, which depends on xbmc.pvr version 1.6.0. No string matching, no hard-coding, that's all. Frodo contains xbmc.pvr 1.6.0, so it gets installed.\nNow, if it gets bumped to 1.6.8 and depends on xbmc.pvr 1.6.0, frodo users get an update.\nIf we add v1.7.0, which depends on xbmc.pvr 1.7.0, frodo users won't get it, but frodo+1 will (assuming that frodo+1 gets xbmc.pvr 1.7.0)\nBy doing this, we can forget about distro OS versions, because they don't matter. We don't want to care if pvr.mythtv is compatible with natty or precise or whatever is new. We only care if it's compatible with our apis that it requires.\nSo how to go about this? One thing we're missing is the api packages. These should be independent of addons, instead installed by xbmc itself. So along with the xbmc bin package, we should also be shipping xbmc.addon, xbmc.pvr, xbmc.gui, xbmc.python, xbmc.json, etc. Then when the time comes to install an addon, it doesn't matter if it's coming from our repo or a 3rd party, the api deps are in place.\nOnce that's done, it's only a matter of packaging up each addon and making its dependency logic match what's in the xml. For the popular formats (deb/rpm), this should be easily scriptable I'd think.\n@opdenkamp I think we're seeing eye to eye on this, is the above what you had in mind as well?\n. This is getting silly. Can it not be probed?\n. @popcornmix doesn't that only work due to the ifdef in guisettings though?\nI'm on a crusade to stop needless ifdefing. Mainly because if rpi doesn't have a certain output mode, others are probably missing it as well. So rather than hard-coding that at build-time, these outputs should be probed and added to the spinners at runtime.\nSee \"powermanagement.shutdownstate\" for an example of one that handles this reasonably at runtime.\n. @popcornmix: given that I'm not in the position to fix, I won't stand in the way either. My wish is that this would be a runtime setting so that all platforms would just fill in their capabilities, but that's not a minor task.\n. Note that Android can't be bumped here, due to gplv3.\n. at all. IIRC we're currently as high as we can go.\nI only mention it because I didn't want anyone worrying about android compat wrt any new threading changes.\n. hmm, looks like it's actually lgplv3. Possible that if we break it out to be dlopened we could possibly bump. I'll investigate and bring this up elsewhere.\n. Yes, I'm seeing that now as well. Though I swear when I first did the port the current license was gplv3, as stated in copying. Am I going crazy?\nEither way, looks like we're free to bump as needed, assuming it actually builds on android. I'll put this on the todo for unified-depends, that's much easier than splitting them up, anyway :)\n. @popcornmix not sure I'd call that broken (I was speaking in terms of whether it should be backported to Frodo or not), but since you could certainly argue that it was so inefficient that it didn't work before on some platforms but it works now, I'd have no problem with that.\n@FernetMenta +1.\n. should be fine, yea. I really doubt it's necessary, as it looks like quads must've been set to something to get that far. but it doesn't hurt.\n. By the time we land in JNI_Onload, libxbmc.so has been loaded and ctors have been called.\nIt is possible to receive an event before XBMC has actually started its loop, but that's a good thing, because we want to be able to block that until some intents (mount) are received anyway.\n. Not a problem, we don't load any assets 'til we jump into CApp.\n. I tested every possible scenario (I hope!) and it was rock-solid. One thing to keep in mind is that we now have the ability to destroy the window on the spot, which we did not have at the time this was written.\nWe don't need to react to OnPause() or any of the others... as long as we have the window we can render into it. Besides, we really want to be rendering then, because the thumbnail-view in the task-switcher is a live view of the app.\nI think the cycle is simpler than we made it out to be, because we were responding to the wrong events. Mainly because we were paying attention to focus, which is specified for input and not windowing. It broadcasts many events that are not of much use to us since we run in the background.\nThe diff here is pretty unreadable, but I think the change is easy enough to understand. The logic is ripped out of the EventLoop, which now just calls our functions as it gets messages. It kicks off the app at OnStart(), then hackishly waits for the window creation and it's on its way. This part will be removed when I can get EGL smart enough to start headless then switch to visible.\nWe call the Android finish command when XBMC is done executing, which forces the shutdown sequence of: onPause(), onLostFocus(), onDestroyWindow(), onStop(), onDestroy(). We skip onDestroyWindow() since we've already done it, catch onDestroy, and cleanup. If we catch onDestroy when XBMC has not been shut down yet, we assume android is forcing an exit, so we tear down manually.\n. Thinking about it a bit more, we may want to pause playback for some of those events, but not stop rendering. If it's safe to call XBMC_Pause() when we're already paused, and likewise when we're not, it may just be easiest to blast out pause/resume events for onPause/onStop/onResume/OnStart/etc.\n. Inadvertently tested this at SCALE all weekend, worked without issue. We were paused correctly as far as I can tell.\nQueuing this one up for March (after fixing the detach you pointed out).\n. @Montellese Any objection to seeing this go in? Even if we do discover some corner-case that's missed, it should be very easy to fix. And this fixes several bugs.\n. Haha, fair enough. I'm going to wait til tomorrow to test+push. That detach makes me uncomfortable as it looks like it wasn't there before either. Makes me wonder if we had an extra somewhere.\n. Ok, it works fine. I'm leaving that detach commit as separate to help with the conflicts that will arise with https://github.com/xbmc/xbmc/pull/2319\n. Yea, we definitely don't want to redirect this to xbmc.org. I'll see if i can track down the bork at feedburner.\n. Well, in any case, this needs to be pointed at xbmc.org, then bounced if necessary, to avoid this happening again. I'll run some tests this weekend to see if it's going to hurt us too badly to host ourselves.\n. Yup, great idea. will do.\n. See https://github.com/xbmc/xbmc/pull/2440\n. See here for some dalvic docs: http://milk.com/kodebase/dalvik-docs-mirror/docs/jni-tips.html#Threads\nLooks like collection can still run during jni execution. But since we clean up after ourselves for everything allocated on the Java side, I don't think it's really an issue.\n. See also some similar advice from the primary Dalvik author: https://groups.google.com/d/msg/android-ndk/Bhj_g92IaUs/YyqDmpblVC8J\n. Heh, I was simply posting what I'd found on the subject, info is sparse. Any input/feedback is of course appreciated.\n. Rebased and verified working with all the new Android stuff. My lucky day.\n. in that case, I agree with @elupus \n. Agreed with @elupus. This looks like a really good start, but I'm afraid that an abstraction that leaves out ios/android/embedded-linux isn't quite abstract enough. What would it take to nuke the sdl dependency in the interface itself so that sdl could be hooked up as a client instead?\n. @garbear: before, each implementation did its own polling, and we checked the results once per frame. That's probably what you meant, just worth pointing out the difference.\n. @koying: This should of course be fixed, but I think it might be possible to skip the unload/load entirely. It was first added because when we destroyed the window we destroyed the skin as well. Since we don't do that anymore, I think the fonts should persist just fine. Worth a shot, anyway.\n. The following works fine after a few min of testing, launching random apps and returning to xbmc about 50 times\n``` diff\ndiff --git a/xbmc/Application.cpp b/xbmc/Application.cpp\nindex cac91db..92f30a8 100644\n--- a/xbmc/Application.cpp\n+++ b/xbmc/Application.cpp\n@@ -921,13 +921,11 @@ bool CApplication::InitWindow()\n   }\n   // set GUI res and force the clear of the screen\n   g_graphicsContext.SetVideoResolution(g_guiSettings.m_LookAndFeelResolution);\n-  g_fontManager.ReloadTTFFonts();\n   return true;\n }\nbool CApplication::DestroyWindow()\n {\n-  g_fontManager.UnloadTTFFonts();\n   return g_Windowing.DestroyWindow();\n }\n```\n. No, what's being created/destroyed has no size. Once we have the window, the rendering surface is bound to it and dimensions are set.\nI guess it's possible, though unlikely, that these could vary. Something like (in android): launch xbmc -> launch settings -> change resolution -> back to XBMC. In that case, incoming/outgoing res would be different and fonts would need to be reloaded I suppose?\n. I'd like to hear from @jmarshallnz on this one. As far as I know, we never reloaded fonts this way before 7d32a8cba2e5b9fa58d2c0e21dada3c1fa39a8fd . It was added at that point because we destroyed the window very violently at the time, we're much more gentle now :)\n@jmarshallnz We call DestroyWindow(), but in our case, that translates down to only a very specific low-level destruction (egl context and egl surface), then we instantly drop to headless mode.\nOur textures don't get nuked, and the context/surface are recreated before jumping back into the render loop. So I'm not sure of anything that would require that we reload?\n. Ok, well there's our answer then. Let's just revert to pre-https://github.com/xbmc/xbmc/commit/7d32a8cba2e5b9fa58d2c0e21dada3c1fa39a8fd, and drop the load/unload.\n. Yea, please keep cosmetics in separate commits.\n. Since you've created a nice Main class, could you please move the startup logic into there and out of Splash? I think that should detangle the startup process a good bit.\n. ok to push this to next month?\n. @Memphiz You can push to my repo, feel free to fixup anything you find along the way. Muauaha, you can't escape now ;)\n. @Memphiz Awesome work! And nice hackers-style compiling :)\nI believe all of the above issues have been fixed. We'll need to revert 3c652efa0ffa730d9a9ad419b19dddbafea1a6c9 and contain it properly in config.site, but I can handle that.\n. roger. Squished and ready to go, pending last round of builds.\nExpect buildbot to go red for a few days, Frodo.1 gets priority.\n. @ulion  See c814f16 72a1801 386345b and c1a10d7\nDoes anyone else use script.module.pil ? It looks very darwin-specific as-is. If not, we can nuke that once PIL is verified working from depends.\n. What he said.\n. HAL is deprecated everywhere, it should be avoided.\n. Whoops, I commented before refreshing the page. @sraue set it better :)\n. Rather than defining bare-metal linux as NULL, I'd rather see it have its own implementation.\nSee alternate implementation here (only compile-tested):\n``` patch\nFrom f9c3cdaea46c62a2280cdf6781917db7c7711ad4 Mon Sep 17 00:00:00 2001\nFrom: Cory Fields theuni-nospam-@xbmc.org\nDate: Wed, 13 Mar 2013 12:55:52 -0400\nSubject: [PATCH] power: Add a bare-metal linux power implementation that\n relies on being launched by init\n\nxbmc/powermanagement/PowerManager.cpp             | 11 +++---\n xbmc/powermanagement/linux/FallbackPowerSyscall.h | 41 +++++++++++++++++++++++\n 2 files changed, 47 insertions(+), 5 deletions(-)\n create mode 100644 xbmc/powermanagement/linux/FallbackPowerSyscall.h\ndiff --git a/xbmc/powermanagement/PowerManager.cpp b/xbmc/powermanagement/PowerManager.cpp\nindex ca94f49..1172e81 100644\n--- a/xbmc/powermanagement/PowerManager.cpp\n+++ b/xbmc/powermanagement/PowerManager.cpp\n@@ -42,9 +42,10 @@\n #include \"linux/ConsoleDeviceKitPowerSyscall.h\"\n #include \"linux/SystemdUPowerSyscall.h\"\n #include \"linux/UPowerSyscall.h\"\n-#ifdef HAS_HAL\n+#elif defined(HAS_HAL)\n #include \"linux/HALPowerSyscall.h\"\n-#endif\n+#elif defined(TARGET_LINUX)\n+#include \"linux/FallbackPowerSyscall.h\"\n #elif defined(_WIN32)\n #include \"powermanagement/windows/Win32PowerSyscall.h\"\n extern HWND g_hWnd;\n@@ -79,10 +80,10 @@ void CPowerManager::Initialize()\n     m_instance = new CSystemdUPowerSyscall();\n   else if (CUPowerSyscall::HasUPower())\n     m_instance = new CUPowerSyscall();\n-#ifdef HAS_HAL\n-  else\n+#elif defined(HAS_HAL)\n     m_instance = new CHALPowerSyscall();\n-#endif\n+#elif defined(TARGET_LINUX)\n+    m_instance = new CFallbackPowerSyscall();\n #elif defined(_WIN32)\n   m_instance = new CWin32PowerSyscall();\n #endif\ndiff --git a/xbmc/powermanagement/linux/FallbackPowerSyscall.h b/xbmc/powermanagement/linux/FallbackPowerSyscall.h\nnew file mode 100644\nindex 0000000..1f0f300\n--- /dev/null\n+++ b/xbmc/powermanagement/linux/FallbackPowerSyscall.h\n@@ -0,0 +1,41 @@\n+/\n+ *      Copyright (C) 2005-2013 Team XBMC\n+ *      http://www.xbmc.org\n+ \n+ *  This Program is free software; you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation; either version 2, or (at your option)\n+ *  any later version.\n+ \n+ *  This Program is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ *  GNU General Public License for more details.\n+ \n+ *  You should have received a copy of the GNU General Public License\n+ *  along with XBMC; see the file COPYING.  If not, see\n+ *  http://www.gnu.org/licenses/.\n+ \n+ /\n+#pragma once\n+#include \"powermanagement/IPowerSyscall.h\"\n+#include \"system.h\"\n+#if defined(TARGET_LINUX)\n+\n+class CFallbackPowerSyscall : public CPowerSyscallWithoutEvents\n+{\n+public:\n+  CFallbackPowerSyscall();\n+\n+  virtual bool Powerdown() {return true; }\n+  virtual bool Suspend() {return false; }\n+  virtual bool Hibernate() {return false; }\n+  virtual bool Reboot() {return true; }\n+\n+  virtual bool CanPowerdown() {return true; }\n+  virtual bool CanSuspend() {return false; }\n+  virtual bool CanHibernate() {return false; }\n+  virtual bool CanReboot() {return true; }\n+  virtual int  BatteryLevel() {return 0; }\n+};\n+#endif\n-- \n1.8.0\n```\n. er, I accidentally borked those ifdefs so that only 1 implementation will be compiled in, but you get the idea :)\n. Ok, minus the bork this time (I hope): https://gist.github.com/theuni/5154204\n. @MilhouseVH Darwin has its own implementation for osx/ios. What we're really defining here is the procedure to be used when XBMC is started from a Linux init script, with the understanding that its exit code will determine shutdown/poweroff. For that reason, it's definitely Linux-specific, and not NULL. It might make sense to rename this to LinuxInit or so.\nIn fact, IMO a NULL implementation would provide none of the options, since it doesn't know how to do any of them.\n. Patch looks good\n. Why not just ask ffmpeg? If it's going to be the one doing the seeking anyway, surely it'll know better than our hard-coded rules.\nSee poc (warning, I'm a virgin in dvdplayer land, so I'm sure this is needlessly circuitous): https://github.com/theuni/xbmc/commit/4f960e65a222cb15a634363f1adfbc5476f140e8\nWorks as expected for udp.\n. @elupus Why impossible? My POC does that and seems to work fine.\n. This is not a fix strictly speaking, but I'm making an exception and pushing this now, because we want it for Frodo immediately.\n. Looks fine.\n. In general, it'd be helpful for android if we could avoid depending on the destructors to clean up too much at exit, since there are a few different notions of what \"exit\" actually means. dlopen'd libs are a good example of something that presents a problem (lib destruction at exit depends on the loader class still being alive, which leaves us in a very undefined state), and i imagine global settings could do the same.\nI see you've agreed above, just figured i'd chime in with something anecdotal for some motivation :)\n. Btw, what's your plan for this PR? Is it in a state to be merged currently, even with major chunks missing? If so, I'd encourage you to go ahead and shove it in for april and deal with the fallout, then start working on the next steps. That should help with the overwhelmingness some.\nIf that's the case, imo it'd be worthwhile to declare the last day (or an extra day) of the merge window as yours, and make everyone work around you until you've gotten it in. @davilla suggested this for the unified-dependencies merge, and I think it worked out very well.\n. Well, the concern there is that your PR has the potential to interrupt several others. If there's not much in the pipeline that touches this stuff, then of course that's moot.\n. Mind explaining why?\nThe current code is a butt-load of copy/paste, but very much on purpose to improve readability and debugging. It's not exactly a performance-critical section. Your change is certainly elegant, but I'm not sure it's necessary.\n. Fair enough. My first instinct was to use simple macros, hence the comment about the ability to debug, but you've gone to the other end of the spectrum here, so that argument doesn't hold.\nI suppose my main hesitation is that I'm not that familiar with boost, so it makes me nervous, as the primary maintainer of this code, to be adding complexity for very little (imo) gain.\nThat said, ignorance is hardly a reason to deny a change, so I'll read-up and review once you've updated for the issue pointed out above.\n. The best way in which readability can be improved is probably just to\nimprove those function names (I'm sure they're not 100% right).\nMind elaborating?\n. Header-only boost is ok around here, but c++11 is a no-go.\n. Yes, and for the sake of not blocking future ports. As well as maintining support for older and more exotic toolchains. But regardless, it's definitely not worth the dependency for some cosmetics ;)\nI'm happy to discuss the reasons further or irc/forum if you'd like, but let's not continue spamming the other devs here.\n. Well if we're going for reducing duplication here, why not send in a nativetype pointer to be alloc'd by the creator, then return a bool on success? Then you can drop that InitializeNativeType helper and early returns, and it'd look like:\n```\n  CEGLNativeType *nativeGuess = NULL;\n  if (CreateEGLNativeType< CEGLNativeTypeAndroid >(implementation, nativeGuess) ||\n      CreateEGLNativeType< CEGLNativeTypeAmlogic >(implementation, nativeGuess) ||\n      CreateEGLNativeType< CEGLNativeTypeRaspberryPI >(implementation, nativeGuess))\n  {\n    m_nativeTypes = nativeGuess;\n    m_nativeTypes->Initialize();\n  }\n  return m_nativeTypes != NULL;\n```\n. If you agree with the above, I'm ok merging the change for the April window. Seems like a nice solution for the ugliness of factory creation.\n. Yep, even better.\n. Looks good. Please squash it down to 1 commit (just squash and force-push to your branch) and I'll queue it for April.\n. @koying Probably no merging, but i'm sure it needs a cleaning.\nThis looks fine for April.\n. Actually, please update depends/configure.in as well to default to 14.\n. Please hold off on this a bit. I have a ~3k line JNI rewrite that turns java structures into native oo classes, and puts an end to the current jni madness. The receiver was fixed up to be used completely natively, and in-line with how it works on the java side (multiple [dynamic] registrations, sticky intents, etc).\nHoping to have it ready for April.\n. Pretty sure we can drop the m_AppActive diddling for android, we handle it with a bigger hammer now (m_renderGUI). Looks like each platform has implemented this idea on its own at some point, it's probably really in need of some unification.\nFine for android.\n. @wsoltys If you're going to go to the trouble of trying to minimize usage, I highly recommend taking a look at m_renderGUI (and SetRenderGUI). With this set to false, XBMC is essentially running headless. We use it in Android and on tiny arm cpus, we get down to ~0% cpu usage. It takes care of sleeping.\nIf we could unify this behavior in CApp, then all platforms could just call CApp::SetRenderGUI(false) when they don't need to render (minimized, obscured, etc).\n. Thanks! For android, please just nuke the appActive line in XBMCApp, It should be fine after that. Else I'll fix up after merge.\n. I'm late to the party but yes, fine by me as well. Since all platforms were doing things differently before, it's fine to bring one more in and ifdef away the stragglers.\n. Is the gl_cv_func_gettimeofday_clobber still needed? The config.site hacks for rsxs were only there because     their gnulib had lots of ancient bork wrt cross-compile. Though I'm assuming that since someone went to the trouble of finding the change, it didn't work without it :)\n. @Memphiz Yep, all solibs must be stripped of version otherwise they'll crash on load.\nI've researched zeroconf on android and I have a major jni refactor (one that i had hoped to get in for April) due for May. After that, zeroconf should be easy enough :)\n. @Memphiz Since this won't work yet anyway, don't worry about it for android. I'll fix up the solib stuff once it's actually working there.\nNeed to remove it from packaging though, the .so without version probably won't exist (or will be a symlink).\n. ",
    "Voyager1": "closing and replacing with another pull request from separate branch.\n. rebase done, thanks for the tip.\n. corrected cosmetics\n. who's currently responsible for the dvdplayer code? (haven't seen elupus contributing lately).\n. hello elupus - I have updated the commit according to your input. \n1. No longer misusing seekchapter\n2. When in Menu, since dvdplayer doesn't really know the real program chain id, we call OnPrevious/OnNext instead. This is safe with regard to the dvd stacks since we're in menu structure ONLY.\n. great, thanks!\n. I think so, commit was accepted by elupus\n. please also see https://github.com/xbmc/xbmc/pull/226\nIt would be sad to lose functionality to play multi-disc editions of movies (or even more important: TV series boxsets ripped as ISOs).\n. updated based on cptspiff comment.\n. aha.. I see what you mean. Resuming a stack that is actually two avi's that are 1 logical movie work indeed without the patch. When you have stacked movies like Boxset.Disc1.ISO and Boxset.Disc2.ISO (choose whatever you like instead of Boxset and scrape using IMDB) the GUI will ask you which part you want to play. After that selection, the part plays from the beginning, regardless.  The patch fixes this 'bad' behaviour.\n. to come to the point, it may be related to stacked ISO files only... The answer lies in the code a little bit higher up...:\nThe stack \"itself\" does not have a resume point, hence the part selection dialog is shown. However the parts do have resume points of their own. \n. OK, I see. Before coming to a conclusion detrimental to functionality, allow me to plead in favor of stacked ISOs. You will always have people who want stacked ISOs. I do have a few very old dvds dating back from pre-double layer era where halfway through the movie you have to flip the disc (!) and then re-enter a menu, and select \"continue movie\" - e.g. \"Jesus of Nazareth\" (F. Zeffirelli) and \"Michael Collins\"... So if you rip those to ISOs you have what is logically 1 movie (1 IMDB entry) but multiple parts with their own menu.  It's not very useful to keep multiple resume points here, but if you consider other examples mostly TV-series boxsets (like \"Californication\", which you can also scrape as movie) you need a resume point for each disc part. If it can be achieved using playlists, then fine (I really don't mind whatever way it gets implemented!)\n. @AWilco - nothing wrong with that. The point is that xbmc should be able to handle that without requiring me to re-encode videos. Note that I've already merged the two-sided dvd of \"Michael Collins\", but I don't have the time or motivation to recode the few box-sets I own...\n. all - this request has been lingering... any chance we get this back on the agenda? \n. not sure this is what I'm after. I'd really like to have the possibility to have the option to resume each ISO which is part of a stack, see the TV series boxset example I gave. With the playlist approach I doubt this will be achieved. \n. I've looked into this and trying to use CApp::PlayStack for stacked ISOs is messy and doesn't work (even fails when trying to open the parts to calculate total duration)... Not sure that it even works, since the code that is really used is in CGUIWindowVideoBase::PlayMovie.  I would definitely agree with some refactoring but that would mean a lot more change.\nJust to reiterate: what I want to change is in the case of a stack, where the part-selection dialog is shown (CGUIDialogFileStacking) because there's no resume point for the stack as a whole, enable the already stored resume point for the individual parts. I'm looking into it if it can be done simpler.\n. jmarshall, I honestly disagree with this idea. There's no cleaner way with the current codebase.\nThe whole logic with the file stacking dialog was already there - what I only added was the piece that looks for a resume point on the individually selected part, in the event that the stack itself didn't have a resume point of its own.\nIf you search the xbmc code base the only class that does resume dialogs (just search for SELECT_ACTION_RESUME) is - indeed - GUIWindowVideoBase. \nMaybe the current codebase is messy... but I'm still confused with moving this to CApp, since that would create an even bigger mess...\nThe playlist idea is not what I need, since I only need 1 part, but first we need to\na) know which part to play\nb) look for a resume point for that part\n. to avoid confusion, I've changed the boolean's name to \"tryResumeOnSelectedFile\" which more accurately reflects what it stands for. See updated commit.\n. the different treatment apparently comes from the fact that GUIWindowVideoBase has that big if block (if (item.IsStack() && (!g_guiSettings.GetBool(\"myvideos.treatstackasfile\") || CFileItem(CStackDirectory::GetFirstStackedFile(item.GetPath()),false).IsDVDImage()) )) where it is deconstructing the stack and reconstructing a new playlist. \nIn that case CApp::PlayStack is not even called, as it plays a playlist of individual files. Only the \"normal\" stack passes through as a \"stack\" and hits CApp::PlayStack. \nSo I will need to move all that code to CApp::PlayStack, but the different treatment will happen there, and I will need to duplicate some additional base code that is currently in GUIWindowVideoBase , like the static GetStackedFiles() method.\nSo 1. and 2. are correct, but your logic in 3. is flawed as we still HAVE to treat these cases differently, as they ARE different. You either have a stack that is logically one movie (like the typical movie cut in 700MB pieces) or you have these multi-disc boxsets (ISO stacks) where each part is independent and can have its own resume point. Whatever the place of that code, it will be the same.\n. @jmarshallnz - here's my initial work. Some more cleanup is needed (like harmonizing the code in PlayStack) but I've succesfully tested this already with ISO stacks as well as \"normal\" stacks. Any constructive feedback is welcome at this point.\n. thanks. In my testing case 1.2 is the only one that actually gets called for ISO stacks. The reason for this being that the GUI didn't set STARTOFFSET_RESUME on the stack. I need to look into why that is. \n. updated work. \nAll cases 1.1 and 1.2 and 2 now work correctly. 1.2 is used when no resume point was available (need to select part first) or when user chose to start from beginning.\n. The prompting in 1.2 must not go away, because in the case of ISO boxsets you still need the ability to select which part you want to open. For instance if you look at the \"I, Claudius\" boxset, which has 4 dvds which each a dvd menu and 4 episodes per disc:  you may want to jump to disc 4 to open episode 10 and watch it, whether you have some resume point or not. Furthermore, if you just rely on resume points to advance through the parts you'll never get there if your ISOs have multiple titles (you actually never know when you've fully watched a disc, or reached the end of it) the resume point always stays in the db.\nSo alternatively, if you really dislike the stacking dialog, we could envision using the context menu to add items like \"start part 1\", \"start part 2\" etc. and similarly, have multiple resume points show in the context menu, like \"resume part 1 from xx:xx\", \"resume part 2 from xx:xx\"...\n. Regarding your comment on \"starting from the beginning - same as we do everywhere else\". Understand that, but the fundamental problem of an ISO stack is you cannot \"seek\" towards the next part(s). So you need a mechanism to jump to the next part(s). I hope this helps.\n. \"I Claudius\" is indeed a (tv) mini-series, but I scraped it as a movie (also in imdb) for convenience. Multi-episode ISOs don't lend themselves elegantly to be put in the database as \"tv shows\", since you can't access episodes directly anyway. I don't like double selection, 1. in the episode list in xbmc, 2. once in the dvd menu, you then again need to select the episode. But that's a different problem....!\nYou're right on the dvdplayer issue, and the Next Item button in OSD does the same.\nRegarding the solution, I certainly can look into moving the selection stuff (back) to GUIWindowVideoBase. Before I do so, I'd like to make sure I understand how you see this: do you prefer either 1 \"Play Part\" item, which would trigger the part selection dialog, or multiple \"Play Part 1\" .. \"Play Part n\" items without part selection dialog?\n. jmarshall, I think I've nailed it. The new commit implements the change as discussed. I've retested as usual, two types of stacks \n- ISO stacks - every possible combination of the regular item selection or the context menu, regular resume or start from beginning, on stack or on part of stack\n- normal stacks - same tests, both item selection (of course part selection is not avail here) as well as context menu.\n. jmarshall - can we move forward now that eden is out? I've rebased the commits on latest master\n. @jmarshallnz - i squashed the commits since they really belong together. Let me know if anything else needs to change. If you're happy with it, let's pull it into master.\n. is there anything left to do or can we finally pull this now?\n. all squashed\n. @theuni thanks for the offer. However since I'm rather constrained on time (as we all are) I'd like to know a bit more about what this exercise would entail before signing up. From reading your description, correct me if I'm wrong, you're not looking for 'code' but rather to build a standardized exhaustive 'simulation' collection of all situations that can occur e.g. files, files in the video database, stacks (both types), etc. It almost sounds like building a test set, but I'm not sure whether you would want to have a physical set of files/folders which each developer should work against when testing code, or if you'd want to have a descriptive set of \"how to set up\", or if you're even talking about automated test sets... you can PM me on patrick dot middag at telenet dot be.\n. I have an ION and I confirm YADIF is no-go. Without hardware deinterlacing, the only option that works DVDs  is \"none\". So I have a custom build that includes a combination of software (YADIF) and DXVA deinterlacing options: Auto (defaults to DXVA if available, according to dxva deinterlacing fallback options per a11599's patch), Auto LibAvFilter (uses the auto option as in elupus' patch), Forced LibAvFilter, various Forced DXVA options (per a11599's patch). \nStarting point is WinRenderer::Supports(EINTERLACEMETHOD method), where the standard methods always return true, and the DXVA options also return true if they are available. This gives me the combination of all methods. Secondly, in DXVA::SelectProcessor(), I use \"progressive\" if interlacemethod is None/LibAVfilter (because there's no hardware deinterlacing to be done anymore). \nThe trick is for \"Auto\", I check in DVDPlayerVideo if DXVA deinterlacing is supported (I know, probably not the best place) to decide whether to turn on YADIF or not.\n. @elupus: \nI have tested it and the good news is that it works with DVDs and no framedrops at all on Atom/ION combos. I just changed DVDPlayerVideo.cpp where mFilters is assigned and added | (binary or) CDVDVideoCodec::FILTER_DEINTERLACE_HALFED in both cases (forced and automatic). I played a couple of interlaced and non-interlaced materials (with and without stills in menus) and all plays fine. The bad news is that since it's half rate, you still notice some residual artifacts from the interlacing (like pixelisation) but overall much better than interlaced!\n. very nice work indeed. I've tried it on the Atom/ION 330 platform and it seems to be fine. The only comment I have is that yadif double rate still doesn't work - too many frame drops. Suppose the Atom CPU is too slow for yadif double.\n. tested on ION. Works nicely. \n. further testing has revealed variable performance problems on the ION. Something in the logic causes stuttering playback, infrequent frame drops (on several PAL DVD at 25fps the deinterlaced framerate is not steady at 50fps as it should be but jumps up and down - sometimes even below 40fps). \nFor comparison the original patch created by isidrogar didn't exhibit this problem on the same hardware (see ticket #11635 and forum thread http://forum.xbmc.org/showthread.php?t=103440 )... \n. sounds like a good thing to do. Have you seen pull request 342? Some of the new code is already in there.\n. hi isidrogar: for example in CDecoder::OpenTarget you're trying to achieve the same goal but slightly differently. I tried to merge your code with a11599's and that was almost impossible to do.\n. I have updated the commit as per both your recommendations. \nJust to clarify why I initially chose CUtil: the PlayDVD function is also residing there (called from CAutorun). But I agree it's not the best placement.\n. @jmarshallnz, @cptspiff: why closed, without pulling it?\n. Based on all your comments I have taken a different approach. Changing the fps to zero is not feasible since you would get divide by zero in many places... However, I keep track of hints.still in a DVDPlayerVideo member and if this is true I pass an fps value of 0.0 to the RenderManager (it appears that there the fps isn't really used for anything else than calculating the refresh rate anyway!). The BaseRenderer will just ignore the gui setting for refresh changes in case it is passed a zero value for fps.\nSee second commit.\n. @elupus: thanks for noting. I accidentally mixed up my branches. This time it's the right commit (6aca22b).\n. @elupus - bumping on Monday as requested... The case you are describing, where a main movie is in a menu is quite rare (I have seen a case where you had a sequence of movie trailers in a menu title set). Even the many dvds that I tried have the stills hint off when playing animated menu parts - but I don't want to say that it doesn't happen though. \nI've also been thinking about alternatives. Would it make sense to look at the fps values reported by ffmpeg and use the same technique as currently used in the PR but only if those values are not making sense. Back to the example, what does a fpsscale of 3 mean anyway? (hint.fpsrate = 91 / hint.fpsscale = 3)\n. I don't know ffmpeg that well. However, researching this this issue, I found on the web that one should in this case refer to the container, i.e. the DVDNavigator... Looking  at that possibility, we could determine whether we are in a still simply by looking at the navigator's messages, eg. DVDNAV_STILL_FRAME. What are your thoughts on this?\n. see commit ec5c6aa for what I mean... I tested it and it also seems to work correctly. This time no messing with hints, just setting the still flag when receiving the DVD_STILL_FRAME from the navigator, turning it off when receiving anything else.\n(apologies for the odd commit name, I meant: \"attempt detecting DVD stills using ... \"etc.)\n. @elupus: so If we cannot trust the container (i.e. DVD not always indicating a still when audio continues) or we cannot trust the stream (i.e. ffmpeg reporting the silly fps values) - what can we do? \nThe only thing left IMO is to lower the tolerance for switching refresh rates, like if 30.33 is given (91/3) the BaseRenderer could decide not to switch refresh rates as it is too far off from any refresh rate known.\n. I noticed that av_find_stream_info stores the number of frames it reads during probing in \"codec_info_nb_frames\". \nFor regular video it seems to be 15 usually, but for stills it's 1. \nSo with the assumption that 0 or 1 frames would mean invalid fps (1 frame clearly insufficient for fps detection), I've worked from there, passing the \"invalid fps\" boolean, starting at DVDDemuxFFMpeg --> DemuxStreamVideo --> DVDStreamInfo --> DVDPlayerVideo. \nFinally BaseRenderer is passed an fps = 0.0 in case the fps is not to trust, thus allowing it to skip the selection of another resolution/refresh rate.\nPlease have a look at the new commit in the pull request (to avoid confusion, it's a single squashed commit)\n. the problem with fps = 0 is that later on in the DVDPlayerVideo (OpenStream) it gets reset to 25 (hard coded). Don't think we want that either. My solution is less intrusive, but if you prefer I can try to sanitize the code and I'll propose something better along those lines.\n. here's my new proposal. You'll see in the original code that DVDPlayerVideo sets the framerate to 25 if either fpsrate or fpsscale is zero... This seems to be needed to calculate frametimes, speed limit etc.... too much and too fragile to touch. So I didn't change any of this, but just kept the information about invalid fps in the boolean that I use to prevent refresh rate changes for stills. Hope you like it this time.\n. @elupus: ok then, I think you caught the issue of m_resolution very well... I changed the code to accomodate both your comments and it's ready for merge now. I have one remaining concern, and I'll leave it up to you to judge. When WinRenderer or LinuxRendererGL initialize, m_resolution is equal to RES_PAL_4x3. When passing through CBaseRenderer::ChooseBestResolution and the first stream is a still, fps is 0.0 and thus the m_resolution stays at RES_PAL_4x3, causing the GraphicContext to potentially try switching to that.\n. update: did a bit of further research regarding the RES_PAL_4x3 happening on first stream being a still: I believe we're all good. CGraphicContext considers this as an 'invalid' resolution and will choose RES_DESKTOP instead, so that's what we want anyway.\n. changed the check to <= 2 frames. Also included the actual number of frames in the logdebug output.\n. made the change, ready to pull!\n. took into account your recommendations. libdvdid is now a separate folder under \"lib\" and also a separate project in vc2010. I have included the full distribution of the lib and all *nix makefiles. I will need some help to make it build on non-windows platforms though...\nI'm not sure where you needed licensing information from, but not much I can find at http://www.srcf.ucam.org/~cjk32/dvdid/ \n. The author's (Christopher Key) web site seems to be a student faculty site. Not sure how long that will be up there... About downloading, there's dvdid-0.1.1-dev.zip which contains the latest stable release compiled dll. I haven't found any other upstream. My gut says we better keep it in our source.\nI also noted Christopher Key has posted once on the forum here: http://forum.xbmc.org/showthread.php?p=595153 \n. I think we've waited long enough. I slapped in the GPL headers - crediting him as appropriate (name, email, website). I have split the commit into the different steps: library source files, header updates, VC++ project file, xbmc integration for dvd label uniqueness. \nSomeone will have to update this for Linux...\n. well that's essentially what the dvdid routine does, and in addition it uses size and date of files. I can look into replacing the CRC computation with XBMC built-in. Elupus, can you hint me to where this is in xbmc code base?\n. Looked at utils/Crc32.h and cpp. Apparently only 32 bit. Is it ok to reduce precision? Currently dvdid does 64bit crc. \nRegarding your comment about time&date: I think it's safe to assume they don't change. If they change, we're talking about another disc (like changes on multisession disc) so it deserves to be taken into account in the calculation.\n. and secondly: Crc32 doesn't do bytes/int/longs as the current code does, - it only handles char's. I don't see the point in compromising functionality that seems to work ok?\n. elupus, arnova: Done a bit more thinking and I think CRC32 is still plenty enough. I have changed dvdid code to use xbmc's crc32. The logic is pretty much intact, still calculating on the same file info elements (all files in VIDEO_TS: size, name, creation time + content of two standard IFO files). The unique id is of course a bit shorter now (8 characters less i.e. 32 bits vs. 64). I've done a quick test with resume dvd and it works OK. \nCould we have this code go in and have it further refactored later?\n. update: finally got contacted by Christopher Key. He's fine with our approach that it's now our code, and that we will give him the credits for the original library it was based on. I just updated his address/web site in our GPL headers.\nAlso fixed a bug when playing dvds after redirected from a stub file. The progresstracking item was still pointing to the stub (didn't get set to the dvd, which is needed for the dvd disc to actually resume!).\n. @elupus: I've taken your simple example and elaborated it into the MediaManager class code (protected method HashDVD). It's much simpler, however not as simple as you suggested. I used a lot of the work that has been done in the previous code, and I'm still calculating the CRC on the file creation time, size and name properties (ALL files) plus the first 64Kb (max) data of all IFO files.\nYou'll also notice that we need a couple of checks to make sure we actually get what we need and that accessing the optical drive logic is a bit different from windows to linux. \n@arnova : I'd like to have you test this once again - note that your stored unique ids won't work anymore as the calculation is slightly different.\n. @elupus  - I think I have taken into account all your comments now. i got rid of the pDir - I think the Directory factory is smart enough (should be) to create the right instance given the strDrive value. I still need someone to test this again on Linux (you or arnova).\n@arnova??\n. yes all the commits (2) are there, they're squashed.\n. have found time after all... here's the one commit that rules it all. All comments have been incorporated. I have also renamed the restart parameter in CAutorun and CUtil::PlayDVD in order to avoid confusion with the other restart parameter. The hack in Application::Playfile was removed.\n. @arnova: applied, see 3rd commit\n. @elupus, all done!\n. @elupus - audio cd case handled.\nAnyone: got any chance testing this on Linux? If succesful, this seems to be ready for pulling...\n. yes it does. I guess Linux doesn't like \"CMediaManager::\" in the prototype. The CStdString variable name is not important. Can you correct locally and test? I'll submit a correction later today.\n. ok guys - thanks for all the feedback and testing. I've made the last updates and I hope this is good now. \nRegarding the prefix, I don't know, it could be whatever, I just wanted to avoid that any other code within xbmc would parse this out and (mis-)interpret it. The risk is that iso9660:// would be \"recognized\" and that would require more testing. Also in favor of removable://, is that you could store any removable media resume point (like for audio CDs, non-Java BDs etc.). But right now we only do it for DVDs.\n. Win32 is definitely ok. And arnova confirmed that it works on Linux.\n. made the cosmetic change. This is really the last I could do (leaving on a week business trip tomorrow)\n. i'm experimenting with hardware decoding of dvds and on the ION it seems to be doing just fine. Now what we could do to mitigate performance risk, is to only auto crop every 25 frames (or so) and assume that in between the same crop rectangle has to be applied. This would reduce the load significantly (that could even be used on software decoded).\n. true, but it waits too long (at least half a frame time too much) before rendering the 2nd field. By this time it should be rendering the first field of the next frame.\n. maybe I get it wrong but the first field gets rendered at presenttime (because of the wait). The second field doesn't wait (as the time is already past presenttime) so comes right after (so slightly too late). \nThe more I think about it it's probably just nitpicking... I thought I had resolved my choppy Bob playback issues, but apparently on the ION it's still not working with this change... Closing until I find something better.\n. To fully answer your request: before change I see an incorrect fps (too low) displayed on the osd of the info manager (causing wrong interpretation) - After the change: more accurate fps.\n. any further thoughts? I suggest you try and see for yourself with deinterlacing (frame doublers like Bob) and the effect on fps displayed.\n. we are just recently starting to find out that the Windows xp compatibility threading change is causing a lot of headaches with dxva rendering, deinterlacing, frame counting etc. Recompiled with TARGET_VISTAPLUS preprocessor define and this problem disappeared too..... Closing this request as no longer relevant.\n. well actually it did work for stills, but it apparently chose software decoding anyhow (it's just a hint, isn't it?). So I don't disagree with you. I've made the change, tested it and works ok.\n. @elupus: I'm noticing two problems.\nFirst of all bad news, I've just played a dvd that does not decode well on hardware (lot of black & macro blocks in the image). It seems to be a rare case, but could it be a driver issue or a rare case of broken mpeg2 format not well decoding on the nvidia hw-decoder? or ffmpeg?\nSecondly: the hw-decoder seems to be no more performant than software. if combining with dxva deinterlacing/rendering/scaling, it seems to be too much for the GPU with framedrops as a result. \nThoughts?\n. I tried multiplying the number of max_slices by * 5 in dxva2_mpeg2.c, as per TheSpecialist's suggestion. No change...\nHere are visual examples: \nhttp://imageshack.us/photo/my-images/29/screenshot000f.png/\nhttp://imageshack.us/photo/my-images/823/screenshot001ou.png/\nI still hope it can be fixed through an ffmpeg patch.\n. update: \nI just used MakeMKV to rip the major VOB title of this problem DVD to an MKV. When playing back this MKV in XBMC, DXVA2 is turned on for MPEG2 decoding. The problem is exactly the same as described above, as you would expect. So then I tried playing the same MKV on MPC-HC, also trying to use DXVA accelerated mode. I'm not even getting a picture in MPC-HC, just a green screen!! A bit of search on google teaches me that this could be due to a driver issue OR dxva2 implementation OR a combination of both.\nOne suggestions would be to detect \"non-compliant\" MPEG2 and then fallback on software decoding, but I have no idea how to do the detection.\nFor now, I would assume that this is an isolated case and that we can consider turning on hardware acceleration for DVDs after all. \n. @oldmanuk. It already worked fine with the previous ffmpeg currently in Eden, for almost all dvds I tried, except one.\nThe issue is with hardware decoding on some (I suspect borderline compliant) mpeg2 streams. I used makemkv to create an mkv with mpeg2 stream directly from the dvd and it plays badly with hardware decoding, correctly with software decoding. It's not only xbmc but also VLC, MPC-HC etc.\n. here you go: http://www.mediafire.com/?4dvvwj5aw2esv49\njust try with hardware decoding on, and then off. see the difference for yourself :-)\n. oh and by the way, still the same on ffmpeg 0.10.2.\n. @oldmanuk : did you get a chance to look at the sample?\n. yeah - mpeg2 hardware decoding doesn't seem to be as pervasive (or accurate) as h.264 so software decoding is better in this case. We could also try to enable it via an advancedsetting (disabled by default), any thoughts?\n. agree to close - this is only a nice to have. Almost no media player software tries to hw accelerate SD mpeg2 (or DVD) anyway...\n. hi everyone - You may recall this PR from a few months ago. I just got pm'ed by someone who suggested to reopen this because HW-decoding on DVDs may be beneficial on Raspberry Pi. I don't know anything about its capabilities to hardware decode mpeg2 (nor about the difference in performance with software decoding for that matter). Any suggestion on whether this is a legitimate suggestion?\n. @huceke - ok thanks for that info - closing.\n. here is the project file:\nhttp://www.megaupload.com/?d=D3V7WSAT\n. agree. It's a dual core (4 threads) Atom 330. Running on windows thou - so I'll run xbmc windowed and look at task mgr. Could you provide a patch to MT yadif, so I can test?\nEDIT: I tested with full YADIF vs half-rate, and the difference is a CPU usage of 40% vs. only 25%. You see indeed mainly one core going up.\n. rebased, should merge now.\n. works well, however Atom/ION doesn't have enough juice.... interlaced (2x fps) playback is choppy when playing in background. (I assume you mean, when pressing ESC and overlaying the home menu on playback - which requires TAB to return to full screen playback?)\n. when I was debugging the performance issues - which turned out to be due to the FairMonitor/condition variable - I dug into how the DVDVideoPlayer OutputPicture thread and Application Render thread are working. I found that the flippage sets the \"present time\" for each full picture that is decoded. The first present step (full frame or field 1) happens right after the wait for the \"present time\", the second present step also \"waits\" for the present time but as this is of course always past due (same present time is used for both fields), there is no wait at all. There is an opportunity here to provide a more accurate present time for the second field, and to decide to skip it if the current time is already past that 2nd present time.\nAdditionally the advantage would be that the 2nd field would be presented at a more predictable time, improving the cadence. Now it's sort of breaking the cadence. If you have a fast CPU, the 2nd field presents before mid-frame time, if you have a slow CPU the 2nd field is presented after mid-frame time. I also found that the 2nd field usually takes less time to present (only a few ms) than the first field (my tests were limited to DXVA PresentBob). In order to have perfect cadence, both fields should take less than half the frame time.\n. jimfcarroll - I still see that you're using the preprocessor to decide between native CV (Vista/7 only) and the new SDL-like logic. I was hoping to see runtime selection so one build would be working optimally on each version of Windows.\n. This causes a problem with ALL my mkv's that have embedded S_VOBSUBs, they simply don't display anymore.\nWhen I use mkvextract to get them outside of the mkv, they work fine, so it's not the VOBSUB itself. Also the subs play fine in all other media players. I mux them back into the mkv using mkvmerge, and they don't display anymore. It took me a long time to pinpoint where the problem came from, and through debugging I found out the problem was in ffmpeg. I then found this commit and reversed it. Problem solved.\nHere's the info on the subs track:\n(MKVInfo) | + A track\n(MKVInfo) |  + Track number: 3\n(MKVInfo) |  + Track UID: 1490027917\n(MKVInfo) |  + Track type: subtitles\n(MKVInfo) |  + Lacing flag: 0\n(MKVInfo) |  + Codec ID: S_VOBSUB\n(MKVInfo) |  + CodecPrivate, length 359\n(MKVInfo) |  + Language: dut\n(MKVInfo) |  + Content encodings\n(MKVInfo) |   + Content encoding\n(MKVInfo) |    + Content compression\n. if you're OK, then go ahead and pull :-) \nOne other thing, I mentioned PR 579, which also needs to go in after this one. It is proposing changes in Autorun.cpp as well. I have rebased their change on mine and it's a quite easy merge.\n. Rebased after PR 579 changes (ScudLee). Also removed the pointless PlayDisc passthru function, but to avoid too many changes in a lot of files, I have renamed the new RunMedia to PlayDisc... (so RunMedia doesn't exist anymore). I think you'll like this.\n. that's odd, I just tried it and Audio CD works fine (at least on Windows). Are you sure this is for Audio CD or for another type of audio disc (like MP3s)?\n. The weird fallback to D: in case of Linux (or non-Windows) was there all along. I suspect it's an xbox leftover (and commented it as such) but being limited to Windows I thought it might be safe to leave it there.\nI think the D:\\ is indeed the fallback that causes the issue. When this gets passed to RunDisc, the following statement will probably cause to return false immediately, before even checking whether we are in a root folder.\nif ( !pDir->GetDirectory( strDrive, vecItems ) )\n  {\n    return false;\n  }\nThe difference with ScudLee's code, is that an empty mediapath gets replaced in PlayDisc. For audio CDs this seems to be an issue. While we need to leave that path replacement there (for DVDs etc.), we can do one of two things:\na) remove the fallback (as I suspect it's XBOX anyway) which leaves the path empty, so that RunDisc will correctly pick it up - empty path should then only happen for non-data CDs (that are not iso9660 etc.).\nb) add an additional check for audio CDs and leave the mediapath blank.\n. just tried the same approach on Windows. I added \nCCdInfo* pInfo = g_mediaManager.GetCdInfo();\n  if ( pInfo->IsAudio( 1 ) )\n    mediaPath = \"cdda://local/\";\nin front of the #ifdef in PlayDisc and it works fine. It seems that RunDisc has all the code already to play audio CDs.\n. just tried it. CDAudio doesn't work as it doesn't like (believe it or not) D:\\ on Windows.\nI changed the code as follows and this works fine for both Audio and DVD (I moved the #ifdef at the end, and checked whether mediapath is still empty).  DVDPlayer line 450 takes care of the iso9660 translation to D: for DVDs.\nCCdInfo* pInfo = g_mediaManager.GetCdInfo(path);\n  if (pInfo == NULL)\n    return false;\nif (mediaPath.IsEmpty() && pInfo->IsAudio(1))\n    mediaPath = \"cdda://local/\";\nif (mediaPath.IsEmpty() && (pInfo->IsISOUDF(1) || pInfo->IsISOHFS(1) || pInfo->IsIso9660(1) || pInfo->IsIso9660Interactive(1)))\n    mediaPath = \"iso9660://\";\nif (mediaPath.IsEmpty())\n    mediaPath = path;\n#ifdef _WIN32\n** if (mediaPath.IsEmpty())\n**    mediaPath = g_mediaManager.TranslateDevicePath(path);\n#endif\nauto_ptr pDir ( CFactoryDirectory::Create( mediaPath ));\n. Works ok. Thanks! I agree the problem of multiple CD devices on Windows won't be an easy one to solve...\n. was too quick... the \"iso9660://\" is causing just a little bit more trouble with the whole intent of this pull request. When the path starts with iso9660 the MediaManager cannot determine the disc's volume label, see example log below.\nGetDiskUniqueId: Trying to retrieve ID for path iso9660://VIDEO_TS\nCMediaManager::HashDVD - Adding file content for dvd file: VIDEO_TS.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_01_0.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_02_0.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_03_0.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_04_0.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_05_0.IFO\nCMediaManager::HashDVD - Adding file content for dvd file: VTS_06_0.IFO\nGetDiskUniqueId: Got ID removable://_5a8815c9 for DVD disk\nThis is easily fixed if you change line 279 of MediaManager::TranslateDevicePath to also recognize the paths starting with iso9660, as follows:\nif(devicePath.empty() || devicePath.Left(12).Compare(\"cdda://local\")==0 || devicePath.Left(10).CompareNoCase(\"iso9660://\")==0)\nCan you make the change and commit, or do you prefer me to submit another PR?\n. @elupus - sorry to bother you again. The proposed solution fixes the resume issue, but another issue remains. After playing a DVD the \"soft\" eject button doesn't work anymore. THrough debugging I found out that Windows can't get a valid file handle anymore on the device. I tried this several times to rule out the accident, and it systematically happens again. Then I changed the code to open the DVD directory using the drive letter instead of iso9660:// and bingo, eject now works fine again. I suspect that iso9660 directory does something Windows doesn't like. \nThe solution is again simple, and replaces the one from my previous comment, as we are addressing the translation of iso9660 even before MediaManager::TranslateDevicePath would ever see it.\nAutorun.cpp, line 100:\n  if (mediaPath.IsEmpty() || mediaPath.CompareNoCase(\"iso9660://\") == 0)\n. Thanks for this solution.\nin general, is it safe to assume that the strlen is greater than 12 (first) or 8 (second)? Shouldn't we have an additional test in the condition like \"strlen(strDVDFile) >= 8\" ??\n. two steps are necessary for the abovementioned reason. For libdvdcss to work fine with CSS encrypted discs on Windows, you need to strip \\VIDEO_TS\\VIDEO_TS.IFO entirely, leaving just the DVD drive letter.\n. I wouldn't want my \"by filename scraper\" to be dependent on a php service running on http://www.elbsolutions.com... Potential privacy issues and simply I don't see the point. Perhaps we need a binary addon that does this processing locally.\n. @elupus \nthanks your comment made a lot of sense. The PR is now much simpler, achieving exactly the same goal. Top / Bottom flags are also used in Weave and Blend, which are OK from DXVA point of view. Only PresentBob sets Field0/Field1 so I'm basing the code on these flags instead.\n. @CrystalP - I agree, but it was broken since the split between mode and method. It's cleaner to let dxva look at the presence of Field0/1 flags rather than to try interpreting what \"auto\" means. The player and RenderManager have done this already.\n. @CrystalP @elupus  - any thoughts on progressing this pull? I've been using this patch now for a few days and it seems to be a lot better for the \"Auto\" deinterlacing mode\n. the problem is not that big. With Auto/Auto, the renderer stays in PresentSingle (no frame doubling), but dxva still picks a bob processor. On low-power gpus that is less efficient than progressive. This PR just fixes this unnecessary selection of a bob processor. \nEDIT: if the mode = Auto, the renderer decides to deinterlace based on the media flags. If media = progressive, the renderer correctly uses PresentSingle. Now dxva doesn't look at the media flags, so Auto pretty much means ON for dxva. The method is then either Bob, or whatever else the GPU offers, but never actually off... I hope this clarifies a bit what this pull is trying to resolve, just by looking at what presentation method the renderer is using (looking at the field 0/1 flags in case of a frame doubling presentation mode).\n. by the way it can be easily seen through the debug logs.\n. i have an ION / Atom 330 and I have to say the difference is minimal, but noticeable (a few frame drops) when you feed 24 fps progressive to a bob processor vs. progressive processor. In the interest of image quality I like the option to turn off bob in case the renderer doesn't need it. \nI'm running nvidia drivers 295.73 on win 7.\n. With this pull, the correct processor is instantiated right away, because it takes the renderer flags (field0 or field1) to turn deinterlacing ON at DXVA level. If those fields are not passed, it assumes that deinterlacing is OFF (logical, since renderer is not Bobbing). Once this is done, it doesn't change anymore, until you would change either mode or method.\nThe current code incorrectly tries to interpret the mode, which has already been interpreted by the renderer.\nSo back to your comment about the frame drops. On ION, the occasional skips are certainly noticeable, and not just during the \"startup\". So I doubt the analysis you made is correct... The only solution is to turn off deinterlacing (by setting the MODE to off --> thereby causing the method to be None --> the only way to set the processor to Progressive).\nAbout your fear that changing the processor is \"undocumented\". a) you can already do that with the current code, by switching the mode between ON (or Auto) and OFF during playback - you'll see the effect in the log, it selects another processor. and b) In my experience switching from progressive to bob and back has, contrary to what you're saying, no effect on playback, at least not on nVidia. The switch of processor is instantaneous. \nRegarding Image quality, that was not the concern at all. Progressive material looks just as good on bob as it does on progressive. Clearly, the processor takes good care of the pictures.\n. one more comment: I have another HTPC (AMD E450-based), which is not suffering from this problem (as @thespecialist with this E350). This doesn't mean the problem isn't there, it's just that a more powerful CPU/GPU combo is fast enough or has a better optimized DXVA implementation than the nVidia ION.\n. @CrystalP - I understand your point. Runtime detection would be best but how do we make sure what criteria to runtime detect? \nIn order to mitigate elupus' concern, another approach is to still follow the logic but to restrict the automatic changes in processor selection during playback. If the renderer is bobbing and therefore pushes the selection of a bob processor, that's fine. But once you're there you don't want to allow going back to progressive automatically. \nSo in Auto mode, the idea is to allow automatic change from progressive to bob, but not the other way around.\nThe only way to go back to progressive is to manually turn deinterlacing off in the GUI.\nI've updated the patch to do exactly this.\nYou will also notice that I'm using the time variable for two reasons: 1) because between playback of different videos the deinterlacing settings are not correctly reset (dxva object is not recreated).  and 2) to only allow the behaviour described above to happen after the start of playback\n. edit: see below\n. I've made the update to use an advanced setting, \"DXVADeinterlaceProcessorAlwaysOnForAutoMode\". The default is \"true\", which reflects current master baseline code. If setting the value to \"false\", as below, you activate the behavior of the patch.\n< video >\n    < dxvadeinterlaceprocessoralwaysonforautomode > false < / dxvadeinterlaceprocessoralwaysonforautomode >\n  < / video >\nI would still need some help on the device detection, but then again I'm thinking that we can probably get around this with a description in the Wiki...\n. as we don't need this anymore, closing. Referring to https://github.com/xbmc/xbmc/pull/779\n. Done some testing, works fine on DVDs. Forced it using advancedsetting and Auto/Auto, and correctly picks the right processor on each of the titles within the DVD structure. Also tested some HD mkv's and everything's good there too.\nThe only thing I can't check immediately is what it does on the ION. At least I can tell that it doesn't detect ION on my GT240 or HD6320 :-)\n. update: just tested on Atom/ION330 - detection ok without advancedsetting. I'm pretty comfortable that this is good to go!\n. a minor comment, I found that 0x0865 is also ION here: http://mail.laptopvirtualization.com/hcl/video?order=Model&sort=asc&page=18\n. fair enough, the m_binmenu change is gone and the patch file is added. I'm going to add a sample in a few moments.\n. OK, here you go: http://www.mediafire.com/?8qhhqlakakvabbp\n. @jmarshallnz - @topfs2 - any update on the scrapers work? apologies in case I missed that.\nI know it's not beautiful, but this PR offers a really simple way to manually add videos to the library (e.g. kids dvds, home videos, etc.). Not sure if the average user feels comfortable with nfo file tweaking. \n. @cptspiff - @jmarshallnz suggested to run this by you.\n. @cptspiff - sorry to bump and bother you. Any thoughts?\n. fair enough. I'll close this then.\n. thanks for both your comments and providing insight in the class hierarchy :-)\nI think I got it right this time. I tested it and it works fine. Commit updated, and ready to receive more comments.\n. @jmarshallnz - added a commit that addresses everything so far.\n. the latest commit does everything you suggest. The only other thing I'd like to look into is to clean up the GetFilteredItems logic when an actual filter is applied. Right now it first clears then adds back items. Perhaps to be in alignment with the \"no filter\" situation (and also with the way we filter out watched items) we should remove what doesn't match the filter criteria.\n. You're right about O(n), actually because of the movement of nodes after the removed element(s). Still the code of GetFilteredItems was inconsistent in a way that for no filter it just returned the passed items without change (assuming that m_unfiltereditems has been loaded into that items list prior to the call), and for a non-blank filter it did pull from m_unfiltereditems, not making that same assumption. So I wanted to be consistent and filter the list that is passed in either case. You'll see that this commit is using one clear() + 1 destructor + 1 Append (3x O(n)) . That's still better than potentially n x O(n) if we would be clearing items.\n. you got it :-)\n. sorry my previous comment wasn't clear, just wanted to say the commits are rebased and separated out as you suggested.\n. Yes, I confirm. I had to remove the common plugin cache script to work around this issue.\nEDIT: I'm using Windows 7\n. sorry to enter the discussion so late. \nI think it would also be nice if you choose an \"interlaced\" resolution (25.00i for PAL or 30.00i for NTSC) for SD material, so that the TV/Receiver will also turn on the native deinterlacer. Of course, XBMC deinterlacing should be turned off then too...\n. I would think so. The only thing that needs be done is set the right resolution to either 25i (720x576x25i for PAL) or 30i (640x480x30i) depending on the source material. I think that even \"progressive\" DVDs should play well with this.\n. if your display is in a progressive resolution (like the ones you called out, 37 and 41) and you feed it interlaced material then it has to be deinterlaced at the source (ie xbmc). My point was that if the material is interlaced (and the player knows this), and you set the resolution to interlaced as well, the display's deinterlacer will do its magic. \nI noticed too that not all GPUs have the SD interlaced resolutions listed. Have no idea why that is.\n. @adam-aph - I agree with the others here. Please be a little more patient and get your work into the basecode in a stepwise approach. Initially this will also allow you to get feedback from a wider community using a simple set of settings. As jmarshall says, this will then teach us what else we need to expose...\n. I've added more commits:\n- moving the GetResumeItemOffset code to a more logical place i.e. VideoDatabase. This way Application doesn't have to call GUIWindowVideoBase any longer\n- got rid of the crazy bit manipulation to code the part number as part of the startoffset.\n. the work is done. I've added one final commit to make sure the SaveFileStateJob properly updates the list. The reason is that for an ISO stack, the current item is actually the part being played, which in itself does not show up in the library list. Therefore, we need to notify the list to update that stack item. Otherwise, we have unexpected results with a bookmark of the \"wrong part\" being used (unless you reload the list by stepping out and coming back).\n. hi jmarshall - thanks for the code review. I've addressed the pointer comment and retested the code. Commits are squashed.\nRegarding the videodatabase code, I agree, I've used Directory/FileItem classes to parse out the stack parts and also there's two new methods that take FileItem ptrs as arguments (the code copied down from GUIWindowVideoBase). The only way I see is to pass a VideoInfoTag instead of a FileItem ptr. But I would then have to move some checking code back to GUIWindowVideoBase (and wherever else this is called).\n. any other comments - if not, can we assign it to the July milestone?\n. @jmarshallnz - I've addressed all your comments (I believe). \n- The missing delete is addressed through a smart pointer, consistent with other code. \n- The vector is now cleared using clear()\n- The CApplication member (now protected) is no longer read by another thread, but passed by value to the savefilestatejob.\nnote: I rebased & left this for your review as a separate commit. When you're ok with final code, I'll squash before you pull.\n. @jmarshallnz - done - rebased and squashed (except indentations for easy review)\n. @jmarshallnz - once again, done.\n. no, it's all there. See commit 02eff8f\n. ah. The whole point was move them out of CGUIWindowVideoBase because CApplication calls them. I don't like that, as it violates the layering.\nEDIT: \nlet me know if you prefer CApplication calling CGUIWindowVideoBase - I can make that change but it wouldn't make me happy :-(\n. I could also move the code back to CGUIWindowVideoBase as you suggest and have CApplication call a stripped down version of it (essentially the part that gets the Bookmark from the VideoDatabase. That would probably be the best way overall.\n. @jmarshallnz - once again, I have implemented your comments, I believe it must be ready for pulling now ;-)\n. Description updated.\n. @elupus - could you take a look\n. regarding the stream opening: the issue is that all calls end up in OpenAudioStream(int iStream, int source) - the iStream passed is originating from the dvd navigator (as you said, it dictates which stream to use). The issue is that OpenAudioStream opens the stream using that id with m_pDemuxer->GetStream(iStream). \nWhile debugging the \"mr bean\" dvd, I saw that it ended up opening audio stream 0, which the demuxer thought to be the video stream. That's fine, but there's no audio in that and the audio codec was set to MPEG2_VIDEO... :-) \n. I tried breaking in HandleMessages. There is not a single CDVDMsg::PLAYER_SET_AUDIOSTREAM coming through.\n. so I guess that's the issue with this dvd: there is no default stream chosen hence DVDPlayer relies on SelectionStreams, which has completely wrong info about stream ids.\n. @elupus - I've now updated taking your comment into account about correlating the physical ids. The solution is simple and elegant, we just convert from physical to demuxer id, right before calling demuxer-getstream so we are sure nothing else changes.\nRegarding the dvd wait state, I think I've nailed it down now to the bare essential. The cause was the holdmode in combination with the dvd wait. The hold mode being put to HELD seems to interfere with the correct processing of the dvdwait state - at least in the mr bean dvd I've trouble with. By removing this and processing the wait just like the STILL case right above, everything seems to work ok.\n. small update done to streamid commit: added condition that stream mask has to be NAV. Some calls to open audio stream for dvds still use demuxer source mask in which case we must not convert.\n. I agree, the navigator is in charge, but the Open(A/V)Stream methods do get called, and in these cases there are the rare situations (seen this with only the mr bean dvd set) where the IDs don't match. \nWhat I mean is : the navigator being in charge, says, \"open audio stream 0\". This gets translated further down to OpenAudioStream 0. Unfortunately, this then gets stream 0 from the demuxer (which appears to be a video stream).\nThis PR fixes this. I'm not proposing any other change to how these methods get called. Are you suggesting to make changes to the call hierarchy?\n. CDVDPlayer::Process calls OpenDefaultStreams around line 1060 (line number after insertion of this code).\nCall stack:\nXBMC.exe!CSelectionStreams::GetDemuxerIdForPhysicalId(StreamType type, int physicalId, CDVDDemux * demuxer)  Line 315   C++\nXBMC.exe!CDVDPlayer::OpenAudioStream(int iStream, int source)  Line 2641 + 0x1e bytes   C++\nXBMC.exe!CDVDPlayer::OpenDefaultStreams()  Line 731 + 0x23 bytes    C++\nXBMC.exe!CDVDPlayer::Process()  Line 1066   C++\nID requested by OpenAudioStream (iStream) is 0.\nCorresponding ID from the demuxer = 1.\nID 0 from the demuxer is the video stream.\n. are you suggesting that a better fix is to alter Opendefaultstreams so it doesn't do anything at all for dvds?\n. update & good news:\nyou were right all along. Just bypassing Opendefaultstreams in case of DVDs fixed it all. The ID conversion is no longer needed. Also, what I thought was a DVD_WAIT issue is resolved with this. It turns out that the superfluous stream opening was causing all this. So, I've updated the PR commit as well as description at the top.\n. Then you agree with the solution I just pushed to the PR?\n. @jmarshallnz - updated per your comment\n. @jmarshallnz - I believe this should be good to pull.\n. I'm having issues with this. I start my desktop in 50Hz. Then when I start a movie at 24fps, it correctly switches to 24Hz, but when I stop the movie it does not flip back to 50Hz (as it used to).\nTo make it worse, when I then play a 25fps (European) Bluray rip, it tries to play it at 23.976fps ('cause sync playback to display is ticked) and that doesn't look good at all...\n. yes, Windows and same issue - sorry I didn't see the forum thread.\n. all - there's an issue with this - all video now plays at half-height (platform = Windows). Reverting this PR solves it for me.\n. I had it on Windows (Release) but not in the debug build... beats me :-)\n. I'm noticing problems with stale information still being displayed in some of the labels on the Video Info dialog (CGUIDialogVideoInfo), e.g. the file path, the media labels (1080, xvid, bluray etc.) and others. When some label is \"empty\" the next time, it does not replace what was there the last time.\nI believe that it has to do with this new feature. Just like what was done with other windows/dialogs part of this change, we probably need to clear the labels in the DEINIT event?\n. just confirming that as a temp fix, I commented out m_loadType = KEEP_IN_MEMORY; in the CGUIDialogVideoInfo constructor.\n. Same problem with CGUIDialogMusicInfo. Just get the album info for one, then for the next. Doesn't update.\n. Confluence, the standard!\n. just tested with commenting out the keep in memory, fixes the issue again for the album info (CGUIDialogMusicInfo)\n. you have to look closely, it's the artist, genre, rating, year and the artwork that remain the same as the first one you opened...\n. i saw that too. (although I used the keyboard arrows). So how to fix?\n. just tried it. it's not entirely fixed: the media flags still don't update correctly. Eg. the first one I view is bluray, the next one not, but the flag is still there.\nEDIT: same with the music albums. Try an album with cover art, then another without. The first album art is still displayed...\n. @pieh - thanks for the great work. I was close to the same solution (only the 2nd if though) but I think this is it. I'll play with it - happy to report experiences after the weekend :-)\n. @jmarshallnz - the issue is that pieh's PR altered the way windows get loaded. Previously they were loaded every time, now they stay in memory and get reused, thereby speeding up the GUI. This means that controls don't get reinitialised via constructor. In between inits an image on a window should be able to change, e.g. the album art, the media flag images... The problem was that if we went from an \"old\" image with an actual texture in it (e.g the 720.png flag) to a \"new\" image path that was empty (e.g. no flag set), somehow it didn't change the texture. By debugging I found that the m_currentTexture would indeed be empty, but the m_texture.m_info filename was still the old one (e.g. 720.png). It turned out m_texture.SetFileName wasn't called, nor did we mark the dirtyregion. \nEdit:\ndon't know if this is useful, but anyway, I first tried to resolve it by calling m_texture.setFileName in CGUIImage::FreeTextures, to resolve the issue of the old filename still being there, but that didn't help. You also need to mark the image dirty, but that caused too many issues so I abandoned.\n. tried this, and it works. Just don't empty the m_currentTexture anymore, so the comparison with strFileName in ::SetFileName works properly. I checked and m_currentTexture isn't much used anywhere else. I also tried messing with clearing out the texture info (m_info.filename) in the free texture method, but that creates a lot of issues with the gui...\ncpp\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  //m_currentTexture.Empty(); <-- remove this!\n}\n. the problem is more than just keeping them in sync.\nHere's what happens if you call m_texture.SetFilename in CGUIImage::FreeTextures:\nhttp://imageshack.us/a/img703/5720/screenshot001yo.png\n. and when you move the m_texture.SetFileName(m_currentTexture); as the first line to CGUIImage::AllocResources, results are even worse. Lots of textures missing.\nhttp://imageshack.us/a/img152/6313/screenshot000u.png\nSomehow, I think that my proposal to NOT clear m_currentTexture is the least intrusive. This member variable is just used to carry the latest texture filename used, nothing else. Not clearing it means you can appropriately track a change from a non-empty to an empty picture...\n. @jmarshallnz : I would say it's almost identical, with the exception of two things: checking the value already in m_currentTexture (don't do anything if already empty) and the dirty region handling. With pieh's solution working fine, I have adapted it as follows. Note that without the if (!m_currentTexture.Equals(\"\")) you get again a lot of empty/missing images as in my screenshots above.\ncpp\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  if (!m_currentTexture.Equals(\"\"))\n  {\n    m_currentTexture = \"\";\n    if (m_texture.SetFileName(m_currentTexture))\n      MarkDirtyRegion();\n  }\n}\n. You're right. Reduced it to the following, and still works ok:\ncpp\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  if (!m_currentTexture.IsEmpty())\n  {\n    m_currentTexture.Empty();\n    m_texture.SetFileName(m_currentTexture);\n  }\n}\nSo it seems that the if guard is what is making the difference. Probably FreeTextures is called when m_currentTexture is already empty but m_texture is not, in which case without the if guard we would empty the m_texture's filename, thus causing the missing images from my screenshots above.\n. Additional info: So it seems to work fine with the code I posted above. However, there are now still cases where m_currentTexture is empty while m_texture's filename is not. Apparently m_texture's filename is set in a number of places in CGUIImage, without syncing m_currentTexture, e.g. the contstructors, CGUIImage::Process and CGUIImage::SetInfo. I tried to make sure we sync it in all those places, but then the problem I described with the screenshots reappears. Similarly, I removed m_currentTexture everywhere and replaced it with m_texture.GetFileName() - same issue. I don't know the code enough, but it seems that those two are not really meant to be in sync at all times.\n. tried it, and looks good. I don't know if there is a real reason to keep m_currentTexture empty for the constant textures. In any case I tried your solution, it works. I have also tried modifying it to also sync m_currentTexture in ::AllocResources and that works too. \ncpp\n    if (m_info.IsConstant()) \n    {\n      m_texture.SetFileName(m_info.GetLabel(0)); \n      m_currentTexture = m_texture.GetFileName();\n    }\n. @jmarshallnz - just to make sure, you mean it like this?\ncpp\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  if (!m_info.IsConstant()) // constant textures never change \n  {\n    m_currentTexture.Empty();\n    m_texture.SetFileName(m_currentTexture);\n  }\n}\n. @jmarshallnz - got it. This works too. Thanks!!\ncpp\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  m_currentTexture.Empty();\n  if (!m_info.IsConstant()) // constant textures never change \n    m_texture.SetFileName(\"\");\n}\n. Quick test shows that this causes problems. Playback heavily stutters after having played one movie. First I get solid 25fps, then at second movie 4 fps or so... Perhaps something's not properly reset? My platform = AMD E450. Had to reverse to restore proper functioning.\n. Windows 7 64bit\n. Confirmed - works well on Windows too\n. @arnova - pulled out the other fix. will submit a seperate PR.\n. @elupus - yes I think it is. I've been testing several dvds with menus with this. All issues with missing highlights / stuck menus are gone.\n. @elupus - I accidentally closed this and reopened another one - 1335. See the link in its description.\n. don't have merge rights... :-(\n. @elupus - there's confirmation that this fixes trac ticket 13294.\n. @elupus - my apologies to be a pest. Just wanted to let you know I've updated the description for better clarity. Could you take another look? (This is really important for people still watching dvds with menus.)\n. any update?\n. DialogFileStacking.xml already sets the default control to 450 - but it doesn't work. I think this is because the list control isn't loaded at the time we try to set focus inside the gui framework. \nThis fix sets the focus after the list is loaded, and is not contradicting the skin settings.\nI would say therefore it is still valid, no?\n. @jmarshallnz - I have looked into where the list gets filled but I don't see how that can be changed or anything. I have made another change - see updated commit - that also seems to fix the issue. \nSomehow, the list lost focus (I know, because I traced and it gets focus earlier). Then GUIWindow::DoProcess tries to give the default control focus if nothing else has already focus. That fails because the code is badly written (it only checks that the currently focused control CANNOT focus - it does not check that currently focused control is NULL...)\nI think this was a bug, and I'm pretty sure this has no impact on other windows/dialogs.\n. Thanks for the hint. I looked at DialogSelect, and applied the same logic. This time it works. Hopefully you like this better :-)\n. yes can do that, and no I don't think the timeGetTime() is needed. That was c/p from the SDL code :-)\n. all done, tested it, and updated the commit. ready for you to pull ! :-)\n. just a general comment. I don't feel comfortable throwing in all these changes after static coverity analysis. As it says, it's static analysis, so you need to complement this with dynamic testing :-)\nSo please this time please perform some basic functionality tests before merging... previous 'fixes' blew up dvdplayeraudio - see c1950f5b068386e1185e2702b9c463c4088b47f4\n. Kyle - there's an access violation upon xbmc exit, at delete m_videoInfoScanner; \n. I never saw this case during the development, because my xbmc menu is configured to show all choices (Settings > Videos > File Lists > Default Select Action = Choose).  But now I understand why some stacks did not play when selected from the \"recently added\" items... So thanks for the good catch :-)\nI reviewed your fix, and I'm OK with it as it sets the right default value. A cleaner solution would be to cover for the default case in the logic (CApplication::PlayStack - case 1 for stacked ISOs).\nEdit: code example, line 3811, right after the if (startoffset == STARTOFFSET_RESUME) block:\nif (selectedFile == 0) selectedFile++; // need at least a default part value of 1, otherwise nothing is played.\n. You're right, and there's no reason for a value of 0.\n. looks good to me, thanks fetzerch!!\n. note: updated commit, originally made a slight mistake.\n. that would be ok too. But even better (from an scalar cpu optimization point of view) would be to have four different float numbers f1, f2, f3, f4 in front of the valuelevel calculation. After the for loop you add them up like outOffset += (f1+f2+f3+f4);\n. Example of how the loop could be better unrolled (more parallel execution because less interdependency): \n```\n    / the compiler has a better chance of optimizing this if it is done in parallel /\n    int i = 0;\n    float f1 = 0.0, f2 = 0.0, f3 = 0.0, f4 = 0.0;\n    for (; i < blocks; i += 4)\n    {\n      f1 += inOffset[info->srcIndex[i].index] * info->srcIndex[i].level;\n      f2 += inOffset[info->srcIndex[i+1].index] * info->srcIndex[i+1].level;\n      f3 += inOffset[info->srcIndex[i+2].index] * info->srcIndex[i+2].level;\n      f4 += inOffset[info->srcIndex[i+3].index] * info->srcIndex[i+3].level;\n    }\n/* unrolled loop for higher performance */\nswitch (info->srcCount & 0x3)\n{\n  case 3: f3 += inOffset[info->srcIndex[i+2].index] * info->srcIndex[i+2].level;\n  case 2: f2 += inOffset[info->srcIndex[i+1].index] * info->srcIndex[i+1].level;\n  case 1: f1 += inOffset[info->srcIndex[i].index] * info->srcIndex[i].level;\n}\n\n*outOffset += (f1+f2+f3+f4);\n\n```\n. updated commit: better potential for parallel execution optimization since dependencies are eliminated:\n- index is not changed inside loop\n- sums are calculated separately and added after the loop\n. @DDDamian Can you take a look?\n. something's wrong with this. When navigating to \"recently added\" the list first loads with the recently added items. The GetFilteredItems then overrides that by loading the complete movie list. Funny thing is that the real \"recent\" items get their thumb loaded - the others stay blank. The issue seems to be that the XPlaylist is not taking into account that this was just the \"recently added\" list, but thinks it's the entire movie list.\n. Montellese, there's still something funky going on with the set thumbs. Especially, when you enter a set, not all thumbs get loaded, and then get back out of it, the set thumb is gone. So are the other sets... When you move the cursor, thumbs appear one at a time.\n. Montellese, another issue: when you change the setting \"group movies in sets\", it only takes effect on the movie list when restarting xbmc. That used to work before.\n. thanks so much for both fixes and apologies for the 'blame' - I was so focused on testing the filtering update that I forgot about the other major changes that had gone in. \n. agree with both the accidentally removed changes and with the order. If you need someone to do a bit of testing before you merge, count me in!\n. Would it be related to the place where you call the Format() method on the group items? I had a similar (not sure) issue here: https://github.com/xbmc/xbmc/pull/1288\n. I don't know whether there is any risk with Filtering needing the result (values) of formatting, or worse, you could end up not formatting the items that are actually inside groups. So what if you just call FormatItems once more as part of GroupItems(), only for those \"group\" items? Sounds simpler than it is, you'd probably need to do that in the GroupUtils...\n. @Montellese - did some testing with this branch and it looks good. I get the impression that when toggling hide watched status, some thumbs are reloaded each time even though the item is unwatched (and stays on the view). Any idea why?\n. update2 - I think I'm becoming crazy ^_^ - the few thumbs that briefly flashed were ALL sets (I didn't know it for some of them). So this is all good!\n. I have played with it before (#1418) and now again, still looking very good. I tried a those few filtering issues that broke before and it works fine now.\nDoes it make #1631 completely obsolete or just the hack I added?\n. I hope it can still make the Frodo release :-)\n. fyi - Windows build broken: SMBDirectory missing - doesn't seem to be part of VS project file and when adding doesn't compile (?)\n. @jmarshallnz - meanwhile master has been fixed. \n. Also, have a look at CSysInfo::GetKernelVersion. There are opportunities to clean this up and to use the code you are adding. Also, major = 5 / minor = 0 means Windows 2000, according to what I see there, and it's not covered by your code...\n. Looks good to me too now... @wsoltys unless you have any objection I'd say let's pull this\n. Not exactly. Now i see the enum twice?\n. thanks. So this is all good code, but I'm waiting for another dev (@WiSo @jmarshallnz) to give blessing. One issue I'm having with it from the beginning, is that it doesn't change much and has little added value. I'll give it until Monday evening before pulling the trigger.\n. @Karlson2k - I have a user in the forum here http://forum.xbmc.org/showthread.php?tid=131237&page=40 (Warstomper) whose log says \"unknown version\" but I'm pretty sure he has Win 7 x64. I'm going to confirm. But that means something's wrong with CSysInfo. Could you look into this. Thx.\nUpdate reading the next line, it shows build 9200, that indicates he has got Win8 RTM. Still, the detection of Win8 doesn't work in our CSysInfo.\n. I got it, it's switch/case is simply missing from GetKernelVersion. Fix is underway.\n. I agree with bossanova, but want to add another dimension: kids vs adults. For kids the dubbed versions are fine, but when I watch I don't want (ever) to see dubbed material. In essence I like the PR, but as long as there's an option to go straight to old behaviour - i.e. turn it off (i.e. set primary and secondary preferred to NONE).\n. I've been testing this too, and have a bit of concerns with the recently added view, when using in combination with \"group by set\" and filtering.\nFirst we have limit 25 but when you filter (and subsequently clear it) any movie that was part of those 25 but also a member of a set with more than 1 element, is now gone.\n. I think I understand - there was one item that disappears, we go from 25 to 24. That one item is part of a set with 2 movies, but only 1 of them was part of the top 25 recently added, and as such not grouped as set in the recently added view. So the logic considers that this \"set\" was not in the recently added view, therefore all items not previously part of a set are discarded. Q.E.D. :-) \nI hope this helps to find a solution...\n. Yes, I tried it in combination with #1646 - had to manually resolve conflicts (relatively easy). \nDid some tests/debugging this morning, and what I mentioned in the commit is actually not the complete story. \nThe actual element that disappears from the recently added (a single element from a set), seems to be already removed from resultItems prior to hitting the CheckFilteredItem loop. This makes that the additional condition I suggested is never hit.\nThe cause of that is IMO in CGUIMediaWindow::GetAdvanceFilteredItems in the part where you construct the resultitems list (either the smartplaylist excludes it, or the piece where you iterate over the original items and check whether they are still part of the filter).\nThe condition I suggested still makes sense, however we must find a way to not exclude single-items from a multi-item set (which happens with limited lists like recently added).\n. sorry if you received duplicate or strange messages here, github is not acting very well with MS IE, and messages disappeared without me interfering... this time I try using Firefox.\nSo, I have been hacking around trying to fix the issue, and I was able to produce a working fix. \nin CGUIMediaWindow::GetAdvanceFilteredItems, where you check if items from the original list are still part of the filter, and use the lookup map: \n``` cpp\n    map::iterator itItem = lookup.find(path);\n    if (itItem != lookup.end())\n    {\n      // if the item is a folder we need to copy the path of\n      // the filtered item to be able to keep the applied filters\n      if (item->m_bIsFolder)\n        item->SetPath(itItem->second->GetPath());\n  // add the item to the list of filtered items\n  filteredItems.Add(item);\n\n  // remove the item from the lists\n  resultItems.Remove(itItem->second.get());\n  lookup.erase(itItem);\n}\nelse\n{\n   // here need to deal with the case when the item is part of a set (item->setID > 0)\n   // check if \"videodb://1/7/setid/\" is part of lookup map\n   // if so, filteredItems.Add(item);\n}\n\n```\nthe problem at hand is that the item that disappears is NOT in the lookup list (the filter), because the list has the SET instead. So the \"hackish\" fix I made was to add an else block here that would get the set ID, construct the path videodb://1/7/setid/ and look that up in the lookup map instead. If found then \"item\" would also be added to filteredItems.\nNow this is a hack because we are in CGUIMediaWindow and we don't want dependency on Video stuff like VideoInfoTags or sets... but this is just for illustration.\nIf you like the idea I can further develop it into a clean proposal, using virtual calls down to CGUIWindowVideoBase.\n. update: here's a commit in a personal branch : https://github.com/Voyager1/xbmc/commit/5a50dd51cd5ece249bb17ac857f453339f63dc1a\n. @Montellese - it's confusing, I know. \nThe problem is that in recently added items, the list is not grouped by sets, even though group by sets may be turned on. The other problem is that you have a limited list of 25, so even if it were grouped, you have the possibility to have 1 of these 25 being part of a set that contains more than 1 in the full movie list.\nNow comes the filter, which loads the full list, grouped by sets - so sets are represented by the set itself, not the items. This causes set elements from the original list to be removed, as these elements are not in the filter list!\nThe commit I added does just that. If the item from the original list is not in the filter, it checks whether it's part of a set (set id >0) and whether that set is in the filter.\n. I'm not talking about the 5 or 10 items that display in the skin on the home screen. I'm talking about the one you access in the library under Movies > Recently Added Movies\n. I tried it in this node (Videos -> Library -> Recently Added Movies) and it works correctly. I also tried in the same node with your new PR to disable grouping in recently added. Works correctly too.\nThe problem in the other node (Movies > Recently Added Movies) is still there in both cases. I second your proposal to make these two nodes the same.\n. your assessment is absolutely correct, I had thought about that too, but as you say, it's difficult to get around this unless you ungroup everything for filtering (on both the source list and the \"filter list\") and then regroup for presenting the result. Without, it's probably the closest you're going to get.\n. I'm currently testing a build with #1646 and #1631. I'm still seeing a problem with refresh of recentlyadded movies after filtering. When you filter that list and come back, then add a movie (scan library for updates), the new item does not appear in recently added.\n. My thought as well. Could it be something with a path change after filtering?\n. I agree it's not ideal. I think it would be better to have some kind of delayed call to onchanged (the bit that triggers the filter call) so that we can quickly scroll to the right position first, then after let's say .5 s of not using right/left keys make the onchanged call. I looked into how this can be achieved but I don't see how. \nFor now, using big steps seems to be the easier way (with Frodo in mind)...\n. @jmarshallnz I thought the same about those keys hinting to jumping in the list rather than moving the slider. So if we want to go with a delayed call, i would need a hint / ideas as to how to work it into the control.\n. closing in favor of #1661\n. have looked both at code and usability and this seems to do the trick really well. I'm all for this to be frodo material, since the sliders are simply unusable in its current form.\n. Although it was good on my dev desktop I've tested it as is on an AMD Fusion and it's still too slow. The solution I found is to move the UpdateControls() call (which does db queries) to OnTimeout(). You also remove it from OnSettingChanged() (the end) but put it also there in the \"if (!delay)\" block so the case of no delay remains intact.\n. I fully agree - I was just expecting that all the db stuff had been moved to after the delay (which is not (yet) the case).\n. for the multi-disc movies, why don't you just create ISO files like movie.disc1.iso, movie.disc2.iso, etc. And scrape these as multi-part ISO? That functionality works great for me. I have several box-sets too. You can select which part to play, resume points can exist for each part etc.\nEDIT: creating ISOs from files is easy (e.g. ImgBurn) and does not lose any menus.\n. no issues via github please. If xbmc-specific, open a ticket on trac.xbmc.org. There you will supply debug logs etc. Also don't think that this team supports OpenELEC (not one of our build platforms).\n. the sets now all get a path like \"videodb://1/7/2/?setid=2\", with options. As a side effect of this (and a major regression from RC2), new sets don't get any art (poster) loaded. I commented out the line in GroupUtils that adds the options, just to verify and indeed that's it. I guess the fix must be made somewhere in the art handling routines as to ignore any url options.\n. Update: forget this for now. I don't think it's related. After deleting the sets and recreating them, it worked fine with the new code. Perhaps it was a glitch in my art table, who knows... I'll keep looking.\nUpdate2: it was the art table indeed. Old entries for new set ids caused this.\n. @jmarshallnz - could you please weigh in, and\n@davilla - if everyone ok, are you in agreement to pull this into Frodo?\n. addressed @jmarshallnz 's comments. Injecting.\n. +1 on the idea. Libdvdread/nav are at 4.2.0 while ours is 4.1.3, so it could indeed use a refresh. I tried a few months ago and I must say there's a few challenges: making it compile with mingw (under Windows) and backporting the xbmc additions to the libdvdnav code. I didn't have enough time to dedicate so put it to rest, but it would be great to give it that sprinkle of love post-frodo.\n. already done!\n. I confirm that on one of my PCs I had the \"back\" button handled twice! once for the scan code, once for the WM_APPCOMMAND.  I had to turn off multimedia key handling by setting  false so it only hits once.\n. just to double check: first, this doesn't apply to Windows power buttons, right? and second, why do we need the F4 mapping, as \"c\" does the same thing? I'm using F4 on Windows for another purpose through custom key map (shutdown xbmc, triggered from eventghost). EDIT - ignore the F4 thing, just saw it's Nyxboard specific...\n. First of all thanks Paxxi for taking on the effort to update to latest libdvd. I have extensively tested this work with several DVD ISOs (with menus etc.) as well as physical DVDs, and am pleased with the result. Some discs/isos that didn't entirely play correctly before, now do!\nWe need to have this tested on the other platforms too, otherwise for Windows this is good to go!\n. minor mistake, causing compiler error:\nxbmc\\xbmc\\cores\\dvdplayer\\dvdinputstreams\\dvdnav\\dvdnav_internal.h(196): error C2143: syntax error : missing ';' before 'this'\nxbmc\\xbmc\\cores\\dvdplayer\\dvdinputstreams\\dvdnav\\dvdnav_internal.h(201): error C2143: syntax error : missing ')' before 'this'\nyou can't use the reserved keyword \"this\" here since it's a C++ compiler :-)\nI suggest you use \"self\" like in vm.h where you moved it from.\n. after that, I suggest that @Memphiz and @arnova (or other platform devs) test it out under IOS/OSX/ATV2 and Linux in order sign this off to be merged.\n. @Memphiz it's weird what you say about self. Current codebase has it like this... (see xbmc/cores/dvdplayer/DVDInputStreams/dvdnav/vm.h) ... but me's good too :-) \nedit: it took a while for me to get it (it's late!) - you're concerned about the syntax highlighting in xcode.\n. @davilla - agree with the TARGET_xxx for the copied includes under xbmc, but certainly not in libdvd code (compiled by mingw on win), right?\n. compiles fine on Windows, although I saw you didn't honor davilla's request to change the platform ifdefs (I see there may be a breakage risk in changing this). Regarding the self var I see the point as the other code is full of it. I hope everyone can settle on this and give the green light to merge it (perhaps have the buildbot run through it first?)\n. my assumption was this is based off http://dvdnav.mplayerhq.hu/ 4.2.0\n. Thanks Paxxi. Very useful to have these diffs. Out of curiosity, all the changes/additions in libdvdnav, more specifically in searching.c and vm.c, that are not marked as \"xbmc\" additions, were these also xbmc changes/additions at the time of 4.1.3, and are these still needed?\n. Thanks for the detective work... eventually we will need to cleanly split up these changes into individual patches that make more sense (with some description) and that we can track. But that would require some expert help, and can be put on the back burner, IMO. For now, we could store these diffs under lib/libdvd/patches?\n@elupus - as the merge window is closing in 3 days, agree to merge? It would be a good opportunity to get a bit larger testing base.\n. @Paxxi - happy to merge when you've added the diffs as a second commit.\n. We're getting a bug report (see http://trac.xbmc.org/ticket/14115) on Linux. Can anyone test on Linux and see if this is legit?\n. IMO it's weird that the fetch interval is hard coded. Wouldn't it make more sense to have the default value set and even configurable in the specific weather plugin itself? Different services (e.g. OzWeather vs. WU) justify having different update intervals...\n. @ronie - @da-anda - very good points. I like the idea of splitting the updates between current weather conditions (temp / rain-sun-etc.) and full forecast. There should be really two intervals. In terms of making the intervals configurable, we should have a default value that makes both our providers happy as well as work for 80%+ of the users. For current conditions that could be 30 mins, and for full forecast only every 4 hours or so would be sufficient. And make these intervals to be configurable via the addon-configuration screen.\nTo avoid aberrations you could have a minimum (no less than 15 minutes e.g.).\n. seems all logical. Just double checking, you ONLY want to activate exception handling for release builds?\n. It makes sense to me, but it feels a bit weird with the sorting and all. \nIIRC in Eden we had the \"default device\" always listed seperately and first. Not sure about AE, but could we add this at enumeration as the first element in the list? The default device should normally not be searched for, since DirectSoundCreate would just take an LPGUID value of NULL. Haven't looked in detail what the impact would be on code.\n. seems more in line with Windows build indeed\n. for android, the \"force\" param was incorrectly placed. I quickly added a corrective commit to master.\n. @Montellese could you double check. I looked for a more elegant way but there does not seem to be any  due to the multiple copies of fileitems.\n. @Montellese that is correct. CPlaylist members in the g_playlistPlayer hold different CFileItem objects which point to the same physical File. Now that's not a problem since at the point of wanting to play (OnPlayMedia) the only thing that is important is whether or not the user decided to resume or not, so the resumepoint and m_startOffset value. The reset is used to force fetching the actual offset from the database (the m_resumePoint->IsSet() call would then return false, so that eventually the db is consulted again).\nConversely, the playlistPlayer should not really make changes to any CFileItem properties, because it's just playing the file - with the exception again the resumepoint. That's why in the OnMessage INIT event the same thing is done to the resumepoints of the CFileItems in the CGUIWindowVideoPlaylist are also reset (yes, to be picked up either by the background loader, or directly when trying to fetch the resumepoint e.g. when displaying the context menu).\n. @jmarshallnz I recall a comment that the IsSet() was introduced to deal with the plugin situation you describe. Are there any plugins that use the Video Playlist Window? \nIf that's the case then the solution is relatively easy, i.e. not to reset() but to actually 'set' the playlist item's resumepoint (and offset) so that existing behaviour for plugins is maintained.\n. Alternatively, with a test for IsVideoDb() I could determine whether or not a reset() call on the resumepoint is justified. This would actually be my preference...\nUPDATE: IsVideoDb() is actually incorrect - should be something more like \" ! IsPlugin()\"\n. @jmarshallnz - I checked the plugin situation with \"TED Talks\" but this one stores bookmarks in our videodb. Looking further, according to SaveFileStateJob.h anything that is not LiveTV (even PVR...) saves their bookmarks in the videodb, however PVRChannel seems to be skipped at the Application.cpp level... so I guess that this (also) needs to be excluded.\nSo I'm wondering what the good approach really is. IMO we should find out where the bookmark is stored. Is it in the db? in the PVR backend? in the plugin (server)? etc. And then if we determine it's in our db, we can do the reset...  'A' way to do it is keep a member variable in the FileItem that knows where the bookmark is coming from. Thoughts?\n. @jmarshallnz , yes that would be the solution, but probably too much change.\nI have just pushed an updated commit. I believe it's a clean solution, that doesn't take into account types nor does it blindly reset resumepoints. \nThe approach is \na) when playing from the playlist window, we copy the resumepoint from the GUI item down to the playlist item. We know the GUI item is correct, so that's good.\nb) when entering the playlist window, some resumepoints there may be invalid, after playback either through the playlist or the library. That's a bit more tricky but if we only \"reset\" the resumepoints that are set AND also exist in the videodb, we don't risk of resetting any plugin-set resumepoints (which wouldn't exist in the db.\n. commit updated. Now using GUI_MSG_NOTIFY_ALL for correct update of playlist items after saving (better fix for (b) mentioned above).\n. Don't use github for issues. Use the forum or trac.xbmc.org for bug reports.\nBTW, this is perfectly normal behavior - the sets come from themoviedb.org (see \"part of...\"). Also since Frodo we show sets that have only 1 movie in it.\n. @ulion - (disregard previous comment). you're right that would work.\n. updated commit per @ulion comment.\n. @MartijnKaijser - yes eventually it would be better if the sets concept can be dropped altogether and converted into a specialized use of tags. I guess it depends on plans and timing, as this could be a much larger change. Perhaps this PR could go in during the interim. Let's see what @Montellese says...\n. commit updated, addressing @jmarshallnz comments\n. @Montellese - when you get a chance to review the code, you'll see that I circumvented the need for a 1:M dialog box, because I went in the opposite direction: for a movie, you can choose which \"movie set\" it belongs to, which is single select. An option \"clear\" at the top allows to clear (ie. nullify) the link to the set. \nWe could manage it in a 1:M way, starting from the set, however I wouldn't know if this is really more user friendly.\n. I'll try to get on IRC one of these days to discuss. Meanwhile if you have suggestions I'd appreciate. \nThe way I see it is that code-wise (and even GUI-wise) we're nearly there, but that the way it's hooked into the UI could be better (@jmarshallnz already mentioned that he doesn't like the context menu). Perhaps from a button on the video info dialog. Not sure if we really want to bother with the reverse (ie from the sets view) because the relative benefit is really low.\n. ok. thanks. I created a new thread here: http://forum.xbmc.org/showthread.php?tid=160517\nclosing the discussion here until new code is posted.\n. as per the forum discussion, added a second commit to support add/remove functionality behind the set's context menu \"manage movie set\". \n. third commit added, as related to warnings when deleting a movie from 1-movie set\n. Added capability to add a movie to a new set. Set art is copied over from movie being added to it.\nThis should close the loop and make the feature complete.\n. Implemented a last few comments from the forum thread and squashed the commits in two logical parts, one for the set management from a movie's point of view, the other for managing the set membership from the set point of view.\n. Last comment from the forum addressed. I'll wait another day or two then merge if there are no further comments.\n. @garbear fixed the memleak you pointed out. If no further comments, merging within 24hrs.\n. @garbear - as I already replied to you, when you want to count all movies in a set starting from one of the movies in that set, you need either a subquery or perhaps a self join. I can try turning it into a self join between movies and movies (e.g. select Count(*) from movies as M1, movies as M2 where M1.idSet = M2.idSet and M2.idMovie = xx)\n. your relational algebra is wrong indeed. The first where clause gives you all movies in a given set, the second gives you only ONE movie.\n. @jmarshallnz - I've pushed two commits to the PR that deal the majority of your comments. Regarding the warnings this was an explicit request from @MartijnKaijser. I do agree with him that this is needed so I haven't taken this out at the moment.\nLet me know if we're good now, so that I can squash the commits.\nAlso if you insist on the \"manage set members\" issue, I'll take out the second commit and open it as a separate PR.\n. @jmarshallnz - updated commits as per forum comments. The third one which adds the warnings can be taken out when we decide to merge. I'll keep it for future reference.\n. @jmarshallnz - again updated per your latest comments. Third commit is still there, will remove when you OK the first two.\nIn commit 1: removed the first if() block in CGUIWindowVideoNav::SetMovieSet and the entire ClearMovieSet function (was actually moved over to commit 3, the warnings code).\nIn commit 2: kept the added/removed logic, however now using STL's set_difference, which is much cleaner, the double loops are gone: Added = Selected - Original ; Deleted = Original - Selected. Also needed a predicate function to compare on CFileItem's DbId.\n. post pull note: the warnings commit can be found here: 8993d2653ae7a03081654bcfe926bea5b4f6c326\n. I'm in favor, the sooner the better re. testing exposure.\n. @elupus @FlyingRat \nPatch 0028 is still needed. With great thanks to @wsoltys I could finally get ffmpeg compiled on Win32, and immediately tested the dvds with still menus + audio. Same issue as before that patch.\nLine 709 of libavformat/utils.c needs to be patched as follows. They've also wrapped AVPROBE_SCORE_MAX/4 as a new define...\nC:\\DATA\\git\\xbmc\\lib\\ffmpeg\\libavformat\\avformat.h (1 hit)\n    Line 345: #define AVPROBE_SCORE_RETRY (AVPROBE_SCORE_MAX/4)\nC:\\DATA\\git\\xbmc\\lib\\ffmpeg\\libavformat\\utils.c (4 hits)\n    Line 709:             if(    (st->codec->codec_id != AV_CODEC_ID_NONE && score > AVPROBE_SCORE_RETRY-1)\n. @MartijnKaijser - I just redownloaded & updated the mingw environment, using DownloadMingwBuildEnv.bat. After wsoltys' update it now includes gmake 3.82. This one works ok with the windows line endings. The patch 0028 story is unrelated to getting it compiled (it is related to DVD with menus)\n. @FlyingRat - I may be wrong but you seem to have built the ffmpeg libs 10-12x with gmake 3.82 and it worked fine. It works fine with 3.82 on my set up too, with windows CRLF line endings! so I think you're chasing the wrong problem here...\n. I think prebuild patchery \u00e0 la dos2unix is a bad idea as this would cause modification of source files. I believe that where we landed now, using a gnu make that deals with it properly is much better. It seems that for now, this issue is solved, and we can refocus on getting ffmpeg 1.2 a good round of testing...\n. is a null value actually ever passed?\n. yes, and all calls to OpenDemuxStream follow operations to make sure that m_pInputStream is not null... so it's more a theoretical fix indeed. I'm fine either way.\n. This is well-intentioned, however, somehow when playing software decoded material on DVD (seems to happen in stills only) this flag gets set and thereby causes the YADIF options below to be skipped. The issue can be circumvented by also adding a \"decode mask\" flag, that looks at how the material was decoded in order to enable or disable the YADIF options below.\n. there is also another device which seems to work well : \nDEFINE_GUID(DXVA2_VideoProcNVidiaMediumDevice,      0xF9F19DA5,0x3b09,0x4b2f,0x9d,0x89,0xc6,0x47,0x53,0xe3,0xea,0xab);\n. could also add:\n{ \"Unknown device (nVidia) - Medium\",                 &DXVA2_VideoProcNVidiaMediumDevice,      VS_INTERLACEMETHOD_DXVA_ADAPTIVE_MEDIUM, DXVA_DEINTERLACE_ADAPTIVE_MEDIUM },\nunknown, because couldn't find documentation - but works on ION / GT240 / ...?\n. sorry for the multiple comment here, but this problem could also be avoided by first of all doing a clean separation between DXVA Decoder and Renderer - as proposed in isidrogar's PR 346 (see https://github.com/xbmc/xbmc/pull/346)\n. I agree. I'm not suggesting to remove this but to rather add another flag at this point (e.g. DXVA-decoded yes/no) so you can refer to this later when presenting the deinterlacing options. It does not make sense to present Deinterlace and Deinterlace (Half) (both yadif) in case you are dxva-decoding.\nI will push my own branch for your reference, where I have included my take on the deinterlacing patch (rebased on this PR) and also hardware decoding on DVDs.\n. fyi: see https://github.com/Voyager-xbmc/xbmc/commits/deinterlace-dxvawork\n. I suggest (see another pull request that is opened by me) that \"Auto\" for software deinterlacing would use \"half\" yadif, because on the Atom CPU full (or double rate) yadif is too heavy and causes stutter.\n. ",
    "davilla": "did you check that none of the dyloaded libs need libssl or libcrypto ? \n. Needs a CloseLogFile\n. looks good, keep av_parser_xxxx, I'll be using them with vtb/vda hw decoders.\n. One more thing, know the exact git version for ffmpeg/swscaler that this merge is based from would be good to know.\n. looks good.\n. liba52 is used by osx/ppc\n. http://trac.xbmc.org/ticket/10297\nhttp://forum.xbmc.org/showthread.php?t=76816\nNote this is only PPC.\n. ping beenje on it when you have a fix so he can build/test on ppc.\n. /Users/Shared/xbmc/xbmc-git/xbmc/cores/VideoRenderers/RenderCapture.h:46: warning: \u2018class CRenderCaptureBase\u2019 has virtual functions but non-virtual destructor\n/Users/Shared/xbmc/xbmc-git/xbmc/cores/VideoRenderers/RenderCapture.h:92: warning: \u2018class CRenderCaptureGL\u2019 has virtual functions but non-virtual destructor\n. fixed:\n1) forward declare CRenderCapture in RenderManager.h so you can remove #include \"RenderCapture.h\" from RenderManager.h and keep it from spreading\n2) include paths for gl.h are platform dependent\n3) sync xcode project\nhttp://dl.dropbox.com/u/14341410/fixed_include_polution_sync_xcode.patch\n. 2nd try\nhttp://dl.dropbox.com/u/14341410/fixed_include_polution-2.patch\n. if the xbmcvfs.File implementation is an issue, then that part can be dropped until such hooks to stdio are needed and written. xbmcvfs.(copy,delete,rename,subHash) are basic file operations and that part of the API will most likely not change over time. In fact, the only function needed with external python right now to is copy.\n. don't think XBMC\\ Package.pmdoc is used anymore, the dmg is created from the pl scripts.\n. ack\n. Nope, does not cause a problem with the subsequent calls to XBPython::Initialize()\nIt's not quite clear the direction that this code will go, so regardless of if libpython is linked at compile time or loaded as an indirect when we load our wrapper, this makes either way function without crashing.\n. Not a clue why, I'd have to dive deep into python to figure it out. Besides, our python handling is such a twisted mess that I hope this attempt will be a start at cleaning up. \n. \"Looks like some simplification can be done here ;)\" fixed\n\"Do we need a ;\" fixed\nxcode project added. @jimfcarroll, pull from osx-new-buildsys @ git@github.com:davilla/xbmc.git\n. I see five, the first four should go in without a problem. The last (xcode project), if you can just take one from osx-new-buildsys and totally replace the previous. When the xcode project churns as much as this did, trying to patch and resolve conflicts is a waste of time.\n. nm, was looking in wrong place. 61686c0 looks fine.\n. BASE_URL as a global is noted, however this will need to be over-ridden in some cases. As mentioned in the initial message, the main purpose is the replacement of macports and enable external python. This build system will continue to evolve over time.\n. addon codecs should report their capabilities, then player/AE can set it to AE internal native, pick the next best format or accept what the addon codec supplies.\n. ack from osx/ios.\n. If there are no more issues, committing to trunk in 6 hours.\n. rebased and superseded by https://github.com/xbmc/xbmc/pull/70\n. Can we get comments attached to the ones remaining as to why they should be left in ? That way they don't get accidentally purged by mistake at some time in the future. \n. @twinaphex, please stop being a dick about things that you have no knowledge about.\n. Still does not change the fact that you are being a dick about things that you have no knowledge about. Now go away and take a timeout in the corner. \nP.S. PS3 can't do hardware decode of video, it does not matter that GL is there now, if you can't play video on it, it's USELESS. Android/Raspberry Pi/Sigma/Amlogic, etc all have hardware video decoders available. Try and learn the technical details of what's required for a successful platform port of XBMC before you start ranting about why this or that. Gezz, some people just don't get it.\nLucrative money deals, HAHAHA. You have got to be kidding. Seriously, stop listening to Robotica/Bulkzooi, he's also as clueless as you are.\n. Then get off your ass and port it to the PS3 if you want it. Now is the best time as all the work we have done regarding embedded platforms has made XBMC quite easy to port. Platform ports start because someone wants it so bad that they do it. That's how the iOS/ATV2 port came about. Do the port, do it non-intrusive to the rest of XBMC's code and as we say, patches/pull/reqs welcome. Which by the way, it the purpose of this pull/req to begin with. To remove whacky platform cruft that makes code maintenance a pain. \nIt's up to you now, stick your money where your mouth is and do it, I dare you... no I double dare you :)\n. You are the one that came into github comments and started trash talking to being with. You get what you serve. I'm done with you now and you will get banned for abusing github comments section. Good luck with Showtime devs and have nice New Year. XBMC is and shall always remain open source and that includes embedded platforms as well as desktop.\n. > See http://trac.xbmc.org/ticket/11311.\n\nThis is quite a simple change to CThread that adds a name to the \nthread and includes the name in xbmc.log.\nHowever I need help from the unix/OSX chaps. I use \ntypeid(this).name() to get the object name, but gcc returns it in \ndecorated form and you need *cxa_demangle to clean up the name, and \na #ifdef to make sure the code is only called when compiling with \ngcc. Presumably this applies to MingW as well, so #ifdef _LINUX and \nifdef __APPLE** aren't enough. If anyone using Linux/OSX can get\nthe code starting at line 457 in Thread.cpp that would be great.\n\nif defined(GNUC)\n. osx approves for gcc-4.0 and gcc-4.2 for i386/x86_84/arm but clang will be an issue:\n{{{\nclang -x c /dev/null -dM -E\n}}}\nunder osx 10.6.6 shows\n{{{\ndefine GNUC 4\n}}}\nbut don't think abi::__cxa_demangle  is avaliable under clang, see https://svn.boost.org/trac/boost/ticket/4763\n. clang -x c /dev/null -dM -E shows  #define clang 1\n. Agreed, the current code replicates the existing flow including all of the warts. I could merge in topfs2's quit() messaging, then have that setup an exit condition which is detected in main and replace the while(1) loop.\n. closed and replace by https://github.com/xbmc/xbmc/pull/82\n. osx signs off, works fine on osx/ios/atv2.\nas for the xcode projects, just commit and an osx dev will tag up the project files.\n. commit in 6 hours.\n. committed in bbea662eef85ecf524388a73abf44240c3afa2d4\n. Seems to work quite well under OSX. No issues that I can see yet. iOS testing tonight.\n. what's a good way to trigger this ? iOS is fine but I don't really see the file cache getting created.\n. humm, can't seem to force it. will beat on it some more. \n. libpvrtex is licensed for use and distribution with prevent on disassembly, it's a binary static lib. There's a cpu based decompression (source code) but the only compression options are using their binary static libs and there's no arm version for it.\nGUI is much faster even without handling thumbs/fanart. Thumbs/fanart is an issue with no arm based compressor lib. Maybe these could be lzo'ed instead.\n. To quote from http://www.withimgtec.com/forum/forum_posts.asp?TID=138: \"The only license the code we supply with our SDK is the copyright. We allow free usage and distribution of these files (for comercial purposes or not) but the keeping the copyright.\"\n. I've decided to delay pvr compression for future consideration but will be committing native texturepacker changes.\n. github says it is fine.\n. sure but it does say it will merge it without problem. That's typically where one has issues with patching the xcode projects, merge conflicts.\n. looks nice, should still work for osx/ios if it works under linux.\n. How much higher memory usage ? 1MB, 10MB, 100MB ?\n. nice :)\n. osx/ios signs off, both depends are prep'ed already for libyajl. Inject into trunk when you are ready and we will fix up osx/ios/atv2 xcode projects there.\n. I disagree, standalone is a binary setting, and there's no way to have such a setting apply to all possible embedded/appliance configurations. There is no way to tune xbmc for various embedded/appliance distros except to add more #ifdefs to code. IOS already does this to override various xbmc behavior and it's messy.\nAlso passing command-line params to xbmc is so 70's and also requires some launch script to 'setup' xbmc. Lets add some real structure to xbmc startup for embedded/appliance configurations. That means, a) guisettings.xml, b) advancesettings.xml or c) some new xml file. Advancesettings.xml is a junk yard, guisettings.xml is reserved for GUI so that means some new xml file.\n. \"mark the platform as such\", I have no clue has how you mean this nor \"mainainer tune these things platform-wide\". Sounds like compile options and that mean more #ifdefs in code.\nmake it a system xml only, it should not appear and be ignored in userdata. If some users goes and diddles with it, too bad, we don't support it.\n. --standalone --disable-shutdown --disable-windowed --disable-screenchange --disable-bluetooth-settings --disable-network-settings --disable-a-bunch-of-other-things...\nwhile command-line params do work, they are messy once they expand beyond a few params. \n. thinkig outside the box here but you can't just change what --standalone means and does. Too many already depend on it's behavior that you can't just change it without some warning.\n--standalone needs to replicate existing behavior by diddling internals.\nadd some new -- command line setting to handle using some xml file to setup xbmc. I'd prefer that it not be called settings.xml, that's way too general and it will only become a new dumping ground for things that don't fit into as.xml. Same for standalone.xml, way too specific. Standalone means to me that xbmc is the only app running, no window manager, etc. xbmc and it's gui is the only thing a user ever sees.\nplatform.xml, deployment.xml, distro.xml, environment.xml, something like that. \n. can you squash this down into something more easy to review?\nalso I'd prefer dyloading this instead of hard linking, I think it does this but I'd have to hunt and peck through the addition and removals to try and figure out what was retained and what was not.\n. nice\n. thanks, much, much easier to review.\nwould like to see it as an optional on build rather than required. Since rar is not in libarchive and there is no eta on inclusion and net sourced archives operation is slow. Be much easer to ease into this rather than jump headfirst.\n. in the queue to review.\n. osx (i386) looks ok, standard remove/add files needed in xcode. I need to change how boost builds to remove the dylib and keep the static.For some reason, boost::detail::get_tss_data is missing from the dylib but present in the .a, go figure.\nAnd I need to see why osx (ppc) is not building libboost_thread.a or libboost_thread.dylib.\nios up next.\n. got a nasty memleak under ios/atv2 during playback, chewing up 1MB/sec, then of course oomkiller gets me. \n. aside from the memleak, looks ok. I'll be cherry-picking the darwin depends boost build change to get it into trunk asap.\n. ios issues are resolved with that last one, basically arm atomics where borked.\n. osx/ios merge ok. On ios/atv2, in a view with no animation cpu is 0.9 to 25 percent. Most of time in the lower range.\nAs ios/atv2 is embedded with no other 'windows' to get in front, we don't need a re-paint event.\n. ok for osx/ios if it works on linux. I don't see anything that would be different for osx/ios.\n. please git am these two patches, the 1st removes a win32 include that does not seem required. the 2nd is a sync of linux/osx/ios/win makefiles/project\nhttp://dl.dropbox.com/u/14341410/0001-remove-unused-include-that-barfs-linux-osx-ios-becau.patch\nhttp://dl.dropbox.com/u/14341410/0002-sync-linux-osx-ios-win-make-project-files.patch\n. yes, it was most likely your local changes to the win VC project that is in the 2nd patch. Your pull request did not include that.\n. depends if you did it right :) you can always git checkout vc project bits back to head, then that patch would apply. \n. Don't really know what win does, I'm just a patch monkey here :)\nTwo choices: \na) revert local changes to VC project, apply 2nd patch, update pull request.\nb) edit 2nd patch, remove changes to VC project, apply. update pull request, wait for a real xbmc win dev to provide VC project side.\n. I am ready to pull once the two patches have been added to this pull request.\n. yes, topfs2 is right, battery info is power related and should be in the PowerSysCal interfaces.\n. much nicer :)\n. cc'ing to me\n. builds fine on osx. ios should be ok too.\n. we try to have our configure setup what is needed for each platform that is supported. This makes user building much easier that running special pre-configure scripts. But cross is a messy place. Specially for Tegra2 as it's flags are so much different than others. Then there's cross vs native for embedded issues to resolve. It's not an easy problem to solve.\n. pull request does build/run on osx (with xcode project changes), ios check pending.\nAgree with  jmarshallnz, this pull request touches core usage and changes there should not be made without a complete investigation of what we currently use, how/if it has been modified and what other solutions might be better choices.\nlibxml2 is native on osx/ios, not quite sure which version though.\n. ack\n. it would be nice to squash this down. it's hard to review when commits add/remove change files.\n. talk to cory about that, he has good git-fu.\n. ok to push once that commit is broken out and injected into trunk.\n. I'll check/fix when it hits trunk. Inject away.\n. npg\n. I'd like to see something else in addition to just flipping the NYXBoard. Imagine someone setting remote down, it flips over and WTF ?\n. +1e6 on this. CStdString is an xbox'ism and should really die in a fire :)\n. Windows platform support hinges on compiling afpfs-ng and getting libafpclient working, this needs libgpg-error and libgcrypt.\nLinux platform support just needs afpfs-ng to be installed. Our configure will pick up the presence of the headers and enabled afpclient support. From what I've seen, afpfs-ng is already in the distros as it's the only way for afp client access. OpenElec already has afpfs-ng support.\nI think what Memphiz means is this has been tested under osx/ios but not under Linux and Windows would need to get afpfs-ng building for libafpclient.\n. afpfs-ng is a temp solution for an afpclient. Phi is working on a better solution but that solution will need some time, time we don't have regarding a release. As Lion has broken smbclient for users running Lion as a server, there is no simple solution for those users... xbmc is broken in their eyes.\nSince the the source for afpfs-ng is not in mainline trunk, I don't see how we are carrying it, it's just like any other lib depends that we build for osx/ios. Older and current Linux distros do provide afpfs-ng so what's the big deal. If we think it's too risky for Linux, then exclude it from Linux platform building.\n. I'll fix or disable Linux platform build later today.\n. Could have sworn I saw it somewhere. Ok, it gets excluded from Linux platforms\n. changed to only effect osx/ios platforms. Hitting the big green button now\n. I'm fine with it going in. osx/ios sign-off.\n. asus P5Q, looks like this -> \nhttp://www.asus.com/Motherboards/Intel_Socket_775/P5Q/\nsuggestions for 10.6 ?\n. ahh, frak me :)\n. any numbers on CPU percent impact ? lower/higher or too small to tell ?\n. +1, push it in.\n. osx/ios is using freetype 2.3.9 and libass 0.9.11\nIs there some reason for the bumps ?\n. which version of fontconfig is windows running ?\n. 2.6.0 on osx/ios, grr we are so far behind :)\n. inject time :)\n. +1\n. I'me beginning to thing that we should be using compiler atomic where supported. As far as I know, the only compiler that does not have the nice atomic intrinsics is osx's gcc-4.0. Pretty much everything else is at least 4.2 and above. As for osx, after 11.0 release, we bump to 10.6sdk and move to gcc-4.2/llvm-cpp-4.2.\n. +1 to bring this in.\n. merge sooner please, we really need to get this into trunk asap and under nightly testing.\n. +inject\n. I'm not sure I you realize but when the splash goes up, we are not really fully up with respect to gui side and there will also be a skin reload right after.\n. @pieh\nmore concerned with renderer as we have seen some issues with dr and splash.\n. ok, +1 on inject. we will see soon enough from nightly gpigs if there is any real issue.\n. yes but the window is not created until g_Windowing.CreateNewWindow. So GL/GLES is up but there's no window/context setup yet.\n. +1 on inject. I don't think there will be a problem. Was just bringing up an observation that we noted regarding splash and dr.\n. yes, I tested under iOS5 but I'm getting a strange crash from smbclient, might  be due to having firecore's media player installed. See http://pastebin.com/mCetg0Uw\n. Ignore the 1st commit, it was something I forgot to push to trunk but it's in now.\n. verified good under linux/arm/neon\n. Need I remind that we are heading in to a beta release. Strings should be frozen.\nI'm also not happy that this lib now needs boost as a depends. I don't see how whatever is being done with a shared_ptr can't be done some other way that does not need boost as a depends.\n. boost is a huge depends, you just eliminated about 1/2 your possible future users of this lib by adding the boost depends. It's not shared_ptr per say, it's boost.\n. push in with the string change but no more please.\n. status on this pull/req ? I've been seeing reports of hangs and bt logs that point to \nlibcrypto.0.9.8.dylib 0x0276a6b8 lh_insert + 152\n. green light :)\n. I'm ok with inject.\n. commited via a different route\n. withdrawn :)\n. refactored to remove DVDPlayer bits, this works fine now.\n. bad Cocoa_MountPoint2DeviceName, bad. fixed in trunk.\n. stripping the video_ts is not enough for osx, it needs the specific device. That's the whole point of Cocoa_MountPoint2DeviceName.\n. Cocoa_MountPoint2DeviceName will still fail to convert to the device name as it expects VIDEO_TS to be there. I'm going to have to diddle with this but I don't want to hold up inject. I'll diddle in trunk to fix it.\n. warning or error ?\n. what version autotools are present ? autoreconf --version\n. There's no way that I'm (and I suspect others) will review a pull/request that has more than 10-15 commits, it's too hard to see what is going on without spending days on it. This should be rebased down to 10 or less please. \n. looks good for osx already, I can move the NSWindowDidMoveNotification hook from SDLMain.mm to WinSystemOSX.mm, post the event and respond in via new OnMove virtual function. +1 on inject.\n. inject and I'll diddle osx side then.\n. ssl/crypto, all depends on how curl is configured/compiled on individual platforms. Note that we already hardlink to ssl/crypto and that does not resolve the issue, so moving ssl/crypro to it's own dll will not solve the issue.\n. ping all feedback on this. 24 hour clock starts ticking.\n. There are some heavy changes going on with AM_ICONV that I'm not comfortable to be doing at this late stage of trying to push out Eden release. I have no clue what the side effects might be and certainly do not think our users should be the b2 gpigs. I don't see how we can even think about a b2 without several weeks of testing.\n. osx/ios sign off, I'm ok with this now, push it in and let's see if this pig will fly :)\n. I'll have to bring tinyxml into osx/ios depends build. Unfortunately, it's just a crappy make file that I'll have to hack up to support cross-compile. Did debian patch theirs ?\n. ok, tinyxml is now available as a system lib for osx/ios. Needs to be treated the same as Linux with pkg-check in configure, linkage and includes. Free free to nuke lib/tinyXML as osx/ios will not need it if treated the same as Linux.\n. osx/ios signoff with those three changes, I'll fixup xcode projects for osx/ios/atv2 when it hits trunk.\n. spiff says, these changes to system tinyxml will only work on local files and fail if remote. ie nfo files. can you check this amejia ?\n. osx/ios signoff revoked until we sort this out.\n. https://github.com/davilla/xbmc/tree/pull-619-darwin-fixes for darwin xcode project fixes.\n. not that I can see, osx/ios sign off pending spiffs and the nfo question.\n. osx/ios sign-off on https://github.com/jmarshallnz/xbmc/commits/system_tinyxml_rebase\n. pay no attention to that beard Pivosgroup :) the real osx/ios says revoked :) LOL.\n. I punt to jm on this, he knows it best.\n. no problem, tinyxml-2.6.2_2 has been building in osx/ios depends for some time now. Just have to fixup the xcode projects projects and we can do that on inject.\n. nice...\n. +1 for eden.\n. maybe but it is our duty to make sure the gpl notice is proper and correct no matter the amount of pain it causes.\n. grep says I did :)\n. fine after those changes\n. why not check DtsCrystalHDVersion and fault the CCrystalHD::OpenDecoder on avc1 content if using the new lib ?\n. obnoxious might be good, then a user is forced to update or suffer :)\n. fire away\n. if GetFrameTime is misbehaving on ios, that need to get fixed as it is used elsewhere.\n. push it Memphiz, once you make green again.\n. manual merged in fc27b6bd1c21d5e9a10cac5f1a043389c8c879be as it needed fixes for cross-compile.\n. One thought for iOS is to create static libs and link to them like we do for external ffmpeg. \n. nuke away :)\n. changed and force pushed.\n@jmarshallnz, I did not address the const question, the originals are not const so I matches them less I get ponked by the dvdplayer master.\n@elupus, WaitForBuffer restored, not used in xbmc. I reverted the change AcceptsData -> IsFull but think about this one, 90 percent usage is !AcceptsData which means a double ! as AcceptsData is !IsFull :)\n. ping elupus, your call on const. \n. jmarshallnz, const help on this. I'm not sure when one should or should not declare a func const.\n. constfied\n. missed one.\nI'd really like this pull/req not to turn into a bikeshed about const, that's not the point of it and why I did not have them in the 1st place. \n. inject in the morning unless there are any objections.\n. borked in osx, no video and where the video would be is pure red.\n. Any clues why I see red, I poke around and after climbing out of the m_format showing RENDER_FMT_NONE hole, I could not see anything obvious.\n. gles and hw codec exclude fixes -> http://dl.dropbox.com/u/14341410/gles-10bit.patch\n. opps, my bad, dropped an alias instead of the real file. Try again with same URL.\n. elupus, have you tried mpeg2 iso's ? I'm crashing in CopyPicture in iOS.\n. ok, mpeg2 iso's under iOS are fine with a recent pull. must have been some local issue. \nOSX/iOS signoff for inject.\n. ping elupus, found two more, see http://pastebin.com/qUR6phWY\n. darwin/osx seems fine and untouched. \nthis seems a little specific, defining a HAVE_SDL_VIDEO_X11 just for X11 usage when with a little work, HAVE_SDL_VIDEO could be used for all. But I can cleanup/refactor to be more generic after inject. I'll do a patch that does this and you can decide if you want to merge that patch into this pull/req\n. ok, I've added some inline comments that need to get fixed.\n. pulled again\nI see \nif test \"$use_sdlvideo\" = \"yes\"; then\nin configure.in\nalso see http://pastebin.com/RU5jLf5h\n. ok now :)\n. \"On X11 monitors can be configured to be on separate X-screens or to share the same virtual screen. I needed to introduce a new gui settings parameter: Monitor.\"\nicky unless absolutely required. users will constantly misconfigure it then complain when it does exactly what they setup but they failed to understand the ramifications. \nWhat's the 'most common setup' for users and how are we doing it now ? a) separate X-screens or b) share the same virtual screen. I suggest coding for the most common and moving the other to as.xml.\n. but who won the side bet ?\n. too late for Frodo, this touches to many areas and beta3 should be the last beta.\n. yes, a pity but last activity on it was a month ago. plenty of time for someone to have handled it then.\n. follow the instructions when you click on the little i with a circle around it (green merge bar, left side)\n. iOS/OSX has clang when building on 10.8 but no vdpau so this does not help\n. It can't hit osx in the same place, no vdpau on osx.\n. @elupus blessed it, inject it in.\n. \"Fixing MathUtils.h for ARM\", needs re-verify on iOS or ifdef to be only used when doing hard float as that seems to be the real issue with it.\n\"Don't hard code arm compiler flags so that we can build for both arme\u2026\" will break iOS build and those flags need to be moved into being passed during the bootstrap/configure stage of tools/darwin/depends/Makefile but only for iOS and not OSX build.\n. I can look at this in a few days. RL(tm) intrudes.\n. sign-off for ios as is.\n. it's a fix :) \n. too late for frodo\n. A simple look through the PR code would answer that question and in case you have not noticed, this PR will no longer apply to mainline.\n. PR == Pull Request -> https://github.com/theuni/xbmc/commit/d3799e6611af1d2a5717c5bd42265cbb654d0f16\n. ok by me\n. all commented addressed, force pushed to update, will commit in morning.\n. vda decodes to iosurfaces which exist on GPU side, there are two cases. \na) under 10.4sdk, we lock the iosurface, then upload to a texture via gl. We do flag readonly however, It's not clear what happens when we lock/upload/unlock but I think the upload handler is smart and does not 1st DMA to CPU then DMA back up to GPU. \nb) under 10.6sdk, we can tell GPU to make a texture from an iosurface and use it directly.\nIn both cases, the picture frame exists as a texture on GPU side after upload.\n. @bobo1on1, m_pVideoFilterShader usage was not possible under the previous vda usage so no loss there. Once we bump to 10.6SDK there is another way to use IOSurfaces and a shader but it's going to make an ifdef mess of RenderSinglePass and friends that I'd rather avoid for now.\n@elupus, how does that look now, RenderCoreVideoRef was really identical to RenderSoftware if m_textureTarget is setup correctly.\n. ping @elupus :)\n. humm, something screwy. \n. ok, small git error :) changed as suggested and resubmitted as 935.\n. fair enough, they don't belong there and it's something that needs to get resolved anyway. \n. otherwise, +1 to inject.\n. I love the smell of napalm in the morning.\n. move into June merge cycle\n. be aware that XBMC.xcodeproj will still exist in root as it also contains user prefs that are not in git. \nskunkworks:xbmc-git davilla$ ls XBMC.xcodeproj/\ndavilla.mode1v3\ndavilla.pbxuser\nusers need to mv these manually into the new location, we can't automate it then rm the old XBMC.xcodeproj dir in root\n. base sdk in project setting is set to 10.7, it should be set to 'latest Mac OS'\n. user will have to fix it up manually, there's nothing we can do to automate this.\n. how about also redirecting the build dir too, so it does not make on in projects.\n. xcode build of xbmc.app is still using /build so this will have to change too.\nalso any scripts that ref the old location will have to change.\nbuildslaves will also needs fixes as they will reference the old locations but we can fix that after inject.\n. added to depends/Makefile.in\n. at one time, there was a request to be able to tell an atv2/3 from a iphone/ipad.\nthat's why there was an system.platform.atv2\n. HAS_SDL will not be present on embedded and they can do full screen. \n. I don't understand the churn of the build system going on here. \n. what changes other than changing the base SDK in the project settings.\n. I prefer surgical rather than sledgehammer, and it lets me see when apple changes things inside the project dir.\n. did you make 100 percent sure that any #if defined(arm) -> #if defined(TARGET_DARWIN_IOS) were inside APPLE ones ? There are places that we check for #if defined(arm) on linux and those have to stay unchanged.\n. you going fix and push this in ?\n. yes, when you enter a dir, ALL the items are queued to run. So they are past the pause point. I know, it's strange but that's the way it seems to work.\nthe only quad core arm processors out is tegra3 and it does not have neon so thumb extract is still going to be slow and a thief of cpu. \nI figure we hit all arm right now, then think about tuning it for specifics. For example, single core atom/pentium-m might be a good inclusion.\n. Cory and I ran into the case where thumb extractions that were queued kept running unless the were bailed in the DoWork. It's very strange and something that you don't see unless you actually look for it on desktop, but arm embedded shows it right up.\nI'd need a sign off from spiff on removing the ifdef, his concern was backing out to home and into video content while playing a video would prevent further thumb extraction.\n. crap, wtf is git trying to do to me :)\n. mainline does not support raspberry pi at the current time, please use the branch at https://github.com/xbmc/xbmc-rbp\n. no sure but they don't belong here :)\n. missing https://github.com/xbmc/xbmc/commit/cbe9ef4ec1a3dce25137f274766bb439270ec17b\n. xcode projects look like they just touch lame and cdrip stuff, that's ok. I don't see any sdk 10.6 stuff, so it might be ok. this would need extensive testing on osx/ios if it does even build.\n. This whole pull into Eden for a release makes me very nervous, there is little testing, lots of feature additions and gui breakage. I'm revoking darwin sign off until these issues and concerns get resolved.\n. kFoo is old school notation for constants, we don't seem to follow any fixed naming style for constants.\n. I'll refactor with the ifdefs arm removed and push.\n. osx builds/runs with a simple addition of main.cpp, I've made a patch and passed it on to TheUni. IOS/ATV2 builds should be fine, they don't use SDL at all and don't even compile/link in xbmc.cpp.\nOSX/IOS sign off.\n. looks like numscreens also hits osx, there's a forum post regarding it\n. need a win dev to sign off on this.\n. -6dB is 1/2 the loudness, what new fangled audio scaling are we attempting to do here ?\nThe previous scaling would take a 0.5 (from slider), passed it though some formula, that output something like 0.06, which then input into AE (soft or core) would result in almost silence. How was that more correct ?\n. Audio wise (to my ear), this matches how my audio amp works with its volume control set to a linear scaling vs a dB scaling.\nIf we want true psychoacoustic volume, then the correct equations are\nlinear = 10 * log2(dB) and the inverse, dB = pow(2, linear/10)\nSee this pastebin (http://pastebin.com/F8sDhrrZ) for a mapping of the previous scaling. note where 50 percent on the slide would output to AE. You have the 0.6dB step but the results are not what you expect ie. 'volume(0.499999), dB(-6.020622), gain(-30.000078), scale(0.031622)'\nIn AE or any valume control that accepts a 0-1 range, this value (scale) is the multiplier on the pcm value. 65535 * 0.031622 = 2072.34777, almost nothing in terms of pcm value. How is this correct and matches anything the human ear hears (and yes, I'm an old fart but I'm still a physicist :)\n. opps, flipped the vars :) This pull implements power dB scaling.\npower: dB = 20 * log10(scaling) i.e. scaling = pow(10,dB/20)\nloudness: dB = 10 * log2(scaling) and , scaling = pow(2, dB/10)\n. That would go against what most consumer experience on their HDTVs when they diddle the volume control. Users don't even care nor understand dB, we should not even show values it except the audio geeks (our < 1 percent user base) might want to see it. To have a volume control that drops 30dB at half scale would mean that a perceptible loudness change would range over the top 1/2 of the scale with the bottom 1/2 being useless.\nWe can certainly change the position of the GUI scaler to pure dB but in my option, that will only serve to confuse our 99 percent user base. Reporting as dB is enough to make our audio geek users happy.\nTry it and think like a user. My Denon receiver can run its volume control in linear or dB, I absolutely detest dB mode as it just does not work the way my linear mind expects.\nNote: changing from a power to loudness scaling works nicer from a psychoacoustic point of view, a change at the low end is more perceptible which was the original complaint and models a physical logarithmic (audio) potentiometer better as they are do not use a true power scaling but a segmented one that increases the response at the end points to achieve better perceptible loudness change. This patch will do that -> http://pastebin.com/VnmegqBR\n. frak it then, someone else can fix this, I'll ifdef the existing scale factor out for darwin, then it will match pre-AE audio in both volume slider position and perceptible loudness change. \n. I just checked Eden, mainline behavior matches it regarding audio behavior. I'm closing this pull/req.\n. +1 on theuni's comments. \n. this looks very large drop into /lib :) \n. @jmarshallnz, I can look but if this means redesigning gtest so that it handles cross properly, then possibly gtest is the wrong framework to use. Drawin (both osx and ios) is actually a cross build. We ignore user installed tools and use only what we build in darwin/depends.\nAs TheUni has mentioned, to handle cross, you can no be running tests during make as you will be making on some arch and actually running things under another arch. The build of the unit tests and the actual running of them must be separate actions and you can not depend on anything being 'installed', the tests must be self contained so they can be moved to the target arch and run.\n. osx w/gcc-4.2 fails to build\nCPP     xbmc/threads/test/TestEvent.o\nTestEvent.cpp: In function \u2018void RunMassEventTest(boost::shared_array&, bool) [with W = mass_waiter]\u2019:\nTestEvent.cpp:616:   instantiated from here\nTestEvent.cpp:579: error: no matching function for call to \u2018thread::thread(thread)\u2019\n/Users/Shared/xbmc/xbmc-git/xbmc/threads/test/TestHelpers.h:93: note: candidates are: thread::thread(thread&)\nTestEvent.cpp: In function \u2018void RunMassEventTest(boost::shared_array&, bool) [with W = poll_mass_waiter]\u2019:\nTestEvent.cpp:627:   instantiated from here\nTestEvent.cpp:579: error: no matching function for call to \u2018thread::thread(thread)\u2019\n/Users/Shared/xbmc/xbmc-git/xbmc/threads/test/TestHelpers.h:93: note: candidates are: thread::thread(thread&)\nmake[1]: * [TestEvent.o] Error 1\nmake: * [xbmc/threads/test/threadTest.a] Error 2\n. ios with gcc-4.2 fails to build\nCPP     xbmc/utils/test/TestCharsetConverter.o\nTestCharsetConverter.cpp:68: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:68: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:69: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:69: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:70: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:70: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:71: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:71: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:72: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:72: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:73: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:73: error: integer constant is too large for \u2018long\u2019 type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nTestCharsetConverter.cpp:74: warning: large integer implicitly truncated to unsigned type\nmake[1]: * [TestCharsetConverter.o] Error 1\nmake: * [xbmc/utils/test/utilsTest.a] Error 2\nlooking closer 0xff450000ff54 is much too big for unsigned long int when a long is 32 bits.\nif you want 64 bit here, then explicitly specify a 64 bit type as long could be 32 or 64 depending on the phase of the moon.\n. that fixed that part; next up on ios\nCPP     xbmc/utils/test/TestEndianSwap.o\nTestEndianSwap.cpp:45: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:46: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:70: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:71: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:94: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:95: error: integer constant is too large for \u2018long\u2019 type\nmake[1]: * [TestEndianSwap.o] Error 1\nmake: * [xbmc/utils/test/utilsTest.a] Error 2\nagain, same making bad assumptions on size of long, you might look around if there are any other sections of code in unit-tests that do that.\n. same error;\nCPP     xbmc/utils/test/TestEndianSwap.o\nTestEndianSwap.cpp:45: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:46: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:70: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:71: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:94: error: integer constant is too large for \u2018long\u2019 type\nTestEndianSwap.cpp:95: error: integer constant is too large for \u2018long\u2019 type\nmake[1]: *** [TestEndianSwap.o] Error 1\nyou might try 0xFF00FF00FF00FF00LL\n. 0xFF00FF00FF00FF00LL works, I bet you could revert that last commit and change to using LL where you want a 64-bit hex ref. I'd again, check all unit-test source code.\n. with that fix, now fails in same error as osx side.\n. TestAtomics.cpp fails on same errors as TestEvent.cpp so anything that does thread games will also fail. That needs to get fixed before I proceed further.\n. With jimcarroll's changes I get further. BUT\nmake  all-am\ncd lib/gtest && \\\n    ./configure --disable-shared --enable-static --with-pthreads\nYou absolutely cannot be doing a configure in the middle of a make. This breaks any chance of cross-build as the configure will pickup buildside settings and not the actual platform you want to target.\nAlso\nld: unknown option: --whole-archive\ncollect2: ld returned 1 exit status\ndarwin uses different linker settings and you need to copy those used in xbmc's Makefile.\n. make testsuite\n...\nLD      xbmc-test\nld: duplicate symbol _main in lib/gtest/lib/.libs/libgtest_main.a(gtest_main.o) and xbmc/test/xbmc-test.a(xbmc-test.o)\nin darwin, duplicate symbols are not permitted. who is the real _main ?\n. Gramps always builds these things from scratch :)\n. make check\n...\nTestCharsetConverter.cpp:195: Failure\nValue of: !memcmp(refstr32_1.c_str(), varstr32_1.c_str(), sizeof(refutf32LE1))\n  Actual: false\nExpected: true\n[  FAILED  ] TestCharsetConverter.utf8To_UTF32LE (0 ms)\n...\nTestCPUInfo.cpp:44: Failure\nValue of: t.IsValid()\n  Actual: false\nExpected: true\n[  FAILED  ] TestCPUInfo.getTemperature (0 ms)\n...\nTestCPUInfo.cpp:57: Failure\nValue of: c.m_strModel.empty()\n  Actual: true\nExpected: false\n[  FAILED  ] TestCPUInfo.CoreInfo (0 ms)\n...\n[ RUN      ] TestDownloadQueue.RequestContent\nAssertion failed: (false), function GetPath, file SpecialProtocol.cpp, line 262.\n/bin/sh: line 1: 81688 Abort trap              /Users/Shared/xbmc/xbmc-git/$check_program\nmake: *** [check] Error 134\nlooking much better now.\n. needs this though, osx/SDL does a wacky thing with XBMC's main so but we can just rm that object\nhttp://pastebin.com/aWvtn0bg\n. @amejia1 , yes. if I leave it out the real binary, then it will not run :) I thought that was pretty clear from the patch.\n. sign off, shove it in during merge window. if there are any new issues, I'll take care of them after merge.\n. Another less than 1 percent feature :)\nDisplay switching is already a hack and does not fully take into account that basically the display/audio is yanked out from under XBMC without so much as an excuse me :) On most platforms, that means the display device goes away which means GL contexts are in question as well as audio sinks if running audio over HDMI.\nBefore any more stuff gets added to display switching, I'd really like to see a thought out process of how xbmc should react to such a yank and the hacks we have replaced with a solid structure.\nSorry to be the naysayer but we really have to stop piling on such features without proper handling and just praying they work right.\n. @GhostM121, right now with display switching, dvdplayer starts playing, audio/video demux queues fill, and decode started. Decode might involve a hardware video decoder that is tied into the display driver (vdpau, vda, vtb, etc). At the same time, a display switch is slammed in, all the while dvdplayer is trying to render video and audio. Since display (and audio if doing audio over hdmi) is now 'disconnected', this tosses dvdplayer into thrashing as it thinks it has fallen behind in rendering. This goes on until the display comes back which might be quick or might take up to 10 seconds or more.\nThen the pause was added to try and fix this mess, but the pause really happens too late. Get the pause duration wrong and dvdplayer thrashes. You can see dvdplayer thrashing in xbmc.log.\nWhat really needs to happen is;\na) dvdplayer starts demux, decode. Only then does it know the real size of the playing stream.\nb) once dvdplayer knows the real size, then it switches display. note that nothing is rendered yet.\nc) detect that the display has vanished, and wait for it to return.\nd) once display returns, dvdplayer sets up rendering to match display\ne) dvdplayer starts to render and life is good.\n. ok, will put that one back for win.\n. force pushed to revert compiler warning on windows.\n. Not looked but does this patch have a sane fallback for the case of NOT being able to wake a sleeping mySQL server ?\n. What percent of users would find this useful, what percent like it as is ? We should be reducing the number of 'specials' in advancedsettings.xml/gui, not adding more special tweaks.\n. you are going to drive hw decoders nuts with all this jumping around.\n. Not true, when you pause, the demux stream is frozen, the decode halts where it is. UnPause, and it picks right up where it left off. When you seek, you flush, resync demux/decode and if you land wrong, then several frames are tossed from missing ref frames until the decoder has enough to completely decode. Some hw decoders will handle this fine, on others, there might be a delay until video resumes and a/v sync is obtained.\n. Not true, when you pause, the demux stream is frozen, the decode halts where it is. UnPause, and it picks right up where it left off. When you seek, you flush, resync demux/decode and if you land wrong, then several frames are tossed from missing ref frames until the decoder has enough to completely decode. Some hw decoders will handle this fine, on others, there might be a delay until video resumes and a/v sync is obtained.\n. @Memphiz, have we added tarball/Make into darwin depends ? We can start having depends build/install taglib now in prep for when this PR gets injected.\n. @Memphiz, since taglib is a static link and the code does not support dyloading, it will have to be added -ltaglib in xcode for now. The packager will pick it up and install into xbmc.app\n. force push requested changes.\n. I'd like to get this in for this pull cycle, no doubt it might cause all sorts of unseen effects that will need to get tracked down and fixed. ALSA and WASAPI are the remaining holdouts.\n. will do\n. Locks around GetDelay would be the responsibility of the specific sink implementation if required. I'd be very careful there to avoid a deadlock as there could two threads accessing GetDelay, Typically paplayer or dvdaudio are the ones that access it, but when the OSD is up, then it also gets this info though an indirect call via dvdaudio.\nNote that if you are running under linux, CThread priorities are messed up and that's the subject of another pull/req that is brewing.\n. CAESinkWASAPI changed. If everyone is happy now, I'll combine this with the original, force push and merge into mainline.\n. tested working under VDA (nvidia) on osx for all four orientation test files.\n. +1\n. What patches are we carrying for upnp ? \nCurrently libUpnp is made as a static lib (libupnp.a) that we hard link.\nAlso, think of darwin builds as embedded, we choose what to enable/disable and we only support building under our depends build system. If someone is doing configure outside of tool/darwin/depends/xbmc/Makefile, that's their problem, not ours.\nWe could also move upnp into xcode_depends but I'd rather that get less usage than more.\n. ok to merge this bug fix into master.\n. I'm for replacing CStdString usage with std::string. I think the one thing missing in std::string and that's CStdString.format.\n. Nice, looks like something that needs to be commented in code so we don't make the same mistake again.\n. @aballier, remember that there are currently three audio engines, SoftAE, PulseAE and CoreAudioAE. \nAlso depending if where AE is doing the processing, it might be working on a single frame at a time, or a bunch of frames.\n. 200kb is tiny compared with say avcodec (about 4 MBs), also dylibs are typically mmapp'ed into the address space, not actually loaded into ram, so the os will handle swapping it into active ram pages on demand. This is how we can run a full blown XBMC on embedded system that can have as little as 256MBs of ram.\nI suggest baby steps, solve the current issue with accessing internal FFMpeg functions. Then think about SoftAE and friends.\n. looking good\n. @Memphiz, if you take a close look at the CA pull thread for passthrough, if there is no data to feed, kAudioUnitRenderAction_OutputIsSilence is set and CoreAudio does the right thing.\n. damn, was just about to pull the trigger\n. squash please\n. nice, this should also fix vda/vtb which need extradata in order to convert from annex-b to avcc\n. oh, +1 on inject.\n. I just fixed a runtime crash with rtmp from the last batch :) You really need to double check the code context and think about what is going on, for example, setting m_rtmp to NULL after one inits it really does not work well...\n. hehe, +1\n. build failure with configure misconfigure fixed in 83112d01a9c65fcef2d97dcc85380aa60cf7f1c1\n. little confusing here, squash these down.\n. that would fail for pivos as both dvdplayer and amlplayer are present. \n. The problem is in the past, addons could pick paplayer (for audio), dvdplayer (for video) and mplayer (not a clue what happens). This worked fine on desktop for picking the audio player (paplayer) or the video player (dvdplayer).\nNote the common theme, audio or video. That's the choice that addons want, not to explicitly pick a player but to vector to the default audio or default video player. They really don't care about which internal video player is used, they only had one choice before and that is what some have hardcoded.\nNow we have embedded and two new internal players, amlplayer and omxplayer. These new internal players are the only way to play HD video content on embedded as there is just not enough ponies to use software decode and dvdplayer.\nSo rather than complicate things by exposing internal video player names (which is only going to grow), just limit the addon to being able to pick one, either the default audio, or default video and XBMC core will make the choice as to which internal video player is best for that platform. This simplifies the solution and still gives addon their audio/video player choice.\n. nice\n. RAND(3)                  BSD Library Functions Manual                  RAND(3)\nNAME\n     rand, rand_r, srand, sranddev -- bad random number generator\nLIBRARY\n     Standard C Library (libc, -lc)\nSYNOPSIS\n     #include \n```\n int\n rand(void);\nint\n rand_r(unsigned *seed);\nvoid\n srand(unsigned seed);\nvoid\n sranddev(void);\n```\n. oh happy, happy, joy, joy. CStdString must die :) +1e6 on this.\n. Anyway we can get frame_mbs_only_flag from sps ? That way we know that it 'might' be interlaced and can vector to a decoder that can handled h264 interlaced ? Right now for VDA/VTB, we parse extradata and only accept if frame_mbs_only_flag is 1 (signaling progressive), if 0, then it's either interlaced, paff or mbaff and we can only tell progressive vs interlaced frame usage by looking at individual frames.\nCurrently we try VDA/VTB and bail on such content, it would be nicer to use this info in codec factory to pick a suitable codec and skip the whole try/fail/try/fail path.\n. Factory codec already qualifies the codec type (mpeg2, h264, etc) and software/hardware flag. I don't see why qualifying the type of h264 is any different. Try/fail/try/fail is very inefficient, it sucks resources loading/unload things and delays the time it takes to spin up video playback. \n. nak on using Boost.Random\n. adding the source for rand_r into android specific's might be the best until Google sees a need to add it.\n. could also do a git mv :)\n. two days for feature inject.\n. What happened to clearing the back buffers of the window on startup and shutdown ? Without this we will get visual artifacts on startup and the last gui image will remain when we quit xbmc (embedded).\n. what is $taglib_install_prefix in your taglib.pc ?\n. did you test under darwin and windows ?\n. Seems like it's there for a reason on two platforms. Since it is not really hurting anything, I'd leave it alone until the real reasons for the presence is fixed, a) no float conversion and b) a better way to handle drawing hog mode. If if really offends, rename it to AE_FMT_OINK.\n. AE_FMT_COREAUDIO_HOG, and never mind what it is or does, skip the ifdefs as it's already been shown by gimli's port that none of the other AE_FMT_xxx quite fit for it's usage and it is used as an AE format. Hog mode (or 'oink' as it is defined by its 4 char type) is a fact of life under OSX, it is the only way to configure the output for passthough of any kind, be it one of the traditional encoded flavors or multichannel pcm. To output multichannel pcm over hdmi, you MUST be in hog mode.\nAt some time, I do plan on attempting a CoreAudioSink to replace the CoreAudioEngine and bring darwin under SoftAE, then we can further discuss the need/usage of AE_FMT_COREAUDIO_HOG if needed.\n. It has already been discussed on irc the benefits of a CoreAudioSink, the largest is common code which reduces the amount of maintenance required, plus common behavior which exposes potential bugs/issues through cross-platform usage.\n. +1\n. looks fine with me, hit the green button.\n. does this fix an existing problem or issue ?\n. if this is going in, it needs to go in as is, there's no time left for the prefect solution, I'd have ALSA skip suspend/resume, it does not need it as there is no exclusive mode.\n. Ping @DDDamian \n. this ready to inject ?\n. Broken pipes, audio thrashing, high cpu, etc. General SoftAE misbehaving. With/without GUI sounds enabled too. Video/Audio startup and seeks.\n. ouch, wth is it doing during that ~3.8ms ? Is JSON trying to out suck SoftAE for the tile of top cpu-vampire ?\n. Why acc at all ? I looked about for a receiver that handles acc passthough and came up empty. \n. rather aac than acc, typo :)\n. +1\n. what is a mouse in an IR remote setup ?\n. fix or feature ? \n. ok to bring in Frodo, just sync with @Montellese regarding JSON-RPC compatibility.\n. someone needs to explain to me why this is needed. \n. how do these addon depends get installed onto a remote system ?\n. I still don't understand, if an addon configure needs some lib/headers, then will it not be looking for them ?\n. NAK on this. This moves binary addons closer and closer into xbmc source tree and the whole point was to move them out. If some configure settings needs to be passed into addons configure, then it's not the job of xbmc's configure to do that. It's up to packaging to configure addons the same way as xbmc is configured. For an example of how to do this, see tools/darwin/depends/xbmc-prv-addons. In this, PVR addons are built and installed before and without having to involve xbmc's configure. Yes, it's configure must match xbmc's configure but that's the point, they are out of xbmc's source tree and should be treated as such.\nI understand that debugging can be a pain but that's just the way it is with external items. PVR addons is not and will not become part of xbmc's source code. We agreed on that before pvr merge.\nAlso pvr addons should be static linking what external depends they need. This whole external depends is a rat hole that we really should be avoiding like the plague. We have four platforms and they all handled libs differently, static linking resolves this down to one method.\n. Eventually, binary addons are to be treated the same as existing xbmc addons, they will be hosted and fetched/installed on user demand. At this point, distros will have little say in what the said addon contains. \nIt's a silly assumption that using static linkage in an addon for libs that XBMC does not use requires XBMC itself to be static linked. If you think this, then your understanding of linkers and dyloading is flawed. Plus, I don't care what is the 'linux' way, XBMC runs on several other platforms besides linux and you MUST start thinking about ALL the platforms we support with respect to any solutions regarding binary addions. See box, think outside of box.\n. \"static linkage in an addon for libs that XBMC does not\", please reparse this sentence :) I never said to static link ALL libs, only those that are not already present in XBMC.\n. is this ready for inject ?\n. @Montellese , green light from me.\n. does this mean a libbluray version bump ?\n. do not let this snowball, the clock is ticking. we really should have strings frozen already and adding gui bits means strings.\n. +1 on topfs2's comment.\nI'll allow this for Frodo as long as it goes in before beta2 is tagged and someone on a non-arch linux checks for regressions.\n. need an Linux xbmc dev to sign off.\n. @huceke, you are on Arch Linux, do you see this issue ?\n. push it in.\n. If this/pr #1548 are going in, they need to go in the next day or so to give us about a week of critical regression testing.\n. @arnova, trying to decide between this and P/R #1548 which includes this P/R.\n. @theuni ?\n. I will need sign off before beta2 from all platform devs for this fix to go in Frodo.\n. ok to merge.\n. looks good as it, +1 inject.\n. nice\n. see https://github.com/Pivosgroup/xbmc, for new --enable-codec configure switch. I'd like to move any alternate codecs to use this switch. It can handle multiple items too. So something like\n--enable-codec=amcodec,stfcodec\nwould enable the building of both amcodec and stfcodec\n. what is your current dev branch ? I want to start resolving some issues.\n. nice, look forward to testing\n. oh, --enable-codec=amcodec,stfcodec ?\n. k\n. m_keyguardLock is not defined\n. yes, my bad, I'm a little behind.\nDroid-U2, this worked before, now does not.\nV/XBMC    ( 2309): 19:54:17 T:1556104592   DEBUG: CDVDPlayer::HandleMessages - player started 2\nV/XBMC    ( 2309): 19:54:18 T:1556105112   DEBUG: CDVDPlayerAudio:: Discontinuity1 - was:554500.791667, should be:428009.082667, error:-126491.709000\nV/XBMC    ( 2309): 19:54:18 T:1556105112   DEBUG: CDVDPlayerAudio:: Discontinuity1 - was:761432.166667, should be:864000.000000, error:102567.833333\nV/XBMC    ( 2309): 19:54:18 T:1556105112   DEBUG: CDVDPlayerAudio:: Discontinuity1 - was:1267193.250000, should be:1396245.624667, error:129052.374667\nE/OMXCodec( 2309): [OMX.SEC.AVC.Decoder] Timed out waiting for output buffers: 0/6\nV/XBMC    ( 2309): 19:54:20 T:1557301896   ERROR: CStageFrightVideo - decoding error (-110)\nV/XBMC    ( 2309): 19:54:20 T:1557301896   DEBUG: CDVDPlayerVideo - video decoder returned error\nE/OMXCodec( 2309): [OMX.SEC.AVC.Decoder] Timed out waiting for output buffers: 0/6\nV/XBMC    ( 2309): 19:54:23 T:1557301896   ERROR: CStageFrightVideo - decoding error (-110)\nV/XBMC    ( 2309): 19:54:23 T:1557301896   DEBUG: CDVDPlayerVideo - video decoder returned error\nE/OMXCodec( 2309): [OMX.SEC.AVC.Decoder] Timed out waiting for output buffers: 0/6\nV/XBMC    ( 2309): 19:54:26 T:1557301896   ERROR: CStageFrightVideo - decoding error (-110)\nV/XBMC    ( 2309): 19:54:26 T:1557301896   DEBUG: CDVDPlayerVideo - video decoder returned error\nV/XBMC    ( 2309): 19:54:27 T:1556105112 WARNING: CDVDMessageQueue(audio)::Get - asked for new data packet, with nothing available\nV/XBMC    ( 2309): 19:54:27 T:1556105112   DEBUG: CSoftAEStream::Flush\nE/OMXCodec( 2309): [OMX.SEC.AVC.Decoder] Timed out waiting for output buffers: 0/6\n. http://pastebin.com/dS1i8EbL using your fulldebug image.\n. sounds about right.\n. time to update ?\n. davilla@rootcoder:/xbmc/xbmc-android$ file xbmc/cores/dvdplayer/DVDCodecs/Video/StageFrightVideo.cpp\nxbmc/cores/dvdplayer/DVDCodecs/Video/StageFrightVideo.cpp: ASCII C program text, with CRLF line terminators\nopps :)\n. @Memphiz , still relevant ?\n. hehe, playing pass the ping ? :)\n. /me gives Memphiz a cooke\n. merge into one commit then inject.\n. ping @elupus \n. I agree, it's quite strange. The effect only shows up when you have a boatload of audio/subtitle streams like with raw bluray. The Sleep(0) is actually a yield and I suspect the scheduler does something strange and the dvdplayer/demux thread becomes CPU starved.\nI doubt that any desktop platform will show video or audio stutters, most are multi-core and the scheduler do the right thing with audio/video threads. With hw decode on arm single core, I don't see any audio stutter present and that is sort of worst case. \nI originally had a lower percent value of 25 and changed that to 75 as the lower value then risked driver demux buffer starvation for hw decoders.\n. ok\n. changed from 75 to 50 and pushing in 3.. 2.. \n. @Memphiz, can you give this a try on ios to make sure nothing bad happens ?\n. k\n. push it.\n. Comes direct from SDL source, http://www.libsdl.org/tmp/SDL-1.3-docs/SDL__stdinc_8h-source.html\nYes, very strange but valid code (except for the SDL_memcpy4 changes) :)\n. wow, it even has a name :)\n. /me swims over to the treasure chest and blows a bubble.\n. nice\n. last one... if there are any future issues with this, it will be removed for Frodo release.\n. any lang bumps needs to be in BEFORE the 15th so get moving :)\n. looks good\n. @opdenkamp , inject when you have all the bits in place.\n. @jmarshallnz, if ok with you. inject\n. if it fixes an issue, inject\n. if you feel confident, inject\n. rc2 on 19th. release pushed back so there's some time to verify.\n. aml, with dvdplayer/amcodec, I've seen that message \"NOTICE: GL: Reverting to POT textures\"\n. you have until RC2 turns, after than, it's too late.\n. +1, inject it\n. @elupus, if you could prep an tracking patch for lib/ffmpeg/patches/\n. I'm ok with either\n. hw decoders will need that info too.\n. if @jmarshallnz agrees, inject it\n. @jmarshallnz, comments ?\n. Fixes audio issues under Pivos Linux/Android, need desktop win/linux platform verification for Frodo inclusion.\n. moving curSystemClock = XbmcThreads::SystemClockMillis(); up to where var is defined is ok. That will keep curSystemClock updating.\n. and the rest of libdvd ? there are three parts, they are typically paired.\n. and what is the real cause of the  \"too many arguments\" warnings ?\n. This broke android build :) Did anyone actually test ?\nhttp://buildbot.xbmc.org/builders/android-nightly/builds/249/steps/compile_2/logs/stdio\n. ld -nostdlib -o /dev/null -llibbluray -Wl,-t\nld: unrecognized option '-Wl,-t'\nld: use the --help option for usage information\n-llibbluray would look for liblibbluray, you sure you want that ?\n. ignore that one, wrong ld\n/home/davilla/xbmc-droid/android-ndk-r7-crystax-5.beta3-toolchain/android-14/bin/arm-linux-androideabi-ld -nostdlib -o /dev/null -L/xbmc/xbmc-android-depends/armeabi-v7a/lib -lbluray -t\n/xbmc/xbmc-android-depends/armeabi-v7a/lib/libbluray.so\n. Sorry but this PR has been reverted because android build has been broke for three days and no one seems to care to fix it. So try again and next time, test or have tested on all platforms.\n. yes, list it and it will get merged into frodo.\n. @theuni , comments, thoughts ?\n. separate PR please for the removal of the \"fps is fps * 2 : 25 fps -> 50 fps\" for 3D SBS/TAB modes\n. Grr, we talked about this... If you absolutely need this debug a user problem, LOGDEBUG it, it not, remove it. Development debug logging does not belong in committed code.\n. I'm just bitching about useless log spewing :)\n. should I toss a coin ?\n. commit it and add it to the frodo backports.\n. @huceke , ok for Frodo ?\n. we can wait for you to resolve your issues.\n. @theuni, @Montellese, I'm ok with this going in.\n. squash down please.\n. @jmarshallnz , @theuni ?\n. @DDDamian , @FernetMenta , @MartijnKaijser \nneeds sanity testing, checks, etc on Linux and Windows platforms to see it it resolves the blocker and does not cause other issues.\n. @ronie reports it breaks his working ubuntu linux :) no audio on resume.\n. I'm working with the mess we have so keep the comments constructive please, besides this seems to be a swing and a miss for non-pivos linux, someone has to try something to fix this pig :)\n. The next one will be some ifdef madness :)\n. batter up :)\n. seems the only thing that might fix this is to ifdef out all the suspend/resume changes that were added for windows. that's when this mess started :)\n. ok, that fixed ronie's issues with constant underrun errors\n. look again\n-#if !defined(TARGET_WINDOWS)\n. we still need a fix for OE suspend/resume.\n. @theuni something makes no sense with your patch. that would sleep 10 ms on each pass except if doing a restart\n. @FernetMenta , yea, I don't see 'CSoftAE::Resume - Resuming AE processing' and that's confusing.\n. ApplicationMessanger  usage in CAEFactory::Suspend()/Resume -> case TMSG_EXECUTE_OS, it's only used when using external players. \n. mrmini:xbmc-git davilla$ grep -r \"CAEFactory::Resume()\" xbmc\nxbmc/ApplicationMessenger.cpp:      if (!CAEFactory::Resume())\nxbmc/cores/AudioEngine/AEFactory.cpp:bool CAEFactory::Resume()\nxbmc/cores/ExternalPlayer/ExternalPlayer.cpp:  if (!CAEFactory::Resume())\nxbmc/interfaces/legacy/ModuleXbmc.cpp:      CAEFactory::Resume();\nxbmc/powermanagement/PowerManager.cpp:  CAEFactory::Resume();\nmrmini:xbmc-git davilla$ grep -r \"CAEFactory::Suspend()\" xbmc\nxbmc/ApplicationMessenger.cpp:      if (!CAEFactory::Suspend())\nxbmc/cores/AudioEngine/AEFactory.cpp:bool CAEFactory::Suspend()\nxbmc/cores/ExternalPlayer/ExternalPlayer.cpp:  if (!CAEFactory::Suspend())\nxbmc/interfaces/legacy/ModuleXbmc.cpp:      CAEFactory::Suspend();\nxbmc/powermanagement/PowerManager.cpp:  CAEFactory::Suspend();\n. Just noticed something\nin CSoftAE::Suspend, it does a stream->Flush() on all streams. I wonder if extending the #if defined(TARGET_WINDOWS) to include this would help.\n. bool CSoftAE::Suspend()\n{\n  CLog::Log(LOGDEBUG, \"CSoftAE::Suspend - Suspending AE processing\");\nif defined(TARGET_WINDOWS)\nm_isSuspended = true;\n  CSingleLock streamLock(m_streamLock);\nfor (StreamList::iterator itt = m_playingStreams.begin(); itt != m_playingStreams.end(); ++itt)\n  {\n    CSoftAEStream stream = itt;\n    stream->Flush();\n  }\nendif\nreturn true;\n}\n. smashed and cleaned for inject. any objections ?\n. I bless :)\n. I added a function into IPlayer to indicate that the player controls volume. See https://github.com/Pivosgroup/xbmc/commit/c62e33c1c709a8773ede6010086435a40bb2f5e0\nWorks better than trying to out guess what SoftAE is doing. Then I track the state of g_settings.m_bMute inside the player to handle mute. A new function into IPlayer, virtual void SetMute(bool bOnOff) {}; would be preferable and outside code can test ControlsVolume before calling.\n. you can add :)\n. yes\n. so far, just amlplayer and omxplayer\n. will test\n. this looks fine, I'll update amlplayer later.\n. I'm against adding things like g_advancedSettings.m_videoDisableHi10pMultithreading, they don't really solve the real issue and only add more techy tweaks that make xbmc more and more un-useable for anyone but tech geeks.\nadvancedsettings.xml is already filled with such thing and guisettings is getting confusing to mortals again.\nLet's solve the real problems and stop adding work arounds and tweaks. If frame multithreading is crash prone for some sources, id those sources and exclude them from frame multithreaded decoding. Or id those source that are save and include them. ie. use a white list or a black list to pick. But a setting to enabled for Hi10p, come on, next it will be m_videoDisableH264PVRMultithreading and the list starts growing and becomes unmanageable and confusing.\n. no hw decoder on the planet supports hi10p... :) not now, not every. Nvidia has already gone on record saying they have no interest in supporting nitch video formats.\n. you do know _LINUX also means TARGET_LINUX, TARGET_FREEBSD, TARGET_DARWIN, TARGET_ANDROID and TARGET_RASPBERRY_PI ?\ngrep _LINUX *\n. Then have those platforms been checked for posix_fadvise ?\n. wrong assumption :)\nskunkworks:xbmc-git davilla$ grep _LINUX configure.in \n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_FREEBSD -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_FREEBSD -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_IOS -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_OSX -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_OSX -D_LINUX\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_POWERPC\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_POWERPC64\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX\")\n  AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_ANDROID\")\n     AC_SUBST(ARCH_DEFINES, \"-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_ARMEL -DTARGET_RASPBERRY_PI\")\n_LINUX is the old outdated flag that sort of means Linux, sort of means OSX/IOS, sort of means FreeBSD. That's why the explicit TARGET_xxxxxx was created. _LINUX should not be used in new code but we are sort of slack about that rule.\n. Correct, there are reasons for this as we cannot depend on some external include behaving properly and not doing something silly like defining WIN32 under a linux build. Also it keeps the ifdef mess down. Which is cleaner\nif defined(TARGET_POSIX) or\nif defined(_LINUX) || defined(APPLE) || defined(...).....\ngcc defines do not solve all issues :)\n. And what if some external defines anything else we don't like.... then the nightly build breaks and we figure out the offender and plummet them with trout.\nWe use TARGET_xxxx, your PR is wrong, fix it or no inject. It's really quite simple and I'm not willing to listen to arguments about it. It's already been discussed at length in the past.\n. _LINUX is an old xbox-isum that needs to die in a fire.\n. push and add to frodo backports list\n. How backward compatible is this ? we have a ton of existing users/distro building Frodo the way it is now.\nUpcoming (and not released) automake-1.14, it's not released and if it's not backward compatible, changes to support it will not be accepted :)\n. automake-1.14 requires bumps to autoconfig and friends. I suspect that that would be a one way trip. We would have to check all platform builds before we embark on such a journey.\n. Will commit and see what the bots do before thinking about frodo backport\n. I'd rather things be complete and match mainline in commits.\n. CoreAudioAE.cpp is never used for Windows and the wrap of SystemClockMillis will only occur on windows :)\n. OE massively patches XBMC :)\n. Note that SDL nonsense will still be present until it's removed from OSX.\n. fixes only in frodo at this stage.\n. stick it in the frodo backport list\n. note to self, add to frodo backports\n. I really wish avi's would just die in a fire.\n. just curious, hints.ptsinvalid will get set for avi's. why not just never trust pts for avi's ?\n. @huceke ?\n. nice, I like :) darwinutils is used on ios, you can tell by looking at the functions in here like GetIOSVersion :) d'uh :)\n. rebase :) and status ?\n. reallife(tm) can suck.\n. @huceke, can you test rpi to make sure we still pick it up for rtmpX protocol \n. @ampedandwired, this is for you.\n. np, sry about the late response/fix.\n. nice :)\n. Options 2) or 3) will result in the same problem if xbmc crashes or if android kills xbmc. Option 3) becomes more difficult as now you add checking for passthough on certain devices to set to 100 percent.\nIn my option, keep this simple and don't worry about the what if cases, you can not cover them all so why try and make thing more complicated in the process.\nRemember, with these devices we should not be touching the volume anyway as we don't own it in the 1st place, the system owns it and the user has the system volume at some setting because they wanted it there, For us to be changing it is rude but in some cases, we need to diddle it. \n. ok, user has system volume set low. runs xbmc, plays video, dials up the volume to hear the audio. quits xbmc. Now system volume is high. User goes and browses the net and some java script plays music at the volume setting left by us and user becomes annoyed. The way around this is to remember and reset the system volume back when we quit and then we are back to 1) above. If we crash or are killed by android, system volume is screwed.\nSo it does not matter when way we choose, there's always something that could happen that leads to undesirable effects.\n. grr, can we change this to directly control the system volume on android. There's already a place in the audiotrack sink to do this. \n. yes, you will also have to make the calls public now :)\n. @da-anda , STREAM_MUSIC is refe'd in the PR, that's the one we should be using. Why would we change ringtone ? That has nothing to do with music/video playback ?\n. generally, all volume levels in XBMC are treated as the same, for example, gui sounds are on or off, you don't get to adjust the volume and since there is only only sink and AE handled mixing, there is only one volume to deal with. So pin track volume to max, and adjust system (music) volume.\n. same, xbmc's volume bar.\n. pick one and do it, we can bikeshed which control to show later.\n. make those changes and I'm fine with inject to mainline for Frodo+\n. need to be careful about that percent->db->scale stuff, it does not work across platform like you might think it does...\n. we already discussed the volume bar appearance point of view, it's not fair on the coder to be flicking back and forth. \n. I think a lot of this can be cleaned up after inject, the author of this PR has already been subject to enough flips and code changes due to our indecision. However, if you insist, we can rake him over the coals some more.\n. press on then :)\n. looks good, @jmarshallnz, ok to with you ?\n. just curious, why not use CDVDClock, I thought it represented the current display time.\n. humm, maybe we should change it's name to CDVDDemuxerClock then :)\n. @theuni , looks ok ?\nI suggest we hold on this until Frodo is released.\n. @theuni ?\n. \"This pull request cannot be automatically merged.\" :)\n. You have to be very careful in what is removed here. The changes are not obvious.\n. Should be fine unless the existing stuff in configure.in/makefiles was removed. buildbot will show if there's a problem.\n. buildbot can build from a user's github branch :)\n. use TARGET_xxxx in XBMC code, _LINUX, WIN32, APPLE should not be used.\n. @Voyager1 , you have to watch out of reserved keywords in any headers that might be included into obj-c code (extensions of .m or .mm), examples are 'id' and 'self'. When you view non-obj-c code in Xcode, those reserved keywords are highlighted like reserved keywords in c/c++ ( 'for', 'while', or 'if' ).\n. store these diffs under lib/libdvd/patches, that way like with ffmpeg, we can track.\n@elupus , ready for inject ?\n. well, I think that's the point of the new fork, nothing is happening at the old home. 4.2.0 was the last release.\n. 1) I generally dislike magic macros like PRINT_SIGNATURE() ..., What is the reason for changing the logging besides style ? Also, there's a ton of development logging going on, clean it up and only log what you need to see for user debugging.\n2) overall, looks great.\n. move the logging changes to a separate commit.\n. any issues with other platforms ?\n. +1 on using proper prefix for hex.\n. ok to me.\n. needs testing on all x86 platforms first.\n. Looks ok, I do also hate the whole ENUMERATE_SINK define mess. Seems silly. SoftAE seems to do everything from scratch and never remembers previous results. That's one area that needs to change.\n. hahaha, looks good fritsch.\n. you mean race :) this whole thing is racy :)\nyou ready to commit this ?\n. It's in a poll, inside libasound.so, that means alsa is waiting, you need to ponk alsa so it lets go of the poll and comes out. you woul also need a ponk inside addpackets to cause it to pull out. same up the call chain.\nBut that's not going to fix the serious race. When we are suspended, there are to types of messages depending on platform and setup. 1) request to suspend and 2) we are going to suspend. 1) is easy, we can stall off the suspend until we have everything shutdown and ready. 2) is much harder as we are going to suspend reqardless of if we are ready or not. So we have to race the system suspend to shutdown things and get ready.\n. which case, the 1st (suspend while NOT playing music) or the 2nd (suspend while playing music) :)\n. I agree but I think the idea of a softae::run thread needs to go away, this high priority thread implementation is the single most problematic thing with SoftAE under arm and other low resource platforms. It's just too easy to not sleep wait somewhere, somehow and have this thread run away and suck all the CPU away. There's a real reason why I call it vampireAE :)\n. That exactly the problem, SoftAE::Run never really sleeps :) \nThe other thing that can help are events. Remove as much polling and spinning, sleep and wait on an event.\n. I suggest take the best possible case and merge, you will not fix all the warts of softAE in one pass. Best possible case seems to be c) as it does fix current fault conditions and work on d).\nRemember that while we like to keep mainline in the best shape possible, that does not mean it must be perfect. It is not perfect now and and will never be 100 percent free of bugs/issues.\n@FernetMenta, I not sure more threads is the correct way to deal with this, At some point, adding more and more threads to solve issues breaks down when you only have a single or dual core. Plus we need to think about latency issues of actions, ie. xbmc core tells AE to suspend, when does it actually suspend ? Right now, we setup for suspend, but the actual suspend happens some unknown time later when the softae::run thread gets around to running. We try and force things by diddling with thread priorities but that's bad design.\n. @DDDamian, please stop confusing the PR discussion, This PR is already getting outside it's scope. \n. @fritsch, say the word and I'll pull this in. \n. Yes.\nAnother thought for the future would be to switch to the null sink when closing down any real sinks for suspend, etc. The null sink should not have any bad behavior or racyness during suspend. That might help with having to check/lock in RunOutputStage. But, null sink is broke and no ever bothered to fix it. \n. Very Nice :)\n. Interesting. aml could use this too in dvdplayer. FernetMenta, the one difference from rpi/aml and others is the video frame is not available to gles. It is being rendered to a separate video plane and XBMC is not even in control of then it flips. The whole concept of wait to FlipPage goes out the window but you do have to retain something for when the GUI os popped up over a playing video.\n. yes, just a FYI, there's a new dvplayer/amcodec implementation in pivos repo. will be doing a PR soon for it. Here, amcodec is doing hw decode but the actual video frames are rendered outside of gles. \n. nm :) I see the previous commit that does the expansion at the source. looks fine.\n. do we do the convert to a full name over and over in the GUI ? if so, CPU sucker :)\n. better, @jmarshallnz  might have some thoughts\n. looks fine to me, inject it.\n. perfect :)\n. I mimic real hardware, this seems to work, other games did not. I already tried them and failed. You cannot stall out AddPackets too much or risk servicing frames in ::Run.  The thread might seem overly complicated but it is simple , easy to understand and takes little CPU and does mimic physical hardware pull.\n. What might not be apparent is that the sink must drain audio frames at the given sample rate. SoftAE depends on that to function correctly. It is not simply that you must block for N ms to keep ::Run from running away in AddPackets but you must also drain at the setup sample rate and make sure that GetDelay, GetCacheTime and GetCacheTotal are correct.\nWhile this method (with a thread) might seem overly complicated at first glance, it does ^^ and more important is easy to understand.\n. opps, my bad on the win breakage. I did not squash because I wanted the initial ring buffer implementation to remain in history for future debugging.\n. will do.\n. anyone check using external players that command-suspend/resume softae so they can control audio directly ?\n. nice work @fritsch , fixes an issue that popped up on pivos/linux which was it lost audio after run amplayer which command-suspended/resume softae. \ngreen button time ?\n. Unified deps are in the works but not merged and no PR yet, we can always chased unified deps with updates once it comes in. Might be good to add a sticky like Frodo 12.1 backports so we can track any depends bump that happens before unified deps comes in. In other words, +1 to bump it in darwin depends but track bumps in a sticky so nothing gets lost. Bump tracking should include the 'why' it was bumped too, not just the bump.\nAlso @ulion, tarballs need to get pushed to our mirrors before bumping. \n. @jmarshallnz , @theuni, tick, tock, tick, tock :)\n. @huceke , @popcornmix. comments ? questions ? \n. @huceke ? accept or reject please.\n. @firnsy ?\n. better late that really late :)\n. how should players that use BYPASS work ? Essentially rendering is outside of the scope of gles.\n. @theuni , need to you to look at this.\n. The VDA/VTB XBMC codecs have no control over the number of video surfaces used except by not releasing them back to the internal codec's pool, thus forcing it to alloc more. The internal hw codec owns these buffers. \nVDA is slightly more complex as there are two ways to handle hw decode, one way uses CVBufs all the way up, the other uses CVBufs but converts to normal dvd picture frames when are then passed up. The choice depends on the physical GPU, ie intel, nvidia or ati.\n. fixed in bc772968ebaa98d37a0baa5d820d7b8abb57a8f3, PR it next time, thanks.\n. any relation to https://github.com/xbmc/xbmc/pull/2143\ncan windows go to 0.9.24 ?\n. @ulion , why 0.9.24 and not to 0.9.20 ?\n. android can't be bumped at all or can't be bumped to 0.9.20 or 0.9.24 ?\n. eh ?  0.4.6 has a threading problem that ulion found that causes crashes under iOS.\n. how high can you easily go on window, then we set the others to match.\n. @ulion , never depend on global search in xcode project, it will not catch all possible across all platforms. See the xxx.a static libs we link to, those are built during the make xcode_depends stage.\n. grep -r  xbmc\ngrep -r  lib\n. \"ERROR: GLES: Vertical Blank Syncing unsupported\" is fixed and was actually a lie. VSync was enabled or there would have been another error message. Since the real problem this solves seems to be elsewhere, look deeper.\n. see, https://github.com/xbmc/xbmc/commit/8d2e0fe0d3cd5592765910de545ff471c90cea8c\nif setting vsync really fails, then you should see\nCLog::Log(LOGERROR, \"%s,Could not set egl vsync\", FUNCTION);\ncoming from CWinSystemEGL::SetVSyncImpl\n. ok to inject from me.\n. @ace20022 , you may but not using github as any post on githubt goes to 100+ devs regardless of if they are interested in the discussion or not.\n. garbage\n. @Memphiz can you check iOS ?\n. +1, works fine under pivos amlogic arm SoCs which use mali.\n. this is exactly why I dislike auto set default params :) \n. @opdenkamp ?\n. +1, works great on both AMLogic M1/M3 based SoCs under Pivos/Linux.\n. seems ok on pivos m/1/m3, inject ?\n. tick tock, tick tock.\n. is this what you want backported to 12.1 ?\n. Once this goes in, add what you want to the frodo backport list. This is the only way they will get into 12.1 .\n. looks ok except for the wfxex.SubFormat thingy\n. any potential candidates for 12.1 must separate commit, thx.\n. needs https://github.com/xbmc/xbmc/commit/6c06a32d36dc2357f29286f861029aca59eb9361\n. is ok with me as it only touches rpi\n. my bad it seems :) please add it to the 12.2 list.\n. nm, I've added it to the list.\n. missing atv2 xcode project fixes.\n. oh my :)\n. auto +1 from me\n. Where in the xcode project do we diddle with PATH ? Also there is nothing in ...toolchain/bin that xcode needs. So why should we even be diddling PATH in xcode project ?\n. Ahh, just found it\n. symbol link will fail when you setup to build more than one\n. humm @theuni , why are we doing x86_64-darwin11.4.2 again. I thought I nixed that because any created paths must be able to be generated from xcode symbols like $(SDK_NAME)_$(CURRENT_ARCH)\n. I've reverted the toolchain path to the original flavor, spec'in build-cpu/build-os is silly on darwin and I can't gen it from xcode symbols. Darwin does not care about that either, it's arch/sdk that determines what runs or not. native is native so back to a plain .../xbmc-depends/toolchain.\n. if one cannot seek or pause a UDP stream, why do we pretend we can ? Option 1) above seems the proper solution.\n. Pass NULL or kCFAllocatorDefault to use the current default allocator.\n. ping @elupus \n. I too use the codec screen a lot but I'm also very aware that popping it up can and will alter XBMC runtime behavior. \n. ok\n. merge windows are always the 1st to 10th of the month.\n. I'm not sure we can guarantee that ipv6 is enabled or disabled on any platform. Is there some way to test ?\n. @DDDamian is our AE windows expert, if he approves, he can hit the green button.\n. git blame\n. git blame rules :)\n. yes, memory leak can cause crashes and crash fixes are certainly 12.2 material. please queue it in the 12.2 backport thread.\n. the window is open to commit this to mainline, @elupus and all, green button time ?\n. ping @elupus :)\n. backported.\n. what ? I get no love for suggesting the real fix :)\n. backported.\n. Please include a URL to any test files so all platforms can check and versify this PR.\n. Many embedded OS's can indicate when they are running out of mem and need apps to purge to free up mem. iOS does this as well as Android. I'd like to see an API hook to purge and trim usage on demand. Others can attach the hook to actually OS purge calls once this is in.\n. platform devs need to sign off as this touches all platforms.\n. looks fine, this is something that escaped the original PR and makes me wonder how it was ever tested on all platforms in the 1st place :)\n. Did you git blame and track down the commit that remove the dashes ? I highly suggest that we research why this was done in the first place or risk regressions. Found it so NAK on this PR :)\nhttps://github.com/ScudLee/xbmc/commit/07bdfd56588681606419865212ceed72c4cf895a\nfixed: remove hyphens in search-string in case the first lookup gave no results (closes #12357)\n. stuff like this should be commented in the code :)\n. darwin uses static libs of internal ffmpeg, the above is a fake to get the right routine names. So while darwin dows not use actual external ffmpeg, internally it 'seems' to use them to get correct naming.\n. sample please, of video content that shows the problem.\n. describe your setup, display, size, etc and if you have any overscan or non-default gui/video calibration.\n. the old man grunts a +1\n. 12.2 launches in 24-48 hours.\n. @arnova, convince @jmarshallnz :)\n. iterators are ++var, normal vars can be either. the reason is ++var skips a copy (thx ace20022) :)\n. fixed.c: In function \u2018FLAC__fixed_compute_best_predictor_wide\u2019:\nfixed.c:290: internal compiler error: Bus error\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee URL:http://developer.apple.com/bugreporter for instructions.\n{standard input}:unknown:Undefined local symbol L_memcpy$stub\nmake[5]: *** [fixed.lo] Error 1\ngcc-4.2 does not like it :) This particular section of code is never compiled on osx/linux/win as the mmx asm routine is used instead.\n. I'd rather keep it in so we know where/what SDL touched. m_frameCount is used with SDL mutex later in the code\n. you can choose arm or ATMEL. Take your pick. There is no iOS compiler flag.\n. To reduce hammering system calls to see how much memory is being used. The whole memory tracking code is an xbox'ism that need to get yanked but that's a task for another day.\n. XBMC code flow should traverse back up to xbmc.cpp and exit clean like a good app should and not be calling exit() deep in code. This needed a refactor and is a task for another day and is on my hit list.\n. reverted\n. reverted\n. I could but that would make the next step messy which is to replace the program wide usage of SDL mutex/conds under osx/linux/win with these. We have talked about removing the depends on SDL, it's a large task. Pulling code from SDL guarantees we have the same behavior and then we can refactor it to suit.\n. Noted. GetDisplayLinkFPS and friends don't exist in WinSystemOSX and I was defering the refactor of DisplayLink handling program wide until iOS came into trunk.\n. http://trac.xbmc.org/ticket/11324 created to deal with this program wide.\n. Agreed it's ugly but keeps the original code intact. libflac is targeted to move to osx/ios-depends as an external lib, it is now only configured and build for osx/ios. Once there, I can do a sed replace or patch at build time and I will revert these changes in lib/libflac.\n. reverted\n. Noted, handing of PowerManager are on the hit list.\n. yes, that's one way to handle this but it would touch more code than is touched now. I'd really like to defer global SDL changes until after trunk merge. That way I can address SDL mutex/cond as an individual item rather than mixed in with ios merge. I can also get the assistance of a win dev to bring in SDL mutex/cond code for Windows. Yes this is ugly but yes it will get cleaned up as SDL must die.\n. cosmetics reverted\n. ",
    "sraue": "i have build xbmc yesterday with this and without an installed openssl. it works here (except ssl support in my external python for sure). an grep over the xbmc sources shows me thats needed only for python.\nfor sure it would be nice if anyone can test this patch with windows/macos etc too...\n. done with https://github.com/sraue/xbmc/commit/6b7844a3f297357343a113164a2ac338d517fcea\n. updated: disabled samba in zeroconf too.\ni'll merge this tomorrow if there are no objections.\n. updated on evil spiff's request: dont build samba sources if samba is disabled.\n. added a commit to change the date of (i hope) all license headers\n. closing, updated by #1394\n. i will work this out the next days, that was my plan too, but i was not sure if it would be accepted\n. seems to work on OpenELEC too, thanks much\n. can you test with this patch and report back if this fixes your issues?\nhttps://github.com/OpenELEC/OpenELEC.tv/blob/master/packages/mediacenter/xbmc/patches/xbmc-321-texturepacker-hostflags-and-rework.patch\n. as said, the old macros are deprecated since 10 years, and was supported both (the old and new) the whole time. so it is backwards compatible unless you are using a 10 year old automake version. for pre automake-1.13 \"users\" this should fix some deprecation warnings.\nthe same will be for the upcoming automake-1.14 changes.\n. @davilla, this PR is for automake-1.13... not sure how long it takes before they release 1.14 - maybe in 3 months, maybe in 5 years... who knows..., thats why i wrote Frodo+x and not Frodo+1 :-) \n\"Automake 1.14 will likely require Autoconf 2.70 or later\" means: to let automake-1.14 work its needed to install autoconf-2.70... thats not xbmc related, its a distrospecific problem :-) (package automake depends on package autoconf)\n. here is a OpenELEC build with this patch included for testing:\nhttp://sources.openelec.tv/tmp/image/OpenELEC-RPi.arm-devel-20130211162131-r13263.tar.bz2\ni see no negative performance changes here.\n@cptspiff sorry, @rbej was trying to make a OpenELEC build with this patch included after a request http://forum.xbmc.org/showthread.php?tid=140518&pid=1330917#pid1330917 i told @rbej he should ask me next time if he has such problems.\n@samnazarko, we all know you dont like OpenELEC but your comment was the most useless comment here (like any other \"+1\" and \"me too\" comments)\n. @MartijnKaijser please test:\nhttp://sources.openelec.tv/tmp/image/OpenELEC-Generic.i386-devel-20130211035812-r13253.tar.bz2\nthis build contains this PR\nI have tested supend/ wakeup more then 5 times in a row while playing music on a Zotac AD02 without issues. (Without this PR i get a black screen every time after wakeup)\nAlso i tested pause/wait 15 sec/unpause with and without enabled menusounds more then 5 times in a row.\n. @fritsch @MartijnKaijser please test: http://sources.openelec.tv/tmp/image/OpenELEC-Generic.i386-devel-20130211191801-r13263.tar.bz2\n. @fritsch @MartijnKaijser please test: http://sources.openelec.tv/tmp/image/OpenELEC-Generic.i386-devel-20130213204938-r13290.tar.bz2\n. tested here, and works... from my side its ok to merge and much better then calling any 3rd party tools\n. @popcornmix, @MilhouseVH HAL is deprecated and should not be used anymore. XBMC can work completly HAL free and should do this. @theuni the problem is the follow, xbmc \"asks\" upower if suspend/hibernate is supported and shows the options in the powermenu if its supported. but if upower is not installed (like in OpenELEC for RPi and ATV) because both systems simply dont support this and upower depends on consolekit, which depends on on x11 libs. If XBMC dont get a answer from upower via dbus, then all options are displayed. The right solution (under linux) will be if upower dont work, is not installed etc... then suspend/hibernate will not work, so then this options should be disabled by default - and only activated if upower (or the older implemention devicekit-power) reports it is supported. checking /sys/power/state is not needed there, because xbmc will not support supend/hibernate if the file is there but upower/devicekit-power is not installed.\n. i can test it here later today/tomorrow on various systems with and without upower installed and with and without suspend supported\n. @MilhouseVH i have tested your patch but without the ifdef's. it works as expected (not tested with hibernate, but it should not be different):\n- suspend supported, upower installed: suspend will be shown in the shutdownmenu\n- suspend supported, upower NOT installed: suspend will NOT be shown in the shutdownmenu\n- suspend NOT supported, upower installed: suspend will NOT be shown in the shutdownmenu\n- suspend NOT supported, upower NOT installed: suspend will NOT be shown in the shutdownmenu\ncan you please update your PR, then its ok from my side to go in master\nbtw: like i told, its not a RPi related \"problem\" its a general \"problem\"\n. @theuni here the paste of the fixed patch, based on your work: http://pastebin.com/0fWgqky5 @MilhouseVH can you test this one too and report back, but it should work for you too\n. the '''else if(1)''' is there to force this if we have '''HAS_HAL''' defined and '''m_instance''' is still not set (no (working) upower/devicekit/systemd). if we build without HAL (in most cases) this '''else if(1)''' will not be included and '''m_instance = new CFallbackPowerSyscall();''' will be run with no (working) upower/devicekit/systemd installed. i am not sure if compiling will fail without '''else if(1)''' in line 85 because two times '''else''' without a '''if''' (if building with HAL support) is generally wrong in if/then statements.\n. @MilhouseVH this i used before, but changed this on @theuni 's request, so i think he is more happy with the paste from me\n. at runtime check for presence /proc/net/if_inet6 (for linux)\n. @FernetMenta no, we build with external 0.10.6 with all XBMC patches applied which is similar to the included in xbmc-frodo/master (0.10.2 or so)\n. @huceke yes this was the plan, bigger commits which touches stuff outside of omxplayer i have left out\n. thanks @huceke :-)\n. @t-nelson yes there is a problem (quick compile test):\ncontent of stdio.h: http://paste.fedoraproject.org/7389/36588655\n/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/toolchain/bin/x86_64-openelec-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I..     -march=atom -m64 -fomit-frame-pointer -Wall -pipe -Os -fexcess-precision=fast -ffast-math  -mfpmath=sse -msse2 -mssse3 -mmovbe -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -DNDEBUG=1 -MT argp-eexst.o -MD -MP -MF $depbase.Tpo -c -o argp-eexst.o argp-eexst.c &&\\\nmv -f $depbase.Tpo $depbase.Po\nIn file included from argp.h:22:0,\n                 from argp-eexst.c:25:\n./stdio.h:1030:20: error: 'gets' undeclared here (not in a function)\nmake[6]: *** [argp-eexst.o] Error 1\nmake[6]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9/lib'\nmake[5]: *** [all-recursive] Error 1\nmake[5]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9/lib'\nmake[4]: *** [all] Error 2\nmake[4]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9/lib'\nmake[3]: *** [all-recursive] Error 1\nmake[3]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9'\nmake[2]: *** [all] Error 2\nmake[2]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9'\nmake[1]: *** [..] Error 2\nmake[1]: Leaving directory `/home/stephan/projects/openelec-master/build.OpenELEC-ARCTIC_MC.x86_64-devel/xbmc-74fa128/xbmc/screensavers/rsxs-0.9/xbmc'\nmake: *** [xbmc/screensavers/rsxs-0.9/xbmc] Error 2\n. eglibc-2.17\nthis patch fixes this:\nhttp://paste.fedoraproject.org/7394/13658921/raw/\ntaken from http://web.archiveorange.com/archive/v/NUQmuMUJSXCAe5yXEnuM (click \"show footer\")\nwe also should remove all .h files where a .in.h exist, because they will be generated from Makefile (and removed on make clean)\nlater i get a error about gmtime and localtime, this i can fix with using gl_cv_func_gettimeofday_clobber=no in our buildscript. i dont needed this before, but its usefull to integrate this in the configure.in script like:\nhttps://github.com/xbmc/xbmc/blob/master/configure.in#L2736\n./configure \\\n    CC=\"$CC\" \\\n    CXX=\"$CXX\" \\\n    CFLAGS=\"$TEMPCFLAGS\" \\\n    gl_cv_func_gettimeofday_clobber=no \\\n    ...\ni dont know if it must be setup for OSX too, but we can handle this with if...then...fi if its not needed or gl_cv_func_gettimeofday_clobber must be enabled there\nwith this 2 fixes it compiles and i will try to run rsxs here now\n. ^^^ runs fine... ;-)\n. http://git.savannah.gnu.org/gitweb/?p=gnulib.git;a=blob;f=lib/stdio.in.h;h=c345499a5381016a53502eaaf0b813a26002f23a;hb=HEAD line 698-703, looks the same, so a newer gnulib-tool should work?\nhere is the change: http://git.savannah.gnu.org/gitweb/?p=gnulib.git;a=commitdiff;h=66712c23388e93e5c518ebc8515140fa0c807348;hp=3d0ba3fe7865e7030b4d2097f122e64b16f0a5c9\n. ",
    "CrystalP": "Don't worry about Windows, it doesn't use configure and always has an internal Python.\n. Pulled & merged as 5e6d3fd, see details in ticket.\n. Added linux implementation, thanks AlTheKiller, and rebased -i to fix up minor issues.\nThe linux implementation should be tested, I can't.\nbobo1on1, maybe LinuxRenderer and LinuxRendererGL need the same treatment as WinRenderer to remove the hardcoded sws_rgb2rgb_init(SWS_CPU_CAPS_MMX2).\n. I had a look and it's useless because sws_getContext already calls it when appropriate.\nIt would be useful only if we called the rgb-yuv conversion functions of rgb2rgb directly.\nI think the function should be removed from DllSwScale.h and the renderers, but it's not this branche's purpose, so I'll just remove the commit related to sws_rgb2rgb_init.\n. Read the commits, builds & works fine in Windows, no concerns, well done!\n. Good catch, thanks. I also fixed the FIXME just above that :) Will push when I figure out the proper way to merge into master with git\n. Looks good, I'm just concerned with performance on low power hardware (crappy Intel, Ion, old ATI/nVidia...). This approach renders twice, as opposed to render once and make a smaller version copy.\nThe render chain is currently simple, but adding deinterlacing and some post-processing will make the 'render twice' model clearly more expensive and will push more hardware over the edge. I may be looking too far in the future though :)\n. I changed my mind and agreed with those who wanted a single dir for all xbmc version. Commit & files on the mirrors updated to reflect that.\nThere is a separate sub directory for the mingw/msys stuff, scripts are also updated to reflect that. Works for me, I'd appreciate confirmation by someone else.\nThe new libluray was incorporated in the commit.\n. Adjusted for the recent addition of xbmc_asap.dll and merged as d41b2fa30fc58a1520e4215f69ddb5546c310e9f and 2d2ec046bd54f3290585c0dc15dcff2c9f5832ed.\n. Thanks for your contribution. Can you do just one advanced setting to turn on both 3 taps scalers?\nI'm fine with Spline36 as it has slightly different visual characteristics but I'm not sure about adding another \"optim\" scaler. Lanczos3optim filled a gap and was a necessary evil for entry-level cards but that's about to change with a PR I'm going to merge.\nAlso Lanczos3optim is visually a bastard between Lanczos2 and Lanczos3 (somewhere in between for sharpness and ringing) so I don't think there's room for another entry in the 2 taps.\nOther opinions?\n. Yeah I noticed yesterday the GL breakage. To be fixed real soon.\nI can see why bob asked for the 2 taps version as I don't know when he will add the faster shaders for GL. Still the space is getting crowded for the 2 taps. I'll ask him what he thinks.\nAnd my comment was to unify the advanced setting to turn on the 3 taps, instead of having two, one for Lanczos3 and one for Spline36.\nI wasn't clear earlier, my PR only helps D3D so the advanced setting must stay for GL.\n. OK, bob wants it and it stays. My PR is merged.\n. There is now a conflict with the message string numbers, please adjust and I'll merge.\n. I'm not sure it's safe to assume that the best enumerated deinterlacer will give adequate framerate no matter what the post processing options in the video driver are.\nFor example the \"Enforce Smooth Video Playback\" option in the ATI driver will grey out some deinterlacing options in Catalyst for my ATI 4550. DXVA enumerates the same deinterlacers no matter what the \"Enforce Smooth Video Playback\" value is.\nI suppose they found that some combinations are too taxing, but I haven't seriously tested this.\n. Argh... I didn't state my point clearly... Might be useful to let the user choose an \"intermediate\" deinterlacer. Better than Bob and less intensive than vector adaptive, to get sufficient framerate.\n. I'd like to take a good look this weekend before it goes in. Sorry for the previous comment, I hadn't read this PR and thought this was about the deinterlacing code in the trac ticket. That will teach me...\nAt first glance it's fine with your recent changes to simplify.\n. Overall the code is OK, see a few comments/questions above. There are lots of changes unrelated to adding a DXVA renderer though, and they should not be there at all or be split into separate commits.\nExamples of stuff that could easily go in separate commits or a different PR:\n- dxva.cpp: replacing m_decoder with m_context->decoder.\n- dxva.cpp: eliminating m_device from CDecoder\n- changes to pass the color data as flags to the processor\n- the printf format...\n- dxva.cpp l.562, changing the log level DEBUG->WARNING\n- all the changes in the CDecoder::Check().\n- removal of the #ifdef ALLOW_ADDING_SURFACES with partial removal of m_buffer_count\n  might as well completely remove m_buffer_count and use m_context->surface_count everywhere.\n. Looks good to me (after the m_processor=NULL removal), elupus I'll let you pull the trigger.\na11599, I hope you didn't throw away the other changes, they were good ideas and could form a dxva \"janitorial\" PR.\n. You have a PR for my 'battery-status' branch with a Win32 implementation.\nGetSystemPowerStatus() in Windows returns whether AC is plugged in, whether the battery is charging, remaining battery life %, remaining battery life in seconds.\nIt's possible to get details when there are multiple batteries but I agree that's overkill.\nNot sure about hiding when battery level is 100. I'd find it more consistent to always see the info for a battery-equiped computer. The user would clearly see a full battery instead of wondering where the line went.\nAlways hide for a computer without batteries ofc.\nIt's not a big deal, but 'int' is overkill to represent 0-100% :)\n. Tks! Next target, libmpeg2. Has a bunch more optimizations available.\n. Regardless of disk space, I'd personally like to always preserve the two most recent versions per addon, to always have the ability to rollback. I'm comfortable enough that two broken releases in a row are quite unlikely.\nOne suggestion: if that's not done somewhere else already, use this function to delete the packages of uninstalled addons?\n. Yes, I forgot to mention that and didn't go in the theory of the convolution filters. It reduces the number of texture fetches per output pixel.\nFor 2 taps, 1 pass = 16 fetches/pixel. 2 passes = 4 * (source_height/dest_height + 1). At worst 8 fetches, for DVD->1080p it's ~6\nFor 3 taps, 1 pass = 36 fetches/pixel, 2 passes = 6 * (source_height/dest_height + 1). At worst 12 fetches, for DVD->1080p, it's ~9\nThe GPU usage doesn't fall in proportion to that reduction because of the fixed cost of the YUV->RGB shaders.\nThe more the image is stretched, the more efficient this is. We could even look at 4 taps filters.\nbob, feel free to correct my math :)\n. Sure there could be a fallback to 1 pass for hardware lacking precision.\nI went with a 10bit intermediate texture here, not float and thought that would be enough. Same as the YUV-RGB shader basically.\n. Ah yes, good point. So either float texture or offset+scale values in an integer texture, similar to what's done for the kernel texture.\nNot sure it's worth trying the integer textures. 8 bits will have issues, 10 bits would be really borderline and is it common on hw lacking 16bits float. 16 bits integer would be fine but are there cards with that and not 16 bit float...\n. OK the results are in. Performance wise, float textures are actually faster with 3 taps on the G210. I may have measured wrong in the first post.\nThe cost on the 4550 is an extra 5% GPU usage, so that eats close to half the gains for 2 taps unfortunately.\nI'll try to evaluate the picture quality with D3DFMT_A2R10G10B10 scaling+offset, as it preserves the speed gains for ATI.\n. With my eyes I didn't really see a difference in the video quality with a float or integer intermediate texture. However, with a shader showing the differences between the two, there are clear differences for some sharp edges. So to be safe I won't include any integer textures.\n. Added a commit to stop requiring the advanced setting for Lanzos3, since it's now cheaper than Lanczos3optim was.\n. Took care of cptspiff's cosmetic issue :)\n. Removed the code for the 1 pass/2 pass comparison\nThe PR is now ready for merge. Time to speak up if you don't agree with something.\n. Nope, still needed for GL.\n. Nice work, I also did a patch for that but didn't get around to finishing the settings part. I'll dig it up and compare, this is not the same approach.\n. As a general comment, can you break this down in multiple commits, corresponding to the logical steps you went through?\nIt's similar to the agile programming idea of testing your work often for each small change.\nThat makes things easier to review and comment on.\nFor example, adding support to print more info about the processors during the enumeration is one small step.\nEarlier in the life of this patch, the intermediate level deinterlacer were not accessible IIRC, it was HQ or Bob only. Adding that support is an example of another step.\nDon't worry about having to force push with git, it's OK with your own branch for a PR. Definitely not OK for master!\n. I'm going to submit a PR for a basic implementation that should go in rather quickly. Then it will be possible to do other PRs to refine and add the bells & whistles.\n. I don't have specific comments yet but I'm interested by this. I didn't find a button to simply watch this PR, so here I am!\n. Sorry for the curve ball but...\nWhat about reducing the complexity and stopping the sharing of surfaces between the decoder and the processor.\nLet the decoder and the processor manage their own pools of surfaces, and do a copy from decoder surfaces to processor surfaces when a picture is ready.\n. Yes, the extra copy is the cost. Poulsbo may be worse than Ion. That can be tested before committing to such a big change though. Now that I'm thinking about it, the hit won't be doubled with deinterlacing as the number of copies depends on the source framerate, not on the presentation rate.\nOn the plus side, the extra safety surfaces (decoder and processor side) won't be needed anymore.\n. The decoded data is in VRAM so yes definitely a VRAM to VRAM copy with StretchRect() or a quad copy. It's not free but usually cheap.\nAnd I'm not saying it's the way to go, I don't like the inefficiency of the extra copy either.\nWhat about this: let the decoder and processor allocate their own surface pools (they know the size they need), and give the processor a way to tell the decoder \"here are the handles to my surfaces, feel free to use them for decoded pictures\". Shrinking the processor pool would be tricky, it would be best to Close() and reallocate everything I suppose.\n. Yes and no. CreateSurface() belongs to IDirectXVideoAccelerationService and could be called from there. The important bit is the requested surface type, and you are correct that it must be DXVA2_VideoDecoderRenderTarget to be used by the decoder.\nIt's the same as the current code really, the surfaces are allocated as DXVA2_VideoDecoderRenderTarget.\nThe question is whether the decoder will accept to work with surfaces from two surface pools allocated separately.\n. If elupus is OK with the changes to allocate and share the surfaces, that's good enough for me. Still don't really like the two allocation paths (dxva or sw decoding), but one thing at a time. I don't think the allocation should be in the decoder or processor at all.\nI'll soon have the time to give the code a thorough once-over.\n. Selecting the 'Pixel Shaders' renderer in the GUI is broken at several levels for a video with h264 dxva decoding.\nFirst I got flickering and soon a bluescreen+reboot, after a small fix got a black screen... didn't have time to dig deep.\nI went through dxva.cpp/.h and things are OK for me there, I'll just have cosmetic comments to prepare for a merge and make a pretty history log.\nI have yet to look at the rest seriously.\n. The problem is that performance is not sufficient on a bunch of hardware and blue-screening a computer\nis not OK even if we know it's the driver's fault and our code is fine.\nI think the idea is good but the implementation is not ready yet. There are many options to fix that part and it\nwill take some time to discuss and experiment. I'll be glad to participate and have a patch of my own for that.\nSo I'd rather merge now what's ready, merge the deinterlacing, and then come back to this issue.\nOne visible benefit in this PR is that we can now easily hook up the detail and noise filter controls of the\ndxva processor to the OSD GUI, like vdpau already does.\n. And a more brace style issues, I'll let you mass-substitute.\nI finished reviewing so you have all my comments now. Regarding a cleanup for merge, it's a bit late to have the incremental changes in separate commits in this PR. So with the final version I'll ask you to squash+rebase the whole thing and then there are two small changes that can easily go in two separate commits:\n- the CDecoder::OpenTarget() refactor\n- the CProcessor::Add(IDirect3DSurface9* source) removal\n  So you'd end up with a 3 commit branch. If you can break it down more it's even better.\n. That works for me, thanks! (minus the minor nits above)\n. Agreed, the absolute value of the time is not important.\nI don't understand line 1231 of the current code, and why forward refs would affect the oldest frame to throw out.\nSeems to me that it depends only on the current \"time\" and the amount of back refs wanted by the processor.\nAlso I thought your two initial for loops could be combined into one, see my while loop line 1232, let me know if that's OK.\nThen how to fill the array with DXVA2_SampleUnknown in the right spot was a bit of bikeshedding, I know. \nI can do something closer to the current code.\nI have other issues with the buffer management, but no code to show at this point.\n- what happens to the pts/m_time relationship after a seek, isn't there a risk to drift and ruin A/V sync\n- all surfaces should be thrown away on seek. Otherwise, the backrefs could still be pre-seek and show ugly artifacts.\n- the surfaces used as refs by the processor should be locked in some way so that they're not reused/overwritten\n  by the decoder until they're not needed anymore\nWould you like to discuss that here, in a trac ticket, in the deinterlacing PR? We don't seem to be on IRC at the same time lately.\n. That's close to what I had originally :) except for the guarding against an out-of-order queue and gaps.\nI thought that was over-engineering: with the monotonous increase of m_time and the flow in the Processor::Add() and Render(), the queue will be ordered and have no gaps, no matter what happens to the pts. I don't feel strongly about it though and can go either way.\n. There you go, this version does not assume that the samples queue is sorted and has no gaps.\nMaybe the code in Processor::Add needs to be a little smarter if order cannot be assumed, as it depends on it to assign the m_sample.back().End time and when dropping frames with a full queue.\nm_time is incremented in Processor::Add and always results in an element added to the queue so I still don't understand how we can have gaps. Or end up out of order. The sync between m_time and pts will drift in case of dropped frames of course.\n. OK, squashing and committing.\n. Can't say I'm 100% on the fixed pipeline and don't want to break something else by accident, so your original change is  fine and can be merged as-is.\n. Yes for the idea, but no for the implementation. Performance is going to be bad with the gpu->sys mem copies. That's the reason it hasn't been done yet with dxva decoding or vdpau.\nThe work needs to be done in gpu memory and only the result should be sent back, to save on upload bandwidth. This may be the first reason we have to look into OpenCL as I'm not sure a shader can do it in a reasonable manner.\n. What matters here is the time available between two vsyncs and the amount of work to get done. Whether the copy is done every frame or once in 25 frames, that doesn't change your worst case.\nTo reduce the load, the work would have to be broken down in 1/25 (or whatever) slices of images at each frame.\nMeaning an extra buffer (1/25 the height for example) receiving only a slice of the frame. Uploading that to sys mem would take less resources.\nAt each frame, a different slice gets copied so that in 25 frames, the whole frame has been transferred. As you said, black bars shouldn't move much so it's not important that the 25 slices are from the same frame.\nOr just do the work with the GPU.\n. Maybe it won't help but was thespecialist's patch for missing slices ever merged/pushed to ffmpeg?\n. I have another one of those problematic samples, does the same thing as your screen shots.\n@elupus, in case you remember it's a Queen video clip that was reported when dxva mpeg2 was added in ffmpeg. The user was questioning the bitrate because other tracks on the same DVD worked fine and had lower kbps.\nThe slice patch is committed and doesn't help.\nedit: bit rate is between 5-6Mbps, nothing outrageous.\n. I think downgrading the default is a good idea, maybe even use Blend if it is brought back.\nThe problem is that the amount of work is vastly different depending on the size of the image. Deinterlacing a youtube post stamp, a DVD or HD is not the same scale.\nMaybe a heuristic based on video size, number of CPUs/cores wouldn't suck too bad.\nUntil someone adds a performance-measuring dry-run before playback so that the most appropriate algorithm is picked :)\n. OK, the bits you were not expecting probably come from the commit \"Refactor RenderManager m_presentmethod values\". It's not strictly required by this PR, but it seemed like a good idea while I was in there and changing stuff.\nAll the rest is required.\nAnother thing I found is that since yadif's addition, I don't see how libpostproc's blend could be activated. yadif's activation code runs earlier and always takes priority from what I understand.\nI don't know what your intention was and preserved the behavior in the PR.\nIf you do a commit in master to clear that up, I'll be happy to rebase and merge that bit.\nre. which software method should be default, I think it's between yadif half and blend. It's not the point of this PR though.\n. Yes yadif turns on for Auto and Deinterlace/Deinterlace Half. \nlibpostproc blend was enabled as that was the only option in Windows until recently. Yes it's bad visually but better than nothing and very easy on the CPU. There never was a performance complaint.\nI don't know if a single-core Atom without Ion can always handle yadif half-rate. Or if there are some ARM platforms that doesn't have the horsepower.\nI'm going to update the PR due to the dxva deinterlacing merge.\n. Here it is, rebased and merged with recent master changes. I added dxva support, which let me find and fix an error in the vdpau changes.\nBuilds/runs fine in Windows GL as well, so chances are pretty good it's going to be fine on Linux.\nStill need vdpau and GLES ack.\n. Updated the messages.\n@elupus, I didn't get interest in IRC for someone to test with vdpau. I'll give it another shot and if that fails again I guess I'll just merge since nobody cares :)\n. I suppose that by \"breakage of other things\" you mean other platforms. I double-checked and the only touched spot shared with other platforms is the renderer, and the changes there seem harmless to me.\nAfter some testing the unknown nVidia device can deinterlace, so I changed its description.\nAlso a few additional cosmetic changes.\nI'll rebase and merge.\n. Also OK for me on Windows with the Transform->Project change mentioned by topfs2.\n. @elupus, do you know why this work wasn't done earlier by any chance?\nI don't know much about this part of xbmc but noticed that when switching out of fullscreen, a few things are done differently, such as vsync. Is there something of that type that could conflict with this PR?\nRegarding performance, yes it would have to be hidden by an advanced setting if performance is a problem for the Ion.\nI suppose we lose all benefits of dirty-regions when switching out of fullscreen mode because the background is always marked dirty?\n. I'm not very comfortable with having this change turned on by default because the Ion can't take it and I think that's the minimum hardware that we want to work fine out of the box. I definitely wouldn't expect regular users to dig in the advanced settings.\nelupus, that's a good idea and it could remove the need for the advanced setting and let the code auto-adapt to the capabilities of the hw.\nIsn't the picture duration available somewhere? If so it could be better to test if the first present finishes before half the expected picture duration minus some safety factor.\n. I can buy the simplicity argument, but don't understand how it handles future refs better.\nThe current code does it correctly as far as I know, please explain.\n. Yes the plan is the runtime selection.\nHowever my concern with doing it now is that this new implementation wouldn't get much testing.\nI was not affected by the stuttering earlier. I've been running a build on Win7 with this PR's implementation for a few days and it's pretty good. On two occasions, I saw a visual problem similar to frames being skipped. Both on the same video, I am not sure if it's related, That was with software decoding+ps rendering.\nEverything else was fine, and exiting XBMC works correctly again which is a nice bonus.\nBarring other reports, I'd say let's get this PR in and monitor the forums for threading related issues.\nAfter we're comfortable with the results, turn on the runtime selection.\nedit: the thread linked above reminded me about some strange pauses before playback starts and sometimes while browsing the library, to move from line to line. I think I saw it happen also with FairMonitor, I'm not sure it's relevant.\n. It fell off my radar. And I don't really understand what bobo1on1 and jmarshall are talking about here, so I'll gladly give up ownership of this problem.\n. Agreed but I know it feels hackish. I'm away this week and most likely next week with no dev computer, so feel free to merge, argue on IRC, ... :)\n. Located in DVDVideoPPFFMpeg::Process now, fits right in.\nlibpostproc doesn't give a way to find out if it does deinterlacing and I didn't want to c/p their argument parsing, so I cheated a bit and set a 'deinterlace' member from dvdplayervideo.\nThe question remains  - which flags should be cleared?\n. Changed to clear only interlaced, will push now.\n. Builds fine in Windows. I didn't find samples that exercise this, or I just didn't find out how to make it do something. Set the value to 30dB, nothing happened.\nA few remarks:\nThe setting should be disabled in the OSD when using passthrough.\nThere's the same snippet in all sinks:\nfloat gain = 1.0f;\n      if (m_drc > 0)\n        gain = pow(10.0f, (float)m_drc / 1000.0f);\nmight be better to put that in Remap()\nIs this change active when xbmc is transcoding to ac3? (aac5.1 to ac3 using spdif typically)\n. My middle name is pike :) And it was late when I tried yesterday.\nMissed one spot in Win32DirectSound.cpp, line 364. Change gain to m_drc.\nOther than that works fine now Bob.\nI wonder, should this be a per-video setting or global.\n. OK I wasn't clear about the setting. I'm sure there are other opinions but to me per video is useless, even counter-productive.\nThe use case for me is to reduce the sound dynamics when it's late. Exactly like a receiver can do. Ideally, push a button on the remote to cycle between off and a few preset boost values (off/low/mid/high for example). I'm not interested in xbmc restoring the drc value from the last time I played a video.\n. That sounds good Bob.\n. I don't think that's going to run in XP because InitializeConditionalVariable is still linked and will not be found in the OS when the app is loaded. It needs to be dyn'loaded and executed through a function pointer (the function to test isVista is actually really close to what's needed)\nIs this implementation faster than a factory pattern, a parent class defining the interface, and two child classes for XP and Vista?\n. It builds fine on XP or Vista but will fail to load, because the InitializeConditionVariable function is explicitely called, therefore in the list of functions to resolve when loading. On XP, that will fail before any xbmc code gets a chance to run.\nWe've seen the same thing with D3D9Ex, Dwm functions, etc. And every time the fix was to dyn'load the function.\nFor example see lines 51-62 of RenderSystemDX.cpp. The rest of the code uses the g_Direct3DCreate9Ex function pointer.\nAnother approach regarding performance is what is done in LinuxRendererGL: the CLinuxRendererGL class has a tuple of function pointers, m_textureUpload, m_textureDelete and m_textureCreate. Depending on the actual texture type, they get assigned a different tuple of functions (for example UploadNV12Texture,DeleteNV12Texture,CreateNV12Texture) and the class then only calls the function pointers, eliminating an 'if' at every execution.\n. XP is still with us for a while I think. We stopped supporting Win2K with Dharma to give you an idea.\nI'm having a bit of trouble to follow what's happening with the #ifdefs XP/Vista. It's a good idea to allow forcing the XP implementation under Vista, but I think it would be simpler to always build the code with runtime selection, and to add a comment at the top of setConditionVarFuncs() like this:\n// uncomment the next line to force XP implementation\n// return false;\nAlternatively enclose the \"return false\" in a #ifdef TARGET_XP. Because xbmc's official builds are always going to be with the runtime selection, using that method will make the code forcing XP almost the same as what would actually run in XP.\nNote that forcing the Vista implementation under XP doesn't run, so it's not needed.\n. @jimfcarroll, I was asking you about removing the #if defined(TARGET_VISTAPLUS) and #if defined(TARGET_XP) sections because they won't be used in the official builds, complicate things a bit and will have to be maintained until we drop XP support, which is pretty far away.\nIn addition I'd be surprised if the performance problem in the previous XP implementation was because of one \"if\" or function pointers too many. After all to miss a vsync, it's a question of tens of ms wasted, not ns. So maybe threads were not woken, something was keeping the CPU busy, ...\n. I am a grumpy bastard in training :) I'll try to get the opinion of a senior dev.\n. I agree that it's not easy and it's a choice between making something hard to read and something a little slower.\nI'll give it a shot.\n. I don't have a better solution, time to bring in other opinions.\nI think it comes down to the interface+inheritance approach or the current 'if' selection, but simplified.\nWill try to find out if performance is critical on that piece of code, 'cause I prefer readability otherwise.\n. Nice, and it works fine here!\nJust a few things:\n- indentation on a few \"inline void Init()\" please\n- the initialization of the isVista things is not safe on multicore processors I think. In theory two threads could instantiate two ConditionVariable at the same time and pass the if (!isIsVistaSet) test of getIsVista(). I don't know what would happen then.\n  That may be nittpicking :) Might be safer to run getIsVista() WinMain, when we know there is only one thread running and nothing needs it yet? Or throw a CriticalSection in there?\n. I don't think it's guaranteed before main, because there is no static initializer. The ConditionVariable first user will initialize.\nAdding a static initializer and the lack of guarantee of the order of static initializers is another can of worms...\nedit: right sorry there is a static initializer.\nHowever in my case, it's CRemoteControl that runs the code first. There is no guarantee in the ordering.\n. I know it works now, just would rather avoid nasty surprises down the road. Alright, go ahead and merge :)\n. @taxigps, you may want to look in this PR if something breaks with utf8 paths.\nLet's merge!\n. This is your self-built dnssd.dll, right?\nCan't get tangled with any Apple pre-built stuff, it has too many constraints.\nAnd well done!\n. That seems in line with examples in the SDK, I can't check that it works, no iDevices.\n. I thought a bit about the distribution problem for the service, and maybe we could build and distribute our own mDNSResponder.exe.\nIt has a special mode when started with the -server parameter and runs as a regular program (not as a service which requires registration on setup, unregistering with uninstall).\nSo it could be started as a fallback when the service is not installed and started?\n. @topfs2, @jmarshallnz, thoughts?\n. Yes it should, but it doesn't work. Only part of the control pulses.\nI merged the first commit already, not the second as I don't want to cover up a deeper bug that may be biting somewhere else.\n. Are indexes copied with the CREATE TABLE LIKE statements? (mysql newb here)\n. elupus. you did the locking stuff in dxva, I came onboard right after that and I'm not very good with that stuff. Looks fine to me.\nHowever a comment about the renderer flush: to improve dxva post processing I want to introduce at some point a sort of Flush() as well, but for different events (such as codec errors, when skipping) and with a different action: discard past frames kept around for the dxva processor.\nA common solution could be to add a flush reason parameter to Flush.\nedit: I remember now, the problems with dxva were with the surface allocation/release, not the locking. That was a bitch.\n. I re-read the comments, and am wondering about elupus' comment about reopening the codec / calling GetFormat multiple times. I don't see how that would happen with the PR current code\nThere was a problem in that area while testing dxva fixes for the cropping problem.\n. OK thanks, since the idea of these patches is accepted I'll put more work in them for proper commit messages.\n. Here are the patches reworked.\nDoing the mpeg2 correctly is a bigger task, don't know if I'll have time before Eden so that will do for now I guess.\nI dug in the dxva vc1 doc to add proper commit messages and as a result slightly refactored + changed the patch (different interpretation of the overlap butterfly on page 35. Doesn't seem restricted to Advanced Profile to me).\nh264 I Frames: brought back the version that put the variable in H264Context.\nAnd finally found an invalid text format string in a log message.\n. I'll add the ticket numbers back, sorry about that. I have on hand the samples referenced in the tickets, do we have a place for samples to make sure links don't expire?\n. Hey where did the comments go?\nAnyway, that's good news isidrogar so I removed the part that moves the hurry_up.\nI created the matching patch files, took all comments into account so I think it's good to go now.\nI'll squash each fix with its patch before merging, for cleaner history.\nLast chance to comment!\n. So here is a more proper fix for the mpeg2 slices problem. I took a peek at the vaapi code for inspiration, and it works, but it's not v.efficient, ie reallocs for each slice. In the problem sample, there are 208 slices per frame...\nFirst idea: realloc as necessary on first frame, then keep the array/adjust as needed and free when decoding stops.\nProblem: there doesn't seem to be anything to hook into to catch the AVHWAccel destruction and free the slices array.\nSecond idea: the slice count is going to be more or less the same from frame to frame, so remember the last slice count, and immediately allocate that in start_frame, instead of reallocing 1 by 1.\nProblem: where to store that information. To avoid breaking ABI, dxva_context is out, MpegEncContext is out as well I think. Mpeg1Context might work but I don't know how to access from the mpeg2 dxva code.\nBecause our ffmpeg copy is only used with xbmc, ABI compatibilty is not really important so for now I could add the data to dxva_context or MpegEncContext. That will likely be a problem to merge upstream though but I have no idea what kind of solution they would prefer.\nI haven't really looked but suppose a similar work should be done for h264 and vc-1.\n. That's exactly what av_fast_realloc does here so I'm not sure what you're saying.\nIt takes a pointer to allocated memory, a pointer to currently allocated size and the requested new minimum size.\nIt will update the pointer to allocated memory and pointer to currently allocated size, and do nothing if requested size < allocated size.\n. hehe, caught you red handed there :)\nRegardless of the speed of realloc, it's less work to alloc directly the most likely needed size.\nThis new commit does the trick, I think the code is ready now. I'll recreate patch files/squash/rebase/etc before a merge.\nOK for you?\n. @elupus, can I have your OK for the two mpeg2 commits?\n. There are tons of fixes we're missing overall, but to respect the hard freeze and schedule I figured we could avoid putting much effort in this. We could backport only the ones we get reports about, release soon, update ffmpeg and benefit of all fixes and new functionnality, release again.\nIf there are more trivial ones, go ahead!\n. Thanks for the clues, this one should be OK then.\n. @elupus, I'd appreciate your feedback, especially about the place to call the cleanup function.\ndavilla mentioned that OpenInputStream may be called several times so it's not appropriate. The cleanup needs to be done only once per file.\nIt basically needs to be done before DVDPlayer::Process gets into OpenDemuxStream at line 916, as that's where attachments are extracted from mkv.\nDVDPlayer::OnStartup could work too.\n. OK, thanks. It's your turf and I have no preference, so it's moved to OpenFile. Should be OK to merge now, then?\n. OK, I moved it. However I won't merge as this is only a partial fix and it can make things worse, due to the way libass works with fontconfig in Windows. Not sure how to pursue, maybe a thread in the team forum.\n. OK, that's pretty much as expected. So IOS and OSX don't fallback in the same way.\nAre the results the same with the current code of master?\n. Good, so there is an improvement and it didn't make anything worse. I think it's ok as is then.\nI don't know if sample 3 was finished uploading when you grabbed.\nFor perfection, the question is how to make an Arial available. See Application.cpp line 886. Looks like OSX already has a system fonts.conf file so it's all set. IOS explicitely uses the XBMC system/players/dvdplayer/etc/fonts/fonts.conf file though. I can't experiment with that unfortunately, that will require you to do some legwork.\nAbsolute paths may be OK for IOS/ATV2, Depends if xbmc will always be installed in the same location.\nRelative paths are relative to the directory containing the fontconfig dll in my experience and may be of no use for you.\nThe best option is a path to XBMC's media/Fonts folder. Worst case, add a path to the system fonts, but that will take a while on first playback.\n. Yes font paths are specified via fonts.conf.\nYes put the right path in fonts.conf to point to the media/Fonts dir in the XBMC install.\nYou'll know it works when the font used changes :) Also the white font of sample2-orig should match the font when using the font override.\nWhen using the font override, you should see the same font in IOS and OSX, right?\n. OK thanks.\nFor IOS you could locate where the XBMC's media/Fonts dir is installed. Then add a  tag in the fonts.conf file with the absolute path to the fonts (similar to what I did for Windows in this PR)\nIt's not a big deal if things work well enough as is.\n. WTF indeed. I'm not surprised by the behavior of the override as it cuts fontconfig out of the equation and libass only knows the one font given as a direct path.\nBut WTF for the different regular and italic text. Do the ATV and ipad do the same thing? This PR was created before the library bumps, did you include them?\n. I'm out of ideas for now, so I'd leave those paths out for now. Are you OK with a merge of the PR as-is?\n. @WiSo, @blinkseb, @Montellese, can you help me with a validation on Windows for sample 2 on team ftp, in samples/12023, with the latest nightly installed (ie not run under Visual Studio)\nIn sample 2 the white text is supposed to be all with the same font, some regular and some italic.\nThere might still be something wrong with the paths added in system/players/dvdplayer/etc/fonts/fonts.conf\nI added the paths necessary on my computer for fontconfig to find xbmc's media/Fonts directory both under Visual Studio and when installed but I got a user report indicating that it's not enough.\n. ^^ I meant @wsoltys above.\n. OK thanks. What you both saw is what's expected to happen.\n. A few commits for your suggestions.\n. So here it is, rebased for clarity.\n. True it wouldn't react to changes in cropping anymore. That would require stashing the values somewhere in the H264Context maybe.\nYour patch works and I have the trivial patch to dxva code to take advantage of the values. How do you want to proceed to push to master?\n. Closing this PR, since your patch was accepted upstream + backported to xbmc, dxva change applied as well.\n. I think it's appropriate. Most of the time only one iteration of the loop is needed on my hardware.\nTo avoid returning frames late I think it's a good idea to retry quickly.\nHowever I'll grant you that this likely hits the OS scheduler precision limit and doesn't actually wait 1ms, but longer.\n. Thanks! Rebased and committed with a tracking patch file.\nYes it should go upstream at some point.\n. After grepping for the message TMSG_OPTICAL_MOUNT, it appears that this codepath is only used in Windows. So I'm merging.\n. Here it is, rebased with davilla's change + boundary checking.\nthe question about two steps was this:\n1. truncate video_ts\\video_ts.ifo, then video_ts.ifo\nor\n2. truncate video_ts.ifo, then video_ts (as done in the PR)\n1. is easier to do because there is no need to mess with the different path separators of the different platforms in the search string and I didn't see practical drawbacks.\nedit: f'ing github's auto-formatting. I wrote that the second option is the easiest, not the first.\n. Good. I went to town on XBMC_events.h after investigating the use in XBMC. It was lifted from SDL long time ago and never adjusted to reflect use in XBMC. It's really fine to change the values as we please.\nFine with you?\nYou want to send me a diff for OSX or you'll diddle after I merge?\n. @tiben20, is it possible for you to make a version with the internal filter changes removed (in ffmpeg and xbmc)\nThere are no binaries in-tree but the player is not functional as-is and needs a basic package of filters. The question I think is whether to download them like the other windows binaries deps at build time and bundle in the installer, or to download them at run-time, as a sort of add-on I suppose.\nI haven't looked closely yet, but something in there is messing with the dirty regions and causes shimmies especially in fullscreen exclusive mode, not sure about windowed modes.\n. You shouldn't need to register anything, at least I didn't. I just switched branch, did a rebuild all, and it started. I didn't bother rebuilding an mingw/ffmpeg stuff. The filter pack has to be manually copied (or you must have some filters preinstalled I suppose) for anything to play but that's something else.\nI'm going to try pretty soon on a brand new Windows install, we'll see what happens.\nedit: VS is twitchy when switching to a branch with changes to the project file of the opened project, I always do a close solution/switch/reopen solution.\n. Good, it builds & starts in x64!. It won't play though, the relevant error seems to be CFGLoader::InsertFilter Failed to create filter \"ffdaudiodec\". This is on a pretty new install of w64, with no codec packs or other dshow players installed.\nCan you please convert the baseclass project to vs2010 and integrate it in the main xbmc solution? The strmbas*.lib should be built by the solution, instead of being carried in the git repo.\nBuilding with vs2010 requires the inclusion of IntSafe.h in winctrl.cpp and winutil.cpp (before other headers or SAFE_DIBSIZE won't be found) and generates a bunch of redefinition warnings - that's ok it's a known problem of the Win SDK. They can be set to be ignored.\n. Insert a cd, play, stop. Manually eject. Maybe that only shows when running under debugger.\nMaybe that's because the cd I tried actually has CD-Text information! Otherwise freeing a bunch of NULL wouldn't do anything.\nFor your second point, our code will be thoroughly broken with next libcdio release as they changed the internals of cdtext_t and the functions surrounding it, so I'm reluctant to invest too much time at this point and don't want to make big changes before Eden is out, to make it easier on us.\n. That's it, by luck I inserted a CD with CD-Text.\nYes the internals changed this month - not reflected in the API yet from what I can see. But we use the cdtext_t object in our objects, which is not a good idea, so we'll break... The Linux guys will likely hit the problem first :) I could lend a hand of course :)\nI'll create us an proper internal object and decouple if I get some time.\n. The strdup are there because otherwise we have pointers to internal members of the libcdio context, which is freed when ejecting the CD so we could end up with invalid pointers.\nWe keep playing when ejecting a CD without pressing Stop (massive buffering + read ahead) so I'm afraid we'd end up in trouble if somewhere we still access the information.\nThe new commit replaces with an xbmc structure to hold the data and is nicer to follow I believe.\n. That's a frustrating problem to solve. I came across that thread, did a similar patch and it didn't help me or others. I don't remember if that was in the forums or in trac, I don't have it anymore.\nThis one doesn't help me either when refresh rate is switched for playback, it actually seems to make things worse. Does it definitely improve the situation on your computer, what's your hardware?\nMy setup is W7 dual screen, xbmc on secondary screen, desktop at 59Hz, with refresh rate change. Logging the composition and refresh rates reported by dwm, both are stuck at 59.9 instead of changing to 24, with or without the patch. Those report don't seem right either...\nIf the patch does help, the window styles need adjustment, also should only activate only in fake fullscreen,\nUnless they're the only styles that work for this workaround.\n. Is there a sample somewhere? I didn't find the relevant thread in the forums and would like to see if dxva is affected as well.\n. OK thanks. No visual corruption with dxva on a G210 and HD4550, with adaptative deinterlacing engaged. But playback is far from smooth with the nVidia. Somehow the ATI deals pretty well.\n. closing, an improved version was committed with PR 612\n. This PR sounds like a good idea as Recently Added, Recent Movies/TV do unexpected things at the moment. Is dateAdded exported in XBMC generated .nfo files? And imported? Sorry really don't have much XBMC time lately and didn't read your code.\nFor the second commit, I personally prefer the first scan date of the file, as Recently Added won't work as expected for old files otherwise. BUT, using the file date for the first scan after scrapping the db file would make some sense. It's better than scan order I suppose.\n. It's good that you can repro. Can the device eventually be successfully reopened? Does it take many tries (ie many calls to AddPackets() after the invalidation?\nI changed the handling of errors in GetBuffer/ReleaseBuffer and instead of pretending it ate the buffer, a 0 is returned. I don't know if that's important.\nMaybe dvdplayeraudio calls functions other than AddPackets() and are not ready to handle invalid device references?\n. These commits should fix the problem. I didn't want to mess much with the structure of the current code, being close to a release and with AE replacing all that anyway.\nI messed up my rebase and ended up force-pushing, sorry about that.\nSimulating device loss/recovery worked fine so I'm hopeful you'll be ok on actual hardware.\n. Similar changes will be needed for AE, so knowing how to fix is still important. And who knows how long it will take for a release including AE :) In the mean time more and more people will get HDMI receivers and hit the problem in Eden.\nI suggest remote debugging to avoid installing the whole VS suite on your HTPC and still have an easy-to-work-with environment.\nWhen does the INVALIDATED error code happen? when switching the TV back on, from what you're saying?\nI'm not surprised that more functions using one of the device pointers must be protected with a m_Initialized test. In addittion to that I hesitated about catching the INVALIDATED error message for all calls and call Close() in response. That would be better. Most m_Validated tests are probably redundant with m_Initialized.\nSeems to me using m_Validated == true in Initialize() would remove the need for m_Recover.\nHow does DirectSound react to the TV switching by the way?\n. Here are some more commits, incorporating most of your ideas.\nWhile reading your patch I wondered a few things:\n- there will be a problem if the wasapi sink fell back on the default device the first time around. It won't recover?\n- what's the point of the Sleep line 188\nI'm unsure about the last commit, you may try with and without. It's necessary to catch all error codes, but I don't know what dvdplayeraudio expects/how it reacts.\n. Well DVDPlayerAudio died of an access violation a nanosecond after disabling the audio device from the control panel. Not a thing about lost devices though. We'll see what comes out of this.\nHey! how do I bring it back now? nvm, found it...\n. Adding an error code for UpdateCacheStatus is a good thing, as Close()ing sets m_uiChunkSize to 0, which caused a division by zero... Though it was reported as a different exception...\npaplayer can still easily be crashed though for me, almost every time.\nThere are still a few different failure modes but the most common is in the WASAPI GetCurrentPadding method. Log statements before and after show that. It could be that something else corrupts the memory earlier and the crash only happens in GetCurrentPadding, but what...\nThe call stacks look weird, adding the critical section in more places result in different stack traces.\nThere is an event mechanism for WASAPI, I don't know if that would let us catch the invalidation early enough.\nSame results with ATI HDMI audio and onboard realtek spdif. foobar with WASAP output is also crashable, though much less.\nedit: just got a failure where GetBuffer returns success, yet the buffer pointer is to unaccessible memory! WTF!\n. With those final commits, I think the problem is handled as best as we can, and even though not perfect, it's better than nothing.\nIt's not clear what to do about the remaining crashes.\n. @DDDamian do you have an opinion/ideas about all this? If not in Eden, something like this will need to be done for AE in the WASAPI.\nMaybe you can even repro the issue?\n. I'll take a look, that definitely worked fine at the time deinterlacing support was added.\n. I don't see the problem with Auto/Auto. With deinterlacing mode \"on\", 24fps and auto-refresh rate switching, the frame rate doubling creates a very visible problem and the refresh rate probably ought to switch back to 60Hz but that's not a fault of the player/renderer I think.\nHow to repro?\n. That's on purpose, to allow an instantaneous switch during playback, with no missed frame. Nothing in the dxva docs mentions how long it takes to open a processor and it's acceptable to pass prog. frames to a deinterlacing processor.\nIt seemed safe to do also because the bob device was even enumerated first by the driver when asking for available processors for progressive material.\nDo you have one of those GPUs? If it has trouble with bob at 24fps single rate, I wonder what happens with 30i and framerate doubling to 60Hz. Could it have to do with driver version, when did the problem start?\n. If the frame drops happen at the start of the video I'm really not going to worry about this. Yes switching from prog to bob is not optimal and probably the reason for the few frames dropped. It would be better to instantiate immediately the bob and I'd take a PR for that.\nImage quality wise, bob with progressive frame flags is the same as the progressive processor in my experience. There is no resolution loss.\nIn interlaced mode though, bob does lose half the vertical resolution, as expected.\nSame thing with the fancier deinterlacers.\n. I'm not comfortable making this change for one GPU type, as it is the exception as far as I know, and it penalizes the others.\nPossibilities are a GUI setting, an advanced setting, runtime detection. I'm leaning towards runtime detection, as a GUI setting is too late due to translations and may not be OK'd by other team members and the advanced setting will not be found by casual users.\n. I was thinking about detecting the Ion PCI VendorID / DeviceID, since it's the only one with a problem that we know of. It likely is the weakest GPU with dxva anyway. In addition an advanced setting would allow to override the behavior for forgotten GPUs and would allow for easier testing for devs without such a GPU.\n. I prefer this approach at a quick glance. Haven't had the time to really inspect though, will do so later.\nFor the device detection, you can take inspiration from the dxva profile compatibility test, and the test for compatible width of certain nvidia chipsets, all already in dxva.cpp\n. So I went ahead and incorporated your changes with device detection, and an attempt to instantiate the correct processor the first time.\nIronically, that last part doesn't work well with the new mode to force prog. processor on prog. material, since the frame flags are not known at the time the renderer is configured and a processor is first created.\nbtw I didn't comment earlier, but didn't agree with \"switch prog->deint. but not back\". This PR means to avoid dropping prog. frames, which would happen again by keeping the deint. processor.\nSee https://github.com/xbmc/xbmc/pull/779\n. I'm all for additional support, however it's delicate so close to release. Because this is new code and may not be safeguarded enough for the weird files out there, it might have a better chance if the codec only accepted wma lossless, so that lossy wma support remains via ffmpeg and can't have regressions.\na11599 is right that when we bump ffmpeg after Eden release, we'll gain wma lossless support and it will be more difficult to justify a native codec.\nFrom a technical POV, wmvcore.dll is not installed by default on all machines - I'm thinking about the European N versions, without media stuff builtin. So static linking won't do and the user should be told to download the media feature pack.\nNot having touched these parts of XBMC, take this with a grain of salt. Is it a good idea for XBMCistream to instantiate a CFile? Is that the correct level of abstraction to transparently get network streams, network shares & all?\nOr should XBMCistream be class that takes a standard XBMC object and dresses it up as an IStream?\n. Isn't the N version mandatory in Europe? And probably most people install the media extensions anyway.\nDon't read me wrong, I'm for this but if the wma lossless in ffmpeg is solid, the linuxers may object to an additional dependency for little gain.\nIt's not exactly the same as linux system libs, as they're still the same library, only with a potentially different version. There may be an equivalent with OSX-provided closed-source libraries for stuff that one of XBMC's dependencies handles.\nI'm very unfamiliar with paplayer, if it can only play local files I understand the XBMCistream. If paplayer can play music files from all kinds of urls (smb, network stream, upnp, ...), does the CFile handle that abstraction or does it take other XBMC classes? In which case XBMCistream may have to be reworked.\n. J'ai appris quelque chose aujourd'hui, je croyais que le Qu\u00e9bec \u00e9tait seul \u00e0 accentuer les majuscules.\n. I don't care either way. It doesn't make much difference, most people have avc1 content and would get the message sooner or later.\nI thought there may be other fixes in the recent drivers that everybody could benefit from. But since their changelog is not comprehensive, I don't really know.\n. @davilla, does the silence mean you'd like me to change the notification to react only to AVC1?\nJust faulting the codec open leaves the user without any clue to fix, and since we know the reason and the fix, I think it's good to notify. \n. With this commit the PR should match what you were thinking of.\n. reformatted jmarshallnz's much better suggestion and pushed directly. Thanks!\n. There you go, with the failure action preserved. The two commits will be merged into one for mainline.\n. right, I'm just unsure about the need for DBT_DEVNODES_CHANGED and don't have a joystick myself to try.\nHopefully the John collective in the ticket will be able to test.\nOtherwise it's a bit of a blind shot, but how could things get worse than a crash :)\n. Thanks WiSo, I'll fix and push.\nI meant to add the toast, then changed my mind and didn't clean up.\nThough eventually a message to log devices plugged in/unplugged would be good.\n. With this bit of logging I think it's good to go.\n. Right I missed it.\n. After a few comments of jmarshall on IRC\n. I'd like it in because it fixes a performance regression with out of the box settings for the Ion. Otherwise I wouldn't care about Eden.\n@elupus, what says thou?\n. Thanks, I'll prettify the commits and merge.\n. took me a while to build this... must use a brand new ffmpeg sub directory, the cleaning included in our scripts is not strong enough and there were a bunch of compilation errors.\nI'm going through my samples, so far so good.\n. Something goes screwy and triggers an access violation in DVDAudioCodecPassthroughFFmpeg::Decode(), line 473 when transcoding for spdif is used. Comes from m_Codec->GetData() on line 438 setting decData to NULL. I haven't had the time to trace things further.\n. The audio issue is fixed.\nNow with software decoding it's fairly easy to trigger an exception when skipping.\nIt happens in CDVDCodecUtils::CopyPicture() because the s pointer is to invalid memory for reading.\nAnother crash when playing a video, then stopping and starting another video quickly with the keyboard without waiting for the UI to follow the keypresses. Very often fails in CDVDPlayer::OpenFile(), looks like an object is destroyed and used there.\nA minor cosmetic issue with vc1 and dxva hw accel to report the codec info (did not happen with Eden) due to a change in behavior.\nWith previous ffmpeg, in CDVDVideoCodecFFmpeg::Open(), m_pHardware was always null so a \"-dxva2\" was not added. That happened later through CDVDVideoCodecFFmpeg::SetHardware, called through GetFormat().\nNow, with vc1/wmv3 for some reason, GetFormat() is called twice, once before and once after CDVDVideoCodecFFmpeg::Open()\nso m_pHardware is valid, and the \"-dxva2\" gets added twice.\nQuick patch here http://pastebin.com/Dv9ak3qZ , dunno if it interferes with other platforms but I don't think so.\nThe skipping crashes are annoying, but I wouldn't say blocking. Other than that I'd say we're in good shape. Well done!\n. codec name and the skipping are fine now. It's ready as far as I am concerned.\nThe fixes wouldn't hurt in Eden, right? We have weird reports of \"crashing\" when skipping that no dev was able to repro, I'm wondering if it could be the same thing. Unfortunately, the crashes only happen to users when debug logging is turned off for some strange reason...\n. I also favor temp.\nBut I'll have to redo this PR as I found there already was minidump creation code in XBMC_PC.cpp and it seems silly to duplicate it.\n. Here it is reworked, dumping on exception in any thread. I need to test a bit more, but that's pretty much it.\nHandling on main thread is a bit inconsistent, to be fixed later.\nThe pdb files are supposed to be automatically archived now. We'll see when nightlies are turned on.\n. OK, works fine most of the time. The dmp file is not always valid though and dumping with more than minimal information sometimes hangs - maybe that has to do with the recommendation to do the dump from another process.\nIt's already better than nothing though, so I think it should go in the May merge window.\n. That'd be a good thing, however how would you know which file(s) to upload?\nThe .dmp files are going to pile up from one XBMC session to the next. Even the same session could generate multiple .dmp\nMaybe I should add a cleanup to avoid accumulating too many dumps, or at the start of xbmc delete all previous .dmp files.\nThat could be added later, I don't consider it blocking for merge.\n. That would work most often.\n. Changing the scaling method while viewing a video gives me a black screen for the HQ scalers.\nThe point of the patch was originally to help with the quality of the upscaling on the Ion (was like bilinear). But it stuttered once in a while, making the exercise pointless. Since other GPUs already have similar quality to the xbmc scalers, the patch didn't make sense to apply.\nIf you verified that the playback is 100% smooth on Ion thanks to the GPU flush, fine. The important frame rates are 24 and 25.\nDid you try what happens with interlaced material? The scaler selection code has a fallback to bilinear that could bite us since there is no bilinear scaler implemented here.\n. More info: on ATI 4550 this works, on nVidia G210 (similar to Ion G2) it doesn't.\n. I'll give dxva decoding and/or rendering a go tonight. Did you benchmark CPU/GPU usage?\n. OK, tried it and software decoding + pixel shaders or software render work\ndxva decoding works.\nsoftware decoding + dxva renderer on 10 bit material doesn't work because a 10/16 bit copy to GPU memory is not implemented in CProcessor::Add() of dxva.cpp. But would it make sense to add, instead of letting ffmpeg convert to 8bit?\n. I'll try it but I'd be surprised if they could.\nIn the meantime, something is screwing with dxva rendering after dxva decoding - nVidia drivers compensate, but ATI's do not. \nAt the beginning of CWinRenderer::SelectRenderMethod, m_Processor.Open() is called. Problem is that as its last parameter, it expects a D3D input data format for the processor, ie the format of the data after decoding (for ex. MAKEFOURCC('Y','V','1','2')). With this PR, it receives RENDER_FMT_DXVA, which means nothing to D3D and fails badly with ATI when querying processor capabilities, creating textures, ...\n. OK now for dxva decoding. I checked the dxva processors, they only accept a few 8 bit formats. Maybe future GPUs or drivers will add more but that's it for now, and they can't work properly with data direct from ffmpeg.\nGave a DVD a spin, all renderers are fine with libmpeg2 decoding on Windows.\n. Fine for me as well.\n. OK for the principle. I think there is a small problem with Win32Exception.cpp, it has a dependency on utils/log.h and it seemed that you wanted to break such dependencies with the ILogger?\nThere's a discussion with jcarroll about that in the IRC Log.\nI'll try a few things to make win32exception use the ILogger instead.\n. I didn't have time to look at the CLog -> ILogger conversion and don't mind this PR going in as is, to fix up later.\nSome exception handling is better than no exception handling :)\n. build error, should be it->second->Size()\n. That leaves 2 packages, not one as the comment says. I think it makes more sense with 2 as you did here, to always keep the last version and the previous one.\n. Shouldn't this be a c/p of lines 345-346 (except with \"int j=1\"), to catch ALL versions, except for the last one?\nedit: nm, they've all been deleted in pass1.\n. Crashed here for me. it3 = m_sample.erase() sometimes invalidates \"it\".\nAs a quick workaround to keep going, I reinitialized \"it\" the same way it's done earlier in the function. Needs a better solution though.\n. The m_maxfwdrefs here doesn't seem right. It doesn't do anything bad, because for some reason it's always 0. It should be 2 on my ATI.\n. I don't agree with that time correction. The function is called to render for \"time\" and doing anything else would likely introduce an A/V sync delay. That's not related to deinterlacing, I'll write some code and submit a separate PR to get elupus' comments, as he originally wrote this. There are a couple other things I'd like to change in Render as well.\nI could have sworn my ATI had 2 fwd refs+2 back refs for the advanced deinterlacers, but it doesn't look that way now. Maybe that was an old driver.\n. Not sure you need this and the code using this. In the DXVA spec, it is said that enumerating the processors will return a guid list sorted by quality. ie the best is first, second-best is second, etc.\n. std::max is preferred.\ndefine is an opportunity for problems and it doesn't save that much typing here.\n. Please revert that last change. Seems to me that PreInit() must be run unconditionnally. The rendering method is overriden when dxva decoding is used.\nIt's pointless on XP though.\nAlso dxva decoding should be disabled when the processor has initialization problems.\n. OK I misunderstood that code and thought you were just moving the conversion code of Processor::Add which looks rather similar...\nIt doesn't work on ATI because locking video textures in vram takes too much time. That's why I got that flickering, though it shouldn't crash... The only way to do this with reasonable performace will be with a shader so that everything happens in gpu memory. So for now I'd rather drop that part of the PR and use the dxva processor whenever there is dxva decoding.\nedit: for software renderer (why would you want that on dxva capable hardware!)  obviously a shader won't help and we'd need something like the optimized copy back to system memory that VLC has.\n. I would prefer the auto method to remain PS. The dxva renderer has an extra copy, which makes a difference on a low power computer.\nThose who want the extra post-processing of the dxva processor will be able to get it for that extra cost.\n. brace style pls, also at line 379\nfor()\n{\n}\n. brace style\nswitch ()\n{\n}\n. brace style\n. brace style\n. That point was taken care of in a separate PR. Just needs rebasing and a slight adaptation now.\n. style please:\nswitch()\n{\n}\n. Just this as comment:\n// Force dxva renderer after dxva decoding: PS and SW renderers have performance issues after dxva decode.\nand no need for the ////////// after the block.\n. comment not necessary.\n. Conflicts with a recent commit in master, please rebase for a clean merge.\n. style please.\nstruct\n{\n}\n. ",
    "bobo1on1": "Sorry, I'd rather not do this.\n. If DISPLAY is not set, something is wrong, the user should fix that instead.\n. DISPLAY is something the system should set, I'm fine with a big fat warning if it's not, but we shouldn't set it ourselves, it's not our job.\n. I'd have to check what sws_rgb2rgb_init does, davilla mentioned it doesn't do anything useful.\n. Looks ok to me.\nIn 64099fcf77d7970996be107aa7fcbc3fefafbbb3 you left a bit in DVDPlayerVideo.cpp\n. Ok by me.\n. 431557446236a48787f16035ab3f29642cb8837f for the virtual warnings\n839fb77bda3b559a45212c71119f61d4750828e7 apparently including system.h is our way of getting GL headers\n6ddbaac062e61076100cb7ca85ba7228b781faea for the xcode project\n. LinuxRendererGL.h still has #include \"RenderCapture.h\"\n. Comitted in 0286ff4cae40defc49faf879e99109ea259d281e\nThanks for figuring this out.\n. I agree, regarding single pass rendering it's ok, but for software rendering and multipass it will indeed do far more than needed.\n. 4ecf309946170a63d04b6b9161ca15bf2ca0cef5\n. Just wanted to add a bit of safety, considering the amount of python bugs we had (and possibly still have).\n. Ref counting sounds like a good idea to me, it would require a TLS variable, jcarrol is working on that.\n. Right, I guess it's ready to go in then.\n. 98918daeb912c5f70d43938f0a1e8416d01355c5\n3280b220edd50ea9be8adaa28ba8dddc9dd4561f\nbfed3be21cb5a1ea26af1385b54f175ba696d858\n. Committed in:\nf6d3e0dc8e5759b8422cbf31102bd1a2065cf248\n2eb9e9bc8d1f4dc4a56ddefd4f9c0332b350f9c6\ne94be600e8231749cea88aa48cb0342642a9bb25\n. Looks ok to me, want me to check if it builds on linux?\n. Actually it's triple buffered (sort of), when glxSwapBuffers blocks on vsync, you have a frame on the frontbuffer, a frame that's being rendered on the backbuffer and queued to be flipped to the frontbuffer, and you have a frame in the opengl pipeline that is queued to be rendered on the backbuffer.\nglxSwapBuffers will return when the frame on the backbuffer has been flipped to the frontbuffer, so that the frame in the pipeline can be rendered on the backbuffer.\nWhen the pipeline is full, the last render command will busy wait on the buffer flip, but we never render enough to hit that.\nThe problem with the frame timing is that if you didn't render anything for a while, the backbuffer is free, so when you execute any rendering commands and call glxSwapBuffers, it will return almost immediately.\n. Regarding the texture upload, GL_ARB_pixel_buffer_object will surely help with this, we use this for video playback as well, the upload itself is twice as fast (measured by doing a glFinish(), take a timestamp, upload, do glFinish() again and measure the elapsed time), and the upload is async, so the render thread won't block on it.\nBut that's a bit off-topic.\n. The scalers are separable filters, but currently scaling is done in one pass, because doing it in two passes requires support for float framebuffer objects, and not everything supports that.\n. You have to take into account that the output of the first pass can be negative.\n. That might be the reason why framedropping on my intel HD3000 was broken, the framedrop counter would increase, the a/v sync value in the codec info would be ok, but no frames were actually dropped, the video would just lag behind audio.\n. It doesn't actually wait if the presenttime has already passed.\n. It shouldn't wait at all, the first and second fields have the same presenttime.\n. Imho the problem is that we call CApplication::Stop() 18 functions deep from main(), going through CApplication, CGUIWindowManager,  CGUIDialog, back into CGUIWindowManager, back into CApplication, into CApplicationMessenger, and finally into CApplication::Stop, deallocate lots of stuff there, and travel back up.\nWhat we probably should do, is just set m_bStop in CXBApplicationEx to true, then call CApplication::Stop() from CXBApplicationEx::Run() below the while() loop.\n. Why would we have to check that? We end up in CXBApplicationEx::Run() after every iteration of the render loop.\n. Cpu usage is definitely lower when the limiter is not used, but turning it on and off showed no difference in the cpu usage percentage, so I assume it's below 1%.\n. This won't be enabled when audio is being transcoded, transcoding should be refactored so that dvdplayeraudio sees only pcm, which is out of the scope for this pull request.\n. Also the volume amplifcation was broken for wasapi, oops.\n. The volume amplification is already a per video setting, and you can also set a global default.\nThe setting was already in there when I got here, I just had to uncomment a few lines to enable it.\n. So we need a per video setting, and a global night mode setting.\nWhat we can do is, whenever night mode is enabled, add n dB gain to whatever the volume amplification for the current video is.\nI'm not handling that in this pull request though, should do that in a new one.\n. Added in 54e4ca5c481e20cdc2f96d866f3346bfd1482ce9\n. Krautmaster, could you please install gdb, then the xbmc crashlog will have a backtrace in it, which is very useful in finding the cause of the crash.\n. Please don't cut logs, you removed the backtrace which is the most important bit in finding the cause of a crash.\n. Why all the #ifdef? Afaik all of those libpng functions have been available in libpng for years. \n. If that's the case then we either do it now, or we end up doing it in 6 months time.\n. Sure.\n. Sure.\n. 29f93361a12e5de882f4fb88754914b1d6e3862c\n. Also:\n4906ff609c7b2da24bd70d88b8cff5104f7f13cf\n10ecf8d6020e44321fb96cd0f9ca0c6f1651b5c4\nfa91ae6c4f9acdc76fe9447bb9763666ea3b99a5\n95e613d1c5ae5dd0d30ae3ecb88767cbc3db2ff5\n. 06688eb1982c9a672a1cdffc0f0873f0ec4b5bfb\nd6d1dd650bbe94fc2b106af239e7d476879feaff\n. Well sure that's a good idea, but for Eden these patches will do for now, until nvidia gets their software fixed.\n. According to FernetMenta, calling nvidia-settings from the commandline will sometimes freeze when xbmc is running.\n. Rename av delay to something else, you either delay audio or you delay video, make the setting name reflect that.\n. f4723c255d742a115f07840d6e8bb77eda887e84\n. I thought we already did this?\n. Considering that if alsa fails, sounds won't work at all, I suggest trying for at least 30 seconds or so before giving up.\n. The volume bar showing is already fixed in master.\nNvidia should just fix their libGL, they basically broke popen in general, not just for nvidia-settings.\n. The things we have to consider are:\n- When playing over a wired network there's no need to buffer, so it will just waste cpu and memory.\n- When buffering too quickly, the network will slow down and will even severely increase cpu usage if one has a gigabit network.\n- When buffering too slowly, the cache won't fill quickly enough to compensate for high bitrate scenes.\nWhat I'm trying to solve is the situation where one has a network connection that on average is fast enough for playing a certain file, but is not fast enough for high bitrate scenes, in which case you want to read and buffer as much as possible.\nI'm not too concerned with ram usage, modern systems have plenty of it and we can detect the amount of free ram, cpu usage on my system increases from 32% to 40% when the cache is enabled, but I think some things there can be optimized a little.\nSo that leaves choosing a good read speed, the algorithm I used here based on peak bitrate still chooses quite a high read speed, and will quickly max out the wifi or internet connection.\n. twice the average bitrate also seems to work nicely.\n. I've discovered that smb sometimes breaks when this is enabled, and it requires a restart of XBMC to fix it, so no go for now.\n. Does this mean that the videoframes are not read back into system ram anymore?\n. It's probably not your most favorite feature, but the texture is not able to pass through m_pVideoFilterShader, so the fancy scalers and non linear stretching won't work.\n. The patch looks ok to me.\n. https://github.com/xbmc/xbmc/pull/1015\n. Fixed https://github.com/xbmc/xbmc/commit/ccb09baddf100f055360fe4a8918559f78314c25\n. Regarding mysql wakeup, no need for a gui dialog here for several reasons:\n1. 99.9% of our users won't know what it's for, users already have trouble figuring out our settings, we don't want too many of them.\n2. You can't c/p into xbmc, it's easier to ssh in, start a text editor and c/p the mac address from ifconfig than it is typing in the mac address in the xbmc gui.\n. I can't help but wonder why we need this at all, now that we have the audio engine.\n. Ouch, why is Sleep(0) used there, using that means you're basically handing off the thread synchronization to the scheduler, which may or may not do a good job.\n. For VDPAU interop I would write a shader that directly weaves the fields, most of the slower gpu's can't handle going through an fbo first at 1080p.\n. Ah right, in that case it would be faster to render to an fbo first.\n. Does it work with passthrough?\n. What about glFinish() only when there are textures to delete.\n. In that case glFInish() is a bad idea.\n. Check a743caa061f3f2979343eb69600deba6e1417a4f\nThe \"boost volume on downmix\" setting was reversed, and it defaults to off.\n. What exactly is working better here?\n. I'm quite sure reducing latency here will not do anything for responsiveness, the pulseaudio buffer is flushed when needed, for example when seeking, and the players are able to fill the audio buffers in miliseconds.\n. If it gets mapped to rand(), how does it improve anything?\n. No, %x always assumes the argument is int.\n. 40 mbit bluray times two is only 80 mbit, if your systems can't handle that then I don't think you can play bluray at all, if 80 mbit maxes out the network then that's what you want to do, because if you have a slow network, you want the buffer to fill up as quickly as possible.\nAlso, at those high speeds, the cache will be filled entirely in a few seconds, so I don't think it's much of an issue.\n. Please put in the commit message what it fixes, this is very important.\n. Does this work ok when sync playback to display is turned on?\n. These problems are usually fixed by calling shutdown() on the socket first before closing it, I'd rather try that first than using this potentially dangerous flag.\n. ",
    "topfs2": "I agree with Bob also, setting it randomly is a hack at best\n. I did, your more than welcome to add to it :)\n. I don't see the reason for this? You can just call stopClient() followed by startClient if you need to reconnect. It makes more sense also to enforce stop before start IMO\n. I think you do the pull and then you commit to your local and push, it will be merged in then. atleast it did that for me when I didn't mean it to do that :)\n. I tried it out and it does indeed work, well as much as I can try I only have a phone so very limited hardware.\nI don't like the window though, it feels a bit malplaced and it, as jmarshall points out, adds a lot for the skinners. I would have liked to see bluetooth stuff in settings -> System probably. I'd even like to see stuff spread out so that bluetooth audio (which I didn't got to work but might be that I'm missng something, I just tried pressing it?) for example is in audio and input stuff is in input, if we can I'd like to see bluetooth behaving much like anything else and more integrated.\nNote for next time is that its much nicer if you do a branch and do the pull request on that branch, that way you can continue to work and it feels more sandboxed than if you do it on master. This is nitpick obviously and don't care for it now :) Just wanted to say it :)\n. One way is to have much of the settings like turn on / off bluetooth radio, discovery etc could be in settings -> system. The actual device pairing could be a dialog, would obviously add on skinners still so this is merely a suggestion. So in settings -> system you have a button which triggers that dialog, named scan for devices or something.\nThis is how the network patch does it, I'm not sure if there is another way. I made it so that the list was directly in the settings but if you have a lot of devices its not overly nice to have it in settings IMO, it should be static almost.\n. Something which has an API closer to https://github.com/topfs2/libvfs this I guess. Could perhaps do a wrapper IO hook for our vfs for that lib and use it as a stepping stone of using that lib in core?\n. IMO it should state in the init struct what it will return and then the player / AE will just have to eat that, or fail and try to use another codec :) If an addon have the ability to support multiple types of data output we could give it hints but they must be allowed to be completely ignored. As jmarshall say I do think that the CAddonCodec is meant to make the coding of the actual addon as simple as possible while CAddonCodec is also meant to transform it to be as simple as possible for users of that abstraction, so a niceness layer for both parties. I agree with not hardcoding it to a single format obviously :) I think this is why its void * tbh.\n. @cptspiff - While this is rather offtopic but should we really have our vfs as a global instance, the libvfs I designed is that way now but I planned on making it with contexts so even if global space is shared there can exist multiple vfs in the app.\nReasons why I think it should be kept as context is that say our vfs is global and an addon decides to add some hooks, this would affect the entire program which is not what we want, while we can check for that stuff in open source addons we really should still be sandboxed if possible IMO for the abomination that is closed addons :) So I'd rather see us giving posix hooks to the addon, as such the hooks given are not our libvfs hooks but just the hooks needed for the addon. And if it is a codec we probably should assume it having a demux, no point in using paplayers weird thingy as a model :) I understand that it may be somewhat out of scope of what your doing atm though.\nI guess the problematic libraries are timidity etc which does not accept io hooks? btw thats why I suggested that codec pulls data from us since it probably knows more accuratly when it needs data than we do, i.e. a codec which needs the entire file just go ahead and pull the entire file, it starts to push back audio frames when its good and ready.\n. So to show the proposal with decode thread and callback based, this is a sample patchset I did (not compiled it more than the first 2 patches so its just to show my point).\nEssentially it consists of creating a monitor for the data queue and then we create one thread for the decoding, in this thread the addon can call to xbmc for more buffer data (read from vfs) or push data to be consumed by the player. The player thread goes in via ReadPCM and gets the data from this monitor, i.e. the monitor acts as a middleware for the processed data.\nhttp://pastebin.com/s6gpd6Qu\nhttp://pastebin.com/3KvGqTXu\nhttp://pastebin.com/gWCSA13q\nhttp://pastebin.com/DBP77YEL\n. Forgot that when it drops the buffer page it should delete the data (l46 oatch 4)\n. I did do a try at this last year, here are those patches:\nhttp://pastebin.com/qBP9fntt\nhttp://pastebin.com/eUpjLtSL\nThere are a few other in the patch set but they are irrelevant to the discussion\n. Awesome, much needed method. A few suggestions or stuff worth discussing however:\n1. Use full names instead of shorts to make it more self-documenting. i.e. width=, height=, quality=, format= instead of w, h, q, f.\n2. Use a special path instead of doing it on vfs, i.e. http://localhost:8080/converter/image/special://masterprofile/Thumbnails/Video/7/7277cc81.tbn?format=jpg&width=192&height=240&q=80\nThis also means that one can create a specific method for it which adds quite a bit of readability to the code, i.e. if converter url, go to converter which checks if next is image, if so goes to converterImage. This way we can easily add other stuff like audio and video. Not entirely sure we need to differentiate image vs the others but having it atleast in converter/ would be nice.\nNext, just a note for next time. (pay absolutely no attention to it now, its plain a fyi :) ) its better if you create a branch in your repo and put a pull request instead of doing it from master. i.e. pull req on bradmann:something instead of badmann:master. this allows you to easily continue working without affecting this pull req.\n. I think this would be great to pull in. I do agree with renaming JSON-RPC to something else in this regard though, kindof depend on clients calling it the same thing though.\nFailed to start\nRemote communication server\nDoes that sound better?\n. Some thoughts, it seems to me that the diff is interleaved with lots of non-related fixes? I'd prefer if it was just changes concerning the pull req. Not sure if this is due to merge with master or something but it would be nice if not there as its easier to actually review the entire diff.\nAs for the rest of the code. CNetwork::toJson seems to fit better to be moved into the smart weather part, as its more specific to google gears than to network.\nThe const alterations and such in network seems to be better fitted for a seperate pull req (and considering we are gonna redo the entire network implementation perhaps not needed), IMO also goes for the accesspoint addition etc.\nAnother simpler implementation instead of using accesspoints (which might be more than enough location wise) is GeoIP. This wouldn't require at all as much code addition also (not to the network layer atleast) :).\n. Ping. Squashed it, any last things before I merge it in? :)\n. Well as said, the first and second commits can be dropped (git rebase is your friend here)\nAs for the third patch I'd like to see the dB -> quality transform as a seperate method in Utils (or static in CNetwork), same goes for the freq to channel transform. As for freq to channel, do we really need to have channel understanding in our abstraction? Seems a bit overkill to me.\nThe code for win32 is not my area but having support for this can be good.\nMy main thinking here is that do we really need AccessPoint support on normal posix? We can't connect to them no matter as that requires root.\nI would almost rather like to see the abstraction go in first and after that we push the win32 alterations. I can take some time and update the patches for the abstraction and push it to my repo, it would be very nice if you could do the win32 part for me there. The patches I made are afterall almost ready to go in no matter, I was mostly missing router but I have that now so I can update it the comming days\n. Interesting to reuse the TCP server for this, but I agree with cptspiff it shouldn't be a hard dependency\n. It does work very well with addons I must say, I like the design. For me it doesn't really matter if its horizontal or vertical as long as its nice to navigate, so I find it hard to vote in either direction :) If you find this is where you want to take the skin I say its good to put in mainline, its your choice really\nSorry if I sound vague :)\nOne thing I would like to say is that I think the \"xbmc\" icon in the first picture look a bit out of place.\n. Can remove HardwareConfigure also, was never used. We might want to discuss what to do with the eventclients and such also?\n. Well it would probably be good if you waited for some comments before merging this into mainline, otherwise what is the point of the pull req? :)\nI have a few comments:\nIMO the naming is not good, the convention decided is Quit and not Exit. Next the naming should IMO not be ShowQuitButton, thats far to explicit as it could be used for a number of other things, I would like it to follow the naming of the other power related capabilities, i.e. CanQuit.\nWhile it could be an advancedsettings toggle, does it really make sense as such? IMO it should probably be an argument to the binary or something we detect in code (i.e. powersyscall). If it an argument we can disable exit when we are a session (and use log off instead).\nSo xbmc --disable-quit would be better.\n. I agree that xbmc should handle the implicit \"default\" or \"last\" behavior, but most API's provide explicit which I think still have merit. Mostly since you might in fact want to provide the options for the user to select to actually explicitly shutdown (when he go away for vacation as an example) where he normally suspends. While I agree that all skins should have the same power save features (i.e. show all explicit possible by the hardware) I'm not sure if there is an easier way to provide this?\nBtw the idea of the method XBMC.Shutdown (legacy from xbox) was repurposed to be the implicit \"default\", I do agree we probably could have a much nicer naming though :) Perhaps an info like XBMC.DefaultShutdown and XBMC.LastShutdown which a skinner easily could use to invoke the action? i.e. have the info be the exact method if they want to do &INFO[XBMC.DefaultShutdown]\n. @Malard no your missunderstanding me, I did not mean add a can quit in GUI (because that would be pointless) but an info variable (as you have done) which is named CanQuit to follow the standard the rest of the power related uses (CanSuspend, CanHibernate, CanPowerdown etc.)\nAnd IMO its not a setting, it is an environment thing. For example when you log in as session (from gdm) you shouldn't be able to quit but when you start xbmc from gnome you should be able to quit. Furthermore if you transfer your settings from xbmc-live to gnome you would not be able to quit which is not proper IMO. Personally I don't care if its an environment variable or a binary argument but the latter works better afaik on windows (and probably on all platforms)\nAnd sure an appliance.xml would be better than advancedsettings.xml but would still have the same problems as advancedsettings.xml (i.e. transfer of .xbmc to other platforms and such) so its in IMO no fix.\n--disable-quit is not something the user calls but rather when you start xbmc-session (what gdm calls) it pegs on xbmc --disable-quit. and in OpenELEC and XBMC-Live their scripts call xbmc --disable-quit instead of just xbmc.\nAnd in regards to let different users have different kind of access I feel is a bit out of scope of this (as with default and last used etc.) as we just put that in profile and have CanQuit/CanSuspend and the actual methods differently. Core already have it localized enough (powermanager) so it shouldn't be a big change to support that kind of behaviour. Again this is another argument to why advancedsetting.xml is wrong as perhaps we want to revoke quit for one profile but not all, i.e. its not an advancedsetting\n. It is a complicated problem, which is why it has been discussed many times :)\nAppliance.xml doesn't fix the problem where on normal ubuntu ppa install you have 3 different ways to start xbmc.\n1) From normal desktop, within a desktop environment like gnome\n2) From GDM where xbmc is the environment\n3) From upstart job where xbmc is everything (done in xbmc-live)\nAll of these three have different needs, 1 should have quit but arguably not logoff. 2) shouldn't have quit but rather logoff (essentially quit but different naming) and 3) shouldn't have any of them.\nAs you can see, an appliance.xml cannot work in this as it differs from the exact same ppa and both 1) and 2) must be expected to be used by the same user (I know I am using both of these).\n. BTW in regards to if this should be reverted or not, I really don't think it needs to be but it cannot be like this in alpha version of eden. Unless its going to be fixed properly soon I'd say revert, if its going to be fixed properly soon it can be skipped to revert. That being said, a revert is kindof cheap to do so we could just as well do it :)\n. Awesome, thanks. Montellese have pushed the zips needed also. I will merge it in in a day or two hopefully (given that noone comes up with a reason not to in that time)\n. Personally I'd almost want us to yank out all the millions of mapped actions i.e. p => pause and x => stop and instead base around shift + p pauses. Or have space pause but only in video window and such. That way pressing a normal key in a list could easily work like described here as its not mapped to anything else.\nThe even better, but far more intrusive fix is to move to a more context based mapping instead. Then we could derive the proper action based on the focused control. i.e. if a list is focused you have all ascii move through the list but if a video control is focused x could stop.\nPersonally I dislike all million mappings (which no other app uses) but thats kindof besides the point of this pull req :)\n. btw if I wasn't clear I agree with althekillers point that its better to be uniform than not, just \"randomly\" guess the action off a key if its unmapped is not really solving anything. The underlying idea is a really good one (i.e. nav lists with ascii keys) but not sure this is the way towards that goal\n. Sadly I'm fairly certain that most remotes uses standard keys without modification :) So I have a fealing that what would be ideal is not gonna fly :(\n. personally I think you should clean up the keymap before pushing (if pushing). I'm still unsure if we should use this type of fallback mode, atleast without knowing ALL keys are available, otherwise we get the inconsistency althekiller points out.\n. @jhsrennie lol :) perhaps we should open a thread or something internally to discuss the new keymap (or ticket) so we can make it sane and thought through?\n. I disagree with this solution greatly, --standalone is meant for exactly this purpuse and exactly why I added it in the first place.\n--standalone implies that xbmc is the sole interaction with the computer and that it should be fullscreen, the canquit is a completely different thing and is also best served as a binary setting. As I explained previously xbmc being able to quit depends on from what environment its started NOT from what an xml states.\nExample, ppa in ubuntu we have 3 ways to start xbmc:\nXBMC-Live, which should imply --standalone --disable-quit --disable-logout\nFrom GDM: --standalone --disable-quit\n. And as theuni say here if we have a platform which can't do binary arguments (is there any platform really which can't?) a system wide xml might be valid. I really disagree with it no matter as it feels hackish at best. I'd rather just see an ifdef of sorts being done in core to tweak the defaults. And by that I mean if iOS etc just disable the possibility to go windowed and tweak so CanQuit is disabled by default (why I suggested it being put in the powersyscall in the first place..)\n. To be even more clear, OpenELEC should just when they start the xbmc process do --standalone --disable-quit --disable-logout\n(the disable-logout is assuming we would ever control logout of a session)\nThis means that if for some weird reason a user would install GDM and Gnome on OpenELEC they could still launch xbmc as a normal application, its just the default openelec init which starts xbmc in a shell type of way (where quit does not make sense)\n. @davilla --disable-foo-settings aren't really valid IMO. thats a compile thing, a system capability thing. Any implementation should be able to detect if its capable of configuration at startup so I don't see any need for binary arguments for that. Same goes for shutdown, suspend and all that. There is a very small amount of capabilities which would need an environment flag really. And as said I am all in favour of adding so this stuff can be a compile thing for some platforms (iOS for example), its mostly linux where environment can change while on same system where these flags are needed.\nWhat is important is to seperate what is environment and what is system capabilities. --standalone is an environment flag. as.xml handles system wide settings. System wide means no matter the environment we honour those settings.\nEnvironment depends on how xbmc is started, i.e. if its started from GDM, as an application inside gnome or as a startup job in OpenELEC or XBMC-Live. system wide settings != environment settings in some places. Quit, logout and force fullscreen are environment flags and not system wide flags really. Stuff like what codecs we support are systemwide and not environment. It is imperetive we seperate these.\nWhile profiles to as.xml might do the job I still think thats kindof a hack (mostly as the seperation is not apperent). I'd love to see the separation of environment inside xbmc core's code also, that way we could do --environment=some.xml if we want to save on flags, and in code we do g_environment.CanQuit instead.\n. Sorry I used the wrong naming, I obviously mean that as.xml is profile settings and not system settings. system settings is determined by compile flags :)\nso system wide settings => profile wide settings.\nSo to be more clear, I'm not really against having an xml which packagers can have to start xbmc in a specific state (in fact remove --standalone in favour of --environment=standalone.xml and seperate into CEnvironmentSettings is all good IMO), what I am against is xbmc always reading out an xml and determining environment settings based on what xbmc profile is in use, this does not make any sense. Same profile can be used in multiple environments and multiple profiles can use same environment, there is no coherence between them\n. re global, nah not really but atm we don't have any other good way to handle it (except singleton) until the backbone stuff gets added. Probably easier to exchange the globals for a proper system in one swoop I think\nplugin would not work I would think (unless I missunderstand your suggestion) as it depends on where you start xbmc not what plugins are available. Same Linux system can have multiple environment (this is the biggest point I think most are missing).\n. btw, by where you start xbmc I mean in what context. i.e. from gdm or from gnome\n. Not --standalone=foo.xml. If your moving towards xml based it needs to be far more generic. The easiest way forward isy to do what elupus is suggesting and allow to do --settings=foo.xml and have that be additive, so you only set those inside the xml and you can do --settings=foo.xml --settings=bar.xml\nPersonally I still prefer to have a real split with environment but having that setting flag is still extremely useful and a far smaller change so it should be added no matter if we do or don't want to move some settings to environment.\nIf you want to have a backward compatible thing which triggers --standalone to become --setting=standalone.xml thats very good\n. I'm against this, change of profile means change of profile, you wouldn't want firefox opened tabbs to remain if you logout and login as a new user in linux/windows, I see no reason to do so here either.\n. It does sound like a hack/workaround for a bug to me. If we want to allow multiple settings for same \"user\" (if there are reasons besides this) the way to do that is either have the abstraction many profiles, each profile with many setting groups or the ability to \"link\" profiles. I somehow can't find a reason to justify that complexity though :)\n. I wasn't aware that the intent was not only users, I have always considered it more user oriented as you don't have that on the xbox. I really don't use it so I excuse myself :)\nAnyways, I do find the naming \"quick\" to be very vauge, is it really quicker. If anything it should be KeepWindow or something more descriptive. And finally, if it is a feature which is worthy of having shouldn't it be in gui, only the most extreme power users alter the xml IMO.\nWouldn't it be nicer to have a \"link X with profile Y\" instead? Much more intrusive patch obviously :)\n. My point is, is this a feature which changes from day to day or don't you always want to share the window between 2 profiles?\n. Well the thing you are receiving is a callback in most senses of the word, it is an event from the server.\nWe opted for OnFoo because it is incredibly hard to create sane names (where it feels like its past tense) otherwise. Also it gives a clear differentiation between this and normal method calling (which at some point might be done by xbmc to clients)\n. Btw I will give an example of where it gets hard. Shutdown, Quit and Restart/Reboot. All of these doesn't really work without saying OnFoo, its hard to differentiate it between a method call on client or a callback/event. OnFoo makes that definition very very clear.\nThe logic now is methodcall (with ID) is when client or server wants to execute something (or atleast get results) on eachother. notifications (without ID) are methodcalls where you don't care for the result and notifications with OnFoo are events. If we ever need callbacks where we actually care for the result we could do that by adding id, although I can't find any interesting case where there is a difference between callback with result or a proper method call. Only I can find is OnShutdown where you could be interested in knowing by the client if xbmc should allow shutdown (i.e. client can return false). Not sure if we want that at any rate, probably saner to have clients to send an inhibit.\n. While I like the idea of having all flags as private and acquire them via getters it does make it a lot harder to review :) Anyways, I like that change.\nThis is much much cleaner than the appliance stuff, the only thing I can see overall I'd liked changed is that it shouldn't look in system by default, IMO it should work like other commandline app and if you don't specify an absolute path it should be considered relative.\ne.g. if I start xbmc from ~ me doing --settings=foo.xml should look in ~/foo.xml --settings=/home/topfs/foo.xml the same, obviously we can allow it to read settings from our vfs also, i.e. its ok to do --settings=special://system/foo.xml\nThat is the only overall complain I have, haven't really checked closely on the code. Like the change to move parsing out of xbmc.cpp.\n. I obviously meant \"I like the change to move parsing out of xbmc.cpp\"\n. I agree with that the path given to --settings should allow for anything, this is a change we could do later though. I vote on:\na) If just foo.xml, assume relative to current dir\nb) allow absolute paths, i.e. what elupus said with \"C:....xml\"\nc) allow for our vfs paths, i.e. --settings=special://xbmc/system/foo.xml\n. Looks good to me\n. I'd prefer if AddBuiltinMethod did the actually lookup to resolve MethodCall so Normal AddMethod could safely fail if method == NULL. But it doesn't matter all that much since I bet we need to further refine it when allowing addons to expose methods no matter.\nLooks good otherwise from my quick look (haven't gone through the commits line by line to check for coding misses, just checked the overall design and such :) ).\n. a) Not sure if we gain all that much by having one class per category, but I guess it does clean it up somewhat, prefixing the accessors could do that also though.\nb) Moving from public variables for settings to public pointers to settings seems kindof counterproductive to me, its even worse from a safety perspective.\nc) If we are to have accessors they should be const and use const referencing. i.e. const bool & GetMyBool() const; No reason to do unnecessary stack copying.\n. Almost all languages have const public data without accessors afaik, with const reference return of a class with all public members would be the same as in C# with a class like:\npublic class AudioSettings\n{\n  public string SomeFancyStringSetting { get; private set; }\n}\nYou can still easily load the settings privately and all settings are plain readable from outside. Thats the difference between doing\npublic class AudioSettings\n{\n  private string SomeFancyStringSetting;\n  public string SomeFancyStringSetting() { return SomeFancyStringSetting; }\n}\nSo just extra code which can go wrong, extra code to maintain and with no extra security :)\n. Yeah we don't have, my point (which seems to not have been clear :) ) was that doing const AudioSettings & GetAudioSettings(); and AudioSettings with public members would work as that get; private set; example essentially. And I think having it like that would be preferable due to the smaller amount of code and such. Was mostly trying to show an equivalent case with C# but please disregard it if my point wasn't clear :)\n. @Malard I don't think we will squash those together, they are there mostly to show which controls still need love. If merged into mainline it will be one giant change most likely, so then it doesn't really matter if squashed or not.\nelupus, Some controls always mark, i.e. they behave as before. As for regressions most should be gone I think. Anyone who could test and confirm this would be a major help.\n. As for nbr 2 on jmarshallnz list. Since we always flip, this should not be a regression. And bobo1on1 have already made a patch for this.\n. @elupus, The default path is to do process and mark but always render (and don't scissor anything). So while it does a little bit of extra processing (should be negligible) it will behave as we have right now. To get it to do the actual dirty region scissoring (and possible multiple render passes) one must specify so in as.xml\n. Very much needed feature to handle all the usb keyboard remotes out there. Wonder if it might be more appropriate to have  for example instead of devicemap xml? Benefit with having it in the keymaps is that we never need to update anything but the keymap. Downside it won't be as readable as you have it now.\nJust something I thought would be worth discussing\n. damn, github who hides xml :) Wonder if it might be more appropriate to have \"keyboard hid=XXX\" for example instead of devicemap xml?\n. What is the difference between optimized and not?\nYou say spline36 is very slow and thus only allowed in advanced settings, how slow is it? what is the minimum requirement of it approximately?\n. It looks good to me, I'm guessing iOS should sign-off as its not using SDL. All other ports ought to be ok.\n. I've been meaning to talk about this, do we want to differ between resume point or just have it as a \"special\" bookmark? i.e have field which gives all bookmarks where resume being one of them? So perhaps have title, time and type in bookmark object. Obviously we could move it later if wanted when bookmarks work so no blocker, just thought it might be worth discussing. Needed feature for sure though.\nRegarding the patches, what is the difference between total and time in the object? Do we need both or is this a legacy of it being a bookmark?\n. Looks good to me too, not sure if I agree that it makes sense to allow any delimiter but doesn't hurt to do so :)\n. so which is true then? 2.0 > 2.0.0 or 2.0 < 2.0.0. If they aren't the same we need to atleast have a strict linear causality. IMO I'm with montellese, I don't see why 2.0 shouldn't be same as 2.0.0\n. Another usecase, say I have an addon and starts with 1.0, say I go up to 1.5 and then do a small small bugfix and do 1.5.1, without this it would't work afaict.\nIMO either we are less strict and then clearly 2.0 = 2.0.0 and 2.0 < 2.0.1 or we are very very strict and only only allow\nx.y (or x.y.z) and nothing else.\n. Personally I still think 2.0 = 2.0.0 seems more intuitive but as long as its strictly linear I'm ok. And I can see the logic behind 2.0 < 2.0.0 especially since I bet most will only ever do 2.0 -> 2.0.1. So I like the change put forward but I don't care that much :) I guess in some ways its good to follow the standards already existing.\n. malard but is 1.5 < 1.5.0 (which I'm still somewhat unsure I agree on :) )\n. No I'm asking does that work like that in your implementation :)\n. Cool. then I have no real thoughts regarding this. I do think x.0 == x.0.0 but if the rest of the world does it differently I must admit that us following \"standards\" is preferable. I'll give the benefit of the doubt to the rest of the world (hence I lay down my vote kindof :) ).\n. I agree with the intent, very confusing IMO to return to 100% on unmute so I'm +1 this change.\nAs said previously with percentage, dB seems nicer IMO and give a more professional look if nothing else. The progress bar used in skins show the percentage just fine. If anything we could have two info variables perhaps? volume and volumePercentage (unless we already have that?)\nOne note on the first patch, might make sense to move the mute/unmute into the audiorenderer / audioengine later, it could handle it and it would be better placed. Something for when audioengine is merged so not a blocker in this PR, just something as \"the next step\" IMO.\nWithout the percentage change it has my +1\n. You can just rebase away the last patch instead of starting new, if that was what you where planning :)\nAs for the dB info value, we could probably have it in settings somewhere, to allow for pure percentage. even if it seems a bit unnecessary setting. And the idea is that the progressbar should convey the percentage ideally, even if you see 0.0 dB you should be able to deduce it is at max %\n. I don't fully understand why its needed? Also something I noted, if DeviceAdded happens before ParseDeviceMappings on DeviceRemoved it will have invalid default, or it won't be the default from before DeviceAdded, not sure if this is intended or not but looks a bit weird.\n. what I don't understand is why we don't always just listen to all, and let the keymap show which (key or appcmd) to respond to. Why do we need to toggle it?\nIf a user wants to set mute on pageup (or whatever key volume up sends) and volume up on the appropriate appcmd its their fault IMO :) Perhaps I missunderstand it all but seems like we don't really need the filtering, especially not if we have per usb device keymaps as you done ?\n. And by the per usb device addition I mean that you could simply noop the offending stuff from the default map\n. I'm somewhat thinking that isn't this better up to the skinner, they kindof should choose who they are targeting? So is it possible for a skinner to have it as percentage then that seems enough? In confluence we show both progressbar and dB value so I think we ought to be friendly enough to both the enthusiasts and the non-techy? Obviously I'm biased, as I like the dB value :)\n. I agree with jmarshall, seems like it does what the idle method should catch (while it may take a slight bit longer time before it happens).\nRegarding your problem with mouse, perhaps it would be better to have idle detection be a slightly bit less sensitive. i.e. add so that you need to move your mouse a larger amount / or invoke an action to actually be considered active?\n. do a second commit and git rebase HEAD~2 -i and select fixup instead of pick on the second, it will then be merged into the first commit. when you push you need to do push -f as its rewriting history.\nIIRC you can also do git commit --amend or something instead of the rebase, you will still need to do git push -f though\n. Hehe, looks like you merged something into master you did not intend for this pull req. Please submit pull reqs on other than your master branch, to avoid this type of stuff :)\n. Hehe, we are all new to git and its to be expected so absolutely no reason to be sorry :)\nThanks for looking at the webinterface\n. +1 slow and steady wins the race ;)\n. looks very good to me\n. I think I say the same as in the last PR, it does essentially the same as idle power down does. With the exception that you can have that disabled and press this to get that behavior temporarily.\nThat being said, I think it could be a valid interaction but I don't think it fits in core (c++) of xbmc.\nAs far as I can tell you should be able to create this with a  python service addon and let the skins which wants it depend on that addon?\n. I would suggest making the constructor take the actual info, i.e. CPCMCodec(samplerate, channels, bitspersample) and have the parsing in codecfactory.\n. I generally just like when static stuff (which I consider a codec being) are ready and initialized right after the constructor, but PAPCodecs are more of a stream read + demux + codec mix so it doesn't apply really :)\nI took a look again at the code and it looks like PAP does Constructor, then INIT, so the actual resolve can't/shouldn't be in the constructor as you say, I'm not 100% confident in that particular code so it would be nice one of the devs who knows that code well (not sure who is maintainer of paplayer tbh) takes a look at it, otherwise I think its fine and probably ready for merge.\n. I would guess its in filesystem/UPnPDirectory and the FileUPnP. I'm not comfortable enough in that code to say exactly where though :)\n. I think this is a great thing.\nRegarding retirement:\nParentDir seems valid to remove, unless its retrofitted to only parentdir, i.e. cannot exit dialogs etc. Not sure if thats usable for skinners or not.\nPreviousMenu, I think we will have problems removing, it does serve a purpose, atleast I think so. Personally any time I wish to skip backing all the time I just use HOME button, so I find it useless but perhaps someone could find a usecase which is valid enough ?\nSo my vote is probably remove both unless parentdir modified is useful. \n. I kindof think a third option is ok also:\n3. Leave ParentDir as you have changed it.\nAny other use of it in the past was a \"bug\" :p\n. May I request that its moved into the PowerSyscal interfaces instead, they already support callbacks for OnLowPower and such. That way it could be added on OS X, Linux and Windows also. And no real need to pollute rest of code with ifdefs.\n. Oh and for implementation tips on that take a look at the CanPowerdown and such, If you have any question regarding it feel free to ask. I'd be more than happy to add linux implementations after.\n. Awesome, yeah that looks much better. It has my sign off now, looks good.\nPerhaps worth squashing them together before we merge?\n. Oh you didn't have to open a new one :) You could have rebased and done a git push -f on your repo instead. Note for next time :)\n. Looks good to overall. Only thing from the top of my head is we probably want this as a skinner info label also (could easily be added in a separate commit though) so they could add graphics for it etc. Just making sure, the API is an int between 0 and 100 right? It makes sense to have in system info at any rate but might be good to have an if (g_powerManager.HasBattery) or something similair. I think we need to think a bit about the proper naming of those funciton though so kindof offtopic on this pull req (I'm mostly thinking out loud).\nI haven't tried compiling it yet but from what I can see it looks safe, I'd like to have a signoff from win32 and linux that it compiles fine, other than that it has my signoff.\nThanks for the contribution\n. Missing in ConsoleDeviceKitPowerSyscall (http://paste.ubuntu.com/640748/) so you could add that and rebase it down.\ngit am the_patch_I_gave.patch\ngit rebase HEAD~2 -i and select f on my patch and then do\ngit push -f (the normal params you do)\nAnd it will show up here. After that it has signoff on linux, I'd love to have someone test it on windows, os x I guess you have tested :)\n. Btw I looked a bit at linux and how to implement it there. On linux we have support for multiple batteries, not sure if we care enough to support that in our API though? Just wanted to bring it up for discussions sake.\nMy standpoint is to have our API assume a single \"virtual\" battery, anything else is to advanced for our API's need. All in favour of that?\n. Another point of discussion, what should be the assumed battery level (perhaps it would be better to have 100 as \"default\")? then we could simply hide the battery meter in sysinfo on 100, which we probably want no matter?\n. Ideally we should have HasBattery and ConnectedToACDC (better name please) along with skin info variables for it, but IMO that can be a seperate pull req. I'll merge it in now and we can add the other stuff later (your more than welcome to do it if your interested :) ).\nThanks for the contribution!\n. Great, I think thats all. Just rebase down the last three to a single patch and you have my sign off :)\n. Yup, thanks, the indentation looks perfect now. I don't know anything about the sysfs to add sadly though :)\n. Before a merge can happen it would be nice if you could squash together the 3 last commits into one.\nYou do this by doing git rebase HEAD~3 -i and instead of \"pick\" infront of the last two you put \"f\" (without \"), when you have saved and it has squashed them you need to do a force push (since your rewriting history). git push -f ..whatever you do normally..\n. What I fail to understand is why the duration can't be noisy? This question doesn't really matter with if it goes in or not, I'm mostly interested :).\nFrom what I understood is that when we Process we update the time of the animation to current and render, so given that it seems like the most noise we can get (if we have vsync) is if we process little and render a very small area, where we would end up waiting for (almost) 1/60s and the other case where we process, render and result in fps of say 30 (if we assume reasonable fps in worst case). First case introduces 16ms lagg (unavoidable) and the other about 32ms. So the noise is about 16 ms?, is that actually noticable? I'm on quite fast hw so perhaps I haven't noticed it as my computer hits vsync no matter how complex the scene is?\n. Shouldn't Directory::Create return true if existing, seems a bit weird to fail IMO?\n. My point was more, perhaps we should simply decide how our vfs implementation should behave and put that in the interface doxy. IMO since we have a higher level abstraction I'd put a vote on Create returning true if the directory exists after the call, either by creating it or it already existing. So if we decide that there is no reason why the implementation should log it as it has behaved \"correctly\".\nCan anyone find a use case where we would want to do Create dir but explicitely fail if the directory already exists? I can't come up with one.\nSo my point is, while we have it in exists in our API if we decide how create directory should behave on all implementations we can decide if the patch is \"correct\" or unnecessary :)\n. Oh sorry, I should have read the doxy before I responded:\n  /!\n  \\brief Create the directory\n  \\param strPath Directory to create.\n  \\return Returns \\e true, if directory is created or if it already exists\n  \\sa CFactoryDirectory\n  */\n  virtual bool Create(const char strPath) { return false; }\nSo that means the patch is redundant :)\n. Well its not an error to our API (which is why I don't see the point of the change of our use of the API), hence you should probably either move the check inside your implementation (to avoid the logging) or just not log if exists on create. And I haven't seen excessive logging by other implementations, granted I haven't used em all :)\n. Ugh, my head is to slow today, didn't read your response fully :) Well SMB should probably remove that logging also, as its within our API and nothing \"wrong\" for us to do this\n. Consider this mostly me thinking out loud but:\nWould it perhaps make sense to have it as a string ID instead, then we could have the ID setable in the GUI and perhaps this could be a way to share stuff between different profiles (like the other pull req which wants to keep selected window on change of profile).\nSo all profiles which have same ID could be sharing or something?\n. Ah thats true, probably better to have as you say an extra and specific share ID. Thanks :)\n. omg so awesome, I've been wanting this feature for so long. I agree that its far more userfriendly to be able to use back in those dialogs. I would have though moving them to be a dialog was the plan though? But I guess it is far more dynamic if the skinner can choose it (and do back as an option)\n. I somehow think; if it makes sense to not only be a dialog, forcing it to dialog is bad then this is the only valid solution I guess.\nOne thing I'm somewhat unclear about is why does the info variables actually have to be tied to the window? seems like having some form of window(x).list(y).view_by variable might be sane at any rate (where if in same window or perhaps in a specific type of dialog, the window(x) (and possibly list(y) could be omitted?). I think allowing it customizable is still a good thing as I think there is cases where a skin (maybe not the ones in official repo) wants to override it, and limiting might be bad.\nAnyways, mostly dumping some thoughts, its far from my field of expertise so take it all with a giant grain of salt :P\n. I disagree, I and my friends constantly hit back on those \"dialogs\" in confluence. Only in PM3 and such when it was always visible people tended to use right. Anyways as jmarshall say, back is an extra thing and right would still work. IMO back from those \"virtual\" dialogs should go back to the list, and essentially anyone in my friend circle who have tried xbmc have gotten annoyed at it when they press \"back\" and gets back to home.\nIdeally I'd love it if those (which I really think are per window menus, much like in android) would have had one explicit menu button (as on android phones) but since we cannot control the hardware then its hard. This would be another benefit of going dialog I guess as then it would be possible to have an explicit button for it.\n@jmarshall ah ok, wasn't thinking of the spincontrols and such.\n. Looks good to me, if you rebase it down to a single patch I think its mergable (git rebase HEAD~2 -i and set the second commit as fixup or squash), then you need to do git push -f as your rewriting your history.\n. Thanks for finding the problem and fixing it :)\n. The progress bar in lists is supported in PVR branch afaik (check http://blog.pulse-eight.com/2011/08/01/xbmc-pvr-update/) so I guess the code could be pulled from there.\nI personally would probably only want a flag if started but supporting progress might be valid, and on audio books and livetv stuff it makes sense with the extra information.\n. Damn missed your link, to early for me (no coffee yet) :P Anyways, looks like a great addition to guilib :)\nI'm pondering the double values, I guess it could be valid to be at a different stage in the playback than the progress of the actual live tv (if we have buffered playback). Another usecase would be when your watching a currently recording, then two progress bars would make sense (one for recording progress and one for playback).\n. Personally I'd almost rather see the skin not show the \"Files\" shortcut in the first place, same as movies or tvshows are hidden without library.\nAnyways, doing something when we happen to end up in a weird folder is still wise IMO. This happens aswell if you navigate in filemode to a server which is offline (say your resuming a box which had server online before suspend but is now offline). Perhaps popping up a dialog is better?\n. I'd say dialog + return to old window (home most likely) or dialog + return to root library are the best courses of action? We really should inform the user what and why it happened IMO\n. Personally I think we should silently fail (probably state it outright in output though) if alsa and dbus is not detected. They are fundamental libraries on most linux distros but there are embedded ones which they do not exist. The phone/tablet OS's based on linux usually do not use those libraries but wrapps the libraries in the framework instead.\n. lol sorry, I meant silently disable :P Bad wording on my part :P\nI guess one option would be to do it differently depending on the target, but I don't really like that idea that much\n. @opdenkamp, do you mean I should close this and you take charge of it or should I simply wait for your pull req and rebase it ontop of that? Either is fine by me, it was mostly a quick test to see if it was possible.\n@davilla yeah I'm thinking somewhat the same. I haven't tried using this for long enough to see if its annoying or not. I wonder how many times you \"accidentally\" put it down on the wrong side AND within the video window. If to many then yeah I agree. Flipping it back should probably hide it again, if nothing has been written IMO. Flipping back with stuff written should not initiate search IMO (you might want to navigate to symbols, even if there is a navigation thing on the back I think many might simply flip).\n. Hehe, everyone, this is just a PoC :) I haven't really tried it out enough to say if its worth having or not :) I wanted feedback on the search code parts, the rest is just for fun :) The search alteration allows you to add a button in skin which triggers the search.\nAnyways, It will ONLY pop up if your in either video files or video library. ATM it will pop up if you navigate to the filter in the side menu (this would have been so much easier if that darn menu was a real dialog as its supposed to be :P). Obviously in this case it should NOT pop it up. It should ONLY do it while on a list. We don't have a proper media list filtering afaik, if so I'd probably just make it pop up a kaitoast saying \"write to filter the list\" (or pop up a small non focused dialog which shows text already written) when you turn it over in a media list. This patch chain is not for merging, its for idea brewing :)\n. Another usage of the Search alteration is that we can now have remotes with a search button. The use of the flip was mostly to showcase one possible use of the search action :)\n. I like the idea of combining filtering and searching but some stuff might make it hard to do as combine. Search is usually recursive which a filter is not. I guess it depends a bit on how we display it all, forexample we could do \"filter\" based on what the search gives, e.g. if I'm in Artist view and I type in \"thunderstruck\" AC/DC stays as they have a song which is named so, this even if string \"AC/DC\" is not close to \"thunderstruck\". Another way to display would be to show songs, artists, albums etc which fits the search criteria, this however does not work well with filtering and kindof need a more explicit search (the one from videos for example).\nI'm all for a smart filtering as the normal use, but a global search (search cross all plugins, library content etc) would also be rather cool to have. Global search however is a lot bigger problem as we need to deal with some caching and stuff for plugins (or async it bigtime).\n. Agreed, and its only marginally better than recursive Directory search/filter, which is far easier to implement.\nI think that adding search to IDirectory seems to be a very good idea, perhaps do it as uPnP and add IsSearchable too so that plugins and vfs which are or haven't implemented we can grey out the search possibility.\n. You might want to checkout the CoreAPI discussion regarding the events on screensaver etc, most of those we want to clean up and expose to addons (mostly service addons would use it is my guess). But as you say, for peripherals many times binary is prefered over python so might need to stay a bit on that.\nThe volume relay needs some hooks as the plan is that the IAE will handle this later, so it will signal etc so we have too options, either we have a volume controller (which might be AE or some addon) or we just add some extension point to IAE so that it can relay instead of storing itself. The latter is the one I'd prefer from an API standpoint (since volume feels natural to have in the IAE from the rest of the application, and it would then be transparent what it does to change the volume).\n. Regarding the C library, wouldn't it be possible to simply wrap that library to be a python library? Like all other system libraries (like dbus etc?)\n. If the other upstream died can't we put libcmyth as a seperate project on github and try to package it, if only for ubuntu? If possible I think it would be good for us to get rid of this internal library stuff as much as possible\n. I like! something which I realized should we perhaps add some form of way to detect which is the unique id? Something any MediaObject perhaps could derive and have?\nWe have used \"type\" some places, not sure if thats the best naming? \"type\" = \"song\" would infer that \"songid\" is the unique member? Another would simply be to have \"id\": \"songid\" or \"id-holder\": \"songid\" or \"unique-id\": \"songid\"?\nThis is very tangential and is not at all important in regards to this being pulled or not :)\n. Yeah that would be one issue worth continuing discussing aswell. With airplay its rather embedded within the specification and the protocol. I think we need to decide if we want the setting to affect everyone (and possibly gray out services which does not work the slightest when doing so). The downside with using gray out is that if airplay setting is grayed out I, personally, would assume its only affecting airplay and not the others. While this is true in some sense its not entirely true.\nSo the options we have is to have the setting toggle only optional zeroconf services (such as http, eventserver etc.) or all. One solution might be to use a spinner for \"Announce services via zeroconf\": \"Never\" | \"Only enforced services\" | \"Always\". The label on the mid selection is terrible and I can't find a good label for it. Also, do we really want that type of control?\nIMO, have the setting affect airplay is nice as that gives me as a user a way to surely be able to disable all announcements, however I'm not sure if thats what the vast majority of the user find intuitive so at the very least we should probably gray out airplay if it doesn't work without zeroconf (if zeroconf is disabled). I think relabel the setting simply to \"Announce services via Zeroconf\" (drop \"these\") would be good too but perhaps a bit overkill. I think moving zeroconf to the top might also be valid, feels a bit weird IMO to have it in the bottom.\n. Sounds great, I'll cook up a patch for the idea tommorrow!\n. Nah zeroconf setting is still valid IMO, some might not want xbmc to announce all services through zeroconf. Obviously it could simply be an as.xml and we assume its ok to announce by default. This would also be a solution\n. Just thinking a bit in the light of shared friendly name which vdrfan is doing, perhaps we could simply share the password cross services? is it really useful to setup a different password on airplay than on webserver, I'd bet 90+% of the users won't set it differently. So perhaps we could first have authentication stuff and then underneath with seperator all services which can be toggled.\nWhile I agree some services might have more advanced stuff they want to setup I would think a dialog (using addon settings perhaps?) would be better than a seperate category for each service.\n. I'm guessing davilla that was a miss paste?\non-topic: Memphiz, yeah I agree having the ability to turn on/off password authentication per service might be valid but use the same password on all might be a good way to atleast get the options down? Perhaps having a spinner up by password with [off | on | custom] where custom allows you to enter a dialog where you can set on per service basis? This way we could almost gather statistics on it if we wanted (and had a way to do it).\n. I agree that moving to a notification is good but the problem is that a user might miss the notification, from that perspective (and the same with just automatically disable) means that a user all suddenly have \"lost\" an addon. This is very bad from a usability perspective. So to that end we need a way for a user to know when he wants to use the addon that its not working anymore, because thats when the information that its broken is useful. So for plugins this is very simple, simply mark as broken, disable but still show it in the addon list (but gray it out and possibly set a broken overlay). If the user clicks on the plugin we could even pop up a dialog where we could even tell why its disabled (if we would want to give broken reasons later on). The same logic works on scripts I would think. \nScrapers it gets a bit harder. I guess poping up the dialog when trying to search might be valid if we give it some options (i.e. select another scraper or something).\nSo in short, I'm against this patch on its own as while it tries to solve a problem it does so by introducing another (which might actually be more annoying for more users.)\n. Sounds like a good solution to me, then all errors are given to user when they try to actively use the addon and not when we notice it being broken. We can always do a kaitoast no matter obviously. Feels like you have handled all addons except scripts possibly, most scripts we can handle on use except the service addons. Which I simply think we should keep the old modal dialog for?\n. Well service scripts run always and start at startup, so modal them then makes sense. Example of such scripts could be anything ranging from binary clocks to mpris dbus or upnp servers. While I agree that a non-modal but staying visible until user access or clear them would be ideal (much like in android) we don't really have that possibility here. And personally hiding it in some error log window in settings is not an option :) So we are left with either modal on access or on use, for service addons it seems like doing it on startup (or when the service starts) is the way to go.\nScripts is a lot harder since you have scripts which are run by user and some run by other addons (skins mostly), so not sure how we should handle them. Is scripts run by other addons considered pure libraries if so we could simply mark skin (or user of the addon) as broken and modal there (without real reason why its broken). If they aren't considered pure libraries perhaps it would make sense to do so?\n. IMO, advanced should never be in GUI, if it is in fact advanced it is most likely better to be removed from GUI.\nSystem category can be nice but perhaps we should have a completely different grouping, so you have two seperate windows/top groups (or more) of settings, For example System and Personal where System reflects the active system and the personal is stuff we could move across (and share later) between xbmc machines. (Obviously this is outside the PR but wanted to put it out there for discussions sake).\n. Sounds good to me, the more seperated pull reqs are the better :)\n. I did a patch which used magick instead of cximage but it was a nightmare for windows apperantly, it worked just fine for linux (probably osx too) though. http://trac.xbmc.org/ticket/8992\n. I like the idea of using a dynamic type variable for stuff which is dynamic with the type. The added processing should be minimal I would think. Memory consumption should ideally drop a bit too.\n. Well string not having an API for marshalling is not really that true, you still need to marshall and yeah you might not have tools to do it but you do it everywhere in the code (especially for the interfaces where type needs to be transformed). Having to do it in each interface brings up the big problem that each interface may do it differently (as they may have different interpretation methods or create different type trees.) An example would be that one interface may create 1.0 as double but another as integer, or the opposite, 1 as integer or double, its hard to tell which is \"correct\", its IMO better to let the creator of the type decide this (i.e. music tag decoder or plugin). So while a string variant surely could bring nearly all benefits as CVariant, we could simply store everything as a string inside CVariant and all we have changed is the API. Which IMO is better than giving the RAW data to each interface (which IMO is insane).\nWe could easily formalize the marshalling and the string so that 1.0 is ALWAYS double and we can formalize how arrays and maps should be stringified, but then we might aswell ask ourself, why not do it more explicitely like the CVariant class does. It saves memory and takes away any parsing information from the user.\nRegarding static typing, while I can agree that it makes sense to do that for the base cases there are a number of benefits with doing it dynamically. One example is that scrapers could easily just add up any property on an item and a skinner could react on any property, this without us having to add properties for each possible outcome. Besides if your suggesting adding a TAG struct with all possible tag properties we might run into an insane memory problem where we coudl have hundreds of properties which nearly nothing use, which feels a bit sad to either choose to limit ourself or waste memory. If your suggesting a TAG struct which has boolean property map and one string property map then its not really different than having variant property map, both are strongly typed and both takes the same memory.\nI have nothing against just changing the the store method, i.e. keep all the Info::GetBoolean(\"foo\") and only return if CVariant.isBoolean().\n. Mostly its good, I'm somewhat considering if it would be possible to do this without a path argument. Ideally we want to search for details on an already existing item no? So wondering if simply an ID of the movie would be enough? And if omiting the ID its for a general movie with \"title\", then path isn't that important I mean?\nBTW, you can do git rebase HEAD~3 -i and set the 2 after (a3dd12b and 6bc80c6) as \"fixup\" and it will squash it all down to a single change. When you push you need to do a force though, git push -f remote branch\n. Yeah I'm not sure about which we want, I can somewhat see validity in both 1 and 2, however API wise it feels like it makes sense to just allow 1. Especially if we add up the fact that ideally ALL movies should exist in library and have a valid ID (atleast IMO), they might have different level of properties associated with them (scraped data) but exist all the same. So yeah, I agree the alternative 1 is better :)\nAs for git, its fine if your a new to it, we are too :) So I said how you could rebase mostly to showcase, don't take it as a nitpick. If you have any trouble with git please let us know and we'll help in any way possible (IRC or whatever), in worst case we can just drag in the patchset and rebase for you (would loose sync to your account though which is nice).\nNow when you make further changes please push them as seperate commits, makes it easier to review. When its all approved we might want you to squash it down to a single but lets take that when its done :)\nThanks for looking into this, surely a nice feature!\n. Unless I'm mistaken you could use the new union types and specify the type by the id. Forexample if client give \"movieid\" its known its a movie, if \"episodeid\" episode etc. But perhaps I'm missunderstanding the problem? (the media databases isn't my strong suite, think Montellese knows them better)\n. TBH, I think we could use both but with union. It makes sense to say SearchForDetails(ID=X) and SearchForDetails(File=smb://foo.mp3). Where the latter is understood to be more likely to fail (due to bad protocol or file type not being supported etc.)\n. I definatly think its a wrong move to put this in the GUI, MySQL is not a good end solution for users and IMO never had. It does do something we need (and many wants) but we need to make a fool proof way of going about this. MySQL is not that way IMO. Remote Database and such is all good but MySQL no. It makes sense to support it but IMO the users which needs it and can handle setting it up can handle setting up the as.xml, the opposite is not true.\nDefinatly has my -1, our GUI is far to complicated with far to many complicated knobs IMO already.\n. Well thats not really true, you need to move your thumbnails and do path substitution. As I have stated previously if we didn't need to do that I could almost agree it would be valid to have. I still don't like the idea of having a backend which doesn't serve the content aswell (both thumbnails and the actual media) as it just leads to problems for the vast majority of users and does not live up to the quality of the experience we want (IMO)\n. \"This would infer that the sqlite/local file system does not live up to the quality of the experience we want (IYO) ;)\"\nQue? On local and sqlite you store the thumbs locally, while they may not be INSIDE the db they are locally so if the db is accessible the thumbs are too (unless something is really wrong). That media needs to be on the server which has the db is a bit overkill I agree though :)\n\"I think what the mysql backend has shown is that centralised storage of media/metadata is quickly becoming more of a norm than a niche.\"\nI'm not arguing if having media/metadata centralized or distributed is a valid thing, I fully agree it is. MySQL and path substitution is far from the nicest solution to this though. A solution which IMO falls very far from the quality of the rest of XBMC, which is why I'm against it\n@cptspiff IMO what we put in gui settings is what we showcase as a fully working and valid feature which is in agreement with our quality standards. While mysql does fill a feature known to be wanted it does not IMO fill the quality (or user experience) standards we have on XBMC.\nSomehow I'd feel more comfortable if this was an addon, so you download the addon configure and restart. That might be a little bit more fugly but atleast its outside of what we consider \"official\" and what we consider in line with our quality standards. It would then be extremely clear its a bandaid solution.\n. First patch looks correct to me\nSecond I'd think that the ButtonControl would mark if pulsating? or perhaps it doesn't know its pulsating?\n. What you need to do is to mark both the old region and the newly created. So if you change from a=[0, 0, 1280, 720] to b=10, 10, 1270, 710 you need to mark both a and b. If you do that it should clear what is underneath.\n. Most looks good so I agree, there are a few nitpicks I think we should resolve (or merge in as a seperate pull as they aren't as vital as some of the clear bugfixes)\n. Sounds great, the others are bugs so when the code is right they should go in at any rate so no reason to rush them. Thanks for fixing my mistakes and staying with me despite I'm unavailable on IRC due to real life and all -that :)\n. Looks awesome :)\n. I agree with jmarshall, sent text sounds like a better suggestion. Personally I'd prefer more explicit than sendaction, i.e. input.contextmenu (or perhaps even gui.contextmenu?) would be better IMO\n. Btw, just need to state this even if its removed from the pull request anyways :). A hashmap trades performance for memory. For a hashmap to be roughly o(1) it needs to use roughly twice the amount of memory. So it all depends on what is preferred, i.e. one should only use hashmaps if the memory increase is negligable compared to the get/set speed, and you have memory to spare\n. I don't really see how it \"optimizes\", at least not in any extreme way. But sure, the more we can remove CStdString the better.\n+1\n. srand is not reentrant or threadsafe. So you would need to lock afaict\n. Looks good to me, just reviewed it very quickly though.\nI would suggest removing (or seperate) the vxcproj changes however.\n. Just wanted to mention sparql and librdf in perticular. Its a metadata store which is able to reside ontop of sqlite, mysql, postgres and even standardized xml tripplets. Would this be another option to use instead of the metadata store you made, so that we don't have to maintain it?\nhttp://librdf.org/\n. Looks good to me.\nI can't test logind though, but thats a good way to solve the problem.\nAnyone on the team uses arch?\nPerhaps you could rebase it down to a single patch? Alternatively with one adding appendarg(bool) on dbusmessage and another with the rest?\n. @jmarshallnz I can do a sign off in say 36 hours. I have no way to actually test logind and devicekit-power though but I'll go through the patch in thorough detail when rebased.\n. What, why? I see no reason why we would want to hard code in a latency, could you please tell us why you need it or what it fixes?\n. Again, why do you need to alter the latency. XBMC Should perfectly well delay the output video so that it matches the latency of the audio.\nUnderstand that we are wondering why you need it and why its an improvement. Simply, \"its a smaller number\" is not enough\n. The problem with this kind of patch is that even though its optional we have to maintain it. So we will have to spend developer time for a feature which most likely well under a percentage of our user base will ever use.\nOne usually needs low latency software when doing recording or actual live dsp, xbmc is doing neither of these. And in accordance with pulse audio docs we really should not be playing with latency parameters with our use case and I tend to agree with them. Altering the latency without an actual need for it will result in wasted cpu cycles and thats something your platform doesn't have enough of (which may very well be the result of a high latency in the first place).\nAs bobo1on1 points out we are flushing on play/pause so changing latency shouldn't have any major effect, we should be operating as close as the real hw latency as possible, there shouldn't be any large delay when going to play.\nI'm suspecting there might be a problem here but I do not think altering the latency is the right way to solve it.\nIs the patch simply to lower the time taking to go between play and pause? And how much is the difference with the patch and without it? Is it just 100ms or more?\n. @Montellese \nIn response to your first comment and in light of your settings refactoring. Perhaps it would make sense to have \"system\" settings and \"profile\" settings. Then webserver (and all servers) could be a system setting, i.e. even if xbmc doesn't have it on by default if master profile turns on webserver it is always on (with different levels of access depending on which profile is active and chosen when requests are made)\n. Would it make sense to add it to JSON-RPC instead? That way we can add it as a special permission?\n. Hehe, I meant that then we have it more under control, even if the permissions aren't used yet :)\nAnd an url we could still create with a webinterface, e.g. http://IP:PORT/logs where that webinterface prettifies the log output from jsonrpc.\n. Anyone has any objection to this one? Would be nice if the other platforms could give an OK before I press the green button :)\n. I agree with davilla here, move it to an RPi powersyscall (it can extend the linux one if it makes sense). Or perhaps add it to the DPMS stuff, which could probably be moved to PowerManager anyways. All in all, your more than welcome to add to the PowerManager interface. Just make the other platforms fail (gracefully) with the added functions (if you need new ones) and we can add to them later.\nWe can't have rpi ifdefs in application, we need to abstract it somehow. It still fathoms me that rpi is this different from a normal desktop/embedded linux :)\nOtherwise its a nice feature for sure!\n. Without knowing what and why this function is used for I agree with explicit, unless that gets more cumbersome for devs. Much easier to read out an enum than a magic number. \n. Wouldn't it make sense to have it as a locale enum? I haven't had time to digg through how the binding step works.\ne.g. xbmc.locale.ISO_639_1. An addon could make it go away by\nfrom xbmc import locale\nand do\nlocale.ISO_639_1\nMakes sense or not?\n. +1 ISO code might be hard to understand but atleast its googleable :)\n. So awesome!\n. For the sake of argument. What is best you think, that you merge this before everyone else in the beginning of the window or after everyone else?\n. @Montellese \nI'll just respond here then :)\nIf enable state changes of setting B due to A I think I'd expect the callback to be fired? Makes sense for the GUI, and probably any listener to react on that? And if it gets more complicated where many settings depend on eachother in a chain I suspect it being a lot easier to handle this in the manager and not in each listener?\nPersonally I find it better to fire the callback in any case whenthe data may have changed (with the given optimization to only callback when it has actually changed) since the listeners should IMO handle the case where its callbacked even without \"changing\". If this last argument doesn't make sense you can ignore it :)\nAnyways, I don't think this should hold up the pull in any way, Just something worth discussing more and perhaps further improve on later perhaps.\nYou get my +1 for pull atleast, looks very very awesome! Thanks for taking the time to clean this mess up\n. ",
    "elupus": "The binary aught to exit cleanly too thou..\n. Not going in. The FEH.py should be fixed separate thou.\n. Still me, just been on vacation\n. Still me, just been on vacation.\nLooked again on your code.. ACTION_PREV/NEXT_ITEM was already disabled to do what you want once before. To allow dvd stacks. So that can't be in the change (page up/down is fine). Secondly i don't like the miss-use of seekchapter. inputstream::seekchapter should never allow stuff outside of chapter numbers.\ndvdplayer.cpp should instead if a chapter request lies outside of chapter border request OnNext()/OnPrev().\n. That diff looks fine. Will commit when i have the time.\n. Even if i dislike removing working code. I suppose there is little point for this now that the ffmpeg ones are so much better. Go ahead.\n. sounds good. but have we tested it so it supports atleast most of what the old stuff did?\n. diff looks good. only ugly part that mms -> mmst/mmsh protocol thingy. But if there is no such things in ffmpeg i guess we need it.\n. right.. So I've got two patches for your branch. I saw wiso ammending to a pull request. Do i just send them to you by mail or is there some other way?\n. was a semi objection. If recursive mutexes can be avoided it's better. (it's much easier when you can actually exit a mutex easily without restoring to hacks like CSingleExit() ). But i don't really mind if this goes in.\n. since people apperently didn't dare.. maybe an explicit commit away will do :)\n. ISO's with menus just can't be stacked. It's a simple as that. So that special casing would need to remain. ISO without menu's  (only main feature) can be stacked. The benefit of stacking iso's without menu's are rather pointless, they could just aswell be playlists.\nI see no reason to keep the advanced setting thou. If you don't want to stack, don't queue your files. If you want to stack do that. We should just default to queuing for items that won't stack properly.\n(not sure that made sence)\n. What do we do with more esoterical file sources? like rss feeds, the current way we start livetv and play from those. Should we then be forced to use the filemanager to get to those?\nI'm not entirely opposed to using a general filemanager, but it needs to encompass what we do in video file view. Ie be able to hide unrelated files. \n. It's a rather major change, but the diff doesn't look to horrid. I absolutely think it makes sence. I just wonder how much we'll break. Probably should be tested by somebody else than jonathan before pushed to master.\n. Did this request die? I really like to see something like this added.\n. Also, if possible.. before we merge this if you could rebase it on xbmc instead of merging with it i would appreciate it. \n. Ouch.. yea, these should go in. I'd say squash them unless you can get the actual commit cherry picked.\n. Hmm.. think there is atleast one missing. \"added: setting for specifying your internet bandwidth (restored commi...\" was used by the rss file system. Let's see if I can find it.\n. actually it was still applied. just used a non existing setting.\n. This still suffers the destruction order issues (since you reference count based on compilation units). Old code atleast controlled construction/destruction order. So can't see what it really improves since our major issues have been destruction not construction asfar as i know.\n. Yup.. i missed the point that there is seperate refcounted objects in each compilation unit that uses the global.\n. I find it pretty cool that this one year old merge request is still possible to merge without conflicts\n. LGTM. The Interlocked -> Atomic change is silly (not your fault thou). It's somebody who just didn't like having microsoft names for identical functions :/.\nGo ahead.\n. Looks good to me, but i want the two commits squashed on commit.\n. looks fine\n. this can be committed non the less. shared_ptr is already allowed. Are you using anything else in there from boost?\n. We have never planned on removing shared_ptr which we have used for quite some time. What we have been discussing is if we should allow the use of all of boost.\nshared_ptr have been supported on windows by extracting it from boost. So we didn't need boost in it's complete form.\n. go ahead. We already depend on shared_ptr all over the place. If we where to remove that we'd need something very similar anyway. Secondly i've reversed my opinion on boost anyway (not sure if there was anybody more than me against it). \n. yea.. i sort of like the macros better too. Since the scope can be very important since you are not allowed to touch anything python while you are in one of those sections.\n. I suppose this handle the case of a thrown exception too thou, but then again we'd probably fail somewhere else then anyway.\n. Actually.. Recursion fixes sound like a bad idea. We shoule never ever recurse on those since that most likely implies that we somewhere in between modified python variables without holding the lock.\nSo please don't add recursion checks to it. You should even assert that the lock is held by the time we try to unlock it.\n. Recursing into python is quite fine as long as the entry point into python retakes the lock as it should.\nie\n    [Python]\n    Py_BEGIN_ALLOW_THREAD\n    ....\n    PyEval_GlobalLock() /* don't rember actual name /\n    [Python]\n    Py_BEGIN_ALLOW_THREAD\n    Some other xbmc code\n    Py_END_ALLOW_THREAD\n    [Python]\n    PyEval_ReleaseLock() / ...\n    Py_END_ALLOW_THREAD\n    [Python]\nIs quite fine. For that situation it needs no recursion count. Since any Py_BEGIN_ALLOW_THREAD will always fully release the lock.\n. Yup, please do remove them instead.\n. http://www.watersprings.org/pub/id/draft-wugofski-mms-uri-scheme-00.txt\nDefines the use of hname and hvalue url options for this purpose. So they should be parsed and filtered out in the ffmpeg implementation. \n. I was obviously on a bender when i wrote that last comment. that refers to mmsto uri. not mmsh.\n. maybe, but we want to get a ffmpeg update in first anyhow\n. I think there is a proper list inside libPlatinum for the different profiles for different files. Would very much like that you used that.\nRegarding coding style. UPnP.cpp and UPnPDirectory.cpp and the lot uses a bit different coding style compared to the rest of xbmc. They match libPlatinum since they where written by it's author.I very much like us to match the style used normally in those files.\n. It was in PltMediaItem.cpp, however not really usable in this case so i'm okey with the hard coded.\n. @jmarshallnz feel free to push your branch\n. It already supported ipv6... Plus our implementation is GPL2, theirs is GPL3. So this is problematic. Does it add anything else?\n. And you actually made the IPV6 support worse..\n. Our ipv6 support changes should be pushed upstream before anything like this goes in.\n. sounds good to me\n. We really aught to support planar audio formats. libavcodec will move to that pretty soon. By planar i mean each channel is separated into different buffers. Just like YUV is for video. Ie we'd want to return an AudioFrame struct of some sort that we could extend at the end without breaking API. The struct should be allocated inside XBMC and passed to the plugin to get filled in.\nI think one can assume that the returned data is allocated and valid up until next call into the codec. Just for references this stuff won't be good enough for the video player. It also needs to know amount of data (and or time) buffered inside the codec. Otherwise it can't keep a proper timestamp for the returned data.\n. Looks good, push away\n. Hmm.. The playlist player will already expand queued playlists right before an item is played. To me it would make more sense to move the logic to do the plugin -> real url expansion there.\n. internet playlist should work fine in playlist manager, they get expanded to ALL items contained before playfile is called on them. If they only contain one item, it may get passed down to playfile.\n. I think you can push this.\n. For reference. You can just update your branch and it will get updated here.\n. Think you could rebase locally, and push -f to same branch on github so i can apply from web?\n. That sadly didn't end up right. You managed to get a commit in here with all the changes since you branch and current master. \nIf your remote for xbmc master is called \"origin\" you should have done:\ngit rebase origin/master\nThat will stop at all conflicting commits and allow you to resolve the conflicts then do a git rebase --continue\nI drop the last commit in your branch before doing the above now thou with:\ngit reset --hard HEAD~1\nWhen above is done, you push this forced to your branch with (if your remote for your github repo is HarryMuscle):\ngit push -f HarryMuscle Slingbox\n. I pushed this\n. Nice to hear. I've realized a rather major bug with the file based cache thou which must be fixed before this goes in. If the free disk space of the local machine does not support the size of the streamed file, playback will break down.\nSo two things really needs to be fixed here. One verify available disk space. Define some limit as to how much free space we always must leave. Something like atleast 200 megs (computers do funny things when totally out of disk space).\nFix the SimpleFileCache to wrap around similary to how the new mem buffer does. So it doesn't break down with a limited amount of disk space.\n. Normally it would just be pause playback on a file larger than 20megs+8_video byterate, wait for the file cache to fill larger than 20+8_videobyterate. (is visible in the codec info data)\n. the current filecache logic will not guarantee a complete download thou. if a seek request is made (not neccessarily by user, could be done by demuxer) it will just maintain some part of the file. So it would most likely be corrupt if you try to reuse it.\n. This won't merge anymore and i'm not sure i see much point in it anymore.\n. I think they are there since the interface is thread safe. Ie you can use it from multiple threads at the same time. The main handles are stateless so you can from a single controller kick of two separate file \"downloads\". Then use those at the same time in two different threads.\nSo i don't really like dropping the mutexes completely. I'd rather get rid of the inner mutex by splitting whatever function it is in into an internal unlocked function and one public locked version.\n. probably easier. but not as nice. i like the recursive one better than this one thou.\n. To be added. The UPnP server would also benefit from something like this. So having it the file system would keep down the duplication of code.\n. This doesn't solve the use case of finding addon directory for extending module search path.\n. My only complaint is the camelCasing of getXbmcApiVersionDependency. We don't (luckily, since i'd puke) follow java naming standards in xbmc. So make that GetApiVersion() or just upercase that get in your naming. Then commit.\nAnd here comes my famous adding of doubt at the end of a comment, with above fixed it should be committed, then we can think about following later.\nShould we really even allow chdir()? It changes dll load directories for the whole of xbmc not only the python script. So it could technically break other things in xbmc. Imho we should always error out on a call to that function even with new version.\n. I would love running scripts in a separate process spcae. For simple plugins i think it should be realizable, but for addons with gui it will be much much harder. \n. Just push the corrected commits to the same branch on your repo, then this pull request will be updated.\n. Whoops.. wrong button.\n. not sure really.. to start with you could go with the setting for internet bitrate and select stream based on that.\n. Should this be closed, or do you still plan on working on it @cptspiff?\n. is the idea that binary addons are normal .deb packages on ubuntu? ie that you can declare a dependecy to some apt package? or is it just reusing the functionality of packagekit for our own internal needs?\n. yea, it looked way to easy to press accidentally :(\n. Imho keep the #pragma once and drop inclusion guards. Less code and we don't care for the broken compilers regarding this anyway. But the comment on leading underscore is valid (thou didn't see exactly what he was referring too)\n. That sounds like a very good plan.\n. hmm.. why should they be zero? all of those have ascii codes..\n. 0x7f is ascii for DEL so that seem valid.\n. I think it should be fine to push now yea.\nAfter you merge you should delete your forks branch yea.\ngit push https://jhsrennie@github.com/jhsrennie/xbmc.git :jr-keyboard\n. Even the Py_IncrLock sheit needs the lock. They don't do atomic operations so a thread switch can cause them to totally mess up. Have debugged such an issue not more than half a year ago\n. Py_incrLock -> Py_DECREF/Py_INCREF\n. So now you hold python lock while doing gui stuff? That seems like a bad idea too. It will slow down execution speed of other python scripts.\nSecondly (if above is what we want).. Do this with a class instead of some weird define that uses compiler namespace variables (_XXX)\n. I think holding on to python for these quick calls is okey. Blocking/Slow calls can't use the approach obviously.\n. Yea i realize it's not slower than current code. Didn't mean that. I meant it aught to be better to not hold python lock while calling the gui functions which would be quicker. There are atleast some gui functions that could potentially take some time. Like iterating over a bunch of gui control to find an id and so on.\nBut it is still better than previous code.\n. Looks good. Commit away.\nFuture thoughts.. a thread local storage in the locking routine with a linked list of locks that allows us to guarantee lock order. Probably a bad thought though.\n. So now you hold python lock while doing gui stuff? That seems like a bad idea too. It will slow down execution speed of other python scripts.\nSecondly (if above is what we want).. Do this with a class instead of some weird define that uses compiler namespace variables (_XXX) \n. I apparently posted on wrong request..\n. What are you thoughs on the windows posix emulation headers? I think it's a good idea. We should however also add some special header of our own even in the linux case for the closesocket() -> close() and something similar to ff_neterror() function for the errno or winsock error (instead of like now always including socket sheit in our system.h file)\n. Hmm.. We do want to move away from SDL, but something similar to above will still be needed. Maybe the lookup tables should be in something WinEventsLinux.cpp instead?\n. I just mean it's linux specific. SDL is not linux specific. It was used for OSX too. And we want that file to completely be deleted on linux aswell. So could you just put the data and the functions in a linux specific file so we don't need to bother about moving them when we finally do git rm WinEventsSDL.cpp\n. It was just a suggestion. I won't mind you pushing this patch in the meantime. It's still an improvement.\n. No clue what it was for. But merge away.\n. Would it be possible to do a lookup through the keymap to list all keys applicable at a certain point in xbmc and with the mapped action? So we could display a dialog box with all shortcuts.\nWhile i'd love to use keyboard characters to jump in list. It will take a while to get used to not pressing X to stop playback I for info C for context.\n. I fully agree with topfs and cptspiff here. I see no point in yet another options file. as.xml is perfectly fine for this, just extend it if we need more settings.\nas said, there is nothing wrong with commandline options. I could even see us extend them to allow setting advanced settings on commandline.\n. one extension to as.xml could be profiles thou. on xbmc.bin startup you could pass xbmc.bin --profile standalone, then we put all settings that apply to standalone mode in as.xml.\n. Imho we should not have a separation between what is environment settings and what is not (code wise in xbmc). That will be a diffuse distinction for some settings.\nSettings are settings nomatter how they get applied, be it gui, environment or system. We should however have distinct ways to load settings from command line, and some predefined setting filenames that get's loaded at given situations.\nFor example have --standalone cmd line flag mean we load system/standalone.xml file which contains the settings used in standalone mode. That file should however be allowed to contain ANY type of setting. And we should allow xbmc to be started like xbmc.bin --standalone --settings=myuserglobals.xml --settings=myusersettings.xml and they get applied in that order with last one overriding values from the former.\nWe could for example also have system/settings_gdm.xml which get's loaded when we detect us being started from gdm window manager.\n. looks good to me, my only wonder is if we actually need the advanced setting.\n. you could just have prototyped it at the top ;)\nI think there are other internal functions in cmyth check naming of those. If it's only used in that file it should be static as well.\n. this looks wrong.. m_iBufferSize is current amount in buffer.. you are potentially making the buffer smaller than a packet size which i suspect can crash elsewhere.\n. nevermind...\n. go ahead and commit. i don't think we should update ffmpeg for eden. we just risk breaking too many things\n. lol. I mistook you nick for davilla\n. Will:\nxbmc.bin --settings=\"C:\\Path with space in it\\file name.xml\"\nwork?\nApart from that i think it's a very good start. This way we can remap standalone to a settings file and load platform settings this manner as well.\n. that seems like an a bit silly limitation\n. so any known issues with this?\n. so since we have some regressions (mainly the transform). is the code path optional in that we don't have to do the dirty checks? if so i see no reason not letting it in.\n. amend this pull with a cleanup of all references to hurry up in ffmpeg too, then i'll merge it.\n. Rebase, fix conflicts and merge?\n. @jmarshallnz is this valid still?\n. that field contains DAR i think. \n. so previous code is correct. It calculates DAR from PAR with width and height. \n. It looks like the a bug in handbreak. It sets an invalid sample_aspect_ration (PAR)\nPAR 256:121 DAR 256:99 ie: PAR of 16:7.5\n. One is from the codec the other set is from the container. I suspect the container one is incorrect but the codec one is correct. It's always hopeless to know which to use. The container one is the one that is easiest to change. \n. I suspect you can set PAR in handbreak somewhere. Check what values that effect.\n. each stream sets the aspect of the contained video data.. what's weird with that?\nI do agree about consistency between programs, but when the encoding software is faulty then it makes little sense. It could also be a bug in our demuxer that has later been fixed. Could you try and see what an up-to-date ffplay says about the stream?\nAlso the problem with the codec aspect ratio is that one can not modify that without reencoding the whole video stream -> loss of quality, while the container one can be modified without loss.\n. But still.. I'm very interested in seeing what modifying aspect in handbreak have for effect on the printed values.\n. Apart from above, I don't mind it.\n. that looks really odd.. how they heck can it lock up like that??\n. you do realize that this is the 3rd such request.. \n. and you've verified that it works with our current ffmpeg in our source?\n. it is abit funny that we wanted to reduce wrapper layers and we have now increased them\nbefore:\nlinux: pthread -> sdl -> winapi_emu -> CSingeLock\nwin: winapi -> CSingleLock/Event\nTo now\nlinux: pthread -> boost -> this -> CSingleLock/Events\nwin: winapi -> boost -> this -> CSingleLock/Events\nI'm not sure if it's a bad thing.. Just that windows is quite alot worse off..\n. What i was more after was the complexity, not performance difference. Why is it we need this? Is boost threads hard to extract from the full boost lib?\n. Is this redundant now? I assume it's out of data atleast.\n. I don't mind this at all. Since we have wrapper layer around these things already i think we should be using native system api below that. Running our layer then boost then pthread or win32 api seems silly. \n. Okey, let's have a look at that one first (had hoped for deinterlace first, but that's okey). Just push force that to this pull request then we can keep it here (it actually matches description still). \n. forced push is fine for private branches or pull requests branches. So please update this one.\n. You merged it???\n. Luckily it was empty it seem when you did. You should just have done a push -f to dxvarenderer on your git hub account and this would have been updated. \n. Oh, i think i know what happened. You pushed xbmc standard master to your pull request branch. That made github think the request had been merged. Okey.. scared me there for a while.\n. \"with less code\"\n\"126 additions and 80 deletions.\"\n:)\n. But yea, i think it feels nicer. And a saw that the added code was testing :)\n. Crash with old code... \"_DEBUG_ERROR(\"vector iterator not incrementable\");\"\n```\n\nXBMC.exe!std::_Debug_message(const wchar_t * message=0x0247e478, const wchar_t * file=0x0247be78, unsigned int line=99)  Line 15    C++\n    XBMC.exe!std::_Vector_const_iterator > >::operator++()  Line 99 + 0x11 bytes C++\n    XBMC.exe!std::_Vector_iterator > >::operator++()  Line 333   C++\n    XBMC.exe!std::_Vector_iterator > >::operator++(int __formal=0)  Line 340 C++\n    XBMC.exe!CEvent::groupSet()  Line 31 + 0xe bytes    C++\n    XBMC.exe!CEvent::Set()  Line 90 + 0x6b bytes    C++\n    XBMC.exe!XFILE::CFileRarExtractThread::~CFileRarExtractThread()  Line 57    C++\n    XBMC.exe!XFILE::CFileRarExtractThread::scalar deleting destructor'()  + 0x14 bytes C++\n    XBMC.exe!XFILE::CFileRar::~CFileRar()  Line 138 + 0x26 bytes    C++\n    XBMC.exe!XFILE::CFileRar::scalar deleting destructor'()  + 0x14 bytes  C++\n    XBMC.exe!XFILE::CFile::Close()  Line 469 + 0x23 bytes   C++\n    XBMC.exe!CDVDInputStreamFile::Close()  Line 80  C++\n    XBMC.exe!CDVDInputStreamFile::~CDVDInputStreamFile()  Line 38   C++\n    XBMC.exe!CDVDInputStreamFile::`scalar deleting destructor'()  + 0x14 bytes  C++\n    XBMC.exe!std::auto_ptr::~auto_ptr()  Line 931 + 0x22 bytes    C++\n    XBMC.exe!CDVDDemuxVobsub::~CDVDDemuxVobsub()  Line 47 + 0x4b bytes  C++\n    XBMC.exe!CDVDPlayer::AddSubtitleFile(const std::basic_string,std::allocator > & filename=\"rar://rar%3a%2f%2fsmb%253a%252f%252fmisto%252fPublic%252fTesting%252fSubtitles%252dTesting%252fsubs%252dcog%252e2002%252einternal%252edvdrip%252exvid%252dundead%252erar%2fundead%2dcogb%2e2002%2einternal%2edvdrip%2exvid%2erar/undead-cogb.2002.internal.dvdrip.xvid.idx\", const std::basic_string,std::allocator > & subfilename=\"rar://rar%3a%2f%2fsmb%253a%252f%252fmisto%252fPublic%252fTesting%252fSubtitles%252dTesting%252fsubs%252dcog%252e2002%252einternal%252edvdrip%252exvid%252dundead%252erar%2fundead%2dcogb%2e2002%2einternal%2edvdrip%2exvid%2erar/undead-cogb.2002.internal.dvdrip.xvid.sub\", CDemuxStream::EFlags flags=FLAG_NONE)  Line 3538 + 0x1b bytes   C++\n    XBMC.exe!CDVDPlayer::OpenInputStream()  Line 487    C++\n    XBMC.exe!CDVDPlayer::Process()  Line 838 + 0xb bytes    C++\n    XBMC.exe!CThread::staticThread(void * * data=0x0c040048)  Line 176  C++\n    XBMC.exe!_callthreadstartex()  Line 314 + 0xf bytes C\n    XBMC.exe!_threadstartex(void * ptd=0x0ab83150)  Line 297    C\n    kernel32.dll!764f33ca()   \n    [Frames below may be incorrect and/or missing, no symbols loaded for kernel32.dll]\n    ntdll.dll!77239ed2()  \n    ntdll.dll!77239ea5()  \n```\n\n```\n    ntdll.dll!7721f8c1()  \n    [Frames below may be incorrect and/or missing, no symbols loaded for ntdll.dll] \n    ntdll.dll!7721f8c1()  \n    KernelBase.dll!74b20816()   \n\nXBMC.exe!boost::detail::basic_timed_mutex::lock()  Line 78 + 0xc bytes  C++\n    XBMC.exe!boost::detail::basic_recursive_mutex_impl::lock()  Line 52   C++\n    XBMC.exe!XbmcThreads::CountingLockable::lock()  Line 59 + 0x14 bytes    C++\n    XBMC.exe!boost::unique_lock::lock()  Line 413 C++\n    XBMC.exe!boost::unique_lock::unique_lock(CCriticalSection & m_={...})  Line 291 C++\n    XBMC.exe!CSingleLock::CSingleLock(CCriticalSection & cs={...})  Line 37 + 0x37 bytes    C++\n    XBMC.exe!CEvent::WaitMSec(unsigned int milliSeconds=0)  Line 98 + 0x3a bytes    C++\n    XBMC.exe!XbmcThreads::CEventGroup::wait(unsigned int milliseconds=1)  Line 127  C++\n    XBMC.exe!CThread::AbortableWait(CEvent & event={...}, int timeoutMillis=1)  Line 98 + 0xc bytes C++\n    XBMC.exe!XFILE::CFileRarExtractThread::Process()  Line 88 + 0x13 bytes  C++\n    XBMC.exe!CThread::staticThread(void * * data=0x09213330)  Line 176  C++\n    XBMC.exe!_callthreadstartex()  Line 314 + 0xf bytes C\n    XBMC.exe!_threadstartex(void * ptd=0x0ab838b0)  Line 297    C\n    kernel32.dll!764f33ca()   \n    ntdll.dll!77239ed2()  \n    ntdll.dll!77239ea5()  \n```\n. groupListMutex is not held in current code while accessing the vector.. so i think this pull request is a good thing :)\n. PlayerCoreFactory and CFileItem.IsMusic()\n. Looks good, could you rebase and squash it to one commit than somebody could add the Makefile for linux/osx\n. say your github account remote is called andrewfg and xbmc main github remote is origin then:\n\nFirst create a copy of your branch where you make changes:\ngit branch playground\ngit checkout playground\nthen:\ngit rebase -i origin/master\nThis will open an editor where you can re-organize your commits. What you want to do is keep the first, then change the \"pick\" work of the others to \"squash\" or just \"s\". That way they will be combined into the first commit.\nWhen done you save and close the editor.\nGit will then try to do what you asked, and if it finds conflicts with upstream it will stop letting you edit the files to resolve the conflicts. If you had conflicts and have resolved them, then you do git rebase --continue to finish the process.\nThen when done you push your new branch to the same branch name you initiated this pull request (git push -f [remote] [source branchname]:[target branchname]. The -f param is needed since you are rewriting history of the remote branch. (ie replacing it)\ngit push -f andrewfg playground:master\n. It needs to be rebased/squashed and corrected for linux before it can be merged.\n. I already gave you the guide on how to rebase a few posts earlier.\nRegarding linux. It needs to be added to the Makefile on linux and tested that it atleast compiles. If you look at the Makefile(.in) in the same folder as your added file, i think it should be easy to figure out how to add it.\n. I think i know why you fail the rebase. origin probably points to your git hub branch of master. Not xbmc's. If you do \"git remote\" does it list one remote or two?\nIF it only lists one, you need to add xbmc's main repository as a remote\ngit add remote xbmc_remote git://github.com/xbmc/xbmc.git\nOtherwise substitute whatever the name is for xbmc's main repository instead of xbmc_remote in the following comments..\nThen to update that remote:\ngit fetch xbmc_remote\nThen the rebase command in my previous post should be:\ngit rebase -i xbmc_remote/master\n. It should be squashed as i mentioned above. But i suppose a git merge -s in a new branch might be easier than the rebase.\n. I do appreciate your contribution. But adding things to code base requires testing, which I can't do easily but you can. Also since you are the person most motivated to get this in, it feels logical that it would be you doing the work. All developers on xbmc are a limited resource. And at least when it comes to me, have much less time than i'd like to spend on xbmc. Doing review on github is easy (and usually doesn't take much time away from your normal day to day work). Thus I tend to want patches to be complete before I merge them in. (occupational hazzard from following ffmpeg development for a long time)\nSecondly given that you apparently can code, learning to use git is something you'd have use for in other projects too. It's starting to become the dominant VCS out there.\nAnd on your issue. The reason is that somebody have changed code which you have modified after you modified it. Thus there is a conflict. Which have to be resolved. If you do: `\ngit status\nIt will list conflicted files. Opening one of those in an editor, you should find conflict markers \"<<<<<<\",  \"=====\", \">>>>>>\" (search). That's where it failed to apply the patch. Usually it's just small problems. Above the == you have your code (I think, could be opposite), below you have current code. Just remove the conflict markers and update the code to be correct. If it's the project file, it might be easier to redo the change. (git checkout filename, will reset the file to before the patch).\nWhen you have resolved conflicts in a file:\ngit add [filename]\nWhen all conflicts have been resolved, \ngit rebase --continue\n. Oh, and if you want to abort the rebase:\ngit rebase --abort`\nThen you can restart from before the rebase.\n. Seems your quote got lost. \n. Please do, not tested it there yet. Also it changes the behaviour of dvdplayer if rendererer isn't ready after first startup. Before we retried for a little while. This just drops the picture and moves on. Could cause issues.\n. Oh nevermind.. didn't push those changes. We can merge this first.\n. davilla how so? it still adds the overlays?\n. So.. I added the stuff i intended to have in there from the start.\n. This should be done with the avfilter implementation after we have updated\nffmpeg.\n. Take care of the new comments and rebase on current master and it's shaping up very nicely.\nYou will have conflicts on rebase to master. You will have to move the changes in dvdplayervideo into rendermanager. It now handles get's the dvdvideopicture and calls the different subfunctions in renderers.\n. I think we should have a preference list for deinterlacers that will be selected in auto mode and allow user to specify whatever manually.\n. isodrogar: the problem is what auto should mean. For example ion's can do the yadif deinterlate for dvd's that is currently used for auto resulting in stutter. So somehow we'd need to be able to select the method. But only one won't do since not all deinterlacing options are available at one time. \n. @Voyager-xbmc:\nCould you test with halfrate yadif on the ION? It's just a different SetFilters() command. If that works for dvd we should use that. Secondly there is a optimization for lobavfilter that avoids one memcpy of the video frame. It would speed it up as well. \n. I need to look over it once more, but almost.\n. Please do a rebase and squash then i'll merge it in. Think it is good codewise now, but no need for several commits.\n. Looks okey to me. We need some better way of handling the auto setting thou :/\n. looks okey to me. merge away\n. I retract that.. You hooked up the code so it doesn't respect the DEFAULT flag of the file. I really think that should have priority.\n. Think you could rebase and repush this branch dteirney since the pull request seem to have gotten all messed up.\n. Fix above and the windows project file, then we can merge it.\n. looks okey to me\n. It works when processbar shows up for python. But true that is threaded separate, hadn't realized. \nI think it only calls Show() once. Once it has routed the busy dialog which i think happens on first process, the topmostdialog is the busy dialog so show won't be called again.\nMoving the hiding/showing into busy dialog would make more sense. Ie it should not unload, it should just hide controls if modal dialog shows up ontop of it.\n. How about this. Only call Show() once. It handles it's hide/show internally based on if it's the topmostmodal dialog.\nWe should however add something like the threading in CDirectory to the CMediaWindow's instead, so we could do the additional processing on the CFileItemList in the job instead of app thread. But that is for another time.\n. Yea I was thinking of that. Some sort of wrapper around the the job manager where app thread can wait for a job in main thread to complete while still rendering.\n. This causes a memory leak. The input/output should not be malloced before calling parse for the new version.\n. Will be done in ffmpeg update.\n. I like it alot!! This should solve the weird stuttering rendering that happens on some intel drivers on my system. It blocks rapidly emits 3 frames, blocks, rapid 3 frames. I think it only wakes up when the queue is empty or something.\nAlso maybe we can get rid of the CGUIFont weirdness for scrolling text if we now have a good frametime.\n. Looks good.    Much better with explicit output names\n. This won't be merged. We need to pass cflags to sub libs. We will however also pass what the user specifies to sub libraries.\n. Hmm.. I though we already did. We just prefix it with our own specified flags. \n. Seems we only do that with ffmpeg on x86. See PASSED_CFLAG variable.\n. While i agree that people should be able to set their own cflags. The problem is twofold. One: we need to set valid defaults form some libs. Two: It's not like you build  a single lib/app. The xbmc build process consist of a shitload of libs/apps and clags doesn't need to be valid for them all. \n. We can't require people to run configure --special-somlib-cflags=blaha just to configure xbmc. we should have defaults properly set. until we have a way to specify cflags to sublibs from configure we will always prefix/suffix cflags.\n. configure should setup valid default for all archs/platforms we support. setting cflags is for special case situations. secondly just about all compiler flags have a -no counterpart. So aslong as we prefix cflags not suffix. user can always override.\n. I'm not sure this is correct. We already release it when window manager calls domodal. But I'm not sure it's valid to do it inside of the dialog. How did you end up there without going through window manager?\n. It calls DoModal not DoModal_Internal(). But that is a blocking call too it seems. You could release gfx context in CGUIDialog::DoModal() before it calls into application messenger.\n. ok, it's a bit ugly to be holding gfx here to be honest. did you find out what it is that does?\n. Ah okey pvr branch. Yea that would cause this issue.\n. I was fine with this change, so could have been merged. But now i think some of this code has been refactored. :)\n. Cool. Always nice to see such massive improvements. Do you have an idea why it gives such a big benefit?\n. We clearly want this.. But i suspect we'd want to make the CURL more lightweight. Parsing on the fly on first Get_() access. And dirty handling on each Set_() .\n. I like the surfacecontext a lot. Much nicer approach.\n. I was thinking about that too actually. It is going to be an overhead obviously, but it would simplify things alot. May be too much on ions thou.\n. The copy should happen on the GPU not on the CPU if done correctly.\n. generally this is looking quite good now. any thoughs @CrystalP?\n. Looks fine for now. CrystalP feel free to merge if you have the time. Have no computer to compile on now and none to test on at all.\n. ouch.... how the f* did i miss that.\n. From what i can tell the time parameter doesn't seem to matter for dxva, so i think we can ignore the fact that it's not a valid time.\nSince we calculate time in the code that adds the surfaces it's always moving forward by known steps in the array, so just padding between count and valid with sampleunknown aught to have created the same fix with much less code unless i'm missing something.\n. I think i'd rather see something like:\n1. setup array of number of samples with all set to sampleunknown\n2. calculate min and max time needed\n3. iterate over all buffered samples:\n- * any outside time can directly be removed\n- * any inside time can use (time - min time) / 2 to get index into output buffer\nThat way even if the samples in the buffer is not sorted properly or have gaps, we get a valid setup.\n. Well the point is we can sometimes have dropped frames on decode. When we do we should still increment time, thus we'd have a gap.\n. we should add (increment internal time counter) for dropped frames too.... those will not have a proper surface associated in it  so we will have gaps. This is currently not done, but it aught to be done.\n. But looks good, merge away.\n. seems kosher to me\n. that commit is broken it contains a lot of unrelated stuff. it's probably the wrong commit all together\n. Hmm.. Better but i don't really like it. Like i said, the still hint is just a hint. The stream can contain 30 minutes of video then end with a still frame. Secondly some dvd's the main movie is part of the menu, and the still hint is currently only hooked up to if the dvd is currently in a menu. Thus it would disable the whole feature there.\nSadly i can't think of a solution for it right now. I will mull it over a few day, if I've not merged it by monday, please bump. \n. I suspect we can detect if ffmpeg's stream parsing has been cut short due to a still frame thus giving nonsense fps. Then we can just set that the fps is not known instead of some silly stuff.\n. We can most likely figure out if we can't trust ffmpeg values as i mentioned before. In that case it should only have found a very small amount of packets for the stream in question to deduce fps. If that packet number is very small, we can ignore the values it gives. \nIt's the call av_find_stream_info that deduces these types of things. It at least internally keeps a count of packets it used to deduce the fps information.\n. Exactly, that was what i was after, only do it on 1 also i think since that is the stillframe case.  Just set fps rate and scale to 0 in that case since they are obviously not right. The you can use that to detect the situation on codec open. No need for an additional parameter.\n. Like this much much better btw. Take care of above two changes and i think it's ready to merge.\n. After some thoughts, could you change the check for number of frames to include the case of 2 decoded frames. I just realized a lot of dvd's code two frames, not one for still frames to force one frame to be emitted from broken decoders.\nIf not, I'll wait with the merge until tonite or tomorrow so i can get that changed myself.\nThanx for the fix.\n. Crap.. Should have been more clear. I meant 1 or 2 frames not 0. But i'll take care of it before i merge.\n. commited with some changes in: fb9df697cbd0d3ce95b4d0fd067db51e5f1b4ebb\n. - missing licencing information for the lib.\n- dvdid should be in root/lib folder not under storage\n- needs makefiles for *nix\n. Hmm.. if there is a good upstream of that lib. I'm pondering if we really should be including it in our source. On windows we could download it instead. I just wonder if it's available somewhere on linux.\n. Then ask him if it can be released under LGPL or GPL 2+ and slap in gpl headers if he says it's okey.\n. Given that this code is now not a lib anymore. Please use the CRC function we already have in xbmc.\n. This looks way more complicated than need. Do a get directory in the VIDEO_TS folder, calculate crc for every .ifo file found in that folder. Done. They are all small files.\n. time and date can change so don't rely on that (re burned files or ripped dvd's). utils/Crc32.h\n. uint32_t HashDVD(CStdString path)\n{\n  CFileItemList items;\n  CDirectory::GetDirectory(path, items, \".ifo\");\n  items.Sort(SORT_METHOD_FILE, SORT_ORDER_ASC);\n  Crc32 crc;\n  for(int i = 0; i < items.Size(); i++) {\n    CFile file;\n    if(!file.Open(items[i]->GetAsUrl()))\n      continue;\n    int res;\n    char buf[2048];\n    while( (res = file.Read(buf, sizeof(buf))) > 0) {\n      crc.Compute(buf, res);\n    }\n  }\n  return crc.m_crc;\n}\nWhat i had in mind was something like above (untested).\n. I don't like usage of file times since that means CRC of a file on a real disk will differ from a fully ripped dvd. They should not.\n. Fix above comment and squash, then i'm fine with it.\n. Yea i think removable makes more sence than iso9660 (which is wrong for dvd's anyway since they could potentially be only UDF even if we don't support it)\n. If it at least have been tested on linux and win32 then i'm okey with it.\n. You could have pushed forced to the old pull request.\n. Yes please.. I'd love to be able to use my bluetooth headset with xbmc.\n. Probably won't make it for may window, but i'll try to look at this. Initial glance is very good.\n. Just for an update. I'm working on the windows side of this pull request. Will rebase original commit and append the stuff needed for windows later. (Windows api on this is weirdly poorly documented)\n. My WIP branch is here: https://github.com/elupus/xbmc/tree/bt works somewhat for both windows and linux. I've split this pull request into seprate commits + done some fixes on the linux side of this.\nThe API on windows for this is just as horrid as the API on linux and a bit different. How the interface works agains xbmc probably need some rework. But i'm not show how yet.\n. No not really. I got so fed up with bluez and badly documented win api.\n. Fine with me, but we really need to figure out a way to get all these services out as external plugins :/\n. git rebase upstream/master\nthen\ngit push -f {your remote for github} master\nshould do the trick.\n. Have the other upstream for libcmyth died? If not it seems we should try to keep us close to that. I don't mind too much thou since you seem to be maintaining it.\n. This won't work for still frames. If you change it to be the same as the line below (ie not in menu's) i'm fine with the change.\n. that seems quite weird.. mpeg2 is easy to decode\n. I don't think we should strive for enabling this, i think we'll just find more samples where it breaks.. So i'm closing this for now.\n. I'd rather avoid as many adv settings as possible\n. Looks good\n. This seem to have sidetracked from original pull.\n. Think we should have a prio list for auto deinterlacer instead that could be tuned. Also we'd need a way to downgrade the method. But I suppose it could as a default for now. \nOne thing thou.. If you have a dual core atom, could you check the cpu usage while you experience stuttering. ssh into the box and use top, press 1 to get separate usage per core, then reply here with the average. yadif is currently single threaded (but quite simple to multithread) so it might solve the issue you have.\n. Yea i can live with this change for now. But seems it doesn't merge anymore.\n. Like the idea. Diff was a bit bigger than expected. Will try to review later.\n. Yadif should only activate with auto and deinterlace.. Don't think we had support for libpostproc blend unless that is what deinterlace did before. If so then yea it was intentionall. That deinterlacer was just about worse than usefull.\n. I can't really test it much (apart from software) but you have a go ahead from me anyway. But would be nice to get a test on vdpau at least.\n. Go for it :)\n. Looks ok from my first glance. As long as there are no known breakage of other things it has my okey.\n. Now it will break on > 4gb instead. Marginal improvement. Make those\nuint64_t instead.\n. Its from back in the Xbox days. Seemed pointless. It was a small image\nanyway.\n. If any of you have the time. Could you look at the code in FlipPage, imho in non fullscreen (and actually in fullscreen too). If the present time for the new frame requested in flippage is already passed, the renderer should skip the second bob field imho.\n. Picture duration can't really be trusted. Feel free to change the default in\nthe meantime.\n. The second frame will always wait for the next vsync. So for a 30 fps video\non a 60hz display it will be perfect. On a 50hz display it will be a little\nbit early, but I think that is better than always missing the next vsync\nwhich it will do if we wait the field time. Missing the vsync meens being\nlate for next frame.\nI think the added fields should be considered secondary to the normal\nframes. Also we won't know a frames duration for sure before next frame is\ndecoded. Before that we can only guess.\n. I don't really mind it changing. Just can't fully see the benefit. @CrystalPT what do you think?\n. I see no reason for merging this. So i'll close the pull request. It needs updates to apply cleanly anyway if we would want it.\n. It should be cleared inside the pp filters getpicture function.\n. Interlaced is enough.\nOn Sep 24, 2011 1:37 AM, \"CrystalP\" \nreply@reply.github.com\nwrote:\n\nLocated in DVDVideoPPFFMpeg::Process now, fits right in.\nlibpostproc doesn't give a way to find out if it does deinterlacing and I\ndidn't want to c/p their argument parsing, so I cheated a bit and set a\n'deinterlace' member from dvdplayervideo.\nThe question remains - which flags should be cleared?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/439#issuecomment-2183892\n. m_output.inited is not used now then is it. Please remove that then.\n. @CrystalP, @isidrogar is there any issue with this change?\n. Looks good to me\n. Eh.. Per video is essential.. That is the only thing i'd use it for. Video's with audio encoded too low.\n. If cfilecurl set that flag somewhat properly, patch is okey.\n. I think we are going to hold of on this for eden\n. I don't see why dvdplayer needs to be aware this is happening at all.... DXVA/VAAPI/VDPAU will all preempt and restart internally (notifying player with a reset response). Only thing that may need this is rendermanager\n. The error recovery should be done by the codec that needs it, not the player... DXVA for example already registers callbacks for this.\n. Look at DXVA, it handles this situation properly already.\n. The same way.. We know vdpau will be preempted on a refreshrate change so ask it to tear down before calling into xrandr via a callback. CVDPAU object registers a callback in windowing system that it needs to be signalled before a refreshrate change, then windowing system calls this callback before it happens and after it has happened. \n. A heck lot nicer :)\n\nWe just need to make sure we avoid any potential deadlocks with the callbacks. We've had such issues with dxva. Will look it over some more later. @bobo1on1, @CrystalP what do you guys think?\n. The codex will get a reset call on seeks. That is not enough?\n. Nope. Decoders must be able disposed without waiting for renderer. If they\nshare resources with the renderer they must have been refcounted and passed\nalong the video picture to the renderer.\nAlso keep in mind that atleast two decoders must always be able to be inited\nat the same time. (not neccessarily decoding at the same time)\n. if smart_ptr's give less code then yes, but often you end up including headers all over the place.\n. It feels like the recover variable can be replaces with usage of m_DisplayState now? Can be done as a separate commit.\n. Can't you just check that m_displaystate == OPEN before overwriting it on error?\n. Yup. Reopening could make sense.\n. I'm a bit scared that the call to reopen codec could mess with the other hw decoders. The result of that reopen is that it's going to recall get_format() function. Now this should technically work fine, but i'm not sure what other types effects this could have on vaapi/dxva.\n@CrystalP what do you think?\n. With above two fixes i think i'm okey with the change. I'm still very nervous about all the locking going on, i'm pretty sure we are going to have deadlocks. There are 4 sections involved here. gfx, display, decoder and to top it of rendermanager. \nRenderManager always holds a shared lock while accessing this from main thread (or sometimes an exclusive). I can't exactly see the scenario where it deadlocks right now, but it feels scary with 4 locks that are grabbed nested.\n. IF this been tested with Non VDPAU and auto refreshrate changes, then merge away.\nI'm just concerned since it tears down textures on resolution changes for ALL render methods. The result of which is that we are going to render a black frame on screen for at least one frame (and or other issues). While I think there are no screen which manage a refreshrate switch without flushing display, there technically could be (buffers need not change since rez hasn't changed).\n. Would be nice with references to samples or at least our ticket for the vc1 fixes.\n. There is a fast realloc in ffmpeg. Taking current size as param.\n. Hehe, probably should have read the diff before commenting. I read you comment as that you thought the overhead of calling realloc each frame was a bit too much.\nHow silly that dxva_context is allocated by app. That really should have been done by ffmpeg. But yea i think for now that is the best place.\n. Go ahead\n. Look okey\n. strncpy won't null terminate the string (if too long).. You'd need something like target[len]=0; after the call.\n. Oh please rename it to UPnPFile.cpp. I so hate searching through filesystem for the damn files due to the silly naming convention.\n. It should be prefix... when working on upnp you want directory and file\nlisted together.\nUpnpdirectory.cop\nUpnpfile.cop\nSmbdirectory.cop\nSmbfile.cpp\nA rename is only okey if done in two steps. First file rename without\nupdating class names then the classname update. If not done that way I think\nhistory for the files will break.\n. I think squashing rename + include fix + buildsystem, you'd still keep history intact (the change in the files should be small enough for git to detect the rename i think). That way we still get a bisectable tree.\nTest above but keep old branch around until we verify that it worked. \n. Why?\nOnly squash:\n\"[fix] - buildsystem/projects after file renaming\"\n\"[rename] - rename all iFile and iDirectory implementations to have the p..\"\n\"[fix] - includes after file renaming\"\nWhich are in the correct order.\nLeave the other commits separate. I think it should still detect the rename.\n. Actually squash the splits of hdhomerun/slingbox into that too. Just keep the class name rename separate.\n. @cptspiff what do you think?\nMy only thought is that stuff like DirectoryFactory/DirectoryCache should remain with directory first too keep them together. They are helper functions not actual protocols. But nothing i'll push for.\n. You have my sign of.\n. Ok. There could be more mkv fixes worth backporting.\n. There where some good things, but spread out over a few commits so messy to\nbackport, so better to wait I think.\nOn Oct 16, 2011 8:00 PM, \"CrystalP\" \nreply@reply.github.com\nwrote:\n\nThere are tons of fixes we're missing overall, but to respect the hard\nfreeze and schedule I figured we could avoid putting a ton of effort in\nthis. We could backport only the ones we get reports about, release soon,\nupdate ffmpeg and benefit of all fixes and new functionnality, release\nagain.\nIf there are more trivial ones, go ahead!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/496#issuecomment-2422050\n. Start offset is a bad name since that is already a member of a cfileitem.\nApart from that, its fine.\n. Hmm. I thought that was for time based offset ie in seconds. Cuefile style.\n\nplaylist_starting_track perhaps.\n. If those files do use cvariants then absolutely.\n. Or openfile\n. Okey.... BUT your initial idea of (OnStartup) was better (should have thought some more). If this takes long it will block display of busy dialog.\nFeel free to commit either.\n. Hmm.. i would have expect the xbmc wrapper shell script to be in path. I'm not sure why this script should respect the prefix set?\n. @AlTheKiller, what do you think?\n. Looks good to me. \n. Curl part looks good.\nOn Oct 27, 2011 11:49 AM, \"Chris Browet\" \nreply@reply.github.com\nwrote:\n\nHi,\nHere are 2 fixes for bugs I encountered when cleaning videos:\n1) g_curlInterface.easy_getinfo with CURLINFO_CONTENT_TYPE requires a\nchar*, not a char. See http://curl.haxx.se/libcurl/c/getinfo.html for an\nexample.\nThe issue here is that the mime-type is not correctly, returned, so HTTP\ndirectories cannot be detected and the Video cleaning delete the http paths\n2) In VideoDatabase.cpp, a logging says \"Cleaning paths that don't exist\nand don't have content set...\", while the sql actually selects for deletion\nthe paths which HAVE content set. I assume this is a bug.\nYou can merge this Pull Request by running:\ngit pull https://github.com/koying/xbmc master\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/513\n-- Commit Summary --\n- FIX : g_curlInterface.easy_getinfo with CURLINFO_CONTENT_TYPE asks for a\n  char*, not a char\n- FIX : Actually only clean paths that \"don't have content set\"\n-- File Changes --\nM xbmc/filesystem/FileCurl.cpp (6)\nM xbmc/video/VideoDatabase.cpp (2)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/513.patch\n https://github.com/xbmc/xbmc/pull/513.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/513\n. That looks like a remnant. I think it can be dropped completely.\n. Dropped the whole code instead.\n. Please don't ifdef it to windows. Especially inside player code. I think it\nseems okey on all platforms.\n. ```\n\ndiff --git a/lib/ffmpeg/libavcodec/h264.c b/lib/ffmpeg/libavcodec/h264.c\nindex 31d43df..4c61b7d 100644\n--- a/lib/ffmpeg/libavcodec/h264.c\n+++ b/lib/ffmpeg/libavcodec/h264.c\n@@ -1798,14 +1798,11 @@ static int decode_slice_header(H264Context h, H264Context h0){\n h->b_stride=  s->mb_width*4;\n\n\ns->width = 16s->mb_width - 2FFMIN(h->sps.crop_right, 7);\nif(h->sps.frame_mbs_only_flag)\ns->height= 16s->mb_height - 2FFMIN(h->sps.crop_bottom, 7);\nelse\ns->height= 16s->mb_height - 4FFMIN(h->sps.crop_bottom, 7);\ns->width = 16*s->mb_width;\n\ns->height= 16*s->mb_height;\nif (s->context_initialized\n-        && (   s->width != s->avctx->width || s->height != s->avctx->height\n+        && (   s->width != s->avctx->coded_width || s->height != s->avctx->coded_height\n         || av_cmp_q(h->sps.sar, s->avctx->sample_aspect_ratio))) {\n     if(h != h0)\n         return -1;   // width / height changed during parallelized decoding\n@@ -1818,6 +1815,12 @@ static int decode_slice_header(H264Context h, H264Context h0){\n         return -1;  // we cant (re-)initialize context during parallel decoding\n avcodec_set_dimensions(s->avctx, s->width, s->height);\n\n\ns->avctx->width -= 2*FFMIN(h->sps.crop_right, 7);\nif(h->sps.frame_mbs_only_flag)\ns->avctx->height-=2*FFMIN(h->sps.crop_bottom, 7);\nelse\ns->avctx->height-=4*FFMIN(h->sps.crop_bottom, 7);\n+\n     s->avctx->sample_aspect_ratio= h->sps.sar;\n     av_assert0(s->avctx->sample_aspect_ratio.den);\n\n\n\n```\nAbove should avoid cropping coded_width/height, so those should be available. Only issue would be it not detecting a change in cropping parameters.\n. And tested this with software decode and didn't seem to have any issues.\n. The changes in the dxva/vdpau/vaapi code would be valid non the less with this change. I think it makes more sense anyway to use coded_width in those parts. So i think we should push this for now.\n. Worth, noting: http://thread.gmane.org/gmane.comp.video.ffmpeg.cvs/43425\n. We should do as done in that ffmpeg commit, only set the thread id for older versions.\n. looks good to me. and it fixes a compile error :)\n. Nice catch. Should the loop be that tight? 1 ms wait seem very short.\n. Merge away, but we should probably send it upstream.\n. I think it's all fine. Better to explicitly catch exceptions where they are known to occur and the SAFE_DELETE thing was just a cosmetic thing anyway so just go ahead and merge.\n. I think it's fine on other platforms as well.\n. I think it should merged for our new release. \n. XLockDisplay should be used if we are protecting x11, not gfx. I though it was threadsafe thou.. but i could be wrong.\n. Eh why?\n. For context.. a struct in c++ is nothing more than a class where members are public by default opposed to private in a class.\n. structs does the exact same thing\n. Abuses of memset on that structure perhaps?\n. It doesn't change what compiler should have done by default. Thus i think the error is somewhere else. For example somebody doing a memset(0) on such a structure or stack being busted.\n. Also, the code you had before would not have executed for the line: \nDatabaseSettings dbSettings = settings;\nThat would have called an implicit copy constructor for the class/struct since no copy constructor has been defined. \n. Yes cstdstring has a default constructor that inits it to blank string.\n. Think there are more leaks there:\ndev = udev_device_get_parent(udev_device_get_parent(dev));\nIf return from udev_device_get_parent must be free'ed, i bet the inner one needs to be freed too.\n. If the call fails. Maybe the parent parameter needs to be free'd instead.\n. /* udev_device_get_parent_*() does not take a reference on the returned device, it is automatically unref'd with the parent */\nSo the point is not to free the return value of that. You should always free the root device.\n. Looks good to me.\n. I'm for just about any change in that file that makes it less messy (including removal of functionality)\n. Just noticed it has conflicts with the other merge. Think you could rebase and squash it to one commit. Also if you could drop the now rather pointless PlayDisc function also i'd be very happy.\n. Just noticed it has conflicts with the other merge. Think you could rebase and squash it to one commit. Also if you could drop the now rather pointless PlayDisc function also i'd be very happy.\n. According to @vdrfan this broke the audio cd fix again. I'm looking at it, but if you have a clue as to why. feel free to chime in.\n. This is on linux i think . The problem is the weird fallback to D:\\\n. @ScudLee thought i'd just ping you about the fact that we broke it again. It really needs some more love\n. Yea, doing just that. Got rid of the RunCdda function. Just needed to set mediapath to cdda://\n. Could somebody give this patch a try on windows? http://pastebin.com/cPLfrLZR\n. Ok. Pushed something very similar. It probably needs more work on windows to work systems with multiple cd devices.\n. As Voyager-xbmc mentiones. This (and old code) looks crash prone for the situation of a short path. I wonder why we are using strdup here and not a CStdString.\n. Also looking in Cocoa_MountPoint2DeviceName this would break OSX.\n. That said, Cocoa_MountPoint2DeviceName is rather broken anyway. It assumes it can replace the variable in the parameter without declaring it as a reference. @davilla \n. An ifo in a directory should absolutely work. I never keep the VIDEO_TS folder. It's just pointless\n. Looks fine to me\n. Crikie this has grown to a beast :), Glanced through it quickly and quite a lot is now fine. No binaries and such anymore.\nI noticed that CLog::DebugLog which was removed from trunk has trickled back. I assume it's not needed, so would be nice to get it dropped.\nAlso the IPaintCallback seems a bit silly. Wouldn't it be better to make the DSRenderer contain all that is needed instead? For example I could see using the DSRenderer together with dvdplayer's dxva support.\nThen there are a few things in there which would be nice to split out to separate commits. Like the charset changes. \n. Crikie this has grown to a beast :), Glanced through it quickly and quite a lot is now fine. No binaries and such anymore.\nI noticed that CLog::DebugLog which was removed from trunk has trickled back. I assume it's not needed, so would be nice to get it dropped.\nAlso the IPaintCallback seems a bit silly. Wouldn't it be better to make the DSRenderer contain all that is needed instead? For example I could see using the DSRenderer together with dvdplayer's dxva support.\nThen there are a few things in there which would be nice to split out to separate commits. Like the charset changes. \n. Fine by me. But i suppose we could have skipped the strdup calls instead?\n. Yea the new one looks much nicer. But do you really need the new enum? Couldn't the old one have been used?\nIf it avoids header pollution i suppose it's better to duplicate it, but otherwise i see no need.\n. Ok looks good\n. Weird. I responded by email, looks good.\n. commited at 937c184fe241127d977845f9e449d908b32bf659\nYou had tabs in your patch so had to fix. Also this is really just a temporary bandaid. We need to rework those functions.\n. Uriutils::addslashatend()\n. Hmm would be more code. So never mind. I wonder why it has a slash now. It\ndidn't use to have one at that stage. It seem to indicate some other issue.\nOn Dec 30, 2011 2:03 PM, \"Sascha Montellese\" \nreply@reply.github.com\nwrote:\n\nWhen browsing UPnP shares in XBMC all URI's that point to a subdirectory\nof the share contain two slashes at the end. This results in odd behaviour\nwhen using the \"Parent folder\" item in the GUI to get back to the parent\ndirectory. The logic removes everything up to the second last slash. If I\ne.g. am in the directory with the URI\n\"upnp://7d7ec181-2b56-37a2-832b-9503f1957eab/0%2e00000//\" I end up in the\ndirectory with the URI\n\"upnp://7d7ec181-2b56-37a2-832b-9503f1957eab/0%2e00000/\" which is the exact\nsame directory.\nThis fix first checks if there already is a slash at the end of the URI\nbefore adding another one.\nYou can merge this Pull Request by running:\ngit pull https://github.com/Montellese/xbmc upnp_slash_fix\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/600\n-- Commit Summary --\n- upnp: fix additional slash at the end of container URIs\n-- File Changes --\nM xbmc/filesystem/UPnPDirectory.cpp (3)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/600.patch\n https://github.com/xbmc/xbmc/pull/600.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/600\n. Are we using long long there? Shouldn't it be using int64_t?\n. Ok, then merge away.\n. And yes, I'll still do code review on libcmyth. Won't be testing anything thou. Anything simple you can just commit right away.\n. Regarding the corrupted line.. We should just tell processing pipeline the\ncorrect height, not the padded one.\n. I wonder if one could not use the destination_video_rect of  VdpVideoMixerRender\n\nftp://download.nvidia.com/XFree86/vdpau/doxygen/html/group___vdp_video_mixer.html#ga62bf3bf8c5f01322a03b07065c5ea3db\nI really can't believe that nvidia would have missed something like this.\n. I wonder if the problem is that we call VdpDecoderCreate with coded width instead of real wanted width/height. We allocate surfaces with coded_width as is required. But it seem vdpau should be aware of the size of the wanted video too.\n. Okey, we should be using vdp_presentation_queue_display to clip of part of the output.\n. I don't mind the vdpau (black line) change ( don't see myself much as a maintainer there ). Maybe we should add some generic support for this in the renderers thou. I'm quite sure i've seen similar things elsewhere. One question thou, is it visible both on the top line and the bottom line?\n. It really should just be bottom line due to edge not being sampled there. I wonder actually if memsetting the source surfaces to black before decoding would not have solved the issue too.\n. Right. Go ahead on the black border change atleast.\nRegarding the other issue, could you dump timestamp differences that the pattern detector is seeing when we are deinterlacing and when not. Preferably from start of playback.\n. To be honest, i think those timestamps are way to messed up to do anything about. Even with deinterlacing off they are messed up.\nStep one should be to solve why we get broken timestamps with deinterlacing turned off.\n. Looks good\n. Will be fixed by https://github.com/elupus/xbmc/tree/ffmpeg_0.10.2\n. Okey, just wonder if we handle such paths fully everywhere else anyway.\n. I'm not opposed. Just needs testing on windows and osx.\n. I'm against all optional external libs. Either we run external or not imho.\n. I can live with that if it makes somebody happy.\nOn 2012 1 14 12:35, \"John Rennie\" \nreply@reply.github.com\nwrote:\n\nSee http://trac.xbmc.org/ticket/10974\nThis is a bit of a hack, but it will at least provide a fix until we can\nthink of something more elegant.\nYou can merge this Pull Request by running:\ngit pull https://github.com/jhsrennie/xbmc upnpsort\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/626\n-- Commit Summary --\n- Allow uPnP sort order to be set in advancedsettings.xml\n-- File Changes --\nM xbmc/network/UPnP.cpp (12)\nM xbmc/settings/AdvancedSettings.cpp (9)\nM xbmc/settings/AdvancedSettings.h (2)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/626.patch\n https://github.com/xbmc/xbmc/pull/626.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/626\n. Objectid is just a hash I think. Technically client should request sort\norder.\n\nSorting by label make sense for movies. Not so much for tracks and\nepisodes.\n. Nevermind, Objectid is the video/music db path.\n. Deadlock is now fixed in master: https://github.com/xbmc/xbmc/commit/7ee989003d35a92a36e15c426cad69b0a8500256\n. I'll put the lockmanager changes in my branch for updated ffmpeg. \n. USE_LIBAVFILTER_VSRC_BUFFER_H is an invalid name for the choice. We use that header on updated ffmpeg too, but then the function has a different definition.\nThis must be a HAS_EXTERNAL_LIBAV instead of HAS_EXTERNAL_FFMPEG named define.\n. \"The old declaration of av_vsrc_buffer_add_frame() is in ffmpeg too, not just libav.\" If you check my links above, you'll see that that is wrong. Upstream ffmpeg has the updated version which matches our version checks.\nTo be honest, I think we should not support libav until we update our internal ffmpeg, then these version checks will mostly go away + current version of ffmpeg have a micro version which allows us to know the difference between libav and ffmpeg.\n. Don't spend more time on this. Put this in the patches for debian. We can re-address this after ffmpeg bump after eden.\n. Okey.. should we give this old one a new go perhaps?\n. Ouch that got way messier than i expected\n. I wonder if we should send that diff upstream to libav to show them how messy it get's to support both. Maybe they can be obliged to update libavfilter...\n. Anything that will reduce the diff to start with. Then we need to do some\ndetective work on the dropped patches from the ffmpeg update and verify\nwhat may be missing in libav.\nOn Apr 13, 2012 6:19 AM, \"Andres Mejia\" \nreply@reply.github.com\nwrote:\n\n@elupus BTW, went on #libav-devel. One of the devs, elenril, is going to\nadd in the avfilter_inout_{alloc,free} functions and buffersink. What else\nshould I ask about?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/629#issuecomment-5108232\n. This needs rework if it's going to go in, so closing for now. \n. This can't be needed for all cards. Software decoding is broken for hi10p\ntoo with our current ffmpeg version.\n. Well, neither of the patches disabled it for dxva or vaapi. If what you are saying is true, You should just set m_bSoftware = true;\n\nWould like some verification that that is the case thou.\nAlso these are hi10p too:\ndefine FF_PROFILE_H264_HIGH_10\ndefine FF_PROFILE_H264_HIGH_10_INTRA\ndefine FF_PROFILE_H264_HIGH_422\ndefine FF_PROFILE_H264_HIGH_422_INTRA\ndefine FF_PROFILE_H264_HIGH_444_PREDICTIVE\ndefine FF_PROFILE_H264_HIGH_444_INTRA\ndefine FF_PROFILE_H264_CAVLC_444\n. I think it looks good. If you could just rebase on current xbmc and squash the commits together to one commit then i can merge it.\n(you will have to do a \"push -f\" to re-push it to github after the rebase and squash.)\n. Oh crap Sorry..., was just about to merge, but this can only be done for H264 codec. profile numbers are not global. Could you add a check for codecid and re-push it? Otherwise i'll try to get that fixed tomorrow.\n. Hehe, look at the diff once and you'll see it'll crash directly with a null dereference. Change that pCodec to hints.\n. Shouldn't the hex change for R like the other keys?\nOn 2012 1 19 12:12, \"John Rennie\" \nreply@reply.github.com\nwrote:\n\nCorrect key mappings for FF and Rew multimedia keys in Linux\nYou can merge this Pull Request by running:\ngit pull https://github.com/jhsrennie/xbmc ffrew\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/639\n-- Commit Summary --\n- Fix handling of FF and Rew multimedia keys in Linux\n-- File Changes --\nM xbmc/windowing/WinEventsSDL.cpp (8)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/639.patch\n https://github.com/xbmc/xbmc/pull/639.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/639\n. I like it a lot. More app things should be done this way.\n. I fully agree with jmarshall here. The delay based on refreshrate should not go into dvdplayer at all. That is something that should be in RenderManager imho. You ask it, what output delay do you currently have (hmm wonder if we don't already have that).\n\nHDMI can technically provide a proper delay value here. Not that it is usable at the moment. I don't really mind having a way to configure delays based on refreshrates.\n. The av delay you set using that method is video specific av delay. If you look at https://github.com/xbmc/xbmc/blob/master/xbmc/cores/dvdplayer/DVDPlayerVideo.cpp#L1106\nWe already adjust for delay's caused by the usage of sync playback to display. We should add this extra resolution dependent delay there. Also, the renderer could technically incure additional presentation delay due to post processing. This could then also be taking into account in that function.\nAbove is why i think rendermanager should have a GetPresentationDelay() function which tells player how long after it asked to flip an image, the image is visible to user.\nThe code i referenced above, should then even be moved into that function in rendermanager since that is where the delay occurs.\nThe 24hz delay is as far as i know due to tv's enabling a bunch of extra post processing in that mode causing it to add a large delay on output. This is something the player should be told from renderer, not from settings.\n. If this is no delay then fix the issue, don't work around it...\nThat said, I know for certain my tv has a delay which is larger in some\nmodes. It has a game mode to reduce this delay. (I normally run at -200).\nSo tvs often impose a delay, which is exaggerated if audio is not routed\nvia the tv.\nAlso I think the diff would be smaller my way compared to this diff so\ndon't see it as more complex.\n. But now I get myself somewhat confused.\nWithout adjustment, is audio heard too early?\n. Note, i'm not really opposed to the setting (and i most definitely\ndon't want them hard coded)\nI just want it implemented in the best way. I for example would like\nto see us adding a gui way with some looping video which highlights\naudio sync to make it easy for people to correct it and have that part\nof the resolution calibration settings.\nAt the same time i would like to leave the door open for automatically\ndetecting from HDMI.\n. Ok: So i propose.\nAt: https://github.com/xbmc/xbmc/blob/master/xbmc/cores/VideoRenderers/RenderManager.cpp#L246 \nDo the whole code you just did in SetGlobalAvDelay() based on selected resolution. (ask for resolution from renderer by GetResolution()). Store it away.\nAdd function to rendermanager which returns this stored delay value.  \nAt: https://github.com/xbmc/xbmc/blob/master/xbmc/cores/dvdplayer/DVDPlayerVideo.cpp#L1106\nCorrect pts by this calculated value. g_renderManager.GetDelay().\nAnd as a bonus point (as a separate commit). Mode the current code from DVDPlayerVideo.cpp#L1106 to this new function in rendermanager.\n. I already had something very similar in my hdmv blueray branch cued up for\nafter dharma. Structure instead of flags since I needed more options.\n. Well the point was to pass along the content type directly without need to if(this) if(that).. I don't mind the flags approach per say, just the struct idea give us more options in the future.\n. My code need the scanning content type, so the flags wont do. Would be\nnicer to get the structure in directly. Can't you combine the two.\nStructure in the lower layers at least. Then I don't have to rework same\ncode, just add the content type.\n. Mask into that too IMHO. But yea that will be fine.\nOn Apr 6, 2012 12:18 PM, \"jmarshallnz\" \nreply@reply.github.com\nwrote:\n\nYup - I wasn't clear.  What I meant was:\n{{{\nstruct Hints\n{\n Hints(int f) : flags(f);\n int flags;\n};\nbool GetDirectory(const CStdString &path, const CStdString &mask, const\nHints &hints);\n}}}\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/658#issuecomment-4993354\n. Seems good to me.\n. Fine by me.\n. Vcd file names have very distinct names, so we could potentially still\nallow them.\n. Nice, will try to test this, but i'm fully for the change so if it has bugs, we can always fix it later.\n. So now this caused another issue... Filenames are always cleaned if that setting is enabled independend on if stacking is enabled. So even if a folder is not scanned into library, extensions are removed and filenames cleaned. For example \"MPEG-TS\" folder shows up as \"MPEG\" \n\nFilename cleaning still needs to be tied to stacking. And i really really don't think this setting should be enabled by default.\n. Ps.. i still think usage of library titles should be tied to the stacking toggle. I can see the point of getting nice names in folder view, but there has to be a simple way to get real file names back.\n. Well, for me that happen to know that the setting \"Use library titles for filenames\" is what replaces file names in folders which i have not scanned or ever touched before, that might be okey. And I got mightily confused at first trying to find a folder.\n. Folder name contain movie title\n. Sounds pretty good\n. Looks good.\n. @cptspiff  Do we really need the islocalnetwork check? Given that seeking in ftp is such a mess, helping it out with a cache most likely always makes it better.\n. Force is wrong.. These are not forced subs. If subs are disabled they\nshould remain disabled.\n. +1\n. \"this event has to be fired without holding m_pExecuter->m_critSection\"\nWhy? Should be enough to just leave section after setting the event? \n. I think we should probably set abortRequested + raise\nKeyboardInterrupt exception only in main thread. Otherwise scripts\nneed to keep polling abortRequested which will take quite a while.\nThen wait 5 secs for stop and then raise SystemExit in all threads.\n. keyboardinterrupt is the same as Ctrl+C for a normal python process\n(and can be caught if wanted). Polling is silly since it just causes\npointless cpu usage.\n. Current behavior is \"kill em all\".. It throws SystemExit exceptions which should not be catchable in all threads (ie the setting of abortRequested is nothing plugins have a chance to react on). So setting abortRequested and throwing a KeyboardInterrupt exception in main thread is much much nicer.\n. They can shut down perfectly fine by catching the exception. Which should\nbe normal python practice.\nThe change in behavior is minimal (the forced system exit is has been there\nfor a while) and most scripts don't need to shut down cleanly. And hanging\ngui for 5 seconds is ugly.\n. If they don't catch it, it should also abort though.\n. Why does it need to shut down propererly? Isn't closing the sockets enough?\n. I can live with it. Just really dislike polling loops.\n. Looks much better. I have some comments thou.l\n. @bobo1on1 thoughts?\n. It should be based on refresh rate. We are working around delays in the tv\nthat differ based on refreshrate.\nI think the reason it differs is that the delay in the tv is in number of\nframes not time.\nThus maybe it would have worked better with a global setting for number of\nframes delay.\n200ms at 24hz is about 5 frames\nAt 60hz, 5 frames would be about 80 ms.\nSo a setting of 5 might accommodate all resolutions.\n. If it's a bug, then fix the bug don't add workarounds......\nGetResolution on renderer after configure should give you what you need.\n. Would be interesting if you can test mplayer with opengl rendering. (-vo\ngl). It probably exhibits same issue.\nI'm getting quite confident its a number of frames delay on output. First\nin gfx then in TV. Since 24hz more than doubles this effect compared to\n60hz it explains why people mostly notice it on 24hz modes.\n. Everyone except me.... On Intel gfx. But again could you check mplayer with\n-vo gl. It could be opengl/d3d related.\n. PVR could make use of it as well. I really would like to see\nfilesystem/stream plugins in python. I'm not sure what overhead it would\nincure for a filesystem thou\n. Default stream for audio for example is normally native language.\nSo we better have an option for making that top prior.\n. Can't we combine the settings? Make it possible to select language \"Original\" instead of an explicitly set language? Think that would make more sense.\n. I technically want to avoid another setting. But I thought we already had a setting for dvd language, but seem we piggy back on GUI language so another setting is probably appropriate.\nThis causes a bit of an issue thou. I for example (and many other swedes) run xbmc in English, but if we ever want subtitles we'd most likely want them in Swedish. Ie not gui setting.\nI think we should have two scroll boxes for \"Prefered Audio Language\" and \"Prefered Subtitle Language\", these should contain languages + a gui language option and a original movie language option.\n. In international i think.\n. Yea i think GetDVD(Audio/Menu)Language is rather pointless after this. GUI language seems fine by me in the situation that you don't want the movies native language.\nI didn't check,but is FORCED still handled? It need to select that stream if subtitles are turned of.\n. If it doesn't find the menu in given language it will default to\nsomething. I think it's fine that people that want separate language\nfrom gui need to specify that.\n. No major complaints from my side\n. Std::stable_sort :-)\n. Montellese, if you don't want to sort items that are different then i don't understand what it is doing. For std::sort_order you define what different is. So if you want order preserved it will be preserved. \n. I don't see this as blocking btw. It's not especially complex code, so it's fine as it is with the sorting.\n. I just had to give it a go on the current code. I think adding that CSelectionStream::Get(type) returning a vector of all the  streams make sense anyway.\n```\ndiff --git a/xbmc/cores/dvdplayer/DVDPlayer.cpp b/xbmc/cores/dvdplayer/DVDPlayer.cpp\nindex 3658921..4c1a9ae 100644\n--- a/xbmc/cores/dvdplayer/DVDPlayer.cpp\n+++ b/xbmc/cores/dvdplayer/DVDPlayer.cpp\n@@ -116,6 +116,25 @@ SelectionStream& CSelectionStreams::Get(StreamType type, int index)\n   return m_invalid;\n }\n+std::vector CSelectionStreams::Get(StreamType type)\n+{\n+  std::vector streams;\n+  int count = Count(type);\n+  for(int index = 0; index < count; ++index){\n+    streams.push_back(Get(type, index));\n+  }\n+  return streams;\n+}\n+\n+static bool PredicateAudioPriority(const SelectionStream& lh, const SelectionStream& rh)\n+{\n+  if(lh.channels > rh.channels)\n+    return true;\n+  if(StreamUtils::GetCodecPriority(lh.codec) > StreamUtils::GetCodecPriority(rh.codec))\n+    return true;\n+  return false;\n+}\n+\n bool CSelectionStreams::Get(StreamType type, CDemuxStream::EFlags flag, SelectionStream& out)\n {\n   CSingleLock lock(m_section);\n@@ -630,34 +649,16 @@ void CDVDPlayer::OpenDefaultStreams()\n        * If there is more than one audio stream and a valid one is not chosen yet, select the one\n        * with the maximum number of channels or the best codec if the same number of channels.\n        */\n-      int max_channels = -1;\n-      int max_codec_priority = -1;\n-      CStdString max_codec;\n-      int max_stream_id = -1;\n-      for(int i = 0; i < count; i++)\n-      {\n-        SelectionStream& s = m_SelectionStreams.Get(STREAM_AUDIO, i);\n-        if(s.source == STREAM_SOURCE_DEMUX) // Only demux streams\n-        {\n-          int codec_priority = StreamUtils::GetCodecPriority(s.codec);\n-          if(s.channels > max_channels\n-          ||(s.channels == max_channels && codec_priority > max_codec_priority))\n-          {\n-            max_channels = s.channels;\n-            max_codec_priority = codec_priority;\n-            max_codec = s.codec;\n-            max_stream_id = i;\n-          }\n-        }\n-      }\n-      if(max_stream_id >= 0)\n+      std::vector streams = m_SelectionStreams.Get(STREAM_AUDIO);\n+      std::stable_sort(streams.begin(), streams.end(), PredicateAudioPriority);\n+      for(int i = 0; i<streams.size() && !valid; i++)\n       {\n-        SelectionStream& s = m_SelectionStreams.Get(STREAM_AUDIO, max_stream_id);\n+        SelectionStream& s = streams[i];\n         if(OpenAudioStream(s.id, s.source))\n         {\n           valid = true;\n           CLog::Log(LOGDEBUG, \"%s - using automatically selected audio stream (%d) based on codec '%s' and maximum number of channels '%d'\",\n-                    FUNCTION, s.id, max_codec.c_str(), max_channels);\n+                    FUNCTION, s.id, s.codec.c_str(), s.channels);\n         }\n         else\n           CLog::Log(LOGWARNING, \"%s - failed to open automatically selected audio stream (%d)\", FUNCTION, s.id);\ndiff --git a/xbmc/cores/dvdplayer/DVDPlayer.h b/xbmc/cores/dvdplayer/DVDPlayer.h\nindex 963de24..f03ef34 100644\n--- a/xbmc/cores/dvdplayer/DVDPlayer.h\n+++ b/xbmc/cores/dvdplayer/DVDPlayer.h\n@@ -138,6 +138,9 @@ public:\n   SelectionStream& Get     (StreamType type, int index);\n   bool             Get     (StreamType type, CDemuxStream::EFlags flag, SelectionStream& out);\n\nstd::vector Get(StreamType type);\nstd::vector GetSorted(StreamType type);\n+\n   void             Clear   (StreamType type, StreamSource source);\n   int              Source  (StreamSource source, std::string filename);\n```\n. AAC is probably worse since it can't be passed through.\n. After some pondering. This fully take care of the default audio stream selection too: so i updated the patch: http://paste.ubuntu.com/968682/\n. It could take care of putting previously selected on top too i think if the SelectionStream struct contained the original index of the audio stream. Ps. this is fully untested currently.\n. Soo.. apperently i was a bit bored: http://paste.ubuntu.com/968721/\n\nExtended it to support video and subtitles too. If we just could get that damn previously selected piece in there too it would end up quite clean.\nIt should be easy to extend those predicate functions what you need in this pull request to select the right track.\n. Still bored it seems, so more complete version that also handles selected stream: http://paste.ubuntu.com/968886/\n just in the process of some testing.\n. Oh right. It needs some equal checks. Forgot that. Will check how to solve\nthat.\n. http://paste.ubuntu.com/970327/\n. That is separate pull.\nOn May 8, 2012 1:32 PM, \"da-anda\" \nreply@reply.github.com\nwrote:\n\nMontellese, would it be an option to detect and use the language of the\nfirst audio-stream found in the file when no specific language was\nspecified in the GUI settings? So that when the setting is \"original\" that\nit checks for the stream in the best quality but limited to the language of\nthe first stream (if defined)? It actually doesn't make sense to pick just\nany stream quality not taking the language into account. Or should this go\ninto a separate PR in your eyes?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/700#issuecomment-5572535\n. Fully valid. Anybody merge this.\n. This should be fixed upstream ffmpeg. If it has been fixed there\nalready, backports of their commits would be much better.\n\nSince it could also break other sources, i'm a bit hesistant unless\nit's okeyed upstream.\n. You talked to the libav guys not ffmpeg, but they are similar enough still.\nWill look at the patch, but I suspect it will have to wait until after\neden.\n. Ok, so this is a backport of the upstream fix and you've tested it and it works? It looks reasonable.\nI would need to verify what other rtsp changes might have gone in to ffmpeg/libav since this change so this doesn't break other streams. \n. After we got the ffmpeg update merged. Which I'm hoping will be soon.\n. Yup, but I've apparently forgot about it again. Will try to remember it for\nnext window.feel free to bump it if I have forgot it by then.\n. I'm on vacation for two weeks, will not have computer access. @cptspiff can\nyou look quickly,then merge?\nOn Aug 1, 2012 11:13 AM, \"Tommy Winther\" \nreply@reply.github.com\nwrote:\n\n@elupus 1st of the month and a friendly reminder from me :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/708#issuecomment-7422159\n. Thanks!\nOn Aug 4, 2012 7:05 PM, \"Arne Morten Kvarving\" \nreply@reply.github.com\nwrote:\ndone in b5cf00aec8feec1629b8cba992c9decc9d51a75c\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/708#issuecomment-7503877\n. GetGlobalAudioDelay() is wrong... This is a VideoOutputDelay, otherwise we should never have put it in rendermanager. \n. Just delay by itself is ambiguous, so it should be qualified by something\nyea.\n\nMaybe VideoOutputLatency instead of delay. But VideoOutputDelay is fine too\nthough.\nWe are not adding a delay to audio, we are specifying the delay the video\noutput imposes before a presented frame is visible to viewer.\n. I really don't understand why we should specify negative values.. The normal case is that output has a latency. This is what we should be specifying (That's why i said VideoOutputDelay/Latency). But i won't stress this...\nHowever, I don't want rendermanager to return values in DVD_TIME_BASE units. That is something very internal to dvdplayer. Have it return in seconds and do the convert to dvd timebase in dvdplayer.\nThen squash all these commits into one, rebase on master re-push forced to same branch and i think we are just about there.\n. Was just about to say \"Looks good to me\". Then i noticed display latency is only updated in Recover(). The value must be updated in PreInit too. Othewise the delay won't take effect when no resolution switching at all occurs (it is possible that function is accidentally called on startup of xbmc now, but that isn't really guaranteed).\nOtherwise it looks quite nice.\n. Fine by me\n. This doesn't look right. the Time Map is based on the program chain cells, not on absolute sectors as far as i know. That is why it's written the way it is.\n. Actually i think you are right about this one...\n. I wonder if (vdp_st == VDP_STATUS_DISPLAY_PREEMPTED) really should set it in LOST state. Shouldn't that directly set it in RESET?\n. Think you have a better grasp on that code than me. It was just something I\nnoticed.\n. I really want to get this code out of DVDPlayerAudio.cpp into helper classes. That file is way to large already.\n. The old code should be exact, I need a reason why it isn't.\nAlso, the changes outside codec is not okey. Any fixes should be in the\nvalue of convergence count.\n. The problem with h264 is that it doesn't need to have any keyframe at all.\nBut I agree it should probably not always reset convergence count. Should\njust be capped at some value.\nIf ffmpeg decode reduces the count. That means we just decoded a keyframe.\nSo we have a recovery point. Shouldn't matter what HW says after that. We\ncan always recover with the previous convergence count packets.\n. So I've pushed a bump to 2 + b_count and a fix for h264 which was completely broken since the change to not wait for keyframes on it.\nFor reference, has_b_frames indicate the stream delay. A frame can have references to a previous frame and/or to a future frame. has_b_frames indicate how many future frames maximum a frame can have references too.\nSo when we get a keyframe output, the packet that contained that keyframe could have come from has_b_frames packet back. That is why that variable is used.\n. Looks good to me.\n. Not really, but why is there no enable(true)\n. I'm OK with the change if gui sounds work after playback stop again.\nBut for reference we already do this before starting audio renderer, I\nwonder why that isn't enough. I'm thinking it could be that we don't wait\nfor something to complete.\n. \u00c4n alternative could be to do it before the retry on busy.\nOn 2012 2 27 20:07, \"Rainer Hochecker\" \nreply@reply.github.com\nwrote:\n\nfixes audio pass through problems like \"device busy\" on Linux.\n@elupus\nnewphreak has tested this and it resolves his issues. To be honest, I\ndon't know exactly what has been the problem, just tried the same solution\nwhich has been done for Apple. Seems to work.\nYou can merge this Pull Request by running:\ngit pull https://github.com/FernetMenta/xbmc mainline2\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/735\n-- Commit Summary --\n- linux: disable gui sounds before starting player\n-- File Changes --\nM xbmc/Application.cpp (4)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/735.patch\n https://github.com/xbmc/xbmc/pull/735.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/735\n. Then it's likely a pulse audio update that broke it for them. When sdl\nmixer disables, I suspect PA holds on to the device for a short bit.\n\nIt is possible that on a ebusy error we should retry a few times with a\nsmall delay in alsa renderer.\n. We must be doing something wrong when deiniting gui sounds then.\nI'm fine with first patch for eden though.\n. Shouldnt the user agent be url encoded? The slash in there looks dangerous.\nOn Feb 28, 2012 11:07 PM, \"Memphiz\" \nreply@reply.github.com\nwrote:\n\n...reated in this special situation. (curl problem?).\nThis fixes a airplay regression introduced in b2. When using AIrPlayServer\napp with live conversion it sends us a http url like:\nhttp://172.22.26.3:45631/live-playback-2.4.0/index_2ead02b4-ae40-48cd-894e-633b77d40b82.m3u8\nAirplayServer trys to play it in XBMC with user-agent added:\nhttp://172.22.26.3:45631/live-playback-2.4.0/index_2ead02b4-ae40-48cd-894e-633b77d40b82.m3u8|User-Agent=AppleCoreMedia/1.0.0.8F455(AppleTV; U; CPU OS 4_3 like Mac OS X; de_de)\nPlayback bumps out with:\n22:39:43 T:2953850880   ERROR: OpenDemuxStream - Error creating demuxer\nWithout useragent it works.\nCptSpiff maybe you have any idea what might be wrong?\nI've tried with command line curl with and without set useragent - i\nallways got the m3u8 - i tried with the file url inside of the m3u8 and on\ncommadnline i also allways got the movie data. Its just not working in XBMC.\nYou can merge this Pull Request by running:\ngit pull https://github.com/Memphiz/xbmc airplayfix\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/744\n-- Commit Summary --\n- [AirPlay] - fix - don't set user-agent for m3u8 urls. Demuxer can't be\n  created in this special situation. (curl problem?)\n-- File Changes --\nM xbmc/network/AirPlayServer.cpp (5)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/744.patch\n https://github.com/xbmc/xbmc/pull/744.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/744\n. Just pass a flag in the call to processor :: render. If rendermanager is\nbobbing renderer is called with top orbottom field flag so rendered also\nknows.\n. I'll leave this up to crystalpt, one note though. Playback can shift from\ninterlaced to not every frame. It must thus not be slow to switch when in\nauto..\n. Looks good to me.\n. After you fix indentation (four spaces), I'm fine with this.\n. Yes, now just one more thing :) \n\nSquash these two commits together and force push again.\n. Git rebase -i origin/master\nChange last commit to squash save and close editor.\nCheck that all is still correct.\nGit push -f [the name of your GitHub remote] [The name of your local\nbranch, possibly master if you forgot to create a branch for these\nchanges.] [The name of the branch on GitHub, likely same as the local\nbranch, if so can be ommitted  ]\nI'm of skiiing so can only do stuff on my mobile. If you want this in the\nrelease you must get this sorted yourself.\n. Not sure I follow. I don't think we should get to opening filters when he\ndecode.\n. Haven't looked at code, but my memory says that setfilter only sets up a\nrequested next filter, which will be opened after first frame has been\ndecoded.\nIf so it should have a hardware by the time we are about to open filter and\nknow not to.\n. This may be what you had initially, but now that I think I understand the\nissue, put the check for hwdecode inside FilterOpen, at some point we may\nsupport passing the filter configuration to the he decoders.\n. Just hold of on this. I'm rewiring stuff here for the ffmpeg update.\n. Fine by me.\n. Seem reasonable, didn't review thoughrougly. Not sure it's eden ok.\n. Ok, go ahead for Eden.\n. Looks pretty cool.\n. I suppose i can live with the gui setting controlling the order. But it seem a bit silly.\n. Drop the commented out code and rebase on master + squash to one commit. I still ponder if i like that display settings in xbmc will affect how upnp items are served, it will confuse a lot of people and make handling bug reports much harder.\n. Looks good.\n. It calls whatever the dvd considers next/prev does. It's up to the virtual machine on the dvd to decide\n. Hold off on stuff like this until we have https://github.com/elupus/xbmc/tree/ffmpeg_0.10.2 merged.\n. As a backport for Eden maybe.. But otherwise, feel free to test out: https://github.com/elupus/xbmc/tree/ffmpeg_0.10.2\nAnd fixup any API problems with external ffmpeg.\n. Hmm.. avutil.h includes mathematics.h so this shouldn't be needed.\n. I intend to re add the patches. Have it all in my ffmpeg fork.\nYea there are some broken steps in there, but hard to handle without a\nsingle large commit.\n. If you check my ffmpeg branch xbmc_0.10.2 on github the patch series is\nontop there.\nI must admit I have lost track somewhat of why and when patches was\ndropped. Was very long ago that I started this update.\n. Also it was actually fully build-able for the ffmpeg_0.9 series update (or perhaps it was 0.8) i had before. Not tested status on that in this series.\n. Git submodules and our own ffmpeg branch makes sense to me. But I've just\nabout only heard bad things about git submodules so I'm not sure.\nWe would be rewriting history on that alot though since we always want to\nrebase our commits in each update. May not be a huge problem.\nI will try to restore the patch series. Will be a bit tricky thou since\norder have changed.\n. First crude update with the patch series updated. I'll see if i can go throught it and split out the patches that are no longer needed. This is still WIP. but it's getting there.\n. The submodules will point to a specific rev, and that rev number is part of\nxbmc, so it should work fine.\n. I meant the hash number will be stored versioned in xbmc and update when\none bisect, but will refer to a revision of the child repo. Ie the chars\nstored in xbmc doesn't refer to a revision of xbmc.\n. Sorry, should have checked it before pushing. I'll make sure it works on\nWindows before pushing again.\n. Okey, now this builds and works fine on windows. \nWould be nice if we could get some small tests and see what regressions we have.\n. Could you post a log of the failing DXVA?\n. Could you try and revert the following: http://pastebin.com/rg0imEj9\nshould be possibly by:\ngit apply --reverse --directory=lib/ffmpeg file.patch\n. didn't seem to help here. think i managed to revert the commit. It hangs on some weird critical section but can't get a backtrace. @CrystalP would be nice if you could help out here.\n. It works fine for mpeg2 it seems.\n. Okey.. multi threading causes the lockup. Something in how threading is handled with hwcodecs makes it break down.\n. Okey, so the DXVA2 and VAAPI issues are resolved. I suspect we should do a quick update again reasonably soon. Either to master, or 0.11 if that ends up being out.\n. Is it all transcoding that fails or just some specific case? If just some\ncases, I don't think it should be blocking.\n. @wsoltys  Could you get me that wma pro file?\n. Think i have a fix for both issues already\n. Thanx for the pointer @burriedu2, could you test if above patch resolves the issue?\n. Yea the fixes wont hurt Eden.\n. Ok, it apperently has more than 100 streams. (rather strange to start with, but we should handle it gracefully)\n. Nice idea. Could be usable for the upnp server too. There are security\nimplications I suppose if allowed from.webserver for any file. But can't\nthink of exactly what right now.\n. Imho we should never change aspect ratio on any image. So the\nwidth/height given will be outer bounds. But i suppose that could be a\nflag.\nFixed sizes is not easier than arbitrary, so i see no benefit there.\n. m_mapCdInfo.find(strDevice); is now accessed unprotected in some calls and get added in other so that won't work too well.\nI think you need to perhaps add a separate lock for the calls into libcdio and avoid at all cost doing calls into that from any gui threads.\n. Just make sure you never hold the other lock when you call into something taking cdio lock. \n. -1 on new settings. That also is a -1 on advanced settings. Imho we should just bump the bitrate limit on the CFileCache to something more than 1 mbit above video.\nJust setting it at 5mbit above video aught to be fine.. Means we have 5mbit per second of video playback. Thus after 3 seconds of intro it should cope with a 15mbit increase in video.. that shouldn't happen often.\n. Sane idea. Some things. Could you avoid the rename of AcceptsData() to IsFull(). Also split out the removal of WaitForBuffer(). I thought it was used, but seems it's not. There are some cosmetics in there too (rename of m_iMaxDataSize )\n. Const the shit out of it. :-)\n. Yup go ahead. While I don't really like the time vs size handling I don't\nknow of a better solution right now.\nOn Apr 4, 2012 5:32 AM, \"jmarshallnz\" \nreply@reply.github.com\nwrote:\n\ngo for it.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/835#issuecomment-4946699\n. Christ that made the diff of this thing grow... I suppose the first 2 commits are really quite separate since they are mainly refactoring.\n. @CrystalP could you give this a whirl on windows with dxva? Just want to make sure i didn't break anything there.\n@davilla A test on OSX would be nice\n. No not really. Will give linux a go later. Tested on win last time I worked\non it. Can have missed something.\n. S\u00e5d\u00e4r, hade blivit en dr\u00f6s buggar i senaste rebasen.. @davilla nu f\u00e5r du g\u00e4rna f\u00f6rs\u00f6ka igen.\n\n@CrystalP har inte gjort n\u00e5gra speciella benchmarks, men det borde hj\u00e4lpa en del. Det skippar en memcpy med shift p\u00e5 varje byte.\n. lol.. i wonder why i wrote that in swedsh.. A translation might be in order:\nThere we go, had managed to introduce a bunch of bugs in the last rebase.. @davilla feel free to give it a try again.\n@CrystalP havn't done any real benchmarks, but it should help some. It skips a memcpy with a shift on each byte.\n. Depends on if dxva processor can handle it. Our 10 bit data is stored in\nthe lower bits of a 16bit value. So one might need to scale it. If that\ncan't be done on gpu, its rather pointless.\n. Right. I knew there was something with that.\n. @CrystalP could you give it a go again?\n. Okey, so I've rebased and squashed in changes to their rightful place. Should be ready to go I think. Still needs a test on GLES platforms thou.\n. what format was that? doesn't seem to be a text file?\n. Thanx @davilla, have incorporated the changes. Noticed some ordering errors that would cause bisecting errors. I think they should be bisectable now (have not tested thou)\nI think this should be ready to pull now. \n. I intend to merge this in a day or two. I'll look at that copy & paste regarding profiles later and factor it out into DVDCodecUtils most likely.\n. That profile change is technically separate from this pull request and could have been applied before this goes in. But it can go in with this pull too.\n. What in it is it that fixes 2?\n. My only hesitance is the include of xrandr stuff in the header file. It will get pulled in pretty much everywhere.\n. @bobo1on1 @theuni @cptspiff  i need some comments here.\nWe are already rather broken on multi display setups, i'd rather not break it furhter.\n. Imho... Can't we just drop the SDL path completely? Less ifdeffery and it's something we have wanted for a long time.\n. @bobo1on1 probably should have a look at the ref clock things\n@FernetMenta i assume you intend to squash some things together in this series. See some squash comments and some fixes on previous commits. Apart from some things i'm liking the look of it.\n. I've started refactoring this series a bit.. Nothing major, mainly squashing things and moving hunks between commits, then i'll try to resolve some of the comments i've made above. Will post a branch later. Just wanted to let you know so we don't do double work.\n. So i've done some restructuring of this series. Split some commits modified some things added some things that should be squashed later: https://github.com/elupus/xbmc/compare/dropsdl\nThere is not much changed compared to your branch in the final diff: http://paste.ubuntu.com/1076449/ but i've squash some things together and moved hunks between commits to keep it a bit more logical.\nI'll probably keep on working on the first parts of this. The SDL -> X11 change, to try to finalize to get in. But would be nice if you could swap over and work on this series as a base instead.\n. Ok will drop the code.\nRegarding the grabbing of input, i assume you just copied SDL in that\nregard. It sadly brakes a least the bahavior of Unity in re-activation\nof the window after it has lost focus. I think we should be using\n_NET_ACTIVATE_WINDOW if we want to do this on fullscreen.\n. > Right, I started with the SDL code and changed it a bit. The parameters of XGrabPointer are different to allow the mouse leaving fullscreen XBMC. LeaveNotify triggers an ungrab. I agree, this is still ugly and __NET_ACTIVE_WINDOW seems more elegant. Will you do?\nI will try to. Will separate out the code that grabs keyboard and\ninput. Seem to work fine without it.\n\nIs the current code broken? I have been testing with Unity (mostly 2D) and did not notice.\n\nYes, if you fullscreen on a Unity screen where you have the sidebar\nvisible, then leave and re-enter. The sidebar keeps on covering xbmc\nsince Unity is not getting the event that activates xbmc and hide the\nsidebar.\n. I'll keep working on it some more i think. I have some more stuff i want to change, then I'll open a new pull request. This one has ended up rather off topic from it's original intent.\n. Hold of on those things for now. Still reworking multi display handling. I\nwant to keep it in line with the other architectures.\nGetting messy though, so might give up and just update the other arches\ninstead.\n. So i've tried to rework this a bit: https://github.com/xbmc/xbmc/pull/1175 let's continue this on that pull request since this has got a bit off topic.\nNote, i'll probably force push that branch again. Some of these commit should still have your name in them since you are the majority author and we are likely to find more bugs.\n. Drop the back compat. We have major 54 internal, we won't support older\nexternal.\n. Atleast i think 54 was what it was updated to.\n. Fine by me.\n. Why does that help? If you find that out it aught to explain why it goes\nwrong.\n. It's an imported external library, so I'd rather not change cosmetics in\nit.\n. Also, please keep stuff like this in one pull request with separate commits.\n. I never really said it was okey to merge this....\nNot a big deal on this specific change, but I really would prefer if you\nwait until I say \"go ahead and merge\" or I merge it myself when it concerns\ndvdplayer......\n. No, it's fine. I was just thinking of a better way of decrementing than\nnumber of streams, but have not come up with anything.\n. You really need to split this up in separated changes. It's quite impossible to review like this.\nFor example changes in renderer like:\nAdd feature more than 3 buffers\nUse feature more than 3 buffers for vdpau\n. For example, the whole new logic for dropping support should absolutely be a separate commit.\n. It was held back by being very vdpau oriented, not taking all other paths\ninto account. But I havnt looked at it in a while and I might have changed\nmy mind.\n. We really need to do this pull in two steps. The changes to rendermanager and queueing and the vdpau stuff. \nI have not real opinion on the vdpau stuff internally, i'll leave that up to somebody who knows it.\nBut I do have opinions on the rendermanagers and the codec interfaces in dvdplayer. I really do think it's a good idea to allow queuing of frames in rendermanager/ renderers so we should start working on that as a separate pull.\nNote I want queueing working for non HW accel rendering too, maybe it already does with this pull i'm not sure.\n. Yea.. i sort of agree. Doesn't really hinder it being added as a virtual file system. For example, when we start playback on an item, we do a getdirectory request on it, if that returns elements we pop up a dialog with the result of that.\n@jmarshallnz , @cptspiff thought?\n. Well, combining it with the resume file dialog would make a lot of sence.. Seeing as that would pop up after otherwise.\n. Ok, so comments but the define addressed. Looks much nicer now with the GuiDialogSelect instead. \nThe scanning hints change can now be skipped, since nothing is really using it. Not sure it was a good idea anyway.\n@JezzX this is going to need some skinning work too. Seems GuiDialogSelect is very geared to addons it seem. The fileitems added to it have filesize and runtime. I'm not sure what else i might be able to extract about them yet.\n. Sadly there are no english names. So it will just list:\nMain Title 1\nMain Title 2\nMenus\nAll Titles (subfolder)\nThen in All Titles:\nAll Titles/Title 1\nAll Titles/Title ...\nAll Titles/Title XX\nBut they do have possible metadata like duration and file size and possibly even video codec/audio codec and stuff like that.\n. So this is a alternate solution for this. (note the content type commits you can technically ignore, suppose they can be dropped). It will pop up a dialog for selection when a movie is tarted.\nI'm far from happy with this thou as there is no good way to find all paths that we can start playback. With this, play from favorites, won't show dialog for example.\nDon't like the idea of duplicating code for that. Any ideas on how to handle this @cptspiff ,  @jmarshallnz ?\n. Ok. I think this is pretty much ready to go as a step in the right direction at least. \n. Looks okey for eden.\n. Looks good. I only have a small nit.. I really hate rate[M]ax naming style. I would like to keep dvdplayer free from any additions of it.\nKeep it as the struct named them.\nPs.. thanks for the split of commits, but if it's easier i don't mind this being squashed to one.\n. Feel free to merge this after you've renamed the variables.\n. Thanx\n. Hmm.. I wonder. Don't remotes already have stuff mapped to\nskipnext/previous? if so, i don't think it makes sense to map this to?\n. Fine by me. Let's see if anybody screams :)\n. @amejia1 So here we come to the next libav issue. They have not merged back libswresample... \n. @aballier don't take above as me not wanting to merge this. I really do.\n. How utterly stupid..\n. Would be nice to get this pull request updated. Either to libavresample or libswresample\n. The m_bInMenu change is wrong. Also this needs a separate patch which adds the patch file for the change. Also i would really like a sample dvd menu for this issue so i can get this resolved upstream.\n. Fixed in a way that doesn't need hacks in ffmpeg at 4f2e1686eafa6528fcd58326ba619f8253bb6663\nI so hated the old solution to this so I had to go and fix it in a better way :). Thanx for figuring out what the issue was.\n. - return button has not been mapped to anything. It's a nice an convenient button on samsung remotes. map to MENU?\n- PRE-CH button is not mapped to anything.\n- nothing was mapped to context menu (title button on old xbox remote) possibly map DOT\n- osd during video playback is oddly enough mapped to menu button instead of title, so sadly both are required. This really should be fixed to they are the same button.\n. Whatever happened to this one?\n. In general, small changes like this is okey to commit by yourself. That said, it never hurts to add a pull request to allow people to comment on the change before you push it especially if you are touching code base that you didn't develop or normally maintain.\nFrom my perspective this looks fine, but i think you know better.\n. Looks pretty good to me. Just wondering, if all 64bit values has changed, wouldn't it cleaner to just change receive_long_long instead of adding that function pointer?\n. Nah, go ahead.\n. I'm not against this at all. But.. do we really need to drop swscale? That seem utterly silly to replace with anything else.\n. Include it where it is used not in some global header.\nOn May 1, 2012 2:33 PM, \"huceke\" \nreply@reply.github.com\nwrote:\n\nIn file included from OverlayRenderer.cpp:26:0:\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:\nIn copy constructor 'CDVDOverlayImage::CDVDOverlayImage(const\nCDVDOverlayImage&)':\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:47:54:\nerror: 'malloc' was not declared in this scope\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:\nIn destructor 'virtual CDVDOverlayImage::~CDVDOverlayImage()':\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:66:23:\nerror: 'free' was not declared in this scope\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:67:29:\nerror: 'free' was not declared in this scope\nIn file included from OverlayRendererUtil.cpp:23:0:\nOverlayRendererUtil.h: In destructor 'OVERLAY::SQuads::~SQuads()':\nOverlayRendererUtil.h:48:16: error: 'free' was not declared in this scope\nIn file included from OverlayRendererUtil.cpp:24:0:\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:\nIn copy constructor 'CDVDOverlayImage::CDVDOverlayImage(const\nCDVDOverlayImage&)':\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:47:54:\nerror: 'malloc' was not declared in this scope\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:\nIn destructor 'virtual CDVDOverlayImage::~CDVDOverlayImage()':\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:66:23:\nerror: 'free' was not declared in this scope\n/opt/xbmc-bcm/xbmc-rbp/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlayImage.h:67:29:\nerror: 'free' was not declared in this scope\n/opt/xbmc-bcm/xbmc-rbp/xbmc/utils/CharsetConverter.h: At global scope:\n/opt/xbmc-bcm/xbmc-rbp/xbmc/utils/CharsetConverter.h:84:1: warning:\n'g_charsetConverter' defined but not used [-Wunused-variable]\nYou can merge this Pull Request by running:\ngit pull https://github.com/huceke/xbmc linux-compile-fix\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/913\n-- Commit Summary --\n- [linux] fixed compile error. malloc/free is defined in stdlib.h\n-- File Changes --\nM xbmc/linux/PlatformDefs.h (1)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/913.patch\n https://github.com/xbmc/xbmc/pull/913.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/913\n. You free something twice.... And I thought this got freed by close input\nstreams auto.\nOn May 1, 2012 6:38 PM, \"huceke\" \nreply@reply.github.com\nwrote:\nYou can merge this Pull Request by running:\ngit pull https://github.com/huceke/xbmc ffmpeg-memory-leak\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/915\n-- Commit Summary --\n- [ffmpeg] fixed iocontext memory leak. checked with valgrind\n-- File Changes --\nM xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxFFmpeg.cpp (6)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/915.patch\n https://github.com/xbmc/xbmc/pull/915.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/915\n. You are freeing a value allocated by a new CDVDVideoCodecFFmpeg(). It can NOT be freed by av_freep.\n. I don't care what valgrind says here. It's either wrong or this is the wrong way to \"fix\" it.\n. This is what ffmpeg does:\n\nAVIOContext *pb = (s->iformat && (s->iformat->flags & AVFMT_NOFILE)) || (s->flags & AVFMT_FLAG_CUSTOM_IO) ?\n                       NULL : s->pb;\nIf pb is non null it will free it. It will set AVFMT_FLAG_CUSTOM_IO on open, so we should indeed be freeing the iocontext. But it's only the first call you did that is valid.\n. EncoderWav?\n. I'm not sure about the removal of header guards in favor of pragma once.. seem unrelated. \n. Apart from that i thin its a nice change.\n. Looks pretty nice\n. With above two fixed, looks good to me.\n. I can live with the changes for now. I want the osx hacks in dvdplayer\nremoved, but we can get that solved later.\n. I would like to get this in this merge window if possible. But would need some testing on opengl, have only tested win32 and build tested linux. Testing this on some low perf platform would be nice.\n. Verify that ass subtitles still work and still animate properly. Check cpu\n/ gpu usage when subtitles \u00e4r visible on screen. It should be lower as long\nas they are static. Sadly even if only part of the sub is animated, it will\nbe as bad as before.\n. That screenshot was awesome. I now have a hunch what is going on. I think we are not removing old libass overlays. Previously that would not show since they would be rendered exactly on top of eachother.\nThis might finally explains the insane CPU usage from ass subtitles. I'll look at it later.\n. Since my computer is insanely slow at the moment and download is taking forever. If you could try adding\nremove = true;\nat\nhttps://github.com/xbmc/xbmc/blob/master/xbmc/cores/dvdplayer/DVDCodecs/Overlay/DVDOverlaySSA.h#L36\n. It could be \"replace\" too. You can check base class CDVDOverlay.\nOn May 30, 2012 6:45 PM, \"jpsdr\" \nreply@reply.github.com\nwrote:\n\n...  \"remove\" is underlined when i add it => unknow variable... So, i\ndon't even try to compile. Are  you sure it is the correct name or correct\nplace ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/942#issuecomment-6014892\n. I've added replace = true; in master and it indeed fixes the insane CPU usage and this bug. Probably should be backported to eden.\n. You sort of break the whole point of the non flushed seek by waiting on the sync to complete :). \n\nThe reason it's written the way it is, is that at the call to synchronize players, there doesn't need to be any audio player consuming packets in the audio queue. Thus, the sync would not have any effect. If the following frame contain a audio frame, the audio thread get created and and we fail to block that new audio stream until video catches up.\nThis could probably be improved, but it's rather tricky.\nNow, i don't really know why you get the delay. If it's long, have you tried breaking in debugger and checking backtraces for the threads?\n. > The way that the messages end up getting back to the place where the lock is released is pretty complicated so I'm not sure I'll be able to do more than identify where each thread is hanging.\nThat aught to be enough. Something is blocking the release of those\nmessages, so we should try to find where.\n. I can try to get some time to look at it, but would be nice if you can\nfigure out what broke it.\nOn Jun 11, 2012 9:13 AM, \"David Teirney\" \nreply@reply.github.com\nwrote:\n\n@elupus is there anything else I can help with for this? The problem\nunfortunately makes playback of any content that has commercial skips very\nfrustrating.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/944#issuecomment-6238120\n. Should be resolved by: https://github.com/xbmc/xbmc/pull/1084\n. Should be fine.. Though I would so like to get rid of these non url paths\n:-(\n. Will do.\n. With above fixed, merge. It is somewhat useless on my machine thou. It seems pulse audio only lists available sinks in current Config. Normally there is only one config per system card. So even if i have HDMI/SPDIF/Analog separate output, i only get one item in this list. I have to change config in pavucontrol to get the other ones.\n. Also, passthrough isn't support in the stream handler. Will try to get that going.\n. Okey. so I re-added passthrough support for pulseaudio. I also managed to get this pull to list sinks properly on my HW, but it required a change to my pulseaudio config. It stupidly only lists one sink per profile.\n\nI had to add:\n[Profile multisinked]\noutput-mappings = analog-stereo iec958-stereo hdmi-stereo hdmi-surround hdmi-stereo-extra1 hdmi-surround-extra1 hdmi-stereo-extra2 hdmi-surround-extra2 hdmi-stereo-extra3 hdmi-surround-extra3\ninput-mappings = analog-stereo\nskip-probe = yes\nto /usr/share/pulseaudio/alsa-mixer/profile-sets/extra-hdmi.conf\n. AE should not crash by segfault on invalid parameters, it should validate it's input and fail gracefully. That said. I think we can merge this pull request anyway. That way we at least don't crash on invalid streams.\n. I would prefer a static wrapper/helper function.\nOn May 18, 2012 8:42 PM, \"Anssi Hannula\" \nreply@reply.github.com\nwrote:\n\n@DDDamian, agreed. I'm a bit uneasy about duplicating the sanity check on\nall engines, though, but if you prefer not to have a generic wrapper for\nMakeStream() I suggested, I can just add the check on every engine...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/971#issuecomment-5792745\n. I'd say AEUtils or AEFactory.\n. +1 for anything that rid us of SDL\n. If you check blocksize a few lines below, you get automatic check for channel count as well.\n. We don't want merges from master in pull requests. Please rebase on master\nand force push to same branch again. That will update this pull request\nwith the new commit series.\nOn May 19, 2012 6:15 PM, \"Poul\" \nreply@reply.github.com\nwrote:\nEmbedded CUE sheet loaded form tag field 'cuesheet' like foobar2000 does\nit.\nPlayback works fine but there are some strange behavior on track change.\nLooks like GUI doesn't update propertly.\nYou can merge this Pull Request by running:\ngit pull https://github.com/PSyton/xbmc cue_sheet_support\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/982\n-- Commit Summary --\n- Added embedded CUE sheet support\n- Merge branch 'master' into cue_sheet_support\n- Fixed total time according to end offset instead of end of stream\n-- File Changes --\nM xbmc/CueDocument.cpp (188)\nM xbmc/CueDocument.h (45)\nM xbmc/FileItem.cpp (175)\nM xbmc/cores/paplayer/PAPlayer.cpp (14)\nM xbmc/music/infoscanner/MusicInfoScanner.cpp (6)\nM xbmc/music/tags/APEv2Tag.cpp (3)\nM xbmc/music/tags/APEv2Tag.h (2)\nM xbmc/music/tags/MusicInfoTag.cpp (28)\nM xbmc/music/tags/MusicInfoTag.h (7)\nM xbmc/music/tags/MusicInfoTagLoaderApe.cpp (1)\nM xbmc/music/tags/MusicInfoTagLoaderMP3.cpp (2)\nM xbmc/music/tags/VorbisTag.cpp (5)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/982.patch\n https://github.com/xbmc/xbmc/pull/982.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/982\n. Eh.. Curlfile supports seeking just fine...\n. What is wrong with ioctrls? As long as it can be set after open that aught\nto work fine.\n. Also commit series must be debased to clean out non related commits.\n. I would very much like to know what the issue is you are seeing.\n. Hmm, I wouldn't havethought low speed limit would trigger if we didn't ask\nfor new data.\n\nThink it would be better to toggle that option of after header has been\nreceived and handle that timeout yourself in fillbuffer.\n. You never need to close and reopen. Just force push...\nOn Jun 1, 2012 8:16 PM, \"barberio\" \nreply@reply.github.com\nwrote:\n\nMy builds are fixed again now, so I should be able to get back to this\neventually, but will likely have to close this and refresh from a new tree.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1005#issuecomment-6066944\n. Reset to master. Branch add, changes, force push. You never need to close a\npull and reopen..\nOn Jun 1, 2012 10:34 PM, \"barberio\" \nreply@reply.github.com\nwrote:\nNope, that doesn't work as you can see. My Git tree is too messed up.\nApologies, but this is what you get when you want someone to learn a whole\nnew system so they can submit a patch so you'll pay attention to an issue.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1005#issuecomment-6070154\n. The only annoying thing with this is that libs need to be compiled same\nway. If it's only tiny xml, then I suppose it should be fine.\n\nThat and that it's pretty much a unsupported option, put me off last i\nlooked at it.\n. I think the stride stuff and vobsub stuff should be okey\n. Nice\n. Please don't be so quick on the merge button :(. I wanted some other persons opinion on this, like @jmarshallnz\n. Nor did I say this looks fine to merge.\n. I agreed on that HUNK of code which i commented. Not on the full\nmerge, check context. I don't want you to revert the changes, since I\nthink it is reasonable. But i wanted another eye on the final diff\nbefore we merged it.\nThe point of pull requests are just that. To let people look at\nthings. If you update a pull request with changes after a comment,\nthen some time really must pass to make sure there are no more\ncomments comming in, and preferably get somebody else to say it looks\nfine to merge.\n. Imho... Stop assuming http is a file server... Urls from them does not\ncontain a filename. The http header on a request can however.\nOn Jul 9, 2012 8:18 AM, \"arnova\" \nreply@reply.github.com\nwrote:\n\nIndeed, not that obvious ;-). An idea could be to detect which\ncharacters use encoding in an URL-encoded string, and use that later on\nwhen re-encoding. This list could optionally be stored inside the\nCURL-object, although it's only a single instance where we actually do this\nnow (StackDirectory) so that may not be that useful.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1064#issuecomment-6839248\n. On Mon, Jun 18, 2012 at 12:35 PM, David Teirney\nreply@reply.github.com\nwrote:\nI've tested this patch and it appears to resolve the issue with the seeking timeout and the problem with \"go slow mode\" after the seek. I also tested it with a number of my EDL testing files and I have observed some slightly strange behavior for some of my samples that have lots of small cuts that are close together. I've added a log file to http://trac.xbmc.org/ticket/12984\n\nStrange how?\n. I always like diffs that remove code  to fix things :)\n. I wont be able too look at it this week. But fully native scaling make\nsense to me. It does imply xbmc only doing chroma upscaling. If xbmc does\nany other scaling its quite pointless.\n. While he decoders may have issues, it work perfectly fine for us running in\nsoftware. I wouldn't live without 24hz support on playback.\n. Not really true, you can scale each field separate and output re-weaved.\nThen tv can deinterlace.\nOn Dec 15, 2012 5:26 PM, \"Karlson2k\" notifications@github.com wrote:\n\n@adam-aph https://github.com/adam-aph Did you suggest it to me?\nI can only repeat: #1096https://github.com/xbmc/xbmc/issues/1096#issuecomment-6757441\nYou should not try any resolutions, except native image resolution and\nnative display resolution. In any other case you'll get double upscaling:\none in XBMC and one in display. Any double upscale will be worse than\nsingle scaling in XBMC.\nRegarding FPS. All displays support widest choice of FPSs at native\nresolution, so there are no reason to try other resolution if you are\nfps-addicted.\nAbout interlaced videos. If you want to deinterlace video by TV, the\nonly way to get it is to output video at exact video's resolution and\nFPS. In all other cases TV will be unable to deinterlace. So again there\nare no reason to look for any \"close\" resolution.\nOther problem for interlaced video is how to sync even/odd frames output\nfrom video decoder with even/odd frames in video out.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1096#issuecomment-11406224.\n. Well I do agree scaling before deinterlace is bad. Just said it was\npossible. Ps. I'm all for supporting native res matching.\n. I tend to agree.. we must start simple if we want this in. SD 720x304 would be 720x480 if aspect matches close enough (already an allowed aspect error setting that can be used)\n. Ie. Adjust for aspect. Iterate all resolutions available, select any mode where the aspect error and scaling error is minimal if no scaling is performed (or only one direction).\n. well, guys, to be honest I'm not following your hesitations\n-\nit needs to be enabled by advanced settings (on the purpose), so it\n   will not create massive headache in any way, until somebody will start\n   playing with it\nThat is a massive headache for us developers\n-\nso if I'm the only one seeing value in this patch maybe just forget\n   about it\nJust looks overly complex. I don't get why we need so much configuration.\n. I never said it wasn't. I said an advanced setting is a massive headache and that it shouldn't need so much config.\n. That is why we don't want advanced settings. As soon as they are in, the\npeople that developed the feature loose interest in further development\nsince it solve their need, and very few other find the feature. It also\nthen mean that we have to maintain a feature that a fraction of our user\nbase even know about.\n\nI'm for a incremental approach in that we add the simplest implementation\nfirst and extend that.\n. My first thought was just that this stuff is not run in main thread anyway.\nSo should not need to run rendering loop. Ive not looked at the patch yet\nthough. Will try to Sunday.\n. I am on vacation. Computer less, so I wont be able to do much reviewing\ndone next week.\n. If it works i'm fine with it\n. Wakeup code should not go into Uriutils. Utils or somewhere else. Also it\nseem more logical to issue the wakeup from cfile, instead of some url\nfunction.\nOn Jun 29, 2012 1:59 AM, \"kricker\" \nreply@reply.github.com\nwrote:\n\nhttp://trac.xbmc.org/ticket/12739\nThis patch allows XBMC to wake sleeping servers when needed for file\nplayback or database updates.\nYou can merge this Pull Request by running:\ngit pull https://github.com/kricker/xbmc master\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1105\n-- Commit Summary --\n- WOA (Wake on Access) Ticket #12739\n-- File Changes --\nM xbmc/dbwrappers/Database.cpp (2)\nM xbmc/settings/AdvancedSettings.cpp (57)\nM xbmc/settings/AdvancedSettings.h (11)\nM xbmc/utils/URIUtils.cpp (91)\nM xbmc/utils/URIUtils.h (1)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1105.patch\n https://github.com/xbmc/xbmc/pull/1105.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1105\n. Just force push to same branch name on your github account, then this pull\nwill update.\n. Rebase interactive on master and squash commits together that go together.\n. Looks fine to me.\n. Technically it should have been a separate pull request, since then i\ncould have pushed the big merge button directly. But at least a\nseparate commit, since then i can commit it by itself.\n. @theuni , @cptspiff , comments. I must admit, that we did end up with very many calls for wakeup. It does look a bit messy. \n\nAlso. I don't really like this being a advanced setting without GUI. Nobody will know it's there.\n. Code wise its okey. I just don't like  it being advanced setting.\nOn Jul 5, 2012 11:07 PM, \"kricker\" \nreply@reply.github.com\nwrote:\n\nWhere are we on this? Still waiting for fixes or comments?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-6790609\n. Best would be a checkbox in add source dialog to wake host on access, and a\nway to auto figure out mac address.\nOn Jul 6, 2012 12:05 PM, \"t4-ravenbird\" \nreply@reply.github.com\nwrote:\nI tried to look at how GUI-settings are done, but problem is the settings\nis an array of entries which probably need a brand new dialogue to input\ndata in ..\nhttp://oi47.tinypic.com/e0okg5.jpg\nEven if it maybe belongs somewhere else in settings than my attempt here\n(system/power) a new dialogue is required ?\nUnless I am missing something and there IS a way to programatically show\nan adapted version of a pre-existing generic dialogue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-6801493\n. Right. Maybe just populate the list from sources plus mysql. Then try to\nfind mac if possible and a checkbox to enable disable.\nOn Jul 6, 2012 1:10 PM, \"t4-ravenbird\" \nreply@reply.github.com\nwrote:\nHmm, there can be multiple sources from same host so that does not seem\nright\nBesides ; the feature will also do wake before MySQL connect and the MySQL\nserver may be on a server that is not listed in sources\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-6802480\n. > A list that comes up in settings/system/power that simply lists all known servers (found by searching sources+mysql+pathsubstitutions..) - and then simply a checkbox for each Is that what you have in mind?\n\nYup\n\nDoes XBMC already have some magic code to resolve a MAC address from an IP or NetBios name?  And as T4_Ravenbird said, there are timeout settings as well, unless you set a default one extremly long to accomodate slow waking servers. So, if there was a way to grab the MAC addresss programatically, you'll then need a checkbox and timeout setting for each server. Or in Network settings, just one checkbox and timeout setting for all servers.\n\nGlobal timeout seem fine to me. But I don't think there is a way to\nget MAC address easily cross platform, so we'd have to be able to\nenter MAC address too i think. Adding it is probably not a major\nproblem on any platform and can be done step by step.\nSo we would need a list of servers, with a MAC address and checkbox.\nI suppose this is getting rather complicated. So i'll probably not\npush it. But if you feel like working on it I would much happier about\nthe the pull request.\n. To start with we are waiting for next merge window. But I would love to se\na GUI too.\n. looks fine\n. If it's made a real setting I'm okey with it. But please lets avoid\nadvanced settings that just about nobody will know exist, and we have to\nmaintain.\n. Remove the unrelated changes in xbmc/visualizations/Goom/goom2k4-0/mkinstalldirs then feel free to merge.\n. Havnt looked at the diff, but.. Hdfile, smbfile and file.cpp should not\nneed changes for a id3 tag reader change.\n. Ok, i suppose that is a valid extension to ifile.\n. GetDelay() - GetCacheTime() = hw latency + buffers in receivers or tvs and so on.\nGetDelay() is current situation. Ie what will apply if you add a frame directly after polling that function.\nIt would technically be better if we had returned a struct with absolute timestamps instead. But that is for another day.\nPull looks good to me.\n. Pulse looks correct already.\n. Alsa looks correct\nWasapi looks wrong for all the functions:\nGetDelay uses GetBufferSize: \"The GetBufferSize method retrieves the size (maximum capacity) of the endpoint buffer.\"\nGetCacheTotal and GetCacheTime uses GetStreamLatency: \"This method retrieves the maximum latency for the current stream. The value will not change for the lifetime of the IAudioClient object.\" \"Rendering clients can use this latency value to compute the minimum amount of data that they can write during any single processing pass. To write less than this minimum is to risk introducing glitches into the audio stream.\"\n. GetStreamLatency would have been used to setup GetChunkSize() in the old system. Ie the minimum amount of data to write each time. But seems that logic isn't there for AE.\n. \"For a rendering buffer, the padding value that is reported by the IAudioClient::GetCurrentPadding method represents the amount of rendering data that is queued up to play in the buffer\" so there we have an okey implementation for  GetCacheTime() and GetDelay(). It's possible latency should be added to that for the GetDelay() call. But not sure.\n. http://msdn.microsoft.com/en-us/library/windows/desktop/dd316756(v=vs.85).aspx\n. Should be fine. But drop the ifdefs around the log. We want to know errors.\n. Looks fine. Merge when merge window open.\n. Not really no. DXVA probably have something built in to do it. But can't say i know how. For pixelshader case it aught to be in CYUV2RGBShader::PrepareParameters WinShaders.cpp\n. Get rid of the unrelated added files. I'll leave the functionality change\nto somebody else.\n. separate pull for separate file systems\n. I really don't like it potentially write 1 byte at a time using separate\nhttp requests. It should be using multi interface, threaded if needed.\nI'm not going to fully block it, but I need somebody else to think it's\nokey. Like spiff, Memphis atk..\n. It's way duplication of code imho.. It should just have been put in FileCurl. Also, i just checked docs and the read_callback function can return a special PAUSE command to indicate there is no data available right now but will be later. So it should  not be too complicated to do this by multi perform instead, having read_callback return pause when it has no data. \n. With easy, you need to have the whole data to write available before tha\ncall. With multi you can give it some and return to caller.\n. You write in chunks of 129k or whatever until you get to the 2gb of data.\nThere would be one connection to server and no buffer larger than 128k or\nso.\nWith easy you would need 2gb buffer or multiple connections to server.\nOn Aug 16, 2012 1:23 PM, \"Chris Browet\" notifications@github.com wrote:\n\nI understand that, but what's the point if the file adaptor still has to\nwait for input?\nOr it has to buffer the writes, which are already sent in chunks of\n128k... How large should the buffer be, considering at least part of the\nusage will be to copy video files of 2Gb+?\nAre you certain libcurl doesn't have it's own buffering?\nBottom line: what is the benefit?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1164#issuecomment-7782616.\n. Imo not until it's written using multi interface to avoid partial writes\nand reconnects on each write.\n. Nice to hear :-). Will try to review when I get back from conference on\nMonday or so.\n. Hmm.. There is no guarantee there is a demux stream when CSelectionStreams::Update is run. But i agree it looks funky. Also there is no corrolation between the order of streams in CDVDInputStreamNavigator::Get(AVS)StreamLanguage() and demuxer stream.\n\nThe only way you can correlate them is by iPhysicalId of the demuxer stream.\n. Your wait change remove the EOF call to demuxer so dvdplayer can regain control before processing the wait skip.\n. Oh.. The issue you are seeing regarding streams. OpenDefaultStream should not use selection streams to open stream in the navigator case. The dvd will dictate streams itself.\n. have a look at: else if (pMsg->IsType(CDVDMsg::PLAYER_SET_AUDIOSTREAM)) in CDVDPlayer::HandleMessages to see how navigator state should look.\n. CDVDMsg::PLAYER_SET_AUDIOSTREAM is from user event in GUI, thus you won't see it trigger normally.\nOpenDefaultStreams must do similary, or we should just never call OpenDefaultStreams since that will take care of itself.\n. I don't really like this. Like i said before, we should never call OpenDefaultStreams, or it should make sure to setup the dvd navigator correctly. The dvd navigator is in charge. Nothing should ever call Open(Audio/Video)Stream except as a result of a something the navigator does. (The IsBetterStream() calls is what triggers changes)\n. IsbetterStream() will always call with the correct I'd. It's only when you\ninvolve selectionstream struct things go wrong. As far as I know that only\nhappen in opendefaultstreams()?\n On Aug 16, 2012 12:13 AM, \"Voyager-xbmc\" notifications@github.com wrote:\n\nI agree, the navigator is in charge, but the Open(A/V)Stream methods do\nget called, and in these cases there are the rare situations (seen this\nwith only the mr bean dvd set) where the IDs don't match.\nWhat I mean is : the navigator being in charge, says, \"open audio stream\n0\". This gets translated further down to OpenAudioStream 0. Unfortunately,\nthis then gets stream 0 from the demuxer (which appears to be a video\nstream).\nThis PR fixes this. I'm not proposing any other change to how these\nmethods get called. Are you suggesting to make changes to the call\nhierarchy?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1166#issuecomment-7766986.\n. Exactly, Opendefaultstreams which should just not do anything at all for\ndvds. (or open something valid, but it is not needed at all. )\nOn Aug 16, 2012 1:13 PM, \"Voyager-xbmc\" notifications@github.com wrote:\nCDVDPlayer::Process calls OpenDefaultStreams around line 1060 (line number\nafter insertion of this code).\nCall stack:\nXBMC.exe!CSelectionStreams::GetDemuxerIdForPhysicalId(StreamType type, int physicalId, CDVDDemux * demuxer)  Line 315   C++\nXBMC.exe!CDVDPlayer::OpenAudioStream(int iStream, int source)  Line 2641 + 0x1e bytes   C++\nXBMC.exe!CDVDPlayer::OpenDefaultStreams()  Line 731 + 0x23 bytes    C++\nXBMC.exe!CDVDPlayer::Process() Line 1066 C++\nID requested by OpenAudioStream (iStream) is 0.\nCorresponding ID from the demuxer = 1.\nID 0 from the demuxer is the video stream.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1166#issuecomment-7782334.\n. Yes. Or try to find the physical stream selected there ( its in the dvd\nstate struct ).\n. Yes looks good. Will merge since it's a bug fix.\n. Lol, the opposite is true for unity. With unity old code show no icon, but\nnew do.\n. To start with. The point of this pull is to get rid of SDL not to fix\nany already existing other problems. That comes after.\n\ntoggle full screen, can't size window in horizontal direction\n\n\nHmm.. Weird. Works fine here apart from unity messing up if you go\nfullscreen to other screen at the same time as you change resolution.\nNeed to move the window before requesting fullscreen from window\nmanager. Coul you elaborate on what happen?\n\n\nXBMC icon broken: caused by a change in CTexture\n\n\nOk, hadn't seen. We shouldn't be using CTexture here at all since it\ncould be accessing opengl functions which may not be setup. It should\nuse some image lib directly.\n\n\nminimize window: alt-tab: XBMC stays in background instead of getting minimized\n\n\nTo start with, alt-tab should only minimize when fullscreen. Not when\nwindowed. So that must be fixed. The reason for not minimizing is most\nlikely that the window manager intercept the key press, which is how\nit should be. It is it's job to decide what to do.\nDid you try without window manager?\n\n\nlisten to external xrandr events and take action: consider a user who starts XBMC, then turns on an av receiver or projector. This version does not update resolutions and can't switch to the new output\n\n\nYup, i dropped that for now. It should be fixed. But the whole\nhandling of calibrations when reloading resolutions need to be\nresolved in some reasonable way first. Something like how you handled\nit is probably valid, but all arches need to be in line.\n\n\ngui corruption on AMD is back. The correct sequence is to first change resolution, then refresh window on xrandr event. There was a reason why I re-created the window on this event.\n\n\nRight. I don't have an AMD, so can't test that. It's not hard to\nre-create on resolution switch, but we need to make GLX code work like\nwindows with regard to OnResetDevice() callbacks so we don't need the\nskin reload. It's not a regression so it is not part of this pull\nrequest.\n\n\nIt must be distinguished between systems running a window manager and systems which do not. If no WM is present the redirect_override flag has to be set instead of dealing with NET_WM*. Not doing this can decrease performance on NVdias ystems running vdpau.\n\n\nIf there is not window manager, redirect_override is utterly\npointless. It is used to override the redirect that a window manager\nuses on windows. Thus we never need to request it.\nAlso current code doesn't rely on NET_WM_* in the non window manager\ncase since then, there won't be a NET_STATE_FULLSCREEN atom available\nand it will fallback to just maximizing.\n\n\nI don't see the patch for the screensaver, If the scrren has switched off due to inactivity XBMC won't be able to activate the screen again.\n\n\nRight, i temporarily dropped that. Current code (before this patch),\ntouches screen saver from time to time to keep it from activating.\nWhile not perfect it should still work, unless SDL did something more\ninternally??.\n(if the old code doesn't work anymore we obviously need to add it)\n\n\nI'm a bit hesitant to the fix for separate screen's.\n\nThis is the use case which is even more likely than having a single screen. On NVidia systems you get tearing when having two monitors connected to a single screen.\n\nEven if i drop it from this pull, we can always add it after. It also\nneeds that pesky skin reload that I so much want to avoid.\n\n\nIt get a bit messy with extending resolution structure for this\n\nWhy? No need to load resolutions of a screen where XBMC is not displayed.\n\nBecause that is not how all other arches work. I don't mind changing\nit, but it must be done for all arches. I don't want a bunch of\nspecial cases for X11.\n. > A tester:\n\nFinally:\n\"swa.override_redirect = False;\" gives many drops, how describes above.\n\"swa.override_redirect = fullscreen ? True : False;\" gives smooth picture in fullscreen.\nI tested twice.\n\nRight. He is using a windowmanager, which is redirecting even\nfullscreen windows. (many do). So we might have to go that route for\nall situation. I was just saying that it would not make sense to only\ndo it for the non windowmanager case. It's the with windowmanager case\nthat is problematic.\n. some further along. i've hooked up running xbmc with override_redirect when run as standalone. it's really messy to use since you have to handle input focus yourself.\nIt should be possible to only use override_redirect in fullscreen only, like was done before. That might be for the best since so many window manager are slow otherwise.\n. I assume you where not running standalone? (that is broken in this anyway). What window manager where you using? cause i don't even get that keypress when running under unity. it swallows it and handles it itself.\n. Not sure. I'm not happy with current status. I can push my current branch\nin a bit.\n. So rebased, not all squashed together yet. I'm not fully happy with it yet, but @FernetMenta would be nice with some testing and feedback on what works and what doesn't.\nIt should now detect if we have a window manager that support fullscreen. If not it uses override_redirect. It will also switch to that if you run it with --standalone switch.\n. Some known things I've not resolved yet. \n1. Alt+tab when override redirect is used (we must handle Window switches ourselves) \n2. Switching between x11 screen lead to loss of textures. I wonder if one can avoid the texture loss by moving the Window without recreating it. It aught to work for when both are in same gfx at least. \n. Lol!! Then we have to decide if we want to revert. Probably.\nI don't get why toggle to fullscreen doesn't work. It work perfectly here.\nVery odd.\nOn Sep 23, 2012 10:38 AM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nToggle full screen and minimize do not work on my system. Will investigate\n...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1175#issuecomment-8796479.\n. Hehe, i thought you actually did merge it :)\n. Right.. that would mean that our resolution setup for windowed is getting b0rk some where. it should be respecting that.\n. The problem was that the WM uses the XCreateWindow size when it restores from fullscreen. So we must create the window with a windowed size, and let the WM do it fullscreening job\n. Could you try with mce remotes now and see if it works allright?\n. I tried, but it seems impossible to get the coordinates right in unity.\nThere seem to be a bug with how it handles move requests. On my system\n(unity and gnome shell tested), it restores properly, but if I request a\nmoveresize to same position it current is occupying, it jumps down the same\nnumber of pixels as title bars are high.\n. We've hit this issue before on video (there is likely a bug in swscale here). There we resorted to always making sure the buffer written to had a total size aligned to 16. The source was pretty much already aligned that way since it came from libavcodec to start with.\n. That said it would be better to patch ffmpeg or backport any fixes from upstream.\n. Haven't looked at diff, but.... Weeeeee! Lovely to see work on stuff like\nthis.\nOn Jul 24, 2012 1:44 PM, \"Arne Morten Kvarving\" \nreply@reply.github.com\nwrote:\nsorry for the multiple pulls, but this isn't exactly exciting stuff and if\ni don't push as i go, i end up abandoning everything, at least judging by\nmy myriad of half-done local git branches ;)\nnote the new file.\nYou can merge this Pull Request by running:\ngit pull https://github.com/cptspiff/xbmc lessdeps\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1210\n-- Commit Summary --\n- changed: minimize URL.h header pollution\n- changed: minimize IFile.h header pollution\n- changed: minimize Temperature.h header pollution\n- changed: minimize LangInfo.h header pollution\n- changed: minimize GUIInfoManager.h header pollution\n- changed: remove unnecessary includes\n-- File Changes --\nM xbmc/Application.cpp (3)\nM xbmc/ApplicationMessenger.cpp (4)\nM xbmc/AutoSwitch.cpp (1)\nM xbmc/Autorun.cpp (1)\nM xbmc/Favourites.cpp (1)\nM xbmc/FileItem.cpp (5)\nM xbmc/GUIInfoManager.cpp (6)\nM xbmc/GUILargeTextureManager.cpp (2)\nM xbmc/GUIPassword.cpp (1)\nM xbmc/GUIViewState.cpp (1)\nM xbmc/NfoFile.cpp (1)\nM xbmc/TextureCache.cpp (1)\nM xbmc/Util.cpp (1)\nM xbmc/addons/Addon.cpp (1)\nM xbmc/addons/AddonInstaller.cpp (1)\nM xbmc/addons/GUIDialogAddonSettings.cpp (1)\nM xbmc/addons/Repository.cpp (1)\nM xbmc/addons/Repository.h (1)\nM xbmc/addons/Scraper.cpp (1)\nM xbmc/cores/AudioEngine/Utils/AEWAVLoader.cpp (48)\nM xbmc/cores/DllLoader/DllLoaderContainer.cpp (1)\nM xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStream.h (2)\nM xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamFile.cpp (1)\nM xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamNavigator.cpp (1)\nM xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamRTMP.cpp (1)\nM xbmc/cores/dvdplayer/Edl.cpp (1)\nM xbmc/cores/dvdplayer/Edl.h (1)\nM xbmc/cores/paplayer/DVDPlayerCodec.cpp (1)\nM xbmc/cores/paplayer/PAPlayer.cpp (1)\nM xbmc/cores/paplayer/TimidityCodec.cpp (1)\nM xbmc/dialogs/GUIDialogContextMenu.cpp (1)\nM xbmc/dialogs/GUIDialogFileBrowser.cpp (1)\nM xbmc/dialogs/GUIDialogMediaSource.cpp (1)\nM xbmc/filesystem/File.cpp (16)\nM xbmc/filesystem/File.h (10)\nM xbmc/filesystem/HTSPDirectory.h (2)\nM xbmc/filesystem/IFile.cpp (11)\nM xbmc/filesystem/IFile.h (35)\nA xbmc/filesystem/IFileTypes.h (48)\nM xbmc/filesystem/ImageFile.h (1)\nM xbmc/filesystem/MusicDatabaseFile.h (1)\nM xbmc/filesystem/PluginDirectory.cpp (1)\nM xbmc/filesystem/SFTPFile.h (3)\nM xbmc/guilib/GUIFontManager.cpp (1)\nM xbmc/guilib/GUIListContainer.cpp (1)\nM xbmc/guilib/TextureManager.cpp (1)\nM xbmc/interfaces/Builtins.cpp (1)\nM xbmc/interfaces/http-api/XBMChttp.cpp (2)\nM xbmc/interfaces/python/xbmcmodule/control.cpp (1)\nM xbmc/interfaces/python/xbmcmodule/xbmcmodule.cpp (1)\nM xbmc/music/MusicDatabase.cpp (1)\nM xbmc/music/dialogs/GUIDialogMusicOverlay.cpp (1)\nM xbmc/music/infoscanner/MusicInfoScraper.cpp (16)\nM xbmc/music/infoscanner/MusicInfoScraper.h (8)\nM xbmc/music/windows/GUIWindowMusicBase.cpp (1)\nM xbmc/music/windows/GUIWindowMusicNav.cpp (1)\nM xbmc/network/AirPlayServer.cpp (1)\nM xbmc/network/UPnP.cpp (2)\nM xbmc/network/WebServer.cpp (1)\nM xbmc/network/ZeroconfBrowser.h (3)\nM xbmc/network/httprequesthandler/HTTPVfsHandler.cpp (1)\nM xbmc/network/libscrobbler/scrobbler.cpp (1)\nM xbmc/pictures/Picture.cpp (1)\nM xbmc/pictures/PictureThumbLoader.cpp (1)\nM xbmc/storage/MediaManager.h (1)\nM xbmc/utils/AsyncFileCopy.cpp (1)\nM xbmc/utils/CPUInfo.cpp (20)\nM xbmc/utils/CPUInfo.h (5)\nM xbmc/utils/FileOperationJob.cpp (1)\nM xbmc/utils/StringUtils.cpp (1)\nM xbmc/video/VideoDatabase.cpp (1)\nM xbmc/video/VideoInfoDownloader.cpp (23)\nM xbmc/video/VideoInfoDownloader.h (6)\nM xbmc/video/VideoInfoScanner.cpp (1)\nM xbmc/video/VideoInfoScanner.h (1)\nM xbmc/video/dialogs/GUIDialogVideoInfo.cpp (1)\nM xbmc/video/dialogs/GUIDialogVideoOverlay.cpp (1)\nM xbmc/video/dialogs/GUIDialogVideoScan.cpp (1)\nM xbmc/video/windows/GUIWindowVideoBase.cpp (1)\nM xbmc/windows/GUIMediaWindow.cpp (1)\nM xbmc/windows/GUIWindowFileManager.cpp (1)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1210.patch\n  https://github.com/xbmc/xbmc/pull/1210.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1210\n. Oh yes please.\n. With above two changes, it should be a good fix.\n. Should be fine.\n. I\u00a8m a bit hesitant what it might break. Would have been nice to run this by some ffmpeg devs. Feels like it should be solved somewhere deeper into fffmpeg.\n. The internal timestamp index in ffmpeg expects linearly increasing timestamps to, so i bet more things get broken here. I've many times thought we should ignore time based seeking for mpegts only use average bittrate and position in file.\n. This pulls in way too much complicated code from ffmpeg. Fixup ffmpeg's idea of total duration, then do byte based seek based on percentage position in file instead. \n. Also, seems weird that you have so many files with pts wraparound. It doesn't wrap very often. \n. But as michael said. This should likely be fixed lower down in the mpegts demuxer. Having it correct for at least 1 wrap in the file. \n. > It wraps every 26 hours on tv. Hence it is very likely that a recording\ndoes not seek.\n\nOuch.. That was way more often than i expected.\n. Think it would suffer the same issue after the change. The dns lookup could return multiple addresses. I suppose gethostbyname is usually smarter and prioritizes reachable ips. But don't think that is guaranteed. We should probably be smarter our selves here.\nWhat real issue is it that this causes btw?\n. Right, but the code you changed isn't even used for smb access. That is\nhandled inside libsmbclient.\nIt can have been used to figure out if something is on the local subnet.\nBut not for the access itself.\nOn Aug 15, 2012 9:33 PM, \"odon\" notifications@github.com wrote:\n\nIssue is that on Linux with nmblookup installed, XBMC can't reach hosts\nwhich returns multiple IP and where the last returned IP is not reachable\nby XBMC client.\nI had this problem with a NexentaStor File Server with 2 NICs on different\nnetworks.\nWorkaround is to declare NAS IP in advancedsettings.xml, but real issue\nfor the unreachable File server is still pretty hard to identify. An other\npretty useful info would be to log XBMC DNS cache updates.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1228#issuecomment-7763946.\n. Same would have applied to nfs I would have thought, but I can be wrong on\nthat.\nAnyway best course of action is to evaluate reachability for all returned\nips.\nOn Aug 16, 2012 12:33 AM, \"odon\" notifications@github.com wrote:\nRight, I don't even use SMB within XBMC. All my shares are NFS-based. But\nif nmblookup is available, it seems it is used for name resolution of\nhostnames, whatever the protocol is.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1228#issuecomment-7769564.\n. Right, should just hook up to vfs. NptXbmcFile.cpp just need to be extended\nand the generic dropped.\n. Push the green button :-)\n. @Memphiz it was used to get hostname of system. I suppose it could have been handled differently.\n. @Memphiz no i don't think i did sync those. are they not part of the main project?\n. Until we drop windows style paths fully. We can't fix this since there would need to be special casing in a large amount of places. \n\nI'm for dropping c:\\path and only allowing file:///path but that will be a problematic change. \n. I'm on vacation for two weeks, will not have computer access. Will review\nwhen I'm back.\nOn Aug 3, 2012 1:55 PM, \"Alasdair Campbell\" \nreply@reply.github.com\nwrote:\n\nThis is pretty basic stuff & should ideally go in at the same time as the\nPlatinum upgrade.\nMoves upnp files to xbmc/network/upnp, adds a UPNP namespace & makes UPnP\nactually optional at configure time (enabled by default).\nDepends on upgrade-platinum pull request\nYou can merge this Pull Request by running:\ngit pull https://github.com/alcoheca/xbmc code-shuffle\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1238\n-- Commit Summary --\n- [UPnP] update Platinum/Neptune to 0.6.9.1\n- [UPnP] fixed compiling (needs platform loving)\n- [UPnP] fixed: many classes & methods had changed signature\n- [UPnP] fixed: don't assume album_arts exist for given item\n- [UPnP] Platinum - log allowed values with state variable errors\n- [UPnP] reinstated: 'changed: make sure Neptune threads are named' by\n  elupus @ 42d7b6b9180f634f988e12673de655228233b305\n- [UPnP] reinstated: 'fixed: upnp server's http server would not provide\n  content length on HEAD requests' by elupus @\n  9cbcf5063c3af350d385f1992017f6883f37a8e0\n- [UPnP] reinstated: '[UPnP] use server provided item count to iterate\n  browse req' by elupus @ cb110ea28b7506cb31d6ab4fd347fad1c96ec9ed\n- [UPnP] tidy up device names & versions\n- [UPnP] Platinum now ignores local devices by default now\n- [UPnP] We already used multicast to discover devices, remove confusing\n  comments & unused variable\n- [UPnP] Allow non-microsft clients to search too\n- [UPnP] properly determine mime-type of stacked files\n- [UPnP] move UPNP code to it's own namespace\n- [UPnP] changed: make UPnP optional (enabled by default), fix some\n  missing #ifdef HAS_UPNP guards\n-- File Changes --\nM .gitignore (1)\nM Makefile.in (6)\nM configure.in (17)\nM lib/libUPnP/Makefile.in (18)\nM lib/libUPnP/Neptune/Build/Boot.scons (51)\nM lib/libUPnP/Neptune/Build/Build.scons (72)\nM lib/libUPnP/Neptune/Build/Targets/arm-android-linux/Config.scons (195)\nM lib/libUPnP/Neptune/Build/Targets/arm-apple-darwin/Config.scons (14)\nD\nlib/libUPnP/Neptune/Build/Targets/mipsel-psp-linux/CodeWarrior/Neptune.mcp\n(0)\nD\nlib/libUPnP/Neptune/Build/Targets/mipsel-psp-linux/CodeWarrior/Neptune_Data/CWSettingsWindows.stg\n(0)\nD\nlib/libUPnP/Neptune/Build/Targets/mipsel-psp-linux/CodeWarrior/PREFIX_PSP_DEBUG.h\n(13)\nD\nlib/libUPnP/Neptune/Build/Targets/mipsel-psp-linux/CodeWarrior/PREFIX_PSP_RELEASE.h\n(12)\nD\nlib/libUPnP/Neptune/Build/Targets/mipsel-psp-linux/CodeWarrior/PSP_Lib_C++.mcp.xml\n(2057)\nM lib/libUPnP/Neptune/Build/Targets/universal-apple-macosx/Config.scons\n(13)\nM\nlib/libUPnP/Neptune/Build/Targets/universal-apple-macosx/Neptune.xcodeproj/project.pbxproj\n(2419)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/ArraysTest1/ArraysTest1.vcproj\n(206)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/BufferedStreamsTest1/BufferedStreamsTest1.vcproj\n(206)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/FileTest1/FileTest1.vcproj\n(199)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/FileTest2/FileTest2.vcproj\n(199)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/HttpClientTest1/HttpClientTest1.vcproj\n(208)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/HttpServerTest1/HttpServerTest1.vcproj\n(195)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/ListsTest1/ListsTest1.vcproj\n(200)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/LoggingTest1/LoggingTest1.vcproj\n(201)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/LoggingTest2/LoggingTest2.vcproj\n(199)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/MapsTest1/MapsTest1.vcproj\n(191)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/MessagesTest1/MessagesTest1.vcproj\n(214)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/MiscTest1/MiscTest1.vcproj\n(200)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/Neptune/Neptune.vcproj\n(514)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/NetConfig/NetConfig.vcproj\n(208)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/NetEcho/NetEcho.vcproj\n(202)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/NetPing/NetPing.vcproj\n(208)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/NetPump/NetPump.vcproj\n(208)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/QueueTest1/QueueTest1.vcproj\n(199)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/RingBufferTest1/RingBufferTest1.vcproj\n(206)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/StringsTest1/StringsTest1.vcproj\n(207)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/ThreadsTest1/ThreadsTest1.vcproj\n(203)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/UdpTest1/UdpTest1.vcproj\n(208)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/UrlTest1/UrlTest1.vcproj\n(202)\nD\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2005/XmlTest1/XmlTest1.vcproj\n(227)\nM lib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2008/Neptune.sln\n(16)\nM\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2008/Neptune/Neptune.vcproj\n(36)\nR\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2008/TlsTest1/TlsTest1.vcproj\n(56)\nR\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2008/axTLS/axTLS.vcproj\n(146)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/ArraysTest1/ArraysTest1.vcxproj\n(101)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/BufferedStreamsTest1/BufferedStreamsTest1.vcxproj\n(101)\nA lib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/Build.py\n(97)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/FileTest1/FileTest1.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/FileTest2/FileTest2.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/HttpClientTest1/HttpClientTest1.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/HttpClientTest2/HttpClientTest2.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/HttpServerTest1/HttpServerTest1.vcxproj\n(102)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/ListsTest1/ListsTest1.vcxproj\n(101)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/LoggingTest1/LoggingTest1.vcxproj\n(98)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/LoggingTest2/LoggingTest2.vcxproj\n(102)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/MapsTest1/MapsTest1.vcxproj\n(98)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/MessagesTest1/MessagesTest1.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/MessagesTest2/MessagesTest2.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/MiscTest1/MiscTest1.vcxproj\n(97)\nR lib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/Neptune.sln\n(203)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/Neptune/Neptune.vcxproj\n(233)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/NetConfig/NetConfig.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/NetEcho/NetEcho.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/NetGet/NetGet.vcxproj\n(91)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/NetPing/NetPing.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/NetPump/NetPump.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/QueueTest1/QueueTest1.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/RingBufferTest1/RingBufferTest1.vcxproj\n(101)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/SocketsTest1/SocketsTest1.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/StringsTest1/StringsTest1.vcxproj\n(102)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/ThreadsTest1/ThreadsTest1.vcxproj\n(98)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/TimeTest1/TimeTest1.vcxproj\n(96)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/TlsTest1/TlsTest1.vcxproj\n(100)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/UdpTest1/UdpTest1.vcxproj\n(103)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/UrlTest1/UrlTest1.vcxproj\n(99)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/XmlTest1/XmlTest1.vcxproj\n(108)\nA\nlib/libUPnP/Neptune/Build/Targets/x86-microsoft-win32-vs2010/axTLS/axTLS.vcxproj\n(101)\nM lib/libUPnP/Neptune/Build/Tools/SCons/gcc-generic.py (3)\nM lib/libUPnP/Neptune/Documents/Automatic/NeptuneErrorCodes.txt (37)\nM lib/libUPnP/Neptune/Documents/Manuals/Neptune Logging.doc (0)\nA lib/libUPnP/Neptune/Extras/Data/TLS-Trust-Anchors-base.crt (3382)\nA lib/libUPnP/Neptune/Extras/Data/TLS-Trust-Anchors-extended.crt (358)\nM lib/libUPnP/Neptune/Extras/Scripts/CodeScanner.py (4)\nM lib/libUPnP/Neptune/Extras/Scripts/GenErrorMap.py (5)\nA lib/libUPnP/Neptune/Extras/Scripts/GenTrustAnchorsTables.py (138)\nM lib/libUPnP/Neptune/Extras/Tools/Logging/NeptuneLogConsole.py (2)\nA lib/libUPnP/Neptune/Extras/Tools/Logging/NeptuneLogConsoleMulticast.py\n(86)\nA lib/libUPnP/Neptune/Extras/Tools/Testing/MakeUrlList.py (16)\nA lib/libUPnP/Neptune/Extras/Tools/Testing/axtls-crash-url.txt (1)\nA lib/libUPnP/Neptune/Extras/Tools/Testing/http-urls.txt (3037)\nA lib/libUPnP/Neptune/Extras/Tools/Testing/https-urls.txt (5974)\nM lib/libUPnP/Neptune/README.txt (2)\nM lib/libUPnP/Neptune/Source/Apps/NetConfig/NetConfig.cpp (1)\nM lib/libUPnP/Neptune/Source/Apps/NetEcho/NetEcho.cpp (6)\nA lib/libUPnP/Neptune/Source/Apps/NetGet/NetGet.cpp (178)\nM lib/libUPnP/Neptune/Source/Apps/NetPing/NetPing.cpp (2)\nM lib/libUPnP/Neptune/Source/Apps/NetPump/NetPump.cpp (254)\nA lib/libUPnP/Neptune/Source/Apps/NetResolve/NetResolve.cpp (77)\nM lib/libUPnP/Neptune/Source/Core/Neptune.h (2)\nA lib/libUPnP/Neptune/Source/Core/NptAutoreleasePool.h (57)\nM lib/libUPnP/Neptune/Source/Core/NptBufferedStreams.cpp (36)\nM lib/libUPnP/Neptune/Source/Core/NptCommon.h (10)\nM lib/libUPnP/Neptune/Source/Core/NptConfig.h (59)\nA lib/libUPnP/Neptune/Source/Core/NptCrypto.cpp (833)\nA lib/libUPnP/Neptune/Source/Core/NptCrypto.h (78)\nA lib/libUPnP/Neptune/Source/Core/NptDigest.cpp (685)\nA lib/libUPnP/Neptune/Source/Core/NptDigest.h (78)\nM lib/libUPnP/Neptune/Source/Core/NptFile.cpp (122)\nM lib/libUPnP/Neptune/Source/Core/NptFile.h (50)\nA lib/libUPnP/Neptune/Source/Core/NptHash.cpp (137)\nA lib/libUPnP/Neptune/Source/Core/NptHash.h (83)\nM lib/libUPnP/Neptune/Source/Core/NptHttp.cpp (1840)\nM lib/libUPnP/Neptune/Source/Core/NptHttp.h (325)\nM lib/libUPnP/Neptune/Source/Core/NptList.h (104)\nM lib/libUPnP/Neptune/Source/Core/NptLogging.cpp (359)\nM lib/libUPnP/Neptune/Source/Core/NptLogging.h (28)\nM lib/libUPnP/Neptune/Source/Core/NptMap.h (507)\nM lib/libUPnP/Neptune/Source/Core/NptMessaging.cpp (78)\nM lib/libUPnP/Neptune/Source/Core/NptMessaging.h (62)\nM lib/libUPnP/Neptune/Source/Core/NptNetwork.cpp (24)\nM lib/libUPnP/Neptune/Source/Core/NptNetwork.h (27)\nM lib/libUPnP/Neptune/Source/Core/NptQueue.h (6)\nM lib/libUPnP/Neptune/Source/Core/NptReferences.h (61)\nM lib/libUPnP/Neptune/Source/Core/NptResults.cpp (41)\nM lib/libUPnP/Neptune/Source/Core/NptResults.h (77)\nM lib/libUPnP/Neptune/Source/Core/NptRingBuffer.cpp (3)\nM lib/libUPnP/Neptune/Source/Core/NptSimpleMessageQueue.cpp (32)\nM lib/libUPnP/Neptune/Source/Core/NptSimpleMessageQueue.h (2)\nM lib/libUPnP/Neptune/Source/Core/NptSockets.h (40)\nM lib/libUPnP/Neptune/Source/Core/NptStreams.cpp (2)\nM lib/libUPnP/Neptune/Source/Core/NptStreams.h (3)\nM lib/libUPnP/Neptune/Source/Core/NptStrings.cpp (213)\nM lib/libUPnP/Neptune/Source/Core/NptStrings.h (55)\nM lib/libUPnP/Neptune/Source/Core/NptSystem.h (3)\nM lib/libUPnP/Neptune/Source/Core/NptThreads.cpp (5)\nM lib/libUPnP/Neptune/Source/Core/NptThreads.h (43)\nM lib/libUPnP/Neptune/Source/Core/NptTime.cpp (940)\nM lib/libUPnP/Neptune/Source/Core/NptTime.h (132)\nM lib/libUPnP/Neptune/Source/Core/NptTls.cpp (835)\nM lib/libUPnP/Neptune/Source/Core/NptTls.h (221)\nA lib/libUPnP/Neptune/Source/Core/NptTlsDefaultTrustAnchorsBase.h (583)\nA lib/libUPnP/Neptune/Source/Core/NptTlsDefaultTrustAnchorsExtended.h (91)\nM lib/libUPnP/Neptune/Source/Core/NptTypes.h (10)\nM lib/libUPnP/Neptune/Source/Core/NptUri.cpp (166)\nM lib/libUPnP/Neptune/Source/Core/NptUri.h (200)\nM lib/libUPnP/Neptune/Source/Core/NptUtils.cpp (124)\nM lib/libUPnP/Neptune/Source/Core/NptUtils.h (11)\nM lib/libUPnP/Neptune/Source/Core/NptVersion.h (4)\nM lib/libUPnP/Neptune/Source/Core/NptXml.cpp (208)\nM lib/libUPnP/Neptune/Source/Core/NptXml.h (23)\nM lib/libUPnP/Neptune/Source/Core/NptZip.cpp (25)\nM lib/libUPnP/Neptune/Source/Core/NptZip.h (36)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0000.cpp\n(108)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0001.cpp\n(100)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0002.cpp\n(112)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0003.cpp\n(137)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0004.cpp\n(138)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0005.cpp\n(139)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0006.cpp\n(135)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0007.cpp\n(138)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0008.cpp\n(137)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0009.cpp\n(138)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0010.cpp\n(138)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0011.cpp\n(160)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0012.cpp\n(160)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0013.cpp\n(109)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0014.cpp\n(109)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0015.cpp\n(109)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0016.cpp\n(133)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0017.cpp\n(133)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0018.cpp\n(133)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0019.cpp\n(133)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0020.cpp\n(148)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0021.cpp\n(156)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0022.cpp\n(130)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0023.cpp\n(130)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0024.cpp\n(130)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0025.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0026.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0027.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0028.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0029.cpp\n(192)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0030.cpp\n(195)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0031.cpp\n(177)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0032.cpp\n(148)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0033.cpp\n(119)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0034.cpp\n(117)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0035.cpp\n(137)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0036.cpp\n(149)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0037.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0038.cpp\n(172)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0039.cpp\n(168)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0040.cpp\n(169)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0041.cpp\n(159)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0042.cpp\n(121)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0043.cpp\n(184)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0044.cpp\n(181)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0045.cpp\n(183)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0046.cpp\n(162)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0047.cpp\n(226)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0048.cpp\n(203)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0049.cpp\n(210)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0050.cpp\n(239)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0051.cpp\n(210)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0052.cpp\n(145)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0053.cpp\n(113)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0054.cpp\n(144)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0055.cpp\n(146)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0056.cpp\n(210)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0057.cpp\n(211)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0058.cpp\n(178)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0059.cpp\n(154)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0060.cpp\n(218)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0061.cpp\n(153)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0062.cpp\n(145)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0063.cpp\n(145)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0064.cpp\n(135)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0065.cpp\n(171)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0066.cpp\n(173)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0067.cpp\n(173)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0068.cpp\n(292)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0069.cpp\n(290)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0070.cpp\n(290)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0071.cpp\n(292)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0072.cpp\n(292)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0073.cpp\n(124)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0074.cpp\n(300)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0075.cpp\n(223)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0076.cpp\n(220)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0077.cpp\n(249)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0078.cpp\n(144)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0079.cpp\n(137)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0080.cpp\n(137)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0081.cpp\n(156)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0082.cpp\n(170)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0083.cpp\n(200)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0084.cpp\n(177)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0085.cpp\n(185)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0086.cpp\n(180)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0087.cpp\n(178)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0088.cpp\n(189)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0089.cpp\n(190)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0090.cpp\n(255)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0091.cpp\n(245)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0092.cpp\n(206)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0093.cpp\n(207)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0094.cpp\n(171)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0095.cpp\n(165)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0096.cpp\n(167)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0097.cpp\n(200)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0098.cpp\n(286)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0099.cpp\n(176)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0100.cpp\n(162)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0101.cpp\n(224)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0102.cpp\n(156)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0103.cpp\n(155)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0104.cpp\n(158)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0105.cpp\n(151)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0106.cpp\n(142)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0107.cpp\n(166)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0108.cpp\n(221)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0109.cpp\n(220)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0110.cpp\n(221)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0111.cpp\n(149)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0112.cpp\n(169)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0113.cpp\n(191)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0114.cpp\n(156)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0115.cpp\n(157)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0116.cpp\n(169)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0117.cpp\n(214)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0118.cpp\n(162)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0119.cpp\n(189)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0120.cpp\n(165)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0121.cpp\n(149)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0122.cpp\n(186)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0123.cpp\n(186)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0124.cpp\n(161)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0125.cpp\n(153)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0126.cpp\n(151)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0127.cpp\n(154)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0128.cpp\n(153)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0129.cpp\n(143)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0130.cpp\n(143)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0131.cpp\n(140)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0132.cpp\n(153)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0133.cpp\n(165)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0134.cpp\n(170)\nA lib/libUPnP/Neptune/Source/Data/TLS/Base/NptTlsTrustAnchor_Base_0135.cpp\n(188)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0000.cpp\n(156)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0001.cpp\n(211)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0002.cpp\n(164)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0003.cpp\n(173)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0004.cpp\n(163)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0005.cpp\n(180)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0006.cpp\n(282)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0007.cpp\n(154)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0008.cpp\n(242)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0009.cpp\n(219)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0010.cpp\n(200)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0011.cpp\n(144)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/Extended/NptTlsTrustAnchor_Extended_0012.cpp\n(226)\nA lib/libUPnP/Neptune/Source/Data/TLS/NptTlsDefaultTrustAnchorsBase.cpp\n(313)\nA\nlib/libUPnP/Neptune/Source/Data/TLS/NptTlsDefaultTrustAnchorsExtended.cpp\n(67)\nA lib/libUPnP/Neptune/Source/System/Android/NptAndroidConsole.cpp (26)\nM lib/libUPnP/Neptune/Source/System/Android/NptAndroidDebug.cpp (3)\nA lib/libUPnP/Neptune/Source/System/Android/NptAndroidLogConfig.cpp (19)\nA lib/libUPnP/Neptune/Source/System/Apple/NptAppleAutoreleasePool.mm (61)\nA lib/libUPnP/Neptune/Source/System/Apple/NptAppleLogConfig.mm (33)\nM lib/libUPnP/Neptune/Source/System/Bsd/NptBsdNetwork.cpp (210)\nA lib/libUPnP/Neptune/Source/System/Bsd/NptBsdResolver.cpp (109)\nM lib/libUPnP/Neptune/Source/System/Bsd/NptBsdSockets.cpp (702)\nA lib/libUPnP/Neptune/Source/System/Cocoa/NptCocoaConsole.mm (26)\nA lib/libUPnP/Neptune/Source/System/Cocoa/NptCocoaEnviroment.mm (40)\nM lib/libUPnP/Neptune/Source/System/Cocoa/NptCocoaMessageQueue.mm (16)\nA lib/libUPnP/Neptune/Source/System/Null/NptNullAutoreleasePool.cpp (27)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPDirectory.cpp (199)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPFile.cpp (441)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPNetwork.cpp (71)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPQueue.cpp (141)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPSystem.cpp (142)\nD lib/libUPnP/Neptune/Source/System/PSP/NptPSPThreads.cpp (487)\nM lib/libUPnP/Neptune/Source/System/Posix/NptPosixDynamicLibraries.cpp (5)\nA lib/libUPnP/Neptune/Source/System/Posix/NptPosixEnvironment.cpp (21)\nM lib/libUPnP/Neptune/Source/System/Posix/NptPosixFile.cpp (23)\nM lib/libUPnP/Neptune/Source/System/Posix/NptPosixQueue.cpp (10)\nM lib/libUPnP/Neptune/Source/System/Posix/NptPosixSystem.cpp (40)\nM lib/libUPnP/Neptune/Source/System/Posix/NptPosixThreads.cpp (144)\nA lib/libUPnP/Neptune/Source/System/Posix/NptPosixTime.cpp (84)\nM lib/libUPnP/Neptune/Source/System/Posix/NptSelectableMessageQueue.cpp (2)\nD lib/libUPnP/Neptune/Source/System/StdC/NptStdCTime.cpp (128)\nM lib/libUPnP/Neptune/Source/System/StdC/NptStdcDebug.cpp (2)\nM lib/libUPnP/Neptune/Source/System/StdC/NptStdcEnvironment.cpp (35)\nM lib/libUPnP/Neptune/Source/System/StdC/NptStdcFile.cpp (21)\nM lib/libUPnP/Neptune/Source/System/Win32/NptWin32File.cpp (8)\nM lib/libUPnP/Neptune/Source/System/Win32/NptWin32Network.h (2)\nM lib/libUPnP/Neptune/Source/System/Win32/NptWin32System.cpp (19)\nM lib/libUPnP/Neptune/Source/System/Win32/NptWin32Threads.cpp (84)\nA lib/libUPnP/Neptune/Source/System/Win32/NptWin32Time.cpp (33)\nM lib/libUPnP/Neptune/Source/Tests/Arrays1/ArraysTest1.cpp (1)\nM\nlib/libUPnP/Neptune/Source/Tests/BufferedStreams1/BufferedStreamsTest1.cpp\n(13)\nA lib/libUPnP/Neptune/Source/Tests/Crypto1/CryptoTest1.cpp (167)\nA lib/libUPnP/Neptune/Source/Tests/Digests1/DigestsTest1.cpp (228)\nM lib/libUPnP/Neptune/Source/Tests/FileTest1/FileTest1.cpp (294)\nM lib/libUPnP/Neptune/Source/Tests/FileTest2/FileTest2.cpp (7)\nM lib/libUPnP/Neptune/Source/Tests/HttpClient1/HttpClientTest1.cpp (39)\nA lib/libUPnP/Neptune/Source/Tests/HttpClient2/HttpClientTest2.cpp (229)\nM lib/libUPnP/Neptune/Source/Tests/Lists1/ListsTest1.cpp (36)\nM lib/libUPnP/Neptune/Source/Tests/Logging2/LoggingTest2.cpp (3)\nM lib/libUPnP/Neptune/Source/Tests/Maps1/MapsTest1.cpp (257)\nM lib/libUPnP/Neptune/Source/Tests/Misc1/MiscTest1.cpp (14)\nA lib/libUPnP/Neptune/Source/Tests/Network1/NetworkTest1.cpp (102)\nM lib/libUPnP/Neptune/Source/Tests/Queue1/QueueTest1.cpp (2)\nA lib/libUPnP/Neptune/Source/Tests/Sockets1/SocketsTest1.cpp (283)\nM lib/libUPnP/Neptune/Source/Tests/Streams1/StreamsTest1.cpp (2)\nM lib/libUPnP/Neptune/Source/Tests/Strings1/StringsTest1.cpp (40)\nM lib/libUPnP/Neptune/Source/Tests/Threads1/ThreadsTest1.cpp (100)\nM lib/libUPnP/Neptune/Source/Tests/Time1/TimeTest1.cpp (655)\nM lib/libUPnP/Neptune/Source/Tests/Tls1/TlsTest1.cpp (372)\nM lib/libUPnP/Neptune/Source/Tests/Url1/UrlTest1.cpp (31)\nM lib/libUPnP/Neptune/Source/Tests/Xml1/XmlTest1.cpp (30)\nM lib/libUPnP/Neptune/Source/Tests/Xml1/XmlTest1Data.cpp (68)\nR lib/libUPnP/Neptune/ThirdParty/axTLS/config/Generic/config.h (17)\nA lib/libUPnP/Neptune/ThirdParty/axTLS/config/Win32/config.h (124)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/aes.c (31)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/bigint.c (193)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/bigint_impl.h (21)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/crypto.h (8)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/crypto_misc.c (88)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/hmac.c (5)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/md2.c (2)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/md5.c (1)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/rc4.c (6)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/rsa.c (3)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/crypto/sha1.c (1)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/asn1.c (255)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/crypto_misc.h (23)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/gen_cert.c (10)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/loader.c (157)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/os_port.h (49)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/p12.c (15)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/ssl.h (54)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/tls1.c (480)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/tls1.h (36)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/tls1_clnt.c (74)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/tls1_svr.c (61)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/version.h (2)\nM lib/libUPnP/Neptune/ThirdParty/axTLS/ssl/x509.c (235)\nM lib/libUPnP/Platinum/Build/Boot.scons (50)\nM lib/libUPnP/Platinum/Build/Build.scons (113)\nA lib/libUPnP/Platinum/Build/Targets/arm-android-linux/Config.scons (124)\nD lib/libUPnP/Platinum/Build/Targets/arm-apple-darwin/Config.scons (21)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/CocoaTouchBrowser/CocoaTouchBrowser-Info.plist\n(30)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/CocoaTouchBrowser/CocoaTouchBrowser.xcodeproj/project.pbxproj\n(316)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/CocoaTouchBrowser/CocoaTouchBrowser_Prefix.pch\n(9)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/CocoaTouchBrowser/README\n(5)\nM lib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/Config.scons\n(9)\nM\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/Platinum.xcodeproj/project.pbxproj\n(4890)\nD\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/PlatinumApps.xcodeproj/project.pbxproj\n(1514)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/PlatinumFramework/PlatinumFramework-Info.plist\n(28)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/PlatinumFramework/PlatinumFramework-Prefix.pch\n(7)\nA\nlib/libUPnP/Platinum/Build/Targets/universal-apple-macosx/PlatinumFramework/en.lproj/InfoPlist.strings\n(2)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/FileMediaServerTest/FileMediaServerTest.vcproj\n(208)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/HttpTest/HttpTest.vcproj\n(208)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/LightSampleTest/LightSampleTest.vcproj\n(215)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/MediaCrawler/MediaCrawler.sln\n(42)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/MediaCrawler/MediaCrawler.vcproj\n(220)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/MediaRendererTest/MediaRendererTest.vcproj\n(208)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/MicroMediaController/MicroMediaController.vcproj\n(216)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/Platinum.sln\n(97)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/Platinum/Platinum.vcproj\n(559)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/SsdpProxy/SsdpProxy.vcproj\n(210)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2005/SsdpTest/SsdpTest1.vcproj\n(139)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/FileMediaServerTest/FileMediaServerTest.vcproj\n(14)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/FrameStreamer/FrameStreamer.vcproj\n(8)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/HttpTest/HttpTest.vcproj\n(14)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/LightSampleTest/LightSampleTest.vcproj\n(15)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/MediaConnect/MediaConnect.vcproj\n(6)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/MediaCrawler/MediaCrawler.vcproj\n(14)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/MediaRendererTest/MediaRendererTest.vcproj\n(11)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/MicroMediaController/MicroMediaController.vcproj\n(14)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.MediaServerTest/Platinum.Managed.MediaServerTest.csproj\n(109)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.MediaServerTest/Program.cs\n(180)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.MediaServerTest/Properties/AssemblyInfo.cs\n(36)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.MediaServerTest/app.config\n(3)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.SsdpTest/Platinum.Managed.SsdpTest.csproj\n(117)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.SsdpTest/Program.cs\n(87)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.SsdpTest/Properties/AssemblyInfo.cs\n(36)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed.SsdpTest/app.config\n(3)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/AssemblyInfo.cpp\n(40)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/Platinum.Managed.snk\n(0)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/Platinum.Managed.vcproj\n(421)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/Stdafx.cpp\n(5)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/Stdafx.h\n(20)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/app.aps\n(0)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.Managed/resource.h\n(3)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum.sln\n(76)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/Platinum/Platinum.vcproj\n(150)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/PlatinumManaged.sln\n(81)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/SimpleTest/SimpleTest.vcproj\n(10)\nM\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2008/TimeTest/TimeTest.vcproj\n(14)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/FileMediaServerTest/FileMediaServerTest.vcxproj\n(122)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/FrameStreamer/FrameStreamer.vcxproj\n(111)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/HttpTest/HttpTest.vcxproj\n(120)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/LightSampleTest/LightSampleTest.vcxproj\n(123)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/MediaConnect/MediaConnect.vcxproj\n(116)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/MediaCrawler/MediaCrawler.vcxproj\n(126)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/MediaRendererTest/MediaRendererTest.vcxproj\n(120)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/MicroMediaController/MicroMediaController.vcxproj\n(126)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.MediaServerTest/Platinum.Managed.MediaServerTest.csproj\n(123)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.MediaServerTest/Program.cs\n(180)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.MediaServerTest/Properties/AssemblyInfo.cs\n(37)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.MediaServerTest/app.config\n(3)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.SsdpTest/Platinum.Managed.SsdpTest.csproj\n(122)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.SsdpTest/Program.cs\n(87)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.SsdpTest/Properties/AssemblyInfo.cs\n(36)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed.SsdpTest/app.config\n(3)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/AssemblyInfo.cpp\n(40)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/Platinum.Managed.snk\n(0)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/Platinum.Managed.vcxproj\n(169)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/Stdafx.cpp\n(5)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/Stdafx.h\n(21)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.Managed/resource.h\n(3)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum.sln\n(165)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/Platinum/Platinum.vcxproj\n(193)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/PlatinumManaged.sln\n(88)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/SimpleTest/SimpleTest.vcxproj\n(115)\nA\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-win32-vs2010/TimeTest/TimeTest.vcxproj\n(122)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-xbox-vs2003/MediaServer/PltMediaServer.vcproj\n(247)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-xbox-vs2003/Platinum.sln\n(44)\nD\nlib/libUPnP/Platinum/Build/Targets/x86-microsoft-xbox-vs2003/Platinum/Platinum.vcproj\n(451)\nA lib/libUPnP/Platinum/Build/Tools/Scripts/GenDocumentation.py (77)\nA lib/libUPnP/Platinum/Build/Tools/Scripts/GenSvnVersionHeader.py (41)\nA lib/libUPnP/Platinum/Build/Tools/Scripts/MakeAllVs.py (37)\nR lib/libUPnP/Platinum/Build/Tools/Scripts/VsMake.py (2)\nA lib/libUPnP/Platinum/Build/Tools/Scripts/XCodeMake.py (83)\nM lib/libUPnP/Platinum/CHANGELOG.txt (212)\nM lib/libUPnP/Platinum/LICENSE.txt (5)\nM lib/libUPnP/Platinum/README.txt (42)\nA\nlib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/CocoaTouchBrowser-Info.plist\n(22)\nA\nlib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/CocoaTouchBrowserAppDelegate.h\n(44)\nA\nlib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/CocoaTouchBrowserAppDelegate.m\n(73)\nA lib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/MainWindow.xib (267)\nR lib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/MediaBrowserWrapper.h\n(78)\nA\nlib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/MediaBrowserWrapper.mm\n(130)\nA lib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/RootViewController.h\n(38)\nA lib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/RootViewController.m\n(179)\nA\nlib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/RootViewController.xib\n(192)\nA lib/libUPnP/Platinum/Source/Apps/CocoaTouchBrowser/main.m (43)\nM lib/libUPnP/Platinum/Source/Apps/FrameStreamer/main.cpp (67)\nM lib/libUPnP/Platinum/Source/Apps/MediaConnect/main.cpp (21)\nM lib/libUPnP/Platinum/Source/Apps/MediaCrawler/MediaCrawler.cpp (23)\nM lib/libUPnP/Platinum/Source/Apps/MediaCrawler/MediaCrawler.h (8)\nM lib/libUPnP/Platinum/Source/Apps/MediaCrawler/StreamHandler.h (3)\nM lib/libUPnP/Platinum/Source/Apps/MediaCrawler/main.cpp (6)\nM\nlib/libUPnP/Platinum/Source/Apps/MicroMediaController/PltMicroMediaController.cpp\n(63)\nM\nlib/libUPnP/Platinum/Source/Apps/MicroMediaController/PltMicroMediaController.h\n(10)\nM lib/libUPnP/Platinum/Source/Apps/MicroMediaController/main.cpp (58)\nM lib/libUPnP/Platinum/Source/Core/PltAction.cpp (13)\nM lib/libUPnP/Platinum/Source/Core/PltAction.h (199)\nM lib/libUPnP/Platinum/Source/Core/PltArgument.cpp (7)\nM lib/libUPnP/Platinum/Source/Core/PltArgument.h (32)\nM lib/libUPnP/Platinum/Source/Core/PltConstants.cpp (13)\nM lib/libUPnP/Platinum/Source/Core/PltConstants.h (29)\nM lib/libUPnP/Platinum/Source/Core/PltCtrlPoint.cpp (635)\nM lib/libUPnP/Platinum/Source/Core/PltCtrlPoint.h (92)\nM lib/libUPnP/Platinum/Source/Core/PltCtrlPointTask.cpp (64)\nM lib/libUPnP/Platinum/Source/Core/PltCtrlPointTask.h (95)\nM lib/libUPnP/Platinum/Source/Core/PltDatagramStream.cpp (53)\nM lib/libUPnP/Platinum/Source/Core/PltDatagramStream.h (24)\nM lib/libUPnP/Platinum/Source/Core/PltDeviceData.cpp (199)\nM lib/libUPnP/Platinum/Source/Core/PltDeviceData.h (53)\nM lib/libUPnP/Platinum/Source/Core/PltDeviceHost.cpp (362)\nM lib/libUPnP/Platinum/Source/Core/PltDeviceHost.h (285)\nM lib/libUPnP/Platinum/Source/Core/PltEvent.cpp (56)\nM lib/libUPnP/Platinum/Source/Core/PltEvent.h (29)\nM lib/libUPnP/Platinum/Source/Core/PltHttp.cpp (307)\nM lib/libUPnP/Platinum/Source/Core/PltHttp.h (119)\nM lib/libUPnP/Platinum/Source/Core/PltHttpClientTask.cpp (202)\nM lib/libUPnP/Platinum/Source/Core/PltHttpClientTask.h (83)\nM lib/libUPnP/Platinum/Source/Core/PltHttpServer.cpp (283)\nM lib/libUPnP/Platinum/Source/Core/PltHttpServer.h (80)\nM lib/libUPnP/Platinum/Source/Core/PltHttpServerTask.cpp (185)\nM lib/libUPnP/Platinum/Source/Core/PltHttpServerTask.h (105)\nM lib/libUPnP/Platinum/Source/Core/PltIconsData.cpp (5)\nA lib/libUPnP/Platinum/Source/Core/PltMimeType.cpp (164)\nR lib/libUPnP/Platinum/Source/Core/PltMimeType.h (52)\nA lib/libUPnP/Platinum/Source/Core/PltProtocolInfo.cpp (584)\nA lib/libUPnP/Platinum/Source/Core/PltProtocolInfo.h (158)\nM lib/libUPnP/Platinum/Source/Core/PltService.cpp (124)\nM lib/libUPnP/Platinum/Source/Core/PltService.h (373)\nM lib/libUPnP/Platinum/Source/Core/PltSsdp.cpp (182)\nM lib/libUPnP/Platinum/Source/Core/PltSsdp.h (122)\nM lib/libUPnP/Platinum/Source/Core/PltStateVariable.cpp (23)\nM lib/libUPnP/Platinum/Source/Core/PltStateVariable.h (143)\nM lib/libUPnP/Platinum/Source/Core/PltTaskManager.cpp (80)\nM lib/libUPnP/Platinum/Source/Core/PltTaskManager.h (41)\nM lib/libUPnP/Platinum/Source/Core/PltThreadTask.cpp (109)\nM lib/libUPnP/Platinum/Source/Core/PltThreadTask.h (98)\nD lib/libUPnP/Platinum/Source/Core/PltTime.cpp (150)\nM lib/libUPnP/Platinum/Source/Core/PltUPnP.cpp (44)\nM lib/libUPnP/Platinum/Source/Core/PltUPnP.h (69)\nD lib/libUPnP/Platinum/Source/Core/PltUPnPHelper.h (341)\nA lib/libUPnP/Platinum/Source/Core/PltUtilities.h (697)\nD lib/libUPnP/Platinum/Source/Core/PltXmlHelper.h (295)\nM lib/libUPnP/Platinum/Source/Devices/MediaConnect/PltMediaConnect.cpp\n(347)\nM lib/libUPnP/Platinum/Source/Devices/MediaConnect/PltMediaConnect.h (96)\nA lib/libUPnP/Platinum/Source/Devices/MediaConnect/PltXbox360.cpp (214)\nA lib/libUPnP/Platinum/Source/Devices/MediaConnect/PltXbox360.h (73)\nM\nlib/libUPnP/Platinum/Source/Devices/MediaConnect/X_MS_MediaReceiverRegistrarSCPD.cpp\n(3)\nM lib/libUPnP/Platinum/Source/Devices/MediaRenderer/AVTransportSCPD.cpp (3)\nM lib/libUPnP/Platinum/Source/Devices/MediaRenderer/PltMediaController.cpp\n(176)\nM lib/libUPnP/Platinum/Source/Devices/MediaRenderer/PltMediaController.h\n(49)\nM lib/libUPnP/Platinum/Source/Devices/MediaRenderer/PltMediaRenderer.cpp\n(122)\nM lib/libUPnP/Platinum/Source/Devices/MediaRenderer/PltMediaRenderer.h (23)\nM\nlib/libUPnP/Platinum/Source/Devices/MediaRenderer/RdrConnectionManagerSCPD.cpp\n(3)\nA\nlib/libUPnP/Platinum/Source/Devices/MediaRenderer/RdrConnectionManagerSCPD.xml\n(132)\nM\nlib/libUPnP/Platinum/Source/Devices/MediaRenderer/RenderingControlSCPD.cpp\n(3)\nM\nlib/libUPnP/Platinum/Source/Devices/MediaServer/ConnectionManagerSCPD.cpp\n(10)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/ContentDirectorySCPD.cpp\n(3)\nM\nlib/libUPnP/Platinum/Source/Devices/MediaServer/ContentDirectorywSearchSCPD.cpp\n(5)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltDidl.cpp (186)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltDidl.h (50)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltFileMediaServer.cpp\n(579)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltFileMediaServer.h\n(131)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaBrowser.cpp (38)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaBrowser.h (34)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaCache.cpp (124)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaCache.h (172)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaItem.cpp (1082)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaItem.h (168)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaServer.cpp (165)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltMediaServer.h (106)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltSyncMediaBrowser.cpp\n(19)\nM lib/libUPnP/Platinum/Source/Devices/MediaServer/PltSyncMediaBrowser.h\n(13)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Action.cpp (92)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Action.h (159)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ActionArgumentDescription.cpp\n(45)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ActionArgumentDescription.h\n(153)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ActionDescription.cpp (69)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ActionDescription.h (123)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Clix.h (202)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ControlPoint.cpp (115)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ControlPoint.h (227)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ControlPointEventBridge.cpp\n(88)\nA lib/libUPnP/Platinum/Source/Extras/Managed/ControlPointEventBridge.h (68)\nA lib/libUPnP/Platinum/Source/Extras/Managed/DeviceData.cpp (168)\nA lib/libUPnP/Platinum/Source/Extras/Managed/DeviceData.h (264)\nA lib/libUPnP/Platinum/Source/Extras/Managed/DeviceHost.cpp (38)\nA lib/libUPnP/Platinum/Source/Extras/Managed/DeviceHost.h (124)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Didl.cpp (39)\nR lib/libUPnP/Platinum/Source/Extras/Managed/Didl.h (43)\nA lib/libUPnP/Platinum/Source/Extras/Managed/EnumerableNptArray.h (226)\nA lib/libUPnP/Platinum/Source/Extras/Managed/EnumerableNptList.h (234)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Helpers.cpp (39)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Helpers.h (378)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Http.cpp (38)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Http.h (286)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaConnect.cpp (59)\nR lib/libUPnP/Platinum/Source/Extras/Managed/MediaConnect.h (55)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaObject.cpp (118)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaObject.h (735)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaServer.cpp (121)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaServer.h (131)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaServerEventBridge.cpp\n(103)\nA lib/libUPnP/Platinum/Source/Extras/Managed/MediaServerEventBridge.h (97)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Neptun_marshal_as.h (104)\nA lib/libUPnP/Platinum/Source/Extras/Managed/NeptuneException.cpp (39)\nA lib/libUPnP/Platinum/Source/Extras/Managed/NeptuneException.h (64)\nA lib/libUPnP/Platinum/Source/Extras/Managed/NeptuneLoggingBridge.cpp (38)\nA lib/libUPnP/Platinum/Source/Extras/Managed/NeptuneLoggingBridge.h (207)\nA lib/libUPnP/Platinum/Source/Extras/Managed/Service.cpp (97)\nR lib/libUPnP/Platinum/Source/Extras/Managed/Service.h (144)\nA lib/libUPnP/Platinum/Source/Extras/Managed/StateVariable.cpp (44)\nA lib/libUPnP/Platinum/Source/Extras/Managed/StateVariable.h (165)\nA lib/libUPnP/Platinum/Source/Extras/Managed/UPnP.cpp (81)\nA lib/libUPnP/Platinum/Source/Extras/Managed/UPnP.h (131)\nA lib/libUPnP/Platinum/Source/Extras/ObjectiveC/PltMediaServerObject.h (87)\nA lib/libUPnP/Platinum/Source/Extras/ObjectiveC/PltMediaServerObject.mm\n(224)\nA lib/libUPnP/Platinum/Source/Extras/ObjectiveC/PltUPnPObject.h (65)\nA lib/libUPnP/Platinum/Source/Extras/ObjectiveC/PltUPnPObject.mm (120)\nR lib/libUPnP/Platinum/Source/Extras/PltDownloader.cpp (19)\nR lib/libUPnP/Platinum/Source/Extras/PltDownloader.h (14)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameBuffer.cpp (52)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameBuffer.h (14)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameServer.cpp (207)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameServer.h (44)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameStream.cpp (21)\nR lib/libUPnP/Platinum/Source/Extras/PltFrameStream.h (27)\nR lib/libUPnP/Platinum/Source/Extras/PltLeaks.cpp (5)\nR lib/libUPnP/Platinum/Source/Extras/PltLeaks.h (5)\nR lib/libUPnP/Platinum/Source/Extras/PltMetadataHandler.cpp (5)\nR lib/libUPnP/Platinum/Source/Extras/PltMetadataHandler.h (13)\nR lib/libUPnP/Platinum/Source/Extras/PltRingBufferStream.cpp (135)\nR lib/libUPnP/Platinum/Source/Extras/PltRingBufferStream.h (40)\nR lib/libUPnP/Platinum/Source/Extras/PltStreamPump.cpp (5)\nR lib/libUPnP/Platinum/Source/Extras/PltStreamPump.h (5)\nM lib/libUPnP/Platinum/Source/Platinum/Platinum.h (73)\nD lib/libUPnP/Platinum/Source/Platinum/PltSvnVersion.h (3)\nM lib/libUPnP/Platinum/Source/Platinum/PltVersion.h (12)\nM\nlib/libUPnP/Platinum/Source/Tests/FileMediaServer/FileMediaServerTest.cpp\n(21)\nM lib/libUPnP/Platinum/Source/Tests/Http/HttpTest.cpp (236)\nM lib/libUPnP/Platinum/Source/Tests/LightSample/LightSampleTest.cpp (3)\nM lib/libUPnP/Platinum/Source/Tests/LightSample/PltLightSample.cpp (11)\nM lib/libUPnP/Platinum/Source/Tests/LightSample/PltLightSample.h (5)\nM lib/libUPnP/Platinum/Source/Tests/MediaRenderer/MediaRendererTest.cpp (3)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/English.lproj/InfoPlist.strings\n(0)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/English.lproj/MainMenu.xib\n(3224)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest-Info.plist\n(32)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTestController.h\n(20)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTestController.mm\n(68)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_AppDelegate.h\n(28)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_AppDelegate.m\n(212)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_AppDelegate.mm\n(212)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_DataModel.xcdatamodel/elements\n(0)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_DataModel.xcdatamodel/layout\n(0)\nA\nlib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/MediaServerCocoaTest_Prefix.pch\n(7)\nA lib/libUPnP/Platinum/Source/Tests/MediaServerCocoaTest/main.mm (14)\nM lib/libUPnP/Platinum/Source/Tests/Simple/PltSimple.cpp (11)\nM lib/libUPnP/Platinum/Source/Tests/Simple/PltSimple.h (5)\nM lib/libUPnP/Platinum/Source/Tests/Simple/SimpleTest.cpp (4)\nM lib/libUPnP/Platinum/Source/Tests/Ssdp/SsdpTest1.cpp (3)\nM lib/libUPnP/Platinum/Source/Tests/Time/TimeTest1.cpp (52)\nD lib/libUPnP/Platinum/Targets/neptune-logging.properties (11)\nM xbmc/Application.cpp (26)\nM xbmc/filesystem/FileFactory.cpp (4)\nM xbmc/filesystem/Makefile.in (11)\nM xbmc/filesystem/UPnPDirectory.cpp (11)\nM xbmc/network/Makefile.in (9)\nA xbmc/network/upnp/Makefile.in (19)\nR xbmc/network/upnp/UPnP.cpp (226)\nR xbmc/network/upnp/UPnP.h (26)\nM xbmc/system.h (5)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1238.patch\n  https://github.com/xbmc/xbmc/pull/1238.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1238\n. Looking pretty good, but needs rebase and some squashes. We don't want to have commits where xbmc is not in a compiling state.\n. Alternate texts.\nOn playback start/stop\nOn fullscreen enter/exit\n. This would end up wrong for stacks anyway. The value returned is percentage\nof current playing item. Thus much too large if you have a stack.\n\nYou have to re scale the value based on total time of all items and current\nitem. Ie. Get cache percent / current file total time * total stack time.\nOn Aug 6, 2012 7:03 PM, \"arnova\" \nreply@reply.github.com\nwrote:\n\nThe values returned by CApp::GetCachePercentage() are wrong for stacked\nitems causing eg. info labels to be incorrect. The problem is that\nDVDPlayer::GetCachePercentage() returns an absolute value and is not aware\nof any stacks (which are handled by CApp) ,(un)like CApp:GetPercentage().\nI've fixed this by having DVDPlayer::GetCachePercentage() return a relative\nvalue instead and calculate the proper absolute value in\nCApp::GetCachePercentage(). This can be safely done since\nDVDPlayer::GetCachePercentage() is only used in one place.\n@elupus: Please review. Perhaps it's better to move this into the Info\nManager?\nYou can merge this Pull Request by running:\ngit pull https://github.com/arnova/xbmc stacked_cache_info_fix\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1251\n-- Commit Summary --\n- fixed: GetCachePercentage() was wrong for stacked items\n-- File Changes --\nM xbmc/Application.cpp (3)\nM xbmc/cores/dvdplayer/DVDPlayer.cpp (2)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1251.patch\n  https://github.com/xbmc/xbmc/pull/1251.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1251\n. On Aug 6, 2012 7:43 PM, \"arnova\" \nreply@reply.github.com\nwrote:\nAh yes, good one. I've changed it, you meant like this? Is the location\n(CApp) ok?\n\nYup and yup, but you should probably check for zero total time to avoid\ndivision by zero. Use a temporary variable to avoid a race. Add that then\nmerge.\n\nI was also wondering whether cacheDuration calculation in\nAirPlayerServer.cpp (line #926) is correct at all? Doesn't it already\neither assume relative cache percentage or should it take into account the\ncurrent position? I'm not sure about what cacheDuration should represent.\n\nNo idea. Can't look at code now (drinking my ass off in Lagos). Also don't\nreally know the airplay code.\n. Should be fine, but I doubt it will make a noticeable difference.\nOn Aug 7, 2012 5:24 PM, \"Karlson2k\" notifications@github.com wrote:\n\n256k seems to be optimal for windows platform (see various ATTO results on\nthe web).\nYou can merge this Pull Request by running:\ngit pull https://github.com/Karlson2k/xbmc CFile_buffer_size_update\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1260\nCommit Summary\n- Update outdated buffer size value in File.cpp\nFile Changes\n- M xbmc/filesystem/File.cpp (5)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1260.patch\n- https://github.com/xbmc/xbmc/pull/1260.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1260.\n. (drunk off my ass) if this would lower performance, I would be a smurf.\n\nDrop the \"optimal\" comment (comment altogether) then at least I'm fine with\nit.\nOn Aug 7, 2012 10:48 PM, \"jmarshallnz\" notifications@github.com wrote:\n\nSo you've actually done tests on a number of different\nfilesystems/protocols (smb/afp/local etc.) with a number of differently\nsized files over a number of different network types (wired, wifi, local)?\nOn Wed, Aug 8, 2012 at 9:44 AM, Karlson2k notifications@github.com\nwrote:\n\n@jmarshallnz https://github.com/jmarshallnz There is placeholder for\nother platforms, but it's common on all platforms - bigger buffer\nresults\nin faster copy.\nSo I'm sure that it will improve performance on all platforms.\nBut I can #ifdef for now-Windows platform with old (xbox) value. Should\nI\ndo so?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1260#issuecomment-7567902>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1260#issuecomment-7567996.\n. Somewhat. I can't merge though.\n. Fully agree. Annoyed me for a long time. Alternatively they could be\ndoubles.\n. It should be fixed now.\n. When windows builds properly again, somebody might want to remove the\nduplicate m_flags variable in that or rename the m_iFlags to m_flags\nin all the other renderers.\n. Dirty rendering problem. The control is not marked as dirty for som reason.\n. An alternate solution is to move the tag parsing up to the player. Would be\ncleaner, but more work.\nOn Aug 13, 2012 9:05 AM, \"Arne Morten Kvarving\" notifications@github.com\nwrote:\nold handling updated the streaming tag when we read it into the cache, not\nat the appropriate place in the stream. this delays the updating until the\ncorrect position is reached.\nit's the cleanest solution i could come up with. alternative suggestions\nwelcome.\nYou can merge this Pull Request by running:\ngit pull https://github.com/cptspiff/xbmc streaming_tag_fix\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1284\nCommit Summary\n- added: set the current info manager item/tags through the\n  appmessenger\n- fixed: set the current tag through the info manager\n- added: IOCTRL_SET_CACHE io control to the VFS\n- changed: complicate streaming tag handling\nFile Changes\n- M xbmc/ApplicationMessenger.cpp (43)\n- M xbmc/ApplicationMessenger.h (13)\n- M xbmc/cores/dvdplayer/DVDPlayer.cpp (3)\n- M xbmc/filesystem/FileCache.cpp (2)\n- M xbmc/filesystem/IFileTypes.h (1)\n- M xbmc/filesystem/ShoutcastFile.cpp (79)\n- M xbmc/filesystem/ShoutcastFile.h (17)\n- M xbmc/interfaces/http-api/XBMChttp.cpp (2)\n- M xbmc/music/LastFmManager.cpp (2)\n- M xbmc/network/AirTunesServer.cpp (3)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1284.patch\n- https://github.com/xbmc/xbmc/pull/1284.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1284.\n. Just fix above then fine.\n. It's a big diff. If you could splitt the pull between GLES and GL, i would appreciate it. The GL stuff i can review, but i need assistance on the GLES since i can't test that.\n. First glance is good thou.\n. That looks a bit ugly. But i'm not sure i have a better solution. Perhaps\nmaking len a member variable so it can be remember from last call. But i'm\nokey with this change.\n. Do you have a sample that this fixes, or it was something you just spotted?\n. But yes, this looks correct. Lets merge and see if anybody complain.\n. Is this something you still consider valid?\n. Looks good, merge away.\n. I ment it for any dev that happen to stop by before I'm at a computer. :-)\n. Looks good, merge away.\nOn Aug 26, 2012 1:12 AM, \"Lars Op den Kamp\" notifications@github.com\nwrote:\nfixes this issue: https://github.com/opdenkamp/xbmc/issues/618\nYou can merge this Pull Request by running:\ngit pull https://github.com/opdenkamp/xbmc fix-ae-crash\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1333\nCommit Summary\n- fixed - set m_pFrame1 to NULL in CDVDAudioCodecFFmpeg ctor. fixes\n  pos\u2026\nFile Changes\n- M xbmc/cores/dvdplayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp (2)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1333.patch\n- https://github.com/xbmc/xbmc/pull/1333.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1333.\n. You are no pest. I need reminders. Will try to look at it tonight.\n. If you can fix above, i'll merge this in this window.\n. Easiest to fix it up is to add a fixup commit, then rebase interactivily, sqaush the fixup commit into the original commit.  The force push to to the same branch on your github and this pull request will update.\n. I'd prefer if you fixed up the commits i commented on and force push again. then we don't get broken code in between.\n. Looks good. Will look over it once more, then merge if okey.\n. Sorry I missed above in last review. You were so quick to respond to changes. I can merge it in manually dropping the Shader.h change, but i can't press the nice big green merge button :).\n. This really just feel like a broken file. 12 seconds desync between audio\nand video is just wrong. And that really should not even be a problem when\nplayed back. It should issue seeks in the file to get the audio and video\nin the correct order. It feel like bug further down.\n. Ffmpeg seek internally on mp4s.\n. They very likely did. Live stream should not require player to buffer\nseveral seconds of video data to play in sync with audio. The other way\naround may be more okey, but it's still the same thing. Audio and video\nshould be received synced.\n\nFor mp4's it's different. They contain an index that says where each sample\nis in the stream. The demuxer then uses this index to jump to each sample\nin decode time turn, and output it. To allow streaming, we allow up to\n8seconds skew between samples if they are in byte order. May there is an\nissue with that, so we allow too large skew in samples in libavformat.\n(demuxer is in libavformat/mov.c).\nOr maybe we fail to parse the mp4 index, so we just play them in byte\norder. Have to slow internet access to check that file right now.\n. It blew up due changes I requested :-), failure on my part mainly.\nIt needs both review and testing  obviously.\n. Stdbool.h us good to have broken systems like Windows :-). so leave it.\n. Annoying github not showing diffs on files further down. Anyway:\nKey.h changes look scary, it's changing old window id's.\nThere is clearly some stuff i still don't like in the code. Mainly in dvdplayer.cpp and the interface to the addons for providing data, but I only have myself for blame regarding that since i've not looked at it. But it's nothing blocking a merge.\nSome sami subtitle support has snuck in that could be separate.\nThe key.h header stuff i think needs fixing. Feel like it could break stuff. It's a huge amount of code, but my first scan through the patch is good so I have nothing blocking a merge.\n. When you rebase, would be nice if non english translations where added as a separate commit. (they are not a core requirement)\n. I never meant leave the translations out. I just meant as a separate commit. This is one huge commit as it is. If it can easily be split that makes it more readable.\n. @bobo1on1 this is your code, could you have a look.\n. Check my upnp pull. I'm changing that check to is playing instead. No major\nproblems with that. Should solve this too right?\n. Okey.. i admit there are some issues with it. confluence seem to display both music title and video title in some places.\n. @opdenkamp IsPlaying() does return true while switching players if the switch happens inside dvdplayer and not via a new call to OpenFile\n. I've updated my pull at https://github.com/xbmc/xbmc/pull/1597 to fix the display issues I had with my solution. Check the first commits of that pull request.\n. I've noticed a bug with music tags that need to be resolved. But after\nthat, all those thing can go in separate of the upnp stuff.\n. Soo.. my upnp pull is not going to go in for Frodo. Maybe some parts can go in thou.\n. So what is the status of this now. The upnp stuff has been merged so it's time to take a look to see what on this pull is required.\n. Agree. Back ports need no patch. But it doesn't hurt much either.\nOn Sep 7, 2012 4:12 PM, \"Arne Morten Kvarving\" notifications@github.com\nwrote:\n\nimo we can just skip the patch for anything that will brought in with an\nupdate.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1385#issuecomment-8365947.\n. Looks ok.\n. Could you explain a bit more in detail what it improves?\n. The first commit we can be merged as soon as merge window open. It could be improved I suppose by create a struct for holding the fbo properties, and having RenderFromFbo taking that as a parameter. But it is better than current code anyway.\n. How does that work. You can't scale a weaved image.. Each field need to be scaled separate.\n. Yes, if we get separate fields for a progressive source we need to do that yes. It's only vdpau interrop that does so currently right?\n. The total diff looks okay, so it's fine to be merged.\n. Yes, the add silence feature had similar issue. I really think we should\nadjust video for a residual error.\nOn Sep 11, 2012 2:24 PM, \"a11599\" notifications@github.com wrote:\nDo I see correctly that this piece of code adds some silence every 2\nseconds unless the packet is dropped/duped?\nAlso I am worried how all the various AV equipment out there reacts when a\nvalid bitstream is interrupted by a zeroed audio frame mid-stream. They can\njust start switching decoders or do other crazy stuff causing audio\ndropouts, relays clicking, etc. If memory serves me correct I think we had\nissues in the past with a similar AddSilence implementation.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1411#issuecomment-8457774.\n. Ac3 frames are 32ms long. 32ms should not be noticeable if sync is correct\nto begin with.\n\nWhat is it that has 64 ms frames?\nOn Sep 11, 2012 8:48 AM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nMost of my material has a audio packet length of 64ms. Sync with skip/dupe\nresulted in very noticeable (> 30ms) a/v desync.\nThis improved method syncs a/v to 10ms by adding silence to audio.\nYou can merge this Pull Request by running:\ngit pull https://github.com/FernetMenta/xbmc audio\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1411\nCommit Summary\n- dvdplayer audio: improve a/v when using skip/dupe method, duration\n  of\u2026\nFile Changes\n- M xbmc/cores/dvdplayer/DVDAudio.cpp (13)\n- M xbmc/cores/dvdplayer/DVDAudio.h (1)\n- M xbmc/cores/dvdplayer/DVDPlayerAudio.cpp (20)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1411.patch\n- https://github.com/xbmc/xbmc/pull/1411.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1411.\n. I sort of ment even when video is master, but I think I reconsider.\n\nI'm not entire opposed to the idea of adding silence. But only if it error\nhas been stable for a long time and we haven't added silence previously for\na even much longer time.\n. I meant audio codec. Are you sure you are not forgetting to divide by\nnumber of channels or the 2 bytes per sample? Ie for Ac3 and normal Dts:\nTime = bytes / (16bits /8 * 48000hz * 2ch).\n. Then I'll ask again what codec is giving 60ms frame durations. This could\nbe a parser error.\nOn Sep 12, 2012 8:45 AM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nI only measured duration, the argument given in HandleSyncError and used\nfor calculation of skipdupecount.\nHow do you think about making skipdupecount a float?\nBut only if it error has been stable for a long time and we haven't added\nsilence previously for a even much longer time.\nUse that for skip/dupe in general? Users often don't have a matching\nrefresh rate or run e.g. at 60Hz. Should we fall back to DISCONT in case\nthe error gets not stable?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1411#issuecomment-8483690.\n. Yes that is likely. It normally transmitted as 2ch 16bit sample.\nOn Sep 14, 2012 2:49 PM, \"Rainer Hochecker\" notifications@github.com\nwrote:\nCAEUtil::DataFormatToBits returns 8 bits for AC3. Is this wrong?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1411#issuecomment-8559964.\n. I wonder if moving m_ptsOutput into Dvdaudio.cpp would end up a smaller\ndiff. I've been wanting to do that for quite some time.\n. Give me until tomorrow. If I have not done anything tonight, it's probably\nfaster if you do it.\n. Okey.. soo: https://github.com/elupus/xbmc/compare/dvdaudio\n\nBut i'm not sure it solves the issue, since i couldn't really figure out what the result of the old code would be. My analysis tells me that the old code would do the following. First line being the packet entry with b duplicated 3 times:\na     b     b     b     e    \nx  x' x' x' x' x' y  y' z  z'\nIt so time would stop for a while between the end of the previous packet and the start of the last entered packet. New code does the following:\na     b     b     b     e    \nx  x' y  y' y' y' y' y' z  z'\nIe, time stops for a while after first packet has been entered. Without the last commit i did, it would be:\na     b     b     b     e    \nx  x' y  y' y  y' y  y' z  z'\nWith time jumping back for each added packet. \nThe new code you posted would do the following i think (xyz\u00e5\u00e4\u00f6 is the normal order, ran out of letters).\na     b     b     b     e     f     g    \nx  x' x' x' x' x' y  y' y  y' y  y' \u00e4  \u00e4'\nHere weird things happen. First we stall clock, then clock keeps jumping back, then it skips several frames timestamps. But I can be fully wrong here, it's really hard to deduce :)\n. So I've rewritten the pts output queue to not depend on current time, only on current delay from audio output: https://github.com/elupus/xbmc/compare/dvdaudio\nThe feedback on re-added packets should now be immediate on current timestamp, which should be much\neasier to calculate next add/drop values on. @FernetMenta Would be nice with some feedback how it works out, have not been able to test it properly myself.\n. Ok, yea i wasn't entirely happy with how it turned out. But the principle\nfeels a lot better. It's not dependent on actual time. The first steps\nthere should not be worse than what we have. So we can get that in this\nmerge window.\n. Feel free to pull those in here yes.\n. Yes\n. Hmm.. this seem strange to me. We allow specifying player in xbmc, why shouldn't a plugin be able?\n. If a player doesn't exist, have it fall back to default then instead. You may still want to force paplayer instead of dvdplayer for some streams, or gstreamer instead of dvdplayer whenever that shows up in linux builds.\n. Then I assume you want to remove the play using option too? Users likely\nknow even less.\nImho  it would be better to just fall back to default if requested player\ndoesn't exist.\n. Right, so then let plug ins do the same. Also since upnp renderers on the\nnetwork will be exposed this way too, it make sense for plug in to set a\ntarget player.\n. What would fail? Auto?!\n. Again. Why shouldn't a addon be able to target an upnp renderer on the\nnetwork. Or gstreamer instead of dvdplayer should we add that.\nI se no point in hiding functionality we have in xbmc (and are not going to\nremove) from addons.\nThe addon should just be marked broken until it is just optional on the\nplatform.\n. Say you have 4 xbmc systems on your network. Plugin should select which one\nto play the selected item on.\nMp3 stream works badly in Paplayer plug in ask to play it in dvdplayer.\nSeeking doesn't work in omxplayer, until solved in xbmc, addon forces\ndvdplayer since it know stream doesn't need hw acceleration.\n. If player isn't supported it should use default.... So that is imho a mute\nproblem. Only issue is if player is available but known worse.\nWe should not remove functionality from addon api due to add on devs being\nstupid. Then it's better to remove the addon.\nAlso how should xbmc know if user want to playback in living room or\nkitchen? This user must decide, and if Plugin control player startup,\nPlugin must decide what player to use.\n. Do you even read what I write?\n. Then how do you solve the multi room playback if addon can't specify what\nroom to start playback? It is a fullscreen addon, thus xbmc is in no way in\ncontrol. It will only react to a play media command from addon.\n. Perhaps yes. But why make a difference?\nAs I see it, the only issue we have with current system is on platforms\nwhere one player is suboptimal. Then mark the addon that miss uses the\nfeature as broken.\nAddons should be able to control every aspect of xbmc imho.\n. @huceke , most of the time there are multiple players for file type. There could be external players, internal player, players on other network. All these can match a certain file type. All could be fully valid choices that a user want for playback (especially external and on network). If we don't allow plugin to specify a player, xbmc would always have to pop up a dialog allowing the user to select a player every time a addon ask xbmc to play something. That would be incredible annoying.\nBut yes, we do allow hardcoded players currently which I agree can make it easy for an addon dev to always select dvdplayer. But then that is a bug in the addon, not in our API.\nWhat however may be a \"bug\"/lack in our API is that I don't think there even is a way to request a list of available players for a certain item. We should expose the same logic as the Play Using context menu uses to populate a list of available players. That is a sorted list in order of preference of available players for an item. From that list the addon could select a player.\n. Well.. there is no such thing as room in this regard. It is just going to be a upnp frendly name. So there is technically no way other than the name of the remote player to know what room it is in. \n. Ie all upnp renderers on you network will show up in play using context menu with their friendly name.\n. I would suspect this causes invalid delay calculations leading to invalid\nsync when pass through is used. Unless something else adjusts for it.\n. It seems it only cause issues higher up in the chain. Like in dvdplayer since it uses the original stream format. Inside softae, the sink will re-write the format to S16NE. Thus calculations end up correct internally atleast.\nBut i'll merge this since calculations inside dvdplayer are all messed up. Anything getting buffered in DVDAudio.cpp and and anything inside decoders will have invalid duration.\n. Maybe add to gitignore too?\n. If our normal file system is available, why is curl or smb needed?\n. Isn't it better to add that then?\n. If file is 8 gig, this won't work too well. The point of streamin is to avoid reading the full file if it isn't a proper xml.\n. Just put an upper limit on the allocation. like 1 meg or so.\n. Oh right.. this stuff was already broken. Previously we could stream in from a file, and it aborted if it found it wasn't a proper xml. Seem that is not possible anymore. StreamIn function is not even part of public API anymore :/\n. Well that mean we change the behaviour of what was once called equal. Also\nisn't case insensitive equal rather pointless. Since compare as mentioned\ndo it but also the == operator as well.\n. I only said a case sensitive equals function is pointless.\nThe case insensitive is still needed.\nI would argue for dropping the case sensitive equals and rename the\nequalsnocase to just plain equals.\n. That format function is really dangerous. There is a reason cstdstring\nimplements this with a large list of templates instead.\nstd::String bla =\"bla\";\nstd::String foo = StringUtils::Format(\"%s\", bla) ;\nWill blow up badly, while it would have worked with Cstdstring format.\n. Right. As long as we are aware of the issue.\n. Is title really taken from teletext now? That seem wrong for any  kind of\nvideo.\n. In general this is what i meant by passing pts through ffmpeg.\n. Looks good, but perhaps pass in the overlay pointer to GetAbsoluteTimes\ninstead of the three need members. Your choice if you want to do it, but\nfeel free to merge.\n. There is no guarantee it will find anything. If something crash, we should\nfix that instead.\n. And yes they go through to players. I suppose extradata might be\navailable from first packet, then it can make sense to delay by one\npacket. However that means we have to re-write OpenDefaultStreams\nagain. Ie we can't open streams after opening demuxer. Or demuxer must\nstart reading data on open.\nI think it's better that we end up switching codecs when we figure out\nsomething better.\nOn Sat, Sep 22, 2012 at 3:34 PM, Joakim Plate elupus@ecce.se wrote:\n\nThere is no guarantee it will find anything. If something crash, we should\nfix that instead.\n. No large voiced no's on this yet. So i'm merging.\n. I have one concern about this. I'm not sure how the ffmpeg parsers will behave on bad quality streams. there is a risk it will sucessfullly parse invalid data, leading to codec info changes that should not have occured. But i suspect only way to find out is to test it.\n. @opdenkamp @FernetMenta you might be interested in testing this stuff out. You have more experience with pvr stuff than me.\n. Imho try fail is the right approach. Codec factory shouldn't need to know\ninternal requirements. Should only setup a priority order imho.\n. Yes probably, have not heard of any major issues with it. It puts less\nburden on pvr addons / backends to parse data.\n. imho globals must go.. That goes for the addons as well. That will break\napi rather badly though. But it's really a necessary change.\n\nI didn't review this diff though.\n. References instead of pointers, otherwise looks fine.\n. Looks fine\n. What about rars/zips? They have url encoded source in the host name field\nand can be recursive.\nOn Sep 26, 2012 8:40 AM, \"Sascha Montellese\" notifications@github.com\nwrote:\n\nThese commits are meant to make the VFS handler of xbmc's webserver more\nsecure. Currently it allows to access any file which xbmc can reach through\nits VFS including files like /etc/passwd etc because the only check that is\nmade is whether the file exists or not.\nWith these commits every requested VFS path will be checked against the\nlist of user-specified sources. If the path does not point to a file within\na (sub-)directory of one of those sources a HTTP 401 (Unauthorized) error\nis returned. For this to work I had to write a method which would take care\nof \"..\" etc in paths because otherwise it would be possible to do something\nlike\n/path/to/source/../../../etc/passwd\nand still access any file. I don't think the implementation is optimal but\nI couldn't find an existing method that does the same so I wrote\nURIUtils::GetRealPath() (and I also wrote a unit test for it).\nIMO this is the best way to make the VFS handler more secure (short of\nripping it out which I plan to do once there is a better way to access\nmedia files through the webserver). If someone adds the root path as a\nsource it's his own fault. And if someone adds a symlink to the root\ndirectory (or somewhere else) in one of his source directories it's his own\nproblem as well.\nYou can merge this Pull Request by running:\ngit pull https://github.com/Montellese/xbmc check_path_in_path\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1480\nCommit Summary\n- URIUtils: add GetRealPath() to handle . and .. in paths\n- [test] TestURIUtils: add test for GetRealPath()\n- webserver: only allow access to files which are in a (sub-)directory\n  \u2026\nFile Changes\n- M xbmc/network/httprequesthandler/HTTPVfsHandler.cpp (39)\n- M xbmc/utils/URIUtils.cpp (41)\n- M xbmc/utils/URIUtils.h (2)\n- M xbmc/utils/test/TestURIUtils.cpp (41)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1480.patch\n- https://github.com/xbmc/xbmc/pull/1480.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1480.\n. Rar://[url encoded fill path to rar file] /sub/dir/in/archive\n\nJust grab any zip or rar navigate into it in xbmc and check log.\n. @jmarshallnz code seem almost right. But if i remember correctly you don't need to decode the return from GetHostName(), it's already decoded properly. But you do need to recurse it.\nwhile(IsInArchive(path))\n   path = CURL(path).GetHostName();\nshould be enough to get to the root archive file which is what should decide access.\n. Then something is very wrong. There should be no double encoding.\n. Example url that i just tested: rar://smb%3a%2f%2fmisto%2fVideos%2fmovies%2fGhost.Dog.The.Way.of.the.Samurai.1999.DVDRip.XviD.iNT-PFa%2fghostdogcd1-pfa.rar/ghostdogcd1-pfa.avi\nThere is no double encoding going on.\n. Oh, this is due to how stuff is served up by the webserver perhaps?\n. Two comments.\nFirstly i find it pointless to do the is archive check in getrealpath.\nSecond, shouldn't you use get parent folder uri function to go up one\nlevel, instead of re implementing?\n. I'm pretty sure there was some reason for that.\n. As far as I can see it has not been pushed to master yet. But it does\nindeed seem lika a wrong change.\n. Looks good\n. Check for ILiveTV (or what the interface is called) in dvdplayer instead of isstreamtype pvr, when doing the pause\nAlso, why does application need to block pause actions? IMHO they should only be blocked in dvdplayer for live tv. \n. This is looking reasonable clean. Might even be accepted upstream.\n. Yeah it's very similar i suppose. I wonder if we can solve it inside the ts\ndemuxer. Store first timestamp on probe, then correct output of timestamp.\nI think ts wrapping once should always fit the 64bit int.\n. The problem with index is that ffmpeg keeps an index of keyframes\ninternally. This maps a timestamps to a position in a file. This list is\nexpected to contain linearly increasing timestamps. It won't when the video\nwraps back.\nCould you see if you could fixup the timestamps in the mpegts demuxer\ninstead. Ie never let the wrap out of the demuxer. That may not be okey for\nupstream, but it should be perfectly fine for our use case.\n. did you get anywhere in the mpegts.c\n. I really like the tidyness of it. It should be fine for our uses, but i\nwonder what upstream will say for stream copy situations (we could likely\nmerge it in our \"fork\" anyway). Could you rebase it on ffmpeg master and\npost it as an RFC on their mailing list?\n. Yes please. Until we can drop the extra format. This is better to avoid\nconfusion. I would also like to see a rename of it.\n. +1 for custom, custom engine format or something that explains what it is\nif possible, that said we should try to get it removed. Then the ifdefs\nisn't really needed if it's named properly.\n. Didn't check.. But why is it flickering? Reconfigure should not flicker.\n. Sure, but what causes a flip to happen? That should need to happen.\n. Add a wrapper for dlopen perhaps, to avoid the gothca?\n. selectedspustream has nothing to do with pvr... It's only used for dvds.\nThis this is invalid.\n. Seriously!! changes to dvdplayer should be run by me first. What you now\ncommitted will add a much overhead and should not be needed. Also if\nanything provide two teletext streams, they will constantly alternate.\n. Hmm, ok. Weird that it shows it that way. Then I'm sorry for the somewhat\nharsh reply.\nOpenDefaultStream should take a care of this. Could somebody explain why it\ndoesn't.\n. If no info is available at open, first stream will be opened on first\npacket, so should still work.\n. I finally had the time to look at this. The fix is simple, in IsBetterStream() remove the if(isteletext) return false;\n. fixed in master\n. You re missing a #pragma pack(pop) for win32 case after header struct. Also\ndo you really need an array of streams? Seem there can only be one.\nTimestamp should be implemented. Should be easy based on current stream\nposition.\n. Why a vector? There is only one and always one stream. Just have a pointer.\nAdd timestamps and simplify above then it's fine by me.\n. Dvd time base * (Byte position read from input stream - header size) /\n(samples per second * bytes per sample * channels)\nThat can be inverted for seeking too if wanted.\n. I would have preferred if you had counted bytes in a int64. You will get a\nslow divergence in timestamp this way since the double value isn't exact.\nBut I don't see that as a blocker. So ok on merge.\n. I still don't understand the need_,_ why isn't it being opened by is better\nstream check? If no stream is opened, any of correct type is always better.\nPlease analyse and say why current code is not working. There should be no\nneed for pvr only hacks.\n. Maybe there is a failure to use the nextstream functionality for pvr?\n. Is the issue on first open or on channel change? OpenDefaultStream could\nperhaps be called when we receive that special demuxer packet for stream\nchange?\n. Imho, demuxer should signal stream changes and we should react. I don't\nwant dvdplayer to wait for first packet. So the add on / demuxer should\nsignal the change if anything changes after open, that may be as a reaction\nto first read.\n. A problem in xbmc? Player have always required streams to be available\ndirectly after open... This is something new.\nIf we want to change it, it should be changed across the board for all\nsoirces to only open streams after reading first packet.\nBut in the meantime its easy enough to fix hidden in the pvr demuxer\nwrapper, not pollute the player with. Ie, return a stream change packet\nafter first read.\n. @opdenkamp @FernetMenta your choice on this one. it's alright by me.\n. @xhaggi I don't like that move for the same reasons you initialy said. We do it extra times on open + it's wrong for dvd's.  I think you missunderstood (i think anyway) what @opdenkamp mean about there about only being one call to OpenDefaultStreams(). I think he was talking about the fact that there was one extra for subtitle demuxer which as far as I know isn't even used for PVR...\n. Imho, revert that last commit and the change to OpenDefaultStreams and only keep the DMX_STREAM_CHANGE check for the standard demuxer.\n. The diff is a a bit on the large side now. Just start from master and add\nthe following change:\n```\n@@ -770,15 +778,6 @@ bool CDVDPlayer::ReadPacket(DemuxPacket& packet,\nCDemuxStream& stream)\n if(packet)\n {\n\n\nif(packet->iStreamId == DMX_SPECIALID_STREAMCHANGE)\n{\n// reset the caching state for pvr streams\nif (m_pInputStream->IsStreamType(DVDSTREAM_TYPE_PVRMANAGER))\nSetCaching(CACHESTATE_PVR);\nCDVDDemuxUtils::FreeDemuxPacket(packet);\nreturn true;\n\n}\nUpdateCorrection(packet, m_offset_pts);\n   if(packet->iStreamId < 0)\n     return true;\n@@ -804,6 +803,15 @@ bool CDVDPlayer::ReadPacket(DemuxPacket& packet,\nCDemuxStream& stream)\n\n\nif(packet)\n   {\n+    // stream changed, update and open defaults\n+    if(packet->iStreamId == DMX_SPECIALID_STREAMCHANGE)\n+    {\n+        m_SelectionStreams.Clear(STREAM_NONE, STREAM_SOURCE_DEMUX);\n+        m_SelectionStreams.Update(m_pInputStream, m_pDemuxer);\n+        OpenDefaultStreams();\n+        return true;\n+    }\n+\n     UpdateCorrection(packet, m_offset_pts);\n     // this groupId stuff is getting a bit messy, need to find a better way\n     // currently it is used to determine if a menu overlay is\nassociated with a picture\n@@ -1052,7 +1060,7 @@ void CDVDPlayer::Process()\n```\n. This is looking oh so much better thou. would be nice to get in for frodo. need make sure it doesn't break anything thou.\n. ps, that leaves tomorrow before merge window closes.\n. we should get this is this window yes, we can bug fix it during the month.\n. Why did we use FillLibraryArt here and not LoadItem in the thumbloader? It\nseems art doesn't show up until we have touched the item in gui currently.\n. It doesn't solve the issue completely thou. Album art doesn't show up if\nyou haven't visited that node in xbmc. Not been able to figure out why yet.\nOn Sat, Nov 3, 2012 at 4:50 PM, Alasdair Campbell\nnotifications@github.comwrote:\n\nI was just following rpc and advice. I noticed it too, will change it.\nOn Nov 3, 2012 3:37 PM, \"Joakim Plate\" notifications@github.com wrote:\n\nWhy did we use FillLibraryArt here and not LoadItem in the thumbloader?\nIt\nseems art doesn't show up until we have touched the item in gui\ncurrently.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1569#issuecomment-10040506>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1569#issuecomment-10040642.\n. I suspect we are not. Currently no art show up on albums, unless I have\ntouched them with a the local system.\nThis is an upgraded music db if that make a difference?\n. have a look at: https://github.com/xbmc/xbmc/pull/1567\n. While it does implement webdav, it does so in a subclass of curlfile. What\nit however does add is add post support to curlfile.\n\nThat part should be a separate commit, and could be extended to support.\nOpen, write, read to get the response of the post.\n. If I'm wrong about 1567 not implementing post please tell me.\n\nYou are probably right, but imoh put and post should be very similar. post\nis just the openforwrite(overwrite = true) while put is\nopenforwrite(overwrite = false), but it get's a bit hazy i agree.\n\nHttp for rpc using our filesystem curl system get's rather messy. I'm\nstarting to think it may be better to keep it separate.\n. Yeah I tend to agree on post being something different. Let that be\nhttpfile.\n. My fifty cent on this is that I want the mulitibased interface in the other pull request with PUT/POST being selected by protocol options.\n. Yes if the other comments have been resolved.\n. Cosmetics. The indentation is 4 spaces in that file.\nStyle: NPT_CHECK with early returns should be used where possible to keep it in line with the other code.\nAlso while i looked at the code, there is a bad bug in NPT_String CUPnPServer::BuildSafeResourceUri. It uses a NPT_String as return type but uses a NPT_CHECK in there. That mean it can return some odd number formatted as string. It must use NPT_CHECK_LABEL.\n. Note.. that bug is probably a bug i introduced way back. so should be solved separate from this pull.\n. Also we should always try to keep changes to platinum internals as separate commits. Why is it needed btw?\n. Ok. Green button it is.\n. @alcoheca feel free to take over this pull at any time. It should probably be squash together a bit.\n. 2) strange, could be anything really. but it's probably not getting the multicast's from the renderers properly\n3) agree. think it's mostly a skin issue. there are a few things that rely on IsPlayerAudio() and IsPlayingVideo(). If they got changed to IsPlaying() it would work better i think.\n4) that is luckily not too hard to add. we could just provide the server with a playlist containing all things to play, then it will continue playing everything.\n. Player will stay for entire play list already now. But a way to transfer\ncurrently playing to other device would be very nice to have.\n. It's fixed in this pull..\n. https://github.com/elupus/xbmc/commit/3d8bcbc57f5504ba98419247e0159946d21cba8b\n. @cptspiff what are your opinion on getting the 3 first commits in this series in for frodo? they are prep for this pull, but the affect skin usage + it's something the pvr guys are interested in to get meta data even during channel changes.\nThere is a chance of some regressions, but should be fully solvable during the beta series.\n. Yeah it accidentally snuck in. Most of it is merged already.\nOn Nov 23, 2012 12:20 AM, \"Chris Browet\" notifications@github.com wrote:\n\nLooks to me as the udf/iso stuff is pretty much unrelated...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1597#issuecomment-10646987.\n. That part is not merged. But something like it was planned possibly, not\nsure yet.\n\nNeeds some thought to avoid your issue on upgrade.\n. Yeah, we should add something like that. First I just need to get this in.\n. Strange. Will have a look, is there a simple way to repro?\n. Just merge/push stuff like this directly.\n. Let's bump it. It's silly that we need to do so many request. It can be\nconsidered a bugfix for low performance.\n. Please remove the if pvr stuff. canseek must be set properly always.\n(verify that it is).\n. Because that returns that variable... Check dvdplayer.h, the variable\nprobably has a reset state of true.\n. Yes that is very very ugly. Please fix.\n. Yes that looks like a very good change.\n. Looks good, merge away.\n. While the idea is right. I don't like the implementation.\nI think this should be a separate message pushed down the video queue if video is in charge of time and audio if audio is in charge. Then the player should timestamp the message and re-post that back up into parent message queue which update current playback time. \n. Add the ffmpeg commit sha and title in the commit message, then merge away.\n. We are are trying to avoid ifdefs. Isn't a glfinish enough?\n. @TheUni do you have a thought on this?\nOn Sat, Oct 20, 2012 at 10:13 AM, Rainer Hochecker <notifications@github.com\n\nwrote:\nglFinish kills performance. This would be called during playback when\nbringing up the video OSD.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1649#issuecomment-9629102.\n. EricV please stay out of this. Nobody has said it isn't needed. \n. Just put the vector in GUIFontGL.cpp and delete when the structure is destructed. That would have identical behaviour as this, but avoid the ifdef.\n. Argh.. nevermind, wouldn't work. we'd just remember them all.\n. There are not really always textures to delete when video is playing thou. Only when the font texture buffer needs to grow. So shouldn't happen often. That said is the point that you don't want to delete until you have flipped buffers?\n. I think I see the issue now. CGUIFontTTFGL::End is not detaching from the texture. So when we destroy the font texture it's still assigned as a texture source.\n. Add a glBindTexture(GL_TEXTURE_2D, 0); in End() that likely solves the issue you are seeing.\n. we are not going to add a ifdefs to the code until the reason for the issue is known to require it.\n. Do we have a crash log for the issue?\n. @FernetMenta what things did you try, so I don't ponder already tried things?\n. m_httpresponse need init in constructor\n. i've pushed a branch with a backport of the upstreamed commit here: https://github.com/elupus/xbmc/tree/wrapback\n. Note.. this doesn't seem to work. the av_set_opt call isn't setting the flag properly. Not sure why yet.\n. I agree, merge away.\n. The play with addition to playlists are quite nice and can be considered a fix for a lack of this from the start. The queue from here is more questionable if it's a fix.\n\nIt could potentially be usefull.. but it's nothing I can ack.\n. That is supported actually. You can swap player after starting. Bound to\nthe key Y in the patch.\nYou can't pre specify currently though.\n. Suppose it won't hurt.\n. There is a problem in this demuxer that this just continues. dvdplayer assumes a contiguous list of streams. Ie all numbers from 0 to GetStreamCount().\nCode like:\nCDemuxStream *stm = m_streams[props.stream[i].iStreamIndex];\nshould really just be:\nCDemuxStream *stm = m_streams[i];\nWIth that, the disposing of streams on a stream change would just be any indexes higher than current. \n. Also this doesn't take recursing hostnames into account. You should make use of the URIUtils::PathHasEncodedHostName() function to check. If it does, you need grab the hostname and re-run it into same function and re-set it on the url.\nBut this is a really scary operation to perform imho..\n. Actually, urls are static. They are unique place holders for the content.\nBut the file names are not scrapable (no relevance to content). So I agree\non the change.\nOn Nov 2, 2012 10:22 AM, \"jmarshallnz\" notifications@github.com wrote:\n\nSet content isn't going to work (right @alcohecahttps://github.com/alcoheca?) due to non-static URLs, so remove it.\nYou can merge this Pull Request by running:\ngit pull https://github.com/jmarshallnz/xbmc upnp_no_set_content\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1722\nCommit Summary\n- [upnp] don't show 'set content' options on upnp sources\nFile Changes\n- M xbmc/dialogs/GUIDialogMediaSource.cpp (3)\n- M xbmc/video/windows/GUIWindowVideoNav.cpp (6)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1722.patch\n- https://github.com/xbmc/xbmc/pull/1722.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1722.\n. For reference on the backward bool. It doesn't mean seek backward, it means seek to the keyframe before specified time, as opposed to after.\n\n//RANT ON\nI would really like that we stop extending the API with special case functions. One seek function with a a parameter like SEEK_CUR/SEEK_TIME ... should be more than enough and avoid us having to constantly add new methods. (not that standard HTTP should be able to do seeks based on time so we should support that on a file system level).\nAlso the split between seek on file and on live tv. is rather silly.. As is the fact that it's globally part of the PVR context without any additional context.\n//RANT OFF\n. Also.. SetSpeed would make more sense as a generic IoControl command....\n. Well the way the API is now, i'm not at all opposed to adding these functions. With the following alterations.\n- make sure void CPVRClient::SetSpeed(int speed) / SeekTime check the m_pStruct pointer so it's non null. That way we don't crash badly if an API don't implement it.\n- Correct backward param doxygen to my description above.\n- Correct time doxygen to say \"absolute time since stream start\", since that is what it is now. \n. If they stub them it work. But not all other addons have stubs for these\nnew methods. They are optional so to speak, we should not require stubs.\n. Only new code at the moment to avoid breaking all current addons, but I\nfully agree in principle. @opdenkamp will the loader accept missing\ndlsym's?\n. Preferably we should drop the old method.\n. Closing since the diff contains commented out code there don't seem to be a good understanding of what it is we want to accomplish here (or mainly how).\n. Ehh.. why are you doing this. this support is already there with other path syntax.. bluray://url encoded path/BDMV/00001.mpls\n. For blurays that is. Something similar should be added for dvd's. You can see the path structure by adding a file source like: bluray://[url encoded path to bluray disk]/ \nThere was plans to auto browse this for blurays. But never got added.\n. It should not be an empty list, then something is wrong. It should list all available titles on the bluray. What did the log say? \nTo hook this up into nfo scraping should be simple. You just need to construct an alternate path in the case when a nfo selects a title. Normally xbmc selects the longest title on the bluray. \nI will not accept another way of accomplishing the same thing when it comes to bluray. Adding options the way you did will break down on protocols that already need other options like http, ftp..  I would really prefer that you used a similar URL scheme for dvd's. ie dvdnav://[url]/titles/1 to play a single title on the dvd.\nDo note that these stuff won't make it into Frodo release as they are feature additions and we are in lock down, so you have time to work on this if it something you want in.\n. Huh, it would not be any different amount compared to an option. The\nscraper doesn't need to store every title for the blurry. Just build the br\npath at the same place you now append the option.\nWe handle nested paths in the host name field quite fine (even nested in\nnested). If you build paths with curl, it will url encoded as needed when\nyou use the SetHostName() function.\n. The whole url is passed.. So all is there. Something just need to construct\nit.\n. 1: No difference than 2.\n2: The problem with this is that if you point at a bluray iso residing on a http/webdav server (odd case i know). You add a option parameter to the url that will choke the http server serving it since it will think it's something it should parse.\nAlso I don't see how that would be more scrapable than anything else.. Title in a bluray is just the mpls file. So if you want the 3rd title. it is always BDMV/00003.mlpl. If that is too hard, we could add support for bluray://path/titles/1. Your script just need to be able to url encode.  \n3: Sure i don't mind it at all. (as long as our system can handle same file being referred for multiple movies, but it probably can, cue sheets aught to be same situation). \n. the problem with scrape-able (as opposed to scrap-able) is that you can't pass the BDMV/00003.mpls if it is an iso (except of course with a url which you can't represent in a filename\nThis doesn't make sense to me. I must be missing something in regards to what it is you want to accomplish. You can obviously represent it as a path. And can't a .nfo file point out any given path?\n. This seem insanely complex. Why don't we just allow nfo files that are\nadded to a .iso or bluray folder to specify all the included titles that we\nwant in the database?\nOn Tue, Nov 6, 2012 at 9:28 PM, mike notifications@github.com wrote:\n\nNo nfo files don't point to paths (at least individual ones as opposed to\nthe whole library dump), it is the other way around.\nYou need a video file to trigger looking for an nfo (name of the nfo file\nis derived from the video filename and scraper options). You could add an\noption to specify a redirected path, and in essence that is what I have\ndone with the playtitle tag.\nYou can (if the BR is a folder) create symlink of the form SnEnn name.mpls\n-> BRfolder/BDMV/00003.mpls and place the symlink in a tv show folder, it\nwill be scraped and then you can play episode nn from the library.\nIn linux one could create a symlink of the form SnEnn name.mpls\n->bluray:[url]/iBDMV/00003.mpls\nand again the symlink would be scrape-able, but for some reason when I\ntried it it didn't work, but I'm sure it could be made to work in Linux. As\nI said I don't know if it could be made to work on windows.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1736#issuecomment-10126335.\n. So i'm getting somewhat closer to an understanding :).\n\nWe just had a thought on how to accomplish this. Or at least it should cause much less changes in xbmc. Not sure you think it's equival, but here we go..\nWe have stuff called .strm files. They are pretty much shortcuts to another file. It's just a text file containing the path to something else (often an online url).\nIf you add .strm files with ShowTitle.S01E01.strm that point to the .mpls file that signifies the title, i suspect we would be very close to working already. It should scrape meta data properly, and likely start up the movie properly. \n(obviously we need a way to start specific titles on dvd's too for them too work).\n. Let's say we fix .strm files to support relative paths + some uri scheme to start a standard dvd at a specific title/chapter. Then they aught to solve your issue. I don't follow what it would not solve?\nAlso we should support the same logic of starting a title from a DVD as we currently do on blurays when you request to start them.\n. On Nov 8, 2012 2:52 PM, \"mike\" notifications@github.com wrote:\n\nAs I said in my README that would work fine except that a .strm is a\nplaylist.\nPerhaps .urlalias? as a generic filesystem -> url translation, or\nwhatever.\n\nOr fix it. It should not be a playlist.\n\nThere is still value in adding the database item, as you would get 2\nscraped items the urlfile and the movie.iso, movie.../VIDEO_TS.IFO or\nmovie.../index.bdmv\nIf I/you decide to implement play longest for DVDs and play menus for\nblurarys, it would be nice to add \"Play longest\" as an option along side\nthe \"start DVD at main menu\" option\n\nPlay menu is supported for many blurays. And selection pops up when you\nplay a bluray.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. > I was not trying to knock the Bluray implementation (though as I'm sure\nyou realize if it is an iso you elect the longest and if it is a folder you\nlist the PLAYLIST directory by default).\n\nThen something is wrong or perhaps you don't have stacking turned on.\nStarting the index file in a bluray should be identical to iso if stacking\nis not turned on.\n. I suspect that if start the iso, it's just reading it as a mpegts flat\nstream. Ie not even understanding that it is a bluray. Think they need to\nbe called .img. But not even sure that work.\n. Play on the folder will just queue all mpls files. First is often the\nlongest. Ie not what you expect at all :-.\n. Oh right. Somebody added that udf file system. Forgot that. But that looks\nas a bug non the less. It should behave identically to the stacked folder\ncase. Will have to look into that.\n. Full menu for bluray is far off.. So we will need it for a long time. But\nmaybe we should extend that isbdfile check to check inside isos too. Feel\nfree to take a stab at it (new pull request), if you are interested.\nI know you mainly use Dvds, so maybe more interesting to work on a\nCDirectory implementation like the CBlurayDirectory that is used for title\nselection on bd. We would need parts of this pull for that too (playback of\nsingle title)\n. Closing for now. This need to be split between bluray and dvd also display of selection menu is now available for iso files too in the bluray case.\n. Hmm.. these should probably not return const should they.. are they really free() able then?\n. Right. They should all return char*. Also, for simplification, use strdup instead of malloc/copy. \nThirdly, we need a XBMC->free() function. Since freeing something in a shared lib, allocated in another isn't safe. Addons must call the XBMC free function for it to work properly.\n. Malloc implementation can differ between shared objects. Especially on win\ndepending on debug or release builds.\n. Don't use unsigned long long, use uint64_t. How is that timezone variable\ndefined.\n. Sort of meant what it contained since it multiplied by some \"random\"\nnumber. But if it's tested should be fine with change to uint64.\n. no packet in queue is lost.. but they can get consumed to find a new keyframe\n. This is invalid for a channel change. it must be reset then. it feels like the pvr system is sending those stream changes in a strange way. I don't fully have a solution in mind yet.\nThe problem is that if we did change channel and the new channel has same hints (very likely). We could end up using keyframe information from previous channel to make up the new channel -> corruption of display.\nSo we probably have to differentiate between channel change and not. With that in mind.. \ni'm somewhat surprised that a stream would add/remove sub streams without making sure there is a keyframe right after the change... What backend is this from? \n. Audio renderer should not be flushed on reset. If it is that is a bug.\n. 1)\nNormally not. Potentially there could be something buffered in the codec. But that is not common either, so it shouldn't cause an issue.\n2)\nAgree, but if there is a keyframe right after the stream change, we should be able to handle that case. Now we probably don't get the last frame out of the decoder before the reset currently, but that can be fixed i think.\nI absolutely do not want to reset when it is not needed. But i absolutely do want to reset when it is needed. The problem is knowing when is when. It is always needed if the reason was a channel change. But I suppose in that case we normally flush.\nI'm not very opposed to this change. I just want to figure out why you see such a big disturbance with the way it is currently. (Ie. the change could hide other issues):\n. Right. In this cause we think they are identical thou. And from what i can see we don't even try to modify the sinks at all. We do reset the codec as expected. What audio codec do you see the disturbance with?\n. Well if it changes from 5.1 to stereo and AE doesn't drain output but drops\nit, that will be bad indeed. That need to be fixed.\nSo can we guarantee that the stream change event isn't caused by a channel\nchange, or that we were reset before?\n. Don't think that is the case for all pvr clients?\n. Packet is way better. Then it is in line with demux packets. But it would\nnice to get ffmpeg to output a pmt change.\n. A channel change is handled differently and will force a flush of data anyway. So it should be safe to merge this. But i suspect it doesn't fully solve the problem with number of channel change.\n. I meant if we get a channel number count change and we reset the codec. It\nmay have some data buffered internally.\n. Rebase squash and force push to same branch again.\n. Rebased yes, squashed no. You still have two commits (you want a HEAD~2 on that rebase now), and your commit comment is duplicated several times so you need to correct the text when it asks for the commit string.\n. Ok, sorry.. it's squashed now to one commit. but text string is still messy. HEAD~1 for the rebase, and only ask to re-word.\n. Silly that it's needed. But yea merge away. It's a bug fix.\n. I would like to avoid that buffered packet if possible. It would be much\nbetter to output a packet from ffmpeg on a separate data stream containing\nthe stream change. Then all happen in correct order.\n. Plus it would avoid the api breakage compared to upstream.\n. The packet reading is also callbacks. Look for where it returns normal\ndemux packets. It's a flag that get set which stops further processing.\nOn Nov 10, 2012 5:14 PM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nI don't like the buffered packet either, this is why I though putting this\ninfo somehow in the inputstream and the player queries this before\nprocessing the packet.\nIt would be much better to output a packet from ffmpeg on a separate data\nstream containing the stream change\nThis indeed would be nice but I have no idea how to do this. The functions\ninside ffmpeg which detect pat and pmt are callbacks itself. I have no clue\nhow to stop reading after a pmt and put this packet into a separate stream.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1757#issuecomment-10256640.\n. i think we should output the whole PMT packet out of the demuxer. With it's packet id set to the correct PID. This would be more useful for other uses than some special packet.\n\nI don't think we actually need to parse it in our demuxer. Only detect that there now was some type of change. Any stream that is no longer available should then be marked with discard by ffmpeg or similar that they have ended.\nPs. don't spend too much time on the xbmc side for now. We'll get there, but this is looking quite nice from the ffmpeg side.\n. Hmm.. you are right.. it's probably a bad idea to re-use discard for this. We really need a stream flag that indicates that it has ended and is not available anymore (which we subsequently can clear if it comes back)\n. Ah that is a really good idea. Then any stream in a program is considered\ninactive. No api change required. I like it.\nOn Nov 16, 2012 9:03 PM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nHaving such a flag would be great but requires an API change.\nHow do you think about keeping the stream indices in AVProgram consistent\nwith the internal Program structure in mpegts? Keeping indices of inactive\nstreams in AVProgram looks wrong to me.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1757#issuecomment-10460105.\n. Nope. Will have to wait. I want some comments from ffmpeg side eventually\ntoo.\n. Ok. Sounds good.\n. Are the ffmpeg changes what eventually got accepted upstream? \n. Incorporate my changes, test, rebase. Then i think we ar ready to go.\n. Nice work on this btw. This has been sorely missing for quite some time.\n. I would prefer to get this in for Frodo btw, since it prepares skins for the upnp player stuff. \n. For frodo only the new info label is added. The rest will be merged with the upnp player when that goes in.\n. While it is a fix for inconsistant behaviour for blurays. I couldn't really decide if it is frodo worthy. I'll put it as post frodo for now.\n. There was some parts in 4 that didn't belong there. (same fix in bluray input stream for not trying to guess path). It probably does make sense to push 1 through 3 in for frodo yea.\n\nIt's bug fixes for weird usage of urls. The last one is obviously a bit different.\n. So i've dropped the ability to browse into bluray and kept the cleanup for stupid path usage. Then i added a fix for playback selection on a .iso/.img file by looking for a bluray inside on request. \nThis should resolve the discrepancy that existed between bluray image files and folders.\n. @cptspiff so you skipped this one?\n. It will just ignore menu overlay for older version, so should be fine + seem the version that get installed on osx already have what is needed.\n. +1 files view should be files view. I hate going there and not finding\nstuff i know is on disk.\nOn Tue, Nov 13, 2012 at 7:18 PM, Sascha Montellese <notifications@github.com\n\nwrote:\nTitle says it all. Currently we group movie items listed in files view\ninto sets which is probably not what people using files view (I don't so I\ndon't really know) want.\nYou can merge this Pull Request by running:\ngit pull https://github.com/Montellese/xbmc dont_group_in_files_view\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1777\nCommit Summary\n- don't group movies into sets in files view\nFile Changes\n- M xbmc/video/windows/GUIWindowVideoBase.cpp (3)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1777.patch\n- https://github.com/xbmc/xbmc/pull/1777.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1777.\n. Agree. Just a check box where you select devices if you want to hide\nundetected.\nOn Nov 14, 2012 3:48 PM, \"Rainer Hochecker\" notifications@github.com\nwrote:\nI would prefer an advanced or gui setting which can disable this and maybe\nother unreliable hw checks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1779#issuecomment-10368406.\n. Show all device.. preferable an actual list where you see all devices (not\nthe current one line scroll that you have to step through). Mark up each\ndevice as connected or not connected.\n\nOn Sat, Nov 17, 2012 at 11:16 PM, Peter Fr\u00fchberger <notifications@github.com\n\nwrote:\n@DDDamian https://github.com/DDDamian:\nI disagree with the advancedsettings.xml, with the point I mentioned in my\nsecond post. I would make it the other way round: By default show all\ndevices, give the possibility to add an advancedsettings.xml entry to not\nshow bad ones.\nI also would prefer showing bad devices instead of manually entering a\nString. If the user needs to write a string into there - this is much more\nerror prone than selecting the devices from a list.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1779#issuecomment-10479646.\n. Do we really need that slash for non rss feeds? I agree fully though that\nwe shouldn't be doing stuff like that.\n. Couldn't this have been added by skin xml? Or maybe I'm missing something.\n. It's using stack.size() pointlessly in som cases. empty() or first()!\n=end() is much faster and smaller change.\n. @theuni merge?\n. Again... What delay is it we are not seeing? You still haven't mentioned\nwhat reducing latency improves.\n. Since no description for why it would be needed, pull is now closed\n. Curl set protocol options....\nOn Nov 25, 2012 1:38 PM, \"Memphiz\" notifications@github.com wrote:\n@elupus https://github.com/elupus @jmarshallnzhttps://github.com/jmarshallnzping on that.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1844#issuecomment-10692999.\n. Eh? :-)\n. Ah. Use the URL parsing class named CURL and use its function\nSetProtocolOptions to clear them out.\nOn Nov 25, 2012 6:09 PM, \"Memphiz\" notifications@github.com wrote:\nWell you threw a bone to me with your first comment. ;) What did you want\nto tell me with this? ^^\nI know that these options are ment to be used by our curfile\nimplementation. But in the dvdinputstream those urls incl. options get\npassed as strfilename. DVDInputstream normally doesn't know what to do with\nthose. And now that http urls with m3u8 playlists are handled by\nDVDInputSreamFFMPEG it just bails out on those options and only gets an 404\nerror of course.\nMaybe i made the purpose of my fix a bit clearer now?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1844#issuecomment-10695653.\n. Looks good.\n. i find it very strange that we would have starvation here. demuxing is very very low cpu compared to decode... thou not when we HW decode i suppose. \n\nImho risking video or audio stutter to keep queue that filled is not a good idea. Something around 20% (that aught to be at least 1 second of data queued to play).\nSomething more advanced might be in order here too. Yield once after having demuxed one video packet and one audio packet. But i'm fine with something like this.\n. Set it at 50% then. equal to both sides. I can live with that for now.\n. Does this affect clean in any way?\n. Ok, so a folder with content set and set as contain single movie won't be\ncleaned?\n. Should we check parent existence instead in that case perhaps? Not sure\nthat info is easily available there though.\n. I've done it once or twice when a specific scraper fails. I am alright with\nignoring the case, just as long as we are aware of it. Maybe a note in the\ncode.\n. Your resize code is rather slow, you should resize to something larger than\nneeded. Ie in multiples of previous size or similar. Now you keep\nreallocating each loop.\nAlso READ_TRUNCATED should be set to avoid pointless internal loops in\ncfile.\nAlso, I would very very much like to see us checking for jpeg header when\nwe have enough and aborting early then to avoid downloading whole files\nthat are not jpeg.\n. The stop on read == total is pointless and possibly harmfull. Also it will\nnow allocate a huge buffer (2meg) if source file system return 1 byte at a\ntime, which http could very much do, since you grow on each read instead of\nfull buffer.\n. So if file has grown since we started, we truncate. GetLength should only\nbe seen as a hint.\nAnd if file size is unknown but actually about 100bytes, then read in steps\nof 1 byte at the time (truncate allow that) we will double the allocated\nbuffer 100 times.\n. Looks fine. Seems, funny that it needed that big comment. Sorry about that\n:-)\n. Can't one force the garbage collector to run? To me it seem strange that\nthere would be python objects remaining after interpreter destruction. They\nwould have no context to destruct in.\n. Apart from my eyes getting sore with all the headlessCamelCasing.... I couldn't see anything specifically wrong. Thou i must admit I don't understand that code much anymore.\n. Ok.. That is weird code. If that compiles I'd be very surprised and quite\nintrigued.. You run a while loop crossing several case statements but not\nthe switch part...\n. Looks alright to me. But the media window is getting rather messy :/. I wonder if we couldn't do away with direct playback and always make use of a playlist. Feels it would simplify things.\n. no issues on github, (will look at the pull)\n. +1 for frodo.\n. Is this an already upstream ffmpeg commit? If so I want a reference to that\ncommit in the commit message. If not it need an accompanying patch file in\nthe patches directory. Also the ffmpeg changes must be a seperate commit.\nAs must the patch addition.\n. Looks good for inject\n. Well I'm pretty sure docs state that we should set them. And some formats\nMUST have them.\nIf the aac decoder fails with them set, we should fix that Imho.\n. Raw pcm for one. Vague recollection that vorbis need it. Also ffplay reuses\nthe avcodeccontext from demuxer directly, so it will always have them set\nin the reference player.\n. Looks good.\n. Looks good for me (not tested myself). +1 for Frodo @davilla \n. Yup, linked to external ffmpeg in use and ffmpeg version. Possibly by a\nconfigure check for the value or better yet usage of av_get_opt to get the\nvalue if it exists.\n. What happens with a different locale set? Checking for English strings seem\nrather prone to breaking.\nOn Jan 20, 2013 10:44 AM, \"arnova\" notifications@github.com wrote:\n\nAny objections against this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2035#issuecomment-12468183.\n. If this isn't used for osx I think it should be fine.\n. Looks fine to me.\n. PRIx32 instead of direct %x would be more correct if we ever get any int >\n32bit platforms. Though I suppose that is unlikely. Looks fine for win32 at\na glance, but a build check would be good.\n. Well %x mean unsigned int. Which is 32 on all platforms we care about. But\nisn't necessarily so on all. It could be 16/8/64.... But I'm fine with it\nas is, we likely have it that way in all other places.\n. What happen if you pass a python byte array instead of string? I think they\ncould contain actual null characters.\n. Doesn't make sense. Software flag there is for when hw acceleration is not\nallowed which is for thumb extraction. It's always false otherwise.\n\nYou need to check if any hw acceleration is enabled in settings. Also frame\nmultithreading is crash prone for some sources (especially live tv), thus\nit must be optional.\n. Looks alright, but I would like that you don't disable slice based\nmultithreading, let ffmpeg choose. Also make it on by default.\n. I think it fits advanced setting. But as I said defaulting on. It only\nenables for hi10p videos, which are uncommon and often need some extra\numpfh. Also it can't be allowed if we have any chance of hw decode since\nit's incompatible.\n. It's not about 422 it's about hi10p which as far as I know it does not\nsupport.\n. Also... With the updated ffmpeg we can finally drop the vdpau special case\nand decide on get format like the other hwaccels. Then we know much more of\nthe stream.\nOn Jan 30, 2013 9:18 PM, \"Joakim Plate\" elupus@ecce.se wrote:\n\nIt's not about 422 it's about hi10p which as far as I know it does not\nsupport.\n. What audio engines is that? Also is it transposing to ac3?\n\nFormat changes are different. Receivers are slow to lock in to a new format.\nThere is a audio frame delay on passthrough too on at least one audio\nframe. One frame 4k(or 2k) bytes which is something like 20ms. So that\nmight be one reason. There used to be an adjustment for this in the older\naudio renderer. Not sure it's there anymore.\nOn Jan 17, 2013 8:46 AM, \"Rainer Hochecker\" notifications@github.com\nwrote:\n\nI would avoid setting default delays as long as we have not fixed other\nissues like wrong calculation of audio delay. For pass through audio is\nLATE approx 30-50 ms at 50 Hz on my system. I am quite sure that this is\nnot caused by decoding (DAC) because I lose 1-2 secs of audio when config\nchanges e.g. from 5.1 to 2.0. (commercial breaks)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2087#issuecomment-12357618.\n. You both running audio over hdmi directly to tv?\n. If that uint8 change still work with external ffmpeg, then fine by me.\n. Right but I meant from a compile point of view. Pointer pointer cast can be\nmessy.\n. Ok by me. Do remember the rewind modes if you use it.\n. Have you tested this for bluray and dvds?\n. Also conceptually the change is wrong (time offset is a way to relate time\nfrom a packet from input between dts and display time) thus normally it us\nfully constant during playback.\n\nWith this change it is now dependent on queue size.\nI would rather see a proper fix for display time. It should travers the\nqueue together with packets.\n. The dts is not continuous on dvds and blurays and don't relate at all to\nthe current time in the played title. Thus we need to relate the two.\n. Yup. That is the same for dvd. So we do have the same dilemma. But\ncurrently the big issue is that GetTime in IPlayer return display time as\nsampled from demuxer/input not what is currently on screen (taking queues\ninto accouny).\nSo the real issue is that what is displayed as current time is not really\nwhat is currently displayed.\nIf you fix that, seeking aught to work with current code.\n. Normally it is without gaps now a day. You could have used the demuxer queues GetTimeSize() function to get how much data is in them. Should be more reliable.\nHowever, I would much rather see that we tag demuxer packets with display time, so we can actually always get the current display time in sync with what players are displaying.\n. We don't want dts time stamp... We want display time. Display time is\ncurrently not available at any other stage than right after demuxing. So\nfirst it need to go along up to avplayers. Then maybe (a big maybe) send\nthat along to render managers, but I see no point for that.\n. Yeah something like that.\n. But I think we need some more stuff as well like chapter. So best is you\npush a separate message down containing a struct of data. When the\navplayers get it, they timestamp it and put it pack up to dvdplayer in its\nmessage queue.\n. It represent current PTS from demuxer. But for dvd's this is not the same\nas progress through title, nor is it for live recordings. (this is the\nwhole issue)\nOn Thu, Jan 24, 2013 at 6:01 PM, davilla notifications@github.com wrote:\n\njust curious, why not use CDVDClock, I thought it represented the current\ndisplay time.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2107#issuecomment-12661187.\n. Please hold of on that rewind issue until we have the display time handling in place. I understand the issue, but i need to think about how it affects other things and if we can avoid complicating the code further.\n. Input stream reading can block dvdplayer thread for quite some time (slow/stalled network and similar..). So it can take a while before it gets the returned packet.\n\nLooking much better. I'm trying to decide if i like/need the split between where the returned packet data is stored.\n. I'm doing some tests here. I have an idea of sending down the whole SPlayerState structure and echoing it back again. Should be simpler i think. Will report back how it fares.\n. I think i like the following better: http://paste.debian.net/229337/\nWill get us the full demuxer state available at the time of display. Give it a go. (if it works alright for PVR we can start looking at the other issue)\n. Yea it should. I spotted some bugs with that while at it: https://github.com/xbmc/xbmc/pull/2127\n. That assert there looks evil. We should handle that case gracefully too.\nThis looks ok for frodo.\n. Looks good to me, frodo material.\n. What type of sample? Normal files or through pvr?\n. Very odd. Will do some more tests. Did the displayed playback time look\ncorrect?\n. Don't seem to be able to reproduce. :(. Can you debug it and see what might\nbe going on?\nOn Sun, Jan 27, 2013 at 10:31 PM, Joakim Plate elupus@ecce.se wrote:\n\nVery odd. Will do some more tests. Did the displayed playback time look\ncorrect?\n. Update them for now. i think we have them since we need internal state. but\ni can't fully remember.\n\nOn Sun, Jan 27, 2013 at 11:24 PM, Paxxi notifications@github.com wrote:\n\nThanks jmarshall, commit should be OK now. I noticed though that there's\ncopies of the libdvdnav header files in\nxbmc/cores/dvdplayer/DVDInputStream/dvdnav/. I guess these should be\nupdated as well to be kept in sync, or would it be better to just get rid\nof them and use the headers in lib/libdvd/libdvdnav/src/dvdnav\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2128#issuecomment-12763001.\n. I'm just need to verify that the fix for multi angle dvds is still in\nplace. Not sure if it finally got merged upstream.\n. So the changes for multi angle stuff are still in. What is this updated based on thou? There apparently just showed up another fork for libdvdnav: http://git.videolan.org/?p=libdvdread.git;a=shortlog \n\nhttp://lists.mplayerhq.hu/pipermail/dvdnav-discuss/2013-February/001874.html\n. Also I would also be very interested in seeing a diff against the source. Ie what patches we still add.\n. I suppose so.. It's based on something rather old thou. 4.2.0 was released at 10 Oct 2011. \n. Looks good.\n. Imho accept hex in the traditional format: 0x0000 and decimal otherwise.\nMake sure we log hex with proper 0x prefix.\nOn Wed, Jan 30, 2013 at 7:54 PM, jmarshallnz notifications@github.comwrote:\n\nIMO the user has a point. If we're logging the keycode has hex then we\nreally should support reading it as such, even if it is just a fallback.\nAFAIK the keycodes used will very likely be on the range f000 up, so we\nshould be able to be distinguished between hex+decimal in that case simply\nby reading as hex, then throwing out those values that are obviously far\ntoo large?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12905814.\n. Just use standard function like: http://www.cplusplus.com/reference/cstdlib/strtol/\n\nFrom: John Rennie [mailto:notifications@github.com] \nSent: den 31 januari 2013 09:56\nTo: xbmc/xbmc\nCc: Joakim Plate\nSubject: Re: [xbmc] Update for the keyname so it's the same as used in keyboard.xml (#2141)\nOK, I'll close this pull request and start a new one to make the changes:\n1. any hex values logged are prefixed with 0x\n2. the key=\"...\" accepts 123, 0x123 (and octal, 0123?)\n\u2014\nReply to this email directly or view it on GitHub https://github.com/xbmc/xbmc/pull/2141#issuecomment-12933183 . \nhttps://github.com/notifications/beacon/TSSe4s27YibSl5NDdwI4RlSOhlth1_Yr0aDnGDgB2Nq7ZqLjiXSuP0y6vc6pKq8K.gif \n. Hmm.. Seems we should make sure language is not included in name in the\nplayer? Detecting that at display seem wrong.\n. Everything under special seem wrong to me. That can get you system dirs and\nsimilar.\nAlso in that file braces are on the same line as the if statement and the\ncheck function should return a npt_result not bool.\n. I meant that after the change the hole is still partly open. Since you can\nstill get dir listing for several system folders using the special path.\n. Instead of adding yet another function to IPlayer could you add\ngetstreaminfo(int type, int index, struct&info) instead so we can remove\nall the other.\nOn Feb 2, 2013 2:30 PM, \"Andreas Zelend\" notifications@github.com wrote:\n\nAt the moment \"unnamed\" is shown if a stream has no name set, that is the\nnormal case for subtitles. Therefore I would suggest to remove it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2162#issuecomment-13029774.\n. Sorry, missread the diff. Will have to look at it in some more detail. But\nlooks good initially.\n. Sorry, out skiing. Won't be able to look until l mid week.\n. Fix above, rebase and then you can assign it to next merge window.\n. We should change all places and send a patch upstream.\n. I'd say both :-)\n. Yes\n. May not be a good idea in the general case, but I'm not really sure.\n. It would make more sense to fix this in CFileCurl. When we hit EOF during read, we should release the active session.\n. With gb ethernet and bluray movie for example you end up maxing out network\nand/or cpu to fill data pointlessly. Note we don't throttle if read is\nconstantly draining the buffer. Ie it doesn't limit read to that speed when\nneeded, only when not needed to fill up in advance.\n\nImho 2*bitrate will be insane for 40mbit bluray.\nOn Sun, Feb 3, 2013 at 3:47 AM, DasMarx notifications@github.com wrote:\n\nSetting the Throttle to rate +1 mbit has some bad potential.\nAssume we have a file with a long initial credits and long ending, many\nslow sceenes with less bitrate. And one long lasting high bitrate scene. If\nthe scenes bitrate is higher than the rate + 1 mbit / cache size, the file\nneeds to buffer again.\nBy setting it to rate * 2, we will most likely not get any buffering.\nWhy do we set a Throttle anyway? To keep others amused and don't take the\nwhole bandwidth?\nI often have problems with buffering over WLAN, but this PR helps in my\ncase.\nYou can merge this Pull Request by running\ngit pull https://github.com/DasMarx/xbmc adaptiveThrottle\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/2168\nCommit Summary\n- make Throttle adaptive to rate not rate + 1mbit\nFile Changes\n- M xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamFile.cpphttps://github.com/xbmc/xbmc/pull/2168/files#diff-0(2)\nPatch Links:\n- https://github.com/xbmc/xbmc/pull/2168.patch\n- https://github.com/xbmc/xbmc/pull/2168.diff\n. Feel free to reply if you figure something out. You are likely not alone.\n. well you want it to fill, but not on account of fluidity of playback due to\ncpu usage.\n\nOn Mon, Feb 4, 2013 at 8:04 PM, bobo1on1 notifications@github.com wrote:\n\n40 mbit bluray times two is only 80 mbit, if your systems can't handle\nthat then I don't think you can play bluray at all, if 80 mbit maxes out\nthe network then that's what you want to do, because if you have a slow\nnetwork, you want the buffer to fill up as quickly as possible.\nAlso, at those high speeds, the cache will be filled entirely in a few\nseconds, so I don't think it's much of an issue.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2168#issuecomment-13093186.\n. Imho we should ship pdb or make them available separately. They can be\nrather large.\n. Looks good\n. Ffmpeg doesn't use libcurl at all, so can't be fixed that way. We'd have to\nsolve it after demuxing.\n. Could be that we use multiple sessions. We don't close the old one before\nopening a new at the new location (by design) .\n. have you re-enabled debug log for curl and looked at the log?\n\nOn Mon, Feb 4, 2013 at 8:09 PM, arnova notifications@github.com wrote:\n\n@elupus https://github.com/elupus: I tried disabling multisession but\nthat doesn't make any difference. Any other ideas?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2179#issuecomment-13093426.\n. Could you post the difference this patch makes to the http request.\n\nOn Tue, Feb 5, 2013 at 8:56 AM, arnova notifications@github.com wrote:\n\n@elupus https://github.com/elupus, this is a followup for PR2179. The\nsilverlight streams now play nice with Libcurl although there's still\nsomething weird going on: after a seek, dvdplayer keeps seeking back in the\nstream causing the file cache to never fillup. You can see this here:\nhttp://pastebin.ubuntu.com/1611686/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2187#issuecomment-13118428.\n. That is just strange. There are no range requests at all in one of the\nlogs. How would seeking work on any server at all??\n. Maybe related:\n\nDaniel S (25 April 2007)\n- Sonia Subramanian brought our attention to a problem that happens if you\n  set\n  the CURLOPT_RESUME_FROM or CURLOPT_RANGE options and an existing\n  connection\n  in the connection cache is closed to make room for the new one when you\n  call\n  curl_easy_perform(). It would then wrongly free range-related data in the\n  connection close funtion.\n. If tested to not break ftp access, it's fine by me.\n. Imho.. Just update the dts after seek there instead of adding another\nfield. And avoid updating it in UpdatePlayState() if nothing else is\navailable.\nOn Wed, Feb 6, 2013 at 8:57 PM, Rainer Hochecker\nnotifications@github.comwrote:\n\n@elupus https://github.com/elupus, this fixes seeking pvr streams for\nme.\nYou can merge this Pull Request by running\ngit pull https://github.com/FernetMenta/xbmc pvrseek\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/2189\nCommit Summary\n- dvdplayer: set dts after successful seek, correct time offsets\nFile Changes\n- M xbmc/cores/dvdplayer/DVDPlayer.cpphttps://github.com/xbmc/xbmc/pull/2189/files#diff-0(11)\n- M xbmc/cores/dvdplayer/DVDPlayer.hhttps://github.com/xbmc/xbmc/pull/2189/files#diff-1(1)\nPatch Links:\n- https://github.com/xbmc/xbmc/pull/2189.patch\n- https://github.com/xbmc/xbmc/pull/2189.diff\n. No idea to be honest. I guess we'll see. In okey with the pull. Good idea\nto grab input state on flush.\n. Add a gui setting. It's a needed setting for proxy.\n. It's not only curl that need proxy info. Python yse that setting too, as\nwell as ffmpeg soon. So the enum aught to be somewhere else and you need to\ncheck the python stuff so it doesn't break. Just grep for that setting and\nyou aught to find it. Apart from those things it is looking good.\n. Right. It was the removal of http:// in the curl setup that threw me.\nThought you changed what was stored in that setting.\n\nI'm okey with the change, get a sign off by somebody else too then merge.\n. Fine by me\n. Remove above hunk, then it looks good. \n. I really really don't like the full download strategy. We need to support\nmulti sessions for this.\n. Like I said before. Add a GetAudioStreamInfo(index, struct&) which fills\nthe struct with info and drop all the other silly functions.\n. Yes drop the existing methods. It's silly to method after method to get\nmetadata for streams.\nReplace them with 3 new ones vid/aud/sub.\n. Yeah. That function almost gets there but not completely. If you can\nincorporate it's functionality it would be optimal, but I don't want it if\nit just makes it more complex.\nJust do the simple data first, like channel, bitrate, lang...\n. With that we now have a race. If play file return true, but video directly\nends and signal stop, we will miss that signal.\n. First glance seem to indicate a reasonable approach. I need to review more\nthough.\n. I don't want you to change my computers cpu frequency...\n(commit title doesn't give any clue what the purpose is)\n. Wait for merge window. it's not clearly a fix imho.\n. Quick glance looked good yea.\n. Looks pretty good to me.\n. Looks quite complex. I'll try to look in some more detail later, however I\nhad one thought...\nIt feels like it could be helpful to have players get passed the sequence\ncounter in their open call, then they should echo that in the callbacks.\nFeels like that could simplify the behaviour. Just a thought.\n. Probably. But at the end of the window. I would like some more people looking at it. It's rather complicated code. I would have prefered if the whole player handling would have been lifted out of CApplication. But that is a even bigger job :/\n. Nope. Just haven't had the time to look at it.\n. I'm sorry.. But do you think we can take the buffering first then the lateness code. This pull is huge and touches many critical things for rendering. Sorry for making it complicated, but more people than you need to understand the code.\n. That doesn't look good. Protecting the call to get the size of the vector\nthen leaving that lock while iterating is a bad idea. What is wrong with\nthe old code?\n. Ok, so just lock critical section. Pop one message of. Unlock, then process\nit. What I'm against is the lock only around the size() call of the vector,\nsince as soon as you release the lock the size value is invalid.\n. Ah. Okey now I understand why. Should have looked on the code on a computer\ninstead of my phone.\n. I would prefer the rename of the m_vec*** variable wasn't done. It doesn't really matter if it's a list or vector here. Also drop the added function for getting the size(). Just do \n{ CSingleLock lock(section);\n    len = vec.seiz();\n}\nAfter that we can merge it. \n. Old code... Process a message, it blocking bring up a dialog. Now this\ndialog will cause calls to process messages, which will be processed before\nany remaining messages from the first process call.\nI suppose there could be stuff relying on this. But Imho the change is\nsound.\nAlso regarding stupid boys comment on flooding. The count stops the\nfollowing from being a deadlock:\nProcess a message that resend itself to the message queue.\n. I don't see why this have to be so complex.. The following guarantee processing order:\nlock()\ncount = queue.size();\nwhile(queue.size() > 0 && count-- > 0)\n{\n  msg = queue.front;\n  unlock()\n  process(msg)\n  lock()\n}\nWhat else does this pull add?\n. If Jonathan agree. Imho it's better to process in order.\n. Any reason we don't always use utf8? Also prefer this to be a protocol\noption, not url option. Think we use pipe separator for that but check the\nURL parser.\n. There is a defacto standard for this:\nhttp://curl.haxx.se/mail/archive-2010-09/0052.html\nhttp://tools.ietf.org/html/draft-ietf-ftpext-utf-8-option-00\nSo Imho we should always utf8 encode our filenames, then when we start up\nthe session. Try to set that option. If successfull just pass the utf8\nalong, else decode to latin1 or something.\n/Joakim\nOn Mon, Feb 18, 2013 at 1:04 PM, ulion notifications@github.com wrote:\n\nIn current code, ftp/ftps use url options, and http/https use protocol\noptions, I followed the original code.\nas the reason not use utf8 by default, it could be a long story and I\ndon't known it either.\nbut since xbmc was already using non-utf8 charset for ftp for such a long\ntime, there must exist many ftp servers configured to not use utf8 for\nusing with xbmc like the one in the forum thread\nhttp://forum.xbmc.org/showthread.php?tid=121478\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2256#issuecomment-13718865.\n. To be honest I think we should do away with the conversion always and just\nassume utf8.\n\nIf that break some people setup, so be it.\n. Will break people's setups though.\n. i'm okey with this. This can be merged and we can start to think about the switch to protocol options later.\n. Please don't. Imho that is not valid for most protocols and that is\ndefinitely not the only place.\nJust change it to protocol options. We have to accept the breakage.\n. All the above should have been preserved, and should have been protocol\noptions.\n. There is a semantic difference. Url options apply to the resource in the\nurl. Not the com protocol. That is why we added protocol options, which are\napplied to the com protocol.\nSo preferably we'd want to move to that when it make sense.\n. Yea that need same solution. Preferable factored into same function.\n. Well, not for http that is for sure.\n. Fix above, then assign it.\n. Have no way to test gles, so would be nice to get some assistance there.\nWill try to do win32.\n. If you set it in video driver, blacker than black and white than white is\nlost.\nSecondly, Intel drivers only support that in very new revisions.\nAnd my TV don't support pc levels I without disabling bunch of other\nthings.\nThere really should not be Crap output from this, since we should not loose\nany info for movies.\n. I'm pretty sure it us foot room for btb, where have you read otherwise?\n. The problem is that there don't seem to be a way to indicate over hdmi what\nthe source is. At least I've yet to see a TV that handles that auto. I\ndon't think the standard specifies any method for it.\nWhat make matters worse is that not all tvs allow the user a choice in what\nthe source is. So in my case it will assume our full range image is limited\nrange and \"expand\" the middle part on display.\nWhen you change this setting in gfx, the only thing it does is compress the\nfull range rgb from the computer gfx. So then we end up with us\nexpanding,gfx compressing. But gfx can obviously not recreate the edge\nvalues.\nAs you said the wtw, btb are less important in the digital erea, BUT they\ndo still help cover up invalid calibrated tv's. Ie brightness pulled too\nhigh.\n. Eh? It will always work if your gfx isn't compressing.\nBut yea it's very possible nvidia changed their defaults to compress by\ndefault given that almost all pc software output full range and that all\ntvs default to assuming limited range on hdmi.\nAlso, I added the function for it in windowing system, the thought being\nthat if we can detect that gfx is compressing, we should not output\nlimited.\nNote. even the ps3 have this option in their settings. I would assume the\nxbox too.\nOnly reason I haven't added it earlier is that I thought I would need to\nswitch from the fixed pipeline to shaders. Turned out that we didn't. The\nmotivation increased when I needed it myself :-)\n. That spec aught to be the one yea. But I suspect that always says limited\noutput. But doing that would be throwing away info for sources that is not.\nPictures, computer graphics and what not. Ie does not make sense for a\ncomputer monitor connected via hdmi.\n. Yup, limited range may sound better.\n. Regarding reflections that need to be solved. Seem strange.\nRegarding color. It's fully correct to become grey'er. You need to match this setting with your TV setting if you have one + make sure your video drivers are not doing same thing.\n. Yea, the background still end up fully black. I'm not sure what is best. Your TV should be calibrated so you can't see a difference between the two anyway.\n. Yea.. I forgot the old rule that you can do mults in any order but not addiotions in combination :). Anyway spotted some other weird stuff in there. We never setup the alpha sides of the texture stages.\n. It probably should force a skin reload. Shaders could need recreation.\n. Hmm.. That check doesn't seem valid for checking for icy. If icy is\nappended elsewhere you need a separate bool for that.\n. Then when should free the old list, and add icy to a null list always.\n. Need to be re based and cleaned from irellevant commits.\n. Yup. One thing though. Add a accessor function for this data in\nguiinfomanager, which caches the struct until next frame. There should be a\nfunction that is called on each new frame in there somewhere.\nThat would reduce the load on players for multiple info label accesses.\n. I always like commits like this that add or don't remove functionallity:\n+152 lines\n-194 lines\nOne additional comment. Rename IPlayerAudioStreamInfo to SPlayerAudioStreamInfo. Ixxx is usually reserved for interfaces. This is a just a buffer.\n. If the feature is not there, ignore it for this pull. We can add that after.\nAlso, you can just squash this together as one commit.\n. You can do it in this pull. But keep them separate commits.\nRebase interactive is your friend to keep commit series in line :-)\n. Yea. Lets do this pull request as just refactor. Ie mimic old behavior. Looking good so far, just add the video one and then we can pretty much merge after a signoff from aml/omx guys. It's not a feature addition, so can go in before merge window i think. Then you can do the cleanup of the info for the merge window.\n. Go ahead.\n. You have an unrelated close change. When stat is used, open will not have\nbeen called. Have you verified that it handles that?\nI can live with the other change. It will not work if a inheriting class\nset some additional aliases, but I suppose that is not used at the moment.\n. Yup\n. The absolute clock is adjusted for speed too. So the normal logic will\nwork.\n. By that I mean it is synced to vblank too. Not the speed adjustment.\nDvdplayer will convert to absolute clock for flippade call. So you will\nhave a timestamp that is fully correct.\n. Looks quite nice. If we set buffering to true and only allow 2 buffers, I assume it will work almost identical to old code? If so i think we should avoid the SetBuffering() function and just have the Configure call configure queue length too.\n. Leave the enabledisable call for now, and ignore the queue length. Keep in mind that i want to merge https://github.com/elupus/xbmc/commit/306a028beaf28b09088bb0746a6f65686dbca7fd at some point.\nThat is this pull taken one step further. Queuing done by windowing system.\n. If I end up with some more time on my hands next week. I'm way too busy\nthis week to look at it.\nIt's touches such core part and is large so I want to look at it closely\nand likely change some things.\nI promise I will try though.\n. Hehe.. Just got a good reason to look at this :). Was trying to play a\n60fps video on my 30hz system. With queueing of frames it could have gotten\nframe dropping working properly since it would get 2 frames queued before\nand able to drop the first since the second was about to be displayed.\nOn Wed, Apr 3, 2013 at 6:02 PM, Joakim Plate elupus@ecce.se wrote:\n\nIf I end up with some more time on my hands next week. I'm way too busy\nthis week to look at it.\nIt's touches such core part and is large so I want to look at it closely\nand likely change some things.\nI promise I will try though.\n. I'm fine with it. Merge away.\n. An attached thread will not be garbage collected. Maybe that doesn't matter\nhere.\n. Ok. May gave been miss informed. Thought I had seen something like that\nwhen I was messing around in libbluray.\n. That can cause problems for dvd player. You are requesting a buffer of\n256/48 seconds. Ie 5 seconds. That will cause a huge skew between audio and\nvideo in dvd player. Imho trying to set it to 1 second would be better.\nAlso you aught to take sample rate into account.\n\nTry just setting it to sample rate.\nPeriod could still be large. For example samplerate divided by 10 (100ms)\n. double period size is too small I think. We want to have some time in dvdplayer to fill up new data. one second or half a second should be good enough. But don't make it much smaller.\n. fine be me. \n. Fine by me as long as it guarantee half a sec buffer or there about. The\ndetails on the workaround I'm not especially qualified to answer.\n. This need a configure check. That function is not available in all linux\npthread implementations.\n. Looks good to me. Aborting to on first errors seem bad.\n. Why are they elsewhere? , this indicate a leak.\n. Oh right you are. There is a collection of all subs in there. Heh, odd this\nhasn't been more of an issue on other systems.\nOk to merge.\n. We don't really release the resource though, only the reference.\nBut yea that is a issue.\nWill ponder a bit.\n. nah.. that looks messy. What types of subs are having this issue btw? All\nthe ones that keep refs in decoder are text based, those don't even use the\noverlay renderer.\nSo I'm back to thinking this is some other problem at play here.\nOn Sun, Mar 3, 2013 at 5:39 PM, Rainer Hochecker\nnotifications@github.comwrote:\n\nhere is an alternative fix: FernetMenta@5d9f786https://github.com/FernetMenta/xbmc/commit/5d9f786586d8c214e8e6350757981bb1f86125b7\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2363#issuecomment-14349798\n.\n. Also that proposal breaks the whole idea to not re-upload static overlays\neach frame.\n\nOn Sun, Mar 3, 2013 at 7:16 PM, Joakim Plate elupus@ecce.se wrote:\n\nnah.. that looks messy. What types of subs are having this issue btw? All\nthe ones that keep refs in decoder are text based, those don't even use the\noverlay renderer.\nSo I'm back to thinking this is some other problem at play here.\nOn Sun, Mar 3, 2013 at 5:39 PM, Rainer Hochecker <notifications@github.com\n\nwrote:\nhere is an alternative fix: FernetMenta@5d9f786https://github.com/FernetMenta/xbmc/commit/5d9f786586d8c214e8e6350757981bb1f86125b7\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2363#issuecomment-14349798\n.\n. Yes. but if overlay renderer releases a resource, which is still about to get added to next frame, it will be lost and re-uploaded when dvdplayer finally manages to add it to render.\n\n\nBut as i said, normal text subs won't trigger this. So it must be ass based subs only then? Then there is a bug in that code. It keeps no buffer, so it must be leaking.\n. I like the option of copying the overlay object in CDVDSubtitleParserText::Parse(). It's easy, it's just two simple types that need copy constructors.\n. Actually the copy should be in CDVDSubtitleLineCollection::Get\n. http://paste.ubuntu.com/5583148/\n. I like the virtual Clone method. Feel free to move my code into a clone method.\n. Looks good. Can be merged as long as some minor testing has been done.\n. My only concern is the pDlg change. The old code aught to never have\nworked, so this changes behavior.\n. Okidoke, have my signoff.\n. To be honest I'd like to have seen the sdl droppage branch in before this.\nThat may be some time off though.\n. This isn't needed for mpegts. It should stop parsing when pat is found. If\nnot there is something else wrong (or you are insisting on external libav\nor ffmpeg)\n. Fix upstream libav/ffmpeg or internal ffmpeg. But no setting for this will\nbe added.\n. This is what pulse solves by allowing seeks and rewrites in buffers. As\nlong as ae thread is high priority and we have buffers somewhere higher up\nin the stack it should be fine anyway.\n. Looks good.\n. Imho keep the libcurl ones. The other can be dropped.\n. If video goes away away renderer can remain configured. But mainly I don't\nlike the dependence on rendermanager. Better add a bool in player saying if\nit ever found video streams since last open file.\n. Rename to just m_HasVideo then ok to merge. Imho a bug fix, so can be\nmerged now.\n. I don't see the need for UDP at all.. They are never seek able or pause\nable...\nOn Mar 12, 2013 12:10 PM, \"Philipp Felix Hoefler\" notifications@github.com\nwrote:\n\nYes, it has nothing to do with PVR at all.\nThis would be an option needed for UDP Multicast live streams directly\nopened since SkipPrevious is reacting differently in Frodo.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2426#issuecomment-14769467\n.\n. I think that timeout call should just be raised, not removed. We don't want\na hang here. If server hang, not providing data but did accept the\nconnection we won't time out otherwise.\nOn Mar 16, 2013 12:14 PM, \"ulion\" notifications@github.com wrote:\nwhat @elupus https://github.com/elupus think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2428#issuecomment-15003125\n.\n. Yea that is fine.\n. If it's a uncommon case yes. But couldn't really tell from the diff. Info\nmight be better suited.\n. From what I can tell it only logs in corner cases.\n. This should have an interface class instead declaring those two functions. Look in DVDInputStream.h\n\nThen the PVR code can be brought in line with that interface as well.\nif(CDVDInputStream::ISeekabilty seekability = dynamic_cast<CDVDInputStream::ISeekabilty>(pInpustStream))\n{\n  canseek = seekability->CanSeek();\n  ....\n}\n. I put up a pull request with the interface changes in place. Asking ffmpeg is just about impossible at the moment, so that will have to wait.\nPlease give it a try and check that it works as expected.\n. I'm for the enablement by the debug gui setting since it shows that you are running in a non standard mode. If we where to accept a GUI setting it would also need to indicate that it's a security risk doing so. User would have no idea that it was with the current title of this setting.\n. Looks good. Merge away.\n. Fine by me.\nOn Mar 16, 2013 4:10 PM, \"arnova\" notifications@github.com wrote:\n\nLooks good, ran into this myself quite a few times with avi/mpeg4 stuff...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2449#issuecomment-15006265\n.\n. Not sure this works to well. Say you have cropping turned on. It will adjust scaling dynamically. It could very well end up the identical size one frame and not not the next.\n. cropping can be much more than that. but that wasn't really my point. the point was that it keeps on changing from frame to frame. so the way it's handled here won't work. ie it will turn of, then be needed the next frame. What is the point of this anyway? why do you want to turn it off?\n. Feels better to add an option to only scale things that are x% smaller than output size then. \n. Yes. But think I'd want some other opinion on it too.\n. Fine by me.\n. Why a separate thread? Why can't it run in decode thread?\nOn Apr 9, 2013 4:22 AM, \"BtbN\" notifications@github.com wrote:\nI updated this. Now it runs in a seperate thread in the VAAPI decoder,\nsame as suggestes.\nIt propably still needs some testing and polishing, but in my tests its\nworking perfectly.\nI also added VAAPI deinterlacing as new deinterlacing-method, selectable\nvia the UI or perfered by Auto-Select if available.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2460#issuecomment-16090722\n.\n. Forced subs should always be visible. So this won't do. If it's a recent\nregression I suspect we are not copying bForced flag in CDVDOverlay copy\nconstructor.\n. No, but the stuff I mentioned could case them to be assumed forced...\n. Looks good. Frodo backport too.\n. I don't like this. The NextStream logic in dvdplayer should handle this\nfine.\n. That the NextStream functionality handles. Just have it return RETRY.\n\nThe IsLiveStream is what I object to (it's usage in this, not the addition\nsince it could be useful for other things.)\nThe whole special case for pvr should be removed and resolved by correct\nreturn in nextstream.\n. Do note. I said should be. If the pvr addons implement it correctly I'm not\nsure.\nIf this works correctly then I'm all for it.\n. Drop the IsLiveStream() addition from this pull then i'd say we merge it.\n. Fix the file system to not log an error on not exist instead.\n. It's much more overhead to do the exist check than just accepting an error\nfrom getdirectory...\n. Ok\n. We just get tired of repeating \"no bug reports without patch on github, use\nforum or issue tracker. \" sorry if you feel slighted it's not intended.\n. Do we have any archs where this will fail. What about a stack with ipv6 disabled?\n. The other option is using getaddr instead if explicitly opening ips. Check\nthe json webserver for example.\n. What about ftp? You are changing behavior for other things than http.\n. Ok. I missed how it was set to true before. Looks okey.\n. Will work there too for any http stream.\n. If this still compiles and work with current master (after ffmpeg bump), it can be merged.\n. This was by design that it return false. It's a background player. Imho\nthis should be fixed so we provide this info anyway.\n. Remove the checks for hasvideo / hasaudio where the issue is.\n. HasVideo is used to switch to fullscreen video playback for one.\nYes I know it is in the skin. The skin should be fixed to not rely on these\nbooks where at all possible.\n. Yes, but you can just reset the info on every frame, called from\napplication Imho. This is only allowed to change during frame move not\nrender.\n. You don't update the info, just invalidate so it's re requested from\nplayers in next access.\n. Hmm. That may work due to our virtual file system can treat it as a folder.\nBut this would hinder us from serving real playlist items.\nIt is obviously wrong if we serve it as a music item though.\n. But can showtime handle playlist files at all?\nSmartplaylists are something xbmc internal so those aught to be considered\ncontainers, but what about m3u's?\n. Okey.. So what types of playlists are this pull about?\n. Ok. Could you update the commit message to mention that it's smart\nplaylists?\n@jmarshallnz is there a reason smart playlists are not IsPlaylist()?\n. Strange, then I wonder why this change is needed. IsFolder() aught to be\ntrue.\n. Looks very nice. Fix the above things then ok for this window imho.\n. The patches directory would be nice if it was named the same as before. Also i really want the ffmpeg part of the update a separate commit from the addition of the patches. \n. Have 0028-fixed-dvd-still-frames-ended-up-in-internal-lavf.patch been verified to not a problem anymore?\n. We can merge it anyway. That is of no major concern since we are likely to break dvd menu's anyway in some way. Don't think we've managed a ffmpeg update yet without doing it. (we really should use another demuxer there :) )\n. Sadly you are missing the point, the auto setting has nada zilch to do with\nffmpeg. It's xbmc as a whole.\nIt may very well be that it's bad for ffmpeg to have it on, but that is\nbeside the point. It's needed for the rest of xbmc.\nWe have gone through a whole lot of grief regarding this already.\nThat said, it's obviously not your fault that we have issues now, nor your\njob to fix it... , unless you have a magic wand that solves it magically :-)\n. They are directly from upstream and depreciated by the new ffmpeg update so\nImho pointless.\n. I think most of these issues are resolved by the player start pull request\nby @ulion\n. I'd rather see a way to extend what we consider on lan. Note that ftp is\nnotoriously slow at seeking (and it loads the server a lot) . So opening\nthis up for all sources seems like a bad idea to me.\n. Since I have a source to mplayerhq sample directory, I'm not to font of\nxbmc hammering that and me getting blocked. That is the risk Imho.\n. That should be perfectly fine in think.\n. This get a bit messy in dvdplayer. The code need to be generalized so external and internal demuxers are handled similar. Making the m_pInputStream and m_pDemuxer arrays them selfes, so we can iterate over them easily and use the same code independent on where it is reading from. \n. Looks good to me\n. Looks good to me.\n. The problem is that dts and time are not the same thing. Also the dts sent\nto flush buffers forces decode to start from that point, everything else\nwill be dropped.\n. Ok. I should have looked at the diff... If you only do that as a fallback and only for etimesource_clock then it might be okey.\n. I like it so it has my +1\n. Yea, I commented the same when it was added but nobody ended up fixing it\n:-\\\n. The bytes variable need init in constructor and open.\n. Above comments need correction.\n. Please commit such commits be getting the patch from ffmpeg, then doing git\nam --directory=lib/ffmpeg [patch file]\nThat way author and commit message is retained.\nOn Apr 12, 2013 2:51 PM, \"Andreas Zelend\" notifications@github.com wrote:\n\nUpstream commit is b066d90\ngives me 404. You probably forget to add the prefix FFmpeg/FFmpeg@\nFFmpeg/FFmpeg@b066d90https://github.com/FFmpeg/FFmpeg/commit/b066d90211072c7532e17c0c54d8475f10fc97ad\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2599#issuecomment-16291016\n.\n. I don't like it. It adds complexity for little benefit Imho.\n. That gives fully old behavior with a non modified url? If so, then ok. It\nmust be that these strange servers are the exception.\n. It did work. Those servers are in spec. It's correct to reject ranged\nrequests if you don't support seeking.\n\nWe should not set range requests on the first connect only after a attempt\nto seek or if we get a forced seekable.\nI'll revert back to that revision this weekend if we don't have another\nsolution by then.\n. I like this option. but do we really need the extra m_bRangeAllowed? If m_seekable is true (it normally is on first attempt) we set the range header. If it was true and we failed with a range error, we retry with m_seekable false and no range header.\n. That would give back refs. That is Imho less understandable. m_seekable can\nbe part of the state instead perhaps.\n. I like it better to have it in the state.\n. Yes. But back refs from that state, is really ugly.\n. I won't. Just think it's ugly. But I'm okey with it.\n. Yes.. Double += double is not bit accurate.\nBut I don't like the m_humpBack naming of the variable. Just call it\nm_bytes. Probably should have mentioned in the other pull. Can be renamed\nlater though.\n. Looks good. Merge away.\n. Fine by me.\n. Fine by me.. but i think there was a reason. Ie we wanted to use our own written version instead since it wasn't available always?\n. The symbol doesn't exist in the upstream ffmpeg we are based on. So if that exist on the external version you use, your external version is technically to old.\n. I think I may have missed the point. I thought the change reverted to using\na public av_ one from ffmpeg.\nCould you rename ours to xbmc_ or similar in this pull to make it clear we\nare referring to our internal.\nNote dll wrapper can still be called av_ so no ifdefs in dvdplayer.\n. I'd rather we revert the rename than add another layer of complexity by the define. It was obviously in error.\nA better future solution is to define that function as a member function of the class both for internal and extern version and drop the patch to ffmpeg.\n. White lines where? Sporadic? Bottom of video?...\n. Ok, that explains it. If we scale it, we sample outside the buffer. We\nprobably should take that into account when we display the video. Skip\nbottom and right line if we scale the video.\n. I was sure this had been pushed upstream. Strange.. , so you have verified\nthat it was broken before this patch?\n. Is this passthrough or transcoding? It sort of looks like transcoding since you add encoding functions.\n. Lol, I was a bit curious that it was so easy to add aac support :-).\nUpdate the pull and the commit with proper messages.\n. Remove the comments. Just leave the fix. They are different so must always\nbe considered distinct.\n. Second check should have been for the timestamp in packet that is used.\n. Yes.\n. If(msub.pts! = av_... && pPkt->pts != dvd_...)\notherwise the calculation will be broken if th the packet doesn't have\ntimestamp but the output sub does.\n. Fully normal behaviour. For video and audio it's common to skip timestamp\nand rely on durations in between.\n. You must connect via all entries you get from the dns request not only the\nfirst.\n. For a generic solution: https://github.com/xbmc/xbmc/blob/master/lib/libhts/net_posix.c#L125 that support ipv6 and ipv4 and connects to the first available dns entry.\n. Try to keep your first lines shorter so they fit the git limit. But i like this i'll merge it.\n. @alcoheca can you check this for the upnp servers?\n. Then please don't open two separate pull requests. You can pull to his branch if you want him to include something. \n. But i suppose there are similar checks all over the file. Those really should be dropped.\n. weird reindent, so can't see what changed.\n. Can't you create a fake SDL.h file in a SDL subdirectory that is inluded in include dirs. Then all the ifdef stuff for headerers would have gone away.\n. eeeek.. I would much much rather have seen you replace all those occurances with the memcpy. but okey it was less changes this way.\n. Hmm.. seems like the GetDisplayLinkFPS() function should have been fixed up for the non arm case here instead.\n. There is no such thing as _LINUX either.. That is something we add in the configure script. What says that the only ever apple product running on arm is an IOS device. I'm just saying it should be a configure define for IOS or something.\n. Well even if we drop SDL we'd still need the m_frameCount variable. It would just be locked with pthread instead for example.\n. ugly. replace the local_abs() with a static inline function in both cases could work just as well and be ifdef free. I bet the issue is some side effect of what is passed into the define somewhere in that code.\n. Well the free mem display is rather pointless. A display for used xbmc memory would be nicer. And perhaps (if possible) how much memory is in physical memory and how much is swapped out. Non the less, it's only rendered if enabled in settings so why do you need to ifdef it out. Just don't enable it.\n. Aslong as you plan on getting rid of it then fine. But factoring it out to a function would have reduced code.\nSecondly, why do you ifdef out the powerManager calls? Would be better to ifdef out the code in those functions instead if you don't want them to do anything.\n. Can't you add our own include then which the ifdef for real SDL and our fake one is in so we don't need the ifdef in each file?\n. You still haven't commented or fixed this...\n. As long as you intend to do it.\n. Just to be abit annoying.. Why introduce more SDL stuff :). Isn't pthread native on osx?\n. Or if CCriticalSection can be used in objective C.. why not use that?\n. Possible divide by zero:\nif(m_Bitrate)\n  m_TotalTime = 1000 * 8 * length / m_Bitrate;\n. If iAmountRead is an odd number this is not valid. Correct size to be even before the m_file.Read()\n. Parse the mimeparameters properly with a proper setup for all rates allowed. I assume the mimeparams are separated with semicolon or comma. So use StringUtils::SplitString() to split it into parts and iterate the options.\nYou can look at CFileCurl. It does something similar for ftp param parsing.\nIf you fail to setup any param, set them to some default or zero and fail init when they are missing.\n. perhaps push these list into a std::map on startup? It's a quite long list.\n. All the other renderers must be fixed to take the new param instead.\n. Put a AddVideoPicture() in BaseRenderer that returns -1 then we can drop this ifdef.\n. This shouldn't be needed. Anything needed to be held should be passed along the dvdvideopicture.\n. sadly not okey.. In a few ways really.\n1. CDecoder should not have a direct link to the rendermanager. Multiple CDecoder instances can exist at the same time and they should not touch render manager. \n2. Requirements from processor size will potentially grow. \n3. It's accessing something that is handled by another thread.\nIt should know that something is holding on to surfaces by checking surfaces (or surface holders) refcount and growing it's surface count using that. This can be done in the hw decoder check call. \n. An alternative would be to have dvdplayervideo set some parameter on open with the number of required buffered surfaces. In either case the decoder is not allowed to touch any globals affecting playback.\n. Right. As long as this is passed to the decoder via some codec option on open i'm fine with it. But i don't want it accessing the rendermanager directly.\n. the CodecFactory can pass options to a decoder, so would be nicer if you added a parameter to the codecfactory::create() which takes the surface count as a paramter and passes that as a codec option to the codec. \n. Always do the split string on \"=\". Then check rate[0] == \"rate\" instead. Your current code would grab myweirdoptionrate=1000 not only rate=\n. This should have been handled in the passthrough codec already.\n. ",
    "halorgium": "startClient() requires all the arguments to be passed in. \nI agree that it should guard against starting the client twice. \nThis makes me think that restarting overcomplicates the client. \n. ",
    "jmarshallnz": "A couple of points:\n1.  Nice :)\n2.  I don't like using AppendFormat/Format when FormatSQL is safer for db actions.  eg your where and order clauses would have to be PrepareSQL'd before sending them to this method.  This either needs documenting or dropped in favour of PrepareSQL.\n3.  bReturn is not required in DeleteValues or ExecuteQuery, QueueInsertQuery, CommitInsertQueries - just return directly.\n4.  iReturn is not required in ResultQuery\n5.  I prefer m_multiWrite, but don't really care ;)\n. Any particular reason why you don't like return statements in the middle of methods (or specifically try/catch blocks?) or just a coding style thing?  I don't really mind either way - just interested :)\n. If you can think of a nice way to get your order clause so that an episode smartplaylist will give you your channel list then you'll be done.\nUnfortunately, this will be tricky I think - especially when specials are included.  The first step would be to create a counter in season/episode order from the last played item on a per-show level.  Then you'd order by that counter and a random counter (to get a random show).\nYou need to get (select min(c12*100+c13) from episodeview where playCount is null group by idShow) alongside the rest of the fields in episodeview.\n. Hmm, something like this might do the trick:\nselect c12,c13,strTitle,o.m from episodeview join (select min(cast(c12 as integer)_100+cast(c13 as integer)) as m,idShow from episodeview where playCount is null group by idShow) o on episodeview.idShow=o.idShow where playCount is null order by cast(c12 as integer)_100+cast(c13 as integer)-o.m,random();\nOnly problems are that it's not a linear scale, so it basically plays out current seasons of shows before going on to the next season on any show.  If you can improve that (perhaps sort an internal query and then use row number?) then I think we'd be good to go.\n. The randomizer aspect in that case is similar to the video partymode list (currently only enabled for music videos perhaps?) which just takes a smartplaylist.\nGiven that the ordering can be done using a query, it may be possible to allow a \"order by random (unwatched) shows\" or similar to smartplaylists in general.  This would give the nice ordering behaviour to any smartplaylist.\nI certainly agree that the ordering behaviour is nice to have, but I don't like to have to use an external editor to set things up, when smartplaylists are so close to the desired behaviour.\n. Nice work - have made some comments on a few of 'em.\n. This doesn't appear complete - it only affects gamepad (whether or not we want it being a separate issue).\nI know it's been a long time, but are you interested in this still?\n. does it make sense to apply the same sort of trick to other input devices?\n. Sure, I can rebase it before commit.\n. Heh - sure, defend away ;)\nI wonder how many 2 disk editions of movies are there?  Bluray kinda makes that a (very restricted) thing of the past, right?\n. ok, the concensus appears to be keeping the ability to not \"seamless stack\" ISOs and do via playlists - this is essentially what we already do anyway.\nReason I think it's a waste of code is because the usage cases are extremely small - it only affects those that have ripped full ISO images of 2 disk editions of single movies.  The number of folk doing that sort of thing nowadays has got to be very, very small.\nFor now I'll look to see whether we can't move the queuing code into PlayStack instead of where it is, so that at least it's all isolated in one spot, and won't affect other functionality.\n. #226 looks like it's heading to take care of this one.\n. The files node is identical to the current files window.  It's just a node of the library rather than having it's own dedicated view.\nrss feeds, livetv etc. should still work without issue from that node (I believe LiveTV sources may also be added to the root of the video library anyway?)\n. Ok, 1, 2, and 3 taken care of above, and things are a bit cleaner.\nIt's ready for master, so I'll push it there if noone complains over the next couple days.\n. There's about 20 (partial) commits in there - maybe 10 or so if some of the \"fixed\" commits are squashed.  I'll look into it, as I agree it'll be useful for history.\n. IMO the only thing we can do is better review individual commits, even the large boring ones.  Given the number of commits in code-reshuffle (most of which are trivial but are still large) there's no surprise that the rebase commits weren't reviewed completely.  The reason these ones hit is due to a combination of renames + rebasing + resolving conflicts going wrong, yet the changes were isolated so that things still built.  The ones that caused build conflicts were almost all picked up and fixed.\n. Ok, rebased the commits as you can see - used the original commit message, appended with info on the commit that reverted it.\n. That bit of the commit should still be intact (assuming I caught all of the slipups)\n. somehow managed to push the non-rebased version (original) of these - same content, different # of commits\n. 04f46bd and 93d7a4c can be dropped.\n. Looks good to me - I suggest waiting on elupus' ack though ;)\n. I think it'd simplify it as you don't have the diversion via the temporary, yeah\n. fix looks good to me - it'd be good to get an ack from elupus or c0diq though\n. Looks ok to me, though I also don't really see the problem of just using the macros to be honest (after all, in some respects it's easier to forget to restrict the scope of the PySingleExit than it is to forget the closing macro (which likely gives a compile error))\nMaybe I'm missing something?\n. Exception handling sounds like a decent enough excuse for the guard.  It enables additions later (eg ref counting to resolve recursion issues?) if needed.\n. I've rebased your commits here to cleanup the fixups etc + revert to the different coding style as per elupus' comment.\nhttps://github.com/jmarshallnz/xbmc/commits/IronTetsubo\n@elupus - any idea where that profile list is in libPlatinum - a cursory grep didn't turn up anything.\n. Done.\n. No impact on linux/win32 build that I can see, so other than trivials, seems good to go from my perspective.\nWould be good to get a linux devs once-over in case I missed something.\n. @gnif: The point here is making it easy for the codec to return whatever it uses internally, so that the codec doesn't have to worry about conversion - it would be the player's responsibility to pass that on to AE in whatever form it wants (whether it supports anything or not).  Agreed regardingly channel layout.\n. Looks OK to me - I don't mind either way how this one goes (most of them are in parts of the codebase that aren't touched on a regular basis).\n. Please restrict commentary on github to comments regarding the code, to ensure the signal:noise ratio for developers is kept high.  The forums are a more appropriate place for other commentary such as your comment above.\n. Took care of b above with fa3d233.\na. is most important for binary addons, so this could be addressed then.  Ideally that would then indicate how we can do the same thing for other addons (eg a simple procedure that we go through whenever we \"start\" an addon).\nc. isn't a huge issue at present as most addon dependencies are library modules that aren't really shown in the UI, so leaving around new versions is unlikely to be all that much of an issue.  Plus, given the current way we handle updates (by copying over the previous version, if present) it really isn't feasible to easily role back.\nIMO it's ready to go as is.  I'd appreciate review - perhaps spiff, alcoheca or dushmaniac are appropriate candidates?\n. Cheers spiff - will pull\n. An incremental patch to fix build on gcc and add a few #define's around the win32 portion is available here:\nhttp://pastebin.com/3GVYb2W3\nI presume this will allow it to work on anything >gcc 3.2 or so, which should be all the gcc platforms we target.  Linux testing is needed ofc.\n. clang also may have the GNUC define set, even though it may not have cxa_demangle, so you'll need to && !defined(__clang) onto the 2 gnuc defines.\nAnd yes, the mangled name will be fine to print.\n. Does:\nhttps://github.com/xbmc/xbmc/commit/89bdffb7a405db2a6fa96a7e35cdeea5f631cd56\nalready take care of this?\n. Right, so that was fixing one case (smartplaylist where clause for tvshows) but did not fix the root cause, correct?\nCorrect fix therefore is to revert 89bdffb7a4 and then pull your fix.\n. If DialogPlayEjectCancel stays in then osx support will be needed as well - see my other comment - hopefully we can get rid of it.\n. Not sure why you need to inherit?\nBasically if you call the appropriate static function in CGUIDialogYesNo you can get a tri-state return code (bCancelled if cancelled, else bConfirmed is true or false based on Yes or No).\nBased on that you can then do execute the appropriate action.\n. Ok, 2 options then:\n1.  Inherit and pass the ID in to the constructor of GUIDialogYesNo.\n2.  Don't inherit, but use the same XML file (via constructor).\nThis will reduce the burden on skinners primarily.\n. The XML id is irrelevant for builtin windows, yes.  So you can set your own in the constructor and that's what it'll use (you can confirm this by taking a look at the various CGUIWindow::Load() routines.\n. Sounds reasonable to me - just make sure you check that nothing silly happens when queues are involved perhaps (eg queue (Q) up a couple of disc stubs and a \"normal\" video file and then play the queue (SPACE -> PLAY)).\n. Pressing STOP on an item should stop the queue, so that's fine.  IMO it's fine as-is.\nAdd the changes and I'll pull when you're ready.\n. Looks good - will pull.\n. cac6dfa4984b09959a6cb56d1ccbbf9eaa02071b\n. m_update should be available there in all cases other than perhaps InstallFromZip.\n. Looks good to me, will pull.\n. I have no problem with this being the way it is at present, but in the future we'll need a better way to do it.\nTo see an example, take a look at grabbing a picture or addon thumbnail over the webinterface - the URL to the thumb in that case is the link to the actual original image (possibly with thumb:// preceding it), not the URL to the cached thumb.  Thus, we'd need a lookup into the texture cache to get the actual cached version of the thumb.  At that point, having some predefined sizes would make sense in the texture cache itself, so we don't have to continually resample images.  This has benefits elsewhere as the skin could conceivably also request smaller versions.  A simple method would be to have a mipmapped cache (i.e. power of 2 downsamples) and send back the closest matching size (criteria might be allow to send back an image at most 25% smaller or some such?)\nAll video + music thumbs (hopefully in time for Eden) will be using the same texturecache setup, so ensuring that things work for picture + addon thumbs now is essential.\n. Looks OK to me.  Will pull.\n. Personally I agree that we could drop to a single job that you pass your flag to (i.e. AddRecentlyAddedJobs would just add a single job passing the flag to the constructor) - it would save on contention with the jobmanager as really you want all the jobs specified by the flag run before you update the UI anyway.  In addition it'd save locks on the database during a scan.\nYou could still have separate classes to do the separate things if you think that's better, though IMO separate functions is fine as well - you'd simply call each of those classes/functions in the DoWork() routine of the one job.\nHowever I don't see a huge benefit in providing less information - after all, it's up to the skin as to what they choose to display and as we don't know this in advance (necessarily at least) it's easier just to grab the lot.  Especially given that grabbing everything versus grabbing a subset has very little impact on performance, even if the sql queries were optimised to the n-th degree.\nIn the future, the \"listing\" portion of RA would be done by simply retrieving a directory, so that portion of the jobs will be going away - the \"totals\" portion would then be all that remains, which would be general infolabels.\n. With that taken care of it can be slotted in.\n. Yup - better IMO.  Only extra thing you need is checking the return codes of UpdateVideo etc.  Something like:\nbool ret = true;\nif (m_flag & Video)\n  ret &= UpdateVideo();\nreturn ret;\netc.\n. Yup, fine.\nOn Sat, Apr 16, 2011 at 7:58 PM, amet \nreply@reply.github.comwrote:\n\n@jmarshallnz: and now? :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/94#issuecomment-1012060\n. Looks good to me.  The idea of the recovery is to check the return from CAddonMgr::GetAddon() ?\n. If you get elupus' signoff then you're good to go.\n. @giftie: something like that would be suitable, though as topfs2 suggests, it may be more logical to separate out a ripping job and add that from the autorunmediajob ?\n. I'd prefer that we don't prompt the user personally, and if location-based lookups fail, just switch to the first location.  Remember that weather can be shown anywhere, so it would be useful I think to just switch the setting on failure.  I think you'd be able to get rid of the window messages then?\n\nI presume that the user can still cycle to the \"auto\" areacode, or how is that handled?  Also, how does this fit in with the terms of service on weather.com (in particular, I thought we had a requirement of 3 locations only.)\n. I'm not sure how auto-switching to the 1st predefined areacode is a problem in either a network problem or permanent problem to be honest, assuming ofcourse that the user can toggle back to the \"automatic\" option even if the location is not known.\n. How is it modifying your personal settings?  All you're doing is switching from automatic (which fails) to the first area code by default which, yes, is New York.  You can leave it so that it just leaves no information at all if you think that would be a lesser sin than showing the weather for NY.  My main point is that prompting the user is annoying, so if we can get away with doing something sane while not prompting then we should do that instead.\nAs for \"toggling back to automatic\": There'd be 3 preset locations and a forth automatic one.  So the spinner would flip between \"Automatic (fill in location once known)\", \"New York\" etc.\nThe advantage of this is that the user gets to have 3 well-defined locations and a fourth automatic one.\n. It looks fine for the most part.  I guess some of the #ifdef's might disappear once other platforms come online (i.e. the implementation of those will be similar as far as the interface that the addoninstaller interacts with).\n. I suggest we change things so that it uses the simpler SQL.  You're welcome to convert the rest of them to do direct deletions as well if you like (though I guess that's outside of the particular pull req, though if you are happy to do it all in one go, go for it)\n. Nice work.\nI think we need to step back a little and assess exactly how we're going to want to do things on PVR supported hardware.\n1. Firstly, I think having the skins be as platform agnostic as possible is a good thing - we'll always have folk wanting to copy skins to their box to run them, so at the very least we will want a texture format that works on everything (i.e. ARGB compressed with lzo) OR ensure all platforms we run on can decompress the textures they don't support into ARGB.\nA simple way to do this is to have the texturepacker do the following:\na.  Compress to DXTn and PVRn.\nb.  If quality is suitable, then store both DXT and PVR versions.\nc.  Else store ARGB.\nd.  lzo as needed (I see no reason not to - decompression is very fast).\n1. For the real benefit of PVR'd textures we really need thumbs and fanart to be compressible at runtime.  Yes, compression takes an age on an embedded platform (libsquish is slow even on ION), however, it's a one-off operation, and we can be more selective about when we perform it (eg only on the most frequently used textures).\n2. What is the license on libpvrtex?  Is it even an option?\n. The changes for LoadVideoInfo look fine.\nI'd tend to not support fetching songs from the database based on the filesystem location.  Reason is that really at that point you're basically adding a smartplaylist to the playlist, so IMO it would be better supported through a smartplaylist mechanism (as that would then give you plenty of other filtering options.)\nIn addition, there's no reason for songs in the same path to be related (eg they may not be from the same album, and indeed, could just be part of an album or whatever - albums do not have to be confined to a single folder).\n. Sounds like a plan.\n. This looks fine, though note that the filling will be quite slow for a list in general, as you require at least 1 query (normally more - there'll be 5 or 6 in the current video library implementation) per file in a list.\nThere's routines available that make this considerably faster by dropping to a single query for all items (getsongsforpath, GetItemsForPath in my single_query_playcount branch) but they may make your abstraction not as good.\nBoth procedures normally involve:\n1. An initial call based on the directory that returns some sort of path->metadata map.\n2. A run through the items to lookup info in this map and fillitem metadata in.\nIf you can afford to pass some context along (in this case the path->metadata map) this may allow your abstraction at the file level?\nOfcourse, these apply only to file based listings, and don't apply to listings which already have metadata available.\nPlaylists (that aren't smartplaylists) normally don't operate so well in this fashion, though in music we do the same trick by making an assumption that often consecutive playlist items share the same path, so we do the song map lookup and refetch it whenever the item path changes as we run through the CFileItemList - see OnRetrieveMusicInfo I think it is in GUIWindowMusicBase - it uses a background thread to do it IIRC.  Usually this works well for music, as often your \"playlist\" will consist of an album all in the same folder.\nJust some things to think about :)\n. Yeah, merge away and then we can take care of the speed issues later as needed.\nThe song one I was thinking of is the one you used earlier that returns the SongMap.\n. github doesn't try and load/build the xcode project file or the win32 project file.\n. Looks good - nice work.\n. I wonder if instead we should add a:\nelse\n  { // folder - not resumeable as yet, so play\n    PlayItem(iItem);\n    return true;\n  }\nblock to OnResumeItem().  Reason is that OnFileAction is aimed directly at file actions (the only call that passes through there on a folder is this particular case - all other calls to it are prefaced by a check on whether it's a folder or not.)  Later on if resume is done on a folder then we'd need a different path either way.\nThis really is a clusterfuck winding the way through all the spaghetti though...\n. Yup - it should do at least.\n. Technically we don't need the IF EXISTS conditional - the index should exist if we're at version 51 of the db either way - I only put the IF EXISTS in as I noticed I had a db without the index (from playing around, not XBMC-produced).\nI'll change it to DROP INDEX indexname ON tablename (assuming that works in sqlite).\n. @firnsy: the last commit drops the IF EXISTS from the index.  It's now:\nDROP INDEX indexname\nWill this work with mysql?  sqlite does not support the DROP INDEX indexname ON tablename syntax.\n. @firnsy: The last commit now does a mysql-friendly version:\nDROP INDEX indexname ON tablename\nand the sqlitedataset query cleanup then fixes this up in the same way that the CREATE INDEX cleanup is done.  Please give it a good look over to make sure I didn't miss anything - it works fine on sqlite.\n. According to this it's OK:\nhttp://dev.mysql.com/doc/refman/5.0/en/drop-index.html\nAnd the conditional drop isn't needed as we're only doing it if upgrading from v51 to v52 or higher, whereby we know we have the index that needs dropping?\n. I've followed up on the sqlite syntax, and that won't work as:\nDROP INDEX tablename.indexname\nsqlite can only have the database name in the DROP INDEX call: http://www.sqlite.org/lang_dropindex.html\nIMO the way I have it now is probably the best?\n. I don't really mind either way.  How do other db layers handle this?\n. Updated as above + added a test routine with a few simple cases.  Anyone see any issues with the new routine?\n. This looks good - nice work.  I don't, however, see the point for an advanced setting to turn this off.  It uses relatively little memory to store the XML+control structures, as FreeResources takes care of textures and items in lists, right?\n. Handle textures in the texture manager.  Alloc/FreeResources won't do anything if the texturemanager doesn't actually free the resource.  I suggest just having a reasonably long timeout before deletion (similar to the way the largetexturemanager does it).  Ideally this would be done by merging the normal + large texture managers together (i.e. all requests for textures go through the largetexturemanager which keeps the list of allocated textures - the g_textureManager would then pretty much just handle interfacing with the texturebundles, or be removed altogether.  If you want to take a crack at that next, then by all means go for it :)\nIn the meantime, I say we merge as-is (I'll have another check over things first and then pull) with the as.xml setting in place - we can always remove it later or modify it to suit once it's been tested well on embedded platforms.\n. Great!\n1.  Background loading vs non-background loading is the point of the large/background flag in the XML.  Any textures without this MUST be loaded blocking as animation timing etc. may well depend on the texture being there immediately.  With that said, there's no reason we couldn't have \"if background = true, load via the job\" - I think currently textures are loaded directly rather than via the job if they're in the XPR.\n2.  IMO the \"should a texture be released\" call should be made by the engine, not the skin.  Reason is simple: we can do it so why should skinners have to?\nThe idea is to track both usage (reference count + a history count + memory use) and roll out textures that aren't used much (low history count) when their reference count is zero and a suitable delay has taken place.  In addition, memory use tracking allows us to check available memory and roll textures out if needed either immediately or as required.  The first two are the most important.\nHaving simple dumb reference count + delay as per the large texture manager would be a good first step (i.e. merge them).\n. Sounds like it might be better to move the triggering of whether to load/clear further into the load/clear functions, so that the whole routine gets executed, you just skip the actual loading/unloading?\n. Any reason we're not going for a completely separate job for this?  Can we see this ballooning into more cruft later on?\n. Looks good, yup.\n. Why is the textbox starting in the middle of a row of text, rather than starting at the exact line?  The only case that should happen is if it's in the process of scrolling shouldn't it?  (m_offset being an integer).\n. Change to Move() looks fine, yup.  Weird that the Move function is virtual - it shouldn't need to be, right?  Mind removing that at the same time?\n. If it's a float rounding problem then I suggest we just use MathUtils::round_int() rather than ceilf() - that should ensure that the first page gets rounded down if that's an issue.\n. round_int() rounds to nearest.  Thus, it will work just fine for all cases for the pagecontrol.\nWe don't really care that it doesn't quite align properly as far as the rendering offset goes.\n. Looks good - will pull.\n. I guess the point is instead of using vkey to do keymap -> action translation, should we perhaps be using the ascii value of said key?\n. Any chance we can get it lowercase by default :p\n. I'd leave the property media agnostic.  Will review.\n. The code looks fine, though I'm be a little concerned about the impact (if any) on directory retrieval.  Before + after timing, where there is a fair number of movies with resume info would be useful.\nThe query could be optimized to first use fv(0) rather than fv(\"resumeTime\") type notation - this saves a string lookup.  In addition it could be optimized to grab only what is needed for the resume field itself (eg resume time and total time, thus returning a float?) and leave the additional db lookup when we actually have to resume in place to grab the (potentially much) larger fields such as playerstate and so on.\n. The dropIndex() command is in now, so you could alter the bookmark index to include both fileid and bookmark type - just drop the old index and add the new one, the new one covers the old.\n. Assuming HAS_CREDITS is false on all platforms (I assume so, given that RunCredits() doesn't seem to exist...) then it can certainly go.\nFor actual credits, we could just have a bunch of text in a textbox somewhere - something for later.\n. Looks good\n. And I agree with topfs2 - please leave pull requests open for at least a day or two to allow for comments.\nIn particular, this one adds an API for the skin to access, so we must ensure it's exactly how we want it before it goes in - else skins will start using it and we'll be stuck with an API that may not be optimal.\nPersonally I think XBMC should take care of this directly (i.e. XBMC should control what happens when the power button is pushed) rather than exposing it to the skin and having to have every single skinner implement the same thing.\n. I think it is a way towards that goal: This gives a step along the path, that is, by default press a key and it will jump in the list.\nThe next step would be removing any non-modified keys from keymap.xml, and then we're in the situation we want to be in: Keys with modifiers do something special, everything else does what one would expect (i.e. jump in lists).\nThe first step on that path would be to ensure the remotes that use keyboard input don't use any of the standard keys without modification.  Then we move the keyboard control to something more sane (get rid of p, x etc.)\n. Don't assume the consumer is always right.  Few folk will be actually using a keyboard to control XBMC - after all, it doesn't really make sense.  Furthermore, the actual navigation won't change much: Only \"special\" shortcut keys would change.\nThose actually using a keyboard will likely have a multimedia one, whereby multimedia keys are already in use, so reassigning the default alphabetical keys to modifiers really won't have much impact.  We do need to do this ASAP, so that users have a good heads up about it.\n. Just leave it in a branch at github - I'll do the keymap changes when I have some time and take any heat.\n. Why are we only having a single appliance.xml file?  Everything else is set up for XML files per profile, and the code here seems similarly setup, thus the profile matching seems unnecessary.  If appliance.xml is not found in a profile it will load it from the master profile anyway, so that way you get your \"all\" feature.\n. I support the idea of a separate XML file, and it should be generically named as davilla suggests.  --standalone would simply set the defaults for the settings that would otherwise be in that file, and the file would override as needed.\nOne thing to watch with accumulated loading of multiple XML files to set settings is that at some point we need a \"reset to defaults\" thing - in particular when profiles are loaded for multiple users.  When changing profile within XBMC you'd essentially have to pop the top XML settings off (i.e. restore state to whatever --standalone and/or environmental/distro-specific settings are) and then read the profile-specific ones on top of that.  Probably easiest by just resetting everything and loading the appropriate ones in turn:\nResetAllSettingsToDefaults();\nLoadCommandLineSettings();\nLoadDistroSpecificSettings();\nLoadUserSettings(whatever_profile_we_have);\n. Looks good - a note to minimize diff in the future is to split the cosmetic (indenting) out from the actual changes.  Will pull.\n. I think this requires a little more thought.  In particular, the way you have it now means that any mapping in any window ignores the position information associated with the mouse, so if you map left click to \"pause\" then that's the only thing it can do, regardless of where you are on the screen.  This is probably fine for fullscreen, but you can see potential issues in other places.  I'm not sure how to best handle this in general - perhaps what we'd need is information in CAction that it comes from the mouse so that we can then use the information to send it to the appropriate control as needed (and/or determine context) and at that point we switch from the generic ACTION_MOUSE_LEFT_CLICK to the actual action sent.  IIRC there's a function in CAction to detect it comes from the mouse?\nIs the next plan to redefine the context information in keymap.xml away from windows and towards more general context (in list, video playing etc.)?  Please, please :)\n. > If we were serious about this I would go for the same model used by\n\nWindows. Every window has a message handler. Messages that aren't handled by\nthat window get bubbled up to it's parent and eventually to the\n<global> handler. So for example when you click the left button XBMC\nfinds whatever window is under the click position and passes the CAction to\nthat windows OnAction function. But we'd be talking about a massive rewrite\nto do this. I'm not sure I'd have time to do it and pay the mortgage :-)\n\nWe already do this.  Any mouse-based action is passed directly by coordinate\nto the appropriate control.  That's what the action.IsMouse() and\naction.IsGesture() are for - they force the action to be passed to the\nappropriate control.  It always gets passed to the top level modal window,\nhowever, as otherwise very strange things would happen with controls in a\nwindow that aren't quite underneath a dialog.  This is just like Windows\nworks.\nSo the sensible message routing is already there.  What isn't there is the\nsensible mapping from mouse button to \"what should we do here\".  This is not\ntrivial to do well under the current technique, as the mapping is blunt in\nthat it applies at the window level rather than at a finer level.\nRe the context mapping: I'm not sure I've fully grasped what you mean. The\n\n\"in list\" would be addressed by routing the message to the list window as\ndescribed above. Using a \"video playing\" would give problems if for example\nI'd momentarily switched away to view the weather (more likely with music\nplaying). it seems to me that more snesible routing of the actions to\nwindows would achieve basically the same result.\n\nThe key is that we currently have gigantic keymaps where we have multiple\nrepeated mappings for similar window types.  In addition, depending on where\nyou are in a single window you may want to do different things.  For\ninstance, if you're in a list you want to soak up keyboard presses in order\nto jump through the list.  However if you're not in a list (eg on a button\nin the same window for instance) those same keys might not do anything at\nall, or may do something different.  Instead, if we had contextual\ninformation (user is in a list, a song or video is playing in background,\nsong/video is fullscreen, fullscreen slideshow etc.) then we could map the\nvast majority of actions in just a few XML commands.\nCheers,\nJonathan\n. It's semantics, but no, a list is a control in the XBMC vernacular rather\nthan a window.  It's the same ideas as you are thinking of, however (i.e.\nXBMC class heirarchy is control->controlgroup->window), where as in Windows\nthe \"window class\" is the base on top of which the controls (and \"real\"\nwindows) are derived.\nIn the XBMC sense, the action is passed from top to bottom and processed\nfrom bottom to top - i.e. windowmanager is sent the action, who sends it on\nto the window who sends it on to the focused control (or control under the\nmouse etc.).  If that control handles it we're done.  If not, the window\ngets a go.  If that doesn't handle it then the app gets a go.  There are\nsome exceptions to the rule (app-level actions can sometimes take\nprecedence) but that's close enough to how it works.\nCheers,\nJonathan\nOn Wed, Jun 1, 2011 at 10:13 PM, jhsrennie \nreply@reply.github.comwrote:\n\n\nif you're in a list you want to soak up keyboard presses in order to jump\nthrough the list.\n\nBut a list is a window isn't it? If you click somewhere in a list the list\nshould have first go at the action, and only if it ignores the action would\nthe action be passed to the next window up. If you click on the OK button\nthis is also a window and it would get a chance to process the message. This\nis how Windows works, and I assume X window managers work in a similar way.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/166#issuecomment-1273398\n. Looks fine.\n. I know this is about a year old, but IIRC you are using this primarily due to Aero \"true fullscreen\" issues.\n\nPerhaps we should allow a \"use truefullscreen when playing video only\" type thing - would that basically do what you want?  It also may help with the issue that PR 747 is addressing.\n. I'll close this one as I doubt it'd be going in as-is.\n. that rebase should fix it\n. You want it utf8 though, but yes, that's the idea (just use the W version then wToUTF8 it).  Then you'd just pass the resulting argv list to ParseArgs()\n. @jhsrennie: What is the license on the stdargv.c code?  I suspect this code will break for things that need utf8 (eg passing in a playlist that has special chars in it's path).  The normal fix is to use the wstr version and run all args through wToUTF8.\n. The win32 API by design does not no anything but ascii (or in particular the current single-byte based codeset).  Thus the reason that the wide version exists to get the wchar based one.  XBMC speaks utf8, not whatever single-byte (or multibyte char sequence) that windows sends in on the commandline.\nThus, the problem is the array of bytes is meaningless to us as we do not know what codeset it is in, and thus can't convert it into utf8.  This is the reason we use the W versions of most win32 API calls rather than the A versions.\n. Yes, the original code was wrong as I pointed out in the pull req, as XBMC doesn't store things in wide-strings.  XBMC stores in utf8.  Thus, convert the widestring to utf8 and we're done:\nCStdStringW foo = GetCommandLineW(); CStdStringA utf8Foo = g_charsetConverter.wToUTF8(foo); ParseArgs(utf8foo);\nFor unicode to work in XBMC for windows, use W versions of API commands, and convert to/from utf8 as required.\n. Great - yes, *nix passes utf8 into Parse().  Agreed completely with your sentiments.\nThe accessors commit will be dropped before the final pull.  I'll give you write access to my repo if you want to work there?\nCheers,\nJonathan\n. Done - I can always revoke your access if you mess things up ;)\n. Ok, rebased out a couple more compile issues and changed --settings so that it takes full paths only.  It works fine on win32 with --settings=\"C:\\path with space\\foo.xml\".  I presume it will work fine on *nix as well.\nThis can probably be pulled in now.\n. I suspect angle produces weird results for edit control - it only really works in cases where you have a single label that you can center, and in most cases just using a rotation anim on the full control is what you actually want to do.\nThus, definitely remove that.  I don't see any reason to add additional things - you can get and set the label and text - that's pretty much all we do from the XBMC side as well.\n. As topfs2 pointed out you gain nothing at all by moving things and keeping them with public pointer access.  You've just increased the workload when adding or removing a setting (at least 4 lines need changing versus 2-3).\nA way forward would be to:\n1.  Get pull req 180 in first.  I'll rebase out the accessors commit and push it in today.  Then you can work off that.\n2.  Get just one category done (eg karaoke) how folk like and have just that in a pull request.  Doing it as suggested in the forum post might be a way forward.\nDon't try and do it all at once, as we can't possibly check through the code to verify there isn't any nasties AND check that the way you're doing things is appropriate in one pull req.  There were several bugs in the previous pull req and things will slip through accidentally when there are lots of commits to go through.\nIt takes time and requires patience, but it's the way things have to work.  I'm more than happy to help with specific git questions you may have.\n. We definitely don't want \"an OO application\" - we don't do OO, or any other development meme for the sake of it.  We do it where it makes sense.  In this case, I don't think it really makes sense - after all, the settings is just a collection of constant booleans, strings and so on, and it isn't going to be subclassed so the \"interface\" here is simply the data it contains.  What we want to enforce is const-ness, and that can be done by a const struct/class - no need for the indirection (code and runtime overhead) of accessors.\nOff topic, but I don't see how having accessors just so you can make a member private counts as \"object orientated\" either - after all, you can do object-orientated code just fine in languages where you have no concept of private versus public.\n. @Malard: Given that some of the changes are already in, is the plan to do a small change (one category such as Karaoke for instance) and do a pull for just that to ensure we're all happy?  After that you/we can move the rest to a similar system.\n. @elupus: Known issues are:\n1.  Some controls are too conservative (not a regression - they just mark dirty more than they should)\n2.  We don't respond (yet) to WM_PAINT messages, so a window on top of XBMC may stick around.\n3.  There's potentially incorrect sizing of regions when 3D rotations are involved (we don't take the camera/projection into account).\n. The fix for version should be done in AddonVersion.  It would have been nicer to have separate commits for the different changes, but no real problem given this is a general fixup of a former pull.\n. The vast majority of emu_* aren't being used at all (these ones in particular) and are unlikely to be used in the future, so I see no particular reason for them hanging around.  If we want to keep for posterity, we can dump them elsewhere in the tree.\n. Yup - I missed the June 19 update by the looks - will review and pull today.\n. Hmm, I thought I'd already pulled this in ages ago.  Will get on it.\n. Looks great to me - have not reviewed 531df31 in detail, but at a glance it looks good.\n. Agreed that we should be moving to removing these completely - it's not exactly trivial however.\nSome stuff can be moved quite easily, such as the embedded video thumbs as the URL is known on fetch there, though you'd need a URL protocol for it (thumb://embedded/video/ or some such?)\nI have no problem with moving the functionality so that everything is done centrally, though it may be better to distinguish them by putting them in a separate class (perhaps still in ThumbnailCache.h/cpp to save build issues)?\n. The alternate is just adding Player.Muted in the c++ code (i.e. implement CGUIDialogMuteBug::UpdateVisibility) - this means the skinners don't have to do any work.  Either way it's worth getting Jezz_X's feedback.\nYou'd also have to remove the member from Application.h and instead add to the window manager as per the rest of the windows.\n. https://github.com/jmarshallnz/xbmc/commits/mute_fix\nis an alternate.  Not sure which skinners would prefer, so up to them.  That branch also cleans up the other dialog members of CApplication (KaiToast was fun!)\n. Looks OK.  I guess there's an overhead that's been added here (the utf8->utf16 change prior to the comparison) for all labels, though this is a reasonably fast conversion that I suspect it won't be detectable in practice, and is certainly less than the processing that follows.\nSlot it in.\n. Not worth it IMO - pull away.\n. Looks good\n. An idea that I haven't explored as yet.  Could we stack down ISOs as usual in the video window classes and then handle the treating them as a playlist in CApp::PlayStack().\nA potential issue is that queuing of a stacked ISO might be odd, but other than that it should automatically take care of this issue I think?\n. Normal stacks resume just fine, including the prompting etc, right?  The bit your altering is to take care of stacks treated as a playlist.  The idea is to move the \"treat some stacks as a playlist\" stuff into CApp::PlayStack() so that all stacks are treated the same, regardless of whether they're an ISO stack or a normal stack.  Thus, you'll automatically get the resume prompting and so on.\n. You need to move the bit that's currently in GUIWindowVideoBase.cpp for bringing up the filestacking dialog, which then constructs and plays a playlist, to PlayStack() - obviously you'd eliminate the bringing up of the filestacking dialog in preference to just playing the playlist straight away (starting with the given offset).\nEssentially you move the special treatment of ISO stacks via a playlist from GUIWindowVideoBase into CApplication::PlayStack().\n. 1. Normal stacks pop the resume dialog up just fine, correct?\n2. ISO stacks don't pop the resume dialog up because they're treated differently in GUIWindowVideoBase, correct?\n3. 1+2 imply that if we DON'T treat them differently then ISO stacks will pop the resume dialog up as well.\nSolution: Don't treat them differently in GUIWindowVideoBase.  Instead, treat them differently only once they hit CApp::PlayStack.\n. I never said you don't treat them the same, I said you treat them the same in GUIWindowVideoBase.\nYou then move the existing playlist construction code in GUIWindowVideoBase into CApp::PlayStack (i.e. if firststack is an iso, then construct using a playlist rather than doing the current playstack stuff).\nThis has two benefits:\n1. Any special casing for \"special\" stacks is done in a single place.\n2. We remove the otherwise unused filestacking dialog and the associated advancedsetting.\n. Looks good - nice start!\nI believe case 1.2 should not be required, as you'll already have the resume offset set by the time you get there.\nYou also shouldn't need the else block in the if (startoffset & 0xf0000000) - that was only used for \"normal\" stacks when the advancedsetting was enabled.\nSome other minor cleanup would be that you don't need to call CApplication::GetStackedFiles() or whatever it is from GUIWindowVideoBase - you can just use the code in there (you already know you have a stack URL) to get a CFileItemList, then iterate over that rather than the CStdStringArray.  Same trick can be used in CApplication most likely.\n. Looking good.\nI think the bit prompting for resume in 1.2 should be removed - that has already been handled in GUIWindowVideoBase (after all, you only get to 1.2 if no resume point is available).\nFurther, in a separate commit I'd remove the rest of 1.2 as well, as the stacking dialog is not something that we require any longer.  If items are stacked, then we play from the beginning if a resume point hasn't been found - same as we do everywhere else.\n. I, Claudius is a tv series, so should not be stacked anyway, surely?\nI take your point regarding not being able to skip to the next item - this is, I believe, because dvdplayer overrides the NEXT_ITEM action to skip chapters and the like.  Does the Next Item button in the OSD act the same way?\nIn case we have to keep the functionality, would it make most sense to have the selection stuff (i.e. 1.2) in GUIWindowVideoBase and add a \"Play Part\" item to the context menu or some such?  Not sure how easy that would be - basically you'd be adding two items to the resume menu: Resume from foo and Play Part....  You'd then set m_lStartOffset on the original stack item thus case 1.1 would be hit in PlayStack().\n. I'm not sure which is best, but given that resume bookmarks are useless for the whole stack (as they save per-item in the stack) the general case (Play Part...) presents less problems?\n. I think it looks good, yeah.  Squash down and it'll be ready to go IMO.\n@arnova mind taking a look through once squashed and giving final sign-off?\n. The problem here is that we're taking something that is obvious to us (that 2.0 < 2.0.0) and then requiring that addon developers also know that.  I don't mind doing so as long as we have a system in place that checks dependencies for the addon authors prior to git commit.\n@TheUni: is this doable - essentially we'd ensure that addons are only initially placed in the repo if the dependencies are also available and of the appropriate version, using the above rule.  In addition, it would be good to ensure that the version number is incremented as well according to the same rule.\n. Note commit: https://github.com/xbmc/xbmc/commit/f6ec198de2f4f15d14a3f05f70383071ad43b208\nIn particular, note that 1.0 != 1.00 yet 1.0 is neither less than or greater than 1.00.\nSimilarly, 1.01 != 1.1, yet 1.1 is neither less than or greater than 1.01.\nIt may be that this inconsistency needs fixing - I'm not sure.\nIn particular, given a new addon dependent on a dep \"required\", we grab a matching dependency \"inrepo\" from the repo and do this comparison:\nif (inrepo.min_version <= required.version  && required.version <= inrepo.version)\n{\n  // ok to use \"inrepo\" for the \"required\" dependency\n}\nCurrently, if inrepo.min_version is \"1.01\", inrepo.version is \"1.02\", and required.version is \"1.1\" then the first compare will return false (as 1.01 is not less than 1.1 neither is it equal), and the second will return true (as 1.02 > 1.1).\nIs this the behaviour we're after?\n. A little more investigation leads to the inconsistency:\nAddonVersion::operator<() is using Debian versioning (whereby 00001 == 1), whilst AddonVersion::operator==() is using lexiographic comparison.\nClearly this is going to end badly.  I'll do a new pull req shortly with a fix.\n. #814 addresses this.\n. The mute changes look fine.  I'm not convinced of the volume change to percentage, primarily as they were designed to allow > 0dB via dynamic range compression (particularly during video playback).  This doesn't make much sense to me expressed as a percentage.\n. Don't we effectively mute the output device anyway if volume min is hit?  (i.e. doesn't mute just set minimum volume?)  Note that we shouldn't display the mute dialog in that case.\nFine to merge.\n. @jhsrennie: That sounds like a reasonable compromise, given that appcommands.xml is only applicable on win32, right?  Surely this is an issue faced by other apps though - what is the standard way to deal with it - I guess most use only one or the other?\nIs there some docs anywhere on the keys mapped on typical MCE remotes?  I'm wanting to play around with moving to CTRL keys by default.\n. I don't see the point of pushing this given it's clearly not been sorted out.  Get it right now.  There's no hurry.\n. Agreed that a GUI setting is overkill.\nGiven my comments in the previous pull req (once DRC is hooked up percentage will make no sense) I'd prefer no setting at all and just leave it as-is.\nI haven't heard any complaints in the 8 years it's been this way - the volume bar makes it obvious what the percentage is I would have thought?\n. Don't we have a setting that goes to sleep/powers down if idle for K minutes?  If so, that pretty much does the same thing.\nIn addition we also have a sleep functionality which also does something similar.\nAdding yet another option seems the wrong way to go here.\n. Better to be slow and correct than fast and wrong, agreed.\nI do wonder whether we should ever be sending total information with these functions - it seems to me that:\n1.  The fastest way to fetch all info is with one call.\n2.  If you want sorted info then the only way to do it is by fetching the lot.\n3.  You may want to know how many items there are without having to fetch them all (i.e. a fast call to get the album count would be useful.)\n. Looks good\n. Have you tried g_windowManager.SendThreadMessage() ?\nWill review the rest later today.\n. Other than the comments in commits, looks fine.\n. Assuming you don't lose any functionality, then yes you can remove the notify call.  What I found on Win7 is that always having the gestures on meant other controls didn't work as expected, as you wouldn't get the touch messages as it was doing a gesture instead.\n. IMO all use cases can be achieved using a sleep timer which several skins automatically implement.  I can't see any other use case for powering off after playback - the only case that makes sense if you're playing stuff while going to sleep or whatever, in which case Sleep already achieves it.\n. Please do go through and move those keymappings to the global context only - replacing the keymap function doesn't change anything in terms of the complexity involved.  Then check each window still closes as expected (basically just check the windows you remove the PreviousMenu mapping from).  You can commit on top and it will be added this pull req, otherwise close it and open a new one once you're done.\n. Ideally we never have deliberate breakage, but certainly if deliberate breakage is done then simply removing all  and  in the window sections of keymaps would do the trick, rather than changing the actions.\nThen test it out and we can fix up the bits that don't work.  For slideshow/settings-profiles and system info we can probably just add support to the base-class (GUIWindow) and remove support from the window-specific classes.\n. With the current implementation, ParentDir is exactly what it says: It only does parent dir and nothing else.\nThis is ofcourse the cause of no backward compatibility, as any keymap with ParentDir in it now responds differently.\nAlternatives are:\n1.  Remove ParentDir completely.\n2.  Change the action name of \"ParentDir\" to \"ParentDirectory\" (which may be confusing for some), allowing us to keep the functionality but translate the existing ParentDir action to Back.\nI suspect number 2 is probably best as it maintains current behaviour but still allows a specific action for parent directory only.\n. I actually quite like option 3 to be honest, but given it's literally a 1 liner left in the code to support the old \"parentdir\" as opposed to the new \"parentfolder\" I feel we mayaswell do it.\n. You have a compile warning there by the looks (cast to int on return of a float).\nI can't recall offhand how often the SysInfo does the request to the hardware - it'd be worth checking this to make sure it updates regularly but not too regularly :)\nOther than that, all good.  You planning to squash the fixes?\n. Skinners have no problem with zero-based indicies - that's what's used for most indicies they use other than this one (eg all listitem indicies are offsets)\n. Agreed with pieh otherwise - could do with splitting out at least the bits that have nothing to do with the rest (eg the define for MAX_LOCATIONS and the API key define removals etc.)\n. Whichever is easiest is fine - just make sure it's well documented :)\n. Thanks.  I'll put some notes inline, but the larger thing is whether or not we actually need a separate borderdiffuse.  I don't see many use cases for that that can't already be done other ways.\n. Oh, and 'cause you're new to git, all you need do is add some commits to your local branch there and then push them up to your repo - they'll automatically get included in this pull req :)\n. Apologies, I missed your latest commits.  Note that there's no need to merge from upstream/master into your feature branch, unless you need something from upstream/master - it just makes things unnecessarily messy.\nTwo things need doing:\n1.  Get rid of borderDiffuse.  There is no case for it being required that I can see (i.e. it's achievable directly by using a bordered texture to begin with).\n2.  Sort out the difference between m_diffuseColor and m_info.diffuseColor.  If a control sets a diffuse color what should take priority?  Currently you overwrite with the texture's color.  I wonder whether a colour multiply might be more appropriate?  Note that this has implications for dirty region rendering - by overwriting m_diffuseColor, the next time the color gets set the control will be marked dirty even though it's not.\nComment in the thread once you've made the changes - for some reason I didn't get email notification about it before.\n. borderdiffuse will not be accepted, so closing.  The other change will be acceptable should someone wish to take it on.\n. I think you'll want a check for dialog closing/already shown in Show_Internal given that you're calling it all the time.\nI wonder what happens when a modal dialog pops up though - wouldn't that occur only while you're sitting in ProcessRenderLoop(false) at the bottom there (as modal dialogs can only run the process loop from the app thread via app messenger), and thus you won't be hiding the busy dialog at all in that case?\nIf you want the busy dialog to hide when another dialog pops up it will have to be done in the busy dialog itself (or at some other point in the ProcessRenderLoop()).\nGiven this, I wonder if a method similar to the progress dialog should be used instead, i.e. where you essentially just grab the busy dialog, throw it up on the screen and repeatedly tell it to process on some interval.  The only difference between the methods currently is that the progress dialog allows the window open anim to complete before returning control to the caller (reason is that it's generally used in cases where it can be quite a long time between updates being called).\nOnce sorted, it would be good to generalize this so that we can execute any (cancellable) CJob in a modal way (i.e. throw up progress/busy while the job is in progress, returning once done or cancelled).\n. Yeah - it kinda makes sense to combine progress and busy in some respects - you never need them both up at the same time, the busy is just a more discrete version of it really.\n. Better I think, yes.  I presume dvdplayer doesn't complain (it uses busy dialog as well on startup?) with this, as it doesn't really matter whether ProcessRenderLoop(true) or ProcessRenderLoop(false) is called.\nAgreed about moving this to the mediawindows (and file browser) - generalizing it so it can run an arbitrary job might be the way to go?\n. See my comments inline.  There's a number of things I'm uneasy about, but the main one is the assumption that the DEINIT message doesn't handle cleaning up of controls.  We must not clean up anything until the animations are complete.  After that controls and items etc. can be cleaned up.  Lots of window classes assume this is done in the base class handling of DEINIT, and in their DEINIT handlers they clean things up after first calling the base class.\nSecondly, I wonder whether it would be useful at this point to document cases where we assume that ActivateWindow() is a modal operation (Settings is one, though I think you've removed that in master).  If it wasn't a modal operation then the way the dialog class worked would work for the window class - the activatewindow call would essentially return once you've asked the current window to close, and once the current window has closed it would fire off a message to windowmanager to open the next window.\nLastly, purely cosmetic, please kill the b in m_bClosing :)\n. This is not suitable - let's fix the problem rather than papering over it - it's clearly sending the appropriate actions, they're just not being handled correctly for some reason - investigate that.\n. Looks fine though c&p suggests a refactor may be advisable?\n. Yeah, it probably won't save all that much as you say.\n. Looks fine\n. The duration is noisy as it's double buffered, and hence you can quite easily get situations where the time goes something like:\n16,17,16,4,28,17,24,25,16,17,17 etc.\nIt depends somewhat on the system, ofcourse.  Note that the 4,28 should actually be 16/17 or something similar - these are the ones you notice (note the 24/25 should be 33/16).  It often occurs while doing panning or fades where half way through there's an image load (backgrounded) where the texture upload takes just enough to push it out a bit.  It's quite noticeable when it happens (on the forum I think `Black has a few videos of it happening).\nIt can be worse with more than 2 buffers, and is ofcourse much worse if vsync isn't enabled at all.\nThere's no issues at all on systems where vsync busy waits as the timing occurs directly after the vsync call, though ofcourse with d-r and noflip enabled, when things start back up again the first frame or 2 in the animation are out due to the process time being incorrectly aligned as things have been forced down to 25fps while flipping was out.\n. Heh - the problem with changing history is it removes comments :p\n. You don't need ThreadName in CRemoteControl constructor - just put\nCThread(\"CRemoteControl\").\nAnd yup, once fixed feel free to push into my repo.\nOn Sat, Jul 23, 2011 at 8:23 PM, jhsrennie \nreply@reply.github.comwrote:\n\nThis seems to fix it. I think I still have push access to your repo so I\ncan just push this if you want.\n```\ndiff --git a/xbmc/input/windows/IRServerSuite.cpp\nb/xbmc/input/windows/IRServerSuite.cpp\nindex 3ccda88..01628d0 100644\n--- a/xbmc/input/windows/IRServerSuite.cpp\n+++ b/xbmc/input/windows/IRServerSuite.cpp\n@@ -30,9 +30,9 @@\n#define IRSS_PORT 24000\n-CRemoteControl g_RemoteControl;\n+CRemoteControl g_RemoteControl(\"CRemoteControl\");\n-CRemoteControl::CRemoteControl()\n+CRemoteControl::CRemoteControl(const char* ThreadName) :\nCThread(ThreadName)\n {\n  m_socket = INVALID_SOCKET;\n  m_bInitialized = false;\n@@ -79,7 +79,6 @@ void CRemoteControl::Initialize()\n  if (m_isConnecting || m_bInitialized) return;\n  //trying to connect when there is nothing to connect to is kinda slow so\nkick it off in a thread.\n  Create();\n-  SetName(\"CRemoteControl\");\n }\nvoid CRemoteControl::Process()\ndiff --git a/xbmc/input/windows/IRServerSuite.h\nb/xbmc/input/windows/IRServerSuite.h\nindex b0c7c96..d1fdc45 100644\n--- a/xbmc/input/windows/IRServerSuite.h\n+++ b/xbmc/input/windows/IRServerSuite.h\n@@ -28,7 +28,7 @@\n class CRemoteControl : CThread\n {\n public:\n-  CRemoteControl();\n+  CRemoteControl(const char ThreadName);\n  ~CRemoteControl();\n  void Initialize();\n  void Disconnect();\ndiff --git a/xbmc/threads/Thread.cpp b/xbmc/threads/Thread.cpp\nindex 95c2a46..bd213e2 100644\n--- a/xbmc/threads/Thread.cpp\n+++ b/xbmc/threads/Thread.cpp\n@@ -414,7 +414,7 @@ std::string CThread::GetTypeName(void)\n #if defined(_MSC_VER)\n  // Visual Studio 2010 returns the name as \"class CThread\" etc\n  if (name.substr(0, 6) == \"class \")\n-    name = name.Right(name.length() - 6);\n+    name = name.substr(6, name.length() - 6);\n #elif defined(GNUC) && !defined(clang)\n  // gcc provides __cxa_demangle to demangle the name\n  char demangled = NULL;\n```\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/294#issuecomment-1636792\n. jhsrennie (or someone on win32) - mind checking the thread name is being set in the callback window?\n. Thanks jhsrennie - all good.\n. It looks OK to me, though I must admit it seems weird to set the modifier to 0 in order to use the modified expression - is this so you don't have to put the shift attribute in the XML?  If so, a comment as to that effect would be good.\n. Nice work - this is exactly what pull req's are for :)\n. This is primarily for cases where GetAmount() can return less than one, such as for gamepads and the like with analog controls.  You'll see a similar thing in the seeking stuff.\n\nI'm not sure exactly why the amount would be set in the case where the mouse wheel is mapped to a specific digital action.\n. Do you mind squashing this down into a single commit?  The history of the commits here isn't useful.\nTo do so:\ngit rebase -i HEAD~9 (where 9 here is the number of commits you want to go back)\nThen just tag all your commits other than the first with \"s\" for squash.  Once done, force push it back up to your repo.\n. In my opinion the pros of doing it outweighs the cons (more complicated base class), and may perhaps lead to some further simplification later on.\nA couple of changes I recommend: Make the appmessenger's default parameters for Close ordered such that the minimal number of them have to be specified in most cases (eg I suspect the wait parameter is the one that is most likely to be the one flipped from it's default state).  And secondly make the m_bRunning parameter something like m_runningModal or some such.\n. Looks ok to me other than that minor - feel free to push.\n. Looks fine to me.\n. Make sure you don't rebase on master unless you want the hassle of updating for the new way TranslateSingleString is done!  Feel free to keep working on it as-is and I'll do the monkey work to merge it up when it comes time to pull it in.\n. Rebased version available here: https://github.com/jmarshallnz/xbmc/tree/doozan-video_ratings\n. @cptspiff: How many entries that wouldn't have info do you have littering the same sources that your library is using?  Am thinking of defaulting this on eventually (eg once we get a \"match score\" incorporated).\n. I still need to review CScroller itself in detail, but I think there may be an easier trick for the stretching.  Effectively all you're doing is changing the timescale, so another way to think about it is you previously had 3 time points:  0, current_time, 1.\nYou're now changing these to a new coordinate system where 0, current_time, 1 map to new_start, 0, 1 for some value of new_start.  It's a linear transformation so new_t = a+b*old_t, and using the map we know:\n0 = a + b_current_time\n1 = a + b_1\nwhich gives b = 1/(1-current_time), a = -current_time/(1-current_time), and hence:\nnew_start = current_time/(current_time - 1).\nNote that you don't need to worry about what value the tweener returns with this.  Combining it with the fact that the tweener can take in start and end values and a total time to do the tween over should allow the code to be simplified somewhat?\n. Yeah, you're right - you need to scale the y-axis as well, which gives you the problem of 1-Fs on the denominator (change = 0) for functions that aren't 1:1.\n. Yup.  Another way to handle this is to just split the tween based on it's EASE'ing state.  Basically a continuation of the tween could reset things to the start of the EASE_OUT period.  eg in linear that would be just resetting to the start.  Similarly for any ease out quad/cubic etc it'd be resetting to the start as well.  For things with an EASE_IN phase you'd reset to half way.  This should get around the issue of odd speed changes when there's an EASE_IN phase in the tween, while still allowing really simple calculation of the scroll as you're always resetting the tween to a known state (0 or 0.5).\nBasically, always reset to the point where maximal velocity occurs.  I suspect most uses of this will only use tweens where maximal velocity is at the start of the tween anyway (i.e. only deceleration occurs, possibly with some bounce).\n. Looking really clean now - nice work.  Only thing I can think of (and this is not a requirement at all) is that GetScroller() might just return a CScroller - after all, you always use it as:\nCScroller scroller;\nGetScroller(blah, foo, scroller);\nSo mayaswell make it CScroller scroller(GetScroller(blah, foo));\nJust return a CScroller() if the tag isn't there.\nI think the easing thing might work quite well (effectively you're ensuring you always reset to the fastest possible speed initially) though it depends a bit on how fast things ramp up in the ease in portion of the tween (very slow start followed by a quick keypress might look a bit odd - not sure)).\n. I think you'll find in every case it'll be 0, 0.5 or 1, essentially depending on the ease direction?\nThe reason that things simplify with just 0,0.5 or 1 is that the y-value is always 0, 0.5 or 1 as well (reason: ease in/ease out is rotationally symmetric about (0.5,0.5) and thus passes through 0, 0.5, 1, and one presumes is fastest at 0.5, whereas ease in or ease out are fastest at 0 or 1.)?  Thus you don't have the issue with f(t) == 1 for t < 1.\nStill, I don't really see a problem with leaving that in in either case - it would allow us to tweak things tween-specific if we find the above solution isn't quite ideal.\nPersonally I suspect easeout anims (or whichever one has max velocity at 0 and min velocity at 1) will look best anyway as they're the ones that are physically most correct (assuming initial force is applied instantaneously).\n. The overkill solution is needed in order to see that the simpler one may suffice, so it's always a good exploration exercise.  The trick now is to document it well so you're 6-month future self knows WTF you did to come up with the final solution - this is the bit I normally forget to do! :)\n. Looks good other than the comment on the CScroller class - slot it in.\n. Looks fine.\n. I suggest a 3 step process:\n1.  Divine what version of libtinyxml XBMC is using.\n2.  Figure out what changes have been made (git history is probably enlightening).\n3.  Determine whether tinyxml is suitable for what we want (perhaps consider libxml2?)\n. Thanks ceros - the diff is most useful.  Other than iconv and the vfs, it shows we've added fixes for:\n1. Reading from streams ln312-380.\n2. Compile warnings for sprintf ln423-427\n3. Some #define _DEBUG changes for OSX ln438-448\n4. Support for NameStr() from attributes ln500\n5. A std::string version of Parse() ln519-525\n6. Compile warning fix ln565\n7. Change in length handling ln574-583\nNumber 1 is not in use when we use our VFS.  2, 3 and 6 are build/compile issues which don't affect behaviour and would be taken care of upstream anyway. 4 and 5 are convenience functions which may already be available upstream. 7 is a bit of an unknown - diving right back in the history might find out why it's been changed if we're very lucky (the location of tiny used to be in guilib/tinyxml).  I suggest comparison with the latest version and submit 1-6 upstream - none of them are critical to our use though, so no need to wait on that.\nRegarding the iconv conversion - it should be setup to handle the encoding set in the XML (if available) like the existing implementation does.  The front end wrapper should be able to handle both that and the VFS I should think.\nI doubt upstream would be all that interested in an i/o wrapper, so handling it separately seems reasonable.\nI'm not sure if the using trick to do the overriding (sans virtual) will work on all compilers we use or not - I think it'll be OK on VS2010, but haven't tested it out.\n. Looks good to me.\n. No, it doesn't touch the homescreen links - they'll all still work.\nAnd yes, you can make a library that doesn't contain all the extra nodes no problem.\n. Thanks ronie - will fix (silly case-insensitive fs on OSX).\n@arnova: the entire point of this code is so that that is more easily done, yes (it's just another smartplaylist after all).\n. @cptspiff: yeah, dunno what to do with the flattening.  I don't know how often folk switch between the two (and if they do switch, why they're doing so).  I personally use it unflattened but then go straight from Home->Movies/Shows/Files from the home buttons.  Any ideas?\n. Yeah, I tend to think that's the best way to go as well - essentially restrict the UI-based configuration to configuration of the \"root\" of the library only (initially at least) and don't bother adjusting for sorting.  If the user wants to go all out they can add in extra things later.\nThis might be better achieved with some other system than the single XML layout above though.  eg the library \"root\" could simply be a real folder on disk with a bunch of XML files that describe the nodes.  We don't care what they're called, we simply load them all (what they're called becomes the id).\nVirtual folders (eg the unflattened stuff) would just be a folder of XMLs rather than a single XML, with one particular XML (index.xml?) that describes that virtual folder perhaps?\nSo fetching the library would:\n1.  Read the root library folder for folders+XMLs\n2.  If any folders exist, load /index.xml as well (to get localized label, conditions, art etc.)\n3.  Return listing.\nThe above is pretty easy to addon-ize for the root, and is not too bad to extend to virtual folders as well (\"just\" choose where to place the item you're adding.)\nSound good?\n. Ok, gave it a go.  Not sure I like it :)\nhttps://github.com/jmarshallnz/xbmc/commits/library_reorg_v2\nPros:\n1. Single XML file per folder -> easy to add new stuff by just dropping a new XML in the folder (or adding a new folder of XMLs)\n2. Plausible to addon-ize it, though getting it much more than a single folder deep could prove troublesome (where in the potentially user-generated heirarchy should each library node addon sit?)\n3. Could potentially change the code to work with filefolders instead of a directory (the directory pretty much just figures out whether to grab the on-disk folder from userdata or system) though this wouldn't work so well if it was addon-ized.\nCons:\n1. Sort order is lost without an order attribute in each XML which makes it hard to place nicely.  A simpler alternate fix for this by naming them in such a way that the sorted file/folder order is appropriate (eg 01genres.xml, 02titles.xml)\nTo be honest, I don't think it makes it all that much easier to organise stuff from the UI.  If we do it via the context menu (add node/remove node/move up/move down) then it's not too bad, but I hate adding stuff to context when it's something that never gets done by the user.  It would be much better to have a button in settings to manage the heirarchy.  Given that we now actually have a folder structure, I wonder whether we add a method for \"copying\" folders to the heirarchy (i.e. create the shortcut XML's and/or transfers smartplaylists) and just open the filemanager with the root of one side being the library with file-folders disabled (though we want the pretty-names/icons etc...) and the other side being a bunch of default nodes, sources, playlists, addons etc (with file folders disabled as well).  Sorting could be a bitch...\n. This one is going to use the v2 method - will do a new PR in a bit.\n. Try it out then :p\nIt just adds another (optional) navigation technique.  It works exactly the same as onleft etc.  The user presses BACK, if a control has onback present then focus changes to the onback control (or alternatively the onback action is executed if an action is placed in the onback tag).  If no onback is present then nothing happens and BACK is handled at the window level like always.\nThus, setting it on the grouplist (all controls inside a grouplist inherit the onback in the same way they inherit the groups' onleft and onright attributes) means the submenu can be closed by pressing BACK - identical to how it's closed if you press RIGHT.\nSo basically it does exactly what you want it to do.\nTo be clear: Nothing requires onback.  It defaults to 0 (do nothing).\n. It's far more intuitive in confluence for a new comer.  They move left and what looks like a dialog shows up.  Pressing BACK however to get out of the dialog just goes up a folder in the unfocused list, which as you say is unintuitive.\nNow, pressing BACK on that \"dialog\" just closes the dialog and returns the user back to the list where they were before they moved left.  Much nicer.\n. The options are typically too tied to the window to benefit much from adding yet another dialog, thus this solution.\n. This designed to give more consistency.  In confluence (and many other skins) there are popout menus that you get to by navigating away from the list/panel etc.\nTo the user this LOOKS like a dialog.  As we know, it's not.  Thus if the user presses BACK they expect this \"dialog\" to shut but it doesn't.  I've been monitoring visitors as they use XBMC (I always give them the remote) and almost every single one of them try hitting BACK before they try anything else once one of these fake dialogs pops on screen.  Not all of them, but a significant portion don't even attempt pressing RIGHT to go back to the list before giving up and handing me the remote.\nThus, the only conclusion is that the BACK behaviour is inconsistent.  This simply allows the skinner to make it consistent.\nThe only other way is to force these things into being dialogs which adds to skin overhead (more XML files) and also means we have to have a bunch of more complicated interactions between those dialogs and the underlying window (as each of those dialogs has functions that really make sense only to the particular window.)\nCould it be abused: Yes, ofcourse it can - skinners can already abuse pretty much anything we add.  That they don't is to their credit - most realize that intuitiveness is important.  Is it the simplest solution to produce consistent behaviour: IMO it is.\n. @topfs2: Yeah - while it is possible to do it entirely in a dialog you lose a bunch of things: Spin controls can't currently be infomanager-ized, nor can select buttons.  Thus the skinner has to do quite a bit more work for viewas/sortby controls.  Also, a bunch of things (eg stack status, library flattening) really only make sense in one view anyway, so having generic ways to get and adjust those things seems like a bunch of code for no real gain.\nI'm more than happy to reconsider this, but this seemed like a cheap way skinners could do \"virtual dialogs\" via popout things in the existing window which most skins use quite a bit while still allowing intuitive navigation for the user.\n@Jezz_X/ronie: please test it out in your skins and see what you think.  I'll fire off a win32 build via billy and link to it on the forums for others.\n. Thanks ronie for testing it out.  Will push in in a bit.\n. cptspiff: nope - all this monkey does is move the member private.  Next monkey would be making the member a CURL - that would get rid of all the URIUtils::IsFoo() ones at least.  Then making an accessor that fetches the CURL rather than the string and going through the existing access and replacing them.\nMost access is media windows and filesystem (obviously enough) so making the filesystem itself use CURL would be a good start.\nronie: thanks, will fix (and grep for any more I might have missed)\n. Ok, should build on linux - be great to verify and I'll push\n. It would be useful if this is run past skinners - perhaps make a post in the dev forums?  Essentially it makes center keep aspect ratio by slightly resizing it in width and height (essentially keeping the total number of pixels the same).  I don't think there'll be any objections.\n. Correct - only things that use center.\n. Looks good.  One other thing I wonder whether we should do at the same time: Introduce a new background image ID with the goal to deprecating the 3 images (after all, skinners can use just a bordered image now anyway).  Not sure if we already have support for that?\nIf we do have support for that already (i.e. if there's code that deliberately places the middle image appropriately if no top and bottom image are there) then perhaps we should consider deprecating the top+bottom images now - would need skinner discussion ofcourse.\n. Not sure if there's a #define - check for PRE_SKIN_VERSION_*_COMPATIBILITY - I'm sure there's probably some of them still left floating around.\nAgreed that the autosizing in the grouplist doesn't have much advantage immediately, so no need to spend a lot of time on it unless you can be bothered ofcourse!\n. Looks fine.\n. The parameter should probably be restart rather than true, so it's self-documenting.\n. Code looks OK, though I don't like the placement of the CanResumeFromDVD() function.  Is there somewhere else that would be more appropriate perhaps?  Even in CAutoRun perhaps?\n. Because I hit the wrong giant button :p\n. I don't see the point in a percentage at all to be honest, though I also don't see a point of not doing it if it's easy enough.\nI do see the point of a property that suggests it's resumeable though.\n. Code looks fine - I'd prefer ListItem.ResumePoint though as we could potentially apply this to audiobooks and the like in future.\n. Yeah, number 1 is probably most suitable out of those.  I don't think the time gives all that much more information.  Could support it in GetBool anyway to save having to substring I think?\n. Technically it's GetPercentage(), but yes it could certainly produce a float.  I don't particularly mind the signature either way as the function is unlikely to be used in more than a couple of places, so whatever fits best is fine.  Either way it requires a check on the returned value.\n. Looks fine with that other one taken care of, yup\n. Looks good - feel free to push once you've addressed any issues.\n. Nice - looks good.\n. @amet: so some script other than XBMC is configuring what is run on player start?  Wouldn't this instead just be \"run all the installed services that can do something on player start\" ?\n. The point I guess is that I don't really see the advantage of this to any addons other than this particular use case, so I'm not sure we need to add support specifically for that.  If there's other use cases then no worries.\nWith that said though, I see a general use for multiple selection in a single setting anyway (eg use all of the following subtitle services...) though I suspect an ordering might be important for the selection as well?  So no particular reason why it shouldn't be available in the addon selection case.\nThe dialog multiselect stuff should definitely go in either way.\n. There are definitely possibilities to be had, yes.  The main thing we don't have for things like listings is the ability to sort (this is something that the library needs) - not sure how to handle that without the context menu though.  If we solve that I think it'll be really useful.\nEven with it not solved it's still useful though, so we mayaswell slot it in.\n. Looks good to me.  I'd prefer the addon thing to return a vector of addonIDs personally (and have a simple wrapper for the single addon case) as the string concatenation really is only so that it can be stored in the XML.\n. Yup, looks good.\n. No, that's not the correct fix.  If m_basePath is wrong for a subset of files (eg stacks), then fix the initial setting of m_basePath.\nm_basePath could be a folder for both movies or episodes (eg when use foldernames for lookups is enabled), and that's the one we want to match against.\n. The problem is CFileItem::GetBaseMoviePath's handling of stacks.  A possible fix is moving the IsStack() if block into GetMovieName instead, but this needs to be well tested.  In particular, we must ensure that stacks generated from a folder (eg stacking down cd1/cd2 folders) correctly results in the parent path being the base path:\n/path/to/movie_name/cd1/some_file1.avi\n/path/to/movie_name/cd2/some_file2.avi\nshould produce a stack://, and GetBaseMoviePath(true) should produce /path/to/movie_name.  The same should happen for a stack of rars and so on.  I will not accept a change to the function without a test function that proves that the change works - it doesn't have to be all-covering - just cover the cases that we know should work (eg the above case, a stack where videoFolders is false, perhaps a rar series, a simple avi and an avi in a folder).  We can always add to it later.\n. There's a few (CUtil::TestSplitExec for instance) - just keep it simple with a static function that calls the others and returns true if it succeeds.\n. It looks fine - add a little more coverage to the test function (eg test the true and false case for smb://, C:\\foo\\bar, /path/foo/ etc.), test, and slot it in.\n. Look fine.\n. It has no advantage over RunScript() other than less files floating around, thus it's best to get rid of it IMO.\n. Nice work - on the whole it looks great.\n. Given that we use a map, we'd either have to specify a case insensitive compare function for addon settings or force case insensitivity.  I wonder what the prevalence of case insensitive skin settings is?\n. Some doxy given the rest of it is doxy'd would be good.  Also, a particular note regarding cd26456 HasSettings() returning false would be useful.\nWill check the rest later.\n. @pieh would be good to resurrect this and get it all uniform across add-ons.\n. Looks good to me.\n. I think moving the searching mechanism to IDirectory makes a lot of sense, as it's then easy to search across multiple things as the directory interface takes care of things.  This makes sense as many plugins are inherently searchable (often they coax the search capability into the listing structure in ways that are somewhat unintuitive).\nIn the meantime, I think the music interface is nicer than the video in the way the search is done in the background and automatically filled in on the fly as you type things in.\nFiltering and searching could be done through the same interface I think.  The idea would be that there'd be a semi-modal dialog that allows searching.  You \"move\" to that bar (by activating search or filter via button press or remote flip etc.) whereby the bar becomes modal, allowing those without full alpha-numeric input to use SMS input or to pop up the virtual keyboard.  The bar would have a search/filter toggle on it.  Moving away from the bar (via  or  etc.) would return you to the listing whilst leaving that bar on screen so the user can see that it's still filtered (this may need to be skinnable perhaps, though keeping the same dialog on screen but modeless seems like a nice way to handle it).  The advantage of the dialog is one can pop it up anywhere in the future, though exactly what it does from \"home\" might be a little non-intuitive given our current split media windows.\nGiven we don't have this, a built-in that does what the current media windows do is a good place to start.  It'd want to work in both music and video however.\n. Filter versus search could be handled by having a toggle on the search bar.  Search would not depend on the current listing at all, whilst filter does.  Search would always search globally (to the current category perhaps?)\nWhat we could have perhaps is \"options\" on the search bar to restrict what things search for?  Alternatively, the search could prioritise the current category over other things (i.e. call the search on the existing listing first, then call things on the rest of things later on.)\n. For peripherals.xml, does it perhaps make sense to allow separate XML files here, rather than one XML file that attempts to handle everything - just thinking of what happens as new devices are added in the future by other manufacturers etc.  Ideally it would be addon-ized in some way (which would ofcourse mean separate XMLs required).\nWithout me going through all the code, it might be useful to elaborate on why a separate XML is needed to configure peripherals in particular - we like to err on the side of less things for the skinner to have to do if at all possible.\n. If the two added XML files are similar to others, then we should think about rationalising these.  For instance, if all you have is a list of devices, which you then click on to get their settings, this is really similar to the addon manager, though with only a single listing (no hierarchy?)  This is similar to what we'll want for other things such as configuration of sources, configuration of bluetooth devices (these could be done in this directly I should think?).\nWe should look to unify the settings dialogs at least - I doubt they're very different at all from the existing ones (addon settings, vis settings, video settings) so it may be possible to do them using a unified XML file?\nPerhaps we could discuss what the needs are for the settings here compared to the other settings windows we have so that we can get something that will be more generic?\n. Looks OK, though the commit msg is incorrect (it actually combines different types of plugins/scripts, as plugins/scripts are already combined).\n. Looks fine for the most part.  I wonder whether the sendmessage inside the intertial handler could be done at the start (i.e. the initial GESTURE_NOTIFY message) or not - we're kinda abusing the notion of GESTURE_NOTIFY here (as we're not notifying the control that a gesture is about to start, rather we're using it to query what the current gesture is).\n. Looks fine, though I really dislike the storing of a bunch of id's in a string (set id's)\n. I guess a 3rd option is to just do the setid using a vector, or is that no-go due to the resulting appearance in the json interface?\n. Looks cleaner to me I reckon.\n. Hmm, I don't get it - why does the scrollbar not update the following frame?  The only problem should be that the scrollbar is 1 frame out (which really shouldn't be a problem at all).  If we're wanting to fix the dependency between controls, there's lots of other ones already (eg label1 gets it's label from button 2).\nI'm not sure I see the point in allowing controls to have backgrounds to be quite honest - the only case I can see it being useful would be an auto-sizing grouplist?\n. A button sounds like a better idea - that way the user can (potentially in the future) click on it.\n. And that I would fully support ;)\n. Right - that makes sense.  Really m_bInvalidated shouldn't be reset at all in Render(), though I fear that may introduce more issues - will need a thorough testing but it's definitely the correct thing to do.\nRegarding backdrops on textboxes and grouplists, one could potentially do it by allowing width/height/positioning to be set based on another control which would be more flexible (allowing controls to be placed next to others) though I do wonder whether we should attack things from a layout perspective instead (which your idea is based on, with an implicit layout dependency), which is what the grouplist provides to auto-sizing controls to some extent.  I'm not really convinced of decent use cases for these however.\nThis will ofcourse have the issue of things being 1 frame late, just like a bunch of other things have that same problem (labels, anims triggered on controls not yet processed etc.).  As you indicate, this is unsolvable without explicit dependency linkages, which for labels and conditions (via the infomanager) are not known.  Even with explicit dependencies it could be problematic as circular dependencies would be unsolvable, but that's a problem for the skinner (and may allow for interesting effects.)\nGiven that a bunch of stuff is not doable (no explicit deps) I'm not convinced that adding them for this particular use case is reasonable.  If we do, though, it might be nice to do it via rearrangement of process order - the heirarchy makes this difficult however (it allows controls to depend only on controls in the same group).\n. Code looks good.  Note the reading of multiple strings from XML might need some doxy to note that it doesn't clear the vector first (I think this is what we want for chaining etc?)\n. I say we merge this immediately following Eden.\n. Sure - just make sure to mark the backward compatibility well so you can drop it when backcompat is broken elsewhere.\n. Looks fine overall.  The indirection via boost/pointers seems unnecessary - no huge copying will occur, so just use the classes directly unless there's a major benefit in reduced header includes.\nMake sure you protect the vectors in any global objects where needed (register probably the only case needed?)\n. You should be able to do this directly as we use the same transform in all render methods, so the matrices should be known (see the configuration in SetOrigin/SetCameraPosition).\n. Looks fine to me once tested on ES\n. Yes, fine to go in.\n. If no sources are enabled, we should always return to root - I thought I'd fixed this already - it's probably sitting in one of my many branches.  You can handle this in the INIT msg in CGUIWindowVideoNav::OnMessage I think.\nThe current fix is incorrect as you're redefining the behaviour of GetDirectory()\n. For a start, what is the benefit of prompting the user with a modal dialog?  We do so as if they continue attempting to use the (now broken) addon, weirdness may result, and as there's not a unified way to know when the user is starting to use the addon, this is the best we can do.  Can the user re-enable a disabled (and possibly broken) addon?  If so, we could perhaps use a notification and disable by default.\nWe should at least prompt them with a notification rather than leaving it in the log.\n. The problem is there's no unified way to \"start\" an addon: Some are started without user interaction, or perhaps without obvious user interaction.\n. Out of date - closing.\n. You could always override Update() in the addons mediawindow class and get it to return true in that case (I presume the problem is a no search results)\n. Exactly: No search results returns false from GetDirectory, and thus Update.  Override Update (or GetDirectory) in the addons manager and you don't have to muck around in the media window.\n. The idea with \"System\" settings is that that is where the user needs to go initially to configure their system.\nVideo/Music are settings related to video playback or music playback and viewing.\nNothing to do with resolution or output modes or anything like that.\nNone of the settings in \"System\" should be advanced (that's what advanced settings is for)\n. Basically this is good stuff.  It needs refactoring though as it was completely unobvious from the individual commits WTF is going on.  Squash them down into obvious changes, eg the AddSetting() <-> GetControl() change, the change that moves the label/id map for spinners into GUISettings.cpp etc.  Make sure you squash the \"fix\" ones into the others.\n. Make the home menu item \"Settings\" would solve the confusion.\n. Looks fine to me.\n. Why not use a grouplist which already supports this?  The obvious issue here is that you cannot just assume you have text and you also can't assume they're laid out in any particular way.  The listitemlayout could involve multiple labels which overlap etc.\n. Given that the string map is currently already a variant of sorts (we use it for bools, doubles, strings etc currently) using a \"better\" variant doesn't change things for the worse as far as I'm concerned.  That doesn't mean it's the best option ofcourse.  I'm not sure whether it is or not TBH.\n@jcarroll: how would you go about doing the same thing, given we need at least arrays of strings, strings, ints, doubles, bools, looked up using a string.\n. Code looks fine to me other than the minor comment regarding icompare\n. IMO it's fine to go in.\nOn Sat, Sep 24, 2011 at 3:09 AM, Sascha Montellese \nreply@reply.github.comwrote:\n\n@jmarshallnz: I re-added the icompare usage as you proposed.\nDo you guys agree that this shouldn't go into Eden (I don't know how to\ntest all the code I touched) or is it ok to go in?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/437#issuecomment-2179508\n. Agreed that that is probably the better way to go.  Trouble is we have to ensure every other loop also checks for stop.  I think dialog processing already checks this, but lots of other places possibly don't.  That needs fixing either way though, so IMO this is the best thing to do then fix up any places that need it.\n. Not if we're in a modal dialog\n. @CrystalP: the fix looks fine to be honest - better to fix the crash than try and get it perfect.\n. Righto - will pull it in.\n. merged in 93b146a\n. An alternate limiter is the soft-clipper one we used to use on xbox - IIRC it used an exponential tail off depending on the gain applied.  Code is probably floating around in the xbox branch still.\n\nCode looks fine to me.\n. The first commit looks fine.\ne823c34 needs to be able to get rid of the includes again when the skin is no longer needed.  It would also be useful if there was a way to ensure the includes are kept in separate name-spaces or similar - this would require the windows knowing who they belong to during load though, right?\nYou'll also want to make sure that the includes map is only accessed from the app thread.\nLastly, there's some great room for refactoring here as the same thing is done in 2 places.\n. The button control handles the pulsing, and isn't the button control the size of the slider, so shouldn't it set the appropriate dirty region anyway?\n. Ok - I'll try and take a look at some point.\n. Pushed a fix for this one.  The problem is Process() doesn't add to the dirty region list, but DoProcess() does.  A better fix will (hopefully) come later.\n. This will no doubt need redoing when AE goes in, so closing for now.  Once AE is in it may be looked at again perhaps.\n. Overall looks good as well as it's very well tested.\n. Sounds like we need to set a better default, rather than have yet another setting.  What volume level sounds most suitable to you?\n. Fix the nav sound volume at a defualt level.\n. Looks much cleaner I reckon.  Your thoughts?\nOnly thing I don't like is the circular dependencies on creation.  It kinda goes from infomanager -> skin -> includes -> create new skin var -> register with infomanager.  All the way returning an integer value that is held by the infomanager.\nNo particular ideas as to how it could be done better though.\n. Looks good I reckon.\n. Code looks fine, though it'd be useful to null terminate as elupus suggests (after all, this is the reason for the crashing, right - the strings are too long?) - you could do this by adding a strncpy_null_terminated() function in extract.cpp perhaps.\nIt would be useful to get a rar that allows this to be reproduced, as it suggests that something else needs fixing (not sure if we want to spend much time on it with libarchive on the horizon)\n. Why not clip by setting scissors on the rect (it should already be being done for the actual screen in the window manager during render I think - just need to change it to use the intersection of overscan + screen.\n. Just a couple of minors spotted, otherwise nice work.\n. By no means a thorough review, but looks good on the whole, just some minors.\n. Comments are in-line.\nOn Mon, Mar 19, 2012 at 6:24 PM, peprasetya <\nreply@reply.github.com\n\nwrote:\nMay i know whatare the minors?\nOn Mar 19, 2012, at 10:25 AM, jmarshallnzreply@reply.github.com wrote:\n\nBy no means a thorough review, but looks good on the whole, just some\nminors.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/511#issuecomment-4567296\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/511#issuecomment-4568030\n. Not that you want to go near it, but XBMCHttp.cpp has base64 shenanigans in it.  Not a priority, ofc - can be cleaned up (or better, removed) later.\n\nAlso, the EndianSwap changes are also in PR 777 (in case you get conflicts)>\n. Has there been a solution to this?\n. I would suggest that in the example above, it is not intuitive for the 3rd (hidden) control to execute it's action?  I guess it depends on what the action was - if it was an action designed to emulate normal navigation, then it might still make sense.  In general, I don't think it does?\n. Good question.  Basically how grouplists work is that the grouplists actions are given to the controls inside the group, rather than executing from the grouplist control itself.  For movement in the direction of the grouplist, however, it really only makes sense to give the internal controls navigation actions, and that's also what's done to the controls at the start and end.  I suspect this would be possible to change but it might take quite a bit of futzing around.\nI presume that atm you have a button that you navigate onto hidden outside the end of the list that has an appropriate  action?  In some cases this might actually be the cleaner way to execute it?\n. As I think about it, even if we were to change grouplists so that the grouplist action was assigned to the end controls, it still wouldn't fix the problem.\nThe only fix is treating the actions and navigation as the same, i.e. if you move  onto a hidden control, then it will execute it's  in all circumstances.\nWill review the commits here more thoroughly, as I'm coming around to the idea.\n. I think once Eden is out and the commits are cleaned up, I'd be happy for this to go in.\n. Looks good.  As this potentially changes navigation paths in existing skins we probably need an xbmc.gui bump?\n. It's fine to be merged in August - assigned to you.\n. Over to you @davilla\n. What advantage does this have, other than the avoidance of \"nasty\" pointers and some slight cleaning?  (Nothing wrong it that's the issue).\nThe potential issue is that there may be a performance decrease (probably 2 memcpys when adding to the vector instead of 1?)  Quite possibly wouldn't be detectable though?\n. Really I have no problem with the change if that's it's sole purpose - I doubt things are hit enough that it'll make a difference performance-wise (after all, we're comparing basically a memcpy of 16 floats followed by a setting of a pointer with most likely 2 memcpy's of 16 floats - hardly much difference).  This assumes that a push_back() requires both constructor and a copy - if it utilizes a copy constructor then there won't be any difference.  You could test this with some well-placed breakpoints/logging.\n. Almost all the checks you have in place for EFileStub() appear to be because you replace the stub file with the real file for playback.  We have the same issues with plugin://URLs that are resolved on click among others.\nBy the looks, what we really need is a way to specify \"play THIS url\" for this fileitem so that we don't actually alter the underlying fileitem's path and instead just feed the player the one it needs.\nThe same mechanism could then be done in other places it's required (thumb extractor for example).\nEssentially a \"resolve playable URL\" function that allows us to keep the path that was passed into PlayFile() as-is.\nOther than that, there's a whole heap of changes that would be necessary in this pull before it could be considered for mainline, but I think addressing the above point is the most important.\n. Yeah, looks nicer I think.  You could probably pass a boolean for volume_up to save including Key.h in Peripherals.cpp? Mayaswell reduce the include spaghetti where reasonable?\n. An empty CecAdaptor class would get it to compile without the ifdef (no ifdef's in that file currently by the looks), and wouldn't add any overhead at runtime as GetPeripheralWithFeature() would return false anyway.\n. bbac68b seems to be unrelated?  The merge should be rebased away as well.\n. Agreed with Anssi + bobo1on1.  The above patch does not alter pre v1.5 codepaths at all.\nThe only thing that would be nice is to get rid of the 2 or 3 #if PNG_LIBPNG_VER <= 10499 lines which appear unnecessary given that the code it refers could just be moved down into the #else blocks below.\n@bobo1on1: want to handle pulling this in?\n. I meant this commit:\nhttps://github.com/Zenkibou/xbmc/commit/99d1031476f8ec74d42a54667023746ca4153931\nwhich didn't touch the existing codepaths?\n. @jhsrennie: I presume this can be closed?\n. Closing as far too out of date.  If someone wants to bring it up to date it may be reconsidered.\n. The main comment I made was this one: https://github.com/xbmc/xbmc/pull/327#issuecomment-1731431 referring to the diff you did between tinyxml-2.5.3 and what we have.\nOther than number 7 in that list, there was a potential iconv issue in that you're not using the encoding specified in the XML document to do the conversion to UTF8.  Compare with https://github.com/xbmc/xbmc/blob/master/lib/tinyXML/tinyxmlparser.cpp#L811\n. It doesn't need to be modified directly: You could \"simply\" read the XML in order to get the XML declaration (and thus encoding) and then use that with your current code to do the iconv conversion.\nCheers,\nJonathan\n. Why does iconv need to be involved at all here?  We have our own charset convertor that handles the iconv stuff for us.\nWhen reading an XML file that we want to convert to UTF8 we \"simply\":\n1.  Read the XML declaration to get the XML encoding (if any).  If you have to you can always parse the entire thing first (though one presumes there's a way to just grab the declaration which is the first element anyway).\n2.  Do exactly what you're already doing by calling the charset convertor on the entire file - only difference is now you know what the source encoding is.\nAssuming that is done, I have no problem with a b2 going out - if it breaks we revert and push b3 immediately.\n. I'd be OK with that.\nNeeds signoff from all platforms.\n. There shouldn't be a problem with non-local files, as everything goes through CFile now, right?\n. A quick grep for SetConvertToUtf8 or convertToUtf8 shows we don't actually use that functionality (it was added by a boxee dev IIRC) so that can be dropped and save the complication of multiple parsing etc.\n. Rebased version is available here that should address mine and cptspiff's points above:\nhttps://github.com/jmarshallnz/xbmc/commits/system_tinyxml_rebase\nAm building/testing on win32.  Other platforms please test + give signoff.\n. Confirmed that the rebased branch above builds and runs on win32.\n. On reflection, the issue with invalid XML (specifically, XML that includes & but not & ) is unlikely to be fixable properly other than patching tinyxml.  Personally, I don't see why tinyxml wouldn't accept a fix - they've obviously considered it in the past - essentially it allows unknown entities to be ignored so that the & isn't stripped.\nb2 should go ahead without this.\n. Any solution to get it to work would be considered, sure.  Alternative is making sure that all entry points for XML into tiny are pre-filtered (atm there's OpenFile, Parse and >> I think?)\n. The changes look reasonable to me - as far as I'm aware there should be no other issues.  Mind rebasing so that we can get some builds out for folk to test.\nIn particular, testing to check that blah blah & foo returns \"blah blah & foo\" is what's needed.  This should be able to be verified by running things through the scraper.\n. Ideally, we'd fix the cases we have invalid data, but yup, agreed.  I'll track down the scraper case.\n. Ok, rebased my branch here: https://github.com/jmarshallnz/xbmc/commits/system_tinyxml_rebase\nand added a test.  It returns false at the moment as I don't have 39ca75b.\n@amejia1 - please pull in my top commit and rebase (or just pull my branch and throw 39ca75b on top).\n. I'll pull and run the test on osx later today.  It'd be great if someone could run the test on win32 as well\n@DDDamian you're on win32, right?  If you have a spare half an hour, minding pulling, building and ensuring the test returns true (just dump some test code in CApp::Create)\n. I was afraid of that.  The only thing I've found with a quick searchis that something like /FORCE:MULTIPLE might be usable to override the duplicate symbols.  Whether that will actually work, I don't know.  It seems like a hack at best, and disables things such as incremental linking which seems nasty.\nhttp://msdn.microsoft.com/en-us/library/70abkas3.aspx\n@DDDamian: in addition to just building and running, add a call to XBMCTinyXML::Test() in CApp::Create() and ensure it returns true (throw a breakpoint in).\n. No error in the parsing by the looks, and root appears non-NULL, which suggests that url is probably non-NULL as well.\nGrab what url->FirstChild() is, in particular, what is url->FirstChild()->Value() ?\n. Given the hassles here, IMO the only decent solution is to patch tinyxml on win32 (and any other systems that can get away with it).\nIn the meantime, we should strive to get rid of invalid XML.\nThe only one that really matters is scrapers, which are fixable, albeit not necessarily easy (XML inside XML never is).  If/when they move to python this won't be a problem anymore, so with any luck by the end of the summer the problem will go away of it's own accord.\n. The fix for the broken XML won't fix those cases where we call Parse() directly from within XBMC.  This is what scrapers use for example.\n. In addition to the commit of @wsoltys, grab this one: https://github.com/jmarshallnz/xbmc/commit/24f3bd8001a9b84cf4aebbca6d900a1b4d30d80e\nwin32 then builds and passes the test on Parse().  Also, LoadFile() is correctly called, so win32 looks all good.\n. @davilla: looks like some osx work is needed to get build sorted (tinyxml dir dropped from project file, dylib's added etc.)  I don't see why it wouldn't work once that is done though.\n. In that case, once the 2 fixup commits are rebased in it's ready to go.\n. Regressions may well crop up, yes - eg it may be intended that the path is replaced for some reason (eg we may use the path to decide what views to display, sort modes, icons, thumbs etc.)\nWhat is strDirectory before and after in this case, and why does it work the first time but not the second time?  It sounds like it's ignoring the flattening when getting the parent folder as it's building the foldername from the current path which includes the -1 folder.\n. I'd be tempted to say that the initial behaviour is just as wrong as the following behaviour.  Strictly speaking it is showing the \"all seasons\" listing.  The reason it works the first time is that the parent node being fetched is CDirectoryNodeTVShows rather than CDirectoryNodeSeasons.\nThe fix, however, does not look correct to me, given that CGUIViewStateVideoNav reads the path in order to figure out the content type?\nAn alternate fix would be differentiating the -1 path intentionally entered, and the \"all seasons\" listing as given when flatten is enabled - eg we could use -2 for that.  Then in CDirectoryNodeSeasons::GetLocalizedName() you could use pParent->GetLocalizedName() if GetID() returns -2.\n. I don't like the idea of having a separate variable to hold essentially the same thing, though wouldn't be opposed to letting the history vector take that role if we're 100% convinced that it will lead to no problems.  I don't think Eden is the time for that change, however - it may lead to inconsistencies where in some cases we use one and not the other (eg Update and refreshing is done using the path held in items - are you going to find all of them?)\nA simple way to fix the inconsistency is reparsing the items URL in VideoDatabaseDirectory.cpp after retrieving the list and before setting the label.  It won't be what the user wants no doubt, but will be strictly correct and consistent.  After all, Container.FolderName does not represent what the user clicked on - rather what the folder name of the current container is.  Most of the time they're the same, but not in this case.\nPersonally I prefer the -2 idea as it clears up the ambiguity of what the flattened path represents.  I don't think there's any cases needed to take care of other than this one.  Yes, there may be some fun tracking down -1 usage to make sure you take care of potential problems, but that's not too bad to grep.\n. An alternate is a \"rule\" where container.foldername returns the show name in the -1 node.\n. Hey @CrHasher, this is all looking nicer now.  Mind squashing the two commits down and I'll pull it in.\n. @arfoll Any chance you're going to get to look at redoing this using the build system?\n. Thanks - will close in that case.  Someone else may take it up later.\n. Looks fine to me - a quick grep shows you've picked up all the spots we use -1 reliance - nice work :)\n. Seems to me that we don't want to change it's id - we could do an update query rather than delete/add.  Not sure how easy that would be to do, however!\n. Does the same problem exist in Episode lists as well (not sure if you can refresh the entire show there?)\nI'm happy for this to hit Eden on the condition that it's clearly marked as something that can be removed once update-in-place is taken care of.\n. Agreed - merge away.\n. It's video-specific, so I'd prefer it be left in the video window classes, unless there's some real saving in having it in the base class.  The job can then go next to it.\n. Sounds good - just commit any changes you make to your local master and they'll automatically show up here in the pull req.\nI guess the MarkWatched function will be quite small by the time it's job-ised, so it might not matter where you place the function that fires off the job.\nOh, and I didn't say before, but great work - this will be a nice inclusion :)\n. Ok, a couple more minor points on the commits - it's looking great.\nNext step would be to squash them down as I don't think you need more than the single commit?\n. @thezoggy: Not really related to this, but yes, it could probably be removed.\n@GabrielL: You gonna squash/rebase them down?\n. No, we don't want to loop in a job, as you've just chewed up a job slot.\nThere's no particular problem with scan though - we don't hold a transaction during scan, so should be able to commit to it.\n. @GabrielL: What's the problem?\n. Please squash down and I'll take another look.  For future reference, please don't merge from master - instead, rebase onto master.\n. Seems good to me.\n. Looks good to me.\n. Please rebase the commits to get rid of the merge and squish them down into one so it's easier to re-review and gives clean history.  Thanks :)\n. Thanks - added.\n. IMO 23bfcba640a7bc96d339ec619fcd4eaabe83f95f was incorrect.  If we wish to fix ordering by set (whatever that's supposed to mean - it's equivalent to ordering by Genre, which we don't support as it's a many-1 mapping??) then handle the join + ordering as required in SmartPlaylist.cpp.\nAt the moment we receive information in the movie table that is essentially of no use.  The group by movie id then makes it just as useless (as I presume it will just take the first set id it comes up with).\nMy vote is reverting 23bfcba and finding out exactly what the user(s) are wanting to do that causes them to wish to order by set.\n. Thanks Montellese for testing + all for review\n. Just some basic notes on the commit (not saying one way or another if it'll hit Eden).\nI don't like the dependence in IPlayer of Resolution.h - why not pass in the refresh rate instead?  Further, I don't see particularly why DVDPlayer should be in charge of running through the AdvancedSettings to find the rate to hit.  It might be better to instead have a function in AdvancedSettings that takes a float refresh rate and returns the float delay.\nThat way you'd just call:\nfloat delay = g_advancedSettings.GetGlobalAVDelay(g_settings.m_ResInfo[currentRes].fRefreshRate);\nif (delay)\n  player.SetGlobalAVDelay(delay, apply_or_not);\nKeeps things nice and simple within the player, abstracting any complexity out.  Plus means you're not unnecessarily exposing a read-only member of CAdvancedSettings.\n. Typically how things work is a developer submits a pull request.  We then review and suggest changes.  The developer then makes the changes and the pull request is updated (magically) with the new code.  Then we hit the big merge button and we're done.\nWe don't typically take patches given to us and alter them to our requirements, unless it's completely clear that we need the patch and the original developer has abandoned it.  We don't have enough time to fix all the other shit that's broken :)\n. Could easily do a combination thereof by making the hints structure take a flag in it's constructor to keep most calls reasonable:\nCDirectory::GetDirectory(foo, items, mask, hints(flags, content), allowThreads)\nOr, given you're only using it as a bool switch atm, you could just add another flag :)\n. Yeah, perhaps a combination might be the way to go where the hints struct has a constructor that takes the flags.\n. @elupus: are you happy if I switch to using a struct of flags combination?  That way we can easily add to the hints struct later should more than just a flag be required.\n. Yup - I wasn't clear.  What I meant was:\n{{{\nstruct Hints\n{\n  Hints(int f) : flags(f);\n  int flags;\n};\nbool GetDirectory(const CStdString &path, const CStdString &mask, const Hints &hints);\n}}}\n. Ok, rebased and now using a class - left the flags method for ease of access, and left allowThreads out of the hints as it's only used at CDirectory level rather than at IDirectory.\n. Sure, so those that still have real VCDs floating around (i.e. actual coasters) will be fine, as we ignore video extensions when we find a MPEGAV folder.\nIn addition, we could perhaps use elupus' suggestion for allowing the very specific naming combinations of VCD without allowing all .dat extensions.  AFAIK VCD files are of the form:\nAVSEQ##.DAT\nMUSIC##.DAT\nITEM####.DAT\nAs far as I'm aware that's all there are - anything else has already been renamed, so why not rename to .mpg (or just add the advanced setting).\n. Ok, change made so that .dat is added back into the list, but we now ignore anything other than AVSEQ, MUSIC and ITEM filenamings.\nThis seems a reasonable compromise to me - it does make it so that we no longer support COMPLETELY_ARBTIRARY.DAT but IMO that isn't really a bad thing.\n. Some extra things picked up related to VIDEO_TS/BDMV folders.  Previously they were always stacked down, but the base path was found depending on the \"use foldernames for lookups\" parameter, which ofcourse should always apply to these.  Thus, there was inconsistencies.\nI've added a db update path as well that basically just replaces any existing basepath for VIDEO_TS.IFO/index.bdmv files.\nIf I could have a quick signoff by (pretty much anyone) I'll slot it in.\n. There is an easy way. Turn the setting off?\nMy only other suggestion is to remove the cleaning if not already in the\nlibrary completely, as clearly it's rubbish at doing it's job.\nOn Feb 12, 2012 3:40 AM, \"Joakim Plate\" \nreply@reply.github.com\nwrote:\n\nPs.. i still think usage of library titles should be tied to the stacking\ntoggle. I can see the point of getting nice names in folder view, but there\nhas to be a simple way to get real file names back.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/660#issuecomment-3921000\n. Pull req to remove said behaviour here: https://github.com/xbmc/xbmc/pull/684\n. Then turn them off :p\n. Hmm, what skin hacks are you referring to?\n\nBasically sets are never shown anywhere at all (other than the sets node itself) unless you enable the setting in the UI.\nIf you do enable the setting in the UI, then any listing of movies (doesn't matter what it is) will replace movies with their set items if there is two or more movies in the list in a common set.\n. Agreed, but are we really expecting users to be that stupid?  Hmm, good point! :)\nFeel free to suggest other namings.  The point is that using the foldername to do the lookup is just a small part of what this switch does.  It's critical users get this right, and thus we must make a best effort to name it appropriately.\n. Neither of them suggest that the folder is important beyond the name is the problem.\nEach movie is in a separate folder named after the movie?\n. Movies are in folders containing the title?\n. Last attempt (best yet I think), thanks to sho + Montellese:\n\"Movies are in separate folders that match the movie title\"\nA little longer than we'd like, but it fits the dialog no problem at all.\n. Looks good now other than a few minors (you could do the new for the publish job inside the jobmanager call if you want).\nI presume all this is because this is done from app thread and it takes an age?\n. Need to redo this properly with db updates moved out from db::open()\n. Would it be possible to factor out the changes to AddFoo etc. from the swap around of settings?\nI think the change is good - the UI layout should be disconnected from the setting namespaces, otherwise we're always gonna have to muck around with them throughout the code which is silly.  Also, once untied, we could then index the settings based on a faster system than string lookups.\nOnly disadvantage is the UI layout doesn't reflect the XML layout (advancedsettings in particular) but I don't think that's a problem, particularly if later on we name the settings better - previously they were somewhat constrained based on the UI layout.\n. Looks good - pull the trigger.\n. Your call - I don't mind either way.\n. Thanks vdrfan - have used that.\n. The only potential problem is that if anything else \"owns\" the context then it could unintentionally close it - can't think of any reason why this would happen, however.\nAlso, GUI_MSG_WINDOW_DEINIT gets fired when skin unloads, though that won't cause a problem here either.\nIMO it's a cheap fix for the problem in the meantime (any \"better\" fix would have the context menu knowing what context it's in, and the context holder notifying context that it's lost that state - a shitload more code for little gain).\nNote that you don't require CGUIDialogContextMenu* - just a CGUIDialog (or even CGUIWindow?) will do - not that that matters either!\n. Perhaps we should add more than one date?  e.g. create date (of file/directory) and added date (date added to db?)\nThat way any setting can be done without the user rescanning (which would make at least one of the dates useless)\n. I see modified file time as useful in that XBMC could use it to know when to rescan an item for content change.  eg if we read internal tags in mkv/mp4 for example.  Alternatively, we could use another hash for this that's independent of the file date and instead dependent on file content, or we could use both (my preference is the latter).  Thus, IMO having info on the file modification date in the file table makes sense to me.\nThe same applies to paths - it could be used as a hash of sorts to know when the content of the path has changed (in addition to some slower hash, such as the number of files/folders in the folder along with their modified times, size etc.)\nSummary: Agreed - use file modified time for files at least.  Tempted to use it for folders as well due to the above.\nWhether or not we need a date added to the library, I think if we do that might be better in the movie/episode/show/musicvideo tables rather than the file table.  In my opinion this isn't really needed at this point, and would be somewhat useless until we have proper updating of the tables on rescan.\nNote that the file table isn't cleaned when a movie is removed due to content set to none then back to movies (i.e. refresh), so the original date set should remain.\n. I suspect that users won't care that the date added on the tvshow folder is updated when a new episode is added.  Indeed, I suspect many would actually want this (see the \"on deck\" service addon).  IIRC recently added albums basically works off the songs, so this would be somewhat consistent if that were to be the defined action.  I dunno - I don't really see the point of recently added tvshows particularly - shows with new episodes are more interesting.  I do agree that technically the create date of the folder is likely to correspond better with date added to XBMC.  Perhaps add both?\nAgreed regarding dateAdded to the other tables - let's try not to add anything new there until they're dead :)\n. I'd be tempted to just stick with the modification/create date and be done with it until someone complains.\n. Just an additional thought while I remember.  The current implementation changes the meaning of \"recently added\" from \"recently appended to the movie table\" (if we ignore the re-scan issue, \"recently added to library\") to \"XBMC has seen the video and stored something for it\", eg streamdetails.  Except for tvshows, ofcourse, which stay as recently added to library.\nI don't have a problem with this - in the future I'd like everything added to the library regardless - just noting it here for others reviewing.\n. Otherwise looks fine (complete with db version bump, so I can play more rebase games :p )\n. Once we sort that last one, good to go for April.\n. Do we have an agreement to press the merge button, or are more changes needed?\n. Looks fine\n. I suspect it does.  One example might be that some embedded images might not display correctly on some platforms (win32 might be one that does that).  The trick is it happens only with ID3v2.2 tags which aren't all that common nowadays.\n. It's not the best fix, no (as losing the db url might have other implications), but there definitely is a problem here.\nAn alternate fix would be to have a plugin:// file implementation that does the resolving, though there may well be issues with that as well (specifically regarding the metadata stuff that setResolveUrl() does).\n. I'd prefer if 83c7240 was split into 2 (support for plugin:// then support for musicdb:// -> plugin://)\n. Correct.\nOn Mon, Feb 13, 2012 at 11:26 PM, tidalf <\nreply@reply.github.com\n\nwrote:\nyou mean 2 commits, one with only plugin:// and a second one with\nmusicdb://->plugin:// ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/688#issuecomment-3937255\n. Yup, looks good.  Will try to find some time to track possible consequences of resolving musicdb:// URLs at play time rather than passing them through the filesystem.\n. It won't be for Frodo either way, so you have plenty of time.\n. Thanks - will pull it in\n. Nope, still needed, but needs to be handled generically if possible.\nOn Jan 6, 2013 3:46 AM, \"Martijn Kaijser\" notifications@github.com wrote:\n@jmarshallnz https://github.com/jmarshallnz\njust looking at PRs. Was there still something needed for this one or was\nit already pulled in by you?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/688#issuecomment-11914772.\n. Your example shouldn't be a problem as .srt is not a video extension, thus would have been filtered out before we get to the Stack() routine.  My guess is your problem files are different than this, such as .ifo ?\n. Is \"stack\" the magic word to invoke you? ;)\n. Ah, now that makes more sense.  A quick look in CGUIWindowVideoBase::OnInfo() shows that CDirectory::GetDirectory() is called without the filter mask for video files.\n\nSimple fix is adding a g_settings.m_videoExtensions or thereabouts.  Do you mind investigating + updating the pull req?\n. Actually, I mayaswell just slot it in as it's an obvious bug fix.  Thanks for highlighting the problem :)\n. Putting aside the fact that there were only 3 starwars films, that would be the perfect example where you'd want to change it to sort by title but would not want the same thing to suddenly happen for all your other sets.\n. I think the few cases it fails in are few enough that it doesn't warrant carrying changes the user makes to set 1 carry over to set 2 (i.e. no need to have a \"default movies in sets\" layout floating around).\nWill leave it until tomorrow in case further discussion reveals a better solution.\n. The problem there is that we'd have to check every item to see whether it had a sorttitle.  Is one item with a sorttitle enough to decide that we should use it?\n. Do 727ae21 and fcbe343 need to be reordered (i.e. does everything build at each commit stage?)\n. 8697a2c is fine.  IMO both python APIs could do with further review.  We want to be completely certain we get this right.\n. Yeah, I'm never sure about the order of how things are listed on github.  eg by the looks f30e59c needs to go in after 4fcb033, and 4fcb033 needs to go in before 072f649...\nThis needs discussion as to exactly what we want to expose to python (and how it should be done).\n. Should we use the default stream in preference to the \"best\" stream?\nWith this we're overriding default stream for language.  Should we also override the default stream if there's a \"better\" one?  Dunno :)\nOtherwise, the only thing I don't really like is the sort when std::sort exists - eg you could sort according to whether it matches the assigned language, then by default, then by best (swap the last two around according to the above) - it does mean passing a param to the sort predicate though.  No doubt you've considered this already and have good reasons why a sort won't work though :)\n. Agreed that the number of items being sorted isn't a big deal.\nI'm not sure what the default stream means either.\n. I can't think of  a case where it would make sense to store a different\nlanguage for audio/subtitle generally (i.e. in strings.xml/langinfo.xml -\nsurely it's user-specific).  Removing those from langinfo and placing them\nin the GUI (no need for a menu language IMO) makes sense.\nCheers,\nJonathan\nOn Mon, Feb 20, 2012 at 3:57 AM, Sascha Montellese <\nreply@reply.github.com\n\nwrote:\nActually I didn't use the GUI language. What XBMC does is it looks into\nthe langinfo.xml that is part of the directory containing the strings.xml\nof the language you chose in XBMC. There you'll find\n<dvd>\n   <menu>en</menu>\n   <audio>en</audio>\n   <subtitle>en</subtitle>\n</dvd>\nSo I figured it would make sense to use that for selecting audio streams\nin CDVDPlayer as well. I also run XBMC in english (although I'm german) so\nwhat I did was I modified my langinfo.xml so that DVD menus etc are\ndisplayed in german and not english. But I agree that this solution is far\nfrom user-friendly as it involves modifying an XML file. So maybe the two\nnew settings you propose would then override the settings read from\nlanginfo.xml and would also apply to DVDs. Where should those be put? In\nAppearence -> International where a user already specifies the GUI language\nor in Video -> Playback?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/700#issuecomment-4042461\n. For 5, I agree - there's no need for this one not to be instant.  The bit making it not instant is in FillInLanguages()\n\nsetting->SetDelayed();\nSimple fix I guess is moving that bit out into the locale.language handler.\n. For 1, you could always just use \"Same as UI\" or some such for the second.  The first isn't too bad I think?\n. For 4, I'd replace, yes, but obviously defer to @elupus in this respect.\nFor 2, what does langinfo.xml offer over and above the setting you have?\n. Given you're returning the sort order not the items sorted I agree that doing it the way you have is best.  I'm not sure whether it makes sense to reorder the streams themselves. @elupus?\n. The only question is whether he actually reorders the streams, or instead returns the order (i.e. a vector of indicies that are in the order he wants).\nATM he's doing the latter.\nQuestion is whether the streams should instead be reordered (and thus std::stable_sort() could be used).\n. Mind getting rid of the TVRegExp constructor ordering changes which seem unnecessary (and rebase the fix away).\nOtherwise, this is queued to go in following Eden.\n. Cheers.\n. If I understand correctly, iOS sends an event on button down and an event on button up but nothing in between?  If so, the way you've done it seems fine, though I really don't like the extra global if it's going to be iOS specific.  I wonder if it makes sense to implement this more generally, so that if an event has a repeatable attribute, we keep doing it (after appropriate delay) until we receive a repeat-stop attribute?  That way other bits of the chain (eg the event server) might be able to take advantage?  Basically just moving the iOS specific global into something like CApplication or the base WinEvents class or some such.\n. Have you tried firing the events at 10ms or so (after initial delay time of 500ms?)  This is how the SDL_Keyboard events are handled.  Basically what happens is they're put in the message queue, and we pop one (handled) message off the message queue once a frame.  Extra events will be queued up when the button is held down, but this doesn't seem to cause any issues as the events are processed only slightly slower than they come in.\n. An alternative would be to only place an event in if the event queue already has an event of the same type of event in place (after an initial delay).  Then you can send them fast enough so that at least 1 gets in per frame (eg 10ms) and not worry about having a bunch left in the queue.  Not sure what else is in the queue other than the events you're pumping in here - if nothing else, then just checking the queue is empty will be enough.\n. @sraue: If you update (no doubt there's been some more since this was done), and remove any we don't own - basically anything in lib other than Dll*.h, libexif, XBMCYM.cpp, XBMCVGM.cpp, xbadpcm I think is all then this can be slotted in.\n. Montellese has handled this one - new PR for it will be up soon.  Thanks heaps for you work in the meantime - keep it up :)\n. Seems fine assuming the string is OK'd.\n. You should probably make it conditional on whether sets exist?\n. Looks fine - mayaswell squash it down.  Will be up to Jezz_X as to whether it goes in.\n. Now rebase it down to a single commit.\n. Heh.  I'm not sure what you've done there, but while in your moviesets branch, try\ngit pull --rebase origin master\nThat should pull origin/master into your branch and put your commits on top.  Push it back to your github repo and you'll be back to your 3 commits on top.  Then:\ngit rebase -i HEAD~3\nand squash down the last two.  Then check the log (git log) to make sure it all looks good and push it back up.\n. looks good.  Will be pulled once Eden is done.\n. I suggest adding this to the official repository instead.  Things that you'll want to do are:\n1. Probably use something other than .org in the metadata name (some might think you own filenamesonly.org).\n2. Use lower-case characters for addon-id etc.\n3. Don't use spaces in filenames.\n4. The icon may not be acceptable - having words on it is usual not good (translation).\nAdditional discussion might revolve around the need to send info to (your?) server that transforms stuff before it comes back.  A much better implementation would be extending the patch on trac that does everything within XBMC.  After all, it's silly to have a webserver just return the filename back to XBMC...\nThis won't be merged into mainline, as we do not take on things that we don't maintain.\n. While we appreciate your enthusiasm, and you're doing a good thing, please check things build before you do the PR to save us review trivialities.\nPersonally I don't think this one will be accepted - it seems to be trying to fix a problem in a way that is not useful (i.e. addition or removal of sources by directly editing an XML file and then reloading it).  Lots of things are not handled, such as updating of windows to tell them that their sources have changed and so on.\nWill add some comments to the trac ticket.\n. After discussion with amet, does it make sense at all to generalise the class to also be used for other callbacks at a later stage?  i.e. for service and script add-ons (which I presume this is basically for - after all, the add-on needs to be running in order to receive the notifications) they'd also want to be able to receive other events, such as knowing when their settings has changed and so on.\nFor settings in particular we could always create yet another python class that does basically exactly the same thing as this (class for callback, static manager to handle (de)registration of callback classes and feeding the callbacks etc.) - I'm not sure which is better, having small classes that handle a single thing, or having a addon base class that can throw all the events that an add-on might need to track?\n. Until the saviour cometh, should we in the meantime add more boiler plate class/callback managers, eg to take care of the settings callbacks as well?\n. I don't really mind either way.  I just figured that it makes sense to sort out what will work best from the clients perspective.  Should they need to derive from classes A, B and C as each one handles a different callback, or does it make sense to have a class that feeds them all?  Or a combination thereof.  eg service add-ons will probably want both at least two of the JSON, settings and player callbacks (IIIRC the playercallbacks are duplicated in the JSON callbacks anyway - I don't think the settings one fits in with that particularly well though?)\n. Agreed - anything added now must continue working later (unless we're planning on just breaking everything and starting from scratch), so if it's better to do it slightly-more-awkwardly now in order to make things nicer later for both the API and the client, then IMO we should do it that way.\n@jimfcarroll: as you will be handling it, argue your case :)\n. Ok, so sounds like the best way forward is to keep things separate, with respect to settings vs player callbacks etc, so settings will go in separate to this.\nIs it worth also separating out (e.g. handling the switch and providing separate callbacks, or separate classes that listen to the different callbacks) in this current code?\n. @jimfcarroll How does this fit in with your world domination plans?  In particular, XBPython::Announce().\nSome of the announcements call python-specific versions in the monitor class, everything calls onNotification in the jsonrpcclient class.\n. Looks good assuming you got 'em all :)\n. AE is in now, so this will need to be redone - have fun :)\n. @CrystalP, @a11599 With AE in, all this needs reevaluating.  Do either of you have the time or inclination to take a look?\n. Thanks :)\nSquash them down and we'll take a final once over.\n. It looks ok, though IMO changing the while loop to a for made it messier :p\nEither way, the below seems more obvious to me, unless you have a complete aversion to early returns, though I don't care enough about it either way - the code does what it should.\nfor (int i = 0; i < 12; ++i)\n{\n  if (month.compare(months[i]) == 0 || month.compare(abr_months[i]) == 0)\n   return i + 1;\n}\nreturn 1; // default to January\n. Looks fine to me.\n. Yup, it's a bug.\n. This is certainly wrong: You're calling a job after we've already asked the JobManager to close down.\nIf you want to do it, do it without the job\n. Don't use new as you've forgotten to delete it again, just use CSaveFileStateJob job(params); job.DoWork();\nNext thing to check is what (if anything) the job uses that might be already torn down.\n. I haven't yet gone through a thorough analysis.  Either way, it's post-Eden stuff anyway, right?\n. I think this should be OK (it's done reasonably early in the shutdown phase - in fact, I'd change it so it's the first thing in the shutdown phase), but would like if someone else could look over it.\n@arnova: in the meantime, please squash the commits down so it's a little easier for others to review.\n. When is the player stopped?\n. I think this should be OK.\n@vdrfan you've played with this stuff (db stuff) before - see any potential issues?\n. It's fine to go in during the May merge window IMO.\n. The merge is there because you pulled master into your branch, and then pushed your branch up to github.  This then means that the order of commits is according to your local branch'es timeline, rather than according to xbmc/xbmc/master's timeline.\nTo stop this happening, you should pretty much always \"git pull --rebase upstream/master\".  This will pull in upstream's commit timeline, popping your new commits on top.\nGood news is you can do this now, push back to your repo (it'll require a forced push as you'll be changing history) and the pull req will automatically remedy itself.\n. It looks like this fix is more appropriate:\nhttps://github.com/xbmc/xbmc/pull/772\n. I wonder whether a \"use truefullscreen when playing video only\" type thing would \"solve\" some of these issues?  Also relates to PR 177.\n. I don't really mind this going in, but IMO we need to look at two things first:\n1.  It might pay to have a general CheckCompatibility() routine that runs at the end of OnSettingsChanged - that way we keep the code isolated.\n2.  I'll look at whether we can make the lines for the Yes/No dialog (etc) wrap so we can have a single string in the XML - this is somewhat tangential though - several other strings are already split like this, so shouldn't hold this up.\nThe final option ofcourse is just not allowing adjust refresh rate to be used if fakefullscreen is on - I doubt there's many (any?) systems where it actually performs correctly anyway.\n. Wouldn't this also require some skin-settings stuff as well?\n. Nice work - always good to delve into a new area of XBMC :)\nIt seems to me that this is best evaluated once ffmpeg has been bumped: If ffmpeg supplies what we need, then we should use it (as it unifies things across platforms) unless there's a very good reason against it (eg ffmpeg doesn't work for some files).  If not, I don't see a problem of adding this as long as it falls back gracefully on failure (eg missing dlls or corrupt files) to using ffmpeg.\n. Heh - it's not a complete no - just might not be an advantage if (and that may be a big if) ffmpeg handles it.  If  ffmpeg's support isn't as good, then no problem at all.\n. yeah, we could add it then if it did come back - pls remove it for now, squash into this commit and we'll look to slot this in after eden.\n. Looks good, thanks :)\n. Looks fine to me - haven't build tested though.  A grep indicates you got them all.\nThere's some additional cleanup that could be done.  CSpecialProtocol::path_version could be moved to a static const in XMLUtils, and then the include for SpecialProtocol.h could be removed from GUISettings.cpp and XMLUtils.cpp.\n. to be honest it's a miracle that XMLUtils isn't already being used there, so IMO it's worth doing so (it makes much more sense to be including an XML utility class than something to do with a particular protocol).\n. Wouldn't a slider be nicer than an up/down button?\n. For touch we'd just have a volume slider which is far more intuitive + quick to use.\nEither way, it looks like this PR is not going to be going in.\n. Looks good to me.\n. Just a comment that the cause of the deadlock was really an incorrectly used lock in PAPlayer on AE.\nNonetheless, with the sorts of things that are done in these (potentially) non-gui callbacks, this code seems to be waiting to deadlock anyway.  There's a couple of potential issues though for those reviewing it to keep in mind:\n1.  Some of the callbacks might mess with things that should be done under a graphics lock.  This should probably be their responsibility though.\n2.  One of the callbacks could potentially be deleted out from underneath us, but this is unlikely given that they're all global (and would be hit already unless the deletion was protected under the graphics lock).\n. @Memphiz: The problem in your stacktrace is that paplayer is calling both OnPlaybackStopped then OnPlaybackEnded.  The first sends a threadmessage which is processed by appthread under the lock this PR was going to remove, while the second is sending the announce to the home window which then tries to lock graphics context.\nSo, a simple fix for this particular deadlock is getting rid of the two callbacks: Only OnPlaybackStopped should be called when paplayer receives a stop event.  OnPlaybackEnded should only be called once playback ends without stop being pushed.\nNext bug to fix is GUIWindowHome really shouldn't mess around with itself in the annouce message - instead it should set the flags which will then be handled next time it's actually processed.\nLast bug to fix is seeing whether or not the graphics context needs holding - need to review all messages called through this to make sure what needs locking.\n. @cptspiff: Your thoughts on pushing this in at this stage?  To my knowledge, there's no known issues with it in mainline.  I don't really like it, primarily as it's trying to work around the problem (graphics context held for a long time).\n. That's the problem - there's no known scenario fixed by it anymore :)\n. I think we'll leave this one until we know there's an issue.\n. Nice find - that was a nasty one :)\nAlternative:\nCStdString strValue = value;\nCStdStringArray values;\nStringUtils::SplitString(value, \" / \", values);\nif (values.size() > 1)\n{\n  m_mapArtists[trk_nr] += g_charsetConverter.UnknownToUtf8(values[0]);\n  m_mapTitles[trk_nr] += g_charsetConverter.UnknownToUtf8(values[1]);\n}\nelse\n{\n  m_mapTitles[trk_nr] += g_charsetConverter.UnknownToUtf8(values[0]);\n}\n. Monday will be too late with any luck ;)\nDoes this cover the main \"Tv shows\" listing - IIRC this is videodb://2/2/ or some such who's parent I'm guessing is videodb://2 ?\n. If you have the path that the items are being retrieved from, you could use the node type and switch to episode order if it's of type NODE_TYPE_EPISODE (or the recently added ones) - see xbmc/video/GUIViewStateVideo.cpp\n. Looks good to me.\n. Does the mouse pointer still move - i.e. can the user still use the mouse for everything?\n. Thanks - I'll ask the user to check whether this does what they want.\n. Confirmed it's exactly what the user is after - closing.\n. As this was both done against Eden (Eden receives backports only, unless they're Eden-only commits) and also because there's a bunch of cosmetics, I've taken the liberty of redoing it, so yet another PR for this (777 is a nice even number).\n. EndianSwap16() definitely isn't right - it'll swap it to LE regardless of host.  We want the equivalent of EndianSwapBE16 instead (currently non-existent), which won't swap on a BE host.\nI personally don't mind if ntohs is used if it's universally available, but given it's not currently used in the XBMC codebase, perhaps using EndianSwapBE16() is better - will append a patch.\n. I probably typo'd the random string of characters in my grep :p\nI don't have any preference whatsoever - I merely took the route of least resistance that didn't involve having to play with headers (I think  is OK on win32 but didn't want to be bothered looking into it).  You're welcome to change it to use ntohs if you prefer - send details and I'll slot it in.\nIt'd be great if you (or someone) could supply a sample file so that others can test it out - they appear to be thin on the ground.\n. Just link me the fixes and I'll pull 'em in to this branch.\n. wave files seem to work fine for me.  Have checked the .l16 file you linked to - works fine.\n. If it takes ~10 seconds to switch resolutions (your log doesn't go back far enough to verify this) then this would be expected.  GetFrameTime() returns the projected next frame time which is based off the last call to UpdateFrameTime().  If this was 10 seconds ago (i.e. the main thread has not rendered for 10 seconds due to it farting around switching resolutions) then this is to be expected.\nAn alternate fix might be in CGUIDialog::DoProcess() check whether we've rendered or not yet and set the show time there:\nif (!HasRendered())\n  m_showStartTime = currentTime;\n. Why didn't it work?\n. Both - once rendered, the frame timer should essentially be the same.\n. I'll see if I have time to take a look tonight.\n. Hmm, yes, it will need resetting - I only tested it once :p.  I'd do it in GUI_MSG_WINDOW_INIT I think (where the previous code was to set it to the frametime).\n. Looks good.  You and elupus can make the call regarding Eden.\n. #778 has been taken care of now, so given this has already seen some review, pushing to @davilla to make the call.\n. I should think it should be up to the client normally to do sorting, but at any rate, check out how CGUIViewState is used in CGUIMediaWindow.\n. Sounds good.\nOn Tue, Mar 20, 2012 at 11:43 PM, AkelGe <\nreply@reply.github.com\n\nwrote:\nIl giorno 19/mar/2012, alle ore 19.55, jmarshallnz ha scritto:\n\nI should think it should be up to the client normally to do sorting, but\nat any rate, check out how CGUIViewState is used in CGUIMediaWindow.\n\nI agree with you and Im reading\nhttp://upnp.org/specs/av/UPnP-av-ContentDirectory-v4-Service.pdf to\nunderstand how Sorting and Searching SHOULD work, but, in my experience,\nmany UPNP controllers DO NOT sort items, but pretend to receive them\nalready sorted, so using a default sorting method (depending on context)\ncould be a good thing. Ill take a look to the code piece youve pointed\nout and see if I can come out with a good patch. Plus, if I understand\ncorrectly some piece of codes, in GUI there is already a sort of default\nsorting method, depending on context.\nA.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/783#issuecomment-4592644\n. It seems to me that the best thing would be the default orderings that GUIViewState gives would apply, rather than whatever is set in the GUI.  Currently we don't have an easy way to specify that as the defaults are overridden when the viewstate is loaded from the db.  We could factor this out though if we want to use that method.\n\nFor most stuff it's sort by label.  For songs it's sort by song number.  For episodes it's sort by season/episode number.\nAs it turns out, with current master, sort by label should handle episodes, shows and movies just fine (as we set the label by default to \"1x03. ep title\".  It looks like songs won't quite do what we want, though a fairly simple change similar to fec89e42bb84ee39dc could be used in CMusicDatabase::FileItemFromDataset.  I'm not sure what would make most sense though - it would depend somewhat on how the client generated the listing (if it's a search then something like artist - album - song might make sense, if it's an album listing then disk/track/song would make sense).\n. Looks much better.\nThe only potential issue I see is with those controls that do do something when  et. al. are set to their own ID.  In particular containers use this for wrapping.  I think that's the only case.\nSome skinners may be relying on this \"feature\" to set up the wrapping for them.\nTwo options I think:\n1. Stick with how you have it, potentially breaking some skins.\n2. Check for empty action in the wrapping code and assume empty == wrap.\nNumber 2 seems like reasonable behaviour to me.\nIs this for after Eden?\n. Great - ready to go then for post-Eden :)\n. Much cleaner now - nice work!\n. Just git add the new files, then git commit.  Push up to your patch-1 branch and they'll magically appear here.\n. For next time, you can update a pull request just by adding further commits to the branch you did the pull req from.  No need for a new one.\n. If you want to learn a bit more, try interactively rebasing your commits to get rid of the fixups:\ngit rebase -i HEAD~3\nthen specify fixup (or squash, depending on your version of git) your fixups into your first commit.  Once done, push back up (will require a forced push due to the rebase) to your repo and it'll automatically update the pull request.\n. Nice work - you'll be a git pro in no time :)\n. My guess is longer if you ask than if you didn't :p\nIf a dev is assigned then it's their job to review and make a call one way or the other.  It's not yet been assigned a milestone, so is still at review stage.\n. Sure, but to be quite honest a week is nothing at all - it has nothing to do with how long it takes to look things over if the dev in question doesn't have anytime at all to look at it.\nYou might want to address what Jezz_X was referring to back in the previous pull req though: Which scraper(s) give you this information?\n. My opinion (ya'll know I have one...) is that this is something ideal for artwork add-on packs.  They're official logos after all, so ideally shouldn't be changed.\nFurther, it really only makes sense once XBMC actually supports ratings from different countries out of the box.  As you'll be aware, there's several GSoC proposals regarding scrapers this year, so hopefully we can get one of them to start looking into the potential for this.\nAt the very least, though, you'd want the various sites we scrape from (themoviedb.org being the main one) to support multiple ratings - they may already do so.  Then XBMC would need to scrape all the rating information and the choice is then up to the user at display time (as it's silly to demand a rescrape when the user decides they want to switch rating systems).\nCheers,\nJonathan\n. We were pretty clear 2 months ago what it would take before something like this got in. If you'd had questions you could have asked then, or you could have simply said that you weren't in a position to work on it further.\n. Looks good - pull away.\n. 7ab55c713a50cd9ae90ff2d looks ok, but the code is ugly here (it was before this commit) and delicate, based on the other changes here over the last few months, which suggests some cleanup is required.\nI'm not sure whether it's actually needed for Eden or not - I'd prefer not given that the code is delicate and given the code works fine for everything except this one case.\nThe repeats are created in ValidateOffset() so this won't affect creation of new items every frame anyway, right?\nWe do need a different way of handling this though.  The idea is actually quite simple: \"just\" add additional items whenever the item content is set.  If instead of just adding what we need, we instead repeatedly double the items in the list until we have the number we need, we don't ever have to regenerate them, or worry about shuffling them around at all, as they'll then loop perfectly.  We can then generate them when the item list is filled and don't need to worry about it after that.  It also may simplify the offset logic (not sure)?\n. Yeah - no need to double the content repeatedly - just needs to be repeated enough until you're sure it will always fill the container.\n@pieh: this seems like a much better way to do things than the current stuff?\n. I think it's a little tricky to clean up much, as currently you need to know:\nitem number that was focused before\nitem ptr that was focused before\nwhether new items are added/removed\nThe last one could be return bool from a function that iterates the items and updates.  Not sure about the others though? \n. A smartptr for m_lastItem will be fine, though you still want to be able to reset it should something no longer exist I think - maybe this will be automatically taken care of anyway though.\nIMO just kill off the old extra items and recreate new ones as needed.\n. Yup, looks good.\n. Looks OK to me.  What action does SKIP_NEXT/PREVIOUS have when in a menu?\n. I'll split it into two functions I think, or maybe cptspiff will ;)\n. Ok, split into separate functions, so no more dynamic typing.\n@jimfcarroll what exactly is wrong with GilSafeSingleLock usage in this case (agreed it's wrong in other cases).  As far as I'm aware the only thing that could take a while is taking the lock.  Once we have the lock we should be fine to grab the GIL back again.\n. Yup, agreed regarding the codemixing - the one in RemoveSingleControl is wrong as it calls PyErr_SetString while not holding the GIL, whilst the call in AddSingleControl is fine, right?  Will fix.\n. @jimfcarroll: that better for the CPyThreadState/GraphicsContext lock?\n. Ok, I've switched to .compare(0, len, \"foo\") to get rid of the strncmp, and switched to the CDatabase::BeginTransaction() et. al.\nShould now be good to go.\n. I've noticed a few issues:\n1. With the changes for not caching texture prior to loading them in the large texture manager, some URL formats that we use for the cache are attempted to be loaded by the texture loader, but it doesn't recognise them leading to spurious errors.  We instead should resolve the cached name to the actual texture and load that (ideally of the size appropriate for caching so we can just pass the texture buffer across to the cacher and save the whole re-load just to cache).\n2. thumb://foo@bar textures are being cached with the filename portion of the original path (bar) being appended.  The extension thereof is then used for the cached texture.  So BMP's are being cached as JPG or PNGs (depending on transparancy) but are being named .BMP.  Worse, embedded movie thumbs are being cached as f/fa1048a8.mkv etc.  (The reason we used .tbn originally was actually valid, who would have guessed?)\nI've started work to clean this up, so will modify the pull req with my changes in the next few days for re-review - these existing commits won't change, they'll be new commits on top.\n. A big-ish update, which brings this ready to go I think.  Changes:\n1. Minor workaround in 857bb8a for threading issues.\n2. Switch from thumb:// to image://[type@][/transform?options] for texture URLs - allows future VFS and transforms for webserver/upnp etc. as per #822.\n3. The extensions used for saving textures are now correct - previously we'd use the original files' extension, regardless of whether that was correct for the cached image.\n4. Refactored the texture caching so it uses CJpegIO for loading (faster) and swscale + new orientation routines for resizing before cache.  Less reliance on CxImage functions.\n5. Refactored texture loading with the background image loader.  Before it cached to disk, then loaded the cached version.  Now it loads into a texture and copies the texture data into a job for caching, returning directly.  Speeds up first time texture loading considerably.\nI'll note that it's not perfect.  Still TODO is:\n1. Figure out how to cache multiple versions of the same file.  Possibilities are to cache using the same file with different post-fixes for sizing/orientation info.  ATM we just cache to a different hash as the input is different.\n2. Ensure that the cache jobs that take texture memory are prioritised over disk-based caching jobs - reason is they first of all are chewing up a few MB of RAM, and secondly they're already half done.  Need to add support to CJobQueue for overriding previous jobs, plus also ideally adding to the front of a FIFO queue, and perhaps also specifying priority (no point pausing those jobs as otherwise we have a lot of RAM sitting there).\n3. Add support for caching to JPG/PNG in memory, for webserver duty (#822)\nPlease review a8afce6 (new URL format for textures) as well as the last 13 commits primarily - the others are basically unchanged other than rebasing to bring up to date.\n. Ok, change made.  I reckon it's ready to go as it's going to be - quick signoff?\n. Thanks for the review!\n@cptspiff anything else you want looked at, or happy for me to push the big green button :)\n. Looks good.\n. Please use trac for bug reports.  We're currently using issues only for pull requests.\n. Ok, updated, including some doxy and a unit test to confirm it does what it says :p\nA quick review would be nice (just assign milestone when done).\n. IMO it's clearer as it is, plus the current version works on std::string in case the world ended and we dropped CStdString.  Will add some more tests.\n. What really needs testing is whether win32 paths work.  i.e. you should be able to mount your NAS as a windows drive letter and then mysql should still work that that as well.\nThis affects only the video + music libraries using mysql, ofcourse.\n. Thanks :)  Looks all good - really appreciate the testing.\n. Looks fine to me.  For exceptions at startup I'd dump it in temp I think as at least you know it's writeable.\n. One thing to consider is what should we do (if anything) if we want monthlies, in the remote possibility that the monthly merge thing works out?\n. So an April 2012 release would be 12.04?\n. That's what I was getting at - if we want 11.foo, then bumping to 12 right now is probably not the way to go :)\nAnd about 3% confident :p\n. I think the first few will be considered slightly more stable than nightlies until we get an idea of how well it will work.  i.e. they'll be released as alpha quality most likely, so using frodo-pre for the add-on repo seems like the way to go.\n. I don't have a problem with 12~alpha1 if that is deemed the way to go.  I guess it perhaps satisfies the idea of monthlies being semi-stable pre-releases of the next stable.\n. Well, given that we're just pissing around choosing colours here, why not just make a call and push it in :)\n. Fine with me\n. There's some more in XBMC_PC.rc:\nFILEVERSION 10,05,0,0\n PRODUCTVERSION 10,05,0,0\n. If you want it to scale like any other UI screen, then implement it the same.  Ensure the window is scaled correctly by setting m_needsScaling to true and (optionally if it's not already done) set m_coordsRes accordingly.\nThen just call g_graphicsContext.ScaleFinalXCoord() etc. to scale the rect as needed.\n. Yup.  I'm not completely sure, but I think you could also do the same thing by using m_coordsRes directly (IIRC it has info on the width + height in the RESOLUTION_INFO struct) and then you don't need to know the overscan stuff.\nBasically you'd change it to use coordinates 0,0,width,height, set the scaling resolution to m_coordsRes and then scale them.\n. Great :)  Mind squashing the two commits together, and we'll look at getting it in.\n. Coding exercise looks fine (check the includes though).\nIMO this belongs where it is, but don't have a strong opinion one way or the other.  In my experience, those normally interested in altering these are the same people who spend hours on end collecting art and touching up their nfo files.\n. Squash, yes.\nIt's not clear to me that \"insert showname\" is a better default than \"insert episodename\" here.  If you use the label (GetLabel) instead, you'll at least get \"1x03. title\" for the episode, and could then quite possibly ditch the special-casing for tvshows (by default, the label will be set to the title for movies, and the filename for files anyway - that's what's displayed in the UI, after all).\n. Insert disc for:  seems just as reasonable - it's unlikely that you have a single disc for the entire show, after all, so the episode info gives more info.  Plus, it's pretty obvious what you just clicked on anyway, right?\nThus, the label seems the best fallback to use in the case that the user didn't specify it in the stub file.\n. The former makes sense if you have more than one disk.  The latter makes sense if there's only one.\nBoth require additional information for the user to determine exactly what disk to insert, and this information is likely to be provided anyway by the user.  If the user doesn't like the behaviour, you've added a nice way to for them to override anyway.\nI reckon with the extension stuff fixed this is ready to go.\n. Cheers\n. Looks OK from a quick once over.\nWould probably do with some eyes on whether executing add-ons in this fashion is what we want.\n. This one should stay on-hold until my texturecache changes are in I think, as we mayaswell break things in one step :)\nI'd like some feedback from JSON clients though in the meantime.  In particular:\n1.  When you request an image at size (w,h) can they be treated as hints, or do you want it that actual size (or at least one dimension at that size as I presume aspect ratio should be respected in either case)?\n2.  Do you actually need XBMC to transcode, or would you be happy with just PNG or JPG (we'd never send anything else).  Essentially XBMC uses JPG if it can (i.e. no transparency involved), else uses PNG (if transparency is required).\n3.  XBMC will be returning the actual thumb URI in the thumb and fanart properties in the future, rather than the cached version.  Thus, you'll need to request the image from XBMC as the path is likely relative to the XBMC machine (it could be local, it could be an http URL etc.).  Thus, the URI for the resource is likely going to need to be constructed as it would be for this image fetcher.  I presume this isn't an issue? (As a bonus, it would mean that the resource always comes from the same place).  In fact, it might be better if XBMC sets the URI that JSON clients would then use to fetch in the thumb and fanart properties?\n. It all depends where we put the code.  We could for example put the image transformation/URL munging stuff in a vfs class (eg by extending and always using the current thumb:// URI format, and adding a directory/file class for it).\nThe problem is that it's not really a VFS style operation - on image open you'd have to load the image and resample it down so that any subsequent Read()'s read from the resampled file.  The user of the VFS couldn't rely on Stat() returning a correct filesize (unless we're going to load+resample it there as well) though I suspect noone would actually do this in practice (we could just return for the filesize 0 if a resampled image wasn't already in the cache).\nBut yes, unless it was done via the VFS, it probably would break image retrieval in a lot of clients.\n. @elupus: Any comments on a transcoding image file service for the vfs?  i.e. transcodes if needed on Open (possibly Stat as well?) so that subsequent Read's are done from the transcoded \"file\".  The texturecache would then handle storing the transcoded image for re-use later.\n. Agreed.  It would probably make sense to have an image-specific URL (similar to this) that could then pass through internally to the vfs implementation to handle images.  Then we can depreciate direct vfs access.\n. Would we need to differentiate between /image/ and /image/transform/ given it's an image-specific URL?  If no width + height are specified, then they get the direct image.\n. 1. Couldn't they use /image/ for both (drop the transform completely) ?\n2. I was planning on dropping the quality and format, so no width/height specified just returns the original image.  width/height are then used to grab smaller versions.\n. Thanks @da-anda but I must ask why do we need all that?  I'm not sure of the application where you need the ability to stretch an image, or to crop an image which couldn't otherwise be achieved on the client relatively painlessly.  In particular, this would slow things down as it makes little sense to pre-cache arbitrary sizings in the hope that it might be used again.\nI'm more than happy to cache power of 2 sizings of images as this can be used for other stuff (mipmapping for example).  But this would mean that either we define the sizings, such as kept aspect ratio inside power of 2 dimension, or power of 2 divisors of the original dimensions.  Either way, the width/height requested by client would be a best match.  XBMC will be using this for any image control that requests the image of a particular size.\nAlso, I wouldn't want to return a jpg if the image has transparency (the only reason we'd be returning a png is if it was transparent - everything else is jpg), so unless there's a specific reason the user would want a conversion to a larger png file, the format parameter seems superfluous.\nThis isn't ruling it out, ofcourse.  What the client want goes.  But it would mean additional effort into the image caching which XBMC itself doesn't require.\n. Cropping images seems like a narrow use case - the results of which are patchy at best if done arbitrarily as it depends on where the main content of the image is anyway (which is one of the reason we have the flipping option for fanart), so I don't really give much weight to that case (agreed it's a PITA to do on the client, but will any client actually want this?)\nScaling can be done - the question is whether XBMC gives the client exactly what they're after (exact dimensions) or whether it gives them something that approximates those dimensions.  I'd prefer the latter as it means the cache has instant dual use (mipmapped thumbs within XBMC itself).  The former means I need to support arbitrary sizing in the cache which isn't as efficient (imagine two clients, one of which wants things 200 pixels wide, the other 195 pixels wide, as a silly-but-quite-possibly-could-happen example).  Almost all clients we're likely to have are going to have no problem scaling an image, and ofcourse XBMC will give an image as close as reasonable to the size requested (eg nearest power of 2, aspect ratio kept for example).\nAs for actual URIs, I don't think it matters all that much: As long as the client can easily get from whatever we set in the various item fields to determining the URI to fetch the image from we're all good.  Initially I was going to supply image:// URIs in the thumb and fanart fields as currently clients are accessing them via the VFS, so once the VFS for image:// is hooked up, backward compatibility will be maintained.  Obviously for JSON-RPC this can and should be done differently (and IMO dropping the VFS support should be a high priority, given the obvious security issues) - the various examples above sound fine to me.  The only potential issue with using library id's is it means you can't necessarily get art for files that aren't in the library.\nAnd yes, once the video thumbs hit the cache there's the potential at least for things other than just \"thumb\" and \"fanart\" - they're fetched from the database using type (movie/show/person/episode/set/musicvideo) and id currently.  See my video_thumbs_to_cache branch if you're interested in the details.\n. Several points:\n1.  If the image is opaque, then we cache as a JPG.  Thus, webclients will get JPG if the image is opaque.\n2.  If the image is transparent, thne we cache as a PNG.  Thus the webclients will get a PNG if transparency is required.\n3.  Remember that the cache is used for XBMC and the clients, so we typically use a slightly higher than usual quality caching to JPG.  Obviously this may need some optimisation (though noone has ever complained about the quality, which suggests it's at least high enough - perhaps it could be lowered though).  The size in bytes is more controlled by the image dimension though, so getting that sorted is a higher priority.\n4.  Given we don't want to stretch, I agree about using size rather than width/height.\n5.  Only thing now is whether the size requested by the client is absolute (client MUST have it less than or equal to that dimension) or an indication (allowing XBMC to send back a slightly larger version if it's closer in size).\nAdvantage of saving only power of 2 sizes is it gives instant mipmapping (better quality within XBMC) while also being trivially easy to store the different sizings in the cache.\nExamples:\n1. XBMC caches posters at 10x16, 20x32, 40x64, 80x128, 160x256, 320x512 and possibly 640x1024 pixels large.  The biggest one it has would be the largest of those sizes smaller than the source image.\n   a) client requests size=128, then we return 80x128.\n   b) client requests size=100, we return 80x128.\n   c) client requests size=80, we return 40x64.  Cutoff for decision is based on geometric mean of 64 and 128.\n2. XBMC caches a poster of size 600x1000.  It caches it at full size and all powers of 2 less than that 600x1000,300x500,150x250,75x125,32x62,16,31.  This is basically identical to case 1, except we base the powers of two on the original image size.  You'll notice there's a 1:1 mapping - i.e. only a single size in 2^k...2^{k+1}.  Requests are thus handled as in 1.\nEither of these is nice and easy - XBMC can quite justifiably keep copies of all sizes in it's cache (subject to cache size/hitrates etc.) as no matter what the requested size, we have one not too far away, and that size can be defined purely based on powers of 2.\nArbitrary sizings are a little more difficult, as XBMC has to keep track of all sizes and has to then decide whether to cache a new one or choose one close by (eg 195 is requested, and we have one at 200 - should we return it or generate one at 195?  What about 190?)\n. Given that we're talking about media art and not skin art, the first is somewhat of a red herring.  It could be done later easily enough though - my point is there's no reason whatsoever for XBMC to send something other than JPG/PNG, and it will never transcode from what is stored in the cache (whether it transcodes before it hits the cache is a separate issue).  Skin images never end up in the cache to begin with.\nAs for compression, unless there's a real size advantage (it only affects JPG after all) once we've optimized the quality for the cache to begin with, there's no point discussing further.\nFor sizes, for now I'll do power of 2 - can easily be changed later anyway.\n. We cannot do fixed sizing unless JSON-RPC is happy to accept a medium sized image when they request large, should large not be available.  Further, it would be shitloads less effort to just return the nearest size rather than a specific size.  Specific sizes will mean clients will certainly need to be rescaling anyway (as I doubt whatever it is that we set is going to be what the clients are actually displaying) so IMO just returning the closest image size as that that is requested will suffice.\nAs for quality, let's see what file sizes there are before we mess around too much.  Main advantage would be for WAN connections, which isn't really what this is designed for.\n. The changes look fine, though I think we need to pause and consider whether or not there might be better ways to handle this and other groupings in future.\nIf, instead of splitting things up with a bunch of special-cased queries, we first list movies then run it through a grouping stage, a lot of the existing special-case stuff for genres/actors etc (primarily due to the silly pathislocked stuff) could go away.\nEssentially a map/reduce stage.  The advantage is it greatly simplifies the db queries.  The disadvantage is we need the code to do the map/reduce (which we have, it's just special-cased for each particular version we run at the moment).  I'm not sure how feasible it would be to generalize it.\n. Sure, so you'd use the reduce step to combine the metadata from the movies in the group into metadata for the group.  Exactly like you've done with MAX/AVG in the SQL, it'd just be done outside the db.\n. It looks OK, though I'm not sure about two things:\n1. You're assuming that find_first_not_of returns between -1 and size_of_string-1.  I think this is valid (as if it cannot find a character different than that passed, it returns npos which is defined as -1) and if it can find a character then it will be at most size_of_string-1.  I wonder whether a comment to this effect might be useful?\n2. You're assuming that strtol() et. al. set endPtr to NULL in the case where endPtr points off the end of the array.  It's not obvious to me from the docs of strtol() that this is what happens - indeed, it appears it should (on success) point to the first character in the string, which would be the NULL character in this case (not a NULL ptr).  See http://linux.die.net/man/3/strtol for example.  I'm not sure whether this is the c++ standard definition, though this: http://www.iso-9899.info/wiki/Converting suggests it might be.\nLastly, we should consider using whatever is used here in StringUtils::IsNaturalNumber/IsInteger() as well, though I'm not sure whether those functions need to handle base conversion - your thoughts?  (Obviously you won't want to include StringUtils here though as it'll bring in CStdString, so perhaps just isolate to helper functions in CVariant for now?)\n. Looks good to me.\n. Pretty sure this should be fine.  The reseting is better (IMO) than always processing (less processing for controls that are set invalid over multiple frames while invisible).\n. If they're grouped, you can then setup a static map from LISTITEM_PICTURE_FOO to SLIDE_BAR.  Then you do\nif (info > LISTITEM_PICTURE_PATH || info <= LISTITEM_PICTURE_FOO)\n{\n  // check info tag\n  // lookup LISTITEM->SLIDE map\n  // call CPicture\n}\n. You have 2 options, yes: 1. Handle via the switch as you have done. 2. Use a lookup table for it.\nIf you have the lut ordered by the LISITEM_* one then number 2 would be faster as well, as you can hit the lut directly using the LISTITEM_PICTURE_FOO - LISTITEM_PICTURE_FIRST offset.\nThe current 68 line switch block would reduce to 3 or 4 lines, plus a 17 line static array.  You'd want to document in GUIInfoManager.h that the ordering of LISTITEM_PICTURE_* is important.\n. Heh - just commit to your branch and push it up and it'll appear like magic, yup :)\n. Heh - just commit to your branch and push it up and it'll appear like magic, yup :)\n. Yep - can kill a few more lines yet though :)\n. Looks OK to me.  Now squash them down and we'll be ready to go.\n@cptspiff Anything else you spotted?\n. I don't think two locks help here, assuming that the lock is there to prevent more than one thread accessing libcdio - you're still going to end up with one stalled while a long operation goes on.\nThe UI thread should never have to wait for anything.  So, the UI thread should only access local information inside the class and never call into cdio if that is what takes time.\nI'm not sure what threads are accessing the class, and what they actually want to achieve (eg are they just wanting to know if disk info is fetched, or do they actually need the information regardless of how long it takes) - perhaps you could detail what threads are involved in accessing this class?\n. Ok, so by the looks of it, m_cslibcdio can be dropped, as it is already locked internally anyway (see CCdIoSupport::GetCdInfo).\nThus, your back down to your single lock, you've just released it during the potentially long operation when nothing needs locking.  Sound good?\n. Mind squashing it down so we can get an overview of the changes? :)\n. nm - can get it from the .diff.\nThe only other thing I'd suggest is limiting the use of .Leave/Enter.  It's better IMO to use scoped CSingleLock's so you don't have to worry about forgetting a Leave (or putting the Leave in the wrong spot).\n. Yup - exactly.\n. Alternate is setting properties for the bits you want to filter in the FillItem stuff then filtering on the property in the browser?\n. If we're going to use our servers, then we can potentially get away with doing it without the add-on - not that it really matters - either is fine in my opinion (the add-on could be used easily by other scripts and we don't need to bother exposing it, though that would be trivial).\nRest of the code looks fine from a quick scan.\n@garbear your thoughts on the add-on thing?\n. For this, country is probably enough.  For weather, we'd probably want nearest city if possible?\n. Same for me - both are equally inaccurate (it thinks I'm 600km away).\n. Do we need to be more accurate for weather?\n. -1 on any new settings.  I'm sure we can enable better cache management by default without user interaction being required.\n. Looks OK to me.  Obviously needs syncing with #728 somewhat to make sure things are nicely divided.  Am not sure if the screensaver stuff needs to be put in the same place or not.\nAlso, given that most of these functions are being duplicated across the JSON announcement stuff, it might make sense for the internal XBMC bus to be somewhat similar.  eg when a video or song stops playing we currently use 3 separate callback mechanisms to trigger various behaviours.  This is orthogonal to the actual PR functionality though.\n@jimfcarroll Your thoughts on this one?\n. Ok, with @jimfcarroll saying this can go in, given that this is so similar to #728, they could potentially be merged together.\nI see two ways to go:\n1. Just stick with a few callbacks (one general one for JSON stuff, and a few others for things that make no sense to be broadcast, like settings changes).\n2. Have lots of callbacks, with XBMC basically handling the switch from the JSON announces into individual callbacks for python.\nI'm not sure which is the better way to go (eg. should we just force the python addon do the switch themselves?) - I guess one potential argument is that it allows a more well defined API?  (In addition, it makes it slightly more effort to add new ones, which might mean we better bump the API versioning).\nIf we think things will change later once @jimfcarroll gets his changes done (the chances of the python API being restructed following that seem high?) then it might not be worth the effort to split them up now.\nThoughts?\n. Changes look sane to me - assigning to @elupus\n. Seems to me that the 3 new functions can be (and given their names should be) const, but it's @elupus domain so will yield to him - no big deal anyway!\n. I think all 4 of these should be const'able (heh):\n{{{\nbool AcceptsData()                                    { return !m_messageQueue.IsFull(); }\nbool HasData()                                        { return m_messageQueue.GetDataSize() > 0; }\nint  GetLevel()                                       { return m_messageQueue.GetLevel(); }\nbool IsInited()                                       { return m_messageQueue.IsInited(); }\n}}}\nAll the functions they call are already const.\n. go for it.\n. Does it make sense to think about a more content-agnostic naming for these, or are we too far down that road (just thinking about things other than movie/show/musicvideo/episode) to change now?  We can ofcourse always do a more capable one later once other categories are available.\n. Looks like 2fca2f5 and f422e79 could do with a quick rebase to minimize the cosmetic move?\nc14ef62 could be gotten rid of later if/when SetDetails*() does an update query.  Can be done later no problem though.\n7c36585 could probably have the cosmetics move rebased out as well?\nRegarding music library not allowing for removal - reason is that it's done on the theory that everything is in the song tags anyway, so a rescan (which would not be triggered initially, but would be as soon as something is added to the folder) would see it come straight back again - there's no excluded list here.  The music scanner is actually more intelligent than the videoscanner with respect to how it handles changes (no separate cleaning required to remove stuff, changes to the files will be picked up on scan etc.)\nI bet you're looking forward to marking HTTP-API as officially depreciated :)\n. Agreed regarding content agnostic - given it's not really like that now, there's no point pretending it is from the API perspective (particularly as we already have the Get routines for each type).\nWhat I meant about VideoLibrary.RemoveFoo() and VideoLibrary.SetFooDetails() was that the second one shifted the newly added methods of the first one about.  If you edit the second commit and break it into new stuff + shifted stuff, the shifted stuff can probably then be squashed into the first, leaving 2 clean commits.  No big deal - just something I noticed.\nFor the songs, it looks like you're wanting to alter the information in the songs table?  If so, you really want to go straight to the song table itself, rather than filtering everything through the vector of CSong's passed in GetAlbumInfo() which might not be related to actual songs in the user's collection at all - eg the user may have just 1 song from the album, but some small info (track number, track title, not sure what else) about all tracks from the album is downloaded from allmusic.com etc. when the album info is downloaded.  It wasn't clear to me which one you were wanting to change.\n. Yeah, adding to CMusicDatabase to set details for a song based on database ID sounds good to me.\nOnce done I can review again if you like, but IIRC the rest looked pretty good.\n. I'd be tempted to switch it to delete from the link tables but not the song table, then modify addsong as needed to do an update.  A shitload more work, but it means you don't need to return a new id, which IMO is counter-intuitive.\nOne potential way to modify addsong would be to on first add just add a blank row (so you get the id) then do an update query.  If id is already known, we just use the update query.  This is how the videodb does it.  It's a little slower at insert (2 queries) but we don't insert much anyway, and when we do it's invariably under a transaction.\nThe videodb update methods should be a little easier to convert so they re-use the same ID I think?\n. I don't think you have to?  All you need to do is change AddSong() to pass the existing songID in.\nIf the songID is not given (existing AddSong implementation) you do an INSERT query and just add a blank row (and assign the resulting rowid to songID).\nThen you just execute an UPDATE query on the songID row.\n. How about:\nINSERT OR REPLACE ?\nMySQL might be just REPLACE based on the sqlite docs: http://www.sqlite.org/lang_insert.html\nREPLACE INTO foo (idFoo, blah...) VALUES(existing_id, blah...) works in sqlite3 no problem.\n. Looks good to me - nice work!\n. The settings nazi has to ask (without bothering to check the code in detail :p) whether it's reasonable to have the new setting.  If it performs well enough on most hardware, why not just have it on?  I presume the user can set it back to use whatever the DXVA default is anyway via the VideoOSD, right?\n. Looks good to me once squashed down - your thoughts @CrystalP \n. I've done a more thorough job in my i_dont_like_paths branch:\nhttps://github.com/jmarshallnz/xbmc/tree/i_dont_like_paths\nAm waiting on some tests - if you (or someone) can do it I'd be happy to create a pull req from it.\n. Nice work on the whole :)\nI really think we need to look at implementing a URI scheme for .cue files so that they have unique paths as far as XBMC is concerned - this gets rid of all the special-casing then.\n. git push yourrepo master\nAs you've changed history it should give you a warning that it failed to do it.  As it's your repository, you're free to rewrite history, so you can do a forced push:\ngit push -f  yourrepo master\nReplace master as needed with your branch (as you do more stuff, you'll probably want separate branches for each thing).\n. The initial implementor rarely finds the bugs ;)  Note that you can use the IsSamePath() or whatever it is for some of 1c4cc00 (infomanager bit).\nThere's a potential for a bug here though - eg what if we want to implement the ability (later on) to alter the startoffset by sending an UPDATE_ITEM message?\nThus, I think we should seriously look at incorporating the cue stuff into the URL if at all possible.\n. Yup - I'd use IsSamePath in the infomanager and playlist bits.\nFor the URI scheme, the idea is to follow something like CSpecialFile().  The idea is that you use a URI scheme such as cue:/// whenever you create fileitems from a .cue sheet (so in CFileItemList::FilterCueItems I think it is - you'd still set m_lStartOffset, just change the path as well) and then have a IFile derived implementation that simply does something like:\nCURL url(path);\nCStdString originalPath = url.GetHostName();\nCURL::Decode(originalPath);\n// call normal CFile() operations on originalPath.\nGood luck!\n. rar/zip are similar, but much, much more complicated.\nI think you'll find CSpecialProtocolFile/CFileSpecialProtocol (depending on how up to date your master is) is almost identical to what you want.\n. Nope.  Copy CSpecialFileProtocol.cpp/h to new files CCueFile.h/cpp.\nModify them so that they take (and perhaps a helper to assemble) a cue:// URI, decode it and drop through to a CFile member (m_file as per CSpecialFileProtocol).  I wrote the code for this above.\nThen add to the FileFactory so that this class is returned.\n. Given that the fix could be incorporated as part of the fix for this problem, there's no problem with continuing here - just commit your changes and they'll show up.\n. Agreed - always better to have 1 spot to change rather than a bunch.\nHowever, all the commits are related, so could be considered a patch series, which is typically how the git dev model works.  Your welcome to open a new one for the cue:// URI stuff if you prefer (eg if you're developing it in a separate branch).\n. Whenever working with remote branches (pull/push) I always suggest you use the full form:\ngit pull (--rebase) repository remote_branch\ngit push repository remote_branch\nYour repository is probably \"origin\" - the remote_branch can be whatever you like - I name them the same as the local branch.\nThen when you go to your github you'll see the remote branches and can do a separate pull req from them.\n. On thinking about cue:// stuff, I wonder whether it might be more trouble than it's worth - the problem is you have to handle things like URI processing (URIUtils has most, but not necessarily all of these) - see the proliferation of IsStack() for example.  I'm sure you're probably hitting some of these - your thoughts?\n. Yeah, they should be copyright from 2012 onwards.\nSee CStackDirectory and CFileItemList::StackFiles.  When we have foo.part1.avi and foo.part2.avi they're stacked into stack://  , \nBecause of this, we have to special-case a lot of the code associated with URI parsing (eg to get the parent folder of the stacked \"file\" you need to parse the stacked URI to fetch the first real path then re-call the parent folder code on that).\nA grep through the source for \"IsStack()\" should show you what you're potentially up against.\n. Yeah, the more I think about it, the more I think a cue:// filesystem layer is a bad idea.  There's far too much unrelated code that it would hit.\nInstead we have two options:\n1.  Don't do anything and just push this in as-is.\n2.  Modify things so that m_lStartOffset isn't used for two different (but related) purposes (matching items versus describing the start point).  This could be done (for instance) by adding a CFileItem member (eg m_matchPath) specifically for matching in the IsSamePath() function.  If empty, we'd use the path, otherwise we'd use this other member.\nFeel free to close and reopen a new one if it helps you sort out your git repo :)\n. I think we keep it simple: It wouldn't have anything except for cue stuff, whereby it would have path + startoffset.\n. I think it would be better, yes - saves the function indirection.\nYou'll want to guard the access to the vector though via  CSingleLock lock(m_lock);\n. A separate header (or using rendermanager or something similar) seems the best way to go, yeah.\n. For a start you can get the extracted video thumbs done pretty easily.  All you need is a map between whatever the orientation is giving you (rotation in degrees counter clockwise - might pay to doxy exactly what it is?) to EXIForientation-1 which is what we use in the texture stuff.  Then instead of using swscale to dump out to the texture directly, hook it up instead to CPicture::CacheTexture() which will scale + rotate for you.\nEXIF rotations you want are 5 and 7 for 90 degree rotations, and 2 for a 180 degree rotation IIRC.  I presume there's no reflection involved?\nFor doing it on the CPU you could use the stuff in CGUITexture::OrientateTexture() - this assumes only 90/180 degree rotations or reflections and just modifies the texture coordinates accordingly.  It's setup for reversing the rotation, so you might need to muck around a little bit.\nFor doing it on the GPU you need to throw another matrix on the stack for the vertex processing that does the same thing (eg for 90 degree rotations you invert one of x or y (to width-x or height-y) then swap them.  For 180 you just invert both x and y.\n. This commit partly moves towards this for the thumbs:\nhttps://github.com/jmarshallnz/xbmc/commit/3ea3e99a6607ea14050c7707fad0673d01daad0a\nBasically you'd then set the orientation param (first zero) appropriately and you'd be done.\n. If you fix the comment about degrees (eg to \"degrees counter clockwise\" if that's what it does - you need to check ofcourse!) IMO this is fine to go in even before the GL side is done.  @elupus you happy with that?\n. @JezzX Perhaps a download of the skin might make it one step easier for those that want to test it out.  Perhaps it's identical to the confluence_lite already available?\n. We're not yet using github issues for user support.  Please either go to forum.xbmc.org or trac.xbmc.org for that.\nIf you have a fix, feel free to open a pull request.\n. These functions are used only in XBMChttp.cpp (HTTP-API) which is going bye-bye as soon as possible.  IMO these type of functions should not be available in the public interface.\nNote that the second is available in the baseclass already in ExecuteQuery\n. Heh :)\n. Agreed regarding DialogExtendedProgress.  Is this supposed to be a non-modal thing, similar to the dialogs from scanning? If so, let's combine them all into one that has what we need - if we're gonna force skinners to change, then we mayaswell make them drop a dialog rather than add one.  The single dialog could either handle multiple independent progress states, or could combine progress states when more than one is running.\n@Jezz_X any ideas?\n. One option is multiple progress dialogs.\nAnother is a single dialog which perhaps cycles through the various progresses (e.g. 3 seconds on each of the progresses in, er, progress).\n. The observable job appears to still be there and the text search is still broken.\n. ObservableMessageJob holds pointers (both via the m_observable and m_observers, which appears to be repetition) to observers which may well be deleted while the job holds the pointers. Either the pointers need to be done using shared_ptr or similar so that you're guaranteed the observer is still available, or the async ability needs to be removed.\nAs for the text search, I detailed why it was broken in the last round and suggested a solution:\nhttps://github.com/opdenkamp/xbmc/commit/f5f327837c5619aeaa3b3e394eb9a909acdd5bf9#commitcomment-1186499\n. Correct.  Any exceptions are few and far between (and will have the XBMC copyright notice on them).\n. This one is a dupe of #864?\n. nm - I see the subtle difference.  Please combine cosmetic pulls into a single pull with multiple commits (ideally a lot more at once).  Otherwise we end up with a heap of unneeded merges.\n. Please combine into a single pull for all cosmetics.  Otherwise we just get loads of merges for no decent reason.\n. Nice work!  I reckon all of them, assuming it doesn't make anything else suffer.\nThe last thing that would be nice, would be if we can detect finger off so we can unfocus the current item (not sure how to best handle that - mouse move with an invalid point location would work but is a bit hacky?)\nWill have to figure out how to best setup the pad so I can test as well :)\n. Neat - looks much better I reckon :)\n. Worth also adding your converter scripts to git in tools/ somewhere?\n. Nice work - I've made some comments.  They're not particularly essential if we feel it needs to go in during the April merge window (which runs out today/tomorrow).  Your call, as you're the one that will need to handle the transitional period :)\nAlso needs OSX project file additions.\n. I'm sure someone will help out with osx project files - it needs to be done from xcode unfortunately - I can do it if noone else gets to it.\nPing TheUni about a translation github repo - shouldn't be a problem.\nWhen you add more commits and push to your remote branch they'll appear here, yes.  You can squash them down then once done (or seeing as it's just the new PO files, just make the changes, rebase so that they're all into one commit and (force) push up to your repo) - the pull request will automatically update.\nThe commenting in POUtils.h is perfect - I was referring to the LocalizeStrings one.\n. Looks fine to me.\n. sorttitle is not set by default in the database unless the user has .nfo files.\nYou'd need something like CASE WHEN c10='' THEN c01 ELSE c10 END to do this.\n. Yeah, doing that with the db is probably not easy at all.  There's a reason all our sorting stuff is outside the db.\nAll we need now is confirmation that it works in mysql.\n. @xbmcfanboy: please do test this out, yes.  Essentially we want to test the query above in af15d26.\n. Looks good to me (good call splitting it off).\n. Nice work, looks good as far as I can tell (other than some minors).\n. What separator do you want - just use the hardcoded \" / \" in case clients are already using it, or change to something else (eg a pipe?)\nWe should do the same thing in VideoInfoTag -> CVariant conversion as well I guess?\n. Thanks - I'll pull that in here.\n. Updated + rebased.\n. Any chance you have time to look at harfbuzz support in XBMC in general? :)\n. OSX is pretty straight forward once Linux is done.  If it's not packaged then that's a bit nasty (I presume it will be at some point, right?) - I guess we'd need to pull it into lib/ until it is packaged.\nI meant using harfbuzz in place of our current shaping stuff for the GUI which is a combination of fribidi with freetype to render btw, not just libass.\n. Please squash down the commits and take care of any cosmetics (there's a double bracket (indent?) in 379884e.\nAm I right that this is essentially a rebase of #542 ?\n. Looks good to me, yup.\n. What happens if you uninstall the add-on from the info dialog and it's the last add-on in the list?  Do you get left with a blank list?\n. Looks good.  Squish the fixes down into the appropriate commits and we'll take another round.\n. I don't have a problem with it going in.  Anyone else?\n. IMO the goal should be to export the resume point in a full db dump, but not in a single nfo dump.\nWe can detect this case already as ExportToXML passes in a flag to indicate exporting of file and path info I think?\nSimilarly, we can likely detect it in ImportFromXML as well.\n. looks ok to me, but why not just use the existing as.xml?  Can't see a reason why you'd want one but not the other.\n. If you don't care, you don't mind if they're imported :p\n. This fix only takes care of the case if build support for dvddrive is not included.  You can still get the case where build support is included yet no dvd drive exists, though perhaps that's already taken care of elsewhere?\n. @alanwww1: what to do regarding strings?\n. Looks good to me.  Counts as a fix or feature?\n. 1.  CGUIAudioManager::SetVolume() appears unused.  Potential use might be to reduce the volume of gui sounds to some proportion of the total volume level.\n2.  Player::SetVolume() appears to be used only for muting during ffwd/rewd, though it appears unimplemented in paplayer.  Replace with a mute function, or let the players take care of it rather than the app?\n3.  Dynamic range compression/volume amplification is not yet implemented.  Perhaps this could be implemented by just increasing the volume of the stream past one?  AE would then have to have a limiter (in master it's in PCMRemap), which one presumes it would need for downmixing (potentially upmixing as well) anyway?\n4.  The vis callbacks have been removed from dvdplayer but not paplayer - are they supposed to be called back into from AE or the players?\n. Rebased to remove unneeded cosmetic change, and split out the controversial commits.\n. For those following along at home, this branch will be the master AE branch during the fixup stage.  It will stay a mess (i.e. new fix commits thrown on top).  So feel free to review the new commits (and the old ones if you like) but be aware that issues with older commits may have already been fixed.\nA new, clean, rebase is available here to facilitate review of what will finally hit master:\nhttps://github.com/jmarshallnz/xbmc/tree/ae_final_rebase (currently up to dfd734e)\n. Closing this request - #939 supersedes.\nI'll leave ae_rebase branch open whilst @gnif et. al. are developing against it.  I'm more than happy to continue to merge pull requests against this and rebase them into the other branch as needed.\n. Regarding JSON-RPC/web-interface, a UI to allow the user to more easily modify things is probably beyond XBMC's UI - in particular you'd really want drag n drop support and/or a rat + keyboard.  A web interface might be able to do it quite nicely though, assuming things like lists with drag n drop are supportable (one presumes there's a bunch of js that could be used).  It would be difficult I think to support both a mouse/touch based interface for it in XBMC while still allowing a remote control style interface as well, though perhaps that's something we'll need in future anyway...\n. Thanks for the review @Montellese and @Memphiz.  Fixups applied + rebased.\nI still want to check number 4 above before this goes in, and need to see whether number 2 needs doing a different way (hard to know really - we need to read the XMLs to list anyway, so sort order on the filesystem isn't necessarily that important.  However, given that the user will be expected initially to manipulate the filesystem to do their thing, maybe it should be the other way around?)\n. Ok, rebased again and eliminated the issue where a filter and virtual folder were named the same without the .xml extension - just distinguish between library://video/path/folder/ and library://video/path/folder.xml/ now.\nThe last question is whether I need to bother with rehashing the order thing.  IMO what we have is fine.\n. Typically you'd create a branch of your change and do a pull req from there.  That way any other changes you do to master are kept out of the pull req.  Also, if you need to change things following review, further changes to your branch, once pushed, will automatically update the pull req.\n. Hmm, is this data going to end up in the database?  I guess scraped data is normally localised anyway, so I guess there's no real issue.\n. Ok - it'd be fine in that case.\n. Cheers - will pull on May 10 to save others (a little bit of) hassle\n. There was an issue yesterday (due to an = sign outside a tag) but pretty sure it's sorted now in master.\n. @theuni going to push this one in in Sept?\n. Nice work - just some small stuff to fix.\n. Nice work on the rebase.  To give you a bit of practice I spotted another couple nasties and a few typos. :)\n. Looks good - pull the trigger :)\n. Thanks for the review :)\n. Thanks for the review :)\n. Ok, rebased after several changes required.\n@Montellese would appreciate you haven't a look over the json-rpc changes.  In particular, there's the potential for the videolibrary update routines to update art now as well.\nWould really like this to hit May, as quite a few users (particularly those that use mysql) have been waiting on it, so getting it wider tested as I work on the music thumbs would be useful.\n. Thanks @Montellese - I think the plan would be:\n1.  Hook up a VFS for image:// URLs.\n2.  Replace JSON-RPC urls with image:// URLs.  That way the URL itself is controlled by XBMC, so they don't try and grab the uncached images themselves (nothing stopping them decoding it themselves if they really want to though).\nWith 1 and 2, images may be accessed the exact same way as is done at the moment (backward compat).  This would basically run through the texturecache initially at least (ensuring the image is cached before being returned if it hasn't already been done).\n1.  Add extras to the image:// to allow resizing/transform.\n2.  Create a http api for image access and do whatever is needed to hook that up (internally it would just drop down to use the image:// vfs).  This might involve changing what is set in the thumbs/fanart fields - not sure.\nNumbers 3 and 4 could be done independently.\n. We have to plan out the API for images quite well - in particular, we need to ensure that whatever we pass in there can't go through the general VFS to end up being a backdoor to access images that the client should not have access to (or worse).\nI'm not sure the best way to do that, but I guess one way is to use some sort of ID for the images instead of the image:// URL.  This could just be kept in an in-memory map(id,url) easily enough, but would clients expect it to be persistent information (if so, a db map would be needed).\n. Sounds good.  JSON-RPC requests would return IDs rather than real paths/images.  Otherwise we'd have to add a bunch of checking to the main image API to make sure that the image they're requesting is \"allowed\".  Much easier to give 'em an id as then XBMC is in control of the URLs they have access to.\n. Ok, rebased the typos etc. that @cptspiff found and rebased on master following @Montellese changes.\nWill look into the season thing over the next few days to see whether it's feasible.  Otherwise, please continue review as and when you have time :)\n. Updated with a seasons table so we have a unique id per season, thus m_type is now one of movie,musicvideo,episode,season,tvshow,actor,artist,director,writer,set.\n. tested, fixed a few minor issues, rebased again.  IMO this is now ready to go.\n. Good enough for me :)\n. Builds fine (with SupportedFormats added as per the 10bit pull) on win32 directx.\n. With the drop of glext.h, it still builds fine on win32 GL as well.\n. No.  There's a bug that hasn't yet been addressed, which I presumed you knew about:\nhttp://trac.xbmc.org/ticket/12999\n. One thing to watch is IIRC orientation in the hints wasn't set to 0 in the constructor/Clear routine.\nI dunno if you need to feed things through the streamdetails or whether hints.orientation contains what you need?\n. You'll want to take a nosy in the hints structure as well - there's a bug in that orientation isn't set to 0 in the Clear() routine.\nOtherwise, all good.\n. You want this in May you'd better rebase it up + pull it in.\n. Thanks all.  Will rebase up and hit the big green button :)\n. Seems to me just loading the textures themselves is more profitable.  They take up a little more room (depending on lzo compression) but you don't have 2 copies in memory.  Given a size limit is needed it might make sense to have some way to prioritise textures - not sure.  We don't currently track usage count in XBMC, so that might be one option.\n. Seems to me just loading the textures themselves is more profitable.  They take up a little more room (depending on lzo compression) but you don't have 2 copies in memory.  Given a size limit is needed it might make sense to have some way to prioritise textures - not sure.  We don't currently track usage count in XBMC, so that might be one option.\n. So I guess this means that the first images in a large XBT should be those that are most used?\nI guess the next thing to know is whether or not texture atlases will give better performance (they'll use more RAM) or whether a hybrid approach makes sense (or this is enough).  It would depend primarily on how fast de-lzo/upload is and how much hit swapping textures during render is - if that's fast enough then this trick alone will suffice.  My bet is swapping textures during render is minimal (we typically render font/image/font/image/thumbs anyway which would involve swapping textures anyway) so it may just be lzo/upload speed.\nThis would need skinners to know in advance which textures are well-used, but we could offer some data for that during run so that things might be optimised (i.e. build standard textures.xbt, track usage and then drop out which textures should be pulled out of the xbt first.)  In fact, it's feasible that XBMC could do that automatically without the skinner's input.\n. Cheers for the review.  Mayaswell break everything at once...\n. Looks good.\n. Sure, the art thing was a hack to get it to work - certainly wasn't planning on it going in as it is :)\nWhat I want to know more is whether it makes sense to send the JSON-RPC message here in the same form, or whether dropping data completely is better, or use fanart/thumb etc in data.  Basically, I'm not sure what the extra data is for or how the client will use it - if it's to notify \"this bit is what has changed\" then I'll just slot thumb/fanart in as we do know that info at that spot.\nAs for RA using this, I don't really have a problem with it as long as it uses it in the same way any client of the annoucemanager (i.e. json-rpc) would do.  Nothing special-case should be added for it that doesn't apply to anything else.  Sending a different message is doable, but it seems senseless to send 2 different messages here, particularly as this is somewhat of a stop-gap measure: I plan on eliminating the RA stuff anyway, as it'd be handled by the \"use any content in a list\" feature that'll be added later on at some point.\n. Closing, as fixed another way.  Will keep the branch around in case we want to use the announce stuff later.\n. Thanks - looks good.\n. Yeah, I was thinking about doing ORDER BY but figured I'd leave it simple for now.\nNeed to check music smartplaylists I think, but otherwise should be good to go - thanks for looking over it.\n. Confirmed music playlists work with a quick change - will push.\n. Correct - I figured at some point we might want to have a check that returns false in the future.  Doesn't hurt.\n. Agreed, but I think until we reach that utopia we mayaswell at least not cause issues with those that do manage to force those paths into XBMC (I presume by typing them in directly in the path dialog or XML).\n. Yeah - agreed that we need a way to differentiate items.  I'm not sure the best technique for cue sheet items, but clearly using a separate value that's also used by something else (start offset) is not working.  There was some comments on this in the cue sheet stuff in #840.  Essentially to give a separate match path for those items that are actually differentiated but otherwise have the correct path.\n. I'm not sure.  I suspect that will cause issues all over the show, however.  As far as I'm aware, cue sheet handling is OK, as-is, so maybe just have m_matchPath be used in IsSamePath() and have cue sheet items set that?  Just have to make sure it's set everywhere it needs to be (Cue stuff + musicdb of cue's most likely).  This way we have a well-defined member that's used just for matching items and nothing else, so that other uses of m_lStartOffset don't collide.\n. It's fine, though I wonder whether having a more generic compare path property might be more useful - more of a PITA to set up though if you use a property rather than a member as you need to format it up all over the show - maybe best just to leave it as this for now and we can extend later if needed.\nFeel free to pull.\n. Looks good.\n. Slight issue with this in that microhttpd urldecodes the URLs sent to GET, thus our image:// get decoded and thus things fail.\nNeed to find a way to get the URl out of microhttpd without it decoding it first, or have a hacky workaround to urlencode it again in the vfs handler.\n. I'll try factoring out the back-compat code from the thumbloader so that it only runs that bit of it (as we have video db items only, it'll only do it once) and see how slow it is.\nIf we want backcompat for old web clients, we'll need the urldecode issue fixed (or worked around).\n. Ah - that makes sense.  Yes, agreed that to use the VFS it makes sense for the client to URL encode - I guess they got away with it till now as the URLs weren't already partially URL eoncdoed.\nAs for the image handler, I think it makes sense if we have an ID so that http://localhost/image/ is quite natural.  Our ID at the moment is image:// stuff, so I think it still makes sense - basically whatever is set in the art fields should be what is passed as the ID.  It looks odd at the moment, sure, but once things are in their ID form it will be more straight-forward.  Essentially this is an interim step to moving to IDs (as the ID thing wouldn't work for VFS back-compat).\nWill check the music - we just wrap directly though there's no real need to for that - a simple fix I think.\n. I guess we should check what other clients are doing.  I presume that if the default web interface is doing things \"incorrectly\" that the others probably are as well, which would break backwards compatibility anyway...\n@freezy what are you doing for the android remote to receive image URLs from thumbs - are you URL encoding prior to appending to http://ip/vfs/ ?\n. Merged Montellese' image:// handler.  Now works fine in Global Search addon and over the web interface, and the back-compat is working fine.\nOne last thing to think about is whether or not we want to move to an ID based system, and if so, how to best do it.  We need a URL, or at least a way for scripts that will be displaying art in the UI to transform anything set in the thumbnail or fanart properties to URLs.  So question is whether we set the actual URL or the image:// URL or an ID derived from there. eg I could utilise the id key in the textures database for that, though some refactor would be needed to ensure that it would work - basically we'd need to add textures to the db before they're cached, and then have update routines rather than delete/add, which is slightly messier code-wise.  Alternatively we could have an in-memory map to do the same thing if we don't care about volatility.\n. @cptspiff you OK with this one going in?  It's quite large for a fix, but better do it properly then hack something in.\n. Righto\n. We're not using github issues for bug reports or requests.  Pull requests only.\nPlease go to the forums for requests first and foremost.\n. Looks good to me, cheers.\n. Depending on how this is being used (is it for songs, or just for actual albums and artists?)\nIf the latter, then there should already be MusicInfoTag::GetDatabaseId() that can be tapped into.\n. Thanks @PatFrost - will investigate further.\n. @PatFrost - the problem is that the ctype facet isn't transferred when we set the global locale.  So no need to set locale in the ToUpper()'s once this is fixed.\n. The style tag has always been case-sensitive.  Having it so is fine IMO.\n. While this commit here doesn't have anything to do with it, but https://github.com/xbmc/xbmc/commit/44c1ac41e7b4ac842160b2f9ca3ea1afee8b7427 does.\nBy the looks there is a difference with Linux (.UTF-8 is appended) but I don't know if that's the problem you're facing.\n. I don't have an openelec system so can't really test it there.  I dunno if the same thing applies on OSX or not - will try and test it later.\n. See #1887\n. It would pay to comment about this in the skinning development forum - there's a thread there regarding frodo changes.  We'll also need a bump for xbmc.gui.skin when this goes in (end of June window).\n. Nice - other than the fact that it could be squashed down to one commit (the fixups) it looks fine.\nThe HAS_SDL_JOYSTICK thing needs to be sorted at some point.  eg ButtonTranslator probably doesn't need it at all - IIRC it uses only the #define's.  That could happen later though?\n. @wsoltys those look good, yeah.  There's still two statics left in the GetAxis stuff.\n. We're not using github issues for bug reports.  You can report the issue at the forums so that others can see if they can reproduce, and (once confirmed) post a ticket on trac.xbmc.org.  Thanks!\n. If you don't want review, don't bother doing a pull request...\n. It's not a problem - just push to master instead of creating a pull request if that's the case.\n. Nice - just needs osx taken care of (you can safely delete the files from the projects with a text editor if you can be bothered).\nNothing obvious spotted.\n. The textures database is designed to be local and depends on everything being that way.\nIf you're getting high CPU usage then it is almost certainly due to something else - this will, if anything, cause things to be incredibly slow due to multiple hits on a remote database.\n. Thanks for the fix.  It turns out that @Montellese has a better fix for this (the above query contains stuff that is not required) here:\nhttps://github.com/Montellese/xbmc/commit/c5b6eb09734b34dbf80d1914bba0b3042308baab\n. Agreed that this is a fix.  I shall review the code today.\nEDIT: change is trivial - feel free to pull.\n. Your 2 commits there look fine now, yup.  Now you need to rebase on master to get rid of the merge commits:\ngit rebase master\ngit push  \nYou may need to force push (-f) due to the rebase.\n. You should rebase on master, not merge from master.  And typically only when you need to rebase for other reasons (i.e. it has to because it doesn't merge properly, or you need to rebase to separate out things or fix things).\nYou want to rebase on master from origin - above I was assuming your master was clean.  If not:\ngit rebase origin/master (assuming origin here points to xbmc/xbmc)\n. You should need only rebase on origin/master (or whatever upstream is for you) - but either way is fine.\n. You cannot have rebased on xbmc/xbmc's master, else all these merges wouldn't be in your branch anymore.\nWhat does \"origin\" point to for you?  Does it point to nuka1195/xbmc?  Do you have a remote repo pointing to xbmc/xbmc ?\n. If you create a new branch you can push it up to a differently named remote branch using:\ngit push  :\nYou'll likely need a forced push (-f).\n. I think we need to do this in general, but ofcourse it would break backward compatibility for many addons I think?  If so, we mayaswell break it all at once.\n@amet, @ronie - your thoughts?\n. @nuka1195: Under which cases do you need the name of the .py file?  Would you not also need the name of the path as well?\n. If it's a script library then you can import immediately already.  If it's some other script you can't, but I can see that it could perhaps be beneficial to be able to do so, assuming that the code you're importing has a stable API.\n@jimfcarroll: Any ideas on handling the importing of code from add-on A from add-on B?\n. We should be able to do this in a much nicer fashion.  Addon.Setting should return something normalised for a start - what does it return?\n. We'll be simply making the getSetting() routine return a proper type to save all this being needed.  This will involve quite a few changes (as we'd need to also validate setSetting).\n. Python will just return a bool for you immediately.  From the skin, HasSetting() is normally used, yes - primarily because skin settings do not use the main addon settings facility.\n. Is the other commit coming as well?\n. Sure - changes look fine.  Will assign to the June window.\n. Mind squashing the fixup commit into 4b0b760.  With that done I'm happy to pull it in.\n. git rebase -i HEAD~5.\nRearrange commits so the one you want to squash is just after the one you want to squash into, then mark it as a fixup (f) or as squash (s).\n. You merged (or pulled) instead of rebasing.\nFrom your python_onPlaybackEvents branch, rebase onto your master branch (which I assume is virgin from xbmc's master - if not, rebase on origin/master or whatever your upstream branch is).\ngit rebase master\nThat should get rid of the merge commits etc.\nThe key when maintaining feature branches is to never pull in changes from master unless you have to (you didn't here as far as I can tell), and then, it's preferable to rebase on master instead of merging.\n. If you're sure your local branch is correct, git push -f to force push it up.\n. Cheers - looks good.\n. I'd prefer a general listitem.dbid or similar that handles both cases.  Further, a listitem.dbtype would be useful as well (fetching m_type) I suspect.\n. Yup - and the correponding translators up the top of GUIInfoManager.cpp.  Note that it's GetDatabaseId() for music.\n. long == int for our purposes.\nThe database id should be set when retrieving info from the database - perhaps the route that is being taken is not resulting in this being set properly.  Check whether it works for artists + albums - I can't recall offhand if it's hooked up for all song retrieval.\n. You need to rebase your work to kill all the fixups.\n. I'm sure the commits will apply cleanly, but they're not clean by any stretch of the imagination given there is 9 of them for what is something that should certainly be only one commit.\nWe certainly won't bother reviewing the commits until it's cleaned up.\nRebasing should not affect your ability to build - particularly if you get rid of the silly commit series that seems to be removing the project file, readding it, reverting the addition, then reverting the removal.  Yes, you may need to build once more after doing it once, but that is all.\n. What is not gitignored?  I develop on OSX and have no problems whatsoever.  So do at least 6 other team members.\nA rebase against XBMC's master is required as 8 of those commits are doing essentially nothing at all.\n. You'll want to review the cosmetics here - there's several lines ending in whitespace, indents are not set at 2 spaces using spaces, and { } should be on separate lines as per the rest of the code.\nIFile.h is included in File.h, and is almost always going to be included wherever you'll be using the flags, so why not have them there instead of introducing the new file?\nLastly, SetFlags() only makes sense in the Open() call - setting it afterwards is fruitless, right?  So it might be that setting it in Open() might make the most sense.\nAlso, you haven't handled the redirection exceptions at all by the looks.\n@elupus I suspect a word or two from you might be useful before too much effort is put into this.\n. We are fussed about cosmetics.  We do not accept code that has unnecessary cosmetic changes or that does not conform with our coding guidelines.  These are demands we place on ourselves, and we expect contributions to the project to follow these in the same way.\nAs for the exception handling, see CFile::Open.  the IFile::Open() call can throw an exception which causes a new IFile object to be returned, which is then subsequently opened.  You need to set flags on that as well.\nThe current flags are useless past Open, and I presume that other flags will be as well, so having a SetFlags() function that is essentially useless unless called prior to Open() at the very least needs to be documented as such.\nIn the meantime, I suggest waiting on @elupus as he may have suggestions as to how to best remedy the problem you are having.\n. Closing - not going to happen for Frodo, and the magic new API will cover it anyway\n. If it's not urgent, assign to June and give the flirc guy a heads up.  Otherwise, feel free to merge when ready.\n. Turns out I \"accidentally\" merged this one.  If anyone has any complaints, I'm happy to revert.  Will get the mirror hooked up with the new tinyxml dep.\n. Ah well, it's easy enough to revert if we find we need to later (VS2010 tells you quite nicely at link time if a lib is mismatched)\n. Get rid of all the other commits...\n. You can preview your pull requests before you press the big go button (check the commits it's going to include).\n. I think we need to discuss whether we want open slather, or whether we want to permission this somehow.\nNot sure the best way to handle the permissions, but it seems reasonable to me that at the very least the user is informed that add-on X has the ability to read your filesystem or that add-on X has the ability to write to your filesystem (delete in this case).\n. Python has access only locally by default, however.  It doesn't have access to non-local files, right?\n. Looks ok other than that one minor comment issue.\n. No bug reports on issues at this stage - please take it to the forums firstly, and trac once confirmed by others.\n. Thanks - looks valid back to ancient versions of mysql.\n. For the music artist ID/album ID you need to add SetDatabaseId() in the MusicDatabase::GetArtistsByWhere, GetAlbumsByWhere - I have them in my tree already due to my work on music thumbs, but feel free to add them in here if that's what the problem is.\nNot sure how to best handle the other properties (artistid/albumid) - I presume they're useful on songs and albums (artistid) primarily?  Also, technically speaking the artistid is not unique for a song or an album, though ofcourse albumID is unique for a song.\n. Heh - I hadn't pushed.  Turns out that I don't have such a commit.\nFor albums, I think you need to set it in CMusicInfoTag::SetAlbum() (the one that takes a CAlbum).\nArtists should already be OK by the looks (it's set in GetArtistsByWhere at least?)\n. Have you tried setting the id in CGUIDialogMusicInfo::SetAlbum/SetArtist - by the looks there is no id there (and no retrieval of that info from the db).  You should have the id in the CAlbum and CArtist passed in.\nAnd please unify to ListItem.DbId - no need for a difference between music and video for this.\n. Looks good - nice work :)\n. An alternative fix is to use a temporary:\nPyObject *obj = Py_BuildValue(...);\nPyList_Append(foo, obj);\nPy_DECREF(obj);\nEither is fine.  The only advantage of this version is you could add error checking (ensuring obj is created successfully) if you wanted to, though I suspect we don't do this anywhere else.\nIf you stick with your method here (make sure you preallocate the list the right size as in your link), it might pay to add a comment that PyList_SetItem() steals the ref count, so no need to DECREF.\n. Looks good - pull it in at your leisure.\n. Thanks.  Mind splitting out the option addition (which is unlikely to be added) from the rest (GUIInfoManager.h/cpp is all that should be needed I think?)  I'd prefer the ID was in the picture range as well.  Also, tabs at 2 spaces using spaces for your if()'s.\nI suspect then that it can be added directly in the skin without all your other changes?\n. @topfs2 is working on scraping for GSoC, and part of that will likely be including items that don't normally scrape in the library by default anyway.  Thus, this won't be needed at that point.\nIn the meantime, adding an .nfo file doesn't take that long for one-offs, and has the bonus of (potentially) adding a whole heap of information all at once.\n. GUIMediaWindow shouldn't need to know about the watched state.  I suggest instead overriding GetFilteredItems() in GUIWindowVideoNav and calling the baseclass, then running through the watched stuff.\nThis will cut down the code changes required.\nEDIT: Heh, what ^^ said :)\n. Nice, looks much cleaner I think.  The only thing I think could be improved now is that OnFinalizeFileItems clears + reassigns the same values to the fileitemlist if no filter is available.  This could be improved by:\n1. Move the clearing of the fileitemlist after the check for an empty filter in GetFilteredItems.\n2. Assign the unfiltered items prior to calling GetFilteredItems in OnFilterItems.\n3. Don't assign the unfiltered items in GetFilteredItems if it has an empty filter.\nGet what I mean?\n. That is a possibility (separate commit, ofc).  One thing to consider is that removing items in vectors is O(n), whilst adding to the end is O(1), so depending on how many items you have to remove, additions might actually be more efficient.  I think we'd want some profiling before concluding that one is better than the other.\n. Looks good to me - nice work :)\nAre you planning on rebasing the commits?  I'd suggest one for the redo of general filtering, and one for the fixup of video filtering perhaps?\n. Looks good - assigned to June merge window.\n. Github issues is only being used for pull requests.  Please file your problem over at the forums or on trac.xbmc.org.\n. Looks good - thanks :)\n. Nice work!  While I've made a number of comments, with a little bit of rebasing I think this will be very nice.\nEssentially, make sure you keep cosmetic changes to a minimum (look for whitespace at end of line - git should complain on commit) and keep anything that is separate in separate commits.\nThe implementation is nice on the whole - just needs some tidyup work I think.\n. Here's what I was thinking of regarding the categorisation of songs into albums:\nhttps://github.com/jmarshallnz/xbmc/commit/431fb5ffa857622a084543970357fd6ee44f8c5e\nThis gives you a slightly more correct albumartist for those songs that don't have it set - if we have musicbrainz info then you can improve that routine.\n. No need for a new pull request - if you push your changes up then it updates the pull request.\nI wanted you to split the commits up, not just squash them all into one.\n. This one fell off my radar (not sure why github only shows some of the issues in my list!)\nEither way, I think you're right: XBMC should know this when calling Add Favourite, so we should be able to set the correct thing there and then.  Unfortunately we can't just change PlayMedia() to do something else, but we can probably provide a separate routine PlayItem() or some such that will skip that check.\nDoes that sound like a better solution, and if so, will you do it? :)\n. Need a signoff from a GLES platform - it should work, but there has been some slight code reorg.\n. Looks fine.\n. Are the changes to ThumbLoader.cpp required?  Doesn't pausing jobs simply prevent the jobs from running, so you don't need to stop adding new ones I think?  I can't recall if the thumbloader thread stops on exit from the window.\nAlso, is this needed for all arm platforms, including quad core arm processors and the like?  Perhaps it may be better to apply it across the board - they'll just extract next time around if they're not done this time around.\n. Once the jobmanager is paused, it should result in a single job running atm (possibly) that will finish, then an additional job added to the jobmanager's queue but not run.  There will be a heap queued up in the CThumbLoader's CJobQueue though - this shouldn't matter as they're waiting on the one in the jobmanager queue.\nThus, the change in DoWork() might catch the one that is running but not finished (if you're really lucky).  The changes in LoadItem() might potentially catch a job or two not being added to the thumbloader's CJobQueue (but it's likely that a bunch of earlier ones will have been added anyway).  It'll catch only a few, as the thumbloader thread is stopped when we exit the videos menu to go to fullscreen.\nAs for the ifdef - IMO just cancel them regardless - I don't see a point in keeping the extraction running.\n. That's odd, as the code is pretty clear: If the job has PRIORITY_LOW and matches a paused job type then PopJob never moves it off the rack.  Both conditions seem satisfied here?\nIf jobs are being run, it suggests that there's a bug in the jobmanager's paused stuff.  Can you add some breakpoints on the return false's and get any hits?\n. Assigned to Sept merge - thanks!\n. I'd want @elupus sign off on the GL, stride and vobsub signoffs.\nMost seem OK to me, though some seem to be fixes as a result of other changes that won't be needed (eg the MatrixGLES stuff is due to a rewrite that @Memphiz did from memory, and won't be required without his changes being in place).\n. Some of the newer ones suggested seem a little too much for my comfort (eg directinput instead of sdl).\nWhat's the plan for testing this out?  If we don't have a decent test phase I suggest dropping things right back to just the commits that fix critical bugs and leave it at that.\n. I suggest rebasing to squash the first 4 entries together, as well as all the fixups/refactoring ones.\nObviously you'll also want to fill the new db table for backward compatibility in UpdateOldVersion() - it should be quite straight forward I should think.\nNote that you seem to be altering GetArtist() rather than GetAlbumArtist() here in your GetArtist refactor, even though that's not actually the one you've done the db side for?\nI'm not sure about your utilities as yet - hard to tell whether they're any use without seeing what is to come.\nI suggest tidying up this lot, then when that's done, you can add new commits on top as you go on.\n. Small is good (initially at least) until you get into the swing of things - much less hassle to squash things down than split things up normally :)\n. I think we could get away with all the musicdb changes directly without needing to alter much (if any) of the external code.  i.e. dropping the current link tables and replacing strExtraArtists/Genres with strArtist/strGenres.\nYou could start with the unified diff for example and drop out anything unrelated while you focus on the musicdb stuff.\nI think this will greatly simplify things.\n. @night199uk Do you need a hand rebasing this down + separating out stuff that is somewhat separate?  As you're relatively new to git, I'm happy to give pointers.  Will try and catch you on IRC.\n. musicbrainz values need to be set on scan (i.e. AddArtist/AddAlbum) else user will have to rescan.\nAlso, don't we still need some musicbrainz stuff in musicinfotag and CSong (so we can set them from tags)?\nAlbum is easy - artist is a bit trickier as you need to read the vector of musicbrainz tags and alter accordingly.\n. Strings have to stay shared between core and add-ons at least for some items. eg it's not like we're going to remove \"Movies\" anytime soon.  Skins for example use plenty of core strings (the majority of strings a skin uses would be core strings).\n. Nice work :)\n. @alanwww1 absolutely - if we have a list of all strings not used in core then it's relatively quick to check the skin (my guess is @Jezz_X could tell off the top of his head whether one is used in the skin or not) which would be the main user of other strings.\nMy main point was that we can't rule out skins in particular using core strings.\n. Assigned to merge window.\n. @pieh: A textbox seems to be the most reasonable for this stuff, yes.\n@DDDamian: Perhaps the DTS  Ok stuff could be more easily represented by a \"formats supported\" or some such with a list of items following it?\n. Very nice work.  Just a little bit of cleanup and a couple of minor performance related things.\n. The only conflict with master is the xcode project - it's trivial to resolve (you just want to add both additions).\nOnce done, builds fine on OS X, so once the above are sorted it's good to go.\n. I noticed a comment on IRC regarding whether jobs were cancelled when one moved from directory A to directory B.  This is not the case - the jobqueue isn't cancelled when moving directories, so the jobs for directory B will be queued up (the queue is LIFO, so directory B will be processed before it goes back to directory A).  Only a single job at a time in any case.\n. Personally I agree, but not sure if everyone does.  There's a CancelJobs() available in the jobqueue, which I guess could be called prior to fetching the next dir (where we currently look to cancel the loader if still loading).\n. Looks good to me on the whole.  I'll check if win32 builds + runs.\n. Thanks for looking over it @Montellese.  I'll merge it in after you've got yours in to save you having to rebase :)\n. I'm not sure about Input.SendKey - the others seem reasonable enough.\nAre folk wanting SendKey so that it runs through the keyboard keymap?  This seems to be non-deterministic to me - they should send actions instead.  If they're wanting to send keys to the virtual keyboard then I have no problem with it.\n. The problem is that the user changes their keymap and the remote breaks.  So yes, ExecuteAction or ContextMenu if we're wanting to be more restrictive make sense.  Personally I'd go for the latter, or at least validate what we're allowing through ExecuteAction to make sure we're not sending things we don't want to (I don't think there'd be anything - the builtins are the worrisome ones).  As long as they're validated, having a general ExecuteAction is fine.\nSo yeah, SendText() could be done, which could be restricted to input in text fields (it should hit only the edit control/virtual keyboard path).\n. So the client would currently need to SendText and then send an OK event to get the virtual keyboard to close?\nI wonder if it makes sense for SendText to close the dialog automatically?\nI don't have any insight into alternative naming.\n. The GUIDialogNumeric is a bit messy - you can't just send 13:45 for the time, 13/5/2012 for the date, or 123.4.5.6 for the IP which seems the most natural.\nIt'd be much nicer if SetMode() was changed to always take a string - it's only not that way for the date/time stuff.\nI suggest leaving this out and pushing the rest in this window perhaps?\n. Looks good once that's done.\n. @alanwww1 what do you think?\n. Please get rid of the merge commits by rebasing on master.\n. But again, the link you give has more characters than you handle currently.  Perhaps the sources of Apache or lighttp are what should be consulted?\n. lighttpd seems to use everything in the RFC except ~.  Amusingly, their source contains incorrect comments.\n. http://redmine.lighttpd.net/projects/lighttpd/repository/entry/trunk/src/buffer.c#L703\n. That would be right - it's encoding ~ and ' (I missed that in the RFC list)\n. Apache isn't quite so obvious, but seems to encode everything except \".-*_ \"?\nhttp://svn.apache.org/viewvc/httpd/httpd/trunk/server/gen_test_char.c?view=markup\n. Looks fine.\n. Looks fine - will pull in July window.\n. What is the dB value presented at 50% on the volume slider?  From the looks of the code it appears to be -6dB?\nBefore this change, the scale in the app is a percentage of the 60 dB range, thus an increase of 1% corresponds to an increase of 0.6dB, regardless of where we are on the scale.\nAfter this change, the scale in app is a percentage on the multiplier scale, thus an increase of 1% depends on where you are on that scale - eg atm you decrease the volume slider from 100% to 50% and the volume drops to -6dB.  This is incorrect.\n. -6dB is half the power, yes.  It is not half the loudness according to the human ear.  The human ear operates linearly on a logarithmic scale - continually doubling the power sounds like it's moving along a linear scale to the human ear.\nThus with a 60dB dynamic range (a typical range that most consumer equipment can give from ambient to really loud) you expect that each 6dB chunk corresponds to 10% chunks on your volume slider.\ni.e. we're doing things exactly how every volume control (a decent quality logarithmic potentiometer for example) has worked for years.\n. Your formulae should be:\ndB = 20 * log10(scaling)   i.e.   scaling = pow(10,dB/20)\nVolume in CApplication is (60-dB)/60.  So volume = 0.5 corresponds to -30dB, which will give a scaling of pow(10, -1.5) = 0.0316.  This gives a PCM range as you suggest, which is exactly what it should be with -30dB of attenuation.\n. Yes, there's nothing wrong with the formula used in the code.\nThe problem is that the linear slider should operate on the dB scale, not on the multiplier scale, i.e. exactly like it does in the current mainline code.\n30 dB is half the dynamic range that most consumer amps can produce over ambient, thus is the 50% point on the slider.\n. So you're saying XBMC has done it wrong since 2003?\nAll your change to 10*log2() does is change from a multiplier of 20 to a multiplier of 33-odd (10/log10(2)). This is equivalent to dropping db_range in CAEUtil::PercentToGain to 36dB (20/10 * log10(2) * 60).\nI don't think anyone would have much of a problem if the dynamic range was dropped a bit - most folk that would be using it are on laptops or similar anyway, where the amplification ability above ambient probably struggles to be able to present a dynamic range of more than this anyway (I can hear audio at -59 dB in XBMC on my laptop - but it has to be pretty damn quiet to pick it up).\nWhat we do need to make sure is that:\n1. If we report dB it's got to actually be dB as defined (A ratio in decibels is ten times the logarithm to base 10 of the ratio of two power quantities.)\n2. The scale stays logarithmic.\nPersonally I'd prefer 50dB for the simple reason that 2% on the slider == 1dB nice and round...\n. If CoreAudio volume is done using a % (from a quick scan of the docs it looks like it probably is), then yes, the PercentToGain/GainToScale should be skipped.\nHowever, this is not the case for SoftAE.\nThe ideal would be to move the transformation into SoftAE (and PulseEngine perhaps?) so that CA can skip it without ifdef'ery.\n. Hmm, actually, according to the old CoreAudioRenderer, it used to convert from the dB scale to a gain:\nhttps://github.com/jmarshallnz/xbmc/blob/895b2a7710c9bcb667735d3ec3fca73d98843dbd/xbmc/cores/AudioRenderers/CoreAudioRenderer.cpp#L1003\nThis is what mainline is doing already.\n. Looks good.\n. There's a reason for the dim on modal.  The problem is several fold:\n1. We allow a vis as a screensaver.\n2. If a modal dialog is on screen, then we must eliminate the dialog in order to display the screensaver, unless the screensaver is also a modal dialog that is topmost.  Clearly this is the best thing to do, but there's a problem with this if 1 holds.\n3. We can't just eliminate dialogs willy-nilly as the actions that occur due to cancelling a dialog might not be in the best interests of the user.\nIf we can eliminate the vis stuff and move all screensavers to actual dialogs (dim/black are already - the fullscreen builtin ones probably aren't) then we can remove the dim stuff.\n. Are we planning on acting on cptspiff's suggestion (using ::Create and ::Destroy)\n. Looks good.\n. Hmm, why do we have songrating vs videorating, and similarly different duration/videoruntime ?  Is this in JSON-RPC or in the smartplaylists?  IMO we should be using common stuff as much as possible.\n. Ok, so does it make sense to look to unify these at some point?  It's fine to have backcompat in place as needed, but we need to make sure we keep track of it all and remove at the earliest opportunity to save confusion later.\n. Looks good, yup.\n. I suggest just removing the facility to check based on CFileItemPtr's as it's not clear what we'd be testing on - I don't think you're using it anyway?\n. Looks fine - it makes more sense for it to be in app than settings IMO.\n. @pieh You could probably tap the resume stuff into the routine that grabs all playcounts for the current listing - IIRC that does a similar thing using a single query - see LoadVideoInfo()\n. @Montellese: I'd just remove season thumb - show thumb still kinda makes sense I think (balances with show fanart).\nAs for the db update, it's up to you - you can either protect the map with a lock or drop and we'll isolate with a proper db update thing.  For a proper db update, I think we'd need to:\n1. Have a static indicating that db's were OK to open (and critical section to guard).\n2. Have a function in each db to do the update.\n3. Call said function as early as possible on app start.\nIt might be as simple as dividing CDatabase::Open() into two functions, one that does OpenAndUpdate() and the other that just does Open().  The latter would just check the static for whether the db is up to date and fail if not, else call Connect(currentDB, false).  I think the OpenAndUpdate() would handle correctly setting up the advancedsettings and handle fallback to sqlite etc.\n. IMO rebase + squash and push it in.\n. If we're leaving b5b9fa8 in, then I think we mayaswell keep the season art there as well.  I'm not sure whether it's worth it otherwise?\nAlso, abb44bf should probably be split to removing the season thumb separate (or keep it in and we can remove it later?)\n. Just leave it in then and I'll kill it off later once we properly handle banners+posters?\n. Looks good - pull it in.\n. Doesn't worry me either way - I'm sure before it goes in I'll need to rebase anyway :)\n. Have you gotten rid of the .svn directory in gtest?\nIt seems like fa9ae202e69a3f76832adadac0217267b0d561cb should be squashed into 52e8263\n@wsoltys, @chadoe, @DDDamian would be good to get some win32 love so that things are run there.\n@davilla what is the chance of getting the iOS tests runnable as well as other cross targets?\n. Indeed, and IMO if we're going to have unit tests we're going to have to make sure they're doable (even if it is slightly painful to do so) on every platform.\n. Nice!  We're obviously lucky we're not hitting this elsewhere ;)\nThe problem is that GetLength() returns the size in characters, yet we're using that to copy a number of bytes out of the string.\nChanging size = str.GetLength() to size = str.GetLength() * sizeof(wchar_t) will do the trick, and similarly in the >> operator you'll want the size in Read() to be iLength*sizeof(wchar_t) (as that's in bytes).\n. @theuni: how do you feel about an initial merge during the July window?\n. CUtil::GetNextFilename is what is used - it uses XBMC's internal functions (CDirectory) so is only appropriate if you're not testing that.\n. @cptspiff Where does this come from?\n. Looks good - assigned to July.\n. By the looks you don't have blending enabled for diffuse textures (or no multitexturing enabled?)  This may push things even more.  The current speed is pretty slow (animations etc. really clunky) but perhaps this has to do with the capturing rate not just the frame rate?\n. Closing - unlikely suitable hardware will be available.  If there is, we can reopen and work can continue.\n. When you have 624x352 and choose 640x480, what's the point - you're scaling it twice at that point.  I don't have a problem necessarily if there is no scaling at all done by XBMC, but if XBMC is scaling as well as the TV that seems counterproductive?\n. The processing doesn't run when not resizing?  This is the point of the patch after all, to have better resizing done by your TV/receiver or whatever.  If XBMC is resizing (poorly apparently) then you want to eliminate that completely, else you're introducing a source of error.  In the case of a 624 wide image, for example, you could center it in a 640 wide resolution to save any resizing at all by XBMC.  Again, I have no problem for 1280 wide sources and the like - just not sure I see the point of resizing at 2 separate levels if the entire point was to remove the resizing to begin with.  Perhaps as this problem will likely only be seen on SD sources, it doesn't really matter too much?\n. It'll only be 8 pixels either side in the 624 width case, and nothing at all if the source was 640 wide or 1280 wide etc.  The latter is where the real benefit comes as XBMC does no resizing.\n. I think it's best to leave it to those that know the renderer.\n@bobo1on1, @elupus?\n. SD resolutions are complicated by the fact that the 720x304 will no doubt be assuming square pixels, whilst 720x480 or 720x576 are not square.  The TV will most likely get it wrong in other words.  Whether this is enough to bother folk I dunno.  I also suspect that a small amount of vertical-only scaling to fix aspect for SD content such as this is probably overwhelmed by the low resolution anyway so the double vertical scaling is probably meaningless.\n. I suggest moving the settings to a local struct, put sensible defaults (these can be what is sensible for you for example), then add what you need (a toggle?) to turn it on to a gui setting.\nAfter that we can see how well it works under different scenarios and move to perfect it - you have the settings local to play with during this process, and you can then expose what is absolutely needed to work in a way that makes sense to users.\n. Everything except number 3 works for me.\n. That's the thing, we don't want them to tweak them yet.  i.e. store them in some struct locally, and we can expose exactly what is needed later.\n. This has the potential for nastiness, so we need to be careful we get things right.\nIf you're calling a directory, then you're already potentially off-thread here already I think?  Perhaps with the current GetDirectory background stuff, we no longer need the progress dialog here at all?  Reducing the potential for clashes seems reasonable.  @elupus your thoughts?\nIt should be OK if you're calling from setResolvedURL() which I think is the other spot this kicks in?\n. This should be taken care of in master as we no longer throw up the progress.\n. Does it occur only when we're calling the script to setResolvedUrl() ?\n. setResolvedURL is a callback for plugin:// URL items that are marked playable, so probably this case.\nRight - it's not necessarily the progress bar, rather that we're on app thread but not spinning the process loop.  Ofcourse, we have to be here, so that's not really an issue.  Given that, I suggest we have a check for app thread, and if so, make sure the app loop is run (i.e. exactly like CDirectory::GetDirectory does).\nWhether the progress or busy is used isn't really a big deal IMO - I'd prefer the latter as it's more consistent with other things (it's not cancelable I think?) and is less likely to cause issues with the plugin also throwing up other dialogs (agreed they shouldn't be doing this, but we can't stop them at this point for Frodo).\nSo, I think just cleaning this up a bit so it's the same as CDirectory::GetDirectory would be the best way forward.\n. Looks OK to me.\n. On the whole it looks nice.  Please squash down the fixup commits and I'll give it another going over.\nThe only thing I don't particularly like is the non-videodb code in the videodatabase.  Not sure if there's a \"nice\" way to deal with that though.\n. Fixes look OK - rebase down and I'll give it another overview in case I've missed a simpler way to do it (I don't think so though - ISO stacks are really messy)\n. Ok, the code looks OK, but I really think the two new functions to VideoDatabase don't really belong there - eg GetResumeItemOffset has a path that doesn't hit the db at all (and thus HasResumeItemOffset also has such a path).\nIMO having those as statics in VideoBase seems just as reasonable - the only addition I think would be some videodb open/closing internal to GetResumeItemOffset, rather than being external?\n. Forget to push?\n. Sorry, I wasn't clear (thus didn't notice the difference) - the two statics should be in CGUIWindowVideoBase rather than CVideoDatabase.\n. Looks good.\n. I've made some basic comments on the UI side of things.  I wonder whether as the GLES1.1 branch follows the OpenGL branch most closely (basically it's a shader-free implementation?) that it might make sense to split the ifdef's slightly differently to reduce the amount of ifdef'ery.\nPersonally I'm against adding GLESv1.1 unless there's a definitive hardware platform that this opens XBMC up for, simply from a maintenance perspective.\n. Closing. No likely platform that's usable for XBMC that doesn't have GLES2\n. It's a good idea I think.  Note that you may wish to hold off a little until my musicthumb stuff is in - I hope to clean it up this weekend.  Once done, quite a few of the current CPicture loading/caching routines can go away, and also an additional function in CxImage will be required (basically it drops down to loading an image off disk or loading an image from RAM).\nIn fact, I'd be very tempted to keep only the latter and have the wrapper for reading from a file inside XBMC instead (saves wrapping any future libs) - basically it drops down to 2 routines: one that given an image in mem decodes that image to a texture, and a second that does the opposite.\n. Ok, my changes are in.  I think there's a couple more changes that could happen:\n1. Remove LoadFromFile() in CxImage/JpegIO, and move the CFile reading into CBaseTexture::LoadFromFile() instead (or into your image wrapper), which then calls LoadFromMemory().\n2. At that point you just have 2 functions in the image loader (LoadFromMemory, CreateThumbnailFromSurface) along with a cleanup function for CxImage (FreeImage).\n3. Potentially you could move the writing out of CreateThumbnailFromSurface - this would mean JpegIO and CxImage don't need to know about our filesystem which means CxImage doesn't need wrapping anymore.\n. I'd tend to leave that CxImage only - JpegIO is more efficient as the first thing it does is read the size of the image, that way we can allocate the texture buffer and pass it in, avoiding a memcpy().  I don't think CxImage can do this, thus the reason it needs to use it's own buffer.\n. alpha is the alpha plane, so that's just set to 0xff across the texture passed into JpegIO.\nThe Exif orientation (the only bit we need for textures) is read, but you're correct that the rest isn't exposed, though that could be hooked up I think.\n. Wow, nice work!\nWe need to consider carefully before we add the ability to the UI to add tags/delete tags etc.\nTo me it seems natural that this would be done from the info dialog - i.e. you'd add tags to a movie, and if they're new tags they're added.  I guess it depends on how you're using the tag (are you using it to group a bunch of movies together, or using it to add additional lookup info to each movie?)\nEither way, I can already hear the demands for removing the \"New tag...\" item :)\nI'm seriously starting to think that we should be removing ability to customise stuff from the UI, at least the clunky way we have things currently, and instead ensure that it can be done well over JSON-RPC and then implementing (or encouraging) a nice web interface/remote app interface for doing it.  After all, more and more folk have a touch interface available to them, and it's far more efficient to do things that way.  Further, we should be looking at modifying the exiting info window so it can handle this stuff, perhaps via creating a new \"Edit\" dialog and having that replace the existing info dialog over time?\n. The only problem I have with the context menu is it's quite slow without a keyboard + mouse anyway (or touch equivalently) whereby I wonder whether it might be better to leave it out until we have a better \"Edit Movie\" dialog (to eventually replace the video info dialog).  Doesn't really worry me much either way as it can be removed later if/when a better way to handle it is done.\n. Looks ok - just need xcode projects update as well (I can probably add after the fact if you want).\n. Ready to go then once the minors are taken care of.\n. @arnova for 1, we could, but shitloads of stuff hits the thumbs (recently added + lots of scripts for example) before this.  The problem is we need to know that an update is required, and the best place we know that is where we update the db.  We could save a bool in guisettings.xml I guess, and then reset that bool once the scan is finished.  This would also allow for the scan being interrupted by the user - we'd prompt again each time they enter music until the scan is finished.  I suspect this is the best solution, so will pop the bools in place for both the music and video db's ready to go for later on when the rescan code is in place.\nFor 2 it's quite tricky to get this right - The denormalised approach doesn't work well I think as you need to have the artist and album art for songs as well, so denormalising at the song level doesn't buy you much unless you also store the artist and album song at that level as well, which would become a maintenance nightmare I suspect, so that rules out the first option.  Having the item loader run per-item when the UI demands it has a lot of benefits, but needs some careful thinking to get it right - in particular, it's more efficient for music items that aren't in the library to run per path rather than per item - you need to do this in order to assign art with any accuracy for example.  For library based items it's no problem per item.\n. @theuni the last 2 commits restrict the size of cached images to 720, except for if the user has  set to 1080 and there's a 1080p image being cached.  On devices with smallers screens, it would make sense to set this to something smaller (eg ATV2 can set to 720).  There's some argument to restrict to largest screen res as well perhaps, but I'm not sure we can reliably determine this (user runs xbmc in windowed mode for example, then later hooks up a 2560x1600 monitor)\n@arnova 7ed96cc adds some settings so we have something to potentially check in the music window to queue up a scan.  Will work on adding the necessary stuff to allow the rescan.\n@Montellese, @night199uk, 4d541d9 removes idArtist from CSong/CMusicInfoTag.  This means that retrieving fanart for items is a little more complicated (separate routines in CMusicDatabase for them).  Further, it may have implications for JSON-RPC as some clients might be using them.  An alternate is to define this as the primary artistid and joining the album_artist/song_artist tables in the respective views.  Thoughts?\n. @Montellese The alternate is to have a vector of artist id's (or a vector of id,name pairs) for the artists available on request from a song - it's an additional query as @night199uk points out.\nAnother alternate is to just store the primary artist id and make it clear that there may be more, as this can be fetched without an additional query (it's just a JOIN).  The problem with this, is that the primary artist could actually be 2 or more artists (with other artists featuring on select tracks), though this is rare, and currently for fanart and the like it doesn't make much sense to do anything other than the first listed artist anyway, which is what we do.\nThe first alternate is more useful to the client, but is not something that can be done quickly when retrieving a bunch of songs.\n. Updated with fixes based on comments - thanks very much.\n@night199uk, @Montellese The one thing I'd like resolved before this going in is how to handle artistId for JSON-RPC.  If noone objects, I'll add it back into the song and album views for now and we can redo it later if required.\n. @night199uk Go for it - I believe @Montellese is busy with other things.  I suspect you'll need to add a vector to CSong/CMusicInfoTag and go from there?  It would be nice to supplement the existing vector to vector instead if possible as I doubt there's much point having only the ids available - this would match with the cast list for movies which has both id and name (as well as other information) available.\nIn the meantime, I've done up a quick fix commit to get the idArtist back in for the meantime in case we find it's more difficult than initially thought - it's currently broken, after all - available in my restore_idArtist branch.\n. Yes, I completely agree that the displayed artist makes no sense to be\nstored in a vector of strings.  The vector of strings is only useful in the\ncase where you have separate strings from the tag and can use that to both\nbuild up the display artist and the individual artists.  Similarly, you'd\nhave a vector of MBIDs.  Lastly, you want a vector of database ids for\nJSON-RPC and other linkages.\ne.g. In your 3rd case you'd have display_artist = \"Mark Knopfler & Chet\nAtkins feat. Blah\" and vector = {{\"\", MBID_mark, -1},\n{\"\", MBID_chet, -1}, {\"\", MBID_blah, -1}} when read from the tag (you could\nfill the artist with the display_artist if you wished).  Once the MBIDs are\nresolved this would then allow the artist name in the vector to be filled,\nand once those artists are in the db you also have the ids available.\nThe point is that in CMusicInfoTag you need both a vector of strings, a\nvector of mbids and a vector of dbids for reading from tags or for reading\nfrom the db.  There's no reason why this couldn't instead be a vector of\ntriplets, given that the data apply to the same items, right?\nOn Wed, Jul 4, 2012 at 4:43 PM, night199uk <\nreply@reply.github.com\n\nwrote:\nCool.\nRegards updating the existing vector, I wouldn't recommend that. The\nint artist IDs and string vector will go out of sync at some point\nsoon (when I submit the new scanner and TagLib mods).\nThe vector string is really 'just' the artist display string. Actual\ncontributing artists should always be referenced by ID.\nE.g. here are the 3 cases we will tackle:\nIn id3v1 with no MusicBrainz, the vector will be:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nand the vector int with three artists will match.\nThe display string is built on demand with musicItemSeperator but is\nthe same as the tag encoded in the files:\nMark Knopfler / Chet Atkins / Blah (using music item separator)\nIn ID3v2.3 with no MB:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nTag TPE1:\nMark Knopfler\nChet Atkins\nBlah\n(3 separate strings NULL seperated). the vector will match.\nDisplay string is merged using musicItemSeperator as above but\ndifferent tag parsing.\nId3v2.4 with MBIDs pseudo:\nVector[0] = 'Mark Knopfler & Chet Atkins feat. Blah' (TPE1)\nVector  = { idMark, idChet, idBlah }; (built from MBIDs, NULL\nseperated in tag)\nI think the idea is that artist display string != artists (TPE1 !=\nartistID). This allows us to deal with all of the different string\ncombinations and artist formats out there with resorting to much\nstring parsing, or forcing users into one artist format or another...\nAwful pseudo code and quick write up, but hope this makes sense.\nSent from my iPhone\nOn 4 Jul 2012, at 12:16, jmarshallnz\nreply@reply.github.com\nwrote:\n\n@night199uk Go for it - I believe @Montellese is busy with other things.\n I suspect you'll need to add a vector to CSong/CMusicInfoTag and go\nfrom there?  It would be nice to supplement the existing vector to\nvector instead if possible as I doubt there's much point having\nonly the ids available - this would match with the cast list for movies\nwhich has both id and name (as well as other information) available.\nIn the meantime, I've done up a quick fix commit to get the idArtist\nback in for the meantime in case we find it's more difficult than initially\nthought - it's currently broken, after all - available in my\nrestore_idArtist branch.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752282\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752475\n. Thanks for the informative message :p\n. Odd, as all that was changed with the views is that strThumb and the thumb table are no longer joined.  Are the triggers created (song, artist, album tables have a trigger on delete to clear the art table)?\n. Ah - I know what it is - silly mysql and it's text indicies needing a length (index on art table).  Fixed in ae6508e161d\n. 20fcaaec removes those @MartijnKaijser\n. Putting aside the issue of whether we want it, the above 3 commits could be squashed into one, plus some of the checks (in ProcessEventClient) aren't needed - they don't actually use the joystick hardware stuff, rather they use the joystick keymapping stuff.  Also, there's some whitespace issues on the last commit.\n\nTo squash into one, git rebase -i HEAD~3 and change the last 2 commits to squash.  You'll then get to rewrite the commit message.\n. Karlson2k: yes - please squash that one down, remove the russian translation, fix the Reset issue, and separate out your one-line if()'s onto two lines.\n. Looks fine - please squash the fixups into the appropriate commits and I'll pull it in.\n. Thanks :)\n. Can't we just send wol automatically if a general setting is enabled? Ping\nthe server and if not avail and if we have Mac then send wol?\nOn Aug 18, 2012 11:17 AM, \"Michal Piechowiak\" notifications@github.com\nwrote:\n\nnow I wonder if single toggle in add/edit source is good idea given that\nwe can add source that could contain multiple paths: f.e. smb://host1/share\nand smb://host2/another_share_from_different_server - that toggle would\nneed to be for each path there and this would be ugly\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-7838076.\n. Either way we can't ping the server so does it matter?\nOn Aug 18, 2012 11:59 AM, \"Michal Piechowiak\" notifications@github.com\nwrote:\nProblem is we need to wait few secs after sending wol. There are scenarios\nwhere sending wol it's not gonna get server up and waiting here is waste of\ntime:\n- server could be wifi connected - WoL won't work\n- server might not support WoL (doubtful) or not have WoL enabled\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-7839458.\n. I don't see the problem. If the server is unreachable, we have the Mac, yet\nit can't respond to a wol then who cares if we have to wait a few seconds?\nNot as if you're going to be able to do anything else with the offline\nserver.\nOn Aug 18, 2012 12:39 PM, \"Michal Piechowiak\" notifications@github.com\nwrote:\nEither way we can't ping the server so does it matter?\nIt's senseless to try to wake up server and wait couple of seconds for\nserver that user know for sure that it can't be woken up. Ping doesn't\nmatter here as server will not go online anyway and we will just wait (with\nbusy dialog spinning) for few secs before \"wait for server to wake up\" time\npasses.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-7840252.\n. Well one presumes that maybe we could intelligently guess based on past\nexperience if we never manage to wol a particular server\nOn Aug 18, 2012 1:10 PM, \"Michal Piechowiak\" notifications@github.com\nwrote:\nAs a user I would prefer not to wait and just get quickest \"can't connect\"\nmessage possible. I actually didn't think of it as \"not a problem\"\nsituation. This makes things so much easier.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-7840533.\n. I still don't get why we need all this setup stuff.  Why overcomplicate\nthings?  Most folk have a single server (if that).  It can either be woken\nor not and that's all there is to it.  Just ping the server, if not\navailable, send the WOL packet, and if that fails after N seconds don't\nbother trying again.  User can reset by toggling the \"Wake wired network\nservers automatically\" setting.\n\nIf the server is off, no-one will care if it takes 3 seconds (if the server\nis off the usual smb:// lookup will take a lot longer than that anyway) to\ncheck for WOL.\nOn Mon, Aug 20, 2012 at 9:50 PM, Michal Piechowiak <notifications@github.com\n\nwrote:\n@t4-ravenbird https://github.com/t4-ravenbird\nNothing is set in stone - we can still throw and evaluate ideas.\nNow I'm thinking about about global toggle to turn feature on/off + dialog\nwith list of all hosts (sources + mysql if set) that each could be\nenabled/disabled. Wake on lan for all host would automaticly be enabled (if\nwe managed to auto-discover mac). If after X tries we never managed to wake\nserver up it would automaticly disable waking for given host (need to\nimplement ping).\nTimeouts and such could be finetunned by hand in wake_on_access.xml (if\nthat's what we choose to store stuff).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1112#issuecomment-7864928.\n. Hmm, not sure if this was what the user was after:\n\n\"I know that you set a python listitem 'resume' as the resume point, but unfortunately this removes any option of restarting the media from the beginning.\"\nI believe the problem is that the db value that XBMC has is wrong, as he's played the same media item on a non-XBMC client as well, and from the plugin he can query a server and knows where that ended.  Thus, he wants to be able to set the resume point value, but still allow the user to play from the beginning if they wish, based on the select action.  Will check in the linked thread.\n. So if I have a plugin that knows something about where the resume point should be (i.e. knows something more than whatever XBMC may have in it's database), and if I want the user to be able to resume from that point or start from the beginning, what do I do?  If I set the resume point, then it's overridden and play will simply start from there without the user being given a choice.  If I don't set the resume point then XBMC will use its database.  How can I tell XBMC \"use this value if the user wants to resume\"?  Would it not be better if XBMC instead just used the value set in the listitem (if available) instead of going to the db?  That way the user has control over whether they resume, and the plugin ensures it resumes at the right spot.\n. Yes, you've explained it perfectly.  My point was, why doesn't XBMC just use the value you pass in (if available) instead of the value in the database?\nThat way, for plugins not passing anything, everything remains the same.  If a plugin wants to override XBMCs stored value, it just passes the appropriate value in.  No need for a custom dialog at all in the plugin.\nThe only thing you wouldn't be able to do was to force a \"start at the beginning\" or \"resume from here\" on the user, but I don't think that's a huge loss?\n. Can you fetch the results before the list is displayed?  If so, setResolvedURL doesn't have anything to do.  If you can't do this, then my suggestion is somewhat of a moot point.\n. Ok - this stuff is all a bit messy really.\nSetting START_OFFSET_RESUME by default in listitem.cpp doesn't really make sense for items that aren't to be resumed by default - the default for m_lStartOffset is 0 normally, which is why the original patch didn't work.\nI wonder whether instead of setting m_lStartOffset, you could instead set VideoInfoTag::m_resumePoint.  If that's set, then I think that the normal resume stuff should respond to it.  If it does, then that actually might remedy some of the issue with the stop/restart of an item without reloading the listing, as I think that the item will be updated with the new resume point by XBMC (which makes sense in this case).\nBasically, it would be far nicer if XBMC could handle it all.  How are you updating your db backend with the resume location - using the JSON-RPC callbacks?\n. There's actually two separate roles here:\nm_lStartOffset is used primarily for passing where to start to the player - it was initially used only for cue sheet items, thus the funky units, but was then co-opted for video resume as well.  It's now also used (IMO in a hacky way) to flag RESUME to force the fetch from the database to prompt for resume.  What is actually fetched from the database, however, is a resume point (CVideoInfoTag::m_resumePoint) which in master is already set for database items anyway, so we can use that in place of the database query in a lot of places now.  If we do that, we can have the plugin set that instead of setting m_lStartOffset, to save hitting the database altogether.  If we can arrange it so that you can set the resume point information to 0 (i.e. start from the beginning) and still not hit the database, then you can stop the resume dialog should you wish.  This is a reasonable chunk of cleanup work.\nThe problem with just dealing with m_lStartOffset, is that the default value is 0, so you can't use 0 to force starting at the beginning (or to force the resume dialog to be skipped) - to do it you have to hack m_lStartOffset to default to -1 for plugin items which is what your commit combined with cptspiff's commit do.  An acceptable hack might be to set m_lStartOffset to -2 and have #define START_OFFSET_IGNORE_RESUME -2 to ignore the resume altogether.  I suspect, however, that filling in the details of m_resumePoint will get us a bit more flexibility (e.g. you get the resume flag) without having to resort to hacks upon hacks.\nAgreed regarding setResolvedURL - there should be nothing stopping a plugin from overriding the start offset there, a default of 0 makes sense as you'd only want to override using a non-zero value anyway.\n. This branch is an attempt to clean things up a bit:\nhttps://github.com/jmarshallnz/xbmc/tree/cleanup_resume\nThis supports m_resumePoint taking priority over and above the database at all points in the chain.\nI suggest this two things in addition need to occur:\n1.  Support for plugin items to set m_resumePoint.totalTimeInSeconds and m_resumePoint.timeInSeconds.  Setting the former to something positive means that the latter will be used rather than the database value.  If you set the latter as well then it will use that as the resume point that is prompted for (and will also show the little resumable flag).  Alternatively, setting timeInSeconds to 0 will force play from beginning.\n2.  Support for overriding m_lStartOffset in setResolvedURL.  Alternatively, you could set the updated resume point in there instead and that would be used in preference.  Perhaps the latter is better for consistency?\n. Thanks @hippojay - I'll check over your changes/pull them in + do up a new PR.\n. The problem with this IMO is that it only makes sense if you have paused it for a decent amount of time.  If you pause and resume again within a minute or so, then you haven't lost anything.\nBased on the forum threads you link to, it seems there's 2 requests:\n1.  Crappy receivers that mute the sound for K seconds after playback resumes.  As far as I'm aware, this should be mostly solved with AE continually pumping out audio anyway?\n2.  Resume from a stopped file should jump back a small amount so you can review.\nThe latter seems like something that we could just do by default with no options at all.\n. IMO if we have it, then it should apply to stop/restart not to pause.  Pause is used for brief stoppages by definition, where no need to rewind is needed.\nIf you pause due to interruption, then it's really no problem just to seek backward, while turning to whoever interrupted you and glaring.\n. Sure\n. As this is setup, you can only have one of idAlbum, idSong or idGenre set in GetArtistsNav.  There's nothing restricting the JSON-RPC user specifying both a songid and a genreid in GetArtists, and if they do so it might respond in a way they don't necessarily expect.\nI'm not sure it makes sense necessarily to have this filtering take place in GetArtistsNav - reason is that that's designed to be hierarchical rather than multiply-filtered.\n@Montellese any comments?\n. Looks ok - needs a rebase on master is all.\n. @elupus: it uses ftruncate() which is why the changes are in place.\n. @amejia1 @TheUni\nThis relies on TagLib 1.8 which isn't currently released.  The version available on Ubuntu/Debian doesn't have the VFS interface we're using.  Not sure if we could do it another way or not (taglib 1.7.2 would need wrapping for VFS at the very least).  Thoughts?\n. I guess the only problem with waiting for 1.8 is that it might take a while :)\nNot sure if the musicbrainz stuff can be done independently of this (I suspect it can, but it might be messy to alter all the old implementations).\n. Well, 1.8 is going to be a long time before it hits the Ubuntu repos one presumes, given it hasn't been released yet, and they don't seem to be in all that much of a hurry to do so.  It seems silly to have to wait for them to do so, and it's not practical to work with the existing stable (would need wrapping) or to make it optional.\n. By the looks you want to use:\ntaglib_string.to8bit(true);\nrather than\ntaglib_string.toCString();\nhttp://taglib.github.com/api/classTagLib_1_1String.html#aac86b42f97707048978f4ac9dd801959\nAt the very least, you'll want to send \"true\" into toCString in order to give you utf8.\n. The StringListToVectorString() routine is correct (it passes true into toCString()) but the others are wrong.  Given that to8bit gives you a std::string directly, that might be a better way to go.\n. Alternatives would be:\n1. Invalidate all the paths in the db, so that next scan it'll rescan anyway. Problem is if online lookups are done, then any artists/albums not found will be re-checked even though they don't necessarily need to be (slow).  (The above scan turns off online lookups).\n2. Add ability to rescan-all to the music library settings - this would take the normal online lookup setting I guess.  Not sure of the use - the current \"Update Library\" automatically rescans tags that have changed, assuming either filesize or filedate of the media has altered.  I guess it might be possible to change a tag without these being changed on some filesystems?  If we allow this, do we prompt to also look for online content (if the setting is enabled)?\n3. Add ability to rescan a source from the context menu (not sure this makes sense to be honest - XBMC's music library automatically detects if the user changes any tags) - plus, I hate adding stuff to context.\n. See related #1089 - @TheUni - mind taking a look?\n. At the moment, no.  Reason is that WINDOW_SCREENSAVER is a window, not a dialog.\n. It'd be nicer if the python script would exit even if it didn't do it of it's own accord.\n. Seems OK to me.\n. Needs testing on mysql + build tests on linux + OSX.\n. Sure, but the problem is that they don't query the password manager on fetch.  If they did, then hooking them up would work just fine, yes. i.e. separate issue that you're welcome to address :)\n. @Montellese, yes, but it's being done in the same query as the fanart now which was always being done in the thumbloader per episode anyway, so is actually one query less per episode now.  A caching layer might still be advisable, but I think putting it in the thumbloader or the db might be the way to go if we want that (I suspect it's only useful for mysql or very large sqlite3 databases where the db pages need to be paged out all the time).\n. @Hitcher: I um'd and ah'd about it a bit - fanart_image was what I was aiming for consistency with, but I'm happy to change it if you feel no underscore is better.\n. Hmm, where is listitem.property(tvshowthumb) set, sounds like I can remove some code...\nWill make it consistent and push it in - thanks!\n. Heh - I figured it was probably me - I should have grep'd first.  Enjoy access everywhere (note you have it at the listitem level as well as player now).\n. If only we could rewrite 6 years of history ;)\n. Code looks good.\n@DDDamian, @chadoe, @WiSo, Need your signoff on WASAPI - DirectSound looks OK, but WASAPI looks like GetDelay and GetCacheTime need swapping around?  GetCacheTime should return the amount in seconds in the buffer, GetDelay should include this plus any latency in the hardware.\n@gnif, @FernetMenta your signoff for ALSA would be good.\n@cptspiff, @topfs2 your signoff on Pulse would be good.\n. Please report bugs/build issues to the forum or trac - we use github only for pull requests at this time.  Thanks!\n. forum.xbmc.org to register (same login on trac + forum).  You probably just\nwant to post on the forum - it's likely others that build may be able to\nassist.\nOn Sun, Jul 8, 2012 at 10:43 PM, Zakay <\nreply@reply.github.com\n\nwrote:\nHints on where the register link is? Can't find one so that I can submit\nthis.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/1133#issuecomment-6830343\n. alphabetical.\n. I guess the only thing that needs to be thought through is whether we can get rid of the path + filter combination.  ATM Get_Nav() calls Get_ByWhere using the path only, whilst smartplaylists call it using the filter only (basically).\n\nDoes it make sense to move towards using CVideoDbUrl() to pass stuff into the db from smartplaylists (and thus everything else?)  The bonus being that the SQL stuff is then isolated somewhat.\n. I guess it would pay to pull the query builder commit in as well.  Looks fine otherwise.\n. Looks good.\n. Looks fine.\n. Looks good.\n. What if the control has just become invisible - we'd need to re-render the region to update the screen.\nInvisible controls shouldn't be dirty anyway I should think, so I'm not sure where the high CPU is coming from.\n. Which view in which skin?\n. Ok, so a thumb view or list, or it doesn't matter?  Wonder if it's the scrollbar...\n. Correct - an invisible control that is clean should not be added to the tracker.\n. Not sure.  I think it might be ok as long as a hidden control that has just become visible marks itself dirty it should be ok, also we only set m_bInvalidated to false if it's visible.\nSlot it in, and if something breaks there's more to fix than just this :)\n. This job should definitely not be high priority - it doesn't need to be done instantly at all.\nIf we're worried about crashing, writing to the database at a similar time isn't the smartest move IMO.\n. The caching jobs are already low.\n. IMO drop it.\n. Yeah, you want something like while (itemsPerFrame-- > 1) { MoveUp(false); } probably to ensure it doesn't go negative.\nI would have thought that making the std::max value something like 0.5 or so would do the trick?\n. Heh, I meant moving the changes to CApplication into the second commit (there's still some whitespace issues in that file btw - silly xcode)\n. Yup, looks good.\n. Looks OK, but it would be much better to split out the cosmetics at least (and ideally the individual fixes) - that way, when we're bisecting for regressions later, we know clearly what each commit is supposed to do.\n. Arggh, why did you add the Update CPU usage to twice per second without comment?  This is not a fix.\n. Looks good.  Possibility to do CVariant -> CVideoDbUrl in the future do you think.  It would be nice to have a unified way of handling the filter structure (we currently have at least 3 such things).\n. Thanks :)\n. Are both commits needed?  The check whether we can set focus before setting focus seems to already be done before we set focus generally anyway?\n. @pieh: hmm, lists are a bit of a special case - I'm not completely sure that some folk won't be using the focus to do animations for example - I guess they'd generally be doing that on the main group though?\nMy concern is that it may introduce unintended consequences is all - it seems unrelated to the main fix?\n. Yes, but the focused control you're testing will never be the image control inside a list: The list will have focus.  That a subcontrol of the list has focus as well noone else knows about other than the list.  Thus, this should not be required at all for the original fix.\n. The window (in fact each group) stores the control it thinks is focused - see GetFocusedControl().  So yes, it could potentially be done at that level if you wanted to, eg in GUIWindow::Process.  It would be more efficient that way in fact.\nYes, there's a potential issue with 1c6c83d as you point out - atm it catches multiple controls thinking they have focus, so will be sending multiple window messages - is this why you did the other commit at the same time?\n. IIRC we use the optim only at the window level, which is really where you want it anyway?  That's not to say the optim couldn't also occur at the group level.\n. Looks good with the reset of m_focusedControl to 0\n. Not sure you can assign ids or that it would help - the skinner can (and does) have separate controls with the same id, so you need a multi_map either way, which we already have anyway.\n. IMO the const-ness is more important than the incorrect m_focusedControl (it's not really an issue if it's incorrect, after all - we ignore it anyway if that control can't focus).\n. Yup\n. A few more comments:\n1.  The rounding done by swscale is intentional - they're rounding towards +inf as commented in the code.\n2.  I suspect the reason that ffmpeg doesn't crash is because each row is padded out there to at least even (more probably aligned), so that it doesn't run into no-mans land.\n3.  The reason for no crash on various platforms could potentially be due to differently optimised paths (different optims may have/not have the bug).\n4.  Latest ffmpeg/libav appears to have a condition for where the destination is odd width it does full chroma subsampling - this may mask the issue in cases where the destination is odd (which is true for the image above, rescaled to height 720), but slows down the routine, ofcourse: https://lists.ffmpeg.org/pipermail/ffmpeg-cvslog/2012-January/045785.html\n5.  A simple alternate fix would be just padding the textures to at least even width, assuming that this is what swscale is expecting.  Given there's no suggestion of this in the docs for swscale, it is possibly a bug there?\n. IMO the alternate fix is probably better, as it ensures that the texture width stays the same so we don't lose any pixels when downsampling.  Obviously it would need decent commentary as to why it's being done.\nIn addition, providing the util would be useful as it might provide additional insight into what the crash is (eg it appears to be platform specific?)\n. Thanks - so you can't crash with that using our ffmpeg?\n. Is the pitch in XBMC the same as in your test?  Also, does eliminating -m32 make any difference?  Seems most strange that you can't repro using this - I'll have a play this evening.\n. You may as well merge it beforehand so we can tag with the fix?\nOn Wed, Aug 1, 2012 at 1:17 AM, Memphiz <\nreply@reply.github.com\n\nwrote:\nI will merge this in august merge window - no point for leaving it\ncrashing there...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1181#issuecomment-7397836\n. Heh, no idea :)\n\nOn Sat, Jul 21, 2012 at 10:15 AM, Arne Morten Kvarving <\nreply@reply.github.com\n\nwrote:\n@jmarshallnz remember what\nhttp://xbmc.cvs.sf.net/viewvc/xbmc/XBMC/guilib/LocalizeStrings.cpp?r1=1.74&r2=1.75was about? :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1182#issuecomment-7143073\n. @alanwww1 your comments?\n. Nothing should break as far as I can tell, so pulling.  If it breaks, at least it builds on Japanese systems, so we have more people to help fix it :)\n. Please rebase out the revert\n. How does CFile::Read throw in this case?\n\nThe try/catch is there to stop if the user sets an MD5 file that turns out to be 8 GB big...\nThat doesn't negate the fix, but given there's issues assuming that GetLength() will return non-zero for some URLs anyway, I suspect it might be fixed in other ways.\n@elupus, @cptspiff - googlecode URLs, eg:\nhttp://bossanova808-xbmc-addons.googlecode.com/git/repository-downloads/addons.xml.md5\nreturn Transfer-Encoding=chunked, which means CCurlFile::GetLength() returns 0 here, and thus the checksum is never read or stored.\n. Trac ticket for the latter here: http://trac.xbmc.org/ticket/13190\n. Once you're a bit more used to it, you'll notice you can force push a branch over the top of another one (or rebase it and force push) to save opening more pull req's.\n. Looks good - thanks!\n. You can't assume that the root dir contains no movies even if \"movies in folders named after the movie\" is enabled.  Simple reason: VIDEO_TS folders are stacked down to the parent folder item, which is then converted to a file.\nFurther, this would make essentially bugger all difference to the work that needs to be done anyway.\n. Do you have rarred files?\n. So why is it so slow?  Retrieving directories should be pretty quick - the music scan for example always does this, and I don't think we've had any complaints about that's rescan speed.\n. So the root cause is that the fasthash does not apply to your movie folders because Stat() is not implemented?\nDo each of your movie folders doesn't have any subdirs in them? i.e. would they normally be fasthashed if they were on any filesystem other than http?\n. Multi-cd movies will be stacked down to a file, so they're not a problem.  See the comment in CanFastHash for the other one - I wouldn't see a problem with excluding folders there.  A simple modification there would fix your issue?\n. Well, the first step is determining how it sets m_dateTime when retrieving a listing to begin with.  If you can get that information you'll be fine.  My guess is you can't :)\n. You could do it without skin changes by having an internal metadata.null or similar as you've already done, but I don't think you'd need a noop addition to the scraper XML - rather you could just set the library XML to empty and assume XML empty == noop ?\n. @koying: IMO if library=\"\" then we can assume the scraper is a noop and other stuff can flow from there, yes.\n@cptspiff: is that an acceptable compromise?\n. I guess the only thing I don't like about it is that it's a special case (i.e. we have to remember to take care of IsNoop() in a bunch of places).  How many of those are actually required - i.e. what happens currently with a scraper without CreateSearchURL() et. al. ?\nHmm, maybe it's just the naming I don't like (maybe scraper->CanScrape()?) ?\n. I think the key is to have as little special-casing as possible.  If what you have is minimal, then that's fine.\n. I don't see why not - android will mean that anything else that needs altering to make it work there can then happen in master.\n. Looks fine.\n. Please just (force) push to the same branch - no need to clutter github with hundreds of pull requests.\n. @jimfcarroll a review would be good - a few places we're calling python routines while in the scope of CPyThreadState that I'm not sure about.\n. Thanks :)\n. There seems to be a missing commit here?  The ones here look fine.\n. IMO to be fully useful you'd want to anchor the control in the middle rather than just left or right/top/bottom.\nCombined with moving the scaling stuff to the group instead of the window this would give nice ways to handle different resolutions (consider a aspect ratio kept block of content centered on the screen regardless of 4:3 or 16:9).\n. The anchor is what fits in this commit.  The sizing needs to be handled in other ways - essentially moving the scaling to the group rather than the window.\n. It seems to me that what we really want is an anchor point (inside the group) an offset from that anchor and a size.\nI don't see why that anchor point couldn't be arbitrary, perhaps with a few niceties included so that the anchor could be automatically set to the 4 corners or the 4 centers on each edge of the center of the parent.  The percentage stuff gets you this.  The problem is we shouldn't at this point assume that that point is fixed within the group - if you define it as a percentage then it should remain computed as a percentage - if the group width changes, then the anchor point should also move.  Currently we don't support this - but should we?\nThe use of an offset allows for the control to be aligned within the parent should its width or height alter.  eg you could anchor a auto-width label in the center of a group and it would remain centered regardless of width.  The only way to achieve that atm is by making the width large and centering the label within that - it works fine for labels, but what if we had auto-width buttons as well?  Again, this needs to be either fixed or dynamic.\nStoring the anchor and offset (and whether or not each are relative) in the child seems the most arbitrary way of handling positioning.\n. Yes - you basically have a point inside the rect of the parent (the anchor) and a point inside the rect of the child (the offset).  You can define each point either relatively (in percent) or absolutely (in pixels) - center is just 50% relative.\nThe existing m_posX, m_posY of the child would then be computed so that the two points coincide.  I don't know if it's advantageous to have these stored or not, but certainly initially that would make sense.  The child will need to know the parent's size for this in the case of the anchor being relative - currently they don't know this.\nAs for margins, I'm not sure what's best - effectively what you're doing with margins is determining width of child based on fixed separate anchors of left and right, or alternatively restricting the width to parent_width-margins (or alternatively restricting the parent_width to width+margins!)  It depends which bit is controlling the dynamic sizing.  I think it tends to be the parent that is in control, as that's the only logical way to handle things (else all the grandparents need to be dynamic as well).\n. @Jezz_X: What that doesn't allow is center this child inside this parent in the case where the child is dynamically sized, as your posx offset is absolute, not relative.  The bar inside the <posx offset=\"foo\">bar</posx> would need to be relative if we want that as well.  I don't have a problem with the basic idea otherwise (the offset is specifying the anchor and you could use offset=\"25%\" for a relative point).\n. Also, it's not clear which direction the posx takes.  In your example, a posx of 100 from the right was a positive value, whereas it should be a negative?\n. IMO the syntax parser for $CALC (which shouldn't be $CALC at all - rather just a direct arithmetic expression) unnecessarily complicates things at this point.  Yes, you could under the hood do that sort of thing - after all, you at the very least need to replace the existing floats with float + bool anyway (for relative positioning), so replacing them with a class that then evaluates isn't all that much of a step away from that.  You'd first need some routines to grab the values out of controls - this isn't particularly efficient in the case where we really only want the parents dimensions (as they're only a pointer away in the actual control, but in the variable they're a map lookup away) - but is what is needed should more general stuff be wanted.\nOne thing to keep in mind with calculation ability is it could lead to odd results, where the result of a computation is fed into the result of another one which is then fed back either directly or indirectly - ofcourse, this might actually lead to some nifty (if non-intuitive) ways of doing animation...\nFurther, should variables be used for this sort of thing, then one could have an animation on the transistion which could lead to some nifty effects (eg addition of a control to a grouplist slides the others along while fading the new one in).\n. Sure.  In that case I generally approve of the idea of:\n1. Allowing relative values in posx/width.\n2. Allowing some alignment information in posx.\n3. Allowing (if needed) some calculation ability.\nNumber 1 and 2 would allow simpler placement of controls, so that's a good thing.  Number 3 would give additional control.  My guess is that number 1 and 2 are primarily for layout of chunks of controls, rather than layout for single controls - e.g. you could imagine 3 groups vertically (header/content/footer) for the case of 16x9 vs 16x10 where the header and footer are anchored to top and bottom and may or may not scale (If they scale it's already doable), and the content anchored in the middle vertically and not scaled. Similarly, you could imagine some horizontal layout potential, where a content group is expanded due to more room on 16x9 vs 4x3.  This would require a different control (different width), or an auto-width/variable width panel.\nThe way Jezz_X specified <posx> has some merit, though I'm not sure exactly how to specify the offsetting.  The way he had it, the offset attribute defined the anchor, with the <posx> value being the offset from that anchor.  I suspect that treating the value in <posx> as the anchor might be more descriptive.\n<posx align=\"-100\">200</posx>   <!-- position 100 from the left of parent -->\n<posx align=\"30\">20%</posx>   <!-- position 30 pixels to the right of 20% of the parent -->\n<posx align=\"50%\">50%</posx>   <!-- center the control at 50% of the parent -->\n<posx align=\"100%\">300</posx>   <!-- place the control so the right edge is at 300 from the left of the parent -->\n<posx align=\"right\">right</posx>    <!-- align control to the right edge of the parent -->\nIn fact, it may well be that all we require for the align parameter is left/center/right.  I doubt you'll really want to align the 20% point of the child with the 60% point in the parent for example.  The only one that would be useful I think is right aligning a control 100 pixels from the right edge of the parent (like we do currently with <posx>(100+width)r</posx>)\nMargins might be a property of the parent I think if we want that later on - they make sense only on a group.\n. I don't think it matters either way whether the left or right edges are specified or whether the position + width/height are specified, or both, as they're all calculable.  I do think that left+right (or right+width) specified in some cases is easier to understand from reading the XML (after all, this is what the 180r stuff is for) than left+width, so wouldn't have a problem supporting that.\nAgreed regarding the anchors in parent + child likely being the same in most cases, but I can see some useful cases where they might not be, such as aligning two labels either side of the center of the parent, and aligning in any way from an absolute position in the parent.\nPerhaps what we actually need here is a general position tag with both alignment, position (within parent) and size?  I think you'd only need \"left\", \"right\", \"center\" and \"width\" where percentages or absolutes can be specified for each, and you need only 2 of them defined.  All measures given are respect to the parent - you could use the r to denote measured from the right:\n<posx left=\"5\" width=\"100\" />\n<posx center=\"40\" width=\"50\" />\n<posx left=\"10\" right=\"95\"/>\n<posx right=\"95r\" width=\"500\"/>\n. Yeah, exactly.  I think starting with static seems the easiest way to go (i.e. extending this with a center attribute).  The nice thing about the attributes is it indicates that they're all equal and are all used when figuring out where to place things, but you could do it with tags instead as you've done.  Not sure what skinners would prefer.  @Jezz_X ?\nAs for background images, for labels it seems the obvious thing to do is use a (disabled if necessary) button for it and hookup autowidth for that.  For auto-width grouplists with a background image, a variable setup would be the way to go, though this is a prime case where processing order is important and may give odd results - we process in render order, so the image is processed before the grouplist, so the image will be the wrong size for 1 frame.  I dunno if this would be noticeable though (and I suspect skins might already do the same thing via conditional images/animations anyway?)\n. Need to decide if you want to modify the gui settings or not with these methods.  If you do, then shouldn't you be saving afterwards?  If you don't, then modifying them to begin with is something that is not required - or do the StartWebServer et. al. check these?\n. Changes look fine.\n. I notice that artist name is set to the musicbrainz id when not scraped yet - perhaps it should instead be set to the artist info from the tag so that if/when scraping fails, at least we have something useful in the UI?\n. Correct.\n. Any releases in the 12.x line are bugfixes only, so you'll need to wait until 13.x if you want it in a final (else, I'm sure it'll be merged as soon as Frodo is out the door).\n. Please work it out without mailing over 100 people every time you muck around!\n. When you do a pull req it shows how many commits are gonna be in it - take note.\nThe code looks valid.\n. IMO we should just remove this dialog instead of implementing it for other devices.\nFurther, the code changes done don't apply only to the apple remote - they apply to any input device (so the comments are not correct).\n. Thanks - will pull in with some minor changes.\n. 6037f25dfbc4c\n. What's the point?  Set the correct setting when scraping and you don't need this at all.\n. What you're missing is that if you don't have \"Movies in separate folders named like the movie\" enabled then movie.nfo or folder.jpg/fanart.jpg won't be read in on scan anyway.  Basically you've added a setting that overrides the existing setting for no purpose as far as I can tell.\nIf what you want is to allow it to export folder.jpg/fanart.jpg/movie.nfo in the case that \"Movies in separate folders named like the movie\" is enabled, then I see no issue in doing that by default, though the additional check that there is only a single movie in the database named like that would make sense as a safety check.\n. Movies in separate folders influences whether or not folder.jpg and movie.nfo are read at all (and also prioritises them appropriately).  Thus, half your patch is useless if you set that option which you obviously should be doing.\nThe only bit left are what we export.  By default we don't export folder.jpg, movie.nfo or fanart.jpg as we choose instead to do the simple case that works for both methods of scanning.\nThus, I conclude that all you want is to be able to export these specifically, and it's most appropriate to do that in the case that setting is configured, possibly with a backup check that there really is only a single movie in the folder.\n. What is your aversion to setting the setting that does exactly what you want?\n. It's real simple.  If you have your movies in separate folders, then enable the option.  If you don't, then don't.\nClearly, since you want to read a generic file (movie.nfo) inside the folder of a movie, your movies are in separate folders.  So enable the option!\n. Exporting movie.nfo file in your setup is then wrong, no?  It can never be read in again unless you're happy in the exact same nfo file being read for all those movies in the root folder.  This is why you have the check for a single movie in the folder.  But what if you go and add another one to that folder, like you do for root?\nI think you can see that this is not an acceptable workaround.\nI agree with the principle that XBMC should handle scraping your collection - indeed, it would without issue if you have nfo files in place, or if you scrape using filenames + recursion (assuming your filenames aren't as silly as the folder names).\nA better improvement than your suggestion, then, would be a switch to specify \"movies in separate folders\" separately from \"use the foldername for lookup\".  The ideal, ofcourse, would be for XBMC to automatically choose the most appropriate thing to lookup (or failing that, to attempt both).\n. Sure, but if you happen to have a movie.nfo file in a folder that has 2 movies (perhaps with the 2nd movie added later) it's broken.  Ofcourse, a smart way for XBMC to handle that would have been counting the movies found in the folder and using movie.nfo if there is only one.  For export, however, it's much safer to assign to the file, as without the user specifically telling us that they're not going to add other movie files to that folder, it's a bit hard to guess (particularly if the foldername and filename differ quite a bit).\nWhat was your issue with .nfo files btw?\n. Well, a simple fix there is to support .jpg/png instead :)\n. Note that my changes for supporting banner.jpg/poster.jpg will mean that we'll be exporting things such as movie-poster.jpg or similar, which I think will take care of your .tbn issue?\n. Nope - still in my head more than anything - will be merged this window.\nOn Tue, Oct 2, 2012 at 7:40 PM, Chris Browet notifications@github.comwrote:\n\nI'll check that out. Are those changes already merged?\nLe 2 oct. 2012 08:38, \"jmarshallnz\" notifications@github.com a \u00e9crit :\n\nNote that my changes for supporting banner.jpg/poster.jpg will mean that\nwe'll be exporting things such as movie-poster.jpg or similar, which I\nthink will take care of your .tbn issue?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1218#issuecomment-9060399>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1218#issuecomment-9060442.\n. Weird - are you completely sure you're on this branch with this commit?  As I don't see that at all.\n. Ok, updated with a fix.\n. Only when extrafanart is enabled?  I enabled it and didn't get any extrafanart at all.\n. Sure, do up a video of home so I can understand what is going on.\n. Updated to fix the extrafanart issue.\n\nI can't repro any flickering when scrolling through menu items on home.\n. Sounds good - IIRC there's some other minor cases (eg watched status probably needs the same treatment) but I think getting resume point working might point the way with the rest of it.\n. Yeah, I think it can be killed off there now.\n. @night199uk your thoughts?\n. Given that we now know that an album's art is embedded, we could (if scraping is enabled + a good hit is found) overwrite the existing embedded art with the scraped art.\nThe problem, ofcourse, is that we don't know the users intention.  We assume that tags are king with everything else, so IMO making the same assumption here is best as well.\nfolder.jpg will ofcourse still be the highest priority.\n. @classicspam mind squashing this down - will pull it in then.\n. Thanks :)\n. So the scraper returns an episode guide that allows it to match on the season/epnum from the filename, but then returns something different for the episode/season number?\nThe only problem is whether existing scrapers return anything by default for episode and season...\n. Yup - my main concern is for thetvdb.com's scraper, as that is the default\nand is used by almost everyone.  So if that breaks, we're in trouble ;)\nAs long as you're completely, 100% certain that that doesn't break,\nregardless of settings (dvd order/aired order, absolute) then it's fine for\nthis to go in as-is.\nOn Tue, Aug 7, 2012 at 8:45 AM, thebandit notifications@github.com wrote:\n\nYes that is correct. The scrapers' source provides multiple numbering\nschemes in the xml (absolute, dvd, etc) so the scraper uses one scheme for\nthe episode guide and a different scheme for the episode details. This is\npossible since XBMC uses the unique episode id provided by the data source\nto perform the match between GetEpisodeList and GetEpisodeDetails.\nThe default tvdb.com TV scraper does provide season/episode numbers in\nGetEpisodeDetails however I did check several 3rd party TV scrapers and it\nseems not all of them return that information in GetEpisodeDetails by\ndefault. This is why I did the modification as an if statement. Since\niSeason and iEpisode are defaulted to -1 in the VideoInfoTag if these\nvalues are not returned by the scraper then it will use the season/episode\nvalues from the filename as it does currently.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1225#issuecomment-7535248.\n. @cptspiff this considered a fix?\n. A builtin would probably touch less code as well (just add to Builtins.cpp).\n\nAlso, you need to cleanup the whitespace indenting - compare the diff on github.\n. AdvancedSettings seems reasonable - everything you need is there already as you suggest.\n. @elupus ping\n. Feel free to merge in the September window.\n. Fix - merge at will.\n. e4b891a and 9e68714 could be squashed.  Potentially into 548d725\n. Ordering on github is always a bit out, yup.\nOn Aug 26, 2012 6:03 AM, \"Alasdair Campbell\" notifications@github.com\nwrote:\n\nI don't know why the ordering is weird here, it's correct in my git logs\nfor both branches\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1238#issuecomment-8025788.\n. Fine.\n. Does it switch back when playback stops?\n. IMO when playback stops it should revert to the UI res, yes.\n\nOne thing to consider is that we could also be switching from/to a resolution that differs by more than just the refresh rate in the future.  There's a patch to not scale video for example.\n. Looks good.\n. The advanced setting effects only the SQL queries.  IIRC we used to scan\nbased on the full artist string.  This has since changed to scan all\nartists, so it may well be that it might make sense to make the setting\napply to scraping as well (to speed things up?) - not sure.\nOn Tue, Aug 7, 2012 at 7:56 AM, Sascha Montellese\nnotifications@github.comwrote:\n\nI extracted the changes to SmartPlaylist.cpp which were actually fixes for\nexisting bugs (which nobody noticed so far it seems) and already pushed\nthem to master.\n@jmarshallnz https://github.com/jmarshallnz or @night199ukhttps://github.com/night199ukcould one of you shed some light on the implications of enabling/disabling\n\"include artists who appear only on compilations\"? Does it change the way\nthe scraper works (i.e. it ignores those artists if enabled) or does it\nonly change the way the SQL queries in CMusicDatabase::GetArtistsNav work\n(with the albumArtistsOnly parameter)? If the former holds true the\n\"compilation artists\" rule I added does not make any sense otherwise IMO it\ndoes.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1249#issuecomment-7533863.\n. 1. Skin settings don't use these routines at all, so all you're doing is speeding up XBMC's normal settings, of which there isn't that many anyway.  Further, they shouldn't be used all that often anyway (i.e. shouldn't be used every frame like skin settings are).\n2. CStdString vs basic_string will make bugger all difference.  With that said, using std::string seems more sensible either way.\n3. std::unordered_map is Cxx11 (or TR1), everything else in XBMC is not.  Thus, IMO this is not acceptable unless we've guaranteed that we're not using a compiler that won't have this feature.\n4. std::unordered vs std::map may not offer much advantage in the case of the order of 100 elements - it would depend on the hashing speed compared to the number of compares otherwise needed (log(n)).\n. Oh, and it wasn't obvious, but +1 on the removal of ToLower.  Just drop 050e826\n. In that case hash_map is a no-go.  With 250-odd items in the map I doubt it'd be much faster anyway, though that would depend how good the hash is, ofcourse.\n\nAs for whether CStdString or std::string should be used, a std::string would be preferred - again, there wouldn't be much (if any) measureable performance difference between the two (one is a wrapper for the other).\n. There's a bug introduced here, in that skins can query boolean settings via System.GetBool().  Switching to lowercase only will mean you need to lowercase that string (GUIInfoManager.cpp) as well.\nThere may well be other things that access similarly - it would be worth reviewing all calls to g_guiSettings.Get*() to make sure nothing breaks.\n. You'll either want to drop 7aa45a2 from this one or #1253.\n. You need to address the comment above first:\nhttps://github.com/xbmc/xbmc/pull/1252#issuecomment-7595152\n. The much better option, given that little other values in the skin XMLs are case-sensitive, is to ToLower() it in GUIInfoManager.cpp.  It might be possible to do this when you place the string into the lookup vector when parsing the info label to save it being done every frame.  You'll also want to check any other usage of this.  Examples would be HTTP-API (not really a high priority as it will be gone for Frodo), JSON-RPC, and python.\n. All infolabels are case-insensitive.  You've just made one that is case sensitive.  Thus, you've broken the design.\nWhether some add-ons and some clients of JSON-RPC work or not, we need to verify that all will work by checking it forces case-sensitivity, or makes it case-insensitive at the source.\n. @Karlson2k if you update infolabels and possibly also add-ons (i.e. the python usage of the api) then I have no problem with this going in.\n. @Karlson2k Grep for SYSTEM_GET_BOOL in GUIInfoManager.cpp.  You'd ideally ToLower() the passed in param when parsing system.getbool (just drop it from the lookup table and add the case in the same place system.memory et. al. are).\n. It's OK, but it would be much nicer if it wasn't done per-frame.  To do this, add something like this further up:\nif (prop.name == \"getbool\")\n{ // settings use lowercase keys\n  return AddMultiInfo(GUIInfo(system_param[i].val, ConditionalStringParameter(StringUtils::ToLower(prop.param), true)));\n}\nthen remove getbool from the system_param lookup table above.\n. No, that won't work.  Some parameters are case sensitive.\n. Yeah, remove from the map is fine.\n. Looks fine, yes.  Thanks :)\n. Thanks!\n. Um, what's wrong with the default constructor?\n. Please check before you do a PR - over 100 folk receive notifications each time you do one, so if you can limit it to just the ones that matter that'd be appreciated :)\n. I don't mind the cosmetics, but the rest is wrong.\n. Missed the fixes due to the rebase not grouping them together on github.\nThe fixes are wrong, yes.  The fallback is not passed in to be used, rather to be set.  There should be some doxy about this though as you obviously read the code wrong.  If you could add it that would be useful.  See how the fallback is set in CGUIInfoManager::GetItemImage()/GetImage() et al.\nAnd there's no reason at all for replacing empty strings with EmptyString.  It's only any use if you need to return a const reference to a string (whereby \"\" is not available as a return).  If you're returning a CStdString object, there is no advantage at all - either way a copy or assignment is involved.\n. You do not know what the compiler will do.  At worse it will likely be a\ncopy constructor versus a copy.  i.e. no difference at all for an empty\nstring.  Again, the only measure of optimisation is timing the code in a\nproduction environment to ensure there is a speed difference.\nOn Wed, Aug 8, 2012 at 10:03 AM, Karlson2k notifications@github.com wrote:\n\n@jmarshallnz https://github.com/jmarshallnz\nSo on one side is copy and on other side is initialization of object and\nthen copy.\nSeems that skipping of initialization should be better and faster.\nAnd I'll apply a right fix for \"fallback\".\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1256#issuecomment-7568382.\n. Exactly.  Also, it's non-obvious what the compiler will do in this case.\nFor example it may do return value optimisation, whereby one or more copies\nmay be saved, or it may not.  Indeed, switching to using EmptyString\ninstead of \"\" might actually cause the compiler to drop return value\noptimisation.  Without comparing the asm output you don't really know :)\n\nBut the key principle applies either way: If you can observe an improvement\nand the improvement is worth the code complexity changes (if any) then the\noptimisation is useful.  I find that if you can see an optimisation while\nkeeping the algorithm the same, it's likely the compiler can also see it :)\nOn Wed, Aug 8, 2012 at 10:15 AM, Karlson2k notifications@github.com wrote:\n\nActually, I understand what compiler can do. :) Even can imagine what\nhappen after compiler optimization.\nBut I understand your point of view: if result is not be better for sure,\nthan prefer conservatism over changes. :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1256#issuecomment-7568677.\n. No, that is also wrong.  Drop it.\n. 3ed1d5b\n. What advantage does this give?  You can't just insert a change without a decent reason for it, and \"Attempt to\" doesn't suggest there's any actual change discovered.\n. And what real advantage does it actually accomplish?  Optimisation is all\nabout making real differences.  If there's a real, observable performance\nincrease using this, then document the results of that increase.  Otherwise\nthere's no point in doing it at all.\n\nNote that XBMC doesn't use windows messaging heavily, as we don't use any\n(other than window decoration in windowed mode) win32 controls.\nOn Wed, Aug 8, 2012 at 9:56 AM, Karlson2k notifications@github.com wrote:\n\nThis should change internal algorithms so COM becomes faster.\nhttp://msdn.microsoft.com/en-us/library/ms678505.aspx\nIt only can be faster and does not guarantee any improvement, but\ndefinitely will not be worse.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1257#issuecomment-7568220.\n. Nice work :)\n. We don't just run on Windows though, so unless it has a beneficial effect on all platforms, this is a no-go.\n. So you've actually done tests on a number of different\nfilesystems/protocols (smb/afp/local etc.) with a number of differently\nsized files over a number of different network types (wired, wifi, local)?\n\nOn Wed, Aug 8, 2012 at 9:44 AM, Karlson2k notifications@github.com wrote:\n\n@jmarshallnz https://github.com/jmarshallnz There is placeholder for\nother platforms, but it's common on all platforms - bigger buffer results\nin faster copy.\nSo I'm sure that it will improve performance on all platforms.\nBut I can #ifdef for now-Windows platform with old (xbox) value. Should I\ndo so?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1260#issuecomment-7567902.\n. I've removed the comment in master. Unless there's some good profiling showing that 256k is be significantly than 128k (it can't really be worse), no need for this.\n. Please split out the various changes into separate commits, as we'll likely take some but not others.\n. @dez-dk Any chance you're going to revisit this?\n. Assuming your commit is on top of your branch:\n\ngit reset HEAD~1\ngit add -p files\njust add the bits that are related to a single thing (e.g. the skipping of sample folders in CanFastHash), then commit the results.  Then repeat the git add -p, git commit until everything is nicely contained in separate commits that do one thing and one thing only.\nThat way we can more easily review + pull in the bits we want.\n. Looks good, but I guess this is going to (potentially) break existing plugins that provide multiple content types?  Dunno how many there are currently.\n. Yeah - most will be using URL options for stuff anyway, and will likely be ignoring ones they don't understand.\nWe should be bumping the API either way.  I think frodo-pre is heading out this merge window, so seems a reasonable place to break it.\n. Sounds good\nOn Thu, Aug 9, 2012 at 8:35 AM, Arne Morten Kvarving \nnotifications@github.com wrote:\n\nwill do, but as there are several other potential breakers in already i'd\nprefer to do it separately (and tomorrowish)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1265#issuecomment-7596477.\n. Can you please squash these down into one commit - we don't need the fixups.  To do this:\n\ngit rebase -i HEAD~7\nand follow the instructions on the screen to squash down the last 6 commits.  Then force push back to your repo to update the PR.\n. Yup, now that you're learned, I can be a pain in the arse and ask you to kill the cosmetics (spaces at end of line - see the empty lines you've added).  Once done, you can modify your top commit as per:\ngit add files_you_changed\ngit commit --amend\n. In the github diff, notice the \"empty\" lines added (with a plus sign) also have 2 spaces after the plus.  Remove the spaces (your editor may have added them automatically to be \"helpful\").\n. Yup, looks good.  @opdenkamp I'll leave it to you to push the button.\n. Looks good.\n. Correct.\nOn Mon, Aug 13, 2012 at 6:48 PM, Arne Morten Kvarving \nnotifications@github.com wrote:\n\nconsidered a fix no?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1271#issuecomment-7684449.\n. Before we even get into the code, where is the bug?\n. Given that win32env.cpp comes directly out of PostgreSQL, I'd suggest if there are any bugs in that code, you should direct them to PostgreSQL first and foremost.  Perhaps any bugs are really only due to it's use in XBMC?\n\nIf you want this accepted, remove all MultiByteToWideChar stuff, get rid of everything except char* (utf8) versions of put/get/set/unset designed so they work exactly like posix where doable.\nOnce the trees are cleared we might be able to see the forest.\n. Please drop the wide char versions - they're not required at all except for\ninternal to win32.\nFurther, you can probably drop the char * ones from the API as well and\njust use const std::string &.\nOn Mon, Aug 27, 2012 at 10:08 AM, Karlson2k notifications@github.comwrote:\n\n@jmarshallnz https://github.com/jmarshallnz @wsoltyshttps://github.com/wsoltys\nPR is still waiting.\nJust check e777e57 https://github.com/xbmc/xbmc/commit/e777e57 at first.\nThis could solve number of problems and potential problems.\nI'm still not sure about charsetconverter as SetEnv can be used before it\ninitialization. May be implement win32 charset conversion at least as\nfallback?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1272#issuecomment-8038346.\n. I know, thus the suggest to accept a const std::string & which will quite happily take both.\n. XBMC does everything in utf8.  Drop all wstring functions as they're not needed.\n\nUnder which circumstances is the charset convertor not available?\n. Isn't that one just being used for utf8?\nOn Mon, Apr 8, 2013 at 9:15 AM, wsoltys notifications@github.com wrote:\n\nApparently a wchar version was needed: c5f50fbhttps://github.com/xbmc/xbmc/commit/c5f50fb41e4a8353a1817ffcd127a1706b838ccf\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1272#issuecomment-16024384\n.\n. Is the environment stuff even used before initialization or after shutdown?  If it is, then I'd tend to use the win32 API entirely for the utf8->wide conversion.  If it's not, use the charsetconverter everywhere.  Mixing and matching doesn't make much sense.\n\nXBMC doesn't use a wchar version of set/putenv at all so requires only a utf8 version (obviously wrapped to the wide API).  There's no point having wrapping code that isn't used.\n. Yeah, agreed - just use the win32 API for conversion to keep it simple.\nIt might be useful to wrap in a (static?) class I guess.  If so, keep the name of the functions simple, corresponding to the name of the posix function (SetEnv, PutEnv etc.)\n. Just a few cosmetic comments more than anything.  One last one: I'd name it Environment.h/cpp (CEnvironment) - we don't need to know it's in Xbmc :)\n. Looks good.  Build needs testing on Linux, else drop the Makefile change.  Will merge in May window.\n. Looks fine.  Not sure if this will mean that all shares are available or not, but if not that's a problem that presents elsewhere as well as here.\n. An alternate fix would be picking up ADDON_STATUS_UNKNOWN in AddonDll.h ?\n. Perfect - thanks :)\n. Given that the only info we're displaying is the progress percentage, the interface could be simpler to just include that percentage, and then you could drop the lock.  Also, we could potentially hook it up to the busy dialog, which is possibly a bit lighter, and doesn't have the issue with clashing with the progress.  I think the existing busy could just have a percentage added to it (progress or label) easily enough without breaking skins.\n@Jezz_X your thoughts?\n. I like the idea of allowing feedback, but IMO the busy would work better than the main dialog overall:\nAdvantages:\n1. Much lighter weight.\n2. Doesn't have issue with progresses that python or other VFS's might throw up.\n3. Doesn't require progress should the VFS not provide it.\n4. Simpler code (no locking required on the progress, a single new (const) function to IDirectory to get progress).\nDisadvantages:\n1. Skin change required (though it would be backcompat)\n2. Not as obvious that the process is cancellable?\nI suspect number 2 isn't much of a problem - the natural thing when something is busy is to try going back?  If we find it's an issue, a label could be added to the working dialog to make it clear.\n. I meant not as obvious to the user (no gigantic \"Cancel\" button).\nI'll mock something up on the weekend unless someone beats me to it.\n. Ok, some work on progress bar to busy dialog can be found here (branched off here).\nhttps://github.com/jmarshallnz/xbmc/tree/add_progress_to_busy_dialog\n@Jezz_X: nasty skinning work there by me - would appreciate you having a crack.  ATM it's id 10 - not sure whether to make it an infolabel or not - your thoughts?\n. @JezzX: see above.\n. @JezzX I've pulled in the confluence progress dialog addition to busy.  Would appreciate you taking a look.  ATM it's a fixed ID, but I could do an infolabel if you think that is more useful.\nThis is mostly a fix, but as it changes API, it would be nice to get this in the merge window.\n. @cptspiff: what do you think about merging as a fix (there's still issues with search dialogs popping up under the progress in current master)\nObviously the skin needs work, but I can drop 7285c2e and ask @JezzX to do it (or do it myself and thus force the issue)\n. Ok, main thing is I think we need to clearly identify where we need overriding in the subclasses.  Seems to me we have:\n1. After XML load and before control parsing (for python label parsing).\n2. After control parsing (filling default content that anims and control state might need).  Should run once we have controls either from in memory or from a load.\n3. After window is up, anims are all setup and we're ready to go (filling in content).  Should run every init.\n... window cycle ...\n1. After window close animation and before controls are cleared (reset controls to default state).\n2. After controls are cleared and before unload (not sure if needed)\n3. After XML unload.\nNot sure about 2/3 vs 5/6\n. IIRC winxml windows parse for existing Localise stuff and bumps the string IDs up as needed?\n. Looks like we can do cases 2 and 3 above via OnInitWindow, as that runs every time, right?  So we could do:\nDerivedClass::OnInitWindow()\n{\n// do whatever needs doing in 2\nBaseClass::OnInitWindow()  // sets up animations etc.\n// do whatever needs doing in 3\n}\nSo I don't think we need a new callback there.\n. Changes look good\n. This seems to suggest some other problem is present to me.  If the texture\nis not allocated, we shouldn't be fading one out. Similarly we shouldn't\nhave a current image set? Don't controls become deallocated when the window\ndisappears?  Perhaps m_currentTexture needs to be set empty at that point?\nWith that said, at least the second bit shouldn't be a problem as\nCGUITexture takes care of not doing anything if the path is the same.\nAnother thing I'm not sure about is why the same image path would be used\nfor two different images anyway?  What's the actual issue here?\nOn Thursday, September 13, 2012, Voyager-xbmc wrote:\n\n@pieh https://github.com/pieh - thanks for the great work. I was close\nto the same solution (only the 2nd if though) but I think this is it. I'll\nplay with it - happy to report experiences after the weekend :-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8543793.\n. Perhaps we should clear out the texture info in free texture then? This\nwasn't an issue before as control was killed.\n\nOn Friday, September 14, 2012, Michal Piechowiak wrote:\n\n@jmarshallnz\nProblem is we clear m_currentTexture string in CGUIImage::FreeTexture\n(which is called by ::FreeResources) but we dont keep m_texture in sync.\nSo\nif infolabel switch value to empty while control is after ::FreeResources\nbut before ::AllocResources we won't update texture and thus will use\nstale\ntexture info (as btoh m_currentTexture and and new value of infolabel is\nempty, so they're equal, so textureinfo won't be updated).\nI will check it after weekend and do proper PR for it.\nOn Sep 14, 2012 10:29 AM, \"jmarshallnz\" >\nwrote:\n\nThis seems to suggest some other problem is present to me. If the\ntexture\nis not allocated, we shouldn't be fading one out. Similarly we shouldn't\nhave a current image set? Don't controls become deallocated when the\nwindow\ndisappears? Perhaps m_currentTexture needs to be set empty at that\npoint?\nWith that said, at least the second bit shouldn't be a problem as\nCGUITexture takes care of not doing anything if the path is the same.\nAnother thing I'm not sure about is why the same image path would be\nused\nfor two different images anyway? What's the actual issue here?\nOn Thursday, September 13, 2012, Voyager-xbmc wrote:\n\n@pieh https://github.com/pieh - thanks for the great work. I was\nclose\nto the same solution (only the 2nd if though) but I think this is it.\nI'll\nplay with it - happy to report experiences after the weekend :-)\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8543793>.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8554736>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8562158.\n. I'd think that calling m_texture.SetFileName would do the trick, and seems\nlike the nicer fix than keeping stale information around.  The problem is\nnot m_currentTexture, but rather that m_texture isn't in sync with it. An\nalternate fix would be always calling m_texture.SetFileName in the alloc\nmethods?\n\nOn Friday, September 14, 2012, Voyager-xbmc wrote:\n\ntried this, and it works. Just don't empty the m_currentTexture anymore,\nso the comparison with strFileName in ::SetFileName works properly. I\nchecked and m_currentTexture isn't much used anywhere else. I also tried\nmessing with clearing out the texture info (m_info.filename) in the free\ntexture method, but that creates a lot of issues with the gui...\nvoid CGUIImage::FreeTextures(bool immediately /* = false */)\n{\nm_texture.FreeResources(immediately);\nfor (unsigned int i = 0; i < m_fadingTextures.size(); i++)\ndelete m_fadingTextures[i];\nm_fadingTextures.clear();\n//m_currentTexture.Empty();\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8575689.\n. Isn't that identical to calling m_texture.SetFilename(\"\") after resetting m_current texture ?\n. You needn't mark the region dirty.\nOn Sep 18, 2012 7:50 AM, \"Voyager-xbmc\" notifications@github.com wrote:\n@jmarshallnz https://github.com/jmarshallnz : I would say it's almost\nidentical, with the exception of two things: checking the value already in\nm_currentTexture (don't do anything if already empty) and the dirty region\nhandling. With pieh's solution working fine, I have adapted it as follows.\nNote that without the if (!m_currentTexture.Equals(\"\")) you get again a lot\nof empty/missing images as in my screenshots above.\nvoid CGUIImage::FreeTextures(bool immediately /* = false */){\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  if (!m_currentTexture.Equals(\"\"))\n  {\n    m_currentTexture = \"\";\n    if (m_texture.SetFileName(m_currentTexture))\n      MarkDirtyRegion();\n  }}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8641974.\n. if (!m_info.IsConstant()) // constant textures never change\n  m_texture.SetTexture(\"\");\n\nIn the same place we reset m_currentTexture.\nOn Sep 18, 2012 7:05 PM, \"Voyager-xbmc\" notifications@github.com wrote:\n\ntried it, and looks good. I don't know if there is a real reason to keep\nm_currentTexture empty for the constant textures. In any case I tried your\nsolution, it works. I have also tried modifying it to also sync\nm_currentTexture in ::AllocResources and that works too.\nif (m_info.IsConstant())\n{\n  m_texture.SetFileName(m_info.GetLabel(0));\n  m_currentTexture = m_texture.GetFileName();\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8662154.\n. Put the m_currentTexture.Empty() outside the if I think?\n\nOn Wed, Sep 19, 2012 at 5:50 PM, Voyager-xbmc notifications@github.comwrote:\n\n@jmarshallnz https://github.com/jmarshallnz - just to make sure, you\nmean it like this?\nvoid CGUIImage::FreeTextures(bool immediately /* = false */){\n  m_texture.FreeResources(immediately);\n  for (unsigned int i = 0; i < m_fadingTextures.size(); i++)\n    delete m_fadingTextures[i];\n  m_fadingTextures.clear();\n  if (!m_info.IsConstant()) // constant textures never change\n  {\n    m_currentTexture.Empty();\n    m_texture.SetFileName(m_currentTexture);\n  }}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8679988.\n. The first 3 look fine.  Not sure the 4th is needed - see my comment there.\n\nOn Thu, Sep 20, 2012 at 8:11 AM, Michal Piechowiak <notifications@github.com\n\nwrote:\n@jmarshallnz https://github.com/jmarshallnz\nhere's pack of fixes for regressions I've introduced (first 3 commits),\nincluding one we were discussing + additional \"improvment\" for multiimage\nto avoid loading directory 2 times on alloc:\nhttps://github.com/pieh/xbmc/compare/empty_image_fix\npush them or they need more work?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8704858.\n. IMO looks better, yeah.  The mp3 fix looks fine as well.\n. Thanks :)\n. Please also add a test case for this to Test().\n\n@Karlson2k: Did you get my PM on the forums?\n. @Karlson2k We now have a unit testing framework for tests.  Mind moving the tests into that?\n. Thanks.  Is there a use case where a string was passed to TimeStringToSeconds with spaces, tabs or new lines in front or at end?\n. Does this actually happen, or is it a theoretical issue?  I don't mind either way, but it's nice to know if it actually fixes a current issue.\n. Just drop the bits that use CStdString(W) in place of the WCHAR buffer - there's no decent reason to do so.  The others look fine.\n. The 32k WCHAR array is only 64k on win32, which should be OK - that one is probably a bit questionable though, so can probably be left the way you have it (it's already using a CStdStringW anyway).\nThe others don't really need changing from the array on the stack.  We prefer not to use CStdString unless we have to as it's not as easily portable.\n. I've already said it's a bit on the large size.  This is very much an exceptional case, though - I doubt you'll find any this large elsewhere in the codebase.\nI have no problem with you changing this, just don't use CStdStringW unless you have no other option.\n. That's fine - so point those cases out, rather than silly things that use\nMAX_PATH = 260.\nOn Mon, Aug 27, 2012 at 9:51 AM, Karlson2k notifications@github.com wrote:\n\n@wsoltys https://github.com/wsoltys Yes, I got it. :)\n@jmarshallnz https://github.com/jmarshallnz About large stack usage...\nCheck out:\n- CKaraokeLyricsCDG::cmdScroll, tmp\n- CZipFile::Seek, tmp\n- CSAPSessions::Process, data\n- CKaraokeLyricsCDG::Render(), pixelbuf\nIt's just some of them... :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1293#issuecomment-8038207.\n. @Karlson2k: Any chance you're going to clean this one up at all?  If not, please close.\n. Looks good.\n. Go for it.\nOn Aug 17, 2012 8:22 PM, \"huceke\" notifications@github.com wrote:\nHit merge ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1297#issuecomment-7812432.\n. Go into a list and press the menu button...\n\nWhether it's needed or not I dunno.\n. You can probably just remove the Loadfile in the constructor to save changing any other code?\n. A quick grep through the sources shows only 2 places using the constructor\nthat takes a string.  In the scraper parser and in the CDVDStateSerializer.\nThe latter isn't being intended to load at all.\nFurther, before we switched from TiXmlDocument to the wrapped version all\nof these would have used the base TiXmlDocument constructors which also\ndon't load the file.\nThus, LoadFile() should not be called in the constructor.  I'll remove it\nfrom master, thus fixing the problem.\nOn Mon, Aug 20, 2012 at 9:22 AM, Karlson2k notifications@github.com wrote:\n\nAnd I see a lot of using of CXBMCTinyXML.\nIt's created and loaded several times on every visible windows transition,\nso 47ed046 https://github.com/xbmc/xbmc/commit/47ed046 and using of\n99acb24 https://github.com/xbmc/xbmc/commit/99acb24 is highly valuable.\nOther code can be modified similar to 1be538ehttps://github.com/xbmc/xbmc/commit/1be538e.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1301#issuecomment-7856981.\n. Updated master with a proper fix f58303b1f81 and be982babfc9.\n\nAlso rewrote CScraperParser::Load to use the more intuitive form in 49b7e5ce898\n. Another option is here:\nhttp://source-android.frandroid.com/frameworks/base/services/input/InputReader.h\nSee pointerGestureTapSlop is set to 10 pixels by default.\n. Interesting. I would have thought you'd have larger values than I get on\nthe nexus 7.  As long as the changes here don't affect it we'll be ok. Any\nidea where to better slot the DPI change?\nOn Aug 22, 2012 3:10 AM, \"Sascha Montellese\" notifications@github.com\nwrote:\n\nOK I've taken a look at the values returned for TouchMinor on my SGS2.\nWith a normal touch I get a value of around 60 - 65 but that value can go\nup to 120 - 140 by e.g. putting the whole thumb on the screen or can go\ndown to 24 by just using the very tip of my finger.\nI also applied your patches but I have to admit I didn't really notice\nmuch of a difference. But testing this on a phone is probably not the best\nidea anyway but that's all I got available.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1304#issuecomment-7904159.\n. Sounds good - I don't really have time to do it - mind making whatever\nchanges are needed?\n\nOn Tue, Sep 25, 2012 at 2:29 AM, Sascha Montellese <notifications@github.com\n\nwrote:\nWould be nice if we could find a solution for this so that it will make it\ninto the next merge window. The best spot I can think of is right after\ngetting the handle to the actual window from NativeActivity and passing it\non to XBMC because then we can be (relatively) certain that the window and\nit's configuration exists.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1304#issuecomment-8820621.\n. The fix is wrong for scripts I think?\n\nIf you know the preferred content type, then the preferred content type could be specified in RunAddon() I guess.\n. @night199uk Will these be rendered moot with taglib?\n. Which code analysis tool are you using?\nOn Thu, Aug 23, 2012 at 12:11 AM, Karlson2k notifications@github.comwrote:\n\nOld constant is wrong for sure.\nSee above: \"switch (flashattr.flashing &0x1c) // Flash Rate\" 0x1c = 0001\n1100, old value in \"case\" was 0x11 (0001 0001) but last bit will never be\n\"1\".\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1321#issuecomment-7932148.\n. Looks fine thanks.\n. It sounds like the the default control focus is not set in the skin.  We prefer not to override it in the code unless absolutely necessary, as it restricts what skinners can do.\n. No, it's not valid, as the skinner doesn't have the opportunity to set it elsewhere should they wish (not that they do most of the time, but sometimes they have good reasons for doing so).\n\nThe correct fix would be to fill the list in the appropriate spot so that the default control selection functions.\n. That's not a bug, that's by design.  Consider touch or mouse input where nothing has focus.\nIt doesn't happen in media windows, it's just this one.  Thus, there's a difference.  Find the difference and you'll find the problem :)\n. Looks good :-) \n. Agreed, not sure what the race is here. c-pluff comes up pretty early.\n. Updated with a couple of changes:\n1.  Recently added nodes have moved to filters (now that @Montellese has taken care of the sort stuff which was the only hold up from the original merge of the video lib customisation).\n2.  Removed a couple of advanced settings related to recently added as it's now customisable anyway.\n3.  Implemented in progress as a default filter.  @JezzX a new image DefaultInProgressShows.png if you feel like doing so.\n4.  Re-specified the order attribute so that adding new default nodes is a little less effort next time around.\nI suspect over the next week and a half I'll be in and out of internet coverage, so if someone would hit the button on my behalf once signed off that'd be great.  @Montellese, @cptspiff either of you are fine for review.\n. No reason other than I couldn't be arsed - I can probably do that now (have another 15 mins till I need to head off)\n. Hmm, after more thought, there may be a reason.  videodb://4/ may be being referenced directly by a skin.  Or, more likely, RecentlyAddedMovies may be referenced.  Thus, some skin links would stop working if we removed these.\nMight be better to hold off until the home menu customisation is in and skins support it.\n. In case you want to play anyway, see\nhttps://github.com/jmarshallnz/xbmc/tree/remove_recently_added_from_videodb\n. Same place as the recently added nodes. I don't mind either way but take\ninto account flattening.\nOn Sep 7, 2012 9:32 PM, \"Sascha Montellese\" notifications@github.com\nwrote:\n\nOk gave it a quick spin and didn't spot anything obvious. Only thing I was\nwondering about is that the \"In progress TVShows\" node shows up in the\nvideo library node and not under tvshows. IMO it looks a bit odd there.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1349#issuecomment-8376180.\n. No bug reports on github please.  You can open a post on the forum or on trac.\n\nforum.xbmc.org, trac.xbmc.org\n. Both should go in I think unless there is some use in having the start part being 0?\n@fetzerch mind making that change as well?\n. I haven't reviewed, but if others are happy with it I'm happy to review the\nguilib changes after the fact and fix up anything I don't like in master.\nOn Sep 5, 2012 12:18 AM, \"Lars Op den Kamp\" notifications@github.com\nwrote:\n\n@elupus https://github.com/elupus done\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1357#issuecomment-8281126.\n. Heh, interwebs in Spain haven't caught up.\nOn Sep 5, 2012 8:56 PM, \"Arne Morten Kvarving\" notifications@github.com\nwrote:\nOn Wed, Sep 5, 2012 at 8:51 PM, jmarshallnz <notifications@github.com\n\nwrote:\nI haven't reviewed, but if others are happy with it I'm happy to review\nthe\nguilib changes after the fact and fix up anything I don't like in master.\n\ngood. we merged it 24h ago ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1357#issuecomment-8309887.\n. I think a slightly more involved fix is required. On a held key you'll\ncurrently get continuous flicking.\n\nA potential solution that would work is handling OnBack in CGUIWindowHome,\nin particular when the key isn't held.\nOn Sep 4, 2012 6:22 PM, \"Martijn Kaijser\" notifications@github.com wrote:\n\nthis was discussed at devcon when @jmarshallnzhttps://github.com/jmarshallnzwas playing with the remote\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1370#issuecomment-8269251.\n. Looks good to me.\n. Wouldn't it be better is IsPlayingVideo returned true, or there was some better flag to check at the app level?\n. Code looks good to me - feel free to rebase up and merge when you have some time.\n. Not in this particular case, but we will need it for CFile::ReadLine/String() or thereabouts.\n. I'd rebase + merge.\n. IMO we do this properly with arbitrary Dirs from the skin.\n. We're going to do this properly after Frodo, and allow the skin to call up arbitrary folders.\n. Assigned to me\n. I wonder whether up/down to move a left/right slider is counter-intuitive?  I think it would be OK if there was a clear \"click to activate\" where the slider nib very clearly came into focus.  However, it's not obvious to me that a further click would deactivate the slider, whilst still keeping it in effect (I might be tempted to hit BACK instead?)\n\nThe click technique seemed natural enough when I first tried the UI, but as pointed out above - once you know, you know :)\n. There's an unrelated gnu address change there but otherwise all good.\n. IMO grouping of multiple copies of the same movie should be internal to the\ndatabase itself. The main info for each item will be the same, just some\ndetails such as path, stream details etc. will differ. Perhaps everything\nlinked to the file? Supporting multiple versions might be tricky as we'd\nwant a nice way to label the different versions. Not sure the best way to\ndo that other than by file name. Multiple paths or perhaps a vector of\nstring,string pairs might be the way to do it. It could be reused for\nstacked items maybe then and for extra stuff like subs and trailers as a\ngeneric related files thing?\nOn Thursday, September 13, 2012, Sascha Montellese wrote:\n\nThis is more of an RFC than an actual PR as I'd like to get some opinions\non the general idea and the implementation.\nA while ago I had a discussion with @jmarshallnzhttps://github.com/jmarshallnzabout doing the grouping of movies into movie sets outside of the\nvideodatabase. The advantage would be that the code GetMoviesByWhere would\nbecome a lot easier and GetMoviesNav/GetMoviesByWhere will return a list of\nmovies and not a mixed list of movies and movie sets. The grouping into\nmovie sets would then happen before the movies are displayed in the GUI. I\nhad this idea when I was working on the advanced filtering. When applying a\nfilter it can happen that a filter only matches one of the movies in a\nmovie set so XBMC should only show that single movie and not the whole\nmovie set. While that's not a problem to achieve the problem arises when it\ncomes to loading the artwork for items etc which is done in the background\nand on the initial list. So the \"new\" item which was previously part of a\nmovie set does not have any artwork and other details assigned yet.\nSo I have written a utility class called GroupUtils which is called from\nCGUIWindowVideoBase after a list of movies has been retrieved from the\ndatabase and filtered. It currently supports grouping by movie sets (based\non CVideoInfoTag::m_setId) and grouping by movie (based on movie title and\nyear).\nWhile grouping by movie set is not a new feature per se (just implemented\nin another way) I have also added grouping by movie which has been\nrequested a few times in the forum. The idea is to group same movie entries\n(e.g. differing in resolution, audio language ...) together to a single\nentry to clean up the list of movies a bit. When a user then clicks a movie\nhe gets to choose which version of the movie he wants to watch.\nTo be able to do that we need to be able to access the original movie\nitems from the grouped item. I can think of two ways to do that: Either add\nthe possiblity to store \"sub-items\" in a CFileItem or two extend CFileItem\nto support multiple paths and multipe\nCVideoInfoTags/CMusicInfoTags/CPictureInfoTags. I've decided to implement\nthe latter approach but the other approach would probably be less intrusive.\nI have integrated this grouping by movie into the GUI and added support\nfor asking the user which version of the file to play. There's no\nimplementation/support yet for marking such a movie as watched/unwatched or\nto change artwork for it (the video info dialog is opened with the details\nof the first sub-item so the user can only change the artwork of that item).\nSo what are your opinions? Does the grouping outside of the database make\nsense at all? Does the grouping by same movie make sense and how should it\nbe implemented?\nYou can merge this Pull Request by running:\ngit pull https://github.com/Montellese/xbmc grouping\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1418\nCommit Summary\n- add GroupUtils for generic grouping of items in a list (e.g. into\n  mov\u2026\n- [win32] updated project files\n- CFileItemList: add Sort() taking a SortDescription parameter\n- videodb: change retrieval of sets based on GroupUtils\n- CGUIMediaWindow: cache the list of unfiltered items\n- CGUIWindowVideoBase: integrate grouping by sets\n- CGUIMediaWindow: change OnPlayMedia to take a CFileItemPtr instead\n  of\u2026\n- CFileItem: extend to support multiple sub-items (multiple paths and\n  i\u2026\n- GroupUtils: add grouping by movie (same title and year)\n- CGUIWindowVideoBase: integrate grouping by movie\n- CGUIMediaWindow: better integrate grouping (after filtering)\nFile Changes\n- M project/VS2010Express/XBMC.vcxproj (4)\n- M project/VS2010Express/XBMC.vcxproj.filters (8)\n- M xbmc/FileItem.cpp (725)\n- M xbmc/FileItem.h (41)\n- M xbmc/filesystem/SmartPlaylistDirectory.cpp (2)\n- M xbmc/music/windows/GUIWindowMusicBase.cpp (20)\n- M xbmc/music/windows/GUIWindowMusicBase.h (4)\n- M xbmc/music/windows/GUIWindowMusicPlaylist.cpp (7)\n- M xbmc/music/windows/GUIWindowMusicPlaylist.h (2)\n- M xbmc/music/windows/GUIWindowMusicPlaylistEditor.cpp (7)\n- M xbmc/music/windows/GUIWindowMusicPlaylistEditor.h (2)\n- M xbmc/pictures/GUIWindowPictures.cpp (18)\n- M xbmc/pictures/GUIWindowPictures.h (4)\n- M xbmc/programs/GUIWindowPrograms.cpp (9)\n- M xbmc/programs/GUIWindowPrograms.h (2)\n- A xbmc/utils/GroupUtils.cpp (176)\n- A xbmc/utils/GroupUtils.h (38)\n- M xbmc/utils/Makefile (1)\n- M xbmc/video/VideoDatabase.cpp (178)\n- M xbmc/video/VideoDatabase.h (4)\n- M xbmc/video/windows/GUIWindowVideoBase.cpp (115)\n- M xbmc/video/windows/GUIWindowVideoBase.h (6)\n- M xbmc/video/windows/GUIWindowVideoPlaylist.cpp (8)\n- M xbmc/video/windows/GUIWindowVideoPlaylist.h (2)\n- M xbmc/windows/GUIMediaWindow.cpp (59)\n- M xbmc/windows/GUIMediaWindow.h (6)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1418.patch\n- https://github.com/xbmc/xbmc/pull/1418.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1418.\n. I'll take a look at the code over the next couple days.\nOn Sep 18, 2012 1:20 PM, \"Sascha Montellese\" notifications@github.com\nwrote:\nThe current implementation uses the resolution and the language of the\nfirst audio stream to display the different versions of a movie so e.g.\n\"1080p (English)\" and \"720p (English)\" etc but obviously that won't work in\nall cases.\n@jmarshallnz https://github.com/jmarshallnz: Any opinion on the general\nidea of grouping outside of the db? I know we discussed this once before\nbut maybe you've changed your opinion after seeing the implementation. I\ncan remove the movie grouping because obviously that needs more thought and\na better approach.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1418#issuecomment-8650393.\n. Only thing I don't like is the separate queries per set.  You could potentially get rid of that by joining the set table (there's  only a single set per movie) though, so those can go away I think.\n\nNice work!\n. One presumes it's due to the title filtering applying to the label - can't filter on the label if it's not formatted up yet.  If the filtering never looks at the label, then this order isn't needed.\n. Is 3 already present anyway, perhaps only if the list is filtered?  I'm not sure why the old technique wouldn't jump - filtering still would have taken place so that items could be removed (e.g. if hide watched was enabled).  Is it worse now because the list always changes?  The code that handles the selected item is in the list containers themselves, so something must be resetting the offset there (or it's doing something a bit silly).\nNumber 2 is tricky, agreed - you can't maintain the sorted order just by inserting items where the first movie was (sort by title will break) so the only way is to re-sort the list using the correct sort order, which you don't know atm from the playlist.  The latter is related to the fact that \"sort by playlist\" is a duplicated sort mode in many library nodes, in addition to being non-descriptive.\n. Signed off.  Over to you @cptspiff\n. What is the point of the builtin exactly?  i.e. why do we need the builtin - who is calling it, and why exactly?\nI'd reorder the commits as well so the enable/disable one is done first c4e6d86/43a48b5, which could be squashed, and then 4803228 (if deemed needed) on top.\nI really don't like the includes of the PVR globals within AddonMgr though.  It shouldn't need to know specifics about addons - ideally these would be handled instead with some sort of addon::ondisabled() or some such to isolate things.\n. I agree that having the list exposed is essential as is validating the\nrequested player against that list.\nOn 16 Sep 2012 15:35, \"Memphiz\" notifications@github.com wrote:\n\nRight - so there needs to be an API call for getting that list definitly.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1427#issuecomment-8594856.\n. In the magical future, xbmc.getplayers(media_item) would return a sorted list of allowed players, with preferred on top, and the plugin would select one of the players from that list.  Validating, therefore, would simply check that the chosen player was in the allowed list.  If it wasn't, it'd be ignored and the default player for that item would be used.  We could even comment in the log that this player is suboptimal if it's not the optimal choice.\n\nI presume that this validation is already done in XBMC now anyway, otherwise what happens if the player specifies that they want mplayer?\nThe only problem then is with add-ons that specify a player that is available on the platform but known to be worse than another player.  The add-on is at fault for choosing a bad player for the particular item, but I see no reason why XBMC should ignore their choice.  If the player is so bad on a platform that it should never be used, then don't allow it in the allowed player list.\nThus, on playback where a player is specified, I'd:\n1. Retrieve allowed player list, sorted so the optimal player is on top.\n2. Check the given player is in the list - if not, choose the top one.\n3. If it is in the list and is non-optimal, log the fact.\n4. Remove any players that are completely inappropriate from each platform.\n. Consider the happy world of only 2 players: paplayer (audio-only) and dvdplayer (either).  In this world, the add-on author doesn't have a choice between audio and video player, as there's only one video player anyway.\nThus, the only reason that the add-on author has to choose between the players is in the case of audio-only playback.  One presumes, then, that they're choosing dvdplayer as it works better for an audio-only item than paplayer does.  This assumption should ofcourse be checked with data - I'm sure that a quick grep through the addons repo will identify the add-ons that use this feature and the authors can then be queried.\nIf there is a reason for this to be there, then we really need to leave it there.  If there's not, then you can kill it.\nIn the meantime, if platform A really doesn't want anything other than player B available, then that is all it returns in the list of allowed players.\nThe first step either way is validating the choice the add-on makes against the list of allowed players.  This provides a mechanism for the platforms that don't want to use dvdplayer or paplayer to cross them off the list.\n. I wouldn't be surprised if that were the case, though equally, I wouldn't be surprised if there are some audio streams that work nicer in dvdplayer than in paplayer, so the potential for the choice being available is there.  Whether it's enough to warrant having it available for abuse, I have no idea.\nAssuming there's no reason for it being there, then this would be a bugfix, so I don't see the need for a hurry.  Perhaps the best way to convince @elupus would be to show there's no existing use case for it by checking the audio add-ons (no need to check video add-ons as there's only one player there in the old world).\n. @theuni: At the risk of re-poking the hornets nest, what was the verdict?\n. IMO any LCD related options should be in LCD.xml and be done with it.\nI'm not sure any devs have an LCD to actually test the functionality (or maintain the code) - most would likely want this stuff out of the core code I suspect, but that's somewhat unrelated to this.\n@cptspiff I believe you're making the call as to what gets merged October?\n. Win32 uses a separate smb implementation (in xbmc/win32).\nOn Thu, Sep 20, 2012 at 5:47 AM, Voyager-xbmc notifications@github.comwrote:\n\nfyi - Windows build broken: SMBDirectory missing - doesn't seem to be part\nof VS project file and when adding doesn't compile (?)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1432#issuecomment-8699746.\n. Just drop the include - it's not required.\n. I think this is good to go, as long as the subtitle script prompts the user on run if they don't have any modules installed.\n\nIt's a little bit icky for the user as they'd be first prompted to select a subtitle script (on press of the subtitles button in Confluence) and then, once they run this, will be again redirected to install a module.  All while trying to play a video.  \nThere's 2 steps involved:\n1.  Confluence prompts user for which subtitle script they want, so it knows which one to run.\n2.  The script needs to prompt for missing modules.\nWe could take care of 1 by bundling the script - the user could still potentially replace it if there's a skin setting for it (it just defaults to the bundled one).\nThe second can just be done via the appropriate ActivateWindow call.\n. @Karlson2k: Compare the read method in JpegIO.cpp with this - perhaps the one in JpegIO.cpp could be moved to FileUtils.cpp and reused here?  It's basically the same idea.\n. Yup - that part of the code.\n@wsoltys OT: It's still in JpegIO.cpp as well by the looks, maybe a leftover?\n. Assigned to you\n. I thought the suggestion was that it would return more information than\njust the full path (i.e. it would return listitems)?\nOn Fri, Sep 21, 2012 at 9:18 AM, Jim Carroll notifications@github.comwrote:\n\nI reviewed this and it looks good to me. I see no reason why it can't go\nin the October window.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1451#issuecomment-8745998.\n. Other than those minor comments, this looks good.\n. Nice work.  Agreed that if we can pull it off, StringUtils should move into commons or similar.  Obviously this can happen later though - getting this in is more important.\n\nI'd tend to drop Equals() though - if you have 2 strings, I don't see why you'd ever want to include a utility class to test equality.  The bare minimum is all that's required.  I'd almost be tempted to drop Left/Mid/Right as well for that reason as they're all just a substr(), but using substr() is slightly more clumsy for right at least (left and mid are trivial though)\n. What's wrong with foo == bar? :)\nOn Sat, Sep 22, 2012 at 8:29 PM, Sascha Montellese <notifications@github.com\n\nwrote:\nI don't have any problem with dropping Equals(). It's just for convenience\nas with std::string::compare() you have to remember to write == 0 for\nequality.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1453#issuecomment-8786665.\n. I'd prefer to have it explicit - there's no reason I can see for obfuscating that case insensitivity.\n. There are 2 queries that still need to be answered from @jimfcarroll and @Montellese \n\nAfter those are sorted, I'll take another good look through.  So far, these static analysis \"fixes\" don't have a good track record ;)\n. You can send text directly via JSON-RPC to the keyboard dialog anyway (which will be utf8) - why do you need to send individual characters?\n. I don't understand why having an edit control on the TV is better than having an edit control on the remote control itself?\n. Sure, so argue that in the trac ticket.  Perhaps you'll garner enough interest for someone to look into it.  Basically, if you can get someone to sort out sending an appropriate packet from the event server, and have that read in by the event client, I can probably take care of making sure it gets to the right spot inside XBMC (which I suspect is the problematic bit).\nNow, let's stop spamming everyones mail boxes about this :)\n. Still not quite right - I think there's a misunderstanding on how rar/zip work (it may be me that's misunderstanding).  I thought that a rar within a zip would look like:\nrar:///path/inside/rar\ni.e.\nrar://encode(zip://encode(/path/to/zip.zip)/path/in/zip/to/rar.rar)/path/inside/rar\nThat is, the protocol is the inner-most rar/zip.  The hostname is the encoded path to the innermost rar/zip, and as you recurse in, you're going back \"up\" the hierarchy.\nThus, you never have to decode/encode the filename portion of the URL - only the hostname.  So something like:\nCURL url(path)\nif (IsInArchive(path))\n{\n  // we need to check the hostname as that's the \"parent\" rar/zip file\n  std::string archive = CURL::Decode(url.GetHostName());\n  url.SetHostName(CURL::Encode(GetRealPath(archive));\n}\n// finally process the filename\nurl.SetFileName(GetRealPath(url.GetFileName()));\nreturn url.Get();\n. Sascha: my code should work without the CURL::Decode() (as GetHostName()\nhandles that for us - not sure if SetHostName() does as well, if so, the\nEncode can be dropped as well).  Once you recurse, you have a new URL, thus\nthe GetHostName() decodes the doubly-encoded portions of the URL.\nOn Tue, Oct 2, 2012 at 10:08 AM, Joakim Plate notifications@github.comwrote:\n\nThen something is very wrong. There should be no double encoding.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1480#issuecomment-9050123.\n. Looks good to me\n. Looks fine to me.\n. The addition to CVideoInfoTag seems to only be so that you can output the subepisode to the scan dialog?  Given it's not used anywhere else, IMO this should be removed.\n\nAlso, I know we have folk already naming episodes as s1e1.1 etc - is it doable to include that with this, or is this two separate things?\n. IIRC PCRE supports number of digits if that makes the regexps a bit simpler?\n. iSubepisode isn't initialized is the problem.\n. Surely that is what one always wants.  7.1 == 5.1 + 2 rears.  6.1 == 5.1 +\n1 rear.  This is all quite well defined, so no matter what we get there\nshould be an explicit map available, right?\nOn Sat, Sep 29, 2012 at 10:16 AM, Damian Huckle notifications@github.comwrote:\n\nI think this is why custom channel maps was on the list lol, along with\nlevel adjustments (mostly for boosting center channels).\nIt really should be a user preference for those that have 7.1 systems (I\ndo). I want/expect 5.1 to play to my fronts and sides, and the receiver\ndoes its PLIIx processing for the backs.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1490#issuecomment-8997016.\n. You need to stick to XBMC coding style (braces on separate lines, no need\nfor braces on a one-line if).\n\nOtherwise it looks OK (should only be called once per database).\nOn Fri, Sep 28, 2012 at 12:50 PM, vanosg notifications@github.com wrote:\n\nAs the database version is revamped, it can be tricky to keep different\nxbmc builds synchronized via a MySQL database since different versions of\nthe xbmc database do not talk to each other. By logging this version number\nto the log file (it currently is not), it is easily accessible to the\naverage user w/o needing to execute sql queries\nYou can merge this Pull Request by running:\ngit pull https://github.com/vanosg/xbmc master\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1492\nCommit Summary\n- Log database version to logfile\nFile Changes\n- M xbmc/dbwrappers/Database.cpp (3)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1492.patch\n- https://github.com/xbmc/xbmc/pull/1492.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1492.\n. Changes look fine - all but one is just changing notifications, i.e. noops, to something useful.  The other is changing the GUIDE key to actually bring up the guide, rather than the OSD (which already has a key).\n. Thanks!  Please rebase on master to remove the merge commit.\n\nOn Sat, Sep 29, 2012 at 2:11 PM, asylumfunk notifications@github.comwrote:\n\nThis was based on an old version of the scriptaculous Javascript launcher.\nIt was outdated and overkill for our purposes.\nThis pull increases the performance and also makes the code more\nreadable/maintainable.\nI benchmarked this version versus the original and it runs nearly 200x\nfaster.\nEach was repeatedly tested at 10,000 iterations per attempt (much more and\nthe browser locks up).\nYou can merge this Pull Request by running:\ngit pull https://github.com/asylumfunk/xbmc master\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1502\nCommit Summary\n- cleanup: wrapped file in an IIFE\n- performance: enable js caching by default\n- cleanup: removed unnecessary framework check\n- cleanup: removed unreferenced function\n- cleanup: abstracted Launcher load logic\n- cleanup: jquery now loaded through Launcher.js\n- fix: syntax\n- performance: moved script tag to end of body\n- cleanup: removed unneed object declaration\n- cleanup: removed unnecessary abstraction\n- cleanup: removed superfluous function\n- cleanup: renamed \"constants\"\n- cleanup: updated syntax for jslint compatability\n- cleanup: variable renamed, simplified syntax\n- cleanup: moved page initialization to a separate file, instead of\n  inl\u2026\n- maintenence: bumped up the version number\n- cleanup: removed unneeded object declaration\n- cleanup: removed unnecessary abstraction\n- cleanup: removed superfluous function\n- cleanup: renamed \"constants\"\n- cleanup: updated syntax for jslint compatability\n- cleanup: variable renamed, simplified syntax\n- cleanup: moved page initialization to a separate file, instead of\n  inl\u2026\n- maintenence: bumped up the version number\n- Merge branch 'master' of https://github.com/asylumfunk/xbmc\nFile Changes\n- M addons/webinterface.default/addon.xml (2)\n- M addons/webinterface.default/index.html (8)\n- M addons/webinterface.default/js/Launcher.js (80)\n- A addons/webinterface.default/js/xbmc.init.js (7)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1502.patch\n- https://github.com/xbmc/xbmc/pull/1502.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1502.\n. Looks good.  Needs build support on Linux (simply add to the Makefile) and OSX (trickier - one of the devs here will take care of it once it goes in).\n. Once those last ones are fixed, if you squash down the fixes, I'll merge and fix up the OSX and Makefile builds.\n. There's two commits here still.  You need to squash them together down into one commit (via an interactive rebase or similar) then force push back so there's a single commit.\n. Looks good - thanks!\n. Seems fine from a quick look.\n. Looks fine other than that minor.\n. @DDDamian this looks valid.\n. @Memphiz There's an assumption of at least 20fps, so any slower than that and it will be slower by that factor (i.e. 10fps will be twice as slow) - it simply means that we're not processing the input fast enough.  Try dropping it to 10 (i.e. increase the number in the frameDuration min() call to 100.  I wouldn't want to go much lower than that tbh (note that your addon view has fanart in it, that's why it's likely slow as the frame is being stalled while the fanart uploads to the GPU).\n\nSimple way to check if the hold state is working is to scroll to the end of the list and check whether it wraps - if held is set it won't wrap.  From your videos it looks OK.\n. Assigned to Oct\n. Looks OK to me, assuming the threadsafety isn't an issue (doesn't look as though it is - at worse you'll get incorrect timezone data).\n. The most important thing here is ensuring that we have permission to distribute the font.  I suggest contacting the author of vhs_teletext, and ensuring that the font is freely distributable.\nOther than that, is there any reason why we shouldn't just replace the existing font?\n. According to the trac ticket, the feature was changed, and thus a simplified version was pulled in.  If this is not the case, then please explain in the trac ticket (rather than here) what is missing.\n. Rebase on upstream/master.\n. After rebase, all good.\n. You need to rebase on master to get rid of the unneeded stuff.\n. Looks good to me.  A few functions could be const (You asked for it by changing one that wasn't related...)\n. @elupus: the commit is not in master, even though the github link seems to suggest it is.\n. The scraper would need to be done in the addons repo which is likely more up to date.\nI don't like the fixed nature of the I'd being tvdb. It would be nice, at least for json-rpc to have a more general id with the source of the id attached, so that the imdb id could be tied into the same system?\n@Montellese your thoughts?\n. Personally I'd prefer a pair (perhaps even a map later on?) with information as to where the uniqueid is from (in this case thetvdb).  I could see in future that both an imdb id, themoviedb id and perhaps other ids such as rottentomatoes etc. could be useful for movies for example.\nJust something to keep in mind for the future - doesn't necessarily have to be done now.\n. @Montellese: Up to you if you want to take this as-is, or prefer some additional element to denote the source.  It's not as if we'll be able to merge the imdbid number into this, so perhaps not worth the effort at this point?\n. I wonder if it should be more general than episodeuniqueid - i.e. just uniqueid or some such - that way later on imdb could be conscripted once it's hooked up for movies/shows etc?\n. You missed the [\"unknown\"] bit in the serialisation to CVariant.  i.e. you want to serialize into the \"unknown\" field of the \"uniqueid\" object.\n. Mind rebasing so I can pull it in?\n. Looks good to me.\n. No objections here.\n. Mind summarising what changes are needed?\n. I've had a look on this, and have played with moving the Scanning for new content to line 2 and dropping the path.  The problem is that the movie name only shows up for such a short period of time, that it's almost always stuck on Scanning for new content, which isn't really informative.  Also, the progress bar seems to be going all over the show.\nWill try and think of some improvements (perhaps using the directory name) tonight.\n. This could probably go in as-is, or close to it once the simple fixes above are taken care of or commented on.\nWhile the additional queries are troublesome, there's no easy way to solve them - some of the art ones can be eliminated with work that @Montellese has done, but not all of them (e.g. episode/season fanart needs to reference the tvshow node, though theoretically we could use the same mechanism to grab them at query time as well, though it'd be clunky).  How many times does a full retrieval of the movies list occur on the server when browsing on the client?  i.e. does the client cache the listings at all?  If so, it might not be too bad?\nIMO getting the functionality into Frodo is essential - this is one thing we do really badly (multi-client) and this is a nice way to get around that - the user could replace the video library nodes with a upnp node, and then have a \"dumb\" client that looks the same as the server (give or take).\n. As they're library items, FillLibraryArt is all you need anyway.\nAssuming that you're piping the art through CImageFile, it'll be cached as required.\n. Nope, shouldn't make a difference for music.\n. Looks fine to me\n. ListItem.Art(thumb) is equivalent to ListItem.Thumb.\nYou can't make ListItem.Art(banner) default to anything if no banner exists, as that doesn't make sense - you want a banner, and only items that have banners will return anything.\nSo basically, you don't have to do anything for those views where you don't care what the art type is: Just continue using ListItem.Thumb or ListItem.Art(thumb), and put up with the fact that you might get a poster or might get a banner.\nFor those views where you want a banner (wide view for shows for example) you can use ListItem.Art(banner) instead, with a fallback image available to ListItem.Thumb.  Similarly, if you particularly want a view with posters, you can use ListItem.Art(poster) with a fallback image to ListItem.Thumb.\nFor tvshow thumbs, the tvshow thumb could be banner.(jpg|png) or poster.(jpg|png) (or both) as well as thumb.(png|jpg) (unknown type), folder.jpg and movie.tbn.  Season thumbs are season01.(jpg|png|tbn) etc.\n. @vdrfan, @cptspiff, @da-anda, @Montellese \nMind reading the summary, particularly regarding the changes to supported local thumb types?  I don't expect a full review of the code, but a quick sanity check on the changes would be appreciated.  I'm not a big user of local art, so don't want to do something silly :)\n. @Montellese: this (I think?) might alter how thumbnail/fanart are handled in json-rpc - not sure, as they'll no longer be in properties (fanart_image) or in thumbnail when serialized to CVariant.  It might not be a problem as the items won't normally have them set anyway from the db?\n. @da-anda: Yup, your local structure should be fine.  Ideally folder.jpg would be switched to poster.jpg and banner.jpg, but it's not required and everything will still work - just XBMC won't know atm whether the tvshow folder.jpg's are banners or posters (it'll pop them in the \"thumb\" slot instead).  (One could argue that XBMC should be able to work it out, but without an image parser running on the thumbs we find, we can't really do that - something for later perhaps).\n@MartijnKaijser: great!\nSeasons are a bit tricky.  ATM I support season01.(jpg|png|tbn) in the root of the show.  Agreed that we might need the -poster and -banner suffixes on this as well - not sure if we know that from the scraper atm either.\nAnd yes, the poster/banner setting in the scraper can go.\n. IMO it'd be an ongoing thing anyway, so it's something XBMC should support internally.\nStill, a script that does it automatically for users with local art (i.e. moving folder.jpg to poster/banner) is something that users with local art would appreciate either way.\nThe one-off fix for bad URLs should IMO be handled by the db update code.  The current back-compat code should really be replaced by a really dumb db update that just copies over the old thumbs as the old http URLs - http URLs are marked as \"don't bother checking again\" so they'd just work.  It's a one-off run then, similar to the music re-scan (though potentially quicker as it's all local)\n. Nah - I'll pull it in - just got a couple of minor changes to make.\n. Put the inside of the loop into a separate function that returns true of false depending on whether the field should be removed or not.  Early return true instead of continue to indicate you can remove it from the set.  (i.e. a goto in disguise)\n. @cptspiff: This is somewhat needed given the recently added nodes are now using library://video/ paths, yet the skins are still using the old paths.  Thoughts?\n. Looks good - merge at your leisure\n. Seems good other than that comment.\n. I guess the ideal would be for it to go through the smartplaylist logic in the view state stuff - that way the sort logic is still available, and sort by playlist is the default.\nAlternatively, if we want sorted nodes to never be able to be sorted any other way, we could add the sort order to the CFileItemList on directory fetch perhaps?\n. Yeah, I'm not sure either - the order could be specified just so you get the top 100 rated movies for example, yet you'd still want that sorted by name at a later point.\nIMO what we need is a way to ensure that the sort by playlist is available and made the default for all filters.  This could possibly be done using a property on the fileitemlist if we don't have information about the path (the path would normally contain a .xml otherwise).\n. Yeah - what we really need is a way to specify the default sort method (which could be taken from the filter) and allow the other sort methods to be added to it if not already available.\n. I think it can be fixed by just removing the url.GetProtcol() == \"library\" || from CGUIViewState::GetViewState().\nThe problem is that we've lost the fact that we had a library:// URL as it's been set to a videodb:// URL, presumably for filtering purposes.\n. Looks fine for the meantime.\n. Looks OK.  I note that the second doesn't deadlock as the graphics context is released in CAppMessenger::SendMessage.\n. @Montellese, @vdrfan I think this contains some of what you were going to do originally for the recently added job.  This takes care of it for video items with the exception of the season art, which is fetched in the RA job - dunno if it's any use to simplify this or not.\n@night199uk Any thoughts on the primary artist id in the song/album table?\n@cptspiff This is almost all fix/speedups, but your call :)\n. Where is the button code you pass in converted to something actually useful in the UI?  As far as I can tell from a quick scan, CAction/CKey::m_unicode never gets set through the event server path, and that's what we use in the virtual keyboard and edit controls.\nIt would be useful for those of us not used to this insane maze and don't have an event client handy if you would trace through from the event client -> event server -> key/action -> whatever processes that action and clearly describe exactly how things are supposed to work.\nIt seems to me that the correct fix is adding a unicode packet to the client + server, then just setting that using the alternate CKey constructor.\n. SetFromService(true) sets m_unicode to the buttoncode - 0xf100 as long as buttoncode & 0xf100 is true.\nHowever, you seem to be setting buttoncode + 0xf000 in the event client, which won't guarantee that 0xf100 is true at all?\nWhere does 0xf100 get OR'd onto your buttoncode?\nExactly what buttoncode do you send from your event client?\n. So what you do, is take (unicode | 0x100) and pass that with PTB_VKEY set.  The EventClient code then takes that and or's with 0xf000 to give (unicode | 0xf100) which is then (unicode | KEY_ASCII) and everything works.\nHowever, with your change, this breaks:  (unicode | 0x100) + 0xf000 does not necessarily mean that the bits 0xf100 are set.  From what I can see, you should be able to send any \"unicode\" that doesn't set those 5 bits already.\nWhat I suggest is defining a new mask that you set (0x80000000 seems reasonable) when PTB_VKEY is set.  Then make the button code a uint32_t inside the EventClient and pass that through to the event server.  Then, in CApp::ProcessEventServer, check for that mask and if set, pass the key directly to the CKey constructor (4th one in the header) that takes in the unicode value.  i.e. exactly how the keyboard does it.  You won't have the ascii code or modifiers etc. (just set them to 0) but that shouldn't be used anyway for direct keyboard input.\n. 1. Don't put the define in Key.h - XBMC shouldn't need it, only the eventclient/Application.h need it.  Just define it inside the event client header should do.\n2. Remove the FromService stuff and just call the correct CKey() constructor from CApplication::ProcessEventServer() when you have that flag present.\n3. Fixup the whitespace + coding convention (braces on separate lines).\nOtherwise, IMO this looks fine.\n. Looks good.  2 more things and we're done :)\n1. Name the define KEY_UNICODE - it's not related to virtual keys as it's an actual unicode character, right?\n2. Squash down ready for merge.\n. Sure - FLAG_UNICODE is fine.  You can also prefix it by ES for event server if you want to save it clashing.\nFor squashing, in your branch do the following:\ngit rebase -i HEAD~8\nThen follow the instructions in your text editor - use s for squashing the commit into the previous one.  Once the rebase is done, you'll get to edit the commit message.  Note: The HEAD~8 here is just \"rebase the last 8 commits from the top (HEAD)\".\n. If it's a define then it's global.  Either make it an static const unsigned int (whereby you query it using EVENTCLIENT::) or prefix it please.\nThe squash looks perfect.  Now you can learn something new:  To amend the top-most commit, make your changes, git add the files then git commit --amend.\n. Pushed in slighty modified in 4a54dd0f09d\n. We'd love to help, just not on github please.  Head over to the forums for assistance - github is just for patches at this point.\n. Changes look good to me - nice idea :)\n. Are the lists on screen in a grid layout, or do you only see one group at a time?  If they're in a grid, then I'd say moving across takes you across seems logical, and the existing behaviour sounds perfect.\nIf they're not in a grid, then remembering the last position seems a much better behaviour than defaulting to something you very likely don't want (item 1) for consistency reasons alone.  This seems like an easy enough change to make?\n. Spelling (logging).  Also, not sure if \"Verbose CEC logging\" means much to the user necessarily.\nDo we really need a setting in the main UI for this?  What useful information is derived from this log information that is of any use to the typical user?\n. My preference is to either reduce the spew to what is actually needed, or (as I suspect that may not be enough) having a switch specific to the peripherals stuff - e.g. you could bury it in the CEC settings dialog perhaps?\n. Assuming that CEC is logging at debug/trace or whatever it is, do you need XBMC also logging at debug level?  i.e. could your setting in peripherals just mean that you log at LOGINFO or whatever, whereby it doesn't matter what XBMC's log level is set to.\n. Moved to a separate file as requested by @cptspiff.  Build tested on OSX + win32.\n. @JezzX updated.  I dunno if you want your changes for subtitle menu in or not - if not, just let me know and I'll drop the commit.\n. Thanks\n. IMO there's 3 ways to deal with this (it's only a problem with limited lists, right?)\n1. Do all filtering completely outside the database.  Obviously not an option for Frodo, and a lot of code for not much gain.\n2. Do filtering completely inside the database, and utilise the current filter (from the smart playlist) to restrict the items. i.e. it would be select * from movieview where  and idMovie in (select idMovie from ).  I suspect this may also be a fair chunk of code, but you'd be able to assess that better than me.\n3. Do what you've done above and hope you hit all the cases.\n. The second query is just the filter + limit from the first, which shouldn't have any information about sets?\n. The unfiltered list is either completely unfiltered (a library node) or is filtered via a smartplaylist (recently added et. al.)\nEither is defined by a query - you don't need to construct a list of existing id's in the unfiltered list, as you can grab that list again from the database.\n. Yeah.  I was considering how much work it'd be to just get the grouping in - seems not all that much, but obviously that depends on how @cptspiff thinks about it - hate putting temporary stuff in when the real solution is available.\nhttps://github.com/Montellese/xbmc/tree/refs/heads/grouping\n. Well, that one is primarily moving the existing grouping code from inside the db to outside.  IMO it solves so many problems that it's worth it.\n. Looks good to me.\n. Hmm, which properties are reset when calling Update()?  Weren't the properties set using Update() originally anyway, so calling it again should give you the same results?\n. Ah, that makes sense.\nI don't think we can avoid changing the path, as we'd do so anyway once a smartplaylist was further advanced filtered, yet the same sorting rules should apply in both cases.\nThus, I think we have to put up with the fact that the path is going to change, and fixup the places that depend on it currently - i.e. this is fine to go in.\n. It'll likely be due to the caching - the library:// possibly won't be cleared should they be in the cache.\n. m_strRealPath needs some doxy as to exactly what it represents, when it should be set (and what to) and when it should be used in place of m_vecItems.GetPath().  It may make sense to store it as a CURL instead of a string as well (you almost always convert it to one anyway).\nI really don't like having another member but can't think of a better way to do it, so this will have to do for now.\n. Fine by me.\n. A delayed call is IMO the best solution.  It's not clear to me that PAGE_UP/DOWN should move a slider, particularly if that slider is held in a list (where PAGE_UP/DOWN would better jump pages in the list?)\n. @jimfcarroll your thoughts on the technique of getting the item back into python?  The main thing I don't like with the way python add-ons (e.g. plugins) work is that transfer of information to the add-on is done only via the URL arguments.  It would be nicer if we could set up a way to transfer more than strings, such as is done in this PR.  This would also allow plugins to transfer the listitem object that the user clicked on (including any properties etc) rather than purely depending on the URL (though ofc, for repeatability from outside of browsing the directory hierarchy, we'd still want plugins to be able to generate listings purely based on the URL given).\n. Code looks good to me.  Only question is if it should be applied to other cases.  Does lastplayed get updated when something is only half watched?\n. Righto - merge at your leisure then.\n. Depending on what UpdateControls does, you might need to do it on app thread, perhaps in response to the message you're sending?\n. @Montellese Ideally any label setting + control enabling/disabling would be done on the app thread, yeah.  If you can do the queries offthread and the control updating onthread that would be the ideal.  The control enabling/disabling is probably OK to do offthread anyway (they're setting a boolean pretty much) - the potential problem there would be if the message processing hits while a window is being deinit'd or some such.\n. Nice work - looks good to me.\n. Thanks, but please take bug reports to the Forums. We use github issues only for code enhancements and fixes.\n. Defensive. Airtunes server sends a GUI_MSG_REFRESH_THUMBS event, though that shouldn't affect things either way.\n. Looks good to me.\n. I'm not sure what the use case is for this one?  When do you want to queue from a certain item yet not play?\n. That's a bit of a clunky UI though (queue from here, switch to some playlist view I guess, then play using?)  Wouldn't it be more natural if there was a way to specify \"Play to foo\" before playback (or while playback is occurring) so that the Play from here... sent it to that other device anyway?  e.g. something similar to the way airplay works.\n. Yes - if the sort mode doesn't have a corresponding SORT_METHOD_* then it'll drop back to sorting by playlist.  This has to remain that way at least until SORT_METHOD_* is replaced with SortBy*.\nI thought about popping the string in the LUT - it would save inclusion of the smartplaylist header but have the disadvantage of duplicate information being present.  Will see if I have time tomorrow to do it up, as I think it's better that way (and it gives something useful for the LUT to give once SORT_METHOD_* is gone.\n. Do you need the SORT_METHOD_NONE case in GUIMediaWindow::SortItems given the other commit?  I think we need to clearly comment in SortItems that the block is required only to support SortBy* that don't have an equivalent SORT_METHOD_*.  The inverting of order isn't particularly obvious either (it is correct), so could do with a comment.  I'll pull those commits in.  Will also just use SortBy field directly as suggested I think to save the translation to and from string, and pop the localised string in the lut.\n. It doesn't hurt, but doesn't really help either.  I'm happy to do up the comments over lunch.\n. Updated with SortUtils::GetSortLabel.\nDuring the process, I went through and found a bunch of inconsistency, where we often used alternate (and sometimes incorrect) labels for sorting in the UI (i.e. the label shown after Sort By: in the GUI).  They're all consistent after the last 8 commits, but I'm not sure if they're all required or desired.  Changes are:\n1. HTSP seemed to use \"TV Shows\" when it sorted by library (one presumes, due to it feeding TV Shows in?)\n2. Sorting by Title and Label used Title and Label interchangeably.\n3. Sorting by Genre in music used \"Label\" in the UI (it's the only sort order available).\n4. Sorting by Artist in music used \"Label\" in the UI (it's the only sort order available).\n5. Sorting by Play count used \"Times played\" rather than \"Play count\".  The latter is consistent with how it's displayed in the playlist editor.\n6. Sorting by duration or runtime used \"Time\" and sometimes \"Duration\" - now always uses Duration.\n@cptspiff signoff is up to you.  I'm happy to drop commits that you think are not required.\n. @amet: The default shouldn't be selected there, instead the previous value should be selected (i.e. how I had it).\nThere could be some clashing with the CStdString value in the loop - change that to\nCStdString localized = m_addon->GetString(atoi(valuesVec[i]));\nif (localized.IsEmpty())\n  localized = g_localizeStrings.Get(atoi(valuesVec[i]));\nvaluesVec[i] = localized;\n. Sorry - it should be if (i == atoi(value))\n. The database changes look OK, save the minors.\nFor the playlist changes, I wonder if it's better to have a generic map like you've done in the options in the database.  Reason is that at the moment it's specific to movies.  Further, if it's a generic map you could read it directly from the XML just by iterating over the options nodes.  Also, I think you can drop the need for ignore - no option suggests you take the UI option, a specified option says you do what it says.\nI'd tend to make the options boolean as well unless there's a good reason to allow strings - easy enough to change later on if it's needed.\n. Sure you can:\nxml\n<groupbyset>false</groupbyset>  <!-- doesn't group no matter what -->\n<groupbyset>true</groupbyset>  <!-- groups no matter what -->\nNo tag in the XML: Use the UI setting.\nThe same applies to the option map: If the option is present, use it.  If not, use the UI setting.\nI'm not sure I like the specificity of the tag.  You really want something like\nxml\n<group>set</group>\nbut then as you point out, you don't have the 3 states in the XML...  Maybe\nxml\n<group>none</group>\n. I think the last one is probably the best, assuming that specifying none has the grouping turns of the current behaviour.  This would then be a specific grouping variable in the smartplaylist - don't think you need an options map?\n. I've reviewed, and once the commented minor changes are done (dropping no longer needed includes/typedef), this is good to go.\n@cptspiff: your signoff please.\n. I'd be very cautious about this.  Assuming (and I think it's valid to do so) that URLs can get into the database without us already screwing them up by URL decoding/encoding, we need to make sure we don't touch those URLs.  i.e. we need to make sure we only touch things that we construct, not things that may have come encoded from outside.\nIn particular, then, we should focus on rar and zip where the hostname only is URL encoded, and in addition I guess stack:// where you'd unstack and then check for rar/zip on the separate paths.  Anything else should not be touched.\nPotentially other URLs (multipath) could need processing as well, though those will be in the path table and the consequences aren't quite the same as we don't rely on those paths except possibly during scanning - worse case scenario is that we may re-scan a source during every update as the hash won't be updated correctly.\nLastly, I'd comment the function as only being there fix this specific issue.\n@elupus, @arnova your comments?\n. The idea is fine, it just needs some fine-tuning.  Only touch the string if the hostname is stored encoded (i.e. use URIUtils::ProtocolHasEncodedHostName() and if not return false immediately), and don't touch any other portion of the url.  Something like:\nc++\nbool fixURLs(strURL)\n{\n  if (URIUtils::ProtocolHasEncodedHostName(strURL))\n  {\n    CURL url(strURL);\n    hostName = url.GetHostName();\n    if (fixURLs(hostName))\n      url.SetHostName(hostName);\n    strURL = url.Get();\n    return true;\n  }\n  return false;\n. Changes look fine to me.  Given that I doubt it's reasonable to revert the previous change, this seems like the best solution we have.\n@arnova: Any potential problems you can think of?\n. The CGUIControl changes are not required.  Nor is IsStopped() - you have a local boolean member, so feel free to use it directly.\n. Great. I guess one could get rid of m_stopped as well by playing with m_scrollInfo.SetSpeed directly in OnFocus/OnUnfocus but that's a matter of style more than anything, so up to you.\nRebase it back down to a single commit and it'll be ready for merge after Frodo.\n. Looks good.\n. They're already merged, as this the alignment one.\n. No vertically centered labels should have changed by more than a single pixel (due to rounding).  It is intended as before the font height was incorrectly rounded to smaller than it should be.\n. The lineheight wasn't altered at all.  @HitcherUK mind posting in the forums what the issue is with which skin so I can take a look?\n. Thanks for updating :)\n. I guess more consistent would be to pass ADDON::TYPE through, though the number of compares increases I guess if many addons have multiple extension points.\n. Given it's private it's fine with me then.\n. The change looks fine, so just rebase a branch onto upstream/master, cherry-pick your fix and push the branch up to your repo.\n. Scheduled for first merge after Frodo - thanks very much.\nNote that next time, you can force push to your repo (it's OK as you own it) and it'll update the the original PR.  Note that it's easier to develop features such as this in a separate branch, that way you can go on to other things without disturbing the pull request.\n. After discussing with skinners, they're fine for this to go in as-is for Frodo.\n. We accept only code contributions on github.  Please take your request to forum.xbmc.org.\n. I suggest pulling out the thumb stuff into a separate commit, as that should probably go in as-is regardless.\nThe duplication of CGUIWindowVideoNav::LoadVideoInfo() isn't ideal.  If a separate database member was used that could be re-done as a static function to save the duplication (or alternatively you could pass the database member into the static function if you're concerned about opening another database connection in video nav), though I suspect that perhaps this is a temporary thing - I'm not sure why pvr recordings aren't just a node in the main video library anyway.\n. I mean displayed in the normal video views rather than being in the PVR windows (it could have a link there, ofc).\n. Looks OK to me now.\n. Changes look good to me.\n@opdenkamp your call.\n. @Montellese / @davilla over to you to make the call.  I'm happy to drop the JSON-RPC change to an integer (or any other bits you don't think should go in).\n. @Montellese / @davilla ping\n. Actually, it's a bit of both atm :p  We set it directly on read (i.e. interpret as seconds in SetDetailsForMovie et. al.) but return minutes.  Will change the latter to seconds for consistency.\nIf done, you happy with it?\n. Ok - will slot it in.\n. Nice work - this is exactly like it should be handled.\n. Changes look good.  Let's see what you come up with ACTION_CHANNEL_UP/DOWN.  The reason this might be preferred, is that otherwise users might have a global mapping for channelup, and when playing a music playlist it would then skip items (which might be unintuitive).\n. Looks good - nice work.\n. Correct.\n. An alternate is handling it directly in CFileItem::GetMovieName(), where you know it's a PVR recording as you have the complete URL, and don't have to rely on a regexp.  The CleanString routine will still be applied, but will be applied to the title, not the full string (with TV + date/time).\n. This looks better to me.  Is there any case where this tag information would not be available?\n. Right, but don't you have the pvr:// URL in that case anyway (i.e. in GetMovieName()), and can thus work out the title directly from the URL?\n. That's what I meant, yup.  Once the commits are squished down it should be ready to go from that perspective.\nOver to you @opdenkamp \n. GetReplaceString has since been changed in master, so that one isn't needed anymore - it'll return a std::string now.\nIsEmpty(), or just empty() is preferred, yes.\nCan we drop the TV-specific cleaning regexp now?\nSquash down and it'll be ready to go I think.\n. Easiest thing to do is attach .patch to the github commit URL, save the patch, git am patch_file to apply to your current branch. Then fix up the inevitable compile errors :)\n. Please\n1. Split bugfix out from the enhancement as we may just take that for Frodo.\n2. Fix typos in commit message (enhace != enhance).\n3. Ideally there'd also be a unit test for this function with a decent range of possible titles (obviously they'd still use the default regexps).\n. Pushed the bug fix in - thanks!  If you rebase on master it'll drop it from here.\n. This looks reasonable for database items, but not necessarily for non-database items with a videoinfotag set.  Perhaps check if m_basePath is empty, and use m_strFileNameAndPath in that case?\n. Myth, upnp etc - basically do a git grep for GetVideoInfoTag inside filesystem/\n. @Montellese This introduces a subtle (but correct?) change in behaviour in sorting that relies on FieldPath.  Previously if there was a CFileItem whose m_videoInfoTag had empty m_strFileNameAndPath, then FieldPath would be empty, even though m_strPath in the CFileItem might be specified.  The change in the second commit here will mean it'll fall back to m_strPath which I think is probably the preferred behaviour?\n. I see the issue with SortByFile and SortByPath changing.  To get around this, perhaps we could just introduce a FieldSortFile or similar so that SortByFile does what the user thinks it should in these cases?  Obv. would fall back to using FieldPath to grab it out otherwise.\n. sure, so add it to the list :)\n. FindMovie is called twice: once with fFirst true, the second time with fFirst false.  The second call happens atm only if the first one found no matches at all.  This change swaps the behaviour to favour effectively \"unclean\" strings.  It will work on some movies but will almost certainly break on others.\nThe best fix would be to change things so that we first do FindMovie with fFirst true, then call it again if we don't find a suitable match with fFirst false.  i.e. check the returned results from FindMovie using our relevance stuff instead of assuming a single returned movie (which may be completely wrong) is OK.  See the note in CVideoInfoDownloader.\nIMO a unit test for this needs to be implemented before any change is made.  The ideal would be to read in a file with a bunch of filenames in it, call FindMovie on them in turn, and compare the correct result with the found item.\n. Note that the idea I suggest will be useful when my match_point branch gets merged in to show the match quality of the hits in the UI.\n. This is a whole heap of non-obvious code for the 12 movies in existence that require two or more VIDEO_TS folders.  Particularly when you can convert losslessly to ISO, mkv etc.\n. Extra disks can be handled as:\nmoviefolder/VIDEO_TS/VIDEO_TS.IFO\nmoviefolder/Extras/VIDEO_TS/VIDEO_TS.IFO\nas you typically don't want those scraped anyway, right?\n. The DVD structure does begin with a VIDEO_TS folder.  There is no real reason that I can see to have anything else.  You can use movie.nfo just fine with VIDEO_TS folders - you put it in the movie folder (after all nothing at all other than the DVD structure should be in the VIDEO_TS folder).\nMovies:\nMovies/moviename/VIDEO_TS/VIDEO_TS.IFO.\nEpisodes:\nTVShows/Lost/insert/arbitrary/subfolders/s01e01/VIDEO_TS/VIDEO_TS.IFO.\nI don't see where an additional folder needed, except if you happen to require two or more VIDEO_TS folders for a single item - the only real case here is for extras, thus I suggest a separate subfolder (this would make sense for non-DVD movies as well).\nLastly, at no time did I say you MUST use ISOs.  I simply said that for the small number of 2-disk movies that exist, it's not unreasonable to do so in that case.\n. So what if there's other folders - you can have as much stuff as you like in the movie folder, alongside the VIDEO_TS/VIDEO_TS.IFO.  movie.nfo, folder.jpg, fanart.jpg etc. can all be found there.\nFor episodes there's multiple ways to handle it (s01e01e02e03e04 is a common one) but there's no difference here between ISOs and VIDEO_TS folders either.\nBasically: I don't understand why you need yet another folder between the movie folder and the VIDEO_TS folder.  Are you wanting the subfolder just so that all the crap that's actually from the physical disk is separate from what you need for metadata about the DVD?\n. Not at all, however others may be, as hundreds of people are receiving each mail...\nPerhaps we should discuss on the forums until some agreement on how to proceed is reached?\n. Seems the sensible way to handle things IMO\n. You should ideally open with GetVideoInfoTag()->m_basePath if it's available (non-empty).  That's the item that XBMC has decided represents the actual \"movie\".  This is either a directory that you can open directly, or is a filepath.  I think checking to see if it's the same as GetVideoInfoTag()->m_strFileNameAndPath will do the trick (if it is, go up a directory, if not, stay with it).\nFor multipaths etc. just use the first path found.  Same with sets and so on.  There's nothing to be done with actors.\n. I wouldn't bother doing anything for sets, but if you must, the first movie is plenty - that's where we take the art from now anyway.\n. Looks good.  Over to you @cptspiff.\n. I don't believe the url is displayed in the UI - the name of the share will be, and anything displayed in the filebrowser (e.g. the path when you select an item) will be prettified anyway?\n. The two commits can be squashed together.\n@Montellese your thoughts on minimum vs maximum year?  (I think maximum makes most sense).\n. Yeah - maximum makes more sense to me for most sorting stuff.\n. Other than that change, I'm happy with this now.\n@Montellese, @davilla it's your call as to whether this goes into Frodo.  It requires a string addition.\n. @davilla up to you.  As @Montellese suggested above, this isn't strictly a bugfix, though is a UI improvement that would be nice to have.\n. Thanks looks good - mind squashing it down to a single commit?\n. Seems correct based on LocalFileTimeToFileTime.\n@elupus - anything we're missing here?\nIt's needed to ensure that m_dateTime is local, rather than UTC or whatever, on all platforms (it's already local on win32).\n. extern long int.\n. Looks OK to me, though I'd be tempted to drop the looking up in the recording manager if it doesn't provide anything the regexp does.\n@opdenkamp you're probably better to comment on that.\n. Sounds like a good way forward.  Note that you can fix + rebase and force push back to your branch to update the PR.\n. @opdenkamp, @cptspiff over to you.\n. git rebase -i HEAD~8\nFollow the instructions.\n. git commit --amend will alter the top commit message (seems to only be one left now).\n. Ah - yeah, that shouldn't be the case - you should have image://video@url_encoded_path_to_video style URLs.\n. The same thing applies though, in that you need to check for a cached texture and if not available, regenerate it.  Ideally the video ones could be done like the music ones (i.e. from the TextureCacheJob), but we'd need quite a bit of code cleanup to manage that I think, so checking for whether the cached image exists and regenerating it seems like the way to go.\n. Whilst this makes it consistent with videos, I'm not sure why skipplus/skipminus aren't being used - they're mapped globally anyway to this.  Does the remote you're dealing with not have these buttons?\n. Well, pageplus/pageminus get mapped to this in fullscreen vid, so there may be a reason - let us know what you find out (perhaps it's an LIRC thing?)\n. Thanks - please squash it down (git rebase -i HEAD~3, follow on screen instructions).\n@cptspiff this seems reasonable to me.  Thoughts?\n. What is your goal here exactly?  The code is even more convoluted than things currently are, which suggests that there's a much better way to do what you want to do.\n. If you want to send unicode (for text input) then you can do that already.\nIf you want to send keys with modifiers, then I have no problem with the idea (though would suggest you look to something other than vkey insanity for it unless there really is no other way).\nHowever, internal to XBMC there should be no more crazy KEY_VKEY/KEY_ASCII/other random bitmask shenanigans.  Grab exactly what you need out of the event client so that you can directly set the fields on the CKey via\nCKey(uint8_t vkey, wchar_t unicode, char ascii, uint32_t modifiers, unsigned int held)\n. The approach is starting to look much better.\nI don't like it being passed through CKeyboardStat though, and I'm not sure it's necessary.  From what I can tell, you do this primarily to get the vkey from the key name, (via key name -> keysym -> vkey).  It seems to me that translating from key name direct to vkey would be best if you can - you have the modifier + unicode directly, so really don't need anything else other than the vkey, right?\nAnd yes, the ascii thing should hopefully be no longer used, but may still be showing up in some places.\n. No, this won't be going in for Frodo.\n. You currently don't call Update() on the CGUIInfoColor, so it won't work with $INFO or $VAR as things stand.  I suggest calling it in SetDiffusedColor() would be the best place.  Obviously you need to check the Update() routine's return value to return the appropriate changed status.\nExactly how the control's diffuse color and the textures diffuse color interact will need defining.  ATM you have the texture's diffuse color overriding the controls.  This may not be what is wanted.  For example, it might make sense for them to be diffused (multiplied).\n. Looks good.  Queued for next merge window (May 1->May 10).  Before then, it'll need squashing down.\n. By the looks of it you've copied across the previous buttons that were mapped to the bigskip/skip stuff, which is the correct thing to do.  Whether or not the bindings are fine probably hasn't been tested all that much on some of the gamepad ones, but your change is consistent with how it was when PVR was merged.\n. Don't worry about the forum user - they could have screwed it up.  There's nothing platform-specific about your changes.\nI suggest either this is merged as-is, or a consensus on a changed default mapping is reached and that is then implemented.\n. It's already signed off before the last rebase.\n. Would an alternate solution be providing a y-offset in the font definition?  I suspect this would be a little tricky to get completely right internally, but it seems a nicer solution for the skinner.\nThe main problem with the alignment is that we do it based on the top left, whereas font alignment is normally done from the baseline.  Ofcourse, it's hard to align the font properly using the baseline within a larger control...\n. I don't think it'll make Frodo.  Reason is 2-fold:\n1. A better method is available (that doesn't require runtime string/map lookups).\n2. We can't put a bad method in Frodo as we'd need to support it afterwards.\n. An alternate is just to add triggers to clean it up as per the art table.\n. Looks good.\n. According to: \nhttps://dev.mysql.com/doc/refman/5.0/en/begin-end.html\nany number of statements can be included in a BEGIN ... END block, thus making the comment even more odd.  It would be useful to test both a single statement and multiple statements and clean up the code accordingly.\n. Looks good.  I wonder whether we should have a CreateTriggers() function similar to CreateViews() - I suspect that they might get changed again in the future...\n. Sure - was more about saving dupe'd code than anything else (you'd just call it each time it was needed on update).\n. Ah, I see what you mean.  Yeah, it could screw up, so best leave it as-is.\n. Yup, that should work.\n. If it's something the user must specify to get sound, then it has to be in the UI.\n. Might be possible to throw up a select dialog instead of the spinner.  How long is the list of what XBMC thinks are \"valid\" devices?  Does it make sense to have a spinner for that, then a select for the rest, or is it best just to have a single setting that throws up the select dialog with everything filled in?\n. I'm not sure whether we'll take the feature, but in general, please follow XBMC code guidelines ( braces on separate lines, make sure indenting is spaces using 2 spaces).  Also, make sure you don't have extraneous comments or extraneous log statements in your patch.\nLastly, please feel free to use multi-line select statements instead of insanely long lines.\nYour implementation seems reasonable, though I'd copy the item rather than just the path when you transform, and also eliminate the CFileItemPtr typedef in VideoDatabase.h by just passing a const CFileItem &.\nThis will be discussed post Frodo, so no need to make any changes should you not have the time etc.\n. The second commit applies to all containers (lists, panels etc), so please change the commit message to suit (e.g. ensure the previous menu action is not handled in a list/panel container - it is handled at the window level).\n. Thanks!\n. Both are correct.\n. Please post issues on the forums.  We use github for code only.\n. We shouldn't, yes.  Whether we rely on it somewhere, I dunno.  I figured it was best to restrict a change in this area at this point.\n. Confirmed (reproducible) bugs to trac, everything else to forums.\n. Changes look fine.  What happens if the user has the slideshow one set in settings - does it fallback to dim, or fail?\n. Adding an || m_screenSaver->ID() == \"screensaver.xbmc.builtin.slideshow\"\nto the dim case would solve the fall back in this case.  I think it's important here as some folk may be relying on the ssaver being in effect (plasma etc.)\n. Yeah, sorry - you want m_screenSaver->ID().empty() as the test (it's empty due to the add-on not being installed, thus GetAddon() returns false a bit further up).\n. There's three options:\n1. Add original screensaver as a dummy addon (same id) to the repo and mark it as broken.  Users get prompted about it and up to them to disable.\n2. Rename the new screensaver as the original one (same id) with a newer version.  Users get new one on install (and we'd have to sync it to master as well to avoid lots of installs with Frodo).  Potential problems might include whatever code is still present in master to fallback to dim/black if the old slideshow screensaver is set.\n3. Have code in place on update to (silently?) disable the old screensaver add-on.\nI suspect the first and third options are the best here.  I'm not sure if there's an easy method to mark add-ons broken on settings update - there may be problems on initialisation order.  @Montellese has done some stuff in this area so may have input.\nGiven that this has hit before in the past, it might be useful for us to implement a method that allows an add-on to replace another add-on with a given ID.  Has to be thought through carefully though, particularly in the case of system add-ons which are in a separate folder.  Something for post-Frodo.\n. Setting it to broken+disabled seems the best solution to me.  We don't want to start deleting stuff in userdata, as then the user can't go back to Eden or whatever (this may not be easily possible anyway, but we shouldn't intentionally kill stuff off).\n. Then delete on install, not on run?  The latter is what I am opposed to.\n. Thanks.  Please rebase on master so we get rid of the merge commit.\n. @singular0 please rebase down as suggested by @topfs2.\n@topfs2 you happy to sign off?\n. Code looks good other than that.  Any chance you can add a test? :)\n. Looks good\n. I think you pushed that commit to the wrong branch :)\n. Lastly, make sure you tag the tickets this fixes in the commit msg.  I believe it'll fix #13531 as well as yours - please test that one out (Music playlist editor)\n. OK, just about there.  A couple more things to do I think:\n1. When tags are read, CMusicTagInfo::m_embeddedArt is set.  This should be detected (in the thumbloader or tag loader, I don't mind) and the thumb set accordingly (see how the CMusicInfoScanner grabs it out).\n2. The art stuff in CMusicInfoLoader::OnLoaderFinish() can probably be removed now (separate commit).\n. Sure.  There should be the equivalent member in the CMusicInfoTag as well I think?\n. That's the one.  See the CMusicInfoScanner for how we assign art.\n. The block is OK, but put it down inside the if (!pItem->HasArt(\"thumb\")).\nOther than that it looks fine.\n. The item might have art but not a thumb, so putting it direct in the check for a thumb is the safest thing to do.  FillThumb should stay as-is IMO.\n. Looks fine to me.\n. @alanwww1 What are your thoughts on the addition of the 5 strings, a30896d ?  I don't want to piss off translators :)\n. Are you doing the rendering with DirectX or OpenGL inside the add-on?\nOverall the guilib side of it looks fine, other than the minors on the commits.\n. guilib changes signed off.\n. Looks OK to me.  Does the UPnP stuff always show the season level, or should the show level also be updated?\n. First one (removal of m_sounds) is definitely correct.\nSecond one looks right as well, but someone a little more familiar with alsa such as @gnif should comment.\n. This will mean that AddAlbum can't override art previously set, so IMO is not the way things should go (I believe this is relied on in JSON-RPC for example).\nLet's discuss in the ticket.\n. You can probably kill the returning of the stack size in RemoveTransform.  It's used only for debugging stuff, which has long been fixed.  Instead, adding a function wrapped in _DEBUG to check the stack size might be a better way to go.\n. I've forced a rebase by fixing up the .empty/size stuff above in master.\n. I haven't checked all the code in detail, but the bit you've missed is the bit you're trying to fix - i.e. the joystick stuff.\n. IMO we need to drop most of the changes to Application.cpp except for those we're 100% sure of.  Secondly not all commits build (e.g. 22a6ca8) by the looks.\nEssentially remove all the cleanup and just add the fixes.  In the interests of speeding things along, I'll fork and cleanup and post a new PR.\n. See #1855\n. Looks OK, but there'll need to be similar changes for CoreAudioAE, PulseAE ?\n. I was referring to your change in SoftAE (OnSettingsChanged) - perhaps this\nisn't used in the other engines?\nOn Thu, Nov 22, 2012 at 8:26 PM, Sascha Montellese <notifications@github.com\n\nwrote:\n@jmarshalllnz: This implementation is located in CAEFactory and not in one\nof the engines.\n@DDDamian https://github.com/DDDamian: Yeah I realized that as well but\nI didn't see any use in duplicating the same code at least three times as\nit operates on AEDeviceList and AEDevice which are engine-independent.\nCurrently only CSoftAE seems to have such code and it could probably be\nremoved but I didn't wanna do that to keep this as low-impact as possible.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1828#issuecomment-10625720.\n. Looks OK to me.\n. @koying please test on mysql. Feel free to merge if all good.\n. Looks fine to me.\n. The advantage of keeping the array of strings is it makes sense for setting artists via json-rpc. So I think adding a displayartist field makes sense.\n\nHaving genre and genreid also makes sense, but up to you whether his is added here or later.\n. I guess the only potential issue I see now is that if albumartist is removed from song, then SetSongDetails is restricted in the sense that it can't set the album artist.  I'm not sure if this is actually a problem though - it would really only be required during the set, rather than the get - is there a problem having it in one and not the other?\n. In that case it makes sense to get it as well I guess.\n. Looks fine.  Merge away assuming you've tested it all out :)\n. @opdenkamp looks fine to me.\n. First two commits look fine, though perhaps you could switch the second one so that MoveCursor() just called SetCursorPos(GetCursorPos() + iAmount) ?\nNot sure about the third.  It'd be better to separate that one out I think into a separate PR that others could review.\n. I'd prefer readable code.  It's only the equivalent of a map lookup afterall.\n. Thanks!\n. Looks fine.\n. The correct fix for the above is making everything go through the single function (OnKey).  That is the one that is most correct, thus the one that wasn't touched here.  I do agree that the fallback method is better, and will likely be used post-Frodo.  For now though, OnKey works fine, so let's not (potentially) break things.  I have a commit in another branch ready for post-Frodo analysis.\n. If you could test that the PS/3 pad continues to work that will be useful - doesn't necessarily have to be anything PVR related.\nNote that the fixing up of the window IDs is because we're dealing with virtual windows (i.e. they don't actually exist) which are a used as a (silly) proxy for context.  IMO the whole thing needs to be context based rather than window based.\n. Thanks - will fix + merge.\n. I suggest that we cherry-pick the critical ones for Frodo:\n93593254bf2\n42e7de029\nbd973db55\ncb874b152b9e225\n4058dadcd9d57e\nb333bf3b7e98da2\nThe others aren't critical (they're not fixing bugs, right?) so we can pull them in post-Frodo.\n. Up to you - I have reviewed those 6 closely and see no issues.\nI'm happy to press the green button on a new PR if you prefer that though.\n. Doesn't pulse use a 60dB range as well.  At least according to the sources it does:\nhttp://pulseaudio.sourcearchive.com/documentation/0.9.14-1/volume_8c-source.html\nOr is USER_DECIBEL_RANGE defined as something else?\nEither way, a separate function for doing the computation is required, along with an explanation that pulse takes a range from 0 (mute) to PA_VOLUME_NORM which is linear on the dB scale.\n. Yes - the UI volume in XBMC is a percentage (i.e. linear on the -60...0 dB scale).  The volume in AE is a scaler multiplier on the linear scale.\nThus, you'd want to convert the AE volume back to a percentage and then set that directly using pa_sw_volume_from_linear which is basically what you're doing, though you're doing it directly rather than relying on pulseaudio to do it for you.\nAs long as it's documented well and in a separate function (so you can change it in one spot) it'll be fine.\n. See my comment in the ticket.\n. Fixed in 5c60264f55\n. Yes - any skipped folders at root level (these are those with content set) will not be cleaned if they don't exist according to CDirectory::Exists()\n. If it doesn't exist (and there's no parent cleaned as well) yes.\n. Personally I don't think that case is worth bothering about: The user specifically set content on the single folder movie (one presumes it's because it's different to other movies for some reason?)  If they later don't want it they can just remove from library via context, which is basically the same as deleting then \"cleaning\" here.  The path will still be in the library (as content is set) but it won't ever update if the actual directory is gone.\n. @elupus will do. Note that a standard clean (from settings) will likely take care of it as well I think.\n. Looks fine.  Needs really good testing as well as a grep through the add-ons in the repo for xbmc.* versions and check they match the current ones.\n. Looks good other than the typo in the commit message of f2a6b5d \"impelement\"\n. What's the problem with just installing them anyway?\nI typically blindly click through these installers, and thus users probably do as well.  Thus, we should assume that blindly clicking leads to a full install.\n. Considering we start with either the whole file (most cases) or at least 65k, it's not too bad really considering the size of most jpegs we load (around 200k or so).  I don't mind having a doubling type routine but really the time spent in the code here isn't constrained by the slowness of resizing of the buffer ;)\nAgreed regarding READ_TRUNCATED and checking the jpeg header, but the latter is a separate issue (also, this code really only gets run on images named \"foo.jpg\", \"foo.tbn\" or with mimetype set to \"image/jpeg\" which somewhat reduces the scope for non-jpeg files being parsed).\n. @elupus: pulled into master with changes as suggested by you.  Please sign-off for Frodo inclusion.\n. The stop on read == total is required to ensure the buffer doesn't grow unnecessarily in the case where filesize is known (as amount == 0 at that point).\nWe also only increase the buffer size if amount == 0, which happens only once we've read in enough to get to the end of the current buffer.\n. 1. Yes.  I dunno if this is actually a real issue or not.  If it is, it would probably be best to initially make chunksize slightly larger (one byte is enough) than the actual filesize, so that the second Read() operation can be done in the case where GetLength() is accurate (the second Read() returning 0 and breaking the loop).  If chunksize == file length, then there's always a realloc() otherwise.\n2. Nope. We resize only when we've completely filled the existing buffer (amount == 0), which happens only once we've read chunksize bytes.  We'd allocate 65k in that case.\n. The code is be a bit clearer after 9e7d52f3186ebc89ba8b4afba2f890a97a39bcf5 and also takes care of the expanding file case (0 < GetLength() < real file size)\n. Heh - it is kinda unobvious exactly how all the cases drop through, and is nicer without that check for total == filesize.  I figured this code will end up as some CFileUtils::ReadFile() or some such (or even CFile I guess?)\n. If you could also check whether the std::locale() stuff throws (i.e. throw a line of debugging in the catch() ) that'd be good.  I'm thinking of defaulting to the std::locale() stuff and dropping back to setlocale() in the catch()\n. Mind adding some debugging so you're sure the correct branch is hit.  Add a log line inside the TARGET_DARWIN_OSX ifdef, then again inside the if() there, then inside the #else block, and inside the catch()\n. Change from USA region to something else.  You want fr_FR or similar.\n. No bug reports on github please.  Report bugs initially on the forums forum.xbmc.org or alternatively (if you're sure it's not user-error and is reproducible) on trac.xbmc.org\nEither way, a full debug log is required.  Thanks!\n. (Really) quick review looks OK to me.\n. Ok with me - seems like the only decent way to get everything using x.y.z while still having other add-ons work.\n. Why does this happen only during pause?  What is different in that case?\n. If it's paused, wouldn't it just decode until the player buffer is full, and then just sleep at that point until things are resumed?\n. I really don't like fixes going in that no one understands, particularly when they alter fundamental bits of code such as the main loop of the audio player.  I certainly wouldn't be confident that this won't break other stuff.\nI suspect you've uncovered a real problem, but I can't see why it would happen only on pause.  If we don't understand it, we can't know that it has actually fixed anything.\n. Looks good.\n. Isn't the directory cached anyway with the exception of folder items?  So it could be restricted to if (item.m_bIsFolder).  Once done, there is no need at all to increase the amount of cached directories.\nDo you have a lot of files with no art, or do most files have art?  Reason I ask is that rearranging the check for cached art would make things quicker - we check for local art only if we have no art, but we could change it to only check once.\nLastly, why is performance of browsing increased - this is done in the background.\n. Right, so add the check for item.m_bIsFolder.  Further, specifically comment why it's there so we don't remove it later.\n. I see no reason to change it from 10.  There's no benefit once you've passed the current one except for the case where you have enough to hold all subdirs in addition to whatever is going on elsewhere.\n. Looks good.\n. I don't know this code well, but shouldn't eglQueryString() be returning the extensions?  What extensions does it return - perhaps it's just a matter of the incorrect extension?\n. IsFilePath fails for videodb items, as an item_start property is created while one shouldn't exist - simple fix.\nIt works fine for items not in the video db.\n. See b68629302ba\n. IMO it should go in. It fixes a regression from Eden, and I can't see how it can break. famous last words?\nYour call though @ronie \n. @Montellese: Exactly - just a bit bigger than 50%.  The VideoInfoTag object is normally constructed for the stack (i.e. we retrieve streamdetails on the stack:// item itself) whereby we just grab the information from the first item.\nIf/when we grab details from all items in a stack (how to combine could be interesting) then this code will continue to function.\n@arnova: we already measure duration from the stream of music files - it's not stored anywhere else.\n. Looks OK to me - up you you as to whether you merge it.\n. Looks OK.  I'd be tempted to reset m_nextPlaylistItem to -1 as well in both branches of that code (it'll normally be reset when you play something next, or the next file gets queued, but it should really be reset as soon as we've used it).\n. Well, there's 2 choices here:\n1. early return (i.e. ignore the GUI_MSG_PLAYBACK_STARTED event).\n2. ignore the change of m_currentFile or whatever it is by moving the check into the first if() block.\nI suspect the 2nd is less likely to result in regressions, but I'm not sure exactly what the expected behaviour is here (the playlist has been cleared, but the message is being fired even though the player is stopped?)  Does GUI_MSG_PLAYBACK_STOPPED get sent straight after, or is this is a rogue event.  If so, perhaps the rogue event should be eliminated in paplayer ?\n. I'd prefer that the option clearing is done in SetHistoryForPath instea, as it is not applicable to getting the parent path in general.\n. If it shouldn't happen why does it happen? Comment seems to indicate other issues?\nChecking thumbURL is not needed either.\n. If the art is generated before they're in the db that would happen and the block would be hit if no other art was found for those items. No real issue with the code being there in particular, as long as the comment is accurate.\n. Try wrapping anything that uses m_cpluff and m_cp_context with a lock on the critical section.\n. Ok, add a comment such as\n// don't run repo update jobs while on the login screen which runs under the master profile\nand pull it in.\nThe critical section stuff should be a separate PR - I suggest merging that one after Frodo.\n. Not for Frodo.\nOn Dec 28, 2012 9:29 PM, \"arnova\" notifications@github.com wrote:\n\nThis is followup implements the same fixes for guimediawindow as already\ndone in the filemanager class. @jmarshallnzhttps://github.com/jmarshallnz:\nPlease review.\nYou can merge this Pull Request by running:\ngit pull https://github.com/arnova/xbmc fm_fixes_for_guimediawindow_too\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1997\nCommit Summary\n- changed: Refactor CGUIMediaWindow::ShowShareErrorMessage() so it\n  work\u2026\n- fixed: Properly fallback to root in case getdirectory fails in\n  Update\u2026\nFile Changes\n- M xbmc/windows/GUIMediaWindow.cpp (44)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1997.patch\n- https://github.com/xbmc/xbmc/pull/1997.diff\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1997.\n. Not until Frodo is out.\n. Under what cases do you hit this?  It changes behaviour as to always throw a dialog when GetDirectory() returns false.\n\nWhy is the change in Refresh() needed exactly?\n. The reason I don't like the dialog in Refresh() is that it may be called without user interaction.  Thus, throwing a dialog up on failure may not be the most appropriate thing to do.  Better to just fail silently in that case.\nOfcourse, I'm assuming that you haven't actually hit a case where the dialog would be needed in Refresh.\n. Updated to a version I bothered testing.\n@Montellese this just fixes the previously broken behaviour - i.e. we've had this functionality since Eden at least, whether you like it or not :p  I suggest post-Frodo if it bugs you heaps then change the \"show parent items\" to a tri-state (never, always, only for an empty list).\n. Looks good to me.\n. Great, to give you some practice, please remove the comment before and inside dirFromHandle :-) \n. Fixed (very) slightly differently in 2c1be2ce5a8bf58ef0d52ed2f8c3b9fe681e13b0 and de8789a5ec3cb6a7b82d7e304d8755a59dd0c20d\nThanks again!\n. The code looks fine.  Not sure if I like deferring what happens after startup to the skin, but I guess that is already being done anyway.\n. So all these keys are handled in WM_APPCOMMAND already?  i.e. this can't break anything?\n. Sounds fine to me then.\n. davilla handles that - see the frodo final thread on the forums.\n. Looks like a nice start.  If I understand it correctly, the API is basically (excluding miscellaneous stuff):\nLoad(buffer_of_memory) // loads file enough to determine size of the image.\nDecode(out_buffer, format) // decodes into the output buffer of given format.\nEncode(in_buffer, out_buffer) // encodes into the output buffer.\nFree(out_buffer) // frees the output buffer.\nIt would be useful to doxy up the IImage so that the API is clear.  Does a fallback need to be in place to CxImage (or whatever replaces it from the file-specific loaders?)\n. You could have a CreateFallbackLoader() or some such perhaps?\n. Works fine on OSX.\n. Said you try after the fix for releasing the image that was added after\nyour report?\nOn Feb 1, 2013 7:51 PM, \"Memphiz\" notifications@github.com wrote:\n\ndamn - i wonder whats up with my rig then - maybe i need to rebuild deps\nfrom scratch at on epoint or so ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2040#issuecomment-12982910.\n. Our db layer maps it to rand() for mysql.\n. @koying ping :)\n. Read up :) - we already take care of that in the database layer.  The question is whether this makes things unacceptably slow.  Easiest test is partymode with a decent number of songs.  The length to queue the next song (i.e. after the first song is over) in the list is of interest.\n. Hmm, there doesn't seem to be anything wrong with the query, right?  Mind running it in mysql directly and seeing if you get a bit more information from the error msg?\n\nEDIT: Hmm, why isn't RANDOM() -> RAND() being detected...\n. Ah, I see the problem.  The RANDOM() -> RAND() conversion is done only in vprepare, and we're using BuildSQL() which assumes pre-formatted.\n. Ok, should work now :)\n. Thanks :)\n. It uses %08x and uint32_t, so I think that'll do the trick?\n. Note that this isn't enough to write binary files (as you can't write a NULL byte now, where you technically could before, albeit in a really slow manner) but it will fix writing of text files.\nGiven that the method doesn't include a size to write, it can't be used for binary anyway.\n. Squash it down to a single commit (git rebase -i HEAD~3) and I'll pull it.\nLet me know via commenting when done (else I won't get notified)\n. Looks good - thanks!\n. Fine with me\n. Can you explain why we uninstall in OnPreInstall() and not just when rolling back?  I don't think you need to uninstall when updating as it will install over the top and c-pluff handles updating?\n. Which cases are these, and would they also apply to non-service add-ons?  IIRC RemoveAddon() just tells c-pluff that it's not there - it doesn't actually delete it off disk, right?\ni.e. why not remove before update in general instead?\n. I'm commenting only about the RemoveAddon() call that was moved.  This should not have anything to do with whether an add-on is running or not, so shouldn't depend on add-on type, right?\n. Does RemoveAddon() touch the addons database?\nI don't mind if it's what's needed - It just seems to me that it if works for service add-ons then it'll work for all add-ons.  i.e. no special case is needed in the addoninfo dialog - just do it all in OnPreInstall()\n. I wouldn't change it for Frodo - you made the correct decision there.  But there's no reason now not to get to the bottom of the issue.  It seems there's some questions floating about still:\n1. Why do service add-ons need to be enabled in order to be uninstalled/rollbacked/updated?\n2. Why don't other add-ons have the same restrictions (or do they and noone noticed?)\n3. Why does updating an add-on affect the disabled status?  Should it? (e.g. disabled due to broken -> auto enabled when unbroken?)\nIf we get to the bottom of exactly what is going on, then it should apply across the board.\n. Every plugin does it the way they want.  Though one presumes the worst is the URL I gave, so the most general is probably a (relative) path + params.\n. The builtin will need it as another param I guess.  Kinda messy as it screws around with the multiple-parameter version of RunPlugin() in that same block?  IIRC @ulion has some work somewhere for named params for builtins.\n. Why not instead just ensure that the textbox doesn't scroll past it's bounds?\n. ok, so what use is scroll() then?  Reason I ask is XBMC itself doesn't use this method, nor do skins.  i.e. why do addons need to have this information at all?\n. Sure, but why use a textbox that the user doesn't have control over?  Why not tie a progress bar to it in the skin and let the user control things?\nMy point is that if scroll() has no particular use, then I'd prefer to remove it than expose new methods that have dubious use cases.\n. The above could be done already using a scrollbar and textbox without any code in python other than grabbing the textbox and setting the text on it.  The layout would be handled in standard skin XML.  It would be safer to use across versions of XBMC (no assumptions on the action IDs that would apply), and would better integrate into windows where more than just the textbox is present.\n. You have a window, the design for it is done in XML.  For your example above it would be a simple dialog window with a textbox and scrollbar control in it.  The script then opens said window (doModal) and sets the text on the textbox in the onInit() method of the window class by grabbing the control via getControl() and then calling setText().\nDoing it this way is better for a bunch of reasons - one of them is that the number of lines may change while the window is on screen and the text is the same (e.g. if the user switches windowed to fullscreen).\nAn alternate fix would be to allow the scroll to respond by scrolling down or up rather than taking an absolute position.\n. Can we close this one?\n. Looks good.  Does it warrant moving Geometry.h to utils/ or some such at this point (it's used in a lot of non-UI stuff).\n. What is the normal behaviour of Android apps that control volume?  Should we:\n1. Do as in this PR (i.e. control internal, force external to 100%).\n2. Have the internal volume control actions control external volume (i.e. keep internal at 100%, control external).\n3. Disable all internal volume control so that the OS handles it.\n. XBMC's bar would be my preference.\n. IMO the isInTouchMode() stuff isn't worth the ifdef's for showing the volume bar.  I'd get rid of that (you could leave the inTouchMode() function as it might be useful for other stuff?)\nI don't like the fact that Android is using a separate meaning for the volume (i.e. the percent->db->scale is not being done) One presumes it's doing it internally, but I'd prefer the AE API was kept the same across the board.  i.e. do the transform in CApplication and then invert it prior to setting the HW volume.  This then gets rid of another ifdef.\n. Surely it's just a matter of interpreting the value that AE feeds the sink correctly?  It is a multiplicative scaler.  Thus, on those platforms that require you to configure the HW using some other value (e.g. a percentage or proportion), you should invert the transform (scale->gain->percent/proportion).\nAE should be the same across platforms.  The sinks should take care of any conversion.\n. I'm not trying to produce more work, I'm trying to produce less by ensuring we have maintainable code (I'm also not flicking back and forth, rather affirming my original statement and backing it up with an objective reason :p).\nLess ifdefs is good, surely?  And code that pops up a volumebar in spot A or spot B depending on platform is less maintainable.\nIf you really want a different look for touch and non-touched then do it in ShowVolumeBar(), don't have ifdef's around it (otherwise other routines might call that and also need ifdefs etc) but do the ifdef'ery inside.  As I don't see a particularly strong reason as to why this would be desired, IMO even that isn't worth the maintenance overhead.\n. I believe I have a valid criticism of the code that can be remedied reasonably easily.  I'm open to being persuaded that my arguments are invalid.\nI'm happy to branch do the changes myself if the author of the commit would prefer it that way - it's not about subjecting someone to unnecessary hassle (though the weight of their email may suggest otherwise at this point!) it's about getting the code right and not having endless fixup commits in master.\n. Looks great - thanks!\n. Please use the forums to report issues.  Github is for code only.\n. Thanks for the patch.  Please split the commit up into a single change per commit (i.e. \"changed: CApplicationMessenger::SendGUIMessage to handle case where winid == 0\", \"add autopool if none available\" etc.)\ngit reset HEAD~1, git add -p\n. Overall it looks fine once the inline comments are taken care of.\nDoes the factory not support autoclose?\n. I'd recommend keeping things simple: If there's a set of overrides that will do the trick, then construct that set and simply have a toggle \"Apply subtitle effects\" or similar in the UI (defaulting to true).\nWould you like me to comment on the code at this point?\n. if (setting is lastfm)\n  update setting to theaudiodb\n. I believe Frodo is closed.  Will merge to master either way.\n. git pull --rebase upstream/master\ngit push -f \n. Hi Paul, please ask the exact same question in the forums - we try and leave github for code only.  Thanks!\n. IMO the user has a point.  If we're logging the keycode has hex then we really should support reading it as such, even if it is just a fallback.  AFAIK the keycodes used will very likely be on the range f000 up, so we should be able to be distinguished between hex+decimal in that case simply by reading as hex, then throwing out those values that are obviously far too large?\n. You could add it as an altname I think (clunkily), but surely this is screaming out for some sort of regexp style matching, along with the 360 shenanigans.\n@da-anda Your thoughts on how to do this sanely?\n. I don't think we need a separate file (though as we read them all, it probably won't matter) - we can just put 'em in a block at the top of any keymap file perhaps?\n. Sure - don't let cosmetic issues get in the way of fixing it.  Are you planning on giving it a crack at some point?\nIn the meantime, does someone have time to switch it to use an altname so we can merge it in?\n. Looks fine other than that one.\n. With CStdString -> std::string fixed, all good.\n. win32 signed off.  Compile is fine.\n. Thanks!  Any suggestions on improving the issue you hit with the macros?\n. @gnif, @theuni, @davilla your thoughts?\n. Looks fine to me.\n. Using ICU is really the only solution to this.\nThe reason it works on some but not others is locale support.  On some platforms (e.g. android) we have none so can't do much about that.\n. No, we're not using ICU at all.  The advantage of using ICU is that this is all taken care of, including proper sorting etc.  Disadvantage is that ICU is huge.\n. Please rebase.  Fix is correct otherwise.\n. No problem.  I presume the test still passes?\n. IIRC it's just a make xbmc-test\n. You probably need an --enable-tests or thereabouts to configure.\nBut this code isn't even part of the test suite anyway (see utils/test/TestStringUtils.cpp) - in fact, it's completely useless.  Mind removing it instead?\n. Thanks!\n. Looks fine to me.  IIRC once you've added one \"landscape\" type for a movie, then from then on you have it available to choose in the select for others anyway?\n. Fine with me\n. github is for code only.  No bug reports, no feature requests etc.  The forum is the correct place for that.\n. IMO the better way to do this is to have a class of jobs that are pauseable (perhaps just PRIORITY_LOW - it would need changing to PRIORITY_PAUSEABLE and reviewing which jobs are part of it - not all low priority jobs should be pauseable), and then just pause the jobmanager which pauses all those pauseable jobs.\nThat gets rid of all the complication in the jobmanager.\n. The CJobWorker shouldn't care about this (sleeping doesn't do anything but delay anyway).\nJust modify the PopJob() function to check for the boolean paused state and ignore that class of jobs.\n. No you can't.  Your additions are between jobs, not within one.  Most jobs can't be cancelled anyway.\nEDIT: Re-read what you'd wrote. There's no advantage at all to between DoWork/OnJobComplete in most cases.  If there's lots of work being done in OnJobComplete() then the job is badly designed.\n. Are you going to cleanup all the other paused stuff?\n. Correct - that's what got us into this mess in the first place.\n. IMO it's not.  I'm not completely convinced that there isn't other low priority jobs out there that should be running but now aren't.\n. Note that DDS on anything supporting OMX is just plain silly as the GPU doesn't support it.\n. AFAIAA the first call goes out at first view of the weather data which means the first call to the infomanager (any of the weather labels or bools).  It then updates at most every 30 minutes, and only if another call goes via the infomanager.\ni.e. you'll get updates every 30 minutes only if there's persistent calls into the infomanager from a control.  Note that you may get that call even if the control is invisible - this needs checking.  It's not clear to me whether the default skins (confluence/touched) still induces calls into the weather add-on or not outside of the weather window.  Depending on how it's done it may be that there is some control awaiting visibility on Weather.IsFetched, or a hidden label which still updates it's content.  Someone (hint, hint) needs to test whether this is actually the case or not.\nThe next thing to check is whether there's a cheap API call to get whether an update is available, rather than just pulling down all the data every 30mins.  Is there also a way to pull down some minimal data (e.g. just current info without forecast?) that might be used for weather widgets in most skins?\nIMO increasing the time between updates should be the last resort.  Most regions receive updates twice an hour, so that should really be our update time.\n. The best thing is to contact the service providers and find out how we can best work with them to reduce load.  It seems to me that there's very little data that we actually pull down every 30mins (a few kilobytes, right?) but there may well be something they have available to minimize load anyway which we can take advantage of.\nIn the meantime, moving the update time to the addon xml seems like a reasonable thing to do, as this will likely be per-service anyway.\n. I don't think there's any nice solution to where a scraper can come back from the dead.  No matter where we put the update stuff, we'd have users running it at some time in the future where the scraper may have been resurrected.  Further, if the scraper is resurrected later, then we should perhaps switch back to it.\nOne solution is to do it at runtime.  i.e. when the scraper is actually used, if it isn't available, fallback to the default.  This would also save the issue of when IMDb went down - themoviedb could have replaced it.\nOne problem is that I'm not sure whether we distinguish between \"scraper not found/usable\" and \"don't scrape\" well enough to make this switch in the scanner.  We could maybe do it in the C(Video|Music)Database::GetScraperForPath() I guess.\n. Very nice work!  I guess @JezzX should have a look at the dialog.  IMO this can go in as soon as you're comfortable with it.\nAs for the sorting, it makes most sense I think when a limit is also applied, which would thus apply to the items, not the groups?\n. Great - only a couple of minor things left over.\n. Fine with me.\n. Looks good to me.  @Memphiz mind hooking up the xcode project changes either before or after merge?\n. No\n. It's up to @Montellese as to whether this should be proposed for a backport.  It's his feature, (his mistake), and his fix :)\n. Nice cleanup.  Needs xcode project files updated, but @Memphiz might be able to handle that after it's pushed in?\n. I like the cleanup bits at least :)\nI think there probably is some base class hiding in here - very few settings are hit enough that it would make any difference, and those that are hit that much would be better to cache the result and act on a callback of change.\nIf you're going to have callbacks triggered when a setting changes then does i seems plausible that more than one listener might want to handle the callback?  How does this fit into the class structure developed here?\n. First commit is wrong.  The substituted path is not saved at all.  See CDirectory::GetDirectory.\nThe second commit is also wrong.  See CDirectoryCache::ClearFile().\n. Ah, that was added later, and now that I see the reason for it being added, and when it was added (just before Eden) I see why it was done in this way, rather than being done properly.\nWhy not simply translate directly in CDirectory/CFile before the SubstitutePath() calls and then get rid of the translation in CDirectoryCache?\n. Sure, but in that case we'd already be applying it multiple times in CDirectoryCache anyway, as atm, we basically do:\nrealPath = URIUtils::SubstitutePath(path)\nCDirectoryCache::Foo(path) (which then does a SubstitutePath).\nClean it up and all will be good :)\n. Technically the user could probably have a translation for a single skin directory, but this would be highly unlikely - much more likely that they'd substitute the addons folder completely.  I wouldn't worry about it.\n. Code looks fine, though how much work would it be to switch CVideoThumbLoader::GetArtTypes() to use a set, thus making it less LOC for both blocks there?\n. Would be nice to have this fixed, indeed.\nThis seems overly complicated to me - why do you need to actually copy the data?  Can't you just increment the amount of data that you have in AddPackets (and decrement in your worker thread) without actually copying it, right?\nThe thread also seems to be non-essential - you could instead just use the CurrentHostCounter() to compute how far through your pretend buffer you are, based on how much data has been input, and the rate at which it would be output.\n. This really shouldn't have been merged in this state. It needed squashing and build testing on win32 which now doesn't build.\n. How do you handle the Frodo repo? Does the main subs script still come with the services for that?\n. Yup, the API can't change for 12.X, so it'll be Gotham for sure.  I guess you're relying on a separate repo/separate versions being available until Gotham as Frodo is phased out?\n. There's still a while until next merge window, so no rush ATM. The way it's\narranged looks fine to me ATM as a first step.\nOn Feb 21, 2013 5:54 AM, \"Zeljko Ametovic\" notifications@github.com wrote:\n\n@jmarshallnz https://github.com/jmarshallnz if this is not something we\nwant just let me know... or if it needs more work.... but I feel we need to\naddress the service split one way or the other\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2225#issuecomment-13842703.\n. The UI addon bit would need to be a different addon ID for it to work I think, else Frodo users would get the new cut down one which is useless to them, right?  The subtitle modules won't be visible as Frodo doesn't know what they are, so they won't be installed or listed I think?  This ofcourse needs testing - it may be that there's a bunch of logging done about addons that are unknown if these are in the repository (you'd need to generate an addons.xml with the modules in place).\n\nOn the one repo thing, I'm not sure it's going to work, given the current code in Frodo.  We always assume that the latest version available among all repositories is the one that should be installed, regardless of whether it has met or unmet dependencies.  IIRC we don't bother checking dependencies before we prompt for install, and there is no support anywhere for multiple versions of the same addon in the addon database.  It might be worth opening a thread to discuss exactly how this is going to work.\n. Sounds good to me.\n. First off, thanks for your efforts.  However, this will not be added without some sort of caching built in to attempt to limit the impact: Doing regexps 60 times a second (complete with compilation) is not something we wish to encourage if we can possibly avoid it.\nThis could be done several ways, but one way might be to have an InfoRegexp (derived from InfoBool, there may be some work required to factory-ise it perhaps?) introduced that stores the labels etc. as needed.  Then in it's Update() routine you check if the label has changed, and only run the regexp if it has.  Note that the regexp can be compiled at parse time so you really only have a string compare then a regexp run (only if the string has changed) which will be far less computation load.\nRegarding the string parsing, I'd really prefer that a grammar/parse tree is setup to make this correct once and for all.  I have some work on this done up in a (local?) branch that I can clean and push up to github if you want to take a look (it's a somewhat separate issue to the main one of getting regexp support in though).\n. InfoBool still updates once a frame.  The problem is it's still dumb - basically it just wraps a call into CGUIInfoManager::GetBool.  Ofcourse, the idea is that it becomes less dumb with time as it's subclassed for specific functions - i.e. it effectively starts absorbing the boolean-specific things that are required.  e.g. you could anticipate a class for all system booleans, or more generally, a class for all bools that require GUIInfo or GUIMultiInfo.  The former could then call directly into the functions required, rather than jumping into a huge switch statement via GetBool().  Further, the updating could be made specific to the cases (e.g. system bools probably never need updating, essentially moving to a push-model).\nEssentially you could create the InfoRegexpBool in CGUIInfoManager::Register() by detecting there that it's a regexp in the single bool case.  (Later on, a better factory could be produced for this to avoid the issue with a regexp containing + et al.).  The parsing function could then be implemented in the InfoRegexpBool constructor rather than calling TranslateSingleString - you'd call SplitInfoString() and then set all members, construct the regexp etc.\n. @Fice it's a bit of a mess, but I've rebased it up here: https://github.com/jmarshallnz/xbmc/tree/info_in_builtins_parsing\nThere's plenty of rambling comments which likely don't mean much to you, but you should get the basic idea from the Parser.cpp/Tokeniser.cpp stuff on how the parsing works and what the grammar is set up for.  IIRC I aimed it initially at Builtins, but there's some changes there for info stuff which might be able to be adapted.\nThe tests use boost, but should be pretty easy to adapt to gtest if you want to work on it.\n. When XBMC starts, does this mean the slider in the windows mixer goes up (or down) immediately to sync with XBMC's volume?  i.e. does XBMC override what was previously set in windows audio mixer on run?\n. Yup - that's why I asked :)\nSo you can't actually alter the master volume, right?  Just wondering what happens if the master volume is quite low and you start XBMC - you can only alter the volume within XBMC then.\nWe need to decide across the board how we're going to handle that case.\n. @Montellese: How does this fit in with your settings stuff?\n. Yup, fine.\n. The code is OK, but it's not clear exactly what it's protecting.  I suggest replacing with:\n```\nif (seconds < 0 ||                // negative times not allowed\n    seconds == 0 && loop)  // loop must have a positive time\n  return 1;\n// add alarm\n```\n. Thanks :-) \n. Can you generate a case where message order is important?  I suspect there are cases where it is supposed to operate in the way it does ATM\n. Message order is what this PR fixes. I am not convinced that it is an issue\nat all.\n@ulion do you have a case where it is important?\nOn Feb 19, 2013 9:29 PM, \"stupid-boy\" notifications@github.com wrote:\n\nmessage order is important. no one is talking about this. i thing message\norder is kept even with older version, as i do not see who and how will\npreempt loop in it. of course, everyone is free to try to do such\npreemption, does this mean we must explicitly and in advance allow it?\ni suspect that in terms of functionality, both versions are equal. new\nversion only adds unwanted level of code complexity and open doors for\nunwanted things. that is what i want to understand clearly.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-13761793.\n. On writing doxy for this function, I notice that it is not at all clear which of two properties would be considered preferred, or whether both should be desired:\n1. Message order.\n2. Ensuring only messages in the queue at entry to the function may be processed.\n\ne.g. consider an (unrealistic) example with 5 messages A through E.\nDispatching A will cause D to be added to the queue.\nDispatching B will spin a modal dialog, thus recursing into DispatchThreadMessages.\nDispatching C will cause E to be added to the queue.\nDispatching D will close the dialog.\nAssume A,B,C are in the queue at the beginning.\nCurrent implementation ensures property 2 but not property 1.  It would take A,B,C off the queue into temporaries.  Then A is dispatched adding D to the queue, and B is dispatched recursing into DispatchThreadMessages.  D is removed from the queue into a temporary and dispatched closing the dialog.  Once the dialog is closed we fallback from the recursion, and C will be dispatched, adding E to the queue.  E then gets dispatched next frame.  Thus, order is A,B,D,C,E, however it is clear that only messages present on each entry to DispatchThreadMessages are processed during it's context.\nThis PR ensures property 1 but not property 2.  We have size 3 on entry, then A is removed from the queue reducing the size to 2 and dispatched, adding D to the queue. B is removed from the queue reducing the size to 1 and dispatched, recursing into DispatchThreadMessages.  The (inner) size here is 2.  We dispatch C reducing the inner size to 1 which adds E to the queue, then dispatch D, reducing the inner count to 0 and closing the dialog and falling back through to the outer call of DispatchThreadMessages which still has size 1.  It executes E and we're done.  Note that the outer call to DispatchThreadMessages processed A,B and E, even though E was not present when the call was made.\nI don't know which is the lesser evil here, and as far as I'm aware, there's no evidence that out of order execution is causing any problems.\nIt is possible to fix both by holding the messages in a local deque and popping them off both queues, executing only if the messages are the same.  We'd need a unique ID for every message for that comparison.  I'm not sure if it's worth the hassle.\n. IMO it's not acceptable to fix one issue at the expense of another.\nOn Feb 21, 2013 4:01 AM, \"ulion\" notifications@github.com wrote:\n\nclearly, current pr is the safe plan currently we have. a little hard to\nunderstand should not be an excuse to not fix the obvious delay message\nwrong order bug, and now we all understand it, right?\nother safe plan is also acceptable, but it should support remove certain\nqueued message, and this is needed for another pr related with playback,\ncurrent temp vector can not support it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-13835874.\n. Perhaps the code would be clearer if the order was part of the stored message.\n\ni.e. use a list< pair<unsigned, CGUIMessage *> >  Then you need only store the maximum message number you want to process, which can be a local variable.\nThe remove message can then just remove whichever ones you don't want.\n. Fine with me.\n. Shouldn't it be percentwatched?\n. Looks OK to me, though I wonder if it's worth adding a static function (say to CVideoDatabase?) that takes in CFileItem, watched, total and assigns all the watched related properties.  Saves the same code all over the show.\n. Looks fine, though agreed with t-nelson that it could be made clearer.\n. Assigned to next merge window.\n@Memphiz: will need xcode monkeying :)\n. Looks good to me as a whole.  Are you planning on GLES (shaders) and DX support or prefer someone else take a crack at that?\n. Looks like the colour mults are overriding the diffuse texture?\n. So pick a version and run with it.  Whatever is easiest for win32 is probably easiest for all?\n. Looks like some squashing is in order to reduce the number of commits.\n. This is the frame limiter, not intended to be hit at all as almost all\nsystems have vsync. Without vsync you'll get tearing etc anyway. Why do you\nnot just use vsync?\nOn Feb 21, 2013 2:26 AM, \"stupid-boy\" notifications@github.com wrote:\n\nThis allow to keep cpu cool on low powered systems. Old value of 100 fps\nare kept as default.\nI found value of 20 fps to keep my RPI at 700MHz at ~80-85% cpu time. With\noriginal value of 100 fps it can produce only 35-38 frames at 1000MHz with\n100% cpu time. 20 fps looks pretty good and does not cause any visual\ndefects.\n100 fps is unusually high for regular x86 HTPC too.\nYou can merge this Pull Request by running\ngit pull https://github.com/stupid-boy/xbmc GUIFrameRate\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/2265\nCommit Summary\n- GUI frame rate moved to advanced settings\nFile Changes\n- M xbmc/Application.cpphttps://github.com/xbmc/xbmc/pull/2265/files#diff-0(3)\n- M xbmc/settings/AdvancedSettings.cpphttps://github.com/xbmc/xbmc/pull/2265/files#diff-1(3)\n- M xbmc/settings/AdvancedSettings.hhttps://github.com/xbmc/xbmc/pull/2265/files#diff-2(1)\nPatch Links:\n- https://github.com/xbmc/xbmc/pull/2265.patch\n- https://github.com/xbmc/xbmc/pull/2265.diff\n. I can see the usefulness, but it seems a bit fugly.  I can't really think of a better way to do it though without some sort of \"end of function/expression\" character (e.g. semicolon).\n. Well, I guess with multiple bar (do we support this?) you'd have it anyway, right?  It's mainly for those cases where you want a single string to represent multiple actions.  Semi-colon separated would be a bit nicer I think, but may be trickier to implement as you'd need to split things up first (taking into account quotes).\n. Mind rebasing down to a single commit or two?\n. Not if anyFunction is const.\n. What about plugin items that set the resume point external to the database?\nOn Feb 25, 2013 8:42 PM, \"Sascha Montellese\" notifications@github.com\nwrote:\nRight, I forgot about the resume point check in PlayMedia(). I'm OK with\nthis. Probably best ping @jmarshallnz https://github.com/jmarshallnz as\nwell.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2293#issuecomment-14029124.\n. An alternate fix would be to play the gui item not the playlist item?\n. Looks much better - nice work\n. Looks fine to me once the comments are cleaned up a bit.  It essentially takes care of the other ticket in a different (better) way.\n. Returning just the number would be better, yes.\n. Correct, it will only be added to Gotham.\n. Fix is fine, but as you say is just a workaround for the silliness. The code for doing the lookups should be in the info scanner, with the code for setting up for display in the info dialog.\n. Sure, I have no problem with the temporary fix.\n. Looks fine.\n. There should be an escape routine (or two) already - see ESCINFO handling and also the stuff in CFavourites.  Would be good to unify where possible.\n. Looks good - agreed with backports.\n. We don't take feature requests or bug reports on github.  Only code contributions.\n\nThe forums are the place for the other stuff.\nThanks!\n. Looks OK to me - assigned to next merge window.\n. All looks fine to me other than the rand() removal as @theuni notes.\nThis should be backported where possible.\n. Fix is fine in the meantime, but yes, there really shouldn't be any deletion of fonts here as they're supposed to be refcounted.\n. Is DestroyWindow called when resizing the UI?  That's when fonts need unloading.\n. As long as the context is recreated so that the textures are still fine, it should be OK, yup.\nThe functionality is not used anywhere else.\n. Changes look fine thus far.  Agreed that things should be initialized in the constructor to sane values, particularly the booleans such as m_running.\n. Please use more informative commit messages. Cosmetics should state that.\n. Any ETA on that patch/testing?\n. Looks fine - thanks!\n. If the issue is just wanting to expose the log to the network, then why not just expose the log and leave it at that?  Is it a security issue to expose only the (stripped) log?\n. The former.\n. Looks fine with a quick scan.\nI notice nothing is currently unregistering itself.  Perhaps it could do so on app close?\n. I don't see why it can't go in April 1 - it'll need some xcode project love but that's about it.\n. The first commit is fine.  The second suggests we're ignoring an actual tag value.  What is the actual tag value that's being placed into artist?\n. Ok, so it's picking it up from the contentDescription block which is fixed, rather than from the extendedContentDescription block which normally contains the tag stuff.  Please add a comment (squashed into the second commit) to the if statement such as:\n// artist may be specified in the ContentDescription block rather than using the 'Author' attribute.\n. Nice work - merge away.\n. CDirectory::GetDirectory() first calls CDirectoryFactory::Create() to create the directory object, so this change will effectively be a noop (subject to skipping any checks prior to the factory creating the directory object).\nI suggest stepping through the routine and finding out what your real problem is.\n. You close it like you've already done.\n. Please do remove the setting.  Once added they're extremely difficult to remove - I don't see a reason for anyone to not want this.\n. The commits need squashing down.  Other than that I have no problem with it going in.\n. Yup. git rebase -i HEAD~3, follow instructions, force push to branch\n. Yup, perfect.\n. I'm OK with the changes - the extended background progress was made for exactly this type of purpose.\nI have no preference for whether things are done optionally using the progress or as a separate class.  One thing that might prevent this is that the background progress has essentially one, short line of text available (though I guess you could cycle through different labels) whereas the modal progress has three separate lines.\nAs for changing the progress/yesno/ok etc. to have a textbox rather than 3 labels, this could be done with full backward compatibility anyway, so is a separate discussion.\n. I haven't reviewed, but one thing to keep in mind is that there's only one\nworker thread nowadays, so much of the logic can be simplified. Further, we\nneed the ability to run at least 2 loops over the items rather than just\none. Doing so will speed up thumb setting etc.\nOn Mar 21, 2013 8:30 PM, \"ulion\" notifications@github.com wrote:\n\ncurrently, each time when nav win changed the path, the bg info loader has\nto wait all workers stopped and block ui. if the worker is working on a\nslow task, e.g. list a zip file or on slow link, this will make the ui\nlooks 'lock'.\nThis PR changed the StopAsync method of bg loader, make it support finish\n(save) current work asap, before the working workers finish their half work.\nYou can merge this Pull Request by running\ngit pull https://github.com/ulion/xbmc fasten_ui_by_loader_stopasync\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/2476\nCommit Summary\n- Add CThread::IsCurrentThreadStopping() to check current thread\n  stopping.\n- Add class CDBCloseGuard for auto-close database when leave scope.\n- Add exit points for loaders' LoadItem() to speed up if thread going\n  to stop.\n- Change CBackgroundInfoLoader::StopAsync() to support finish and\n  discard left work.\n- Change CBackgroundInfoLoader::Load() to stop previous work asap.\n- Change all CBackgroundInfoLoader::StopThread() to StopAsync(true) to\n  fasten xbmc ui.\nFile Changes\n- M xbmc/BackgroundInfoLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-0(84)\n- M xbmc/BackgroundInfoLoader.hhttps://github.com/xbmc/xbmc/pull/2476/files#diff-1(9)\n- M xbmc/ThumbLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-2(2)\n- M xbmc/addons/GUIWindowAddonBrowser.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-3(4)\n- M xbmc/dbwrappers/Database.hhttps://github.com/xbmc/xbmc/pull/2476/files#diff-4(9)\n- M xbmc/dialogs/GUIDialogFileBrowser.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-5(4)\n- M xbmc/music/MusicInfoLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-6(23)\n- M xbmc/music/MusicThumbLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-7(5)\n- M xbmc/music/windows/GUIWindowMusicNav.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-8(4)\n- M xbmc/music/windows/GUIWindowMusicPlaylist.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-9(12)\n- M xbmc/music/windows/GUIWindowMusicPlaylistEditor.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-10(8)\n- M xbmc/music/windows/GUIWindowMusicSongs.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-11(4)\n- M xbmc/pictures/GUIWindowPictures.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-12(4)\n- M xbmc/pictures/PictureInfoLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-13(11)\n- M xbmc/pictures/PictureThumbLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-14(1)\n- M xbmc/programs/GUIWindowPrograms.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-15(4)\n- M xbmc/pvr/windows/GUIWindowPVRRecordings.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-16(2)\n- M xbmc/threads/Thread.hhttps://github.com/xbmc/xbmc/pull/2476/files#diff-17(5)\n- M xbmc/video/VideoThumbLoader.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-18(13)\n- M xbmc/video/windows/GUIWindowVideoBase.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-19(8)\n- M xbmc/video/windows/GUIWindowVideoNav.cpphttps://github.com/xbmc/xbmc/pull/2476/files#diff-20(4)\nPatch Links:\n- https://github.com/xbmc/xbmc/pull/2476.patch\n- https://github.com/xbmc/xbmc/pull/2476.diff\n. There's no need for 5 workers in picture loader.\n\nAs for 2 passes, the loaders do 2 jobs. First they set info previously\nextracted, and second they extract new information. The first is fast, the\nsecond slow. No point having items at the end of then list waiting on\nextraction of earlier items.\nOn Mar 22, 2013 12:24 AM, \"ulion\" notifications@github.com wrote:\n\nCPictureThumbLoader, CMusicThumbLoader and CVideoThumbLoader both use one\nworker;\nCMusicInfoLoader use one worker; but CPictureInfoLoader still use default\n5 workers according to the adv setting.\nwhat you mean 'run at least 2 loops over items' ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2476#issuecomment-15231264\n.\n. This seems overly complicated to me for what should be a pretty simple thing, perhaps due to the multiple workers and the data sharing.  Removing the data sharing will mean you can throw worker threads away when they're no longer needed for example (autodeleting threads).\n\nWith a single worker things become simpler - no need for booleans guarding the OnLoaderStart/OnLoaderFinish and the loop drops down to a for loop.  It's then easier to see when you execute OnLoaderFinish() and when you don't.\n. Perhaps it would be more useful to do the conversion in the file classes?  You'll notice we already handle it in the utf8 to wide conversion functions for display in the UI.  By handling it at the filesystem level, where we know the encoding, we don't have to handle it in places where we don't know the encoding.\nWhat happens with NFS/SMB shares from AirportExpress to Linux machines?  Does it transfer as 'normal' UTF8 at that point?\n. @Memphiz: what happens if Apple Express/OSX is serving over NFS to a Linux box?  Do you get \"corrupt\" UTF8 filenames, or is Apple Express/OSX smart enough to serve stuff over NFS/SMB using UTF8 that others will understand?\n. We use UTF-8-MAC on darwin for utf8 to foo conversion, so it's certainly there (see utils/CharsetConverter.cpp)  Thus, things should be displayed correctly in the UI already, right?  You could thus easily patch in an iconv conversion method.  Indeed, you could use CCharsetConverter::utf8To() directly if you changed it to check for UTF8_SOURCE rather than \"UTF-8\"\n. utf8To() will work fine as long as you remove the check (or better, replace the check) that the \"to\" charset isn't UTF-8.  Instead, compare it to UTF8_SOURCE.  That will convert from UTF-8-MAC to UTF-8 then on darwin builds, which is a start.\n. Also, you could probably get away with utf8ToW -> wToUTF8 for the conversion.\n. I think some of the first and third commits could be squashed, right?\n. The reason I prefer (!pItem->m_bIsFolder && pItem->IsVideo()) is because it's obvious from reading the code what the conditions are.  Now it's masked behind IsVideo(true) so needs a comment so you know what it means.  Self-documenting code seems better to me, particularly when it's simple.\nThe tricky bit here was that some folders can have streamdetails previously assigned.  This is taken care of by the check for m_iFileId, so the tricky bit isn't even affected by this conditional.\nThe simple bit is determining when to generate stream details or auto-thumbs.  In this case you need only make sure you don't have a folder and that it's a video.  Nice and simple to understand.\n. I think so, yeah.  maybe replace it with a bit of doxy (on IsVideo, IsMusic, IsPicture) about the potential issue?\n. Looks good with that minor change - merge away once done.\n. If you move unfocus to ACTION_TOUCH_UNFOCUS, then it makes sense to move focus to ACTION_TOUCH_FOCUS or similar, as I suggested above ;)\n. Exactly - the UI needs to do 4 things:\n1. Focus the control.\n2. Render\n3. Process 'click' event.\n4. Unfocus the control.\nThis can't be done in a single event, as at best you can do steps 3 and 4 as one - steps 1 and 2 need to be handled before.  So you need at least 2 events: One for \"tap start\" and one for \"tap end\" with a render in-between.  The actual action gets performed on \"tap end\".  As things are currently, the \"tap start\" is done via a mouse move event, which isn't quite right (as all we want to do is actually focus the control under the pointer, not move the mouse) and the \"tap end\" is done by sending a mouse click and then sending an unfocus message.\nThe suggestion is to just make those touch-specific events specific to the mouse/touch handlers (OnMouseEvent).\n. ATM there's a separation between events from the input system and messages to the UI.  While we could try and do everything with a single \"on tap\" event (i.e. focus control, trigger render, trigger action, unfocus) I suspect it's far easier if we have 2 events sent to the UI one for \"tap down\" and one for \"tap up\" with render forced inbetween (this is typically handled by the input system only passing one event (which itself may be the culmination of several input events) a frame).\nThis is how most UI libraries handle the mouse for example, which is most similar to touch, though typically has 3 states (unfocused, focused, focused+pressed).  The focusing is triggered on mouse move and the focused+pressed is triggered on mouse click down.  It then goes back to focused on mouse click up - two separate events.  With touched, there's typically no \"focused\" state as you only focus it when it's pressed anyway.  Thus, we use the 2 states in XBMC (unfocused, focused) to mean unfocused and focused+pressed and need two messages to the UI to trigger them.\nI'm not sure if the input system could send tap down and tap up, but if not we can fake it in the event handling system as is done here - basically instead of sending a fake mouse move you send a fake tap down.\n. Alternate version is available here:\nhttps://github.com/jmarshallnz/xbmc/branches/touch_focus_unfocus_fix\n. Looks OK to me.\n. My only comment is that I really hate using the context menu for this.  IMO the best place for editing metadata inside the app would be from the video information dialog.  Ofcourse, doing so would mean quite a bit of change needs to be made first.\n. Until the reason for requiring management from the sets (rather than from individual movies) is addressed:\nhttp://forum.xbmc.org/showthread.php?tid=160517&pid=1386800#pid1386800\nthe second commit needs to stay on hold.  I don't have a problem with the first half going in necessarily, though will review the code later in detail.\n. Fixups look good.  Regarding the warning of \"changing set will cause it to remove the old set\" the reason I don't want this in is that I plan on creating a new dialog to handle this stuff that will make it obvious that doing so removes the old set anyway.  Further, this is non-destructive - as the orphaned set is not removed from the database, the user can just re-set it again if they don't like it.\nWill review the second commit later today.\n. Looks good.  Drop the 3rd commit, address the last comment and pop it in.\n. rebase please.\n. Looks OK to me once rebased up.\n. Yeah, you'd need to add some extra stuff to deal with conditional swipe locations.  I'm not sure this (conditional location) belongs in the keymaps - it's UI-element specific really?\n. Agreed that it can go in as-is.  IMO the appropriate place for specifying control of this would be some sort of \"zoomable/rotatable image control\".  As it currently is, this control is the slideshow window, so the code here is fine.\nI presume this allows swipe to pan when zoomed in still?\n. Looks OK to me.\n. Just a note that for buttons that may suffer from scaling, your best bet is to make them not scale in the most common resolution, rather than aiming for a power of 2.  Ofcourse, if it's both that's even better.\n. Before I review, does it even make sense to have both highlight (which is used only in the numeric dialog when inputting dates, ip addresses and times) and selection available anyway?  It may be that the highlight can be done just using the cursor, so that things simplify quite a bit.\n. Isn't newEvent some sort of union anyway (i.e. perhaps the members correspond to the exact same data?)\n. I trust your copy n paste, so all good for me.\n. Changes look fine to me, though I wonder if just checking for ACTION_NOOP and returning false will do the trick (rather than having it only happen on MOUSE_MOVE?).  No preference though.\nPlease squash down to get rid of the commit noise.\n. Thanks :)\n. Does it make sense for both to be done at once and just have a single timer?  When you update video info you just about always want to update audio info as well.\n. Squash it up and it'll be good to go I reckon.\n. Not sure what you're referring to.  m_currentFile is a member of GUIInfoManager anyway?\n. m_currentFile is constant while a file is playing back - the information is pushed to the manager, so m_currentFile is only updated on play start anyway.\n. It can be true for non-ascii labels, but doesn't necessarily always have to be true.  As you have it ATM, only if the filter starts with a non-ascii letter are the spaces ignored.  Could their be cases where the filter word starts with an ascii letter but no space is present?  Also, there is certainly cases where the filter word can start with a non-ascii letter yet a space should also be present.\nIf there's no simple way to determine the beginning of a word, perhaps we should consider dropping the support for word searches completely?\n. So what if the filter word is \"\u00c4pfel\"?  You do a strstr() in that case.  However for \"Apple\" you don't.\nIMO if there's no way to determine those words that should be checked for regardless of space, we should remove the checking for all.\n. Your fix requires you to ignore spaces as some languages don't have spaces to separate words.  I don't think there's an easy way to determine whether a given word should be preceded by a space or not.\nAnother idea that is slightly different to yours but I think might be slightly more generic is to start the matching after either a space or a non-latin character.\n. That sounds similar to my proposal, yes.  Basically you'd just skip to the next character following whitespace or non-ascii/latin character, whichever comes sooner.\n. Is there any reason we don't have --enable-gtest on by default?  Would save a reconfigure.\n. Regarding the memleak, I think moving the call for FreeUnusedTextures() from Render() to ProcessSlow() (where the large texture manager is done) will do the trick?  This should definitely be done - we don't want to rely on Render() being done to cleanup unused textures.\n. Hmm, I'm not sure how you can have a texture in the m_unusedTextures list that can still be in use by the GPU - if a texture is no longer being used by all controls, then there would be a dirty region set as the last control gives up the texture, so that a flip will occur anyway, and the texture would then be unused at next ProcessSlow() ?\n(Note that moving the freeing of unused textures to ProcessSlow will inadvertently hide any bug that exists here as it's only called every 500ms rather than every app loop)\n. For sure it would make it harder to track. :)  It won't make you feel any better, but I think there'd already be a small chance of a hard to track problem anyway :).  The large texture manager is handled the same way, though that has at least a 2 second delay between when the texture is last used by a control and the texture being deleted, which makes it somewhat unlikely that it'll still be used by the GPU.\nStill, if you think there's potentially a real issue, then one option is to move it back to Render() and then get rid of the code block that was causing Render() to be skipped when minimised in the Frodo branch.  This would also mean that we don't reduce texture removal to only every 500ms.  The master branch doesn't need this fix at all, so it could be reverted there.\n. Thanks!\n. Nice work\n. I think smartplaylists are always treated as containers/folders, whereas playlists are only treated that way if playlistsasfolders is set (it's set by default).\n. Not atm as the big green button isn't there :p\nBut sure, I don't see a problem with doing that.\n. Looks OK from a quick look, though @elupus is probably the better person to review the upnp stuff.\n. The license looks OK to me - essentially the same as the last version we used.\n. I reckon we mayaswell clean it up while we're at it.  Will do it right now.\n. 920a5db\n. Looks OK to me.\n. Looks fine - just remove the initialisation of std::string's in constructors to \"\" that you've added.\n. Changes look fine now.  Squash down the commits and we'll pull in May merge window.\n. Yup, looks good once the above is taken care of.\n. The changes look fine at a brief scan.  Can't really make it any worse than it is atm :)\n. Hmm, maybe this needs thinking through a bit.  There's no guarantee that library://video/ exists - it's completely up to the user to define the nodes in the library - they needn't have a library://video/movies/ folder at all.\nBasically the only thing you can guarantee is that library://video/ is available.  Everything from there on is potentially a custom path that differs from user to user.\n. We operate with merge windows (first 10 days of each month) so it'll wait for then.  It'll also need OSX work (xcode projects) but that might occur after merge - @Memphiz - up to you.\nThis will also need some rebase work prior to merge - it looks like some squashing is in order, as well as rebasing to master for merge.\n. In the ideal world I think there'd be two commits - one adding the new demuxer, and the second dropping the old codec.  Personally I have no issue with it going in using a single commit, however, so don't feel as if this is something you need to worry about necessarily.  In case you want to do it, it's quite easy to split a commit.  Use git reset HEAD~1 to go back one commit, then git add -p and start adding hunks that apply to the first commit.  Commit that, then git add -p again for the next commit etc.\n. Once that 3rd commit is addressed it's good to go as far as I'm concerned.  It's a fix, right?\n. Fix is good, but please add a \"from file if available\" to the comment line to that commit.\n. Why do you need both a builtin and a standard action?  One or the other suffices.\n. A remote can quite easily call a builtin, so just leave that and remove the\naction.\nOn Tue, Apr 16, 2013 at 8:42 AM, Javier Marcet notifications@github.comwrote:\n\nI wanted to be able to map the action to a remote and also being able to\ncall it with xbmc-send.\nI could not do it without making it a builtin.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2598#issuecomment-16410195\n.\n. Needs Makefile changes as well.\n. Changes look good - thanks!\n. AddFavourite() seems OK to me.\n. I'd tend to just separate out the main render/process in one commit and the extras (getting rid of unused methods, fixing setwidth/height, fixing freeing of items) in separate commits.\n\nThe basic changes look OK to me - a bit hard to review really carefully :)\n. @bobo1on1, @elupus \nPlease review and comment.\n. @elupus: Any suggestions on how it could be done without complexity?\n. @wsoltys is SSE2 not defined on win32?\n. Do you need the changes to CGUIDialogYesNo ?\n. The default action is to just close the dialog which doesn't set any particular state.  It's interpreted as No as the dialog isn't confirmed.  Technically, it does not set the cancelled state (which perhaps should be considered) but that's unrelated to this PR which does not use this facility either way.\n. You don't call the functions in CGUIDialogYesNo at all, so I can't see why they're needed.\nYou don't need any cancelled support either.  i.e. your changes in Dialog.cpp/Dialog.h are all that's needed.\n. According to that commit you want to go even further back.\n. Agreed - good detective work :)\n. Nothing stopping it hitting master at least.\nOn Sun, Apr 21, 2013 at 5:06 PM, olympia notifications@github.com wrote:\n\nIs there still some blocking reason to push this to master? As said in my\nopinion this sould be pushed to the Frodo branch as well, I do hope you are\nnot against it Davilla :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2624#issuecomment-16716153\n.\n. Split into 2 commits, one with the fix (dropping the g_application.IsVideoScanning()) and the other with the cosmetics.\n\nFree to go into Frodo if it applies there as well.\n. I guess this should have sign-off from the Spanish translation team?\n. Looks OK to me.\n. Why not get it in first then?  Other peoples rebases will be way less than\nyours, right?\nOn Sun, Apr 28, 2013 at 7:35 AM, Sascha Montellese <notifications@github.com\n\nwrote:\nProbably after anyone else. Ideally nobody touches CSettings or\nCGUISettings in that time because otherwise I'd have to go do a sync of\nthose in addition to the rebase ;-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2660#issuecomment-17121942\n.\n. Regarding returning false for a bool setting that is disabled, I don't think that's a good idea.  Disabled basically means \"this setting is completely unused\" thus the return code should not matter at all.  i.e. anything that depends on it should also depend on whichever other setting is disabling this one.\n. Another thing to consider is the music scraper settings are stored in the\ndb based on musicdb:// paths. Probably best to update those in\nUpdateOldVersion.\nOn 29 Apr 2013 05:23, \"Sascha Montellese\" notifications@github.com wrote:\nThis adds some logic to translate legacy videodb:// and musicdb:// paths\nto the new ones and is necessary to fix favourites using the old paths. I\nput the logic into CGUIWindowVideoNav and CGUIWindowMusicNav but maybe it\nwould be better off in CVideoDatabaseDirectory and CMusicDatabaseDirectory\nwhich would cover any calls to GetDirectory using the old/legacy paths?\nYou can merge this Pull Request by running\ngit pull https://github.com/Montellese/xbmc legacy_db_paths\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/2665\nCommit Summary\n- videodb: add translation for legacy paths\n- musicdb: add translation for legacy paths\n- cosmetic in CGUIWindowVideoNav\nFile Changes\n- M xbmc/music/windows/GUIWindowMusicNav.cpphttps://github.com/xbmc/xbmc/pull/2665/files#diff-0(52)\n- M xbmc/music/windows/GUIWindowMusicNav.hhttps://github.com/xbmc/xbmc/pull/2665/files#diff-1(1)\n- M xbmc/video/windows/GUIWindowVideoNav.cpphttps://github.com/xbmc/xbmc/pull/2665/files#diff-2(63)\n- M xbmc/video/windows/GUIWindowVideoNav.hhttps://github.com/xbmc/xbmc/pull/2665/files#diff-3(1)\nPatch Links:\n- https://github.com/xbmc/xbmc/pull/2665.patch\n- https://github.com/xbmc/xbmc/pull/2665.diff\n. The content table in the musicdb.\n\nThe views database probably needs updating as well, yup.\n. Looks OK to me.  Needs serious testing if it's going in 12.2\n. The main thing I want to know is if this is a new bug (new with the paplayer for AE) or if it's always been there.   A simple test would be to confirm whether it happens on Eden.  If so, the fix is fine.\nIf not, it's something to do with the callbacks being different in paplayer (I presume nothing has changed with respect to dvdplayer?), so it'd be useful to assess why they're different and if it makes sense for them to be so.\n. Sure - this function is only used by paplayer anyway.\nOn Tue, Apr 30, 2013 at 7:57 PM, arnova notifications@github.com wrote:\n\n@jmarshallnz https://github.com/jmarshallnz: Found the cause: 349ec40https://github.com/xbmc/xbmc/commit/349ec408c33c250b614b68037fec4dd5de5ddcff\nIt is the AE switch for PAPlayer. Before that it used m_bQueueFailed to\nflag a failed file open/play in PAPlayer::Process. It got lost after the AE\nmerge, and it's probably non-trivial to reimplement due to heavy\nrefactoring at the time. Probably my fix is still the best approach, agreed?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2669#issuecomment-17214082\n.\n. Yeah - good idea.  I'll make a note to do this once things are split up a bit more (plan is to split the infomanager into logical blocks of info, to save all the if/else/switch stuff in GetBool() as well)\n. You'll probably want to discuss that with the tinyxml maintainers, as this is direct from their code (and has been for quite some time).  I suspect any such bug would indeed have been fixed by now, assuming it did in fact exist.\n. \n",
    "opdenkamp": "I don't like return statements in the middle of a methods. that's what the bReturn/iReturn vars are for. bit overkill in the QueueInsertQuery() to do it like that, so I'll change it to return directly, but for the other ones, I don't like the return to be within the try-catch block.\nI'll have a look at the rest. thanks for the review.\n. coding style, and not just for try-catch but for all methods. code is usually easier to read if you don't return in the middle of methods. 1 entry point, 1 exit point. doesn't really matter for these little methods, but in bigger ones it does.\nit's been hammered into my head by a teacher at the uni :-)\n. documented that the parameters have to be FormatSQL'ed and returning a boolean now instead from the ResultQuery method.\npushed to master in 655aa1b36699d656181291ec962e51bc34f28d99\n. hmm, sounds like that can be reused. which one would that be? CGUIDialogProgress only has one label (the title).\n. totally forgot I had this PR around. created a new one, #860, with this included.\nI'll close this PR, and will change the other PR to reuse/refactor the code from GUIDialogMusicScan and GUIDialogVideoScan\n. I see I forgot to remove an obsolete method from the winsock implementation. I'll fix it and test it properly on Windows.\n. To add to the last comment: I didn't just copy all those files over but left the defines and helper methods that were needed to get it working intact. from what I can see now I just forgot to remove htsp_tcp_connect_addr()\n. I'll have a chat with andoma about the ipv6 then. I was mainly interested in the new interfaces and the queue changes.\n. closing this pull request for now. I'll open a new one when it's fixed in upstream.\n. something went wrong with the first commit for some reason. you can rebase the changes from master into your New_Confluence branch, fix that first commit, continue the rebase and merge your rebased branch with master afterwards.\nI could push this if you like.\n. indeed, that's the one according to my log and your changes removed those two things that were affected as far as I can see.\nI did the merge locally and all looks fine. I opened a new pull request with the rebased patches so you can check it out: https://github.com/xbmc/xbmc/pull/105\n. this .project isn't very useful without a .cproject. it's also not needed, as you create a new project file in about 2 clicks in eclipse. I don't think we should have IDE related files in our tree that are not really needed, unlike e.g. the visual studio project files that are needed on windows.\nso I say:\n- revert this commit and add the .cproject and .project files to .gitignore (like I did in the pvr branch)\n- OR add .cproject too and maintain it, though I really don't think we should do that if it's not absolutely needed\nand why send a PR and merge it within two hours after creating it? don't think anyone had time to comment?\n. cheers. I probably missed that conversation on irc then. and if others don't agree with my arguments for reverting this, feel free to correct me ofc.\n. my main objection was that it's useless without the .cproject file. and do we really want this in our tree? it's only used by devs, and Eclipse users probably know where to find the \"new cproject\" menu option?\nit might also not be desirable to have these files in the tree, because it also stores things like arguments that are provided to \"make\". e.g. I got it set up to call \"make -j3\" since I don't want it to occupy all my resources, but do want it to compile in parallel. this end up in the .project file.\n. nice work :)\n. \"This pull request cannot be automatically merged.\"\nplease rebase your patch and I'll merge it in.\n. merged\n. I'm working on per-device settings, in which I wanted to integrate this functionality too: https://github.com/Pulse-Eight/xbmc/tree/xbmc-peripherals\nfinishing up some things now, which should be done later today or tomorrow. I'll send another PR when done.\n. @topfs2\nI could integrate a config variable in my PR if you like, and let the user configure whether he wants a search dialog popping up.\n. I've cherry picked your 0c5a602 in my PR and made the action that is executed configurable: 26eb7115964b4b06abf09ae4b1c4ef228ad104b0\nif it's ok, this PR can be closed.\n. global searching is something that we'd want in the end, but it's a lot of work to implement that properly.\n. This is already implemented in the CPeripheralNyxboard class now, so this PR can be closed.\nThe default action is to pop up the search dialog when flipping the remote, which can be disabled in the Nyxboard's settings (system -> input -> peripherals -> ...)\n. @jmarshallnz\nsplitting the mapping file up into separate files is a good idea indeed. easy change would be just to change system/peripherals.xml into system/peripherals/devid_prodid.xml files. that's something that can be changed pretty quickly.\nhaving a system like this via add-ons came to my mind too, and someone (think it was pieh) also suggested this on irc. how I wanted to implement it now is that peripherals.xml can install one or more add-ons when a device is detected. another option is to expand the add-on interface and add mapping in there. e.g. add something like this in the add-on config:\nxml\n<supports_device>\n  <device class=\"usb\" vendor=\"1234\" product=\"1234\" />\n  ...\n</supports_device>\nit might be a bit cleaner to do it like this and it's something we can think about again when the binary add-on interface is implemented. we can also add a new add-on type then for peripherals, that does (a large part of) what the code in peripherals/devices is doing now. but until we got that binary add-on interface, the best option is to do it the way I'm doing it now I think. the rest of the code is also needed for when we're going to change this into add-ons anyway.\nanother thing to keep in mind is that some devices, like the cec adapter and the nyxboard, will need to hook up to events from xbmc. e.g. it'll need to know when a screensaver is started, whether the volume is being changed, ... and it'll also need to change the behaviour of some of these things if we want to be able to implement functionality like changing the volume on an amplifier via hdmi instead of on the media center itself. or, what the nyxboard is doing now, respond to keypresses instead of letting the keymap handle it. all of these things will need some sort of support on xbmc's side, and I the way I've implemented it now, support for the actions I just mentioned is pretty generic, so support for new (and similar) devices can be added without changing code and just adding configs in the peripherals.xml mapping file.\nthe peripherals.xml file as it is now (so without add-ons mapped) is still needed to have a central place where the devices can be configured. for the nyxboard, I configured the \"flip remote\" actions in peripherals.xml, and users can reconfigure those actions via the ui if they like. for the cec adapter, users will be able to configure the actions that it performs.\nskinners don't have to do much for this. only two skin files that are added are the manager and settings dialogs, which are both pretty simple. the manager dialog is just a list of all peripherals, a couple of labels and 3 buttons and 90% of the settings dialog is the same as the visualisation settings dialog.\n. it's a bit more than just a list of devices with their settings. e.g. CPeripheralHID also sets the correct keymap, CPeripheralNyxboard responds to certain keypresses, etc. now much of this could be moved to add-ons, but not at this time. main reasons:\n- for the CEC adapter, we'll need to communicate with the device via a C library. we can't do this without binary add-ons\n- we'll have to be able to respond to events from xbmc and change the behaviour of xbmc as a response to those events. until this CoreAPI is there, I think my current solution is quite clean.\nabout the settings dialogs: I am using existing ones (GUIDialogSettings) for it and I've added string settings to it. also got some aditions for that dialog in the pvr branch (other types of settings). putting them all in a general \"Settings.xml\" skin is all fine with me, but I'm not a skinner, so the only thing I did was making it display the correct info and leave it at that. maybe one of the skinners could clean it up and stick it in 1 XML?\nnow, my proposal is that we merge this PR now, so we can provide support for USB peripherals in a unified way (and pretty clean too imo). then later, when binary add-ons arrived in mainline, we refactor this code to turn it into add-ons. the unified settings dialog can be worked on in the meantime. I'll also extract the aditions from the pvr branch to the settings dialog then and add it.\n. this should resolve that issue: https://github.com/xbmc/xbmc/pull/573\n. nice work, especially for pvr :)\nthanks!\n. > > Ah yes, that's because the USB device detection means any xml file without the name=\"Motorola Nyxboard Hybrid\" parameter is being ignored. The way the USB stuff currently works means the entire set of mapping files needs duplicating for every device in peripherals.xml.\nnot really. it's mapped by vendor ID and product ID. the name in the entry is just a display name. you also don't have to duplicate anything. see the commit notes on the \"merge commit\" for an explanation on how it works.\nin short, for each device you want to map to something in peripherals/devices, you have to add an entry in peripherals.xml. you can define device-specific settings in the child nodes of the entry. e.g. for the nyxboard, this is used to define the \"flip remote actions\".\n\n\nJust delete the system\\peripherals.xml and system\\keymaps\\keyboard.nyxboard.xml and add the few key mappings needed (just F3 and F4 I think) to keyboard.xml. Instant fix and the Nyxboard still works as it should.\n\n\nno, do not remove it, cause it's not just used for the nyxboard, but also for the CEC adapter. and it'll also remove the ability to configure the nyxboard's special things, like the flip commands.\n. sorry, completely misunderstood. spiff just explained it :)\nI completely agree about removing the reference to keyboard.nyxboard.xml\n. that's why I said that I could drop that commit if needed.\nwhat's wrong with using shared_ptr? I could do it without, but what's the big deal?\n. right, in that case I'll just do it the non-lazy way in the next revision of libcec. doesn't change anything for this PR though, since dropping shared_ptr doesn't change libcec's interface.\nshould I drop the commit which adds the extra string and revert to the old behaviour? only thing this added was making the code that set xbmc's gui language based on the tv's setting optional\n. I replied per mail via my phone, but apparently it didn't come through :)\nyou've commented out a bit too much. now, you can no longer configure the \"flip side\" actions and, more important for me, disable the flip actions\n. @jhsrennie\nalright, hadn't noticed the noop's that you added, which does the same indeed. only difference is that you can no longer configure it via the gui now. not a problem for me, but I thought it's nice that users don't have to change xml files to enable or disable and configure those actions, which was why I added that option. why not leave that one (+ the two configured actions) intact and only remove the keymap stuff?\n. the flip actions aren't using the keymap, but the \"peripheral settings\". so, you only have to remove or comment out the two keymap settings from peripherals.xml (keymap and keymap_enabled) if you want to remove the current keymapping.\nthe flip actions suppress normal keypress handling for the \"flip keycodes\", f7 and ctrl+f7, but only when enabled. if the actions are not enabled, the keypress will be handled by the standard keymap.\nsee https://github.com/xbmc/xbmc/blob/master/xbmc/peripherals/devices/PeripheralNyxboard.cpp#L37\nedit: typo\n. @jhsrennie\nabout the flip actions: true about recompiling the .cpp. I agree this isn't the best solution possible, but since the nyxboard is the only remote that actually uses this, I think it's fine for now. after eden we need to come up with a better solution for this.\n. oh I completely agree that it's not the best place to handle keypresses, but this wasn't meant to be the final solution. we'll implement a better solution after eden, but for now, this seemed to be the best way to handle this, as we do want to be able to configure a couple of keypress related things in the ui.\n. looking good. even though it's not essentials, it does make the hid device mappings in peripherals.xml a lot more usable for this release, since we can add devices in there and have the keymaps automatically be enabled when the device is detected, without user interaction.\n. looking good again and thanks for cleaning up this code after me (again :))\n. rebased, cleaned up and changed so callback methods are used instead of polling.\n. d780a41 was requested by @pike2k \n. cherry-picked cb062e483b4aadcc43de73a9bc03b4f9b175de43 into master (trac 12570) and rebased\n. no, the reason why this PR hasn't been merged is that we're currently feature frozen, until Eden is out.\nthis compiles just fine, and has compiled just fine as long as it's been here (although it needs another rebase right now).\nas soon as Eden is out, we can merge this in.\nI'm running this myself on one machine with the xvba patches rebased onto the latest pvr master, and this on top of it, and it works fine here.\nare you sure you have the libcec headers installed on your system?\nedit:\nweird, github didn't show malard's reponse when I posted mine.\n. @siarkopol I see FernetMenta has just rebased the xvba patches onto the latest xbmc-pvr. If you take that branch, and merge this into it, it should all work just fine.\n. updated after your comments.\n. @jmarshallnz: moved the CEC specific code out of CApplication in 2cd1c50\n. @jmarshallnz: I renamed the method to OnAction, and moved the mute toggle from CApplication to CPeripherals too. It's likely that peripherals will handle more actions later.\nI could reduce the #ifdef's by defining an empty CPeripheralCecAdapter class. it's now referencing code that won't be included when libCEC isn't available.\n. @jmarshallnz: added the empty implementation. it's only got #ifdef parts where needed now.\n. replaced the deletes with udev_device_unref()\n. no, it doesn't according to their api (spiff asked the same)\nI've tested it to be sure, and it crashes out if you do (free: invalid ptr)\n. thanks, I'll review it and add this to the commit when ok\nit doesn't continue polling. it waits for an update in Process()\n. not that often, but there are a bunch of updates coming in in which we are not interested. we could perhaps filter them out, but except for reading device names and classes and checking whether they are known or not, it doesn't do anything.\n. updated the PR. caught some more leaks and I've replaced the \"continue\" statements in the loop by a bool, and unref at the end of the loop.\n. could you please rebase this patch. this doesn't apply anymore, because the file already changed.\nalso, please do not remove spaces and comments. just send a patch for the entries that you'd like to change.\nthanks\n. I know the translator tool removes the comments when you use it. just don't include those changes in a PR please.\ncomments such as https://github.com/xbmc/xbmc/blob/master/language/Dutch/strings.xml#L2354 should not be removed\n. what's wrong with the old 30001?\n. :)\n. yup, fine with me, thanks.\n. if this can be used both with and without PVR extensions, then it should go into mainline first. there are no pvr api calls to fetch an edl yet, so it would require some changes there first.\n. please don't map the EPG key to teletext. you should be adding a new XINPUT_ for it instead.\nwe're already using an XINPUT_IR_REMOTE_GUIDE in the pvr branch. see https://github.com/opdenkamp/xbmc/blob/master/xbmc/input/XBIRRemote.h#L92\nalso, don't just comment out the previous line in the PR, but just remove it.\n. that last option that cycles through the processes is pretty easy to implement.\n. I've dropped the progressbar change from this PR and will do that in a separate PR later.\n. @cptspiff updated the PR after your comments\n. yeah it's still there, since I'm using it in a fire-and-forget way. the way that I'm using it,observables are unregistered before they're deleted, so it's fine like this, unless you really want the ability to delete observers while they're being used. since nobody except me (in pvr) is using this, I think it's fine as it is now. I'll add a warning if needed.\nhow is text search broken? works fine here afaik.\n. well, it's broken enough. i haven;t used xbmc on nvidia and amd without @FernetMenta's patches since ages, as that's what makes it usable for pvr, so it's really a shame that this won't be in frodo (although completely understandable)\n. way to late to do something about this now. next chance will be frodo+1. maybe ati will have fixed some bugs with their driver at that time too :P\n. cheers\n. @amejia1 yes, libCEC should be backwards compatible down to v0.7\n. libCEC 1.6.1 has been replaced with 1.6.2, with a couple of fixes in it.\nthe deps that got uploaded to the mirrors should be replaced before merging this:\nwin32: http://packages.pulse-eight.net/windows/libcec-1.6.2.zip\ndarwin: http://packages.pulse-eight.net/pulse/sources/libcec/libcec-1.6.2.tar.gz\nubuntu is on this PPA: https://launchpad.net/~pulse-eight/+archive/libcec\n. thanks again :)\n. meh, forgot to merge it.\n. added some minor changes to pull in libCEC 1.7.0 instead of 1.6.3. adds PA detection for AMD gfx cards (and some other things)\nI'll rebase the patches in a moment and re-add it to the merge list, for next month I suppose.\n. cool thanks. rebased the patches.\nnew deps can be found here:\nwindows: http://packages.pulse-eight.net/windows/libcec-1.7.0.zip\nos-x: http://packages.pulse-eight.net/pulse/sources/libcec/libcec-1.7.0.tar.gz\nubuntu: https://launchpad.net/~pulse-eight/+archive/libcec\n. hmm indeed. I blame git rerere ;-)\n. @ipitcher fixed, thanks for the poke\n. updated to libCEC 1.7.1 (with some vendor fixes for panasonic indeed @sialivi)\nnew deps can be found here:\nwindows: http://packages.pulse-eight.net/windows/libcec-1.7.1.zip\nos-x: http://packages.pulse-eight.net/pulse/sources/libcec/libcec-1.7.1.tar.gz\nubuntu: https://launchpad.net/~pulse-eight/+archive/libcec (will be uploaded in a few moments)\n@Memphiz could you have a look at darwin deps. thanks\n. yup, this will be the last one :)\n. rebased & squashed\n. our mac buildserver was down, so I couldn't check that one. I've updated the zip and it should be fixed now. mac server is up now too, so I can verify it for you later today or tomorrow morning.\n. thanks\n. windows dep needs to be uploaded first.\n. @Memphiz @wsoltys: since I can't seem to find the credentials to put files on there anywhere, could one of you guys put http://packages.pulse-eight.net/windows/libcec-1.7.1.zip in build-deps/win32, or mail me the credentials so I can upload it myself. thanks\n. @wsoltys thanks, will do.\n. I got a cc about this one: http://trac.xbmc.org/ticket/13056\nSeems to be related to seeking in recordings from tvh.\n. also, you're not running Eden as you say\n. use the forums for help\n. will do asap. regarding your optimisations, you are optimising malard's copy of an msdn example, cause that is where the windows usb scan comes from for the most part :)\n. yes I'll look into it. merge window isn't open yet anyway ;-)\n. to answer your question: m_strLocation is only used to id devices indeed. as long as the value is unique, it'll be fine\n. which bug is it fixing exactly? not that I'm shocked to hear that there were bugs in an msdn example, but this looks like a cleanup round to me, not something that needs to be in before the next merge round.\n. what do you mean?\n. I'll have a look when I have time to test this on windows.\n. still haven't booted into windows. will probably be working on windows tomorrow.\n. no, you need to have patience. sometimes people have other things to do than reviewing PRs\n. I didn't promise anything. I said \"probably\"\n. thanks, but this is still a mix of cosmetics and multiple fixes/changes. please stick each fix in a separate commit.\nalso, your quote from msdn about parsing SetupDiGetDeviceInterfaceDetail is just a snippet, out of it's context. the result can be passed just fine, but the remark is about parsing the result\n. right, we are parsing the info that is returned, wasn't reading the original code properly. still, until someone can show me a case in which this doesn't work, there's no need to change it. add a comment if you like. please note that we don't care about the location or anything (as long as that value is unique, which it is) and only care about the vid and pid, which are present in every version of windows i've tested, from xp to win7 to embedded.\nso please just provide one or more commits with fixes for bugs you encounter yourself, add a commit with cosmetics if you like, and leave it at that. we're spending far too much time on this, which i explained, will not fix any issue that has been reported by users as far as i can tell.\n. oh please no. map it in cperipherals and put your logic in there.\n. no, you need to map it to a device in peripherals/devices (create a new joystick one I guess), and query the detected devices where you are now doing a device scan. device scanning will only be done in CPeripherals, and not anywhere else\n. no, you need to think about another solution for this, e.g. overriding the value via peripheral settings. you can not do any usb device scans in your code. and making the scanning methods public will open a door to introduce more hacks like this.\n. there's a number of different approaches possible. e.g. create a setting for each hid peripheral, define a default value for that setting for the generic devices, and use another value for the imon device.\nIf you think you need to do something on load, override InitialiseFeature() in the class, and do what you think that needs to be done. If something needs to be done when the device is removed, override OnDeviceRemoved().\nThat's not a hack, but how I designed it to work.\n. this looks a lot more like it. think it would be better to stick it in a separate imon class that inherits from cperipheralhid, and map it to that peripherals.xml. avoids the mapping by name in code\n. yeah need to re-review it but was pretty busy as you can see :)\n. right, you can find the comments in your mailbox or on my timeline thing here. not going to c+p all of them\n. I'm not around this week end, so I can't review right now.\nOp 7 sep. 2012 om 19:47 heeft Karlson2k notifications@github.com het volgende geschreven:\n\n@opdenkamp Sorry to remind you, but this is a real problem for many iMON users.\nI'd like to move forward with it.\n\u2014\nReply to this email directly or view it on GitHub.\n. @Karlson2k please update this PR asap if you like to see it included in frodo\n. i don't like code specific to imon in cperipherals. if you need to know how many of a certain type are still attached after device removal, pass it along as param in ondeviceremoved() ?\n. hm. i'll have another look at this after the week end. maybe fix it up myself if i find the time. sorry, but got no time to do it right now. but we got 10 more days next month to get it in shape ;-)\n. right, go for the static for now, as it's a global thing.\n. +1 indeed, thanks\n. thanks, assigned to the august milestone\n. I've added one more commit, that also does what the title says ;-)\noptionally pauses playback when switching to another source, and resumes playback when switching back to xbmc\n. well, 2 more instead of 1 :) mapped two more unmapped buttons\n. please do make this optional. settings are located in xbmc/settings/GUISettings.cpp\ndefaulting to 4:3 will be fine. thanks\n. yeah, this is indeed the way to do it, thanks.\n. @hacke78: please rebase\n. please use trac to report bugs or problems. we only use github's issues for pull requests. thanks\n. could you please stop posting useless comments like this like you have been doing all day. use the forums\n. +1\n. thanks for the quick addition :)\n. stop it\n. :)\n. This is my byte. There are many like it, but this one is mine.\n. we only use github's issues for pull requests currently. please create a ticket on trac for this (if there is none yet)\n. change itself looks fine, but could you split out the cosmetics into a separate commit\n. cheers! you got r/w access to the repos now\n. @cptspiff \"there are d in the big commit. it needs explaion. just a gut reaction with just a phone\"\nsorry, \"d\"? i'll be happy to add more explanation, just not sure what you'd like to see explained :)\n. @garbear those left overs from earlier. have been removed again in a later commit. i'll push a squashed commit\n. @bennykill you need to wait until both pvr and rpi support are in mainline and i can't help you with quirks in someone's pvr+rpi merge attempt\n. @Memphiz @cptspiff right thanks, i'll add an explanation for those\n. @bennykill  the information is useless for this PR, like memphiz already said. you need to wait. and every comment on this PR will send mails to 100+ people so please leave it at this for now, unless you have some valid comment about the code changes in this PR.\n. @wsoltys thanks, I'll check that out. probably my mistake when merging that in earlier when that category was added\n\n@DDDamian there's a demo add-on now that you can use that simulates a pvr backend. just plays back an internet stream, so it's not the same as playing back from hts or vdr, but that shouldn't matter for navsounds\n. @Montellese @RobertMe shouldn't be too hard to undo the json-rpc changes. i'll have a look at it and will update this PR\n. @Montellese json-rpc changes have been removed from the PR\n@elupus moved the window ids in Key.h around a bit so we don't change existing ids\neverything will be squashed up into 1 commit when done\n. @Montellese indeed. will fix it\n. @cptspiff was checking where the deletions were coming from, and noticed that this slipped in: following files were deleted in the pvr branch when i was cleaning things up, which should have been done in mainline:\nlib/libhts/Win32/include/stdint.h\nlib/libhts/Win32/libhts_2003.sln\nlib/libhts/Win32/libhts_2003.vcproj\nlib/libhts/Win32/libhts_2008.sln\nlib/libhts/Win32/libhts_2008.vcproj\nsince this is completely unrelated to this PR, i'll re-add the files here and put that in a separate PR (those not being used anymore)\n. @cptspiff re-added project files for libhts in 36825e5. saves a few d's ;-) scrolled through the patch quickly, and most other deletions are things like changed if statements, cases added to switches, etc that hook up the various pvr bits. i'll be happy to explain certain parts you'd like to see explained.\n@Montellese removed the refs to the files from the project files. just a quick find and replace, not sure whether the apple stuff needs more than just this.\n. @elupus the samitagconvertor stuff was merged in from pvr-testing2 earlier, but doesn't seem to be hooked up to anything. it's not even hooked up in the makefiles/project files. so i'll just remove it from the PR. \n. @pieh included the two fixes from irc, thanks\nlet me know when everybody finished this review, and i'll rebase & squash\n. @alanwww1 great, thanks for holding back your PR. i can just push in the english strings, or push them all. whichever you prefer. it's an easy change for me\nunless someone wants to review the latest changes separately, i'll squash&rebase now. the removals will make github show some more changes without complaining that the pr is too big ;-)\n. @elupus done\n. @jmarshallnz i'm pretty sure there will be plenty to review and fix up when you get back ;-) have a nice trip :)\n. issues are used for pull requests currently. wish we could limit it to that, but we can't\n. still +1 on this one :)\n. -> https://github.com/opdenkamp/xbmc/pull/623#issuecomment-7995240\n. ping @mikrohard @elupus @FernetMenta\nany updates on this? see the discussion on https://github.com/opdenkamp/xbmc/pull/623\n. sounds good to me\n. i've tested changing CApplication::IsPlayingVideo() to check g_renderManager.IsConfigured() and it worked fine.\nping @FernetMenta @cptspiff what are your ideas about this? would this be safe to change for frodo? other option would be\n--- a/xbmc/Application.cpp\n+++ b/xbmc/Application.cpp\n@@ -4333,6 +4333,8 @@ bool CApplication::IsPlayingVideo() const\n {\n   if (!m_pPlayer)\n     return false;\n+  if (PVR::CPVRManager::Get().IsPlayingTV())\n+    return true;\n   if (!m_pPlayer->IsPlaying())\n     return false;\n   if (m_pPlayer->HasVideo())\n. @FernetMenta but then this would need to be fixed for other players too. would be nice if we could fix the check that applies to all players\n@elupus does IsPlaying() return true when nothing is actually playing, e.g. when switching channels?\n. that looks like it could fix it indeed after @elupus PR. i'll test it as soons as i got time.\n. haven't had time to do anything with this yet.\n. ping @FernetMenta https://github.com/FernetMenta/xbmc/commit/3d95c5ca78ac35dac1f1887197efba171555f9fa the right solution for this? if so, could you push it to master and close this PR\n. this will be something for when i get back from ibc, after the week end\n. Not very well documented: https://github.com/xbmc/xbmc/blob/master/xbmc/addons/AddonCallbacksAddon.h#L83\nNone of the add-ons I know are using this atm\n. @kylhill i see you rebased this PR, but didn't address all comments on the previous set of commits. github doesn't show them anymore here now that you forced pushed a new set of commits (hashes are different now). so i hope you still have them in your inbox :)\n. Thanks, I'll have another look and press the green button if ok.\nOp 16 sep. 2012 om 18:55 heeft Kyle Hill notifications@github.com het volgende geschreven:\n\nI believe my latest push should take care of all of your previous review comments. Please let me know if there's any other changes you'd like me to make.\n\u2014\nReply to this email directly or view it on GitHub.\n. Mapping it to open the channels list would make more sense to me\n. Right sorry will look at this in detail when i got something better than a phone available\n\njenkins101 notifications@github.com wrote:\n\nThere is no mappings here only making button available fore use...\nI will propose a new button structure shortly (New default remote.xml)\nthe current is useless from my point of view \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1386#issuecomment-8420402\n. would be nice if the buttons are mapped to the correct windows indeed...\n. so you only got one button for pvr features on your remote, marked \"recorded tv\", and now it opens the pvr window, correct? sorry if i'm not getting it right, not familiar with all the key codes.\n. right, it's fine with me then. could someone else sign off too please (@vdrfan?)\n. git rebase -i HEAD~5\n. yes, you need to push that change to github, because it's still showing 5 commits here\n. git rebase -i HEAD~5. leave the first line the way it is, change the following 4 lines from 'pick' to 'f'. exit the editor and it'll squash them up. force push to your master branch.\n. sure, I just took the previously implement stuff\n. or you just send a PR to this branch\n. Yeah that's also what I said on the other PR that goes on top of this one.\n. They even need to be integrated into the player, that's not optional.\n\nThe namespace is called PVR in the code, so calling it PVR in json-rpc makes more sense to me. It's also not just TV, but also radio ;-)\n. closing this one\n. yup, +1\n@da-anda and you call it a bug cause you want it in now rather than the 1st day of the next month? ;-)\n. and never use \"master\" as a branch to create a PR from\n. @akva2 using the wrong github login? :)\n. included a fix for this issue: https://github.com/Pulse-Eight/libcec/issues/48 (deadlock when switching the TV to XBMC when the screensaver was active)\n. @BluTuTh could you update this PR please\n. DeleteTimer() doesn't delete the timer. it sends the command to the server, which in turn deletes the timer, which then updates the state in xbmc.\n. isn't this code doing exactly what the call to DeleteTimersOnChannel() is already doing? or supposed to be doing?\n. right, i'm closing this one. if CPVRTimers::DeleteTimersOnChannel() isn't doing what it should be doing (with the third parameter set to true), then that needs fixing\n. @vdrfan updated after our chat on irc\n. could someone sign off on this one\n. i can use it to enable/disable an add-on via the event server, easier for me when i'm testing on a system without a keyboard or remote connected. didn't see anything to do this with 1 command from the cmdline, so i added this one.\nwill reorder and squashing before pushing.\ni'll have a look at some ondisabled() to do this.\nthanks\n. right ok, then i'll remove the builtin and only fix the pvrmanager reset\n. thanks\n. i'll just drop this PR completely and just push the fix when i've written it\n. that's really something that should be decided in xbmc, not in the plugin imho.\ni'm not 100% familiar with how it's done now, but if it's not done already, then the plugin should provide some metadata and let xbmc decide what the best player is instead of trying to figure it out in the plugin. the best player for the file can be different for each platform the same plugin runs on, can be different when something changes in xbmc, etc. why would we want to have logic in plugin when xbmc already contains a selection mechanism?\n. I'd rather see this solved by adding some \"room to play in\" param to the play media command, than selecting the player type to use.\n. Because we already got a player selection mechanism in xbmc. If it doesn't select the correct player for a file that a plugin requests to be played, or if a feature is missing there (e.g. to select the correct player for a specific room to play in), then that's the thing that needs to be fixed imo. I can't really think of any good reason why we should allow plugins to do this. But again, I'm not 100% familiar with the code and how it's being used now, so ignore me if you like :)\n. @elupus done\n. looks fine to me.\n. I assigned it to the october milestone now, but it's fine with me to merge it now if you want it in\n. Since I can use this to fix one of the deps in the add-ons, any objections to merge this in before october?\n. Then we need to change the call a bit, or add another. Suggestion?\nEither way, the curl dep needs to go. So does the smbclient dep of the mptv and fortherecord add-on btw.\nOp 16 sep. 2012 om 17:55 heeft A600 notifications@github.com het volgende geschreven:\n\nSorry to bother you. The DVBViewer PVR I recently released, loads the channels data from a binary file (with zeroes everywhere) from http so with your PR, I couldn't do that anymore, plus I need to know the size of the html data to get the number of channels. Any thoughts?\n\u2014\nReply to this email directly or view it on GitHub.\n. It's not available to the add-on.\n\nOp 16 sep. 2012 om 20:14 heeft Joakim Plate notifications@github.com het volgende geschreven:\n\nIf our normal file system is available, why is curl or smb needed?\n\u2014\nReply to this email directly or view it on GitHub.\n. @elupus probably yes, but that's a bit more work.\n. @elupus updated to expose all relevant CFile methods instead\n. this PR updates the PVR add-ons to use these new methods, if someone likes to test it: https://github.com/opdenkamp/xbmc-pvr-addons/pull/35\nhaven't fully updated the fortherecord client.\n. Then it should be added to that PR too...\n\nwsnipex notifications@github.com wrote:\n\ndon't install pvr binaries to $prefix/share, needed for packaging\nshould go in with https://github.com/xbmc/xbmc/pull/1430\nYou can merge this Pull Request by running:\ngit pull https://github.com/wsnipex/xbmc configure\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1437\n-- Commit Summary --\n- configure: fix pvr-addons install dirs when building intree\n-- File Changes --\nM Makefile.in (4)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1437.patch\nhttps://github.com/xbmc/xbmc/pull/1437.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1437\n. yes, if there's an issue with something that will be added in a PR, then \nthe PR needs to be fixed, not create a PR that depends on the other one \nbeing merged first.\n\nOp 17-09-12 15:33, wsnipex schreef:\n\nare you gonna add it to your PR then?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/xbmc/xbmc/pull/1437#issuecomment-8613923.\n. @fetzerch moving it to CPVRRecording sounds good to me.\n\n@Red-F if we need a different time for pvr recordings, then that should be changed. moving it into SaveFileStateJob looks like the proper way to do it, not add some hook in DVDPlayer for it (that would need to be present in all players then)\n. yup, will be merged in next round\n. right, so that's what's causing the delay. thanks for checking. noticed it too, but didn't investigate it yet\n. right, so this data can be cached quite easily, but we do like to show icons, so we do need to call it once per recording when loading.\n. cache the value in the entries in pvrrecordings, and update it before showing the context menu or continue recording dialog, that should work just fine?\n. i might have time for this some evening this week, but no promises\n. right, so let's add both iLastPlayedPosition and iPlayCount to PVR_RECORDING for this and bump if @cptspiff approves.\n. thanks. looking good but haven't tested it yet. could you squash up the cosmetics commit.\n. could you stick the cosmetics in a separate commit please, so i can review it properly. thanks\n. correct, both numbers need to be updated for this\n. rest is fine, if you could stick the skin fix in a seperate PR, then it'll be merged in next round\n. no idea why github is still showing a green button, but the version number should be bumped to 1.4.0 for this now. could you update it please.\n. please split this up into separate commits so i can review it properly.\n. right, as discussed on irc, i'm not going to add this one now, so i'm closing the ticket. we'll do proper async updates after frodo\n. +1, fixes the issue on my test systems\nOp 21-09-12 22:04, Joakim Plate schreef:\n\nThis resolves some of the issues that have surfaced with the parsing \nof demux streams for PVR. This should preferable go in as before next \nRC since at least one of the fixes is for potential seg faults. The \nother avoid hammering codec re-open (causing AE faults on macmini).\nNote this could quite easily be extended to also parse for interlaced \nflags and similar from PVR backends.\n\nYou can merge this Pull Request by running:\ngit pull https://github.com/elupus/xbmc pvrfix\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1460\nCommit Summary\n- dvdplayer: allow demuxer signal to player that stream info has changed\n- pvr: fixed invalid usage of m_dllAvCodec before open\n- pvr: rework parsing of stream to not hammer re-open of codecs\nFile Changes\n- M xbmc/cores/dvdplayer/DVDDemuxers/DVDDemux.h (3)\n- M xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp (262)\n- M xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.h (44)\n- M xbmc/cores/dvdplayer/DVDPlayer.cpp (12)\n- M xbmc/cores/dvdplayer/DVDPlayer.h (2)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1460.patch\n- https://github.com/xbmc/xbmc/pull/1460.diff\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/xbmc/xbmc/pull/1460.\n\n\nLars Op den Kamp\nLead Developer\nPulse-Eight Limited\nT: +31 (0) 6 50736506\nPulse-Eight Limited is a company registered in England & Wales. Registered Number: 07382422. Registered Offices: 13 The Metro Centre, Peterborough, PE2 7UH, United Kingdom.\n. ditto, will test asap\nOp 23-09-12 09:25, Rainer Hochecker schreef:\n\nWill test this as soon as I have a chance. From what I can see so far \nis that either for tvheadend or vdr an immediate re-open will happen. \ntvheadend reports a height of 1088 on hd channels whereas vnsi reports \nthe cropped height 1080.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/xbmc/xbmc/pull/1464#issuecomment-8796097.\n. +1\n. I don't have time to look into this until later this week, sorry. Not at home now. Blame @malard ;)\n\nJoakim Plate notifications@github.com wrote:\n\nimho globals must go.. That goes for the addons as well. That will break\napi rather badly though. But it's really a necessary change.\nI didn't review this diff though.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1472#issuecomment-8831102\n. had a quick look at it and looking good. i'll need to go through this in more detail though as soon as i got time\n. @fetzerch go for it.\n\nwon't be around until sunday evening, so if someone else could verify this and merge in if ok before tagging the alpha, than that would be great.\n. needed an interface version bump. added that before pushing. pvr add-on repos has been updated with this too.\n. looking good. will verify and sign off when i get back home on thursday.\n. go for it\n. looking fine to me. @JezzX ?\n. i won't be around until sunday evening, so someone press the green button while i'm away if you want this in the next alpha\n. since i'm still here till tomorrow morning and can't think of a good reason why anyone wouldn't want this out, i'm merging\n. use PlayFile() when nothing is playing, and ACTION_CHANNEL_SWITCH when a pvr stream is playing. PlayFile() will work, but it's slow as it always stop and restarts the player, which isn't always needed\n. right that's nasty. got a patch?\n. right, thought you had some other patch and didn't read this one. sorry, was late :)\n. since you're changing existing keymappings: could someone else have a look at this and sign off or comment\n. thanks\n. if this can be different per channel for one add-on, then i prefer adding it to PVR_STREAM_PROPERTIES. thanks\n. I'll have to verify this for stream url.\n. nope, it's not read with those. go for the CanTimeshift() method instead then.\n. looking sane to me. i'll test it tomorrow, and merge it in with a little Trigger...() method that i wanted to add earlier but forgot, so we don't need another bump.\n. awesome!\n. yeah thread safety isn't a problem here.\n. yeah missed one thing there. that imon setting can be moved out of guisettings and into the imon class's settings. could you change the PR so it does that instead.\nwe don't need to bother people with this in guisettings.\n. yes please\n. the we better make the peripheral have an option to disable joystick support, and make it disable the guisetting if it's not doing that yet, so the values won't be conflicting.\n. i consider it a fix, but @cptspiff needs to give his ok as the merge window is already closed.\nand i'd like to review it properly another time first.\n. @alanwww1 does transifex handle changed strings?\n. yeah fine with me\n. yeah please do\n. ok with me so over to @davilla: removes the change in guisettings that was done for this, but i fine with me too if it needs to wait until .1\n. the settings changes between eden and now for this thing could be confusing for users. this make it a setting per device (if you're using an imon device on windows). so yeah, it fixes an issue\n. ah there's the last bugger. thanks\n. no need to make this optional in guisettings indeed. either replace it or leave it like it is now\n. looks fine to me\n. nice\n. sounds reasonable. will test and push if that fixes it, thanks\n. yup, fixes it indeed\n. @elupus that doesn't take guisettings like prefered subtitle language into account. we don't want just any stream. not saying that this hack is correct, but it works around the issue.\n. both when using an add-on with it's own demuxer, as the method is called before the stream info is available. we could call it after a stream change packet and when receiving the first packet in CDVDPlayer::ReadPacket(), similar to what this patch is proposing\n. hmm, that will add an extra requirement to add-ons, that they always send a stream change packet at the start, to work around a problem in XBMC. that's nasty\n. it's not new for PVR ;-) but yeah, i agree, putting a stream change in the wrapper and calling OpenDefaultStreams when receiving that one would fix it\n. that would block in the Open() call though. i'm not sure what kind of effect this has without testing it.\n. and the solution in the wrapper looks like a better one, as that will also work for normal stream changes.\n. there's a special demux packet to notify the player about changes in the streams from an add-on (dmxid_specialid or something like that, don't have the source checked out atm). you also need to reopen the correct stream after such a change. if you make sure that the wrapper always send that special packet as first packet when reading, then you don't need to hack around in dvdplayer, but just call OpenDefaultStreams when receiving such a packet. which is valid behaviour anyway.\n. hmm no we'd only want it to reset the player if needed, but the other stuff in that method, like selecting the correct subtitle is needed then\n. there is no demuxer with the stream info yet when OpenDefaultStreams is called now\n. and what about DMX_SPECIALID_STREAMCHANGE then? we need to re-check the streams again then. so just sending such a packet as first one in the wrapper and responding to that still seems like a better option to me\n. well that option looks like the least code changing in dvdplayer to me. dvdplayer is @elupus territory, not mine, so it should be whatever he prefers\n. yup, fixes the issue, thanks\n. no issues on github. please use the forums\n. in my opinion, do it like this for now, and don't fool around with the API anymore now, and refactor it later on, when and if we need something else.\n. this PR bites #1567. since this one actually fixes an issue and the other one adds a feature, i'd like to see this go in and look at the new feature (and probably a refactor) later on\n. @jmarshallnz updated. i've put the updated translation in a separate commit: 415d11c4dfbe7d4e1f3d22ce3f01a2385b69d5db\n. deps uploaded\n. not seeing any objections, so i'm pressing the button if i don't see any within the next hour or so :)\n. @amejia1 ping, sorry forgot, ppa needs it's copy too or it won't include cec support after this and i can't upload things there myself. could you grab it from packages.pulse-eight.net or pulse-eight's ppa please.\nall the other deps are on the mirrors\n. thanks, exactly on time ;-) since it's only a minor change, i will include this with the other API changes that need a version bump.\n. please use trac or the forums for bug reports.\n. @cptspiff ok to pull? this will only affect the codec id header that is used by pvr add-ons when they're built in tree, so it matches the one used by xbmc\n. added method looks fine. as for the play/stop announcements, these are hidden in CApplication. do we really want to notify OnStop + OnPlay, when we actually didn't stop and play, but just switched to another file?\n. let's just do OnStop+OnPlay now then so it matches the other code. but only sending OnPlay, or creating a new OnChannelSwitch seems cleaner to me.\n. i see you discussed it on irc :)\n. let's go for the easy option (in pvrmanager) for now and move it later on if/when required\n. the deadlock makes sense and needs fixing, but i don't see anything slowing down here\n. looks sane to me, but i currently got no hw to test this on.\n. not again...\nSascha Woo notifications@github.com wrote:\n\nAfter a month of using the channel group selection within channel osd the current behavior is not very consistent and user-friendly.\nCurrently when you select a new group it selects the same item position of the old within the new group (ex. group A item position 35 switch to group B item position 35). If the group does not contain as many items it selects the last position in the list. if you switch back to group A it selects the item position of group B. so it jumps from 35 group A to 15 group B and back to 15 group A.\nThis PR always selects the first item on new groups. It's consitent and user-friendly, because it starts from top and then you can go down. (same behavoir like in neutrino, enigma etc.)\nYou can merge this Pull Request by running:\ngit pull https://github.com/xhaggi/xbmc pvr\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/xbmc/xbmc/pull/1620\n-- Commit Summary --\n- [pvr] better usability while selecting channel groups within channel osd\n-- File Changes --\nM xbmc/pvr/dialogs/GUIDialogPVRChannelsOSD.cpp (10)\n-- Patch Links --\nhttps://github.com/xbmc/xbmc/pull/1620.patch\nhttps://github.com/xbmc/xbmc/pull/1620.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1620\n. Indeed, they're not in a grid and changing it to select the last position is fine. The currently proposed change by @xhaggi is not, which i already made clear before.\n\nOp 14 okt. 2012 om 23:53 heeft jmarshallnz notifications@github.com het volgende geschreven:\n\nAre the lists on screen in a grid layout, or do you only see one group at a time? If they're in a grid, then I'd say moving across takes you across seems logical, and the existing behaviour sounds perfect.\nIf they're not in a grid, then remembering the last position seems a much better behaviour than defaulting to something you very likely don't want (item 1) for consistency reasons alone. This seems like an easy enough change to make?\n\u2014\nReply to this email directly or view it on GitHub.\n. like i said, remembering the last selected position in a group is fine. i can also live with it when you start at position 1 when selecting a group that wasn't selected before, but in my opinion this \"feels jumpy\", so i said that i wouldn't change this, unless someone like @JezzX says it should be changed to select position 1. now you're trying to get the very same change that we discussed in length and that was rejected earlier back in, hence my \"not again...\" comment.\n. the instance is created when xbmc starts up and deleted when xbmc shuts down, so no need for a static\n. ok +1. please squash it up so it can be merged.\n@cptspiff could you give your ok on this change\n. thanks\n. -100 against this change, and definitely not an advanced setting.\n\ni've reduced the amount of debug logging in libCEC 2, but what's in this log is needed to see what's going on exactly when things don't work as expected, and i'm asking for this debug logging multiple times a week.\ni had a setting to enable/disable further debug logging for cec in peripheral settings, but i removed it so users don't need to enable debug logging in 2 places. i could put it back in there, but i'll have it enabled by default then.\ni'll have a look at suppressing some more logging in libCEC, but please do not change this in xbmc. it only \"spams\" when something is actually happening on the bus, and i do need to know what's actually happening when things aren't working. if every vendor had implemented the spec to the letter, then this wouldn't be needed perhaps, but that's not the case, and enabling debug logging should actually do debug logging, not put some half-useless info in the log.\n. being able to disable it is fine with me, but i don't like to have two different guisettings around for the same thing (debugging and CEC debugging).\nif you want to remove libCEC's logging from it, why not just \"| grep -v -i cec\"?\n. yeah, that's actually a bug that causes this which i just fixed in libCEC. and having this type of logging disabled wouldn't have shown the issue. so this is actually an example of this type of logging being a good thing\n. yeah, that's fixed in 2.0.1, but since there are people reporting another issue, i didn't do a PR for it yet. will do for 2.0.2.\nthere is no flooding from libCEC without this bug. i see i can make it log a bit less for the Pi in that log you pasted, which i'll remove in 2.0.2 too.\n. +1 from me, but will need to get an ok from @cptspiff first (and squashed before merging ofc)\n. awesome :P and now you need to fix this up and never do a rebase onto another branch anymore and force-pushing to your PR branch :)\nsomething like this:\ngit checkout -b tmp\ngit branch -D httpfile_post\ngit checkout -b httpfile_post master\ngit cherry-pick edbf643\ngit push -f origin httpfile_post\n. thanks, but can you please update the description to something more descriptive (git commit --amend). thanks\n. sorry, didn't see this one and already pushed a fix + minor cleanup of that method.\n. please report issues on the forum. we only use github for pull requests.\n. yes i know\n. no bug reports on github. report them on the forum instead. thanks\n. and i just noticed that this add-ons commit fails on linux too in a clean tree cause of a configure.ac change. will fix that and update this PR over the week end. sorry for the noise\n. updated, compiles again. you may slap trouts cause i didn't fully clean before testing and submitting the PR\n. error 6 = ADDON_STATUS_PERMANENT_FAILURE, so probably unresolved symbols.\nthanks for checking the android build. that can be fixed easiliy\n. great thanks\n. @Memphiz updated\n. ah, i knew i forgot something :)\n. updated so it's cast to (const time_t *)\n. don't think it can, but i never verified that\n. thanks. yes, everything that needs a bump will be pushed in 1 go\n. merged: 0feee86e61be876527b77d64be5a4648abce3304\n. thanks, will check this today\n. hmm this looks like an evil hack around the actual issue. did you happen to find out why it's setting the focus to tv channels? it didn't do that earlier so it looks like someone broke this.\n. yeah the plan was to split it up after frodo. your call on what hack to add for now. dummy item or disable that check.\n. @pieh said that he'll look into this one on irc\n. hack looks fine to me :) could you update this pr with it\n@pieh your call on this.\n. thanks for checking\n. +1 but will need a version bump indeed before we merge it. this change will need a bump too, so we should get them in at the same time so we don't need to bump twice: https://github.com/adamsutton/xbmc/compare/pvr-hts-timeshift\n. yeah i'll do them all in 1 push\n. merged: 0feee86e61be876527b77d64be5a4648abce3304\n. indeed, please pull out the thumb changes. the path change is fine.\n@jmarshallnz how do you mean \"node in the library\"? you can add it to the library. it's not auto-added\n. you can display it there if you add it as source. but the convenience link is only visible in the add source window when you actually got recordings\n. path changes have been merged. could you rebase and update this one\n. +1 @davilla \n. fix, but since it touches more than just /pvr, i didn't merge it myself\n. thanks, +1\n. \"I made this PR in accordance with @opdenkamp\"\n-> the only reason for me for having this intree stuff is developer convenience, not packaging\n. no it is not the same thing. they should only be built all at once in dev builds. for packaging we want them to be split up\n. and what makes you think that we don't do packaging anymore?\n. pvr add-ons are compiled without deps on external libs by default. when building the add-ons in tree (in a dev environment) then the option won't be passed to the add-on's configure and add-ons with deps won't be compiled. this applies to the myth add-on only atm.\n. Hey, that's what I said from the start about this flag. It was only meant for developer convenience.\nRegarding depends, why not make use of system libs? It's up to the packager to make sure the depends are in place. Statically linking stuff like mysqlclient will make add-ons huge, and probably violates packaging rules on a number of dists.\n. @wsnipex it was meant for in tree builds, which is meant for developers only\n. already answered that a number of times...\n. read up here and on irc. not going to write it again\n. @davilla \n\nEventually, binary addons are to be treated the same as existing xbmc addons, they will be hosted and fetched/installed on user demand. At this point, distros will have little say in what the said addon contains.\n...\nI don't care what is the 'linux' way, XBMC runs on several other platforms besides linux and you MUST start thinking about ALL the platforms we support with respect to any solutions regarding binary addions.\n\nSure, but we're not at that point yet, and distributions will provide packages containing these add-ons until then (as lots of them have done for the long time now), so we'll provide the means to dynamically linked deps in the add-on repos until we can provide an alternative. As I said before, this flag was only meant for developer convenience (for me at least), so add-on devs can build xbmc with add-ons in one go with dynamic deps. And yes, I'm totally aware of the problems with all of this.\n. build add-ons separately and stick them in a separate package\n. @fiveisalive we already decided that won't include this in xbmc's configure and remove it later. your options are: 1) package add-ons separately or 2) apply this patch before packaging or 3) wait until we got an add-on repository up for this stuff\n. good point. could you remove the bool from the pvr api version of the call, and let a negative offset do a backwards seek, and positive forward (and update the doxy). that way we don't have to change this on the pvr api later.\n. right, that would make things harder indeed. but then we don't need the boolean param, do we?\n. heh, cross comment :)\n. these are set by passing a struct to the add-on, and the add-on then sets the function pointers in that struct (calls get_addon() in xbmc_pvr_dll.h). the struct is memset to 0 before, so if you add the new methods to the end of the struct and check whether it's actually set before using it, then the old add-ons should be happy too without any change.\n. > > Certainly I cannot check that m_pStruct->SeekTime != NULL.\nas far as I can see now (but haven't checked thoroughly or tested anything), that's exactly what you need to do (except NULL != 0) and that will work as xbmc memsets the struct with pointers to 0, add-on then sets pointers in that struct, and adding a new entry to the end of the struct won't bother the add-on, as it won't touch that new part.\n. right, will have to dig into that as soon as i got time\n. merged: 0feee86e61be876527b77d64be5a4648abce3304\n. nope\n. this one needs a version bump too. goes in with #2250\n. they need a delete[] indeed. https://github.com/xbmc/xbmc/blob/master/xbmc/addons/AddonCallbacksAddon.cpp#L237\nwe should not return const char* then for all of these methods\n. do we really need that free() function? in what way can this lead to problems for char?\n. right thanks, will add that.\n. updated. add-on changes in https://github.com/opdenkamp/xbmc-pvr-addons/pull/82\n. merged: 0feee86e61be876527b77d64be5a4648abce3304\n. checked & ok. over to @cptspiff :)\n. thx\n. Github is awesome. I only got 5 mail for this PR:) \nda-anda notifications@github.com wrote:\n\nmentioned issue was related to a broken compile. PR is working like intended.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1756#issuecomment-10261217\n. closing this one in favour of #1655\n. not every CEC device supports channel up/down key presses, so it must be put back in remote.xml at least. for some input methods that always have dedicated channel up/down actions, it doesn't have to be put back. but I'd like to have this at least in keyboard and remote xmls\n. right, let's merge this one as-is, and change mappings afterwards if something comes out of the forum topic.\n. +1, assigned to @cptspiff \n. Code is pretty straight forward and doesn't influence XBMC's core indeed. it just tries to load libCEC, asks which devices are connected, and adds them to the list of known devices. because USB-CEC adapters will be detected by XBMC's scanning code too and users might have created a custom peripherals.xml file, it checks the bus type for CEC, and will only load the one registered on the virtual CEC bus (the ones that libCEC finds) and ignore USB ones that XBMC detected itself.\n\nThere's one thing that changes compared to the current behaviour: device IDs change, which will reset the configuration of the cec device back to defaults. That's why I assigned it to post-Frodo. But it's safe to pull now if we like to have this in.\nAnd if you have multiple adapters of the same type connected to the system (which is pretty useless for everyone except me ;-)), then the order in which libCEC returns the devices determines which config file will be used. See https://github.com/xbmc/xbmc/pull/1794/files#L6R94\nIf we choose to pull it in in Frodo+1, then I'll add a new device scanning method to libCEC that returns the actual device IDs, instead of using the virtual IDs defined in https://github.com/xbmc/xbmc/pull/1794/files#L6R34\nI'm using Pulse-Eight's VID for this now, with a USB PID that won't be used any time soon (0xF000 and up)\n. I've added a method to libCEC to detect adapters and all relevant info for those adapters: https://github.com/Pulse-Eight/libcec/commit/e7fd53c8e125db215629cdc557c45e2e875d02cc\nThis will be included in the 2.1.0 release, and I'll update this PR and include a libCEC minimum version bump once I tagged 2.1.0\n. PR updated:\n- bumped to libCEC 2.1.0 that fixes some issues that were reported and adds a new method that is used by this PR. it's in libCEC's master branch now and will be pushed when all platforms check out\n- should fix the issue that adapters running firmware v3+ are not detected by xbmc on osx\n- other adapter types, such as the TDA995x, will now automatically be supported by xbmc if libCEC supports them\n- no more platform specific scanning code for the cec adapter. usb device scanning is still present, since it's used for other devices too now (which was the idea behind the peripherals stuff in the first place), but the cec adapter is no longer mapped directly to the usb device, the rpi hack to make the adapter appear has been removed, and it now just gets the adapters directly from libCEC\n- multiple adapters of the same vendor id and product id are now supported, each having it's own config\n- fixes a possible crash on exit or when the cec adapter was unplugged before the tv was polled (and acked)\n- cleaned up CPeripheralXXX constructors\n. rebased against master and tested on linux and windows. libCEC 2.1.0 has been uploaded to the mirrors\n. but i see i messed up a project file while rebasing, meh. will fix it up in a moment\n. fixed\n. @wsnipex forgot to ping you about this, but it includes a libCEC bump. ubuntu builds can be found on https://launchpad.net/~pulse-eight/+archive/libcec/+packages\n. Uhhh, that was not caused by this commit. fixed\n. thanks\n. i can only confirm that it's not used by any client i know (i don't know guilib code well)\n. no more interface changes until after frodo, sorry.\n. please rebase\n. goes in with #2250\n. looks valid. i'll check it properly asap\n. please change this into an advanced setting instead, as you suggested in 730b9477fac17352d80e8e49b641c7f858366a78.\nthe reason for this update check is that on new setups the EPG data is not available yet right after installing, and it will take a long time before xbmc checks whether there's new data available by default.\nthe update code now does a write per table it updated or tried to update, and that should be improved after frodo so it sends fewer queries to the db, but that requires a bit of refactoring (and it's too late for that now).\n. the channel icon should be refreshed (either from the backend or from the fs) unless the user manually selects an icon. scanning for icons on the filesystem doesn't take that long at all.\n. patience please, i got more to do than reviewing PRs :)\n. hmm so smb spams the server with queries. awesome. it would have been nicer if it would get the dir listing and cache that.\nthe reason for the scan is that users might decide to delete a jpeg icon and replace it by a png (or some other ext).\n. new advancedsetting for this (and enabled by default) will be fine. it doesn't justify a new guisetting imo.\nit's too late to change this into a triple state now, with RC1 only days away. in frodo+1, we need to make this code a bit smarter, marking channels as dirty when things change and persist afterwards, and not change the icon twice, or at least detect that we changed it back to what it was and then decide that it doesn't need to be persisted.\n. if it's only a couple of lines changed, sure, put up the PR and i'll have a look at it.\nfor now, my primary concern is that it works for all users with minimal setup efforts, and if it's a bit slow (but works properly), then that's too bad, but that will have to do for frodo.\ni got a few hundred channels, not thousands as you have, but that's not what's causing the delay. it's the double change in icons and smb share that you're using for icons that's causing this as far as i can see.\n. merged #1901\n. merged. closing this one\n. merged all the add-on stuff, including the per-platform builds. commit 252fbbeaa1b2615ec21204756f5db8309b144da8 should be the one now. os-x should also get this one in depends\n. +1 @davilla \n. nice one! and yes, I'd install them all by default.\n@MartijnKaijser no need to disable anything, as they're disabled by default after installing\n. i'll have a look at it this evening, you might have hit a bug. all pvr add-ons should be disabled when they're installed (and they are at least on linux), and (most of them) need to be configured before they're being enabled\n. please do\n. Nice that you c+p'd my typo in the commit message ;)\nMemphiz notifications@github.com wrote:\n\n@DDDamian @davilla - any subjections on that?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1914#issuecomment-11217503\n. right, translations for pvr add-ons are a special case. just push them and poke me, and i'll do another bump for those.\n. @alanwww1 ping pong it's almost the 15th :)\n. report issues on the forum please, not on github\n. meh, @MartijnKaijser was quicker :)\n. @davilla @elupus this fixes the issue that the player switches to 25fps (because an invalid fps is provided) and then switches to the actual fps of the video\n. thanks. could you update this PR too with commit f0ccdcbd69093ec5ed3c1ccb399566c234ab3eb9\n. and you didn't even answer...\nyes yes, we doodoodoo daadaadaa\n. crashlog with debugging enabed please\n. and on the forum\n. please change IsDummy to something more descriptive (PreventSorting or something like that) and fix up the cosmetics\n. if you'd like to do more optimisations, then you can add new methods to control this, or change the method later on. right now it only prevents sorting, so I prefer a method called PreventSorting, and set it when you want to disable sorting and reset it afterwards.\n. you can update this PR by force-pushing to the PR's branch next time. no need to create a new one\n. I think it's time for christmas diner :)\n\nOn 12/24/2012 03:31 PM, Dimitris Kazakos wrote:\n\nAfter inspected further, concerning my last comment, I think we should \nremove the sorting call from the Renumber method (since it didn't even \nrespect the m_bUsingBackendChannelOrder setting), call it first in \nSortAndRenumber and then do the sorting. This will save us a sorting \ncall (and correct the setting ignoring behavior).\nWhat do you think?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/xbmc/xbmc/pull/1982#issuecomment-11661447.\n. i'll review this after frodo is out\n. soon. only critical fixes or minor changes until frodo is out.\n. first commit is fine, second will need some work. please stick the second commit in a separate PR and drop it here, then this can be merged in this merge window and the other one can be addressed next round\n. i'll review this for frodo+!\n. you can't add strings at this stage, so frodo+1 material, sorry\n. i ran into this problem too. will test whether this solves it tonight\n. just change the level to LOGDEBUG\n. It's bot useless or I wouldn't have put it there :) andere use LOGDEBUG. /me is afk again now :)\n\ndavilla notifications@github.comschreef:\n\nI'm just bitching about useless log spewing :)\n\u2014\nReply to this email directly or view it on GitHub. \n\ufffc \n. right, this didn't work well when i typed it on my phone with autocorrect :)\ncould you just change the level to LOGDEBUG, then i'll pull it\n. no issues on github. please use the forums or, if it's a reproducable issue with a crashlog, on trac. thanks\n. i've mapped it to shutdownmenu for the nyxboard a couple of days ago, but i don't mind changing it to xbmc.shutdown instead to match this default keymap.\n. right, that's wrong indeed :)\n\ni've just checked openelec, and i'm getting another keysym value here:\nKeyboard: scancode: 96, sym: 1008ff2f, unicode: 0000, modifier: 0\n. i'll test it and shout, so it can be included in frodo. cause i want this in for the nyxboard indeed. minor change and the power button doesn't work properly without.\n. indeed, already thought about that. and the one below can be changed to F4 too\n. https://dl.dropbox.com/u/59212404/nyxboard-keymap.patch\n. yeah i noticed, thanks\n. ```\n15:01:16 T:3046930944   DEBUG: Keyboard: scancode: 46, sym: 011d, unicode: 0000, modifier: 0\n15:01:16 T:3046930944   DEBUG: OnKey: f4 (f093) pressed, action is ContextMenu\n15:01:32 T:3046930944   DEBUG: Keyboard: scancode: 96, sym: 1008ff2f, unicode: 0000, modifier: 0\n15:01:32 T:3046930944   DEBUG: GetActionCode: Trying Hardy keycode for 0xf200\n15:01:32 T:3046930944   DEBUG: Previous line repeats 3 times.\n15:01:32 T:3046930944   DEBUG: OnKey: 0 (f200) pressed, action is\n```\nso f4 works, power doesn't. this is on openelec's current master\n. hmm sdl was dropped from OE and xbmc wasn't updated after this? or did i miss some patch?\n. works fine, and merge it into frodo 12.0 too please, or people with the nyxboard will have 2 buttons on the remote that don't work properly\n. nyxboard's custom keymap is another issue. @Memphiz mailed me about that\n. f4 only applies to nyxboard\n. yeah, forgot to ping in here about that revert, but just add it to this PR?\n. nope, please use the forums\n. no bugreports on github. use the forums or trac\n. agreed with @FernetMenta \nif it deadlocks, then that's what needs to be fixed.\n. yeah it does indeed. but we need to at least stop livetv playback before scanning for channels.\n. this PR also needs a rebase\n. can't we just add it to the xml to have a saner way than parsing the package name?\nI'll have a better look at this as soon as I got time (and thanks @cptspiff :))\n. not so neat, as @theuni and i discussed on irc yesterday. we'd like to see header-only packages for the apis, and have everything depend on that for multiple reasons:\n- pvr add-ons depend on 3 different apis, not one (and there will be a fourth once i've fully split up the epg and pvr ones). I've only versioned one of them (xbmc.pvr) that is being checked by the code because there was immediate need for that, but the other ones should be versioned too\n- we want add-ons to be backwards compatible where possible, so the same one can be used for different xbmc versions. that's why there are two version numbers in the pvr api: the actual api version that was being used to compile the add-on, and a minimum api version that is required to be compatible\n- we can use the distro's package manager to manage these things via the metadata of the packages, and don't need, nor want, a version number in the name of the package (and we'd need at least 3 of those version numbers in each package)\n. this is going to need a version bump too\n. this only affects channels that are hidden when imported. you want to disable/enable the epg in SetHidden() too\n. i like the old news, just keep it as it is ;-)\n. nice work, thanks\n. updated. osx project needed a little touch up too. includes a minor update to 2.1.1 that fixes some issues that affect people with a Pi or LG.\n. please use the forums. we use github for code only\n. by code i meant pull requests. we don't use github issues for anything else.\n. please use the forums: http://forum.xbmc.org/\nwe only use github for pull requests\n. closed #1377 \n. i saw your post on the forums about this, and maybe we should note here that this is not about pvr live streams but other live streams. pvr checks the add-on whether seek and pause are supported.\n. cause some add-on could do crap in those calls which slows things down. but this change is fine with me and if add-ons do crazy things, then the author can  to fix that in the add-on.\n. this check can be removed too in this PR: https://github.com/xbmc/xbmc/blob/master/xbmc/pvr/addons/PVRClients.cpp#L312\n. please use the forums: http://forum.xbmc.org/\nwe only use github for pull requests\n. i don't have mediaportal set up, and that's the only one that uses this i think, so i can't verify this right now. @margro could you do this please?\n. i didn't have time to review this one yet. one thing I'd like you to do is changing the ToggleCECDevice into something like CECActivateSource and CECStandby (or at least add them)\n. or rename the method and let it have an enum as param that specifies whether you want to toggle, put them in standby, or make xbmc the active source\n. :)\n. not implemented in libCEC atm\n. oh yes, pretty sure about that, but the make_pair changes should be fine for older versions too. just wondering what the first proposed change was for\n. ",
    "firnsy": "Saviq, nice work.\nI've pulled into my tree for further and will push into mainline once completed.\n. This fix was ommitted when I squashed prior to pushing #c4b0dd4dc9eedfe56988200aa5726f53bc9d58a8 it's committed in my local tree and will be rebased shortly. Thanks for poking ;)\n. grml ... mysql at times is a real Achilles heel. i need to start the server sooner rather than later.\nthe drop index for mysql is sufficiently different to cause breakage here. furthermore it doesn't have support for conditional dropping (ie IF EXISTS).\ni'm working on some solutions to get around this, in the meantime it's going to be more beneficial if we use DROP INDEX IF EXISTS tablename.indexname. i should be able rearrange that on the fly for mysql which expects the form of DROP INDEX indexname ON tablename. now I just have to sort out the conditional dropping.\n. jmarshall, yeah that change won't work ... i almost got the diff out last night and should have it finished this evening.\nmysql actually wants \"ALTER tablename DROP indexname\". don't know what i was thinking when i wrote the reply late last night when i replied. i'm experimenting with stored procedures for the mysql side with the diff to mimic the conditional dropping of the index.\nthe preferred form will be \"DROP INDEX tablename.indexname\", i'm pretty sure sqlite3 supports this explicit form and i definitely need the table name from mysql's perspective.\ni think the conditional drop is required of ixMovieBasePath which was added in DB version 46.\napologies for the screw around ;)\n. Doh! I misread that as table name, that doesn't help. So yes you're current change is probably the best without too much butchering on both sides.\nIn fact should we be considering implementing some of these common functions in the wrappers so that they are optimally handled by the DB. For example we exec() everything when we could explicitly define some functions such as create_table(), drop_index(), create_trigger() where there is sufficient difference between the SQL handling and allows us to define the higher level API requirements.\nIt will also ease up a lot of the if-else-ery that is starting to occur in the exec function and would provide opportunity to suitably clean up and comment the wrappers as we go. For the immediate situation we can just implement a specialised drop_index(tablename, indexname) to move this push along and build from there.\nI think this is the sanest approach to future proof us against the non-corformance to the SQL standard.\n. @jmarshallnz,\ni have a copy of this branch on my xbmc/fork that is 2 commits (rebased) ahead which should address the drop index issue on mysql and sqlite. Note, I've only tested the mysql side and this facilitates a clean upgrade on my end.\nIt is based off my last response to specialise some functions so we can establish our own API for DB interactions to multiple backends. If you agree, I'll start looking at cleaning all other functions along the same vein and generate a PR for comment.\n. Other DB layers, like our original, don't support it and rely on the user of the lib to ensure any SQL is portable across all intended backends. Given our reasonably benign usage of the SQL syntax, this method should prove to easily maintainable.\n. On 'nix, just INT_MAX seems to be missing form GUIWindowScreensaverDim.cpp. \nAfter adding \"climits\" it compiles and runs fine. No issue on exit seen here.\n. I'll rebase to a single commit once ready for merge.\n. \"... I still don't like the idea of having a backend which doesn't serve the content aswell (both thumbnails and the actual media) as it just leads to problems for the vast majority of users and does not live up to the quality of the experience we want (IMO)\"\nThis would infer that the sqlite/local file system does not live up to the quality of the experience we want (IYO) ;)\nI think what the mysql backend has shown is that centralised storage of media/metadata is quickly becoming more of a norm than a niche.\n. Yes it's possible that multiple views can be created in a DB update. CreateViews will drop the view before recreating it so it won't cause any significant issues.\nIf the multiple occurrences are an issue for pull, then I'll remove them in a separate commit and append it to this PR.\n. @CrystalP, yes they are.\n. @bossanova808,\nThe 6 indexes highlighted for the music table were added in a961454bda1ab0c67ed3d2e351ec44fc6406fb49.\nAs for the video table indexes, I'll put them on my TODO.\n. Small fix and rebase to remove server side include header that hurts osx/ios builds.\n@jmarshallnz, I've tested the upgrade on both sqlite and mysql instances from dharma to current head with no issues thus far. I will however await amet's findings on atv2/ios. There still exists a potential issue for Dharma db's that have unicode data in a non-unicode collated db which will cause the new db to also be created with non-unicode collation. XBMC now builds any new mysql tables with unicode collation explictly. Those scenarios will require exporting the old database to NFO and then reimporting on the new. This patch set however does assure that for those upgrading from dharma won't have their mysql db obliterated by upgrading the original tables.\n@bossanova808, The name override should still be possible but just not a mandatory field anymore in as.xml\n. @amet, yes it will, eventually ;)\nThis is rebased with recent head.\n. ",
    "Saviq": "Here's a bug I reported about the issue - http://trac.xbmc.org/ticket/11120 - please comment / close when applicable.\n. ",
    "Montellese": "I thought there was already a script doing a similar thing (using smart playlists). It's called \"Pseudo TV\" or something like that (didn't check the repo). AFAIK it needs some extra configuration to work but it basically does the same thing and is already supported in some skins.\n. As the general idea of this PR can be achieved using the PseudoTV addon (yes I'm aware that it's not exactly the same but from what I can tell the PseudoTV addon comes even closer to the real TV broadcast feeling than this implementation) and that doing this as an addon does not require any changes to XBMC itself, I'll close this PR.\n. Sorry for taking this long but I finally got around to taking a closer look at this. The changes look fine in general although cptspiff mentioned that he did something very similar a while back in the following two commits: https://github.com/xbmc/xbmc/commit/016cc15be3a0cf9af2b9477e898f1c939efbfca2 and https://github.com/xbmc/xbmc/commit/bb6b5838fa78e3d8ebedc5bfe0cf909bc22673f5\nThe only difference is that your logic is placed in CApplication(Messenger) whereas cptspiffs logic is located in CBuiltIn but jsonrpc's XBMC.Play does not use CBuiltIn. So it might make sense to move the existing code from cptspiff to where you made your changes.\nFurthermore I have a question concerning the changes in CApplication.PlayMedia() for plugins. Can you provide a specific case (i.e. URL or path) which does not start playback properly using jsonrpc's XBMC.Play? I tried a few youtube plugin URLs and they all played fine without your changes. Maybe this has been fixed in the meantime?\n. Finally found the time to look at this, sorry for the delay.\nHm I have to admit I'm not a fan of the whole CApplication::PlayMedia() at all because it almost completely bypasses CPlaylistPlayer and just starts playing files in a player without them appearing in a playlist. So adding that directory-handling code into PlayMedia is a step in the right direction IMO.\nWhat I don't like in your changes is the usage of CDirectory::GetRecursiveListing() because it grabs any files in the given directory whether they are audio or video items. Then you add that list to a playlist which may result in a mixed playlist. But what you do is tell CPlayListPlayer that it is either a video (PLAYLIST_VIDEO) or a audio (PLAYLIST_AUDIO) playlist. AFAIK mixed playlists are not really supported by XBMC so not sure what might happen when there actually is a mixed playlist.\nAll in all I'd vote for reducing the changes to just the expansion of plugins (not folders) in PlayMedia and the changes in CApplicationMessenger. These should be enough to achieve your goal with this PR right?\nI agree that there is dire need for a cleanup/refactoring of CApplication::PlayMedia and it's use in CBuiltIn but I think those need further discussions as I don't have as much insight in all the use cases as elupus and others.\n. OK I have committed this but I had to fixup your patch a bit more. Please make sure you set your IDE to insert 2 spaces instead of a tab. That's the common convention in XBMC so please stick to it. Github seems to automatically do that in their Diff views but when I merged it and looked at the code the indentation was all messed up.\n. Hm odd: I just setup my Ubuntu 10.4 VM and I could compile without any problem.\nBut I noticed a bug in the exact lines that appear in your error log and pushed another commit (https://github.com/Montellese/xbmc/commit/27a6d982c25494605864fcc4ec9e0b710d4e489b). Can you see if that solves your build problem?\nThanks for the feedback.\n. Ok this last commit fixed the \"long int\" conversion problem for me on Ubuntu 10.10 x64. Please verify and let me know if it worked for you as well TheUni. \nThanks for your help.\n. Thanks to amet for some cleanup work to get rid of some warnings and to sync the xcode project\n. Yeah it's in an internal forum because it's not yet ready for everyone to see/read.\n. I'll close this in favor of #822. Thanks again for the work which I was able to re-use and easily integrate in the new webserver architecture.\n. I'm compiling on linux now and will push a few more fixes asap.\n@jmarshall: yeah I missed the guilib/ because visual studio doesn't complain about it :-(\n. I replaced the old code to fetch a movie set id with the new GetSetInfo() in CGUIWindowVideoBase.\nI'll push to master as soon as I get an OK on that commit.\n. Probably a simpler approach with the new Playlist.Add method would be to add a \"media\" property next to the \"directory\" property in the union type definition of Playlist.Item because the \"media\" parameter is already used for Files.GetDirectory and works perfectly fine there. The whole file list loading would then happen in CFileOperations::FillFileItemList\n. The new Playlist.Add already provides a \"directory\" property in the \"item\" parameter. It is not recursive but that's on my TODO list. Furthermore and also on my TODO list is to use the type of the playlist to filter the files that are added to the playlist from the given directory.\n. OK I removed the Has*Info() checks with CFileItem::GetVideoContentType() and also removed the duplicate logic from CGUIDialogVideoInfo::GetContentType() and made AudioPlaylist.GetItems also return \"id\" (instead of \"songid\") and a \"type\" value. \nThanks a lot for the feedback.\n. This looks good to me overall. I'll try it out when I got more time at hand.\nPersonally I'd prefer to have a GetGenres call which does not differ between movie, tvshow and musicvideo. Maybe the \"content\" parameter could be made optional, add an entry \"all\" to the enum list and set it's default value to \"all\". This way it would be possible to get specific genres or simply all of them. But I can't come up with a use case where it is essential to know all video genres.\n. I wouldn't drop the content parameter as it makes sense to only show genres which are associated with movies in a movie section and not showing those which are only associated with musicvideos. Actually that's the way it works in XBMC's GUI so I think it also makes sense for the JSON-RPC API. I just thought of the \"all\" type as a completion of the feature.\nConcerning VS2010: Make sure you set it up to replace all tabs with 2 (!!!) spaces.\n. I'll have to take a closer look at CVideoDatabase::GetGenresNav but it shouldn't be that difficult to get it working.\nBut it's ok with me if you just fix up those things I pointed out and then I (or someone else) can still add the \"all\" functionality in the future if required.\n. You could just push a fix commit to your branch and it would automatically appear in the pull request ;-)\nSo you can either do that and reopen this pull request or you make a new commit already containing the fixes and create a new pull request.\n. You did it right. If you push to a branch with an open pull request github automatically appends the newly pushed commit to the pull request assuming that it's some kind of fix (which is mostly correct).\nThe fixes look good to me.\n. Take a look at the jsonrpc_media_update branch in my repository (https://github.com/Montellese/xbmc/tree/jsonrpc_media_update). I already wrote methods to set or delete all kinds of video items so no need to work on that. I have also started to work on this for audio items but haven't pushed that to my repo yet.\nWhat you should normally do is not to work on your master branch but to always create a new branch for every feature you are working on. This way you can work on multiple features simultaneously and can have multiple pull requests. I was busy with integrating one of my own pull requests but I'll take a look at this one when I get home today.\n. OK I took a quick look (although I'm not home yet ;-)) and it works well but I still noticed some small cosmetic stuff. The best way for me to find those is using Git Bash (if you're on windows). When you do a git diff there for your commits some of those indentation problems will appear as red blocks and so they are very easy to spot. I encourage you to install msysgit (http://code.google.com/p/msysgit/downloads/list) and use the Git Bash command line tool for these things. I know it's not as comfortable as using a GUI but it has some nice extra features.\n. Just an FYI: I just fixed the \"thumbnail\" leftover in AudioLibrary.GetGenres in this commit https://github.com/xbmc/xbmc/commit/96649b66f832f8f17d5d412661949eea3d24c8b5 so you can take a look there on what I meant.\n. Last time I tried AudioLibrary.GetGenres I didn't get any thumbnails either so that's not a bug in your code.\nI'm currently at university so I'll take a look when I get back home.\n. Yeah it looks very similar to my changes and I also added that \"true\" for keeping the thumbs if you look carefully at my VideoDatabase.cpp at https://github.com/Montellese/xbmc/blob/jsonrpc_media_update/xbmc/video/VideoDatabase.cpp#L1721\nIn the last 2 weeks I worked on fixing some nasty bugs that were known for quite a while now. There are lots of things that are still missing in JSON-RPC so feel free to work on whatever you really need. If you are unsure whether your idea(s) would be included into XBMC just create a feature request on trac and cc topfs2 and me and we can discuss it there.\n. I rebased your work on the latest master because of several changes in the jsonrpc area. Thanks again for coding this up and turning all my suggestions into action :-) I committed your work in cfd17225d55e52da049b21e44804e8aff19dba1e\n. OK I moved the video info loading logic to CVideoDatabase::LoadVideoInfo and also updated CGUIInfoManager::SetCurrentMovie to use that. I also fixed the \"success\" bug.\nI'm not yet sure how to solve the \"directory\" problem.\n. I'm not in favor of the \"directory\" parameter either. I just added it because I noticed that passing a directory to the \"file\" path wouldn't work. It's ok with me to drop it again and state in the description of the \"file\" parameter that it only works for files and not for whole directories. I can already hear the voices complaining about the missing \"directory\" functionality but I prefer to provide methods which work and not some hacked-together stuff which may or may not work.\n. Change of plans ;-) Because I remember several people asking for the \"add a whole directory to a playlist\" feature I gave it another shot and came up with a little refactoring of the FillFileItemList methods. I added a new method \"FillFileItem\" to CFileOperations, CAudioLibrary and CVideoLibrary and made extended use of the \"media\" parameter used by the json-rpc method Files.GetDirectory. This way it is possible to load metadata for any kind of file that is given to json-rpc as long as we know the expected media type. The way it is now, when someone calls *Playlist.Add/Insert CAudioLibrary.FillFileItemList or CVideoLibrary.FillFileItemList handles the \"file\" parameter and CFileOperations::FillFileItemList handles the \"directory\" parameter. Furthermore Files.GetDirectory benefits from this refactor and is now able to also return meta data (with the \"id\" and \"type\" field introduced in an earlier pull request) for audio and video files as long as the client provides the expected \"media\" type as a parameter.\nWhat do you think about this approach/solution? This way we get separation of concerns when processing \"file\" and \"directory\", we get additional support for \"directory\" and we do not look up any directory paths in the database. So if the client provides a path to a directory containing some songs of an album which is split across multiple directories, we only queue the songs in the actual directory but we queue them with full metadata.\n. Yeah I'm aware that all those lookups cause multiple database queries which will slow down the process.\nI'll take a look at GetSongsForPath and GetItemsForPath() but I'll have to look at how much extra information I can pass around in CFileItem. It shouldn't be a problem to add an extra parameter though but obviously it will break the abstraction a bit. Worst case I'll have to add a description to the \"directory\" parameter saying that it will cause additional processing time as we did for the \"cast\" and \"set\" fields for GetMovies (because they cause at least 2 or 3 extra database queries for every movie, which slows the response down a lot).\n. I took a look at the commits in your single_query_playcount branch and the GetItemsForPath looks very promising and I'm sure I could pass a CFileItemList to CFileOperations::FillFileItem to speed things up for the \"directory\" parameter. I couldn't find the getsongsforpath method though. Is it in another branch of yours or am I just blind?\nShould I merge these commits into master and update CFileOperations as soon as you merge your single_query_playcount or should I wait for you to merge and then adjust my code before merging into master (which would require a rebase)?\n. Ah GetSongsByPath yeah that one obviously exists. OK I'll get the changes in and when your stuff is ready I'll take a shot at using CVideoDatabase::GetItemsForPath and CMusicDatabase::GetSongsByPath to speed things up.\nThanks for all your input.\n. @althekiller: Yeah you're right. It would make sense for audiobooks and other special audio things but that would first require support in XBMC. Changing it to ListItem.VideoPlaybackStarted sounds fine to me.\n@ronie: Could certainly be done but the problem is that watched and partly watched do not exclude each other. I can watch (and stop/resume in between) an already watched movie. So theoretically you might need to display the \"watched\" and \"partly watched\" indicators simultanously (I admit though that it might look a bit odd).\n. I rebased onto latest master to be able to use Dataset::dropIndex and updated the videodatabase to use (idFile, type) as a UNIQUE INDEX for the bookmark table.\n. Closed as the intention is better covered by https://github.com/xbmc/xbmc/pull/351\n. OK I tried my luck again. I made it check for the validity of idShow if the additional filter (like genre, director or actor) is defined at tvshow level and made the idShow optional if the additional filter is \"year\" (defined at episode level) or if there is no additional filter. I tested it in XBMC GUI and the different categories still behave as expected.\n. In the process of rebasing all my jsonrpc related work onto latest master (because of the replacement of jsoncpp with yajl) I also rebased this work and cleaned it up a bit although I later noticed that there wouldn't have been any need for a rebase.\nCould someone please check the changed logic in CVideoDatabase::GetEpisodesNav()? I checked all the nodes in XBMCs tvshow library like Genre, Year, Director etc and they all still work fine.\n. AddMethod() does a check for \"method == NULL\" at the very beginning so it will always fail if someone tries to use AddMethod() to add a builtin method. And the private addMethod() only checks against builtin methods if \"method != NULL\" so there shouldn't be any problem with that.\nI agree that further work will be needed if we decide to allow addons to expose their own jsonrpc methods.\n. I got the musicdb://3/ part from CRecentlyAddedJob::UpdateMusic() but you're right. I'll alter the 3 to a 6. I can never remember what the numbers stand for :-/\nFillAlbumItem() is just an extraction from CAudioLibrary::GetAlbums() and I didn't alter that logic but you are right. I'll remove the call to CMusicDatabase::SetPropertiesFromAlbum(). Same goes for the CFileItem::SetLabel() call in there which is also already done in the constructor.\n. Ah I didn't know about the TextureCache. If those methods are deprecated I'll take a look at TextureCache and see what I can do with that. Thanks for the hint.\n. I'll take a look at that. Mute/UnMute is already handled in CApplication.\nWhat about the other dialogs that are members of CApplication like CGUIDialogVolumeBar, CGUIDialogSeekBar and CGUIDialogKaiToast?\n. OK on second thought I'm not sure I actually understood. Do you mean to throw away the whole CGUIDialogMuteBug and replace it with a boolean infolabel in CGUIInfoManager which can be used by skinners as a visibility condition for a mute icon?\nThere already is a \"player.muted\" infolabel (maybe not an ideal name) in CGUIInfoManager which returns the value of g_settings.m_bMute and is e.g. used by reFocus to toggle the visibility of its mute icon (reFocus does not seem to have a DialogMuteBug.xml). This is also why the mute icon is not broken in reFocus whereas it is broken in Confluence and all other skins I tested.\n. OK this latest commit removes CGUIDialogMuteBug completely (I couldn't update the xcode project though) and will therefore require skins to change the handling of the mute dialog by removing DialogMuteBug.xml and moving the  for that to somewhere else and use Player.Muted as a condition. If you are OK with this change jmarshallnz I'll ask Jezz_X to make the necessary changes to Confluence and davilla/amet to adjust the xcode project before I merge the pull request. If you don't agree with this move I'll rebase and remove the last commit.\n. The approach with overwriting UpdateVisibility() seems to me like the cleanest solution. IMO it is best if skinners don't have to change anything to get it working again (which is why I didn't really like the approach in my latest commit). I'll ask Jezz_X though if I can get a hold on him on IRC and let you know what he thinks. Otherwise I'd vote for using your fix :-)\n. jmarshall got a better solution. Check https://github.com/xbmc/xbmc/pull/230 for his pull request.\n. jhsrennie is right. The switch to a newer version of libmicrohttpd rendered XBMC unable to stop the webserver on close (we don't know why yet) so that hang had nothing to do with the changes of this commit. WiSo reverted back to the old version of libmicrohttpd so the hangs should be gone.\n. Yeah would certainly be nice if bookmarks could be integrated in a later stage.\nThe difference between time and totalTime is that time indicates the position where the resume point is located and totalTime is the runtime of the video in seconds. The retrieval of both values comes from the original patch where I needed to calculate the position of the resume point as a percentage value. This way a jsonrpc client can use either SeekTime or SeekPercentage until we support starting a file from the resumed point.\n. OK I tested it on win32. To get it to compile you need to apply the following changes: http://pastebin.com/7HnaNMim\nWith that it compiles and runs but the GUIDialogKaiToast does not show up. To get that fixed I had to make the following changes: http://pastebin.com/wrxaibmT\nWhat I didn't test was the seekbar and the playercontrols but the mutebug, volumebar and kaitoast work fine with the mentioned changes.\n. Ok I'll close this one as it seems that the current implementation is working correctly (I just didn't know that it is a standard that 2.0 < 2.0.0). But I still think that it should be mentioned somewhere (in the wiki probably?) as I ran into this issue with two different addons.\n. Like I wrote in the description I checked lots of different TVs from different manufacturers and Windows and Ubuntu do this the same way. If we handle this differently it is very unintuitive for users not extremely familiar with XBMC. I use XBMC for a couple of years now and I still find it very confusing. \nI actually started changing the implementation because it nearly blew my ears (and woke all my neighbours) last weekend when my GF didn't find the mute button and therefore moved from 50% volume to 0%. I thought the sound was muted and pressed the Mute button again and audio went up to 100% (I normally keep it around 50-60% because 100% is far too loud with my setup).\nI expect that some people think about this differently so here's the place to discuss this :-)\n. Ah I didn't know about the DRC (I saw some DRC-related variables in the code but most of the ones I saw were commented out with a TODO hint). Does XBMC even support that? I agree that dB looks much more professional but if you open the audio/subtitle settings while watching a movie and see \"0.0\" as the volume it is very confusing. Furthermore it probably is not obvious what the minimum value in dB can be (i.e. -60dB) for non-geeks or users new to XBMC. I have never seen a TV use dB as a unit for the sound level and my sound system also displays the value as a bar and as a percentage level.\nThat being said I'm fine with splitting this PR up so that this one only contains the mute/volume decoupling and then I can still create a new one for the percentage vs db stuff.\n. @topfs2: nah I was planning on rebasing the branch to remove the commit. No need to start 2 new pull requests ;-)\n. OK as requested I removed the changes to how the volume level is displayed. I will post another pull request for that. So am I right in understanding that the majority of people is ok with me merging this commit (without the display changes)?\nDonno raised the question on IRC if it would still make sense to auto-mute when volume reaches 0%. This has the advantage that you really don't hear anything even if your amp is at the highest volume level. I'm kindof undecided on the matter. It doesn't really matter logic-wise because the \"Volume Up\" and \"Volume Down\" actions still work the same way independent of whether XBMC is muted or not but on the other hand I'd really prefer it if the volume level would not affect the mute state and vice versa.\n. @jmarshallnz: yeah now you mention it you are right. Mute simply sets the hardware volume to 0% which is the same as turning volume down to 0% so no need to turn on mute as well in that case. \n@arnova: did you accidentally click the \"Comment & Close\" button instead of the \"Comment\" button?\n. Well AFAIK the skinner can choose how to implement the volumebar dialog and whether only to show a progress bar or also an actual value (be it percentage or decibel) but when it comes to the VolumeSlider in the AudioSubtitleSettings dialog from the VideoOSD the unit and value displayed there is hardcoded so it would only be partly up to the skinner what value/unit to choose.\n. The change to the jsonrpc call looks valid to me. I commented those bind() calls out because they caused javascript errors in all browsers I tried but I don't know enough about jQuery to fix it. I'll try your fix later but it looks fine.\nPS: Why is there an empty space in front of line 196 you altered?\n. If you now run \"git rebase -i HEAD~2\" which will open your texteditor with a list of your two commits, you can change the \"pick\" at the beginning of your second commit \"indentation fix\" to \"fix\" and then you can save and close your editor, it will merge the two commits into one so it will look nicer. Then you can run \"git push -f origin patch-1\" again to make the changes available online. If you are running into any trouble feel free to contact me on IRC.\n. I just tested the changes and they work perfectly fine so as soon as you squashed the two commits into one I'll merge it into master. Thanks for fixing this up.\n. Well probably the fastest way to get sorting and limitation would be to let the database system handle that by using an appropriate SQL query but SQL-query-generation is not my favourite work ;) Furthermore things like \"ignorearticles\" etc would not be easy to implement in an SQL-query.\nI agree that a method which only retrieves the album (or whatever) count would be nice but it would still not allow proper sorting.\nSo I guess for now the only option is to fetch them all and do the sorting/limiting manually even if it is pretty slow :(\n. I didn't really look at the code because my jQuery knowledge is very limited but I tested the functionality. Here are a few things I noticed:\n1. Very nice to provide both a banner and a poster view. Could you also provide an additional \"Landscape\" view with images in the 16:9 format?\n2. I like the list of the episodes. Would it be possible to provide an \"info\" button for every episode which shows a similar dialog like the movie info dialog when you click on it? This way it is still possible to immediately start playback of an episode.\n3. Unfortunately the episode level view looks completely distorted in latest Chrome (see http://imageshack.us/f/263/xbmcwebtv.jpg/). I don't know if this is a jQuery error or a problem in Chrome itself but I'll see if I can narrow it down with Firebug.\nEven without the three points I just mentioned I am glad that someone works on the webinterface and improves it.\n. 1. Yes it's those tv thumbs. What I did in the beginning was to use fanart images and add the title of the show to them so they were in 1280x720 px (i.e. 16:9) but now with fanart.tv etc it gets much easier :)\n2. Latest Chrome on Windows is version 12. Not sure about the versions on Ubuntu and OSX. I also tried shuttind chrome down and starting it again but it didn't solve the problem. \n. 1- & 2- Very nicely done.\n3- Now it works for me as well. No idea why or what the problem was but I guess we can forget about it :-)\nI played a bit more with it and here are three more things I noticed:\n1. The Season selector in the top right corner does not seem to work for the tv show \"24\". First I thought it is because it has a \"Specials\" season but it works fine for other tvshows I have with \"Specials\" seasons. The thing is that when choosing another season it actually issues the jsonrpc request and receives the correct response but the list of episodes simply doesn't change. It will probably be hard to reproduce on your side so I'll see if I can get some more details later on.\n2. Would it be possible to make the episode info popup smaller? It's no biggy and if it's too much hassle to do it, it doesn't really matter. I guess you took the same HTML element used for the movie info popup right?\n3. Could you move the tv show posters/banners/landscapes a bit further down so that the selection border does not overlap with the view selection links as seen in this picture: http://imageshack.us/f/7/webinterfacetvshowsview.jpg/\nI'm sorry for pointing out all those small things. I'm really grateful that you take the time to improve the webinterface.\n. Thanks for the visual fixes. The problem with 24 is gone as well. I guess it was Chrome acting weird again :-/ So IMO the only thing left is to squash all the commits together into a single one and I'll merge it into master. Thanks again for your effort.\n. topfs2 asked me to check if this compiles fine on win32 and it worked out no problem.\n. Looks like I have partly duplicated your work in #700 without knowing about it. But I have also added the functionality to set different languages for audio and subtitles and I added the option to disable it (by choosing \"original\") and to use the user interface language.\nI'll close this PR but feel free to leave any comments in my PR if you have any input/ideas.\n. Looks good to me. pike will love you for finally fully integrating it. I'll close my initial PR as your work covers the topic better.\n. @jmarshallnz: Yeah tell me about it. I could change it into an array BUT the \"set\" field is also returned as a comma-separated string of set names so that's why I did it like this for consistency. \nI know we once discussed this in a PM and I also started working on replacing all those comma-separated string properties into proper arrays and while it wasn't that bad a task for CVideoInfoTag it gets extremely ugly for the music-related objects. The involved changes touch sooo many code regions I'm unfamiliar with and have no way of testing. I am still willing to dig up that work and continue but that's gonna take a while (and I got some higher priority stuff as well).\nSo there are 2 options:\n1. Merge as-is and fix \"setid\" later\n2. Remove the \"setid\" field and just introduce the other fields\nWhat will it be?\n. Sure that is an option. Like I mentioned in the previous post I didn't do that to keep the result consistent with how the value of \"set\" looks like. If a movie is part of multiple sets, the \"set\" value will look like this: \"foo, bar\". That's why I made the \"setid\" return e.g. \"35, 57\" so that the \"setid\" value can be parsed exactly like the \"set\" value. If prefered I can return the \"setid\" as an array like [ 35, 57 ]. I can also look into how much work it would be to just change the \"set\" value to an array as well. My guess is that it's not that much work.\n. OK I took a stab at changing CVideoInfoTag::m_strSet from a CStdString into a std::vectorstd::string and CVideoInfoTag::m_strSetId from a CStdString into a std::vector so you can take a look at the necessary changes. The changes in CVideoDatabase are pretty straight-forward but I'm unsure about the changes in CVideoInfoTag especially about the ones in CVideoInfoTag::Archive(). I tested the changes in the XML serialization by manually refreshing movies from a set and that works as expected.\nWhat do you think? Are these changes ok or is there anything else I should test?\n. Ok in that case I'll manually merge it (auto-merge isn't possible) after I got some sleep. Thanks for the feedback.\n. I have to admit that I didn't think about whether to clear the array first or not. But if we want to support chaining I'll add a doxy comment about it. Thanks for the hint.\n. One thing I was wondering while I just looked through the changes I made:\nWould it make sense to present these changed members as arrays in other places as well (e.g. in python's videoinfotag and listitem)? Until now I just changed the code so that it would work exactly as before (with the exception of jsonrpc) but it might make sense to use the new types in other places as well. But changing it in python would probably break every addon out there right?\n. Finally came around to extend this work on CMusicInfoTag, CAlbum, CArtist and CSong.\nAny feedback and hints to errors are welcome.\n. Looking through this again I noticed that it will break backwards-compatibility for JSON-RPC. In Eden properties like \"genre\" etc are returned as a string containing multiple genres seperated by a slash. With these changes the \"genre\" property will be an array of strings where each string represents one genre. While this is certainly better than the situation in Eden I don't like breaking backwards-compatibility (again and so soon after Eden). I could add some logic to continue returning those properties as single strings containing multiple values.\n. OK rebased again and added a commit that (hopefully) makes sure we don't break backwards compatibility to JSON-RPC v4 (Eden). Should I squash the other commits into one for all the video related fields and one for all the music related fields or should I merge it the way it is now?\n. Can this be closed after my refactor of the \"Network\" settings category into a \"Services\" settings category with multiple sub-categories? Zeroconf and Airplay have their own sub-categories and there's no need anymore to scroll all the way down to somewhat hidden options.\n. One problem I see with this is that once committed EVERY xbmc user will be considered to be a new user because the default value of m_bAddonPromptOnBroken is false. That means if you merge this into xbmc's master and I don't open the addon section every addon reported as broken will silently be disabled although I'm not a new xbmc user. This is not a problem for me because I follow git commits and notice when it goes in so I can just browse to the addon section once and be done with it but for other nightly users not following git commits and also for people moving from Dharma to Eden (once it's released) this will be a problem because everyone will be considered a new user.\nMaybe it would be possible to make the initial value of m_bAddonPromptOnBroken depend on something like whether there are already existing sources (music or video) or something else that narrows down the real first time users. This might be used in CSettings::Initialize() to set the initial value.\n. @jimfcarroll: Thanks for your feedback.\nWhat do you mean by \"The type is switched on\"?\nI agree that a string is kind of a variant type as well BUT whereas there are more or less standard ways to represent integers and such as a string there is no standard way to represent an array as a string. \nTo be more concrete the problem I ran into is this: In CMusicDatabase there are two methods which store the information about an artist and an album into the propertymap of a CFileItem. But with my changes in PR 394 the genres are no longer stored in a string but in an array of strings. So now this array of strings can no longer simply be stored in the propertymap. Sure I could join all the strings in the genre array using some kind of delimiter but then I'd have to add some special handling to the jsonrpc logic just for music genres.\nI know this is a very specific example but IMO CVariant is a much more powerful \"variant replacement\" than CStdString as it provides a way to retrieve the original type (with the type()) method and a way to retrieve the original value. Furthermore it can easily hold arrays of any type and even represent objects with named sub-items (properties).\n. @jcarroll: Ah lol I missread \"switched on\".\nWell JSON is one standard way of serializing arrays into strings but it is not the only one (e.g. XML etc). What I mean to say is that if we don't do the serialization/deserialization in a central place (like it is done in CVariant) we end up having the same code in all the places where we use it PLUS every code that uses/needs it needs to know about how to serialize/deserialize it which IMO is a very bad approach. Sure we could provide a GetPropertyArray like we have GetPropertyBool etc BUT that still doesn't say anything about the type stored in the array.\nI agree that static typing is preferable but IMO there are situations where the effort to get it working with static typing and the complexity of the implementation do not match the \"disadvantage\" of using a dynamic type like CVariant.\nI'm not saying that CVariant is the best approach/solution but IMO it is a step in the right direction compared to storing everything in CStdString.\n. Thanks for reviewing I'll re-add the icompare usage.\n. @jmarshallnz: I re-added the icompare usage as you proposed.\nDo you guys agree that this shouldn't go into Eden (I don't know how to test all the code I touched) or is it ok to go in?\n. I got a question concerning alternative 2: How does someone get a hold of the path that should be passed in if the item (movie, episode, music video, whatever) is not part of the library? Would this go through a call to Files.GetSources and Files.GetDirectories and then compare all the available video files against all the files in the video library?\nI agree with topfs2 that we could probably use both ways and use union type parameters to provide an ID- and a file-based version of SearchForDetails in the same method implementation. If you are unsure on how to write the union type definition just let me know and I'll help you out.\nConcerning the \"type\" parameter: You won't be able to get around that, not even with union types. Only other way would be to provide multiple methods SearchForMovieDetails, SearchForEpisodeDetails etc as we do for GetFooDetails and later on for SetFooDetails. The advantage of seperate methods is that you can better specify the returned data (like Video.Details.Movie vs List.Item.Video or List.Item.All).\nPS: I'm guessing you manually add the JSON schema you write in methods.json etc to ServiceDescription.h. topfs2 and me wrote a small tool that auto-combines methods.json, types.json and notifications.json into ServiceDescription.h so that it doesn't have to be done manually. You can grab it here: https://github.com/topfs2/jsd_builder\nI got a compiled win32 version of it if you can't get it compiled yourself.\n. I didn't take a very close look, the only thing I saw is the \"global\" call to CreateViews() at the end of every db update independant of what changes. The way it is now there may be multiple calls to CreateViews() during a full database update. Do we want this? Shouldn't a single call to CreateViews() at the end of the whole update procedure be enought?\n. I know that it won't do any harm just thought it might safe some work for the DBMS but it's not a blocker at all.\n. Thanks for the feedback. IIRC correctly CDVDPlayer is the \"domain\" of elupus so I'd like to get feedback from him as well as I don't wanna step on his toes.\n. What system/OS are you building on? I didn't touch those files in more than a month and everything builds fine for me on win32 and ubuntu and nobody else complained about it not working.\n. I just updated the PR with an additional implementation of websocket version 13 (before only version 8 was supported and now both 8 and 13 are supported). Version 13 is the successor of version 8 (yeah the versioning is a bit odd) and has been standardized by the IETF in http://tools.ietf.org/html/rfc6455 so chances are good that all modern browsers will add support for websockets now that they are properly standardized.\n. This is not yet part of XBMC so it is not part of any nightly build and will not be until this has been merged once Eden has been released. So obviously if you connect to TCP and send the WebSocket handshake XBMC does not know what to do with it and will throw it away.\nFor a sample implementation I always used the demos available on http://www.websocket.org and there's also a JavaScript example on how to use websockets: http://websocket.org/echo.html\n. The URL you used (ws://[some-ip]:9090) was correct. Unfortunately the webserver we use does not allow us to get control over the underlying socket so we can't provide WebSockets on the webserver port but as we already provide a TCP server we can just use that one instead.\n. @jmarshallnz Thanks a lot for taking a look at the code. I have fixed all your suggestions including the endianness-assumptions. I have also rebased the whole code so it should be ready to go now (in case you don't spot anything else that needs fixing).\n. I won't touch XBMCHttp.cpp if not absolutely necessary as I plan to remove it ASAP.\nThanks for the heads up on the EndianSwap changes, Github will let me know if it can't automatically merge anymore ;-)\n. Updated to get rid of the conflict and to use the EndianSwap changes from #777 which has been merged.\n. Thanks to Memphiz we now also have updated OSX project files for this.\n. This is not a user support place. Place post it in the forum or create a bug report on http://trac.xbmc.org (and CC me).\n. Just an FYI I tested this yesterday for spiff and it fixes the problem for key inputs coming from the EventServer (the android remote in that particular case).\n. 1. make sure the nyxboard receiver is plugged in\n2. in XBMC go to Settings --> System --> Input devices --> Peripherals and open the settings of the nyxboard and there you need to enable the last option \"Enable Keymap\" (or whatever it's called). Make sure you save the settings by using the \"OK\" button to close the settings dialog. Once that option is enabled none of the remote control commands from the android remote will work.\n. Just (force) push to the branch you used for this pull request and the PR will automatically be updated with the new commits.\n. Can do when I get home this evening.\n. I made the same observations as wsoltys.\ntrac12023-1 has a very odd/unreadable (anime) font. \ntrac12023-2-alt and trac12023-2-alt2 look exactly the same with \"know\" and the colored text being italic. \nThe white text in trac12023-2 is identical to the alternative versions but the colored text uses a different font.\ntrac12023-3 uses a font with serifs (so not Arial, maybe Times or something like that). The brownish text uses a different font and in between there's yet another font for some white text.\n. See #890 for an updated version.\n. I updated the solution so that JSON-RPC will not be initialized before a profile has been loaded. This should minimize the impact of this change a lot.\n. Thanks for your effort. I already have a similar commit waiting for once Eden has been release (see https://github.com/Montellese/xbmc/commit/96fa2a867f70c89699fbfee3b4477433dfa10e10). It won't replace \"filetype\" (which I'd like to keep) but it will additionally add \"size\" and \"lastmodified\" as well (if requested through \"properties\").\n. Yeah backwards compatibility is the main reason to keep \"filetype\". I don't really have to do anything to manage the mimetypes because they are already (looked up and) provided by CFileItem::GetMimeType() (see https://github.com/xbmc/xbmc/blob/master/xbmc/FileItem.cpp#L1077) and in there is also this code:\nif( m_bIsFolder )\n  m_ref = \"x-directory/normal\";\nso you should get the correct mime type for directories as well.\n. Thanks for the heads-up. Back when I implemented it I ran a few tests on local directories and I always got the mime type I expected but I didn't test it with http sources (don't use any).\n. I think the extra slash at the end comes from https://github.com/Montellese/xbmc/blob/b2d26b3c224d2168aef6b83ba20c802e2d21ba63/xbmc/filesystem/UPnPDirectory.cpp#L387 where it is added at the end for every path. So maybe it should be removed there.\n. Closing this one for now. Can be re-opened once we have decided on how to handle this through JSON-RPC.\n. Closing this one for now. Can be re-opened once we have decided on how to handle this through JSON-RPC. Probably better to integrate this into SetMovieDetails anyway.\n. Damn I should have checked here first now I duplicated wsoltys' work. I already wrote all the necessary scripts etc and pushed the commit to my repo: https://github.com/Montellese/xbmc/commit/5046d71cda3c07cb26b13c79281b7920fc9a3b0a\nI also had to use the debug version of tinyxmlSTL because of the errors wsoltys mentioned (is the SlingboxLib a lib from us? If that's the case we might be able to get rid of those errors and would be able to use the release version of tinyxml). Furthermore I also get all those warnings concerning TEXT etc so it might be best to first find a solution for this (ideally by removing the USE_RENAMED_TIXMLNODE_ELEMENTS ?).\nI didn't have to remove the tinyxml sources from our repo (does osx still use them after this?), I just had to remove them from the Visual Studio project.\n. Hehe well at least we are pretty sure we did it right as our solutions are almost identical (and we encountered the same warnings).\nAfter removing the tinyxml folder from the VS project it always used the correct header file on my setup but that's because I put the tinyxml.h file directly into the BuildDependencies/include directory and not in an extra sub-directory so I can use #include  instead of #include \"tinyxml/tinyxml.h\".\n. I can confirm that it builds fine on win32 and XBMC runs as usual (as far as I can tell) but I didn't do any special xml-related tests. I won't give a sign off though because off spiffs concerns and because I think it's a very bad idea to change any library between two beta releases (during feature freeze).\n. I took another look at the TEXT related warnings on win32 and it turns out we use the win32-specific TEXT macro ourselfs in WinSystemWin32.cpp and other places so simply undef'ing it in XBMCTinyXML.h looks very dangerous to me. Can't we just get rid of these and replace their usages with the macros defined by tinyxml.h? I did the work in https://github.com/Montellese/xbmc/commit/71729edf1de26b4a22de83b00bc17fe156c3eb79 to see where we use those macros.\n. When I discussed the problem yesterday with vdrfan I also proposed a method similar to your CFileItem::GetLocalMetadataPath. I'm sure such a method could be used in a lot of other places as well. I'll give it a try with the dummy BDMV folder I used yesterday to test this issue and report back.\n. I ran the same test as yesterday (a moviefolder containing fanart.jpg, folder.jpg and a BDMV folder with an index.bdmv) and with these changes both fanart and poster work both when stacked and when not stacked. During the test I ran yesterday it only worked when not stacked.\n. Thanks for this. I wasn't sure if it was left there intentionally (but that would have rendered all the other work rather useless).\n. If that's the reason why that join with setlinkmovies has been added to the movieview, I agree that it makes no sense. Sorting my a many-to-one relationship never makes any sense IMO or will end up in confusion.\n. @HitcherUK: that's probably a different case where you have multiple identical sets with just different labels?\nI don't like the fact that people have to manually mess with their NFOs and video library items to get it fixed up, but that's another discussion.\n. I just gave it a try and reverting 23bfcba (and bumping the videodb version to 59 to re-create the views) solves the problem as well. Obviously we will loose the possibility to sort by sets in smartplaylists which IMO shouldn't be available at all but probably would need some love (e.g. it shouldn't appear as a sort field in the smartplaylist editor).\n. I just noticed that it actually is possible to sort by genre. What will happen is that movies will be sorted by the stringified genre like \"Action / Drama / Thriller\" which IMO still does not make any sense but it currently is possible. You can also sort by writer or director which may be many-to-one mappings as well (also stringified similar to the genre example).\n. OK I uploaded my work to https://github.com/Montellese/xbmc/tree/set_smartplaylist_cleanup\nIt contains the revert of 23bfcba to fix the bug with duplicate movies in the title view, removes the possibility to sort movie smartplaylists by sets for good (also from the GUI) and cleans up some other smartplaylist fields which appeared in the smartplaylist editor as sorting options which actually can't be used for sorting. I'll wait for feedback on http://trac.xbmc.org/ticket/12251 before posting a PR.\n. Closing in favor of PR #665 which uses a better approach to fix the problem.\n. Just from reading the diff on github it looks like it will do what you/we intend it to do. I won't have time to test it till later this afternoon/evening (CET, i.e. in ~9 hours).\n. OK I ran a quick test. The new GUI option works as expected. Furthermore prioritizing sets defined in local NFOs works as well in my test case where with the latest TMDB scraper I ended up with two sets (the one defined in the NFOs and the other pulled from TMDB) and with this patch and after refreshing the items the set from TMDB vanished.\nI didn't test the music/artist related stuff because I don't have any NFOs there.\n. Hm maybe I'm confused but doesn't this do exactly the opposite? The last parameter of GetMoviesByWhere() (which you remove in this PR) is called \"fetchSets\" and defaults to false. So if you remove it we won't get any sets at all. I think the main problem lies in https://github.com/xbmc/xbmc/blob/master/xbmc/video/VideoDatabase.cpp#L4716. If we have a smartplaylist with a where clause we simply won't fetch any sets at all (independent of the value of the fetchSets parameter). You'll want to check this commit which removed the support for sets in smartplaylists: https://github.com/xbmc/xbmc/commit/d16a63c4\n. I can confirm that (with the second commit fixing the SQL query) this works as expected for smartplaylists and brings sets back to them.\n. If only one movie in a smartplaylist matches the conditions that movie will be displayed itself and not in a set.\n. Maybe use \"Use each movie's folder name for lookups\"? I have to agree that your proposal is not really an improvement but it's rather difficult to come up with something that reflects both effects this setting has.\n. OK I have refactored the changes into 3 commits instead of one. The first commit contains the logical changes to CGUISettings etc (as requested by jm). The second commit contains the actual changes in the settings structure i.e. replacing \"Network\" with \"Services\" and adding custom setting categories for the different services. The third commit contains the changes to confluence and is missing the image \"services.jpg\" (we could just use and rename \"network.jpg\").\n@vdrfan: Unfortunately the strings like \"AirPlay\", \"UPnP\" etc have to be in the strings.xml because CGUISettings is only built to take and work with a labelID and not an actual label. Sure this could be changed and I can do it if really necessary.\n. OK another update containing the IsAdvanced() check when getting a list of settings for a certain category. Thanks jmarshallnz for pointing this out. iOrder now starts at 0 because it is \"just\" used for ordering the settings within a category and not for distinguishing between GUI and advanced settings.\n. You sure you wanna put this in Eden? It won't break current skins but not sure if they will pick up on the \"Network\" to \"Services\" move. Furthermore this commit is still missing an image for confluence (@Jezz_X). I actually thought this as a post-Eden thing but just committed it as a PR to not forget about it.\n. I had a quick chat with Jezz_X concerning the background image used for the new \"Services\" group and we agreed on using the same image that was used for \"Network\" for now.\n. I just gave these commits a spin and they fix the issue where fanart in the form of \"-fanart.jpg\" isn't displayed in the files node both for the directory containing the movie and the movie file itself. I also did a quick check for any side effects on tvshows but didn't see any. Fanart is still displayed for the tvshow folder and the video files (but not for the seasons but that is also the case without the commits from this PR).\n. Good thing you ask about whether dateAdded is exported/imported to/from NFOs. I actually wanted to discuss this topic because I wasn't 100% sure if it should but I forgot to mention it. In the current code it is not exported/imported but IMO it would make sense to do so.\nConcerning the second commit: Both approaches make sense depending on the use case. I can always make it optional (although this adds another GUI Setting). That's why I wanted to discuss this.\n. If we added both dates we could let the user decide which one to use for recently added and sorting by date added. Or we could leave the sorting by date added as it is right now and provide a new sorting method \"by creation date\" or something like that.\nAnother point is what we should do about files/paths that already are in the database and therefore don't have that/those date(s) set. Going through all the files/folders and CFile::Stat()ing them might take quite a while depending on the size of the user's library.\n. I updated and rebased the commits. I removed the XBDateTime include from VideoDatabase.h and I added the code for CVideoInfoTag to serialize/deserialize it's m_dateAdded member to XML and CArchive.\nSo what's left to decide is what datetime to use when adding a new path/file to the database.\n. The reason I didn't put the dateAdded field into the movie/episode/show/musicvideo table is because it is easier to have it in one table than in four different ones and everytime we refresh a movie the old entry in one of those tables gets removed and a new entry added (which is really stupid IMO but legacy code nobody has updated so far). So that would require more extra logic to make sure the dateAdded value isn't changed when an entry is removed and a new one updated. This obviously isn't a big deal if we use the modification time of the media file but I didn't have that in mind at first and added that logic later on as an optional extension which needs to be discussed (which we are doing).\nI don't agree with using modification time as dateAdded for folders because modification time of a folder changes everytime something in the folder itself changes (which is why I used creation time for this case). So in that case it's not really dateAdded anymore if the entry in the path table gets updated. I agree that it makes sense to store the modification time in the database for some other purpose (like detecting whether to rescan or not) but it shouldn't be used for dateAdded. If there is a new episode for The Simpsons I don't want adding it to the database (which involves rescanning the tvshow) change the dateAdded value for the whole tv show because (theoretically) I added that tv show several years ago to my library.\n. I agree that recently added tvshows doesn't make any sense but that's not what I want to achieve. I just want a consistent way to determine when an item (video or tvshow) has been added to the database. I don't want to update that date when a new episode has been added because the field is called \"dateAdded\" and not \"dateUpdated\" or something like that. I'm fine with adding another field for something like that but I don't want to introcude a \"dateAdded\" field and then immediately abuse it for something else (e.g. dateUpdated).\nSo should I add another field \"dateModified\" or something like that for paths which is always updated to the modification time of the path when a path is rescanned?\n. Always available as a file property may not be true in all cases and even if it would doing a stat over a network takes quite a bit more time than looking into a database. But if there is no apparent use case that would/could make use of the modification time of video items there's no need to throw it into the database besides dateAdded.\n. OK I've added a new commit which introduces a GUI setting in Settings -> Video -> Library which let's you choose whether or not to use the file's creation/modification time for dateAdded (disabled by default to more or less keep the current behaviour).\nThere are three things I'd like to discuss:\n1. Do you agree to make this optional and that it is disabled by default? I don't really care about the default value. Question is whether to try to stay as close to the current behaviour as possible (and taking the risk that a lot of users will overlook this new feature) or if we should force this feature on everyone by default.\n2. Can anyone come up with a better string/text for the setting?\n3. Should this setting also apply to sorting implementations like SSortItems and the GetRecentlyAddedFoo() calls to keep the current behaviour available as well?\n. Well I can just keep the last commit around as a patch in case someone starts whining ;-) Most people probably won't even notice.\n. @live4ever: Your problem would require quite some extra code because it has to recognize that an existing file is missing but that a new and similar file is present. Currently detecting missing files and new files is completely seperated in XBMC so it's not an easy implementation. I suggest you create a new feature request ticket on Trac.\n. So is there anything that needs to be done for this to be ready to merge? I just rebased the whole PR.\n. OK I squashed and rebased the PR once again and it should be ready now. Can this goe into the current merge window or should I wait for the next one (May)?\n. The problem with that is that reading the modification date takes time, especially if the media is not on a local harddisc so that's why we don't do that during scans as it would slow it down a lot.\n. @Monkeysweat: There was a report a while back about files with an \"invalid\" date far in the future because of which I added some validation checks which ignores dates that are newer than the date of scanning. I'm not sure if you experience a similar problem. It would be very helpful if you could check the mtime and ctime of those files that stay at the top of the recently added videos list and see if there's anything odd there.\n. Amen to that. I have been wondering about the same thing but I got no clue about our input system at all so I tried to touch/change as little as possible.\nThe only guess I can make to why it hasn't been done this way is because there seems to be extra logic done for keyboard input (before calling CApplication::OnKey) that isn't/can't be done for keys coming from the Event/HTTP clients.\n. Ideally there shouldn't be a need to set any flag at all for \"KB\" but we don't wanna break anything for all the existing clients for Eden so we'll have to go with the least-impact-best-fix solution and do a proper fix after Eden has been released.\n. With keymap you mean things like \"I\" opening the video info dialog and \"C\" opening the context menu?\n. @jhsrennie: Are these keymap functions still working with this PR? Should depend on the flag being set right?\n(Note to self: Get a working EventClient for testing purposes)\n. I don't like encouraging the use of 0xF1xx either but it seems like the only way to achieve the needed functionality and keeping the changes low-impact. And we can't go and breack EventClients at this point.\n. @elupus: agreed and removed. I had it in there at first because I thought external subtitles should be used independent of whether subtitles are enabled or not but I agree that they should not be force enabled.\n. Thanks for the review and the hints elupus.\n. I don't have any stackable video files so I'm not really affected by this. But let's assume I have all my movies in one directory with an NFO, a poster and fanart for each movie. Let's further assume I have a rather huge movie library (1000+ movies). That means I have at least 4000+ files in that directory. If every movie is divided into two parts it would even be 5000+ files. With your change the stacking logic will take the first video file and check it against all the other 3999/4999+ files (if there is no match) and then start with the next expression. Once that is done it moves on to the second file and checks the first expression against the remaining 3998/4998+ files and so on. That will result in one hell of a lot of iterations compared to the current implementation which does 2 checks per non-stackable item per expression. And regular expressions aren't among the cheap instructions.\nI agree that the current logic is not perfect and needs improving but I think just going through all the files might result in a noticeable slowdown depending on how many files are in a directory. I don't know about all the different flavours of stack-naming conventions out there in the wild but in your case a check for \"does the current filename only differ in the extension\" and depending on that check either aborting or moving to the next item would already solve your problem. This is far from perfect as well but I just wanna point out that it might be worth coming up with a better solution.\n. Well it is a bug so no need to close the PR (you can also update/rebase your commit with a better approach and it will automatically be added to the PR). It can be used as a discussion platform for a better solution. Finding a good solution highly depends on covering all the \"more common\" use cases for naming conventions of stacked files and files associated with stacked files (subtitles etc).\n. But the polling for abortRequested is already there (i.e. it hasn't been added by this PR) and most (service) scripts use it. So raising KeyboardInterrupt kind of changes the behaviour of the shutdown sequence and \"breaks\" (by automatically force closing them) current scripts, doesn't it? If that's the case I'm not sure if the KeyboardInterrupt will be a good addition if this is meant for Eden.\n. Hm but why is it that before ronie updated tv.shows.next.aired with polling for the abortRequested flag that script used to hang my XBMC for over a minute on shutdown because XBMC was waiting on it to stop? Another addon that regularly manages to freeze/hang my XBMC installation on shutdown is Trakt Utilities (which is why I disabled it a few days ago).\nI didn't mean to say that KeyboardInterrupt is a bad idea, it is actually a good idea. But I bet that none of the scripts in the official repo which use the polling of abortRequested also catch the KeyboardInterrupt. So adding that isn't really a fix it just changes the behaviour to something that does exactly the same and doesn't solve the problem for existing scripts (for Eden) as long as they are not updated to catch KeyboardInterrupt.\n. I don't use sets so I'm not really the right person to speak up but if I used sets and I would have set a sorttitle for the movies of a set I would expect them to be sorted by that and not by year. If there's no sorttitle set for the movies sorting by year would make perfect sense (although it would fail in cases like Star Wars (and probably others)).\n+1 on seperating sort modes of set and title nodes though.\n. I agree that custom changes by the user shouldn't affect other sets. Personally I would just expect the customly set sorttitle (which needs an NFO IIRC) to be prioritized over anything else when it comes to sorting (unless I manually change the sorting).\n. Yeah I actually thought about that as well and I don't think I can come up with a justifyable answer. I guess it comes down to personal preferences. But like I said I'm not using sets (I use sorttitle though) so I won't stand in the way of getting this merged. Just wanted to mention that manually set sorttitle's might need extra consideration.\n. I took a quick look at the new parameters and apart from the first one (i.e. startpercentage) which I already planned to add to JSON-RPC's Player.Open method all the other parameters look awfully AirPlay specific and not like something that would be useful to (m)any other clients using JSON-RPC. I'm always trying to keep JSON-RPC as \"general\" as possible (i.e. not adding anything that is very XBMC-specific) and AFAIK topfs2 is even more strict in that he thinks that other applications would/might like to adopt (parts of) our JSON-RPC API (which will be very difficult with XBMC-specific stuff in it everywhere).\nAll in all I don't want the JSON-RPC API to become like the Python API which to me looks like an API without any real structure (apart from the stuff that mirrors XBMC-internal classes/interfaces). Everytime something new was needed it was thrown in there somewhere so that it is available ASAP. That makes it look very messy. (I don't wanna step on anyone's toes here and I apologize if I just did, but that's my opinion)\n. Yeah I know that these properties were there before but I just can't think of (m)any use cases for them (apart from AirPlay obviously). I agree that extending builtin isn't ideal either because that's another mess and adding to a mess usually doesn't make it any better. I also have to admit that I don't understand all the implications that come with setting those properties for a CFileItem before handing it to the player. I'm happy to add any options that make sense in a more common use case (like the startpercentage which has been requested multiple times already).\nGenerally I think moving AirPlay into an addon is a good idea because it will allow you/us to easier push updates for it.\n. I never used our python API so bear with me if this is a very stupid question/suggestion. If all these options you need to have available to start playback for AirPlay are properties of a CFileItem why don't you create a xbmc.ListItem object in python and set the necessary options/properties and then create an xbmc.Player object and use xbmc.Player.Play() by passing the URL and the previously created xbmc.ListItem object? That way you should still go through g_application.PlayFile (but not through g_application.PlayMedia in case that's important for you).\n. The order of what should be checked first is certainly debatable. Generally something is marked as the default stream for a reason. I just put the language before the default stream because that's how I'd want it to behave. But if everyone else thinks differently I can change it. I checked a few of my multi-language MKVs and they all have a default audio stream set.\nYeah I don't really like doing the sorting myself either. The reasons why I did it that way is that I did not want to change the original order of the streams as read from the container. Furthermore I figured that in most cases there are one or two streams to sort so using std::sort doesn't really seem like it will provide a huge advantage. But if we don't really need/care about the original order of the streams I'm happy to remove the custom sorting code, implement the needed method to pass to std::sort und use that one. I'm guessing @elupus will be the man to tell me whether we want to keep the original order or not.\n. So I'll add an option to prioritize choosing the audio stream based on the language (if possible) over a default audio stream?\n. OK I pushed a commit that adds a GUI setting (off by default to keep current behaviour) \"Prioritise audio streams matching the user interface language\" to Video -> Playback but I have to admit I'm not at all happy with that approach/solution. I think it's a good idea to let the user choose what should be looked at first when choosing an audio stream but currently there are 5 different checks:\n1. If this video has been played before use the streams that were used the last time (this should always be 1 IMO)\n2. Use the default stream\n3. Try to find a stream matching the GUI language\n4. Use the stream with the most channels / best codec\n5. USe the first stream\nWhile 1 and 5 are perfectly sane where they are, 2, 3 and 4 are kind of interchangable which results in 6 possible cases. Probably not all of them make sense (but you never know, there's always someone which prefers some very odd setup). Does anybody have a better idea how to make this more flexible for the user to choose or do you think it's not worth it?\n. I'm not sure I understand. With \"original\" language you mean the default stream? What would be the difference to the implementation I posted yesterday (apart from it being formulated the other way around) which selects an explicitly set language (GUI/DVD language) over the original one?\n. Actually I didn't use the GUI language. What XBMC does is it looks into the langinfo.xml that is part of the directory containing the strings.xml of the language you chose in XBMC. There you'll find\n<dvd>\n    <menu>en</menu>\n    <audio>en</audio>\n    <subtitle>en</subtitle>\n</dvd>\nSo I figured it would make sense to use that for selecting audio streams in CDVDPlayer as well. I also run XBMC in english (although I'm german) so what I did was I modified my langinfo.xml so that DVD menus etc are displayed in german and not english. But I agree that this solution is far from user-friendly as it involves modifying an XML file. So maybe the two new settings you propose would then override the settings read from langinfo.xml and would also apply to DVDs. Where should those be put? In Appearence -> International where a user already specifies the GUI language or in Video -> Playback?\n. OK I just updated the last commit (removed the previous GUI setting and added a new one) which adds a new GUI setting \"Preferred audio language\" in Appearence -> International. IT allows to choose between \"original\" (the default stream), \"default\" (GUI language) and all other languages for which XBMC offers translations. I didn't remove the stuff from langinfo.xml yet (and I even use CLangInfo::GetDVDAudioLanguage() for now). There are two problems with the current implementation:\n1. I think I/we need to come up with better strings than \"original\" and \"default\" but I couldn't think of any right now.\n2. There is a very bothersome delay between the moment I change the value of the setting and the time it is actually changed inside XBMC. This goes as far as that it's possible to change the value and then quickly press ESC to leave the settings dialog which causes the just changed value to not being stored in CGUISettings. You have to wait a short period to be sure that it has been stored. While this makes sense for the GUI language setting (we don't want to unload all translations and load the new ones everytime the setting is changed because in most cases the user has to go through several languages to arrive at the one he would like to use), this is very bothersome for the preferred audio language setting. During my testing I had to go back to the settings dialog and change the value again because I pressed ESC too soon after changing the preferred audio language setting.\nIf you are ok with the implementation for the preferred audio language (and the above mentioned problems are solved) I will add another setting for the preferred subtitle language (which will probably need some discussing as well because there we also have external subtitles to consider).\n. Another rebase after an input from elupus (thanks for that). I added methods GetAudioLanguage() and SetAudioLanguage() to CLangInfo which get/set the preferred audio language as set by the user through the GUI setting. This way the language's locale doesn't have to be determined everytime something is played through CDVDPlayer.\nI checked most langinfo.xml files of the different languages XBMC supports and in all of them the dvdmenu, audio and subtitle languages match the locale of the language itself. So I think by adding the preferred audio/subtitle GUI settings those would be safe to remove/replace.\n. So I'd like to bump this one. Reading through the discussion so far these are the things that still seem to need further discussion:\n1. We need to come up with better names for the current \"Original\" (default stream) and \"Default\" (GUI language) strings in the audio stream language setting. Suggestions are welcome ;-)\n2. We need to discuss whether we want to drop the  stuff from langinfo.xml. I've noticed that for most of the languages the languages definded in the  tags match the language itself but for a select few (e.g. Afrikaans) they don't match (for Afrikaans the language's locale is \"za\" but the languages defined in  are \"en\") so I'm not sure what to do about that.\n3. I still don't know if the last comment from @elupus (see https://github.com/xbmc/xbmc/pull/700/files#L3R303) is correct and needs some code change or not.\n4. Should the new CLangInfo::GetAudioLanguage() which is based on the GUI setting replace the currently used CLangInfo::GetDVDAudioLanguage() (and probably CLangInfo::GetDVDMenuLanguage()) or not?\n5. This is not really related to this PR itself, I just noticed it when using the audio stream language setting: There is a very bothersome delay between the moment I change the value of the setting and the time it is actually changed inside XBMC. This goes as far as that it's possible to change the value and then quickly press ESC to leave the settings dialog which causes the just changed value to not being stored in CGUISettings. You have to wait a short period to be sure that it has been stored. While this makes sense for the GUI language setting (we don't want to unload all translations and load the new ones everytime the setting is changed because in most cases the user has to go through several languages to arrive at the one he would like to use), this is very bothersome for the preferred audio language setting. During my testing I had to go back to the settings dialog and change the value again because I pressed ESC too soon after changing the preferred audio language setting.\nI'd also volunteer to do similar work for subtitle selection once this PR has been done and merged.\n. For 1: Yeah \"Original\" isn't that bad as long as the other isn't \"Default\" because it could be understood as \"Default stream\".\nFor 2: Well like I mentioned langinfo.xml sometimes provides different locales than the language's locale (as for Afrikaans as it's probably hard to find a DVD with a menu in Afrikaans or anything like that). So it will probably change the behaviour for certain languages if we pull  from langinfo.cml\nFor 3: Thanks for the comment elupus, so that should be fine.\nFor 5: Thanks for the hint, I'll see how I can refactor it.\n@elupus: This doesn't handle subtitles yet and AFAIK there's no forced flag for audio streams right?\n. OK I have looked into doing the same thing for subtitles and here is how it could work:\n1. If subtitles are disabled and there's a FORCED subtitle, use that one independant of the language (can there be multiple subtitles with the FORCED flag set?)\n2. If there are saved settings for the video, stream and subtitles use the same settings again\n3. If there are external subtitles, try to find one that matches the preferred language and use it if available\n4. If there's no external subtitle matching the language, use the first external subtitle\n5. If there is a preferred subtitle language specified, try to find an internal subtitle that matches the preferred language and use it if available\n6. If there is no preferred subtitle language specified or non of the subtitles available match the preferred language, see if there is a subtitle with the DEFAULT flag and use that one if available\n7. If all that fails, use the first subtitle that can be opened/read\nThe selection procedure gets a bit complicated (but it already is complicated now because of FORCED, saved settings, external and DEFAULT) but I think it should work.\nOnce that has been added and works, I'll add another commit to drop the  from langinfo.xml and the respective CLangInfo::GetDVDFooLanguage() methods.\n. OK I have reworked/refactored the whole implementation. Thanks to that I noticed a bug on win32 where for certain locales like German the three char code is \"deu\" instead of \"ger\" which is used by linux and by MKV. So I had to add an extra method to CLangCodeExpander.\nI haven't removed the GetDVDFooLanguage() methods from CLangInfo yet. Doing that will require another helper method to get the two char language code (like \"en\") from the three char language code (like \"eng\") because addons etc use the two char language code. But that should be pretty easy to come up with and I'm happy to do so. Should I add it to this PR or should I create a new one once this has been merged?\n. Forgot to also change the strings I didn't like. I renamed them to \"Original stream's language\" and \"User Interface language\". Let me know if you are ok with those or not.\n. Any chance I can get the latest changes & rebase reviewed (once again) so it could be merged in May? Thanks for your patience.\n. Well like I mentioned earlier the current implementation offers a setting for both audio and subtitle language. The available options are\n1) Original language (whatever is the default/first audio stream in the video container).\n2) User Interface language\n3) Any specific language\nIn all of these cases XBMC uses it's \"best track\" detection to choose the best track in case there are multiple tracks with the same language.\nA \"preferred language order\" would be a lot more work to implement and would make it more complicated.\nConcerning AAC vs AC3 I don't really care because none of my videos have AAC. Changing that logic is also not part of this PR so I won't touch it.\n. @da-anda I don't see why a second dropDown is necessary if it's doable (and already done) with only one (Original language, UI language, Afrikaans, ...., German, ..., English, ...).\n@elupus IIRC stable_sort only keeps the relative order of items which are \"equal\" but if all the items differ, they are still completely re-ordered.\n. @elupus Apperently you were ;-) I'll take a look at it and see how well it integrates with my changes. Thanks for the work.\n. @elupus I took a look at your code and I'm not sure if your PredicateAudioPriority and PredicateSubtitlePriority are correct. As an example if we have two audio streams, stream A has more channels than stream B but stream B uses the better codec. If we step through PredicateAudioPriority comparing A against B we will return true on the \"if(lh.channels > rh.channels)\". If we then compare B against A the \"if(lh.channels > rh.channels)\" check obviously fails but the \"if(StreamUtils::GetCodecPriority(lh.codec) > StreamUtils::GetCodecPriority(rh.codec))\" check succeeds and returns true as well which (at least on win32) triggers an assert.\nOtherwise I really like the approach of the implementation because it cleans up OpenDefaultStreams a lot.\n. Forgot to mention that I integrated the language priorization into your approach: https://github.com/Montellese/xbmc/compare/master...dvdplayer_default_audio_language_new\nBut it triggers the same assert if there's a stream A matching in language and a stream B not matching in language but with a better codec or more channels.\n. No we don't. If you select \"Original stream\" it will automatically look for the best quality stream.\n. Please read through my previous comments and explanations. There is one which details exactly how this works. And in the end there will always be someone who doesn't like a feature and we/I don't want to add X extra settings so that really every user gets his way but 99% of the users are overwhelmed with all the different settings.\n. 1) The option is called \"Original stream\" and ignores the streams language completely. So it will look if there is a stream marked with the DEFAULT flag. If Audio 1 has the DEFAULT flag, it will use Audio 1. If Audio 2 has the default flag it will use Audio 2. If none have the default flag it will use the \"best\" audio stream (based on channels and codec).\n2) Yes it will play the english stream Audio 2.\n3) If you set the language to German, it will play Audio 1. If you set a language which doesn't match any stream it will behave like 1)\n. Sorry but I still don't understand your problem (apart from that you think AAC is better than AC3). If you leave the new options at their default value \"Original stream\" everything will work exactly the same as it does in Eden.\nWhat would be the use of looking at the language without forcing anything? Why would I want to look at the language in the first place if I don't use it in the decision process?\nThat's why I use the MKV container. It has the best support for all those flags like FORCED, DEFAULT etc. I don't know how MP4 is handled. But just adding a special handling for MP4 just for you does not sound like a valid option to me (and even if it is I won't be the one to code it because I don't have any MP4s). Even though MKV has the possibility to set a default stream, you don't have to. It's more like a \"You should really use this stream\" (maybe because it has surround-sound while the other streams are stereo). Why do you have \"secondary\" streams encoded with AC3 (whereas the \"primary\" stream uses AAC) if you prefer AAC anyway? Doesn't really make sense to me.\nAt the end of the day, if you don't like how the newly added functionality works, just don't use it and leave it at its default value. If you don't like how the current code (in Eden and in master) works you already have this problem now and it won't get worse. You also should consider that I was/am the person who took the time to write this code so obviously I coded it so that it works the way I want it to. If one user (out of many many) has requirements that completely conflict with my needs I can't do much about it.\n. Updated my alternative branch to the laste code from @elupus at https://github.com/Montellese/xbmc/compare/master...dvdplayer_default_audio_language_new but I couldn't test it yet. Will report back once I was able to test it.\n. Being able to disable the quality detection is not part of this PR (and as I like it I won't change it) and PVR is still not part of master.\n. OK I rebased my work on top of the work done by @elupus (nice work btw) to achieve with this PR what I initially intended. Any additional logic should be implemented in a different PR so please create a (or several) ticket for whatever additional features you guys would like to see and provide detailed descriptions.\nAfter a final review I'd like to pull this in during this (May) merge window. Thanks.\n. Remembering the language of the first stream will be a bit difficult because the sorting of all the available streams is done in a stateless way. An easier approach would be (as already described by someone before) a toggle setting to disable the \"best quality\" selection and just go for the DEFAULT or the first stream.\n. The sorting is done in PredicateAudioPriority() and using std::stable_sort().\nYou can get the langauge of the primary stream at the beginning of OpenDefaultStreams but you would have to put it in a member variable to be available in PredicateAudioPriority() (which is not very nice).\nI'm not sure if there is THE proper fix for handling \"best codec\" vs \"first stream\". People who like the \"best quality\" approach won't really care about an extra toggle setting to disable it. In case you still want to try and implement the \"only look at streams matching the video language or the language of the first stream\" you need to consider the case where you can't open a stream (which is very rare) so you still need to remember during your decision process that there are streams in another language which you might have to fall back to.\n. Mainly tested on win32 but I also ran a few tests on Linux because there is some win32-specific code needed for all the 2-char to 3-char conversions and back then it worked fine with the one file I had available with multiple audio streams. Will recheck later.\n. That's odd because when setting the audio language we run g_LangCodeExpander.ConvertToThreeCharCode() so there should be a 3-char code unless it fails. In that case it will fall back to the language code of your user interface language (which requires some platform specific code IIRC).\n. Yeah that would mean that the problem is m_languageCodeGeneral which is exactly where there is platform-specific code required. I'll check later but probably it will require a call to g_LangCodeExpander.ConvertTwoToThreeCharCode on line 232 of LangInfo.cpp.\n. I just pushed e539456d7801b5d4afaff647dbf09b670da05cf5 and it works fine with that for me on Kubuntu.\n. @jmarshallnz: I removed the unneeded include of JobManager.h in WebServer.cpp. Thanks for the hint.\n. Another rebase to fix conflicts with the merging of the websocket PR.\n@Memphiz I just merged the conflicts in the osx/ios/atv2 project files but no clue if that's possible and if it still works. Could you please check for me? Thanks a lot.\n. I agree with TheUni that if we already touch every file we could also do the copyright years update to 2012 so we don't have to touch every file again.\n. I'm starting to think I'll need to open a thread where I post all the JSON-RPC related features/fixes I have already done and am working on which didn't make it into Eden: https://github.com/Montellese/xbmc/commit/3050fd6ee751dff9a28557940e524757cfc0e2bf\nThat commit is part of my jsonrpc branch (see https://github.com/Montellese/xbmc/compare/master...jsonrpc) which contains quite a few commits that implement some requested features and will be merged as soon as Eden has been released. Thanks for looking into this though. One hint: If you want to specify an optional parameter in JSON schema you don't need to specify \"required\": false because that's the default value but you should always specify a \"default\" value so that anyone reading the JSON schema immediately sees the default value.\n. Argh sometimes I don't understand github. Some commit/code comments are removed from a PR if you rebase, others aren't.\nAnyway I made the adjustments pointed out by @jmarshallnz (thanks for looking at the code). The only thing I didn't touch yet is the dict passed to JSONRPCClient_setConfiguration (see https://github.com/xbmc/xbmc/pull/728/files#L3R93) as I'd like to hear what @jimfcarroll has to say about this concerning his work with SWIG etc (don't be too harsh on me though ;-)). See https://github.com/Montellese/xbmc/commit/219406135b6e5fb0ed1a1332584cc62fd96804b8#commitcomment-1011471 for the previous \"discussion\" on the topic.\n. @cptspiff Thanks for your comments. I fixed the copied parameters to const reference parameters and also got rid of a GCC warning caused by PY_RETURN_TRUE/FALSE.\n. After a discussion with @jimfcarroll I decided to remove the JSONRPCClient.setConfiguration method as it would only complicate things in the future. It was only a convenience python wrapper for a call to JSONRPC.SetConfiguration anyway which is still possible by executing said JSONRPC method through JSONRPCClient.execute or xbmc.executeJSONRPC so the functionality is not lost.\n. So @jmarshallnz @cptspiff and @jimfcarroll is there anything that needs to be done for this to be merge-ready (either April or May)? Thanks again for the feedback.\n. IMO having some base implementation which can be re-used for all kinds of callbacks into python would certainly be nice. What I did for this PR was more or less copy & paste the implementation of the Player callbacks like OnPlaybackPaused etc and adjusted the callback to also handle a parameter.\nWe could generalize the whole callback procedure and provide a static manager to keep track of active/available addons/clients (similar to the one in this PR). Then for a specific callback we would need a class that provides the callback's signature and can be used as a base class by an addon. I'll see if I can find some time to give it a shot.\n. Sounds promising as long as it supports multiple callbacks in a single class, the callbacks can be named whatever necessary and it supports any number of parameters (e.g. the Player callbacks don't take any parameters but the jsonrpc onNotification callback takes a string as a parameter).\n. Yup the player callbacks are also sent as JSON-RPC notifications and the JSON-RPC notifications even contain information about what is actually being played etc (but that's probably not of much use to a python script unless they use JSON-RPC to have access to the music and video database).\n. Announcements can and do already have a payload (see https://github.com/xbmc/xbmc/blob/master/xbmc/interfaces/json-rpc/notifications.json which is a JSON schema of how the announcements are sent out). Furthermore this PR already adds the python binding but if we want to use it more generally we probably need to rename it from JSONRPCClient to something more general. Furthermore with onSettingsChanged there is the problem that the announcement is only meant for a single addon which is currently not possible with the AnnouncementManager. It would need to be expanded to support some kind of receiver (which by default is \"all\").\n. Hehe, well it kind of depends on what we want to achieve and when we want to achieve it. The problem with the current code is that it requires c&p for every new callback. If you will simplify this with your future work I'd actually prefer that approach because it will allow every script to decide which callbacks/announcement it would like to receive and doesn't have to handle all the other stuff that's not of any interest to the script.\nBut if we need an interim solution using the announcement manager would probably be the easiest approach. Problem with introducing the announcement manager now is that some scripts will start to use it and then we can't just come back later and rip it out again.\n. I agree that the JSON-RPC API should be as identical to the python API as possible but they will never be identical because there are things that can be done with addons that should never be possible with JSON-RPC and vice versa (I don't have an example in mind for the other way around but I'm sure there are plenty).\n. +100 on python and json-rpc using/going through the same code wherever possible. Reading about your plans I'm seeing a major (and much needed) refactor of the current python API coming towards us. I have to admit I feel grateful that I don't write/maintain any python-based addons ;-)\n. OK I have completely refactored this after amet has merged his xbmc.Monitor stuff and in general it works exactly the same but instead of interpreting the different announcements in XBPython it simply forwards the whole announcement to addons extending xbmc.JsonRpcClient and calls onNotification on those objects.\n. gets into his fighting gear and is glad he started taking Kung Fu lessons 6 months ago OK let's discuss those \"opportunities\" ;-)\nLike I said I simply refactored my initial work (which included an extra (static) class for client management which has been dropped completely now) to make use of what amet has done for xbmc.Monitor. If there is an easier way to do this (and it will be available rather sooner than later i.e. \"a week or so\" is fully acceptable) I'm open to suggestions.\n. Let me know when you got your work basically working and I'll take a look at it. I'm absolutely in favor of merging as much code of the python and json-rpc API's as possible because doing (similar) things in two locations ends up in code duplication and in different behaviour.\nThe biggest problem I currently see is that there are not many things that the python and json-rpc API have in common (both in how the APIs are structured and what they covers). That goes so far that a lot of python scripts/addons actually use the json-rpc api (through xbmc.executeJSONRPC) to do things like retrieving items from the database etc. And obviously the python API contains many things that JSON-RPC will probably never need (e.g. creating custom windows/dialogs etc). So merging these two APIs will inadvertently lead into having to refactor either one or both of the APIs which will lead to breaking every python-based addon and/or json-rpc client.\nBut I'm happy to sit down and listen to what you have planned and discuss if/how these problems can be tackled/solved.\n. No I never found the time to re-do the PR with the new implementation.\n. Thanks for the review. Will fix the little things you mentioned and rebase.\n. Fixed all your hints except the CStdString usage and rebased onto latest master to be pull-ready.\n. OK I'll try to provide a bit of an overview over what has changed.\nFirst of all the \"architecture\" of Announcers has changed. \n- Up until now every class that would like to listen to announcements going through CAnnouncementManager has to implement ANNOUNCEMENT::IAnnouncer. Furthermore they have to include AnnouncementUtils.h to get access to the CAnnouncementUtils::AnnouncementFlagToString method. AnnouncementUtils.h has been removed and the AnnouncementFlagToString method has been moved to IAnnouncer to get rid of that extra include.\n- The EAnnouncementFlag enum has been renamed to AnnouncementFlag as IMO a type name containing \"Flag\" already indicates that it's an enum. This one causes a lot of small changes throughout the whole JSON-RPC code which is why this diff is so huge.\n- A IJSONRPCAnnouncer has been introduced which derives from IAnnouncer and additionally contains the protected method AnnouncementToJSONRPC which translates any announcement into a valid JSON-RPC notification. This method was previously available as a protected method in CJSONUtils which required JSON-RPC announcers to derive from CJSONUtils just to use that specific method. As an example in the new code CTCPServer only needs to derive from IJSONRPCAnnouncer and not from both IAnnouncer and CJSONUtils.\nThe other change is splitting up CJSONUtils into CJSONUtils which provides JSON-related utility methods and CJSONRPCUtils which provides JSON-RPC-related utility methods and types, specifically JSONRPC_STATUS (which was renamed from JSON_STATUS which wasn't really a matching name), the callback/method definition for methods implementing JSON-RPC functionality, the OperationPermission enum which defines the different permissions needed by JSON-RPC methods and convenience methods to translate permissions from and to strings.\nThe work of seperating JSON-related stuff from JSON-RPC-related stuff is not 100% done yet but this commit contains most of that work.\n. So can I get this in in the April merge window?\n. @cptspiff Thanks a lot for looking through all of the commits. I posted answers to the \"easy\" ones, other comments will follow tomorrow.\n. @jmarshallnz Thanks again for your review. I fixed the stuff you mentioned in CMime, removed the DRC-stuff from the volume calculation in the Application.OnVolumeChanged notification and renamed the \"force\" parameter in Player.SetSubtitle to \"enable\".\n. So any further comments on this or is it good to go? I'd prefer to merge #785 first and then rebase this PR.\n. Apart from the %% in the LIKE clause it looks very nice. Well done.\n. You can't create two pull requests from the same branch which is why your second commit (libav related meant for #806) appears in this pull request as well. In the future you should create a new branch for every pull request you want to submit and then do your work in those feature-specific branches and send the pull requests from those branches.\n. Nice work. This should make tracking down those win32 crashes quite a bit easier. I'd favor the windows temp directory as well as it should always be writeable.\nIs there already a way for us to get the PDB of billy's builds?\n. The PDB of the test build TheUni did yesterday was automatically uploaded alongside the EXE, see http://mirrors.xbmc.org/test-builds/win32/\n. +1 as the current implementation is very confusing and inconsistent.\n. Would those monthlies be considered \"stable\" or just a special semi-stable release? Just asking because of the addon repo, addon versions and jsonrpc version.\n. More feedback (especially on ExecuteAddon) would be very much appreciated.\nThanks jmarshallnz for your comments, will fix up ASAP.\n. OK I have extracted the changes to Builtins into a seperate commit and removed xbmc.python.library from the list of exposed (and executable) addon types.\n. Rebased onto latest master and made an improvement to the builtin code changes thanks to a comment from @jmarshallnz \n. Rebased and re-opened for october merge window on request of @amet and other remote client developers.\n. Sorting is not that easy to achieve because our sorting basically works with CFileItems (or let's say works best) and addon retrieval doesn't work with CFileItems. Therefore it would require quite a bit of code to get it working with IAddon/AddonPtr which is used for addons. It would probably delay this PR too much so I'd like to keep that for later for now.\n. I updated GetAddonDetails to also work for addons that aren't part of any repository (and therefore don't appear in the addon database).\n. As @da-anda is one of the very fierce requester of this image resizing feature he certainly has an opinion on at least 1 and 2.\nConcerning number 3: Does this mean that the path returned by the thumbnail and fanart properties won't be directly accessible through the VFS anymore? Our JSON-RPC API has a method called Files.PrepareDownload which returns the actual URI that a client needs to use to access an image (actually any file). But almost no clients use this method because currently all the paths are constructed the same way, i.e. http://< ip >:< port >/vfs/< url-encoded-path-to-file >. So that means that we would already have the possibility to provide clients with a \"redirect\" URL based on a path from a property returned by JSON-RPC but it's not widely used and changing this would probably break image retrieval in a lot of clients.\n. IIRC I once read a comment from elupus that having this in the VFS would also benefit the UPnP server/client as it could use it as well. The webserver is actually a place where it might make sense to retrieve the filesize of a transformed image through a HEAD request. With the current implementation that's not possible because only the VFS and the webinterface handler handle HEAD requests but if this feature would be integrated into the VFS it would automatically be possible.\n. The current possibility to access our complete VFS through the webserver is probably a much higher security issue because it allows access to any file that is accessible through our VFS including /etc/passwd etc.\n. I'm sure you will find a lot of people complaing about deprecating direct VFS access but it's probably the most secure thing to do. \nWell we could change the URI format from \"/transform/image/...\" to \"/image/transform/...\" which could then also be used for direct image access by only using \"/image/...\" (so without the \"transform\").\n. Well I can see two differences:\n1. It might be confusing having to use /image/transform if a client just wants to get an original image\n2. Currently if the \"quality\" option is not specified the default value is 65 (not 100) so you won't get the original image. But obviously this could be extended/adjusted in two ways: Returning quality 100 by default (which might be overkill as in my tests I dindn't really see much difference with a quality of 65) and not doing any transformation at all if none of the options/parameters are provided.\n. Sure /transform could be dropped completely. In the current PR it's needed because currently access to images goes through VFS so clients can access any file (not only images) and it wouldn't make sense to provide those width and height transformation options in the VFS in general.\n. I have to agree on this with @jmarshallnz. Internet browsers are perfectly capable of stretching images etc and doing this in XBMC would increase the time it takes to provide the image which will automatically slow down the client/webinterface waiting for the images. For the browser this is just an image manipulation in memory but for XBMC the file has to be actually created and the passed back to the requester.\nConcerning the format I think XBMC only really supports jpg and png for thumbnails (posters, banners, landscape etc) and fanart (correct me if I'm wrong) so there really isn't any reason for the client to be able to force a certain format.\nThe question that remains is if we should always keep the aspect ratio even if the client provides width and height values that don't match the aspect ratio of the original image.\nI also had a quick chat with @da-anda and he proposed an alternative URI format which would allow clients to retrieve fanart using a database ID. So If a client needs the poster of a movie with the ID 123 he requests it through\nhttp://< ip >:< port >/images/movies/123/poster?width=123&height=456\nI actually like this idea but there are (at least) two problems:\n1. Having things like \"movie\" etc in the URL kinda goes against the idea of having arbitrary categories (I know this isn't possible now but hopefully will be in the future).\n2. XBMC does not yet allow storing different kinds of images. There are thumbnails and there are fanarts. There are no posters, banners, landscape, clearart etc or rather XBMC just doesn't know/care about them and sees all of them as thumbnails.\n. I think we'll have to wait with this until the musiclibrary uses the new texture cache as well because the transformation logic will most likely be implemented in CImageFile which can only be accessed with the new image://-based URIs. Currently music artwork still uses the old special://-based URIs so we'd need special handling for that which IMO doesn't make any sense.\nOn the other hand we could already implement this for video artwork and then it would automatically work for music artwork once it has been integrated into the texture cache.\nTo summarize all we really need is resizing right (wheter fixed or variable size is another question)? All the images should already be stored as JPG or PNG so no need to convert between those. And saving bandwidth/size can already be achieved by downsizing so no real need for compression.\nShould this be implemented as a new \"transformation\" handler (like I did in the initial code) using http://ip:port/transform/image/.... or should it be integrated into the image handler by appending a \"/transform?options\" to the http://ip:port/image/.... URL? The latter has the advantage that transformations are easier applied to existing URLs because a client just needs to append the necessary information to the end of the existing URL. For the handler implementation it doesn't matter that much. The former makes it easier to parse the actual image URI while the latter \"saves\" an extra webserver handler (might need it someday in the future for video transcoding though).\n. Closing this. Will provide an implementation using the new image:// VFS etc ASAP.\n. Just rebased onto the latest commits to get the dateAdded field in for sorting by date added and also removed that silly comment.\nYou would still need to somehow get the data which is used for sorting. Currently movie sets don't have any metadata at all (apart from a title/label and a thumbnail) so changing the way we put together a list containing groupings won't change the fact that those groupings don't have a value to sort by.\n. Ah right now I get it.\n. So does this mean that I should rather start looking into an out-of-db mapping/reducing feature than using SQL where possible (for now)?\nThe question is what kind of grouping could there be in the future? And could those be generalized in some way? Furthermore out-of-db mapping/reducing might be significantly slower than doing it with SQL although it would greatly simplify the SQL queries and logic in CVideoDatabase.\n. Thanks for the feedback.\n1. Yup you're right it's a lot of implicit logic. I'll add a comment.\n2. Yeah that's how I understood the manpage of strtol() et al. Using NULL instead of '\\0' might be a bit confusing. I'll change it accordingly.\n3. Yeah I absolutely want to avoid pulling in StringUtils.h (and thereby StdString.h). Not sure about base conversion, sure would be nice to have but not an absolutely needed feature. I'll see about a helper function which can take care of all the cases (int, uint, float, double).\n. OK I finally found the time to rework this with the recommendations from @jmarshallnz which means I've factored out the conversions to utility methods str2int64, str2uint64 and str2double which all use trimRight to do the initial trimming so this should reduce code duplication a bit as well.\n. @jmarshallnz I updated the check for NULL or \\0 on end. Thanks for the hint.\n. Have you seen the discussion in #728 about how to implement callbacks into python?\nApart from that you may also want to take a look at how I got around the necessity of providing the addon ID in the constructor of the class providing the callback. It is possible to extract the addon ID of the running script from python.\n. Well concerning a more content-agnostic approach: Sure it makes sense but the advantage of this approach (apart from the fact that all the getter methods are named VideoLibrary.GetFooDetails etc) is that you can define which properties can be set/changed for which media type. So a user shouldn't be able to update \"showtitle\" for a movie because it doesn't make sense. Sure nothing would happen if the user would provide such a property because it isn't used in the SetDetailsForMovie() method but the way it is now the client will receive an error message telling him that \"showtitle\" can not be used for SetMovieDetails().\nBut I agree that (if we ever get a more modern database layout) it would make sense to consider a move to a more content-agnostic API.\nI can squash the VideoLibrary.RemoveFoo() and VideoLibrary.SetFooDetails commit, no problem.\nYup the SetPlayCount is rather ugly but no way around it right now.\nNot sure what you mean about 7c36585\nI'll answer to your inline comments ASAP. Thanks for the review.\n. OK I fixed the things that jmarshallnz commented on especially added an idFoo parameter to the original CVideoDatabase::DeleteFoo methods to avoid an extra query for the ID based on the path (because we already know the ID) and squashed the videolibrary related commits together so that the diff looks much cleaner.\n. @jmarshallnz concerning updating a song. If I understand you correctly the way it is currently done in AudioLibrary.SetSongDetails is far from ideal. Should I add a new method to CMusicDatabase which allows to update a single song based on it's path or database ID? That would also reduce the work needed to be done in the JSON-RPC implementation quite a bit because currently I have to retrieve the whole album + details, then look for the right song, change that song's data and then send everything back to the database.\nApart from that is there anything else that needs changing? Might be best to hold off on this one till #884 has been merged so I can update that in VideoLibrary.SetMusicVideoDetails to an array as well.\n. OK I will add the respective method to CMusicDatabase and will report back once done to get it reviewed.\n. OK after taking another look at this I pushed a new commit which adds a new method UpdateSong to CMusicDatabase. The main problem is that there's no method to remove a single song from the database, so I had to copy & paste code from RemoveSongsByPath (which removes all songs from a certain directory and not just one) and adjust it a bit to work with a single song's ID. After deleting all the info of the song it uses AddSong to re-add the song to the database. I tested it on 3 different songs and it looks ok but I'm not 100% comfortable with this.\nI furthermore noticed that I will have to change all the SetFooDetails methods to return the new ID of the media item that was changed because all those implementations first remove the existing item from the database and then re-add it so the client will need to know about the new ID of hte item. I'll do that tomorrow/later after I got some sleep.\n. I totally agree that the current behaviour/implementation is counter-intuitive. What I'm unsure about is whether it's possible to manually write a value into a field in the database which is marked as auto_increment. Kind of defies the purpose of that doesn't it?\nI'll have to search the web to see if it's possible in the first place otherwise I won't even have to consider re-writing that code.\n. Ah I was thinking along the line of not having to convert all the INSERT queries to UPDATE queries ;-) So you would delete the row but remember the ID and then do the already existing INSERT query with the remembered ID (if there is one). I just tested it both with MySQL and SQLite and it is possible to manually set the ID of a field that is marekd as auto_increment (and primary key). But I guess your approach would be cleaner ;-) I just hate to touch all those SQL queries as it's bound to break something.\n. That actually sounds like a nice idea. I didn't know about REPLACE at all but it sounds like it could solve this problem. I'll give it a whirl later on.\n. OK I updated the last commit to use \"replace\" instead of \"insert\" in CMusicDatabase::AddSong and to use the song's ID instead of NULL in the \"replace\" query if it is known.\nI tested it on SQLite with the music scanner and through JSON-RPC and didn't notice any problems.\nWhile looking through CVideoDatabase I made two changes to SetDetailsFor(Movie|Episode|MusicVideo): one will save us an extra query for idFoo based on strFileName and the second one is actually a fix because otherwise we ended up with two movie/episode/musicvideo records in the database with more or less the same details but different IDs.\n. @jmarshallnz Thanks for reviewing and for your feedback/help. I have squashed the two new commits into the other two and I'll add this to the May merge window.\n. The only more fitting one I could think of is \"inWhereClause\" but for me that doesn't make it any easier to understand. I don't understand what you mean by \"pass in the ID itself\"? I only need to know whether the actualy db-field name we retrieve is for use in a WHERE or in a ORDER so not sure what ID/whatever you are referring to.\n. Ah damn I didn't know/consider that. All my movies have a sorttitle so it worked perfectly fine for me when testing ;-)\nQuestion is whether both SQLite and MySQL support the same CASE syntax. According to http://www.sqlite.org/lang_expr.html and http://dev.mysql.com/doc/refman/5.0/en/control-flow-functions.html#operator_case the SQL syntax is the same so I'll give it a try and see if SQLite supports CASE in ORDER BY clauses (I'm pretty sure that MySQL does if SQLite does).\n. OK I added a commit which uses\nCASE WHEN length(c10) > 0 THEN c10 ELSE c00 END\nfor correct sorting. The only difference I can see now in sorting smartplaylists for videos is that there's no ignore article functionality.\n. @xbmcfanboy Thanks a lot for this. I'm glad that the SQL query works for MySQL as well. Could you do one more test for me? Could you e.g. change the sorttitle value (c10) from \"The Tourist\" to \"The Transporter 2\" and from \"The Transporter\" to \"The Transporter 1\" and then open the playlist/run the query again? It should then list \"The Tourist\" after \"The Transporter\". With that we will know for sure that it works.\nThanks for your help.\n. Thanks a lot xbmcfanboy looks like it works as it is meant to. So this can be merged in the May merge window.\n. First of all thanks for this. I didn't realize that I had missed that one in #394.\nConcerning the headers in AnnouncementManager: I agree that including settings/AdvancedSettings.h is far from ideal (StringUtils.h isn't that big of a deal IMO). I was thinking anyway if it would make sense for all JSON-RPC properties which are built using StringUtils::Join to use a fixed seperator instead of the one from g_advancedSettings. This will make it easier for clients to parse those properties because they don't have to know about the seperator in case an XBMC user has changed it to something else than a forward slash.\nMaking that \"artist\" property an array would break backwards-compatibility to JSON-RPC in Eden and I'd like to avoid that for a while.\n. I'd go with the forward slash as you suggested because that's probably what everyone is using. And yeah this should be done in CVideoInfoTag::Serialize() and CMusicInfoTag::Serialize() as well.\nBut that was just an idea I had while considering the problem at hand.\n. I pushed a commit (https://github.com/Montellese/xbmc/commit/a0e2d7dede945e238126ad7c1d2944f44e4bc0bc) which changes the calls to StringUtils::Join to use a fixed \" / \" separator instead of the one from CAdvancedSettings. Should I provide it as a PR or do you want to pull it into this one and adjust your code accordingly?\n. Looks good to me.\n. This has absolutely nothing to do with your actual changes but we will never merge a pull request that contains commits \u00e0 la \"Merge branch 'upstream/master'\". You need to use \"git pull --rebase upstream master\" if you want to pull in the latest changes from master and not do a \"git merge\". Also c9b1ac2 which doesn't even have the obvious (and usual) commit message of a \"git merge\" is an absolute no-go.\nSo please get rid of those commits if you would like us to ever consider merging this.\n. No need to close the PR and re-submit your work. You can do the rebase work and then run a forced push (only ever do this in your own repo) with \"git push -f origin master-Server\" which will automatically update the commits in the PR as well.\n. First of all there's a lot of bad indentation in these changes. We use 2 spaces (not tabs) per indentation level. Furthermore you should squash the last two commits into the first. And you don't really need to put the URL to a github repo into the commit message as the commit would show up under your name anyway.\nOn topic I have to say I don't really like this because it's very hacky. After installing XBMC you first need to start it as usual (without the new --server command line option) to be able to configure it. So you'll need to install XBMC onto a machine which actually has a graphics card, an attached monitor etc. Once configured you can either remove the attached monitor etc or you can copy the XBMC installation onto a headless server and then run XBMC with --server there. The only other way I can see is to manually adjust guisettings.xml, which is even more hacky (and you can easily mess up the settings).\nIMO that's so far from user-friendly that I can't even see it anymore.\n. @vajonam  When I look at the rebased version of e.g. Application.cpp on github I still see a lot of bad indentation. Maybe your editor/IDE hides them from you?\nAnd my comment with the graphics card wasn't meant as \"you need a graphics card to install XBMC\". I meant that you need to install it on a computer which has a monitor attached (and therefore needs an (internal or external) graphics card), because you need a monitor to view xbmc's GUI to change the settings/set up sources.\n@amejia1 Well first of all you need to setup video sources etc because otherwise xbmc won't be of much use to you. This is something everyone must do. Then (at least) I always need to change the settings of the default scraper because they don't match my preferences. You'll also need to setup the corresponding services (upnp, webserver, json-rpc, airplay etc) if you want to be able to access your library from somewhere else. All the other settings that I normally change are GUI related so they won't be needed but at least setting up the sources is absolutely necessary (and probably adjusting the scrapers as well).\nSure this could be done in an extra configuration file but xbmc already has a ton of configuration files so not sure if adding another one is a good call. And it still means that the user needs to manually change a text file. While this is certainly no problem for the more advanced user (and linux user) I am pretty sure that if this hits an official build, everyone will want to try out the new \"server mode\" and then they end up frustrated because they don't know how to set it up or it's too difficult for them.\n. Just to show you what I mean I picked out a few places with bad indentation. I didn't bother to mark them all because they are pretty obvious when looking at the diff off this PR here on github.\n. @vajonam I know that feeling when you have seen some code for too long ;-)\nWhat I stated above is just my personal opinion. Considering that I neither have multiple XBMC installations nor use MySQL I'm not really your target audience anyway.\n. Please create a bug report on http://trac.xbmc.org as we don't handle bugs/problems on github (yet).\n. OK I have changed the implementation to only import the resume point if the advancedsetting \"importresumepoint\" is set or if the user is running a full library import. While implementing that I noticed that the importing of the playcount is done in the same way but that on a full library import they may be a few extra and unnecessary calls to CVideoDatabase::SetPlayCount so I fixed that as well.\n. I'm pretty sure you'll find a user who want one but not the other ;-)\nThat being said I'd be ok with merging the two but we'd need to change the name to something more generic.\n. Looks like older packages have been removed from the debian pool. But please post this as a bug report on our own Trac at http://trac.xbmc.org as we don't handle bug reports on github (yet).\n. Ah you need an account in XBMC's forum (http://forum.xbmc.org) to get access to Trac. You will be able to use the same username and password in Trac as you use in the forum.\n. Just as an FYI there is a problem in the way I integrated the generation of the SWIG bindings into the VS project. Currently the bindings are generated on every compile but I'm not yet sure why. It should only happen when the .i files have changed or when the generated files don't exist. But there's something screwed up with the VS project file.\n. I gave it a shot and there are at least two problems:\n1. When I specify a custom build step for the XBMC project all the custom build tools I specified for the .i files aren't triggered anymore. I never used either of those so I don't really know what the problem is.\n2. I don't know how to specify to only trigger the custom build step when one of the header files in xbmc/interfaces/native has changed. It works okwhen I specify a single header file (or multiple) but I didn't get it to work with a wildcard (i.e. $(SolutionDir)....\\xbmc\\interfaces\\native*.h).\nThe custom build step command could look like this\nFOR %%f IN ($(SolutionDir)..\\..\\xbmc\\interfaces\\swig\\*.i) DO CALL $(SolutionDir)..\\BuildDependencies\\GenerateSWIGBindings.bat %%~dpf %%~nf\nor could be put into another BAT file (slightly modified) and then called from the custom build step.\n. As already mentioned you'll want 10f8ee48af87a72166d042c6fc4acd058e5a66b9 for win32. Furthermore I still don't have a solution for re-generating the python files if a header file in xbmc/interfaces/native changes. And right now I get an exception as soon as I try to start XBMC. The exception is somewhere in WinMainCRTStartup() (some win32 specific C++ initialization code) specifically in _cinit().\nGenerally I agree with your re-structuring. Only \"apidef\" sounds a bit odd to me.\n. Yup that fixes the exception. Nice find.\nI have one more commit with a few cosmetics in the VS project file: 7f9c655f3e414b30e566fc44ca3e49f1b08d5b4f\nThese unneeded tags were added while I played around with the different build events etc.\n. I really like this, excellent work. If we could get smartplaylists to behave (almost) the same as our CVideoDatabase::GetFooNav() methods we could actually get rid of most of the < path > tags and define those as filters as well.\n1. This brings us back to the discussion in #824 about a grouping step before doing the sorting. I think the custom sorting implementation for SmartPlaylists is one of the problems because it doesn't support things like \"ignore article\" etc. But without it the whole limiting functionality is kind of useless as we would still need to get all the matching items from the database, then do manual sorting and then apply the limiting which slows things done if we e.g. only want to retrieve 10 out of 2000 songs.\n2. Yup this is not very intuitive IMO as you have to open every XML to get an idea of what comes after what in the list. Sorting alphanumerically by filename in combination with XX_foo.xml or XXfoo.xml (where XX is a number) probably gives to fastest and simplest overview when looking at the XMLs. But I have to admit that the \"order\" attribute looks cleaner.\n3. I probably should have made that comment (https://github.com/jmarshallnz/xbmc/commit/59b2222d4b8592eba33923b83a980b5ed864345d#commitcomment-1271352) here instead. Not sure what you mean concerning JSON-RPC and the webinterface?\n. I won't stand in the way concerning how ordering is done. For a quick overview doing it based on the filename is better but having to rename all your files everytime you want to add something in between isn't a nice prospect either.\n. You can't imagine how often I went into the \"video\" folder just to remember that VideoDatabase.cpp/.h are in \"database\" in the VS project but I was always too lazy to change it. I for one prefer the VS project structure to reflect the filesystem structure because it makes looking for files on linux etc easier as well.\n. You do know that you don't need to create a new PR everytime you change something? You can just (force) push to the same branch and github will automatically update the PR.\n. I only looked at the last commit and it looks like that should work for now for JSON-RPC. Didn't give it a spin but will be happy to once this has been merged. As there is no pre-frodo addon repo yet there are no webinterfaces and scripts which use the latest changes in JSON-RPC and we can easily fix a bug or two in case it doesn't work as expected.\nIMO we should put together a plan on how to proceed on this image-access for JSON-RPC business as it came up in multiple places now and really needs to be addressed.\n. I think we should first implement step 1 and 2 so that the TextureCache is in full control of image access and caching before we start worrying about how we can securely expose that information to the outside world. With the webserver being implemented in handlers it has become a lot easier to write (and replace) specific handlers. Obviously this won't stop us from doing something stupid though ;-)\nAn image-based ID sounds good to me. The question will be whether JSON-RPC requests will directly return those IDs or if they return a real or an image://-based path which then needs to be passed to Files.PrepareDownload (which already exists for this purpose so looks like we actually did something right in the past) to retrieve the ID which will allow a client to actually download the image.\nIMO if a client decides to persistently store media item information it should also store the images (which will also speed up the responsiveness and load time of the client). All other (state-less) clients like the default webinterface will always ask XBMC for the information whenever it is requested by the user and then use whatever is returned right then. So IMO there would be no need to persist those mappings.\n. Ah right I didn't know about that. I'll take a look at it and push it in once I figured out how it works ;-)\n. Yes that feature has been added during the April merge window (so at least a month ago).\n. I interpret it as \"date when the video was added to my collection/library\" independent of XBMC.\n. I totally agree with removing tvshowlinkepisode. Gets rid of some (unnecessary) JOINs which is always nice.\n1. I always disliked the c## stuff (even though I admit that it has a few benefits) so no complaints from me on that one.\n2. GetCommonDetails() was/is pretty neat but idShow is a much better (and easier understandable) field name than c##.\nSo no objections from my side.\n. While I agree on moving the announcement calls to where you have put them I don't really agree with the \"art\" property that is passed along with the announcement. I'm sure it works perfectly fine for Recently Added but it doesn't fit into the current JSON-RPC API at all. For JSON-RPC it would make more sense to either provide data[\"fanart\"] = \"new/path/to/fanart\" or data[\"thumbnail\"] = \"new/path/to/thumbnail\" because that's what existing JSON-RPC methods can return as properties and what clients are used to handle.\nWhile doing that may be overkill for Recently Added (but should work just as well) I have to once again voice my opinion on the fact that I don't like that RA uses the AnnouncemenetManager which is part of XBMC's communication to the outside world. Everytime I someone touches the OnUpdate/OnRemove announcements there are either problems with RA (if the changes are JSON-RPC motivated) or with JSON-RPC (if the changes are RA motivated). Couldn't we just use a GUI message to notify RA that something has changed? At least that's what we do for everything else.\n. Looking good. Much cleaner than my approach with different parameters for where, join and order. Theoretically if we are already at it we could also cover ORDER BY (and maybe LIMIT) but this should be enough to fix the known bug(s).\nConcerning the last commit, the () are only really necessary where you manually append a partial WHERE clause to the one passed in through the filter but IMO it doesn't hurt to have them in the other places as well. We never know when we'll have to extend those and then we might run into the same problems again.\n. Looking good.\nNot sure how to handle the first issue either. If we run the thumbloader when retrieving items through JSON-RPC it will slow things down a lot but it should only really slow things down on first retrieval right? I assume this problem only exists for people who upgrade with existing libraries?\nConcerning the second issue we don't use Stat() in the webserver or any of its handlers so shouldn't be a problem.\nI'll write an image handler for the webserver which will translate received URLs into an image://-based URL and dispatch them to this new image:// VFS handler. This way we can some day drop the webserver's VFS handler and by that close a huge security whole.\n. I just looked at the code of the webinterface and it actually never url-encodes the VFS URLs it passes to http://localhost/vfs/ so that's why it doesn't work for now. By adding a simple encodeURI() around the paths retrieved from \"fanart\" and \"thumbnail\" it works perfectly fine, i.e. if JSON-RPC returns image://http%3a%2f%2fcf2%2eimgobject%2ecom%2ft%2fp%2foriginal%2ftkvBU9bwUIHv4MOc3BZuTfzKt8t%2ejpg in a \"thumbnail\" property, the webinterface will take that URL, URL-encode it (again) and will call http://localhost/vfs/image%3A%2F%2Fhttp%253a%252f%252fcf2%252eimgobject%252ecom%252ft%252fp%252foriginal%252ftkvBU9bwUIHv4MOc3BZuTfzKt8t%252ejpg\nIMO that would be the correct behaviour because calling http://localhost/vfs/image://... is not right. It sounds and looks a bit odd to url-encode something that is already partly url-encoded but that's how it should be IMO.\nWhen looking at how to implement the webservers image handler (which forwards to the VFS's CImageFile) I ran into the following problem which I would like to discuss:\nJSON-RPC returns URLs of the form \"image://\" but a call to the image handler would already look like http://localhost/image/ so having the \"image://\" in there would be kind of duplicate (.../image/image://...). But not expecting \"image://\" would mean that clients would have to remove the \"image://\" part from the retrieved URLs which is not really user-friendly either. Any ideas?\n. I also noticed something else. When retrieving artwork for music (which is not yet integrated into the texture cache etc) the URLs for fanarts look like \"special://....tbn\" whereas the URLs for thumbnails look like \"image://special%3a%2f%2f...tbn\". So either one of those is wrong and if we don't want to break backwards-compatibility (until music artwork is integrated into the texture cache) the thumbnail's one looks wrong to me.\n. For me this is the same as the invalid Content-Type header for JSON-RPC request. Sending a JSON-RPC request with a HTTP Content-Type set to \"multipart/formdata\" is simply wrong and you have to live with the consequences if the server changes the behaviour to follow the specification more strictly.\nI have a fix for the webinterface's missing encodeURI calls and I have the webserver's image handler ready to be able to handle image://- and special://-based URLs. The latter currently doesn't work because the thumbnails are returned with image://special%3a%2f%2f (as mentioned above). Should I wait for your fix or send the pull request \"blindly\"?\n. Stupid brain of mine waits till I'm in bed to remind me that I forgot to adjust the Files.PrepareDownload implementation to point to the new image handler. Will do after some sleep and breakfast ;-)\n. Good to go from my side.\n. Visual Studio throws a warning at me concerning the call to _set_se_translator in win32_exception::install_handler because the XbmcThreads project uses the /EHsc switch instead of the /EHa switch for exception handling (the xbmc project uses /EHa).\n. I can do it. Just wanted to check back first if this was unintended ;-)\n. @Memphiz: Next time if WiSo already does the work on win32 for you, it would be nice if you could include his commit in your PR. I have cherry-picked it and committed to master (see https://github.com/xbmc/xbmc/commit/b4a2dda52bd3cd4fdfa81ce59036b6c2e2bf9578 ) so that the win32 build works again.\n. That looks very much like a c&p typo I introduced in 6e367ad4debe0fa2d1152e969ded4d5e87bf5645. As I almost never use the music library I obviously didn't notice. Thanks for spotting and fixing it.\n. I have some patch lying around somewhere which includes changes from string to unicode in python methods. Will see if I can find it again.\nI also agree that it would make sense to use Py_RETURN_TRUE and Py_RETURN_FALSE instead of returning an integer value of 0 or 1 where booleans are a better fit.\n. Yeah I mis-read your comment. I was talking about other python API methods where we return 0 and 1 instead of True and False (which would be cleaner, even though the current implementation works as well).\n. IIRC my patch just contained some changes to return unicode instead of string whereever possible.\n. Fixed two PrepareSQLs I missed (thanks jmarshall) and added \"total\", \"watched\" and \"unwatched\" properties to the set's CFileItem (similar to what we do for tvshows and \"totalepisodes\" etc).\n. @elupus He described/investigatet the issue here: forum.xbmc.org/showthread.php?tid=131873\n. I like the idea in general but I don't understand why you had to move the watched/unwatched logic, which is very video-specific, from CGUIWindowVideoNav to CGUIMediaWindow. Would be nice if it could stay there as it does not apply to music or any other non-video media items at all.\n. Personally I would use method 1 as well but there were many complaints in the forums about that behaviour (which is why I added the ctime stuff in the first place). The initial implementation was method 1.\n. After some consideration I changed the default value from 2 to 1 as that's what I feel makes more sense.\n. I went through all of my commits since Eden and found a few more that might be worth backporting:\n- d5b351937a92d1dbc8976145f7a1078c54a087ad fixes HTTP requests to the webserver which contain a + in the path\n- b20f02215e0e80ba62c29289ea5f5142e56206af fixes wrong information in a JSON-RPC notification\n- 2b7a88fa3c2dd9ebbf0699121b02c152be4684f9 this one does not fix any particular problem but it might cause problems in certain circumstances\n- 5f8739199720b655acad62c98b1889045389bda8 fixes a crash when trying to start a slideshow through JSON-RPC while a video is playing\n- 784fed7118aec4ad54933633de76cd4612859d87 fixes the behaviour of \"Exclude from scan\" for video sources\n- 36323f5e1506073478aca98e3ab1e89142f1f6e4 fixes the JSON-RPC Introspect output for some complex types\n- 2e75130efa69624c7b75488a3eace9f58f8b0ee7 fixes the situation where JSON-RPC returns an artist in the list of all artists but then fails when trying to retrieve that artist's details\n- 39ef4f8b882d3f7292fd81e02d778385662fa218 fixes the situation where only one movie of a movie set matches a certain criteria (like all movies from year 2000) but when the user tries to few that list, it's empty. This one will probably not apply cleanly when cherry-picked\n- debedbc010fd6d51ad6460cbae06332dd4f438e0 fixes Playlist.Add, Playlist.Insert and Player.Open for files that are not in XBMC's database.\n5f8739199720b655acad62c98b1889045389bda8 is the only commit that fixes a crash. The others fix normal bugs as in odd/unexpected behaviour and/or wrong/invalid information.\nEDIT: I updated the list with one more commit I just pushed.\n. @amejia1 Thanks for looking into the commits I listed. I will see if I can provide you with patches that will apply without conflict for the 3 remaining commits.\n. OK here are patches for two of the commits (the one fixing the JSON schema is actually not necessary): http://pastebin.com/73QmXRj3 and http://pastebin.com/1F9ukXvL\nUnfortunately I couldn't test them (yet) because XBMC crashes on startup in Texture.cpp line 177. I'm still investigating.\n. Here you go 70ac9b987ae6986f6d681f756ae6a10fc95b30d2 and 30978d041fa7ad7a2537610bedeb4cff9ddc1d0b\n. I don't mean to be rude but most of those changes (i.e. adding m_strArtist and m_strAlbumArtist) look like they are just there for laziness. The existing m_artist and the newly added m_strArtist (same for albumArtist and m_strAlbumArtist) contain the same information just in different representations but add the danger that someone does some changes but only for one of those member variables and forgets about the other.\nThis criticism has nothing to do with the extra table you added.\nYou should also rebase your branch (git pull --rebase upstream master) and squash some of your commits (especially all the \"More references to GetArtist()\") into one commit.\n. @jmarshallnz Thanks a lot for your review and comments. I've worked through them and applied the necessary fixes and some refactoring in some places. I've pushed them as new commits so we don't loose the initial comments. Will rebase and squash once it's ready to go.\n. OK I've also updated the xcode project files but I didn't compile/test on osx/ios/atv so would be nice if someone could check if the last commit is ok.\n. This causes a problem on win32 (haven't checked linux or osx) with multi-monitor support. The problem is that the GUI settings (specifically \"videoscreen.screen\") are created before calling CApplication::CreateGUI() which makes the call to InitWindowSystem which in turn calls the code to get the available monitor information on win32. Unfortunately we use g_Windowing.GetNumScreens() when we create the GUI setting \"videoscreen.screen\" but at that point it isn't properly initialized yet so g_Windowing.GetNumScreens() returns 0. This doesn't cause a problem for the first monitor because it has the index 0 but for any additional monitor with an index > 0 the GUI settings will just set \"videoscreen.screen\" to the maximum possible value which is 0.\n. A hidden control? It's the control that is used in Settings -> System -> Video to switch between the different screens and windowed mode so it's anything but disabled. The ceiling is implemented in the control's internal logic. I can give INT_MAX a try.\n@davilla Yeah it hits every platform as long as you have more than one monitor.\n. ok INT_MAX seems to work but it's a very ugly hack IMO. We should consider that there might be similar effects in other places which just weren't uncovered yet.\n. Yup #1034. I'll close this one but thanks for your work.\n. You beat me to it. I actually started the same work as well but didn't get the time to finish it yet. Looks good to me, might be worth running it through valgrind to see if there are no memleaks but with the general cleanup() being called in operator=() the previous memleak should be fixed.\n. Just gave it a quick spin on win32. Compiles fine and menu/navigation sounds, playing a song and a movie all worked fine. Couldn't really test volume control because I use passthrough almost everything.\n. So you are against providing SendKey to e.g. open the Context Menu (by sending the \"c\" key) instead of using Input.ContextMenu or Input.ExecuteAction? I agree that Input.SendKey should primarily be used for general text input but maybe it would make more sense to implement an Input.SendText method in that case as it would cover both sending single characters and texts.\n. Currently ExecuteAction just allows all the actions that are specified in the list in ButtonTranslator.cpp (i.e. https://github.com/Montellese/xbmc/blob/fc4ad0857b43a7f4a28cff1a1ce359d2eebd4a4e/xbmc/input/ButtonTranslator.cpp#L47 ) but that's the only \"validation\" that takes place in JSON-RPC.\nI'll see about replacing Input.SendKey with Input.SendText.\n. There already is Input.ContextMenu but obviously it's a bit of a pain to add a new method everytime someone comes up with a new input action that is missing.\n. Okay I finally found the time to look into this. I have replaced Input.SendKey with Input.SendText which takes any text (with a minimum length of 1 character) and sends it via a new GUI message GUI_MSG_SET_TEXT to the currently active control. If that control is a CGUIEditControl or the dialog containing the focused control is CGUIDialogKeyboard the provided text will be set as the new text. I tested this mainly with the \"Filter\" functionality in the video library (which can be both an edit control or a virtual keyboard).\nFurthermore (as requested) I have added two new notifications GUI.OnKeyboardOpened/OnKeyboardClosed but I have to admit I'm not very happy with the naming. Better ideas are welcome :-)\n. I thought about the auto-close as well but wasn't sure what the best way was. One way would be to check what kind of dialog we currently have in CInputOperations::SendKey and execute a close on it but I don't like that because it will need extra work in CInputOperations everytime a new dialog is extended with this functionality (yeah this will probably not happen often). Another approach would be to do the close in the handling of GUI_MSG_SET_TEXT so every dialog/control can decide for itself whether it should auto-close or not.\n. Forgot one thing: I didn't extend CGUIDialogNumeric with this functionality yet because it is far more complex than CGUIDialogKeyboard. It doesn't just simply take a string, it can take a datetime (in seconds) or an ip-address (in four number blocks) or a number (as a string).\n. OK I've made the following changes:\n- CGUIDialogNumeric now handles the GUI_MSG_SET_TEXT message as well. It loops through every character in the string and if it finds one character that is not a number it will fail. If all characters are numbers it will replace the current input value with the one provided with the GUI message.\n- Input.SendText now takes an optional parameter \"done\" (which defaults to true) and closes the CGUIDialogKeyboard and CGUIDialogNumeric if set to true.\n- I renamed the notifications to Input.OnInputRequested and Input.OnInputFinished (much better than the old ones IMO) and they provide a \"type\" parameter which can be \"keyboard\", \"time\", \"date\", \"ip\", \"password\", \"number\" or \"seconds\". Furthermore for CGUIDialogKeyboard it will also contain a \"title\" parameter with the heading of the dialog.\n. Because in CGUIDialogNumber the heading is not directly available. In SetHeading() it is passed on to the CONTROL_HEADING_LABEL. I'll see if I can retrieve it from that CGUIControl.\n. Added \"title\" for the notifications from CGUIDialogNumeric as well (if available) but the implementation isn't very nice :-/\n. Yeah you are right. I'll remove the handling of GUI_MSG_SET_TEXT from CGUIDialogNumeric and will come up with a better approach for the next merge window.\n. OK I've removed all the changes done to CGUIDialogNumeric (both handling GUI_MSG_SET_TEXT and the notifications) and will come up with a better approach for that later on.\n. I added two more commits. The first one implements a new CGUIDialogNumeric::SetMode which takes a CStdString instead of a void*. Only the date and time modes need extra handling in that new implementation and I use CDateTime methods to convert the string parameter into the appropriate format.\nThe second commit adds the notifications back to CGUIDialogNumeric.\n. Makes sense to me to provide the initial value of the input dialogs. Will add later.\nConcerening the hiddenInput flag, would it be enough to change the \"type\" value to \"password\" as that's already available or  would you need some way of being able to distinguish between the password mode of CGUIDialogKeyboard and CGUIDialogNumeric?\n. Because up until my sorting re-write there were different implementations for those (there are still the enum values SORT_METHOD_VIDEO_RATING and SORT_METHOD_SONG_RATING). I guess this was done because e.g. song duration is in seconds (as an integer) while video duration is in a string. The new implemention just has SortByTime and SortByRating and handles those differences internally. The list of sorting possibilities in JSON-RPC is a copy from the sorting methods SORT_METHOD_FOO.\n. I'm all for unifying those if possible. Like I said currently there are two problems:\n1. Removing the old SORT_METHOD_FOO will mean changes in the view database and everyone would probably loose their views. Furthermore these are also used in python scripts as constants so it would break python scripts as well.\n2. Changing them in JSON-RPC will break backwards-compatibility with clients. But if we have to break backwards-compatibility at some point for JSON-RPC anyway, we can also change these.\n. I noticed that with moving the sorting and limiting into the database we lost the information on the total number of items for a query. For json-rpc requests which return a list of items we always return the values \"start\", \"end\" and \"total\" where \"total\" must be the total count of items. This is necessary to implement pagination to know how many pages are needed when splitting the list. This was fine up until now because json-rpc always retrieved all items and then did the limiting itself so it always knew the total count. Now that the limiting is done in the database, JSON-RPC doesn't know that information anymore. So I had to add some extra logic to the GetFooByWhere methods in CVideoDatabase and CMusicDatabase which retrieved the total count if there was some limiting applied. A simple CDatabase::GetSingleValue(\"moviesview\", \"COUNT(1)\") call in JSON-RPC isn't enough because in some cases we have some conditions like \"get all movies with genreid = xyz\".\nI removed this PR from the July window until I get another \"all good\" on the new changes in 3b60983d80d060b0acda1bb9b96f1e11375370f8 (VideoDatabase.cpp) and fbc612f7593f4384262fbabe64bce8b8dfd40e60 (MusicDatabase.cpp). Thanks.\n. @jmarshallnz Thanks for the input on the total value retrieval. I've re-written the code based on your comments and it's a lot cleaner now.\n. Yeah I'll remove that overloaded version of SetSelected().\n. @jmarshallnz OK I fixed everything you could find. Thanks for looking into it.\n. OK I've pushed a few changes/fixes (as extra commits which can be squashed later on):\n1. I removed the last commit about the view states as it is not correct and will take more time to look into.\n2. I've added a comment in CGUIInfoManager concerning the retrieval of addon information and not checking whether the addon is disabled or not.\n3. I've removed CMusicInfoTag::GetArtistId() as requested.\n4. I've moved the calls to CVideoDatabase::GetStreamDetails to CVideoThumbLoader. During some of the test I ran when I re-wrote the sorting implementation I noticed that about 20-30% of the time needed to retrieve a list of movies is caused by retrieving the streamdetails for all the movies. So this might speed things up a bit. It would replace the commit about removing an unnecessary call to GetStreamDetails when retrieving movie sets.\nStill open are the discussion on database updates and on the season/show thumb in recently added episodes.\n. @jmarshallnz I saw you comment in the thread about ShowThumb and SeasonThumb for recently added episodes and added a commit that removes those two for now. With that we can also get rid of the optimizations I came up with for that part.\nThat mainly leaves the database update procedure to be optimized in this PR. Should I remove that commit (because it will be fixed later on) or should I add the necessary locks around my optimizations or is there a specific plan on how to do it?\n. AFAIK you don't have to play a video file you just have to view a GUI listing which contains the file and then XBMC will automatically read the streamdetails (codec, resolution, ...) of the video. AFAIK it has never been the way that XBMC grabs this information during the scanning process (don't know why though).\n. @jmarshallnz I've re-added the ShowThumb for recently added episodes (and squashed it with the commit that removed it) and I've added a lock to CDatabase::UpdateVersion()\n. So do we want to wait till someone has the time to come up with a proper fix for the database update or should I rebase & squash the commits so they can be merged?\n. OK I've rebased and squashed the commits. There were a few conflicts in RecentlyAdded.cpp (see https://github.com/xbmc/xbmc/commit/27e3814a0db2535b3bef2662cb7da5c27ee009a4#commitcomment-1544120) so I'll wait till that's settled.\n. Okay I rebased again. I had to re-arrange the optimization for retrieving cover and fanart of albums in recently added album songs because the code changed from manual lookups to calling CMusicThumbLoader::LoadItem.\n. I don't really care whether we keep the season art/thumb or not. Personally I'd always prefer to see either the tvshow thumb or the episode thumb and never the season thumb in recently added episodes but I guess that comes down to personal preferences.\n. OK I re-added the SeasonThumb for recently added episodes and removed that one query for the albumid as it will never be executed anyway.\n. Seeing that you have started working on the real db update fix should I remove that optimization from this PR to save you a rebase?\n. The reason I put all the \"New tag...\", \"Add movies\" and \"Remove movies\" into the tags node is because I didn't wanna put any more buttons/context menu entries into the movie view. There the context menu is already too full as it is. I agree that the more common use case would be for someone to look through his movie library and then think \"Ah this movie could be tagged with foo and bar\" and would want to do that right from where he is.\nBut at the beginning when there are 0 tags it might be faster to be able to create a new tag and get prompted with a list of all movies and then you can quickly go through it and add matching movies. If later on you notice that you missed one you could still add it.\nTags, sets etc can already be manipulated over JSON-RPC but there is one problem (especially for tags): it is not \"additive\" or \"subtractive\" i.e. you always have to retrieve the existing list of tags/sets, then add/remove items and pass that to VideoLibrary.SetMovieDetails. While this is easy enough for clients to implement, when done wrong the user will loose all his/her tags/sets/... except the new one(s).\n. OK I have re-written the current logic to be more or less media type agnostic i.e. no hardcoded movie support. Both the \"tag\" (so that tag name uniqueness checks only apply within a certain media type) and the \"taglinks\" table have a \"media_type\" column and all the context buttons etc determine the current media type based on the current path.\n. OK I have updated the code. I removed the media_type column from the \"tag\" table and replaced it's functionality with sub-queries. Furthermore I have updated the (UNIQUE) INDEX queries and tested them with EXPLAIN QUERY PLAN and they are being used as expected.\n. And there are the updates of the xcode project files ;-)\n. Nobody talked about removing movie set support so not sure what you are talking about or what your concern is. Movie sets will stay in XBMC but they will most likely be limited to one set per movie so so \"Batman\" can't be part of both a \"Batman\" and a \"DC Comics\" set. Instead you can e.g. put it in a \"Batman\" set and add a \"DC Comics\" tag to it. And the TMDB scraper will still scrape the movie set information from TMDB and we talked to the TMDB admin and he assured that TMDB will always only support one set per movie.\n. These are not hotlinks, these are tags. You can add as many tags to a movie as you want (although currently it only works the other way around in the GUI because you can only add movies to a tag). Linking between different media items is something completely different.\n. Concerning idArtist in CMusicInfoTag et. al.: I added this specifically (on requests from JSON-RPC client developers) because it is the only way for JSON-RPC clients to cross-reference artists, albums and songs short of looping through all the albums and checking if an artists name is part of an album's list of artists. As an example if XBMC starts playing a song it sends an announcement with the songs ID. The JSON-RPC client can then call AudioLibrary.GetSongDetails and will be able to retrieve the albumid and (primary) artistid belonging to this song. Without the artistid, the client has to call AudioLibrary.GetArtists to retrieve a list of all artists and cross-check their names with the list of artists returned for the specific song (which is obviously more difficult to implement and also slower because of the extra request and the cross-checking. So this would break backwards compatibility with JSON-RPC as published in Eden (which is bound to happen in pre-Frodo) but not because there's an easier/better way to get the same thing done.\nIs there any benefit in removing it or what is the motive behind it? (I'm guessing it's because there can be multiple artists linked to an album/song).\n. Concerning JSON-RPC: IMO it's not absolutely necessary to provide the IDs of the artists as long as there's a way to retrieve the artist based on a song/album (which could be done by adding parameters \"songid\" and \"albumid\" to AudioLibrary.GetArtists). I don't develop any JSON-RPC client myself so sometimes it's hard for me to say/know what all the clients out there do. Maybe ask joethefox if/how he handles this in the official iOS remote app? Not sure if freezy3k is still working on updating the official android remote to JSON-RPC.\nAll in all it sounds like this will break backwards compatibility to Eden one way or another. If so we might wanna consider also removing some of the other hacks we put in place to keep backwards compatibility.\nConcerning making those types into an enum. I first considered that as well when the video thumb stuff was merged but although it's easier to have enums in the code (because you can use switch statements and there's some compile-time checking) but it also makes it less flexible. Sure you can add a new enum value when you have a new type of media but if we ever move towards a more flexible database layout (which would e.g. allow singles, compilations, soundtracks, concerts etc) those types could actually be defined in the database without having to change the code. But that's far off so just wanted to throw it in ;-)\n. Concerning GetArtistsNav I told night199uk to add idAlbum and idSong there because that's how it works almost everywhere (e.g. GetMoviesNav etc). Generally I want to avoid having to put some SQL anywhere in JSON-RPC (for that matter anywhere outside the database classes) so GetArtistsNav seems to be the best fit because we already do some SQL-based filtering there.\nThe main problem is that JSON-RPC clients can provide more than one filter i.e. they can provide both a \"genreid\" and an \"albumid\" but GetArtistsNav will only use one of those (in this case \"albumid\" takes precedence over \"genreid\"). The same applies to a lot of the other GetFooNav methods in the database classes. My suggestion is to remote those parameters and replace them with a \"filter\" parameter which can be defined to either take a \"genreid\" property OR an \"albumid\" property OR a \"songid\" property and so on. The same could be done for all the other JSON-RPC methods that read from the database. It has the advantage that JSON-RPC will restrict the user from doing something that doesn't make any sense + it's easier extendable in the future (e.g. with filtering support through XSPs). As usual the disadvantage is that this will break backwards compatibility but if there will be more structural changes to the music database I guess it can't be avoided anyway.\n. There seems to be a problem with data read through taglib which is not UTF8. The data is stored untouched in our database but xbmc always assumes that all data in the database are UTF8 which results in the GUI not being able to display those labels properly and JSON-RPC returning mixed charset data.\n. It is not, it needs to be converted to UTF8 (if it isn't already) before storing it in the database. There are methods for that in xbmc/utils/CharsetConverter.h/cpp which can be used through the g_charsetConverter global.\n. Does this replace #1072?\n. Looks good and as I merged those db_optimization commits you will be able to rebase them away (got me confused for a minute when I looked at the whole diff of the PR).\n. There will be more queries for the tvshow_thumb because it is done in the thumbloader for every episode. But there were only few queries that could be saved in recently added episodes (compared to recently added album songs).\n. If you look at the changes made to CSmartPlaylistDirectory in this PR you'll notice that the Filter object being passed to CVideoDatabase::GetSortedVideos is an empty object. The whole smartplaylist filter is passed in using the path and then CVideoDatabase deserializes the smartplaylist filter from the path/URL and calls CSmartPlaylist::GetWhereClause() to retrieve the actual SQL WHERE clause for that specific filter.\nWhat I don't like about this approach is that CVideoDatabase needs to call/use CSmartPlaylist. Ideally all the SQL stuff would be located in CFooDatabase but then again CSmartPlaylist::GetWhereClause is rather complex and deserves its own method.\n. OK I have made some fixes based on the comments and I've added a new utility class CUrlOptions from which CDbUrl now derives to do the URL options handling. It is also used in VIDEODATABASEDIRECTORY::CDirectoryNode and could probably be used in other places as well but that's outside of the scope of this PR.\n. I have extended this PR by adding the same functionality for musicdb:// URLs that were already present for videodb:// URLs. For that I also had to include the commits from #1151 into this PR as the musicdb:// changes need those. Generally it's exactly the same for musicdb:// as for videodb://.\n. Yeah I thought about that as well. Either way I'll have to rebase so I'll just wait until I pulled in the other PR and then re-do this PR to match it.\n. This is now part of #1150\n. Please create a bug report ticket on http://trac.xbmc.org. We don't handle bugs on github.\n. I agree on the general purpose. Take a look at what @elupus said (that's why I never use \"git commit -a\") and at my comments and do the necessary changes.\n. Now you just need to squash the commits into a single one (git rebase -i HEAD~3 and change the \"pick\" to \"squash\" on the second and third commit) and once done you can force push the squashed commit. Let me know if you need more help with that.\nThe \"1\" files come from the batch files for getting the mingw environment and building ffmpeg. You can just delete them so they don't bother you anymore.\n. You can do a force push (only EVER do this in your own repository) with \"git push -f origin master\".\nBtw ideally you should create a new branch (git checkout -b some_name) for every feature/PR you want to work on. That way you can keep your master branch in sync with xbmc's master branch and you can have multiple PRs active at the same time. But that's just for next time.\n. Hm in that case something didn't work out as it should. I never used tortoisegit so I don't know how to do it there. If you do a normal push (git push) it will fail with an error message telling you that a forced push is required. A forced push can be done by adding the \"-f\" option (on the command line that is) and in the output of the command it should show something like \"(forced update)\".\n. I got no clue about curl so can't comment on that but the changes in CVideoDatabase make sense.\n. I removed CVideoDatabase::AddSetToMovie and integrated that functionality directly into the UPDATE query in CVideoDatabase::SetDetailsForMovie().\n. Looks valid. Thanks.\n. What do you mean with CVariant -> CVideoDbUrl? That \"genreid\" is automatically stored in the CVideoDbUrl? Well in this PR there's no CVideoDbUrl yet because that will be introduced with another PR. We'll probably have to discuss where/how we want to handle injecting those options into CVideoDbUrl. Doing in CVideoDatabase::GetFooNav() has the advantage that the rest of the code doesn't have to know how the filters have to be named.\n. I've gone through the code even though I agree with TheUni, Martijn and t-nelson. First of all it should be impossible for XBMC to delete a file if a user has the \"filelists.allowfiledeletion\" disabled, no matter what a JSON-RPC client requests. Second of all I completely agree with TheUni that it is a high risk to allow this at all. On one side there could be malicious JSON-RPC clients but on the other hand (and probably the much bigger threat) there can be buggy JSON-RPC clients which delte files unintentionally.\nA year or so ago I worked on a concept where every JSON-RPC client first had to authenticate himself to an xbmc client by calling JSONRPC.Authenticate and providing a client ID, a name and a list of permissions it needs to run. Then the user of xbmc was prompted with a dialog and had the choice to allow or reject the client (based on the permissions). That way there is a way for users to control the access of JSON-RPC clients. But I never came around to finish that work so far but I haven't given up on it yet. The problem with your implementation would be that VideoLibrary.RemoveFoo would need a permission \"Delete File\" and personally I'd reject any client that would request this permission. A better approach would be to have Files.Delete() which would have the sole task of deleting a file and would require the \"Delete File\" permission. That way VideoLibrary.RemoveFoo could still be safely used without the \"Delete File\" permission. But that will only be relevante once such a permission system is in order. Until then I vote against adding any file-deletion feature.\n. Apart from that one change I commented on it looks good.\n. I put the [win32] in front of it because those are warnings I saw on win32. No clue if they appear on linux/osx as well ;-)\n. Thanks for the quick fix.\n. Once that last problem in dll_dlopen is fixed win32 will be all set.\n. Yup compiles fine now on win32.\n. Looks like I was a bit lazy. Thanks for the fix.\n. The implementation looks good but I haven't checked if you have covered all the possible ways to manipulate a playlist. Furthermore there are no notifications when a picture playlist (i.e. a slideshow) changes because all that is handled in CGUIWindowSlideShow.\n. I went through your changes and apart from the stuff that I mentioned they look fine. If you can find the \"motivation\" it would be nice to split up the Player and Playlist notifications in CGUIWindowSlideshow and merge the Playlist notifications with the first commit and keep the Player notifications for slideshows in a seperate commit.\nIf you can get the things I mentioned done and the commits rebased I'll assign to the october merge window. Thanks.\n. Yup, assigned to October window. Will merge somtime this week. @koying thanks for doing the work.\n. I just realized that you did not apply your changes in the JSON schema files to xbmc/interfaces/json-rpc/ServiceDescription.h. Please remember to do that next time.\nFurthermore there is an error in types.json. I'll fix it ASAP.\n. I extracted the changes to SmartPlaylist.cpp which were actually fixes for existing bugs (which nobody noticed so far it seems) and already pushed them to master.\n@jmarshallnz or @night199uk could one of you shed some light on the implications of enabling/disabling \"include artists who appear only on compilations\"? Does it change the way the scraper works (i.e. it ignores those artists if enabled) or does it only change the way the SQL queries in CMusicDatabase::GetArtistsNav work (with the albumArtistsOnly parameter)? If the former holds true the \"compilation artists\" rule I added does not make any sense otherwise IMO it does.\n. It's not an advanced setting it's a GUI setting in Settings -> Music -> Library. I always keep it disabled to get a clean list of artists but if I understood @night199uk right he plans to improve scraping/organization of all those \"Foo feat. Bar\" so it might make sense to just keep it on the SQL level i.e. grab the information for all the artists but in Music -> Artists only show the album artists. Then maybe add a new node Music -> Compilation artists where only those artists are shown.\nThinking about it I'll remove that rule/filter because I have neither the understanding for it nor the items/database to actually test it.\n. @night199uk: I've removed that part for now because I can't test it anyway. I was also confused by boolFeatured and bCompilation so I can still add it back once your musicdatabase changes/refactor have been merged as well.\n. @cptspiff Thanks for the review and for spotting that oopsie. I fixed the issues you pointed out.\n. If it's about getting rid of CStdString, check https://github.com/Montellese/xbmc/compare/master...die_cstdstring_die ;-) Not sure if it makes a huge difference here just for the map...\n. We do not take bug reports on github. Either create a bug ticket on Trac or post it in the forums.\n. I managed to support recursive JSON schema type definitions. With this it's now possible to create XSP-based filter objects of virtually any level of complexity. You can e.g. have two rules ORed together in an AND block together with another rule as in this example\n\"filter\": {\n  \"and\": \n  [\n    { \"or\": \n      [\n        { \"field\": \"genre\", \"operator\": \"is\", \"value\": \"Action\" },\n        { \"field\": \"genre\", \"operator\": \"is\", \"value\": \"Adventure\" }\n      ]\n    },\n    { \"field\": \"year\", \"operator\": \"is\", \"value\": \"2011\" } \n  ]\n}\nWhich would return all items (e.g. movies) which were released in 2011 and have Action or Adventure (or both) as a genre.\n. I've added extended filtering to AudioLibrary.GetArtists as well. Furthermore it is now possible to define a single filter rule without having to wrap it in an \"and\" or an \"or\" object which is much more intuitive (and has already been requested in the forum).\n. I simply adjusted it the way it works with GetTime(). IPlayer::GetTime() returns milliseconds and CApplication::GetTime() returns fractional seconds. As GetTime() was not broken but GetTotalTime was, that's the one I fixed. @cptspiff said on IRC that milliseconds resolution would be preferred over seconds resolution.\n. Agreed.\n. It already is documented but only in Application.cpp and not in Application.h. It says\nReturns the total time in seconds of the current media.  Fractional portions of a second are possible - but not necessarily supported by the player class. This returns a double to be consistent with GetTime() and SeekTime().\n. I added a doxy description and a warning that these methods in CApplication and IPlayer do not return the same values to Application.h. Everyone satisfied now?\n. @huceke Thanks for the reminder. Updated AMLPlayer as well.\n. OK I've taken a look at the values returned for TouchMinor on my SGS2. With a normal touch I get a value of around 60 - 65 but that value can go up to 120 - 140 by e.g. putting the whole thumb on the screen or can go down to 24 by just using the very tip of my finger.\nI also applied your patches but I have to admit I didn't really notice much of a difference. But testing this on a phone is probably not the best idea anyway but that's all I got available.\n. Not sure. One of the event methods in CXBMCApp might be suitable but they can all be called more than once during the apps lifecycle so there'd need to be some check if the value has already been initialized.\n. BTW I just checked, the Nexus 7 has a pixel density of 216 ppi and the SGS2 217 ppi so the scaling of the screen size kinda matches the scaling of the resolution.\n. Would be nice if we could find a solution for this so that it will make it into the next merge window. The best spot I can think of is right after getting the handle to the actual window from NativeActivity and passing it on to XBMC because then we can be (relatively) certain that the window and it's configuration exists.\n. I should be able to find a few minutes to look at it this week.\n. I've taken a quick look and made the following changes: df47b878a9b69d79d3a3874b6729d2136c987d21\nI wasn't able to test them yet but will ASAP. @theuni would you be ok with this approach instead of doing it in android_main()?\n. OK gave it a quick test and it works as intended.\n. Replaced by #1483 so I'm closing this one.\n. CGUIWindowVideoNav::LoadVideoInfo() does some extra stuff but I guess most of it could be integrated into CVideoDatabase::GetFileInfo().\n. @night199uk @cptspiff I can't see the original comments/remarks but this looks good for merge now?\n. Why only for posters? Shouldn't it be the same for all the other \"views\"?\nPS: No bug reports on github. Next time please create a new thread in the forum (http://forum.xbmc.org) or a bug report on trac (http://trac.xbmc.org).\n. Looks good except for the comment.\n. You beat me to changing recently added from a folder into a filter (I have the same patch lying around somewhere). Any reason why we still need to keep the DirectoryNodeRecentlyAddedFoo.* files in xbmc/filesystem/VideodatabaseDirectory?\nThe changes look fine to me. I can give them a test run later to see if there are any obvious bugs.\n. Ah you're right, forgot about that. In that case we better leave it in for now.\nI did some work on grouping support in playlists anyway which might render most of the DirectoryNodeFooBar files unneeded anyway. But that's most likely for Frodo+1.\n. Ok gave it a quick spin and didn't spot anything obvious. Only thing I was wondering about is that the \"In progress TVShows\" node shows up in the video library node and not under tvshows. IMO it looks a bit odd there.\n. I don't really care as I'll probably never use it anyway. I also never go into Videos -> Library except during debugging/testing.\n. Thanks for the hint. Fixed in 80e0e0286f4ebb4f2db5b366c321a5a45f74332b.\nFor the future, we don't take bug reports on github. Either provide a pull request with the necessary changes applied to the actual code or create a bug report on trac (http://trac.xbmc.org).\n. Just looked through some of the commits and added some comments. The second commit (merge-commit of upstream/master) has to go otherwise this will never be merged. Generally this looks like it contains a lot of valid fixes for potential problems.\nLooks like there are several fixes involving CRegExp::GetReplaceString because it mallocs a char * in the method which needs to be freed outside of the method. Would it make sense to instead change GetReplaceString to return an std::string and do the call to free() inside GetReplaceString? Sounds more fool-proof to me.\n. Btw was it a forced push? Because then we'd need to check whether you overwrote some previous commits or not.\n. @cptspiff that's exactly how I have my repos set up as well. I usually always work in my working repo (unless it's a very easy fix) and there I can't push to upstream either.\n. Nice work on this. Congrats.\nWould it be possible to take out the PVR-specific additions to JSON-RPC and do them in a seperate PR. I currently don't have the possibility to test them and I don't want to stall the whole PVR stuff from going in just because of things I'd like to do differently in the JSON-RPC API. But I also don't want to add a new set of methods and then change it again a week or two later.\nIf it's too much hassle to take it out and do a seperate PR afterwards I'll just fix it up later when I got time. AFAIK you didn't write that code yourself either so you won't be the right person to answer my questions on it.\n. @opdenkamp Thanks for the reverts. The project files (VS and XCode) will need updating (i.e. remove the previously added xbmc/interfaces/json-rpc/PVROperations.h/cpp from the project files) but that shouldn't be a big deal.\n. Enabling the Issues section is the only way to be able to use milestones and labels on PRs. So it's more of a limitation from github than anything else.\n. The first commit isn't really the issue here, the second commit is. I just changed the endl because IMO writing \"\\n\" everywhere is more of a hassle but I don't really care.\n. While I agree that the code looks good I think the better approach would be to use a file without newlines. Or do we specifically want those in there to also cover them with the unit test?\n. So how should I proceed? Rebase and merge or replace the file and the implementation with one that doesn't contain any newlines?\n. I don't follow.\n. @Martijn: AFAIK you can uninstall any addon independent of whether it's a dependency of another addon.\n@dersphere: And how does showing a notification during installation help me remember a year later that youtube addon requires Common Cache Plugin? It's not like showing the notification will make sure that you don't uninstall it by accident. For that we'd need some kind of message that warns you that uninstalling addon X might break addons Y and Z because they depend on it.\n. Closing as there are too many -1s (although there are as many +1s).\n. @ronie: Thanks a lot for taking the time to test this. You're the first person to provide any real feedback and I'm grateful.\n- Yup that seems to be borked because of some other changes I made in master to smartplaylists. I just fixed it locally. Will push the fix soon.\n- Hm I have discussed this with jmarshall and we decided that hitting back on a filtered list should remove the filter. Here is how it works for me when using the Backspace key: filtered list -> unfiltered list -> home screen. And when using the ESC key: filtered list -> home screen\n- That's because it isn't supposed to. XBMC decides for each view whether to show the old filter button or the advanced filter button so it's not really a breakage. I added the advanced filtering as a new button because it can be represented with an additional checkbox which indicates whether the current list is filtered or not. So skinners will have to add the additional button (id = 20) for the advanced filtering and XBMC will take care of which one to show and which one to hide. I don't really know anything about skinning so if that's not acceptable let me know.\n. Damn sent to early. Now I was able to reproduce your description of the navigation. If you filter a list, then press ESC to get back to the home screen and then go back into the list it goes like this:\nfiltered list -> ESC -> home screen -> Enter -> filtered list -> Back -> root of movie lib -> Back -> filtered list -> Back -> root of video lib -> Back -> Home\nVery odd. I'll have to look into it. What would you expect to happen with the filtered list when you hit ESC? Should the filter still be applied next time you enter the same list or should it be discareded and show the full list again? I guess these kind of behaviours need to be discussed a bit more.\n. I pushed an update which fixes the \"Clear\" button not working and which also fixes the odd navigation issua ronie pointed out.\n. After talking to @ronie and @cptspiff about how to integrate the old filtering and the advanced filtering into skins we realized that we can't get away with using the same button for both the old and the advanced filtering. On request of cptspiff I've added 3 new info booleans on Container level: Container.CanFilter, Container.CanFilterAdvanced and Container.Filtered which can be used by skins in visibility conditions for the two filter buttons. Furthermore the advanced filtering functionality is no longer tied to a specific button/control ID but can be triggered using the new \"filter\" action (which will either bring up the dialog for the old or the advanced filtering).\n. And yet another update. I've known that staying on the currently selected item when changing a filter wasn't working because when changing the filter the path of every item changes (it always contains the current filter) but we use the path to identify the currently selected item. I added some code that should take care of this problem so when you filter (or clear a filter) it should just stay on the same item (unless the item doesn't match the filter anymore).\n. @jmarshallnz Would be grateful if you could take a look at the code as you were/are the mentor of my project and let me know if it's ok for October or not (obviously after a rebase).\n. Rebased onto latest master.\n. Once again rebased. Still waiting on final review and/or \"good to go\".\n. OK I have squashed the fix commits into the original ones (except for the ACTION_SELECT_ITEM one) and rebased onto latest master.\nThere are two things left to do:\n1. Decide how to do the navigation between the two sliders/range selectors in the CGUISliderControl. The two options right now are either using Select/Enter/OK to switch between the two sliders which has the advantage of being able to get to the next/previous filter options without any extra clicks but requires an additional button, or to use the move up/down button to switch between the two sliders which has the disadvantage of requiring an extra button press to get to the next/previous filter option but doesn't need any extra buttons.\n2. Update Xcode project files for OSX.\nAny opinions on what is more intuitive for the navigation within the slider/range selector? My initial implementation followed the second option i.e. doing everything with \"move up/down\" keys and I've used that for a while now so I can't really judge if using Select/Enter/OK is more intuitive/easier to use.\n. @ronie While I think your idea makes it far more obvious how to use it, it requires more clicks in general to move the correct slider in the direction you want i.e. if you want to move the upper slider further up you first have to press 3 times to even be able to do that.\n. OK jmarshall and I have decided that we will use the Select/Enter/OK button to switch between the range sliders for now as it requires less special handling. I have squashed that commit into the CGUISliderControl commit and everything should be merge-ready now. Anything else to squash down?\n. Looks alright to me :-P Thanks for the report, I'll look into it.\n. I checked all the addons I have installed (very few) and I only found two settings using a slider, both from screensavers (with a percentage value) and they work perfectly fine for me. Could you provide me with whatever addon shows that problem for you?\n. Yeah I'm aware of the issue and have already fixed it locally. Still testing if there's any other odd behaviour because of the fix.\n. I have to look onto the thumb loading (again).\nConcerning toggling Group in Movie sets this has been a bug in mainline ever since that feature has been added but I only noticed two weeks ago. Tbh I forgot about it. The problem is that we don't reset the cache for movie lists when that setting is toggled.\n. Fixed the artwork problem (see cadede2307758158bbb421d61a9e3367b6d3a3b2) although it had nothing to do with this PR but with @jmarshallnz artwork changes. Don't go blaming everything on me :-P\n. And 05593e49462f758771c8845d95cd2764a9cc2907 takes care of the issue when changing the \"Group movies in sets\" setting.\n. @jmarshallnz Thanks for the hint. I removed it as it's already in master anyway.\n. Apart from the cosmetics the changes look fine. Will try later after I found some panorama photo somewhere in my collection.\n. The bad indentations probably result from mixing tabs and spaces. In xbmc source code we use two spaces per indentation level.\nThis merge window (which lasts until october 10th) will be the last one before feature freeze. If it works I'll fix up the indentation and create a replacement PR for it. Otherwise I'll report back any problem.\n. Tested it with two panorama photos I made with my phone and it works. Will fix up the cosmetics later.\n. Closing in favour of #1520 which contains your changes with the necessary cosmetic fixes.\n. In general I'd prefer the Channel(Switch|Up|Down) to be integrated into Player.Go(To|Previous|Next). I'll try to find time for a more thorough review later today.\n. OK I looked through the changes and in general they look fine. As mentioned I'd prefer to have the Channel(Switch|Up|Down) to be integrated into Player.Go(To|Previous|Next). I'm not sure about the recording stuff. As it's currently only available for PVR and e.g. ScheduleRecording doesn't make sense in the Player namespace I tend to keep those in the PVR namespace.\nBtw would it make more sense to call the new namespace \"LiveTV\" instead of \"PVR\" (as that's what the english text is in the home screen as well)?\n. The current implementation uses the resolution and the language of the first audio stream to display the different versions of a movie so e.g. \"1080p (English)\" and \"720p (English)\" etc but obviously that won't work in all cases.\n@jmarshallnz: Any opinion on the general idea of grouping outside of the db? I know we discussed this once before but  maybe you've changed your opinion after seeing the implementation. I can remove the movie grouping because obviously that needs more thought and a better approach.\n. I've removed all the commits related to grouping by the same movie so that only the code for grouping by movie sets outside of the database remains. Should make it easier to review.\n. Yeah this code is from before we went the \"one set per movie\" road so once rebased and updated the extra queries to get the set's names aren't necessary anymore because in mainline that information is already stored in the movieview.\n. Based on the comments and looking at the current state of the code I think I messed up the commits when I pulled the \"group by movie\" functionality out because the original code didn't have any CGUIMediaWindow::FormatAndSort() anymore but had seperate calls Format() and Sort() and OnFinalizeItem() wasn't responsible for the filtering anymore but FilterAndGroup() was. Will have to check the original code and fix this up. Sorry for that.\n. Yup see https://github.com/Montellese/xbmc/compare/master...grouping_by_movie#diff-24 for the changes to CGUIMediaWindow in the initial form. I must have accidentally removed those changes when I removed part of the initial changes. The order should be\nGetDirectory() -> ... -> FormatItems() -> OnFinalizeItems(cache unfiltered list and don't do any filtering) -> FilterAndGroup(first do the filtering then the grouping) -> SortItems()\n. OK I have fixed CGUIMediaWindow up as it was in the original PR, fixed the cosmetics and removed the extra db lookups for the set name as it's already available in the movie's CVideoInfoTag::m_strSet. So the code is now ready for a proper review (sorry again for the mess).\nDuring my tests I noticed one thing that still needs fixing but I'm at a loss right now. When I enter the list of movies the movies are properly grouped into the existing sets but in list view sorted by name the \"rating\" value isn't displayed for the set. If I switch to e.g. sorting by year, the \"year\" value shows fine and when I go back to sorted by name the \"rating\" value is also displayed fine. This is independent of the sort method and property, it's just that when entering the list the first time the property is not displayed for sets. I've added some debug logging after the call to FilterAndGroup() and SortItems() in CGUIMediaWindow::Update() and the rating is stored in the set's CVideoInfoTag. @jmarshallnz any clue why this could be happening?\n. You're right, that's most likely it. FormatItems() is called before FilterAndGroup() (question is if it could be moved to be called after calling FilterAndGroup() which would actually allow to re-unite the calls to FormatItems() and SortItems() into FormatAndSort()) so it formats the original list of items and isn't applied to the CFileItemPtr containing the set. @jmarshallnz any particular reason why FormatItems() would have to be called before OnFinalizeItems (which essentially copies the item list to m_unfilteredItems and caches it to disc) and before FilterAndGroup()?\n. Well filtering happens through the database (except for the simple title filter (which will soon be replaced) which operates on the label but that filter is always reset before calling CGUIMediaWindow::Update()) so I don't really see any issues there. Not formatting the items which are grouped together is not a problem either because they are not displayed so no need for them to be formatted in that view.\nSure I could just call FormatItems again in CGUIWindowVideoBase::GetGroupedItems() when GroupUtils told me that the list has changed but getting the view from the database and doing the formatting is a rather \"expensive\" process (especially on embedded devices) so if possible I'd like to avoid that. And doing it in GroupUtils is out of the question as a utils method shouldn't really need to call back into CGUIMediaWindow IMO.\n. The title filter is always reset in CGUIMediaWindow::GetDirectory() which is called at the beginning of CGUIMediaWindow::Update() so at the time we do the filtering in Update() there's actually nothing to filter because it was just reset a bit earlier. I'll see if moving it past the FilterAndGroup() will cause any obvious issues.\n. I have cleaned up the necessary changes to CGUIMediaWindow and it's a lot cleaner now. But there's still one issue with the thumb of the grouped item not showing up because the thumbloader operates on m_unfilteredItems. Changing this to m_vecItems works but only for unfiltered lists. Once a filter is applied the grouped item is a new CFileItemPtr instance and therefore can't use the details of the old one from the unfiltered list.\n. OK I found the right spot to call the videothumbloader (see f7e5761) in CGUIWindowVideoBase::GetGroupedItems() which is called after every filtering i.e. both after the filtering done during CGUIMediaWindow::Update(), after using the title filter in a library view and after changing the \"Show/Hide watched\" toggle. The call to the thumbloader in CGUIWindowVideoBase::Update() could probably be removed but I left it there just in case.\n. All the thumbs for the sets are reloaded because everytime you change the list, the grouping is re-done which results in a new CFileItemPtr for any set. Any other thumbs shouldn't be reloading or rather I can't think of a reason why they should.\n. I updated this PR in case we want to go this route instead of https://github.com/xbmc/xbmc/pull/1631 to solve the problem of additional items appearing in the list after filtering.\nUnfortunately there are (at least) 3 issues I'm aware of:\n- There's no way to turn of grouping by sets for smartplaylists which would e.g. be desirable for the recently added movies list. This is already a problem in the current code and is not caused by these changes. This would probably need some additional configurable value in CSmartPlaylist to solve.\n- Sorted smartplaylists are messed up after doing the grouping stuff because the playlist order is based on the original items and the sets created during the grouping don't fit into that pre-sorted list anymore. I can't see any easy fix for this caused by the current intermediary state our sorting code is in.\n- Because lists now change on every run of Update() (as long as there are sets and grouping by sets is enabled), the list of movies jumps on every list refresh (e.g. when marking a movie as watched). The selected item stays the same but it usually jumps to the top or bottom of the currently visible area even if it was somewhere in between before the refresh. I'm not 100% how this is handled.\n. Concerning number 3 I have to admit that I'm not 100% sure what is happening. In current master when I'm in a list (filtered or not) and I mark an item as watched, all that happens is that the watched overlay appears and the selection moves on to the next item. But with this code the whole visible part of the list moves and the selection moves to the next item which is then the topmost visible item (in a vertical list) and the item that I just marked as watched isn't part of the visible list anymore.\nNumber 2 is kind of a deal-breaker here because it results in really odd results :-/ The list is already resorted after grouping but as you said, the grouped items don't match into the sort by playlist mode.\n. See https://github.com/xbmc/xbmc/pull/1692 for a possible solution for number 1 and https://github.com/xbmc/xbmc/pull/1686 for a possible solution for number 2.\n. @Voyager1 could I get you to play around with https://github.com/Montellese/xbmc/tree/grouping_outside_db? It contains all the commits necessary to get grouping outside of the db to work properly and should also fix any issues with limited lists (without any hacks like in https://github.com/xbmc/xbmc/pull/1631).\n. It makes #1631 completely obsolete as we alwaye retrieve a pure movie list so no need for any hacks and grouping is alwas done after filtering.\n. @jmarshallnz and @cptspiff: rebased and updated (had to add logic to not group movies into sets when in Recently Added Movies node).\n. OK I messed up the commit/push yesterday but reflog saved my ass. I fixed the type @jmarshallnz mentioned and rebased onto latest master.\n. JSON-RPC will soon allow you to enable/disable (no toggle right now but could be added) an addon (just haven't merged the PR yet).\n. As an FYI I've merged the PR containing the Addons.SetAddonEnabled JSON-RPC method and I added a \"toggle\" functionality for easier use.\n. Does it make sense to drop the first commit, adjust the second one and then merge those two commits?\n. IMO \"play using\" in the GUI is another use case. It only shows the players suitable for a certain file and if there's no dvdplayer it won't show as an option. So users can't really make a completely wrong decision whereas a plugin can do whatever it wants.Joakim Plate notifications@github.com hat geschrieben:Then I assume you want to remove the play using option too? Users likely\nknow even less.\nImho it would be better to just fall back to default if requested player\ndoesn't exist.\n\u2014\nReply to this email directly or view it on GitHub.\n. Which and how many use cases are there were it makes sense for a plugin to dictate which player to use? IMO if there is such a case it means that our player selection rules in core and not optimal and could be improved. DVDPlayer should handle anything that contains video and PAPlayer anything that only contains audio and if there are other players available there should be specific rules that prefer those players over DVDPlayer/PAPlayer. IMO letting plugins specify the player will only lead to problems and confusion.\n@amet: So you want to have different plugins for embedded and non-embedded XBMC installations? Good luck with that.\n. I just tested this on win32 and it fixes the tests TestFileOperationJob.ActionReplace, TestFileOperationJob.ActionCreateFolder and TestFileOperationJob.ActionDeleteFolder.\nTestFileOperationJob.ActionCopy, TestFileOperationJob.ActionMove and TestFileOperationJob.ActionDelete are still not working. I'll see if it's an easy fix.\n. OK after some investigation TestFileOperationJob.ActionCopy fails because XBMC is unable to delete the temporary file it creates during the test. It is however able to delete the copy of the temporary file. The question is whether being able to delete the temporary file is part of the requirement that the test succeeds or fails. The copy functionality works but the delete doesn't but the test is called TestFileOperationJob.ActionCopy.\nTestFileOperationJob.ActionMove fails in CFile::Rename() and TestFileOperationJob.ActionDelete also fails because it can't delete the initial temporary file (it can delete the copy of the temporary file).\nSo there seems to be a problem with the generation and deletion of the temporary file. I'm not 100% but I think the problem is that the temporary file is created by CTempFile and on creation it's opened and not closed again. So any call to delete etc will fail because there's still an open handle to that file. The problem is that our file factory does not know about CTempFile from the testing code and therefore doesn't forward the calls to Delete() etc to the CTempFile implementation.\nIf I add a call to Close() right after calling OpenForWrite() in CTempFile::Create() these tests pass but a lot of other tests fail because they probably assume that the file is open and can be read from / written to.\n. OK with these additional calls to CTempFile::Close() all the tests in TestFileOperationJob will pass: http://pastebin.com/trJpSJ8T\n. Will test when I get home. I haven't really looked at the changes you made but AFAIK FileOperationJob isn't used that widely anyway but would be nice to know that the places where it is used still works the same as before.\n. Confirmed working fine on win32. With that win32 is down to 9 failed tests (from 18 or something like that) without the tests in TestDownloadQueue and TestSystemInfo which are not built/run because they crash because of bad initialization of globals.\n. I've added two additional commits. One removes duplicate code for handling FieldInProgress for movies and episodes and the other commit addresses a rare case described by @MartijnKaijser in the recently added support for FieldInProgress for tvshows where all episodes have a playcount of 0 (and therefore the watchedEpisodes property of the tvshow is also 0) but a single show has been partially watched.\n. Ah that's not really an error or let's say it's not something that influences the outcome of the sorting. But I'll fix it up in master so that the log message is only shown when really necessary.\n. OK I've added CUtil::GetRandomNumber() which uses rand_s() on win32 and rand_r() on anything else. I've only compile-tested (no runtime test done yet) this on ubuntu so far and will test it on win32 at home but not sure if rand_r() is also available on osx and freebsd? It should be in stdlib.h if it's present.\n. My initial approach for win32 didn't work out. I had to put #define _CRT_RAND_S which is necessary for rand_s() to be available from stdlib.h into the pch header file.\n. I updated the Visual Studio solution by removing the libid3tag projects and the deleted files. Furthermore there is one additional fix necessary in cddb.cpp which is not win32 specific (which is why I put it in a seperate commit so you can squash it into your other commits). You can grab the two commits from https://github.com/Montellese/xbmc/compare/master...taglib\n. Based on @jmarshallnz comments I pushed some changes (which can be squashed later):\n- remove AppendFormat(V) as it can be done with += Format()\n- fixed implementation of Right()\n- removed Remove() as it can be achieved through Replace()\n- split Equals() into Equals() (case sensitive) and EqualsNoCase() (case insensitive)\nunit tests are in the works ;-)\n. And there are the unit tests. Thanks for reminding me @jmarshallnz \n. The new methods do not depend on anything except string but the rest of StringUtils depends on CStdString and probably also other stuff in xbmc.\n. Unfortunately removing CStdString is not that easy. We rely on it (especially CStdStringW) for unicode stuff and localized sorting etc. That being said it would be possible to get rid of CStdString from StringUtils but the StringUtils implementation also depends on some other utils classes/implementations (haven't check their dependencies though).\nThis PR is just meant as a first step towards allowing people to use std::string instead of CStdString in certain situations where this was a bit cumbersome in the past.\n. I don't have any problem with dropping Equals(). It's just for convenience as with std::string::compare() you have to remember to write == 0 for equality.\n. This PR has Equals() (case sensitive) and EqualsNoCase() (case insensitive) to avoid confusion.\n. I also argued that the behaviour of Equals() would change but @jmarshallnz said that now's the chance to change the behaviour. Furthermore StringUtils::Equals() doesn't automatically replace all the usages of CStdString::Equals().\n@elupus: I think you mixed up insensitive and sensitive. compare() and == do a case sensitive comparison so having a way to do a case insensitive comparison (which we use all over the place because CStdString::Equals() does it that way by default) is certainly not pointless.\n. You wrote \"Also isn't case insensitive equal rather pointless\" which is why I was confused. I don't really care how we name the methods. As we seem to use case insensitive comparison everywhere and changing that will most likely break any number of things it might be better to keep the current naming (i.e. Equals() for case insensitive).\n. So seems like we all agree that we don't need a case sensitive version of Equals in StringUtils as it can be done with == or std::string::compare() == 0 so the remaining question is, should the case insensitive version be named Equals or EqualsNoCase (to make it more obvious).\n. OK I've removed StringUtils::Equals (and the corresponding unit test) so now there's only StringUtils::EqualsNoCase() which replaces the default behaviour of CStdString::Equals(). Anything else or is this good to go in?\n. Yeah this basically behaves the same as CLog::Log which would also blow up when passing in a std::string directly instead of calling c_str() on it.\nPS: CStdString::Format() isn't 100% safe either. If you pass in a std::string as the 18th variable argument it will blow sky high as well. Obviously passing so many arguments is rather unlikely but it can kinda provide a false sense of security as it usually works but then boom! it will blow in your face.\n. I'll add a doxy comment to make it more obvious.\n. This does not exactly the same thing as on other platforms but I'm not sure how to handle it best. Calling srand() with the same number for every call to GetRandomNumber() will always result in the same number being returned from rand(). Calling srand() with time(NULL) as an argument would probably work but the numbers generated in sequence aren't really random either because there's a different seed for every number. And if multiple calls to GetRandomNumber happen within the same second we have the same problem that all the numbers returned by rand() will be the same.\nThe problem is that srand() and rand() are thread-local and GetRandomNumber can be called from different threads. I'm not sure myself how to solve this.\n. You learn to live without it and use the filtering provided by JSON-RPC in methods like VideoLibrary.GetMovies et. al.\n. We've discussed this internally. The official android remote is already partly broken because of database layout changes in xbmc itself e.g. tvshow section doesn't work anymore. freezy said he'll try to get it fully converted to JSON-RPC ASAP.\nAnd the thumbnail thingy has nothing to do with the HTTP-API.\nI've asked @cptspiff and he said to rip it out so I made this PR.\n. I agree with @jmarshallnz IMO it's easier to type on your phone and also look at your phone to see what you are typing than typing a character on the phone, then looking up at the tv screen to check if I made a typo and then look back down at the phone and type the next character. Just showing the typed character on the phone screen and being able to see and fix any typos there sounds a lot easier to me.\n. I think the way @RobertMe has pointed out should work for most of your use cases except for the ones where the user wants to move the cursor to fix something which will require a local edit box.\nWhile you are right that I don't look at my keyboard while typing, this is a completely different use case. When using a computer, I watch at the screen because that's where all the information is. When using my phone I look at my phone's screen because that's where the information and input functionality is. So when I use my phone to type something I look at my phone and not at my telly.\n. This is a discussion place for XBMC development, not for third party support. Ask your question in the forum or check the JSON-RPC v5 wiki page for a list of all the available methods.\n. I don't have any archives so I don't really know how these work. Do you have an example. The same problem probably applies to stacked items but in that case the stacked files could just be accessed separately?\n. OK I pushed another commit which will handle rar:// and zip:// paths by using GetHostName() on the original path in the VFS handler. Furthermore I have extended URIUtils::GetRealPath() to also process the hostname and not only the file path.\nI haven't tested this yet but will do later.\n. Confirmed working for zip and rar files.\n. @jmarshallnz I've taken care of all your comments i.e. added some doxy for URIUtils::GetRealPath(), removed those stupid whitespaces from the empty lines and added recursive behaviour in case of rar/zip paths within a rar/zip path (and also added a test for that in the unit test).\n. @jmarshallnz I've moved the CURL::Decode logic and IsInArchive check into GetRealPath as it only applies to rar/zip paths within a rar/zip path and therefore only needs to be done for filenames and not for hostnames.\n. I thought it would be rar://< encode(/path/to/rar.rar) >/< encode(zip://< encode(/path/to/rared/zip.zip) >) > (which is why I applied it to the filename/path) but I don't really know either. I'm sure @cptspiff can shed some light on this.\n. @elupus The recursing happens by calling GetRealPath recursively. I first tried without the calls to Decode and Encode and then it didn't work so I added them. The problem is that you get a double-encoding for an \"embedded\" rar/zip URL: one to encode the whole \"rar://\" path and one encoding for the actual path to the rar so. GetHostName() takes care of the first encoding but not of the second.\n. @elupus Ah I thought a rar file within a rar file would be represented by an embedded \"rar://\" URL as well. Seems like this is not the case.\nAnd no libmicrohttpd url-decodes everything that comes in so we already get the URL-decoded path.\nI'll use jmarshalls code without the decoding/encoding and adjust the unit tests.\n. OK I hope I got it right now. I checked in XBMC with a test zip inside a test rar which results in a path like this:\nzip://rar%3A%2F%2F%252Fpath%252Fto%252Frar%2Fpath%2Fto%2Fzip/subpath/to/file\nso no extra URL decoding/encoding necessary.\n. Updated the VFS handler to handle archive paths recursively to get to the path to the actual archive file (thanks @elupus).\n. Yup that IsInArchive() check could be dropped.\nConcerning using get parent folder(): I have to split the path to be able to find the \"..\" and \".\" in the first place so I went with a \"vector\" based implementation which would re-assemble the path at the end of all processing. I could just append every processed directory to the resulting string and then to a call to GetParentPath() when I find a \"..\". Not sure if it's really re-implementing as GetParentPath() does a lot more (and includes a lot more checks and conditions) which are not needed in this case and it also has to search in the string again and remove something from the end. That approach contains a lot more string manipulations than the one I went for which takes the string apart once, then operates on a vector and then puts the string back together.\n. OK I removed the unnecessary check for IsInArchive() on the path's hostname in GetRealPath().\n. Maybe I'm missing something but this subepisode number is not stored in the db. Is this only necessary during scanning? How do these subepisodes get sorted? Because the subepisode is not part of the title or the episode number so it isn't taken into consideration during sorting even though there's clearly an order.\n. Yeah once you remove the changes in CVideoInfoTag my complaints are gone :-)\n. My guess is that you don't have core.autocrlf (see http://wiki.xbmc.org/index.php?title=Git_Usage#Line_Endings) set to true in your git installation so it changed all line endings and therefore the whole file appears as changed. If that's the case it would be nice if you could set core.autocrlf to the proper value and then re-do that change. Ideally put it into it's own PR as it doesn't really have to do anything with CFileItem.\n. Sure, I already figured that we'd need something like that sooner or later as during a library update (especially when there's a new source to be scanned) there can be a lot of updates and it might be easier for clients to just ignore all of them and then do a proper sync after OnScanFinished.\n. For the future you don't need to create a new PR if you change something (in this case remove the second commit). You can make your changes in the same branch and then force push it to your github repository and it will automatically show up in the PR.\n. Uhm does removing the call to Trim() work in all cases? I can't test this but I guess you put it there for a reason so if you remove it from CFileItem::GetMimeType() you need to add it somewhere else or not?\n. Agreed. If you can squash the two commits into one, we can get it in for Frodo (october 10th is the deadline).\n. Make the changes, commit them, rebase (git rebase -i) and squash the commits into one commit and then force push (git push -f) to your repository and the changed commit(s) will automatically be picked up by github and shown in this pull request.\n. You first need to squash the two commits down into one (git rebase -i HEAD~2) and then force push the changes to your repo (git push -f origin master).\nPS: Always create a new branch for every feature/change you make. That allows you to work on multiple features/changes simultaneously.\n. I don't really know much about all the EGL stuff etc only what I had to deal with for android but I really like where this is going. Great work.\nThe only thing I'd like to see abstracted as well is those two android-specific actions in CWinSystemEGL but I know that at least the one with the temporary window will be really hard to get done properly.\n. You should check existing PRs (if it's about JSON-RPC probably just my PRs) so you don't duplicate existing work. In this case see #1446 which does exactly what you have done and some other things.\n. No need to apologies :-) Just a hint so you don't \"waste\" time on something that has already been done and is waiting for the next merge window.\n. I'll give it a try later on when I got some time. I guess all these commits could be squashed down into a single commit and the version bump could be changed to go up only one number.\n. Gave it a shot and everything still works and feels a bit snappier so I'll merge it in the October window. But please squash down all the commits into one and only bump the addon's version once.\n. I just fixed a bug in the webinterface's song view which didn't work anymore because of something I changed in JSON-RPC a while ago so you'll have to rebase your work on top of latest master (git pull --rebase upstream master) and then squash them down into one commit. As I had to update the addon's version your version 2.0.3 should be fine now.\n. Yup sounds like you grasped the concept of git and PRs :-) Doing a PR from the master branch is never a good idea.asylumfunk notifications@github.com hat geschrieben:Ah, I see what I did there.\nThis is my first Github project, so forgive the learning curve.\nSo I noticed that now the change list has changes I made after the initial pull request. Looks like I (mistakenly?) issued the pull request from my master. I then made another set of incremental changes in a separate local branch, but then merged them back to master and pushed to remote. Hence the double version bump and extra changes (specifically Core.js).\nWhat I'll do:\nclose this pull request\nmove all Launcher.js fix changes to separate working branch on my remote/local (I want to preserve each of my incremental changes for history; they all leave the code in the same working state :) )\ncorrect version number and update copyright year\nbranch from this working branch and rebase/squash it down to a single commit\nrebase master to mirror remote xbmc (and keep it that way)\nissue new pull request from squashed working branch\nSound about right?\n\u2014\nReply to this email directly or view it on GitHub.\n. After a discussion with @topfs2 on IRC we have decided to not add the \"method\" argument shortcut because it's not really JSON-RPC anymore and doesn't allow for parameters etc. Therefore the only way to call a JSON-RPC method through HTTP GET is by url-encoding the request and passing it in the \"request\" GET argument.\n. On mizaki's request I have added a \"cycle\" value to the possible values of the \"repeat\" parameter in Player.SetRepeat which will cycle through the \"off\", \"one\" and \"all\" states without the client having to know the current state.\n. Done.\n. Thanks for the cleanup. Where is the change for the smaller HTTP request which you mention in the PR description?\nPS: FYI changes (i.e. not bug fixes) are only accepted till October 10th (ideally October 9th because they still need to be reviewed and merged till October 10th) so if you have any other improvements for the webinterface you don't have much more time to get them into the next release.\n. I agree that \"tvdbepisodeid\" is not an ideal name but certainly less confusing than \"episodeid\" but if we can come up with a more general name I'd be happier as well. I guess the name of \"imdbid\" is historical.\nAnd yup the changes to the tvdb scraper should be done outside of a PR because we always merge the changes to the official addons back into git from the ones in the addon repo so your changes would be overwritten. You'll want to contact olympia about it once the PR has been accepted/merged.\n. I'm not really into our scraper code. I can see a benefit in also storing the scraper but I wouldn't see it as a blocker. Maybe @vdrfan can offer his opinion as he knows the scraper code better.\n. So we've discussed this topic a bit on IRC and we came to the following conclusion. The way this is stored in the database and in CVideoInfoTag is good but in the future we probably want a map of ID and source instead of just a single ID. So something like { \"tvdb\": \"12345\", \"imdb\": \"tt12345\" } which will provide much more info and make it more useful. This serialization into that specific format (be it JSON or XML or whatever) can later be added to the videoinfoscanner and stored as a string in the database and in CVideoInfoTag so nothing to change there. But in JSON-RPC we'd want to return this as a map so to prevent future backward-compatibility-breakage it would be great if we could already return this as a map/object.\nWhat that means for now would be to change https://github.com/xbmc/xbmc/pull/1549/files#L1R636 to\n\"episodeuniqueid\": { \"type\": \"object\", \"additionalProperties\": { \"type\": \"string\", \"minLength\": 1 } },\nto describe that \"episodeuniqueid\" will return an object/map with arbitrary properties of type string. Furthermore the serialization in CVideoInfoTag (see https://github.com/xbmc/xbmc/pull/1549/files#L5R471) needs to be changed to\nvalue[\"episodeuniqueid\"][\"unknown\"] = m_strEpisodeUniqueId;\nI think that should be it for now. We'll then look into applying this to the tvdb scraper after merging this in.\n@jmarshallnz @vdrfan Anything I forgot?\n. Yup looks good now. Can you provide the scraper changes (was there something else) in a pastebin or something so that olympia can take care of that?\n. No bug reports on github. Posting it in the forum (what you already did) or on trac is the way to go.\nThat being said I already looked at it and couldn't find any absolute paths. But I don't have a reverse proxy to test this myself.\n. I'm pro anything that improves the default webinterface because basically nobody cares about it. I just fix up the JSON-RPC requests if I change anything in JSON-RPC but that's all the love it ever gets.\nPS: for future commits/PRs could you add a \"[webinterface.default]\" or something like that at the beginning of your commit messages. Makes it easier to know what area the commits affect if looking through the list of commits. Just an FYI.\n. Hehe well the only reason I ever touched it was because I broke its functionality with changes in JSON-RPC. My web developer days are long gone (8-10 years now) and I'm anything but up-to-date on JavaScript. Back in the days there was no jQuery et. al. to do all these fancy animations etc ;-)\nIIRC @da-anda had some ideas on the UI side of things for the webinterface and mizaki has offered to help out as well either by using the AWXi webinterface as the default one or by using parts of it's code for the default webinterface. Maybe you could open up a thread in the developer forum about talk on the webinterface for those interested in working on it and also sharing what you already got and what you plan to do.\n. I haven't looked at your code yet but based on what you explained on IRC a while ago I have a question. I'm currently working on an approach to improve artwork loading from the database for video and music items by using JSON to avoid additiona queries because of the one-to-many relationship between media items and artwork. I ran some tests to compare the performance of the current implementation with my new approach and saw some performance penalties in the JSON approach (which basically means retrieving an additional db field and running it's value through CJSONVariantParser::Parse()). For 560+ movies the time spent in CVideoDatabase::GetMoviesByWhere went from ~106ms to ~135ms, that's +27%. For 1650+ episodes the time spent in CVideoDatabase::GetEpisodesByWhere went from ~315ms to ~375ms, that's +19%.\nDid you do any tests on the impact of using JSON? I know that it's a bit hard because your whole approach is based on the JSON object that is passed to the database.\n. When I did my tests I wasn't able to get proper values for the JSON (de)serialization because they were always below 1ms and I didn't have micro- or nanosecond resolution available. Maybe there's just something wrong with our JSON deserialization code or maybe yajl (our JSON library) is rather slow.\n. Looks alright to me.\n. The work @jmarshallnz mentioned I'm doing in the artwork area is still WIP and needs more testing but it would eliminate the need to query artwork seperately (except for things like fanart for seasons/episodes etc but that might be solveable as well).\n. I looked through the diff (apart from scraper and videoinfoscanner which I try to avoid at all cost) and it looks good to me.\n. They have never been read from the serialized CVariant object. They have always been retrieved using special logic to check for HasProperty(\"fanart_image\") etc in FileItemHandler::FillDetails().\n. Apart from the two things I mentioned and @jmarshallnz's comment it looks good.\n. Looks great. Apart from that TODO comment I commented on would it be possible to \"beautify\" all the JSON-RPC parameters again i.e. put a space between { and a properties name and between [ and whatever value comes afterwords (same for } and ]? IMO it makes it a bit easier to read.\nOn that subject would it actually be possible to define the parameters in JSON (so not a string containing data in JSON format) and then stringify it in xbmc.rpc.request to a string containing data in JSON format? Might make it easier to spot typos because the interpreter will directly parse and interpret the JSON object/data instead of a string.\n. @jmarshallnz Yup that's probably the cleanest approach. I've adopted it.\n. Not really, I don't even have a mysql setup so can't check if there's really a memory leak or not (but looking at the fix it might well be).\n. I don't use proxies but this sounds like it makes sense. I'm asking myself if it would make sense to do those checks when we close the settings dialog (or switch to another one) and auto-disable the proxy setting again if the user hasn't provided a server and port. That way we will always only have to do that check in one place.\n. @opdenkamp: Could you take a look at the CPVRChannelGroups::GetMember() method I added? And could you provide me with a pointer to where I should add the stop/play announcements in CDVDPlayer upon a channel switch?\n. This is how it works for video and music playlists. When an item is done amd the next one is started, OnPlaybackStopped and OnPlaybackStarted is called which send the OnStop and OnPlay notification. I guess the reason is that the player doesn't have to know about the playlist.\n. Actually I'm kinda confused right now. OnStop should really only be called when a user manually stops playback (with \"end\": false) or if XBMC stops playback because it reached the end of a playlist (with \"end\": true). CDVDPlayer (and CAMLPlayer and COMXPlayer) calls CApplication::OnPlayBackStopped/OnPlayBackEnded() in OnExit() whereas CPAPlayer calls CApplication::OnPlayBackStopped() in CloseFile(). I don't have any media available right now so will have to test at home. Last time I worked on announcements it was because the PAPlayer re-write didn't have all of them and IIRC PAPlayer sends a Player.OnStop after every file it finished playing.\n. Yeah figures it makes sense to call OnPlaybackStopped (and send the OnStop announcement) after every item as the playback of that specific item has stopped (independent of what happens afterwards). The question is where to put this in CDVDPlayer for channel switching or if it should stay in CPVRManager as it is now.\n. Makefile is already updated (you scared the hell out of me. I was already half way to retrieving my anti-cptspiff-armour) but yes I forgot about the xcode project files. Sorry about that. Can you please fix it up for me?\n. @FernetMenta do you know if the unrecognized remote button presses are related to the dead lock you tracked down? The only real changes in this PVR that could affect the general behaviour of PVR are the changes in CPVRManager AFAICT.\n. I'm not sure what I'd expect. IMO for recentlyadded it makes sense to not being able to sort it by anything else because then you don't have the items in the recently added order anymore. But for smartplaylists in general it could make sense to specify a sort method but then wanting to change it dynamically in the GUI when actually using it.\n. Yeah that approach would work. The only downside will be that \"Sort by Playlist\" is not a very good indicator of what it is actually sorted by in case of recently added.\n. https://github.com/Montellese/xbmc/compare/master...library_node_sorting is a very basic approach to setting the default sort method to SORT_METHOD_PLAYLIST_ORDER if a smartplaylist has a special sort method specified. It works fine for recently added but the problem with this approach is that it will completely disable the dynamic sorting functionality for smartplaylists. I first wanted to pass the actual sort method to dynamically add it to the list of available sort methods in a view and then setting it as the default sort method but that currently doesn't work because smartplaylists use the \"new\" sorting implementation with SortByFoo whereas CGUIViewState still uses the old implementation with SORT_METHOD_FOO. I have a commit (https://github.com/Montellese/xbmc/compare/master...sorting_cleanup) to get rid of SORT_METHOD_FOO everywhere except in the python API for backwards compatibility but it touches a lot of code and needs rebasing which is why I never made a PR for it. But obviously it needs to be done at some point.\n. Closing as solved differently in 7125e479aea50dbe276b1910780169c062b2248b.\n. @cptspiff This is a fix but I'll wait for your sign-off nonetheless.\n. Looks good to me although I still think that \"CVideoThumbloader\" is not an appropriate name as it also handles stream details ;-)\n. As I stated a few times I don't really know much about all that keyboard handling stuff and I'm sure @jhsrennie would be able to shed some more light on this. But your patch doesn't look to me like \"0 impact\" because there are quite a few places that rely on the fact and check against keycode being smaller than KEY_VKEY which up until now was always the case but won't be anymore with your change. Furthermore there's at least which does a check on (code & KEY_VKEY) because KEY_VKEY is meant to be used as a flag and not an operator in an arithmetical calculation.\nMaybe we just need to change KEY_VKEY from 0xF000 to 0xF0000000 as we need to change from 16bit to 32bit anyway?\n. While it may have 0 impact on existing eventserver clients it may have impact on other input methods (e.g. a keyboard) which are directly handled by XBMC. As I said I'm absolutely no expert in this area, I'm just pointing out that there are places that rely on KEY_VKEY to be used like a flag which is not the case for a keycode coming from EventServer with this patch.\n. -1 on adding this as a GUI setting. I don't have any numbers but I guess that only a small part of all the XBMC users also use CEC so it would be confusing for all of those who don't use CEC and probably also don't know what it is (IMO the fact that people who use CEC know what CEC is is not really a good reason ;-)). Either put it in the peripherals settings of CEC as @jmarshallnz suggested or put it in advancedsettings and turn verbose logging off by default in either case.\n. There are settings I'm confused about myself and they should probably be removed but they've been there for a long time and just because we already have bad examples doesn't mean we should add more.\n. Yup that would be great. Just copy the descriptions from the wiki article.\n. Yup a lot better. Only the instructions on adding java.exe to the PATH is missing AFAICT.\n. That's what I thought as well when I first updated the wiki article about the JRE requirement but it didn't work for Martijn without manually adding java.exe to PATH so better have it in the README and on the wiki than people complaining that it doesn't work.\n. Yeah I considered all those options as well.\n1. Could become more powerful and in addition it could also be used for plugins etc but it would be a lot of work and probably a lot slower as well.\n2. I actually wanted to go that route first but then realized that it would still need special casing for movie sets as they wouldn't fit into the \"idMovie in (select idMovie from ...)\" condition.\nSo the only difference between 2 and 3 is that the special casing is handled at a different location but in both approaches the special casing has to be done.\n. \"second query\"? If we want to limit the result of the filtering based on the unfiltered list, we need to put together a SQL where clause containing all of the IDs of the items in the unfiltered list. That works fine for albums, artists, songs, tvshows, episodes and musicvideos but doesn't work for movies because there we have a mixed list of movies and movie sets so it will require special handling to put the SQL where clause together.\n. @jmarshallnz You ok with this going in with the additional comment I added in the last rebase?\n. Something went wrong with that link. It's #1418 but it needs updating because I changed something today in the functionality to retrieve sets.\nIn general I agree that solving the problem with a real solution is preferrable over some temporary solution but I don't know about the impact of that PR. I thought I had the advanced filtering well integrated and tested but there are soo many use cases to remember and cover when it comes to the media library and all it's functionality that it's impossible to be sure that a change of this scale will not have any additional unexpected side effects.\n. I leave the decision up to you guys. I can rebase that commit and adjust it after I merged #1646.\n. Did you try this in combination with my other PR? Because this PR is still based on current mainline and suffers from all its bugs/regressions.\n. Yes the problem is that we do the set grouping and retrieval before the sorting and limiting, so if there's a set with 2 movies. This wouldn't be an issue if we'd go the \"grouping outside of the database\" approach.\n. Updated this as well. Haven't incorporated @Voyager1's code yet because I don't like the IsPartOfSet() etc code in CGUIMediaWindow at all plus I'm not even sure I understand the problem. Will have to look into it a bit more if I have some time on Sunday.\nI also update https://github.com/xbmc/xbmc/pull/1418 (which would be an alternative solution to this approach) but I stated a few problems with that approach in my latest comment on that PR.\n. Which recentlyadded are we talking about? The one directly accessible from the home screen or the one in Videos -> Library -> Recently Added Movies? I can see this being a problem for the one being accessible from home but it shouldn't happen on the other one.\n. Yeah that's what I meant with the one directly accessible from home screen. Because that one currently differs from the one available at Videos -> Library -> Recently Added Movies. We have to decide for one or the other and stick with the decision for now. Having two different entry points for the same list is not really ideal.\nCan you try your problem on the one in the library? You probably won't encounter it there because that one can have movie sets etc (which IMO shouldn't be the case though).\n. I just tried to get this integrated and noticed that there's a problem not covered by your implementation (but it's probably not easily possible anyway): Let's say you have a set \"The Terminator Collection\" with all four Terminator movies. All of them show up in the recently added movies node seperately (i.e. not in the set). Now you apply a filter with \"director == James Cameron\" which will match the first two of the four Terminator movies and the filter will return them as a set. So all four Terminator movies from the original list will not directly match an item in the filtered list so it falls back into your additional logic and checks if their set exists. This will be true for all four Terminator movies even though the filter only matches two of them so the resulting list will be wrong.\n. @cptspiff: I replaced the include with a forward declaration. Thanks for taking a look.\n. Hm something's not right yet. I'll have to dig into it again.\n. OK found the problem. Now it also works in combination with #1631\n. @cptspiff changed the parameter name to \"clearCache\" and fixed the condition to remove any cache for the current list.\n. Let's say we open a custom library node at \"foo/bar/recentlyaddedmovies.xml\" through CGUIMediaWindow::Update() which results in CLibraryDirectory retrieving the list of movies and setting a new property on the CFileItemList \"library.filter\" to true. But during the retrieval of the movies the path changes to \"videodb://4/?xsp=\" because otherwise the filtering functionality will not work. So when I mark a movie in that list as watched we call CGUIMediaWindow::Update() again but with the path \"ideodb://4/?xsp=\" which goes directly to CVideoDatabaseDirectory and not through CLibraryDirectory and therefore the property isn't set again.\n. Yeah it took me a bit to wrap my head around the actual problem as well. First I tried to solve it by not changing the path and storing the \"new\" path in a property but then I figured out that there are places where we can't avoid using the \"new\" path e.g. when we applied a filter and then go into a movie set. In that case we have to store the filtered path in the directory history to be able to get back to the filtered list. Anything else would not be very intuitive.\nSo as you say the best way forward is to allow the path to change and deal with its implications.\n. I've seen a similar behaviour with new episodes in current master and I added a breakpoint in CGUIMediaWindow::Update() but it was never called after the library scan had finished. I'm not sure if this bug is related to my changes or if something else is broken as well in that area.\n. With #1646 the only paths that change during filtering are the paths of CFileItem objects in m_vecItem which are folders because those need to pass the active filter on to the sub-directory they represent. All the other CFileItem objects stay untouched (apart from being removed from the list temporarily during filtering) and m_vecItems->m_strPath shouldn't change either.\nI tried to figure out where we actually send the message to update the listing but I couldn't find it. @jmarshallnz maybe you can provide a pointer to where it should happen? I checked in CVideoInfoScanner and only found messages sending GUI_MSG_DIRECTORY_SCANNED which is not handled by CGUIMediaWindow or any of it's video-related implementations (it's only handled in CGUIWindowMusicSongs).\n. @jmarshallnz I added an additional check of empty paths before calling GoParentFolder() recursively.\n. Squashed down and waiting for sign-off.\n. That sounds odd. Can you provide a log? Please create a thread in the forum and post the problem + the debug log there and post the URL to the thread here.\n. This happened to me once as well (episode being marked as watched but not vanishing) but wasn't able to reproduce. I think the watched filter isn't properly applied in that case and obviously the logic from this PR doesn't kick in as long as there's at least one item in the list so that is not a problem with this logic but with either the update or the hide watched logic.\n. That wouldn't make any sense. This logic is written to be invoked whenever an update/refresh has just been performed. Triggering an update/refresh in this logic is a) the wrong place and b) might result in an infinite loop.\n. Looks valid to me.\n. @cptspiff I fixed the typo ;-)\n. Yeah I will add some doxy to m_strRealPath and m_realPathPreset as it's not obvious what their purpose is. Will check if using a CURL instead makes more sense.\nAgain I agree that an extra member is not ideal. I first considered storing it as a property in m_vecItems or only storing it in CDirectoryHistory::m_vecPathHistory but that doesn't really work for the use case of GoParentFolder().\n. @jmarshallnz Thanks for looking at the changes. I added a commit (which can be squashed) with some doxy on the new member variables and a fix for resetting an active filter on the Back action.\nI looked into using CURL for m_strRealPath but after I had replaced it everywhere and looked at the changes I think we'll execute CURL::Parse() and CURL::Get() a lot more than when we use a CStdString and use a local CURL instance whenever needed.\n. renamed m_strRealPath to m_strFilterPath and replaced the m_realPathPreset member variable in CGUIMediaWindow with an optional parameter updateFilterPath in CGUIMediaWindow::Update().\n. @jmarshallnz @cptspiff Is this good to go in?\n. @jmarshallnz I've added 4 new commits which use a custom property called \"path.db\" in the CFileItemList used for retrieving the list of items in CGUIMediaWindow to pass the filter path back and to store it in m_strFilterPath. The \"path.db\" property is filled by CSmartPlaylistDirectory::GetDirectory() so it should only affect smartplaylists and custom library nodes.\n. Looks good to me but there already was a huge discussion on how to do navigation in a range slider. Some think it's best to use up and down to switch between the different nibs, others think that using Select/Enter is better (as it is implemented now) and there are other ideas on how to do the navigation. So not sure if adding this in as well will just lead to code that needs to be changed later again if we can decide on a final and best navigation approach.\n. I've implemented a delayed live filtering in https://github.com/xbmc/xbmc/pull/1661.\n. The place to check these paths for real is https://github.com/xbmc/xbmc/blob/master/xbmc/filesystem/VideoDatabaseDirectory/DirectoryNodeTvShowsOverview.cpp#L28 and videodb://2/5/ should point to TvShowsStudio. There is no director node for tvshows. So that path in VideoDatabase.cpp:7561 is wrong as well.\n. I think GetTvShowsDirectorsByName is only used by the search functionality.\nNo, don't add a TV Shows Directors node as that would be a feature and not a fix and we are in feature freeze. Furthermore I'm not even sure if the TVDB scraper provides directors on a tvshow level or only on an episode level. At least in my database there are no directors linked with a tvshow.\n. IIRC lastplayed is not updated when a video is not finished i.e. if lastplayed is updated, playcount is updated as well.\n. Nope you can have a playcount of 0 (by marking a video as unwatched) but you can still have a lastplayed value so that statement is not correct.\n. @jmarshallnz OK replaced SendMessage() with SendThreadMessage().\n. That's what I mentioned in the PR description. I only have an i7 to test which can deal with immediate live filtering without any hassle so I'm grateful for feedback from ppl with low power machines.\n. OK I included UpdateControls() in the delay triggered functionality. I can even see a bit of speedup on my i7 with this change.\n. @jmarshallnz It does some SQL queries (which don't need to run in the app thread) and some calls to CONTROL_ENABLE, CONTROL_DISABLE and SET_CONTROL_LABEL (see https://github.com/xbmc/xbmc/blob/master/xbmc/dialogs/GUIDialogMediaFilter.cpp#L583). I guess SET_CONTROL_LABEL could be replaced with SET_CONTROL_LABEL_THREAD_SAFE but AFAIK there are no thread-safe versions of CONTROL_ENABLE and CONTROL_DISABLE. Should I send a message (like GUI_MSG_REFRESH_LIST or something like that) and handle it on CGUIDialogMediaFilter::OnMessage() by calling UpdateControls from there?\n. No, this only affects changes in the advanced library filtering dialog. But I can see that it would make sense to have this for sorting as well but that's a different code area so won't be part of this PR.\n. Seperating the queries and the updating is probably not possible because we do the query for one rule/filter at a time and then directly write the result into the control's label (we don't store the label anywhere else). But I can move all of that into the app thread. The queries don't really take long because they only retrieve the total number of results, they don't actually retrieve the results.\n. OK I've moved UpdateControls() to be executed in the app thread as well.\n. See the last commit in https://github.com/xbmc/xbmc/pull/1646 which reverts the whole videodb/musicdb-related change in URIUtils::GetParentPath() as it's actually not needed.\n. I'll have to check if it's already unused in master now or if that's only the case after the other commits in that PR are applied as well.\n. Done in 659590d7dfbf41d5079ece4e9e0041800447a476.\n. I kind of agree with elupus that the \"play with\" is IMO more crucial (I never use it but I can see the need for it) than the \"Queue from here\". In general the argument you are bringing forth would apply to any new feature because otherwise the feature wouldn't be included if it wasn't missing in the first place. I'd say spliting the two functionalities into two seperate PRs is the best way to go.\n. No bug reports on github. Please use the forum.\nPS: You need to use the \"Browse\" button to choose an artist.\n. Looks good to me and certainly would help one of the problems I'm having with grouping and sorting. Maybe we could add the string ID to the table in SortUtils instead of having to ask CSmartPlaylist about it? But I guess then the information would be duplicate.\nDid I see that right that if the playlist has an order that isn't available to GUIViewStates (e.g. SortByVideoAspectRatio) that it will fall back to sorting by playlist? I guess in these cases there would still be a problem with sorting and grouping but the question remains if anyone actually uses those.\n. As we got a way to retrieve the original sort method and order with this from the CFileItemList we could add some additional logic to CGUIMediaWindow which looks for those properties before sorting in case the sort method is set to SORT_METHOD_PLAYLIST and use the properties from the list instead of m_iPlaylistOrder for sorting. That would also cover the other sort methods that are not covered by SORT_METHOD_FOO. If the properties are not present we could still fall back to sorting by m_iPlaylistOrder.\n. I'm playing around with your code and noticed that if a smartplaylist has a sort method that is not available through SORT_METHOD_FOO the code in AddPlaylistOrder will fall back to SORT_METHOD_NONE instead of SORT_METHOD_PLAYLIST_ORDER so that will need an extra check. I'll see if I can add it in and upload a commit.\n. See the last three commits at https://github.com/Montellese/xbmc/compare/master...sort_those_nodes. The first one solves the case where we can't translate from SortByFoo to SORT_METHOD_FOO (and should fall back to SORT_METHOD_PLAYLIST_ORDER and not SORT_METHOD_NONE). The second and especially the third one would be more something for my grouping work and would allow to fall back to the sort method specified in the CFileItemList's properties instead of using SORT_METHOD_PLAYLIST and should solve all of the sorting-related problems in my grouping work.\n. I first added the SORT_METHOD_NONE because it didn't work properly without it, then found the root cause but I guess it doesn't hurt to be there or does it? Sure I can add comments, just wanted to see if it works and get your opinion on the approach.\n. Most of those fixes you added with your latest commits are somewhere in one of my local branches as well so +1 for those. I just never got around to finish going through all the sort methods added in a specific view.\n. I don't think that we can drop the ignore option. Currently all smartplaylists group movies into sets when enabled in the GUI (which IMO makes sense and is to be expected). We can't just change the default behaviour to not group movies into sets unless the \"groupbyset\" option is defined for a smartplaylist, especially not as long as there's no GUI support for it. That's why I added both \"groupbyset\" and \"ignoregroupbyset\" which, when set, ignore the GUI setting. For 99.9% of the playlists everything stays the same i.e. grouping by set depends on the GUI setting because none of these options is set. Only with both of these options can we provide full control over the grouping behaviour on a per-smartplaylist level.\nI don't really care whether we use an enum or a map. Might be easier to work with a map.\n. Ah well if we go the map route, then it is possible. With the enum-flag approach I chose it wasn't possible because either it's specified or not, there's no three-state there.\nI considered using something like  but IMO that's misleading. I have some work (similar to some work you did in the past) that allows to e.g. specify\nxml\n<group>studio</group>\nand the result list will be a list of studios and not a list of movies (or tvshow or whatever). So there's also the case of\nxml\n<group>set</group>\nwhich would result in a pure list of sets and not a mixed list of movies and sets. Therefore I wanted to avoid this. But any idea is welcome.\nEDIT: Ok maybe we can use the  approach nonetheless but add an attribute named \"mixed\" which defaults to false so\nxml\n<group>set</group>\nwould result in a pure list of sets whereas\nxml\n<group mixed=\"true\">set</group>\nwould result in a mixed list of movies and sets. The only problem is that we don't have the grouping code/feature yet and sets are currently the only case where a mixed list makes sense (well maybe tags but we don't have that yet either).\n. OK I changed the logic to use\nxml\n<group mixed=\"true\">set</group>\nto force grouping by set into a mixed list and\nxml\n<group>none</group>\nto force disable any grouping (which is what we are mainly after). This syntax should be future proof for when we support more grouping methods etc.\n. Thanks for the re-review. Fixed the minors.\n. Closing this in favor of a more sophisticated version I'm working on.\n. Added another commit that should take care of the music database by doing thesame update procedure on the \"strFileName\" field in the \"song\" table.\n. I agree that the whole operation is far from ideal. I just took a quick stab at it. I don't have any rar or zip files in my library nor any stacked files or multipaths and I didn't change the URL encoding method (which led to this being a problem in the first place) but it didn't look like anybody else cared. I just put this together to get some attention on the problem. IMO it's not really nice if someone updates from Eden to Frodo and then gets a lot of duplicate entries in the library and therefore looses metadata like playcount, lastplayed etc.\nHostnames should be recursed. We grab the hostname, then call UpdateUrlEncoding on it, which again will grab the hostname and call UpdateUrlEncoding again and so on.\nIf anybody has a better idea/approach to solve this problem in a safe way for Frodo, I'm all ears.\n. Updated the implementation to recurse on the filename if it's a stack:// URL or on the hostname if URIUtils::ProtocolHasEncodedHostName() is true (didn't know about this method, thanks for the hint). Otherwise it will just do nothing and return.\nDo we need to handle multipaths i.e. is it possible to set a rar:// or zip:// path as a source (and combine them with other sources into a multipath)? I tried to add a new source but it only lists directories and no archives so I guess there's no need to handle them.\n. Updated to properly handle stack:// URLs by retrieving the list of stacked paths and then calling UpdateUrlEncoding() on every path and then constructing the stack:// URL from the updated paths. I also made the final comparison of the original path and the updated path case sensitive as requested.\n. Renamed the new methods in CFileItem to SetFromVideoInfoTag(), SetFromAlbum() and SetFromSong() and added some doxy. I also removed the delete m_videoInfoTag; which was unnecessary.\nAnd I moved the different calls in CVideoDatabase::LoadVideoInfo() into seperate if-conditions again so they can be better debugged (i.e. stepped through).\n. win32 has it's own batch script that is executed when a generated cpp file is missing or older than the corresponding interface file so this doesn't affect ut.\n. I wanted to do something like this for a while as well so in general a +1. We'll have to figure out what to do about the changes that affect JSON-RPC as they break backwards compatibility.\nThis will also finally allow me to add a runtime-based filter to the advanced filtering of movies, episodes and musicvideos.\n. If this will go into Frodo, changing the \"runtime\" JSON-RPC property to an integer instead of a string is IMO fine (a bit late in the process but bw-compatibility has already been broken a while ago in JSON-RPC) and it would just require the necessary adjustments to the JSON schema.\nIf it's for Frodo+1 we should probably keep it a string and do the conversion to an integer in CVideoLibrary::UpdateVideoTag(). The only confusing thing then will be that using e.g. VideoLibrary.SetMovieDetails to set the \"runtime\" value to \"2 hours 5 minutes\" will result in a \"runtime\" value of \"125\" when calling VideoLibrary.GetMovieDetails afterwards.\n. Changing \"runtime\" to an integer will break backwards-compatibility for all the VideoLibrary methods but IMO an integer makes much more sense than a string. The question is whether we should return minutes or seconds. On one hand we always returned minutes until now, on the other hand I don't see a reason why we should keep the additional information (which is available anyway) from JSON-RPC clients.\n. Yeah fine by me. I may add a description to the \"runtime\" properties in the JSON schema saying that it is in seconds (this is mostly important in the VideoLibrary.SetFooDetails methods).\n. I don't really have a strong opinion on this as I never use files view. My only concern is that if we change this someone else will come running with a different use case where it doesn't work anymore and there's problably no way to satisfy both. Furthermore this change will not only affect SortByFile but also SortByPath where it is IMO crucial to get the full path to a file and not just the path to the folder containing the file.\n. Yeah I just played around with it yesterday a bit and opening the music playlist view when pressing Space in the movie view is very counter-intuitive IMO. Apart from that Space is a very back choice for that button IMO because on the home screen, in fullscreen etc Space invokes the Pause action i.e. pause current playback. But that's out of scope for this PR.\n@cptspiff: Are you ok with this?\n. Looks good to me. Will give it a quick spin when I'm back home and merge it if it works. Thanks for the quick fix.\n. Tested it and works as expected. Good work.\n. Apart from the comment, looks fine by me.\n. I have a branch with similar work but I went as far as setting the directory containing the media item as the starting directory. But that probably depends on the use case but I have all my additional artwork stored with the media item itself so I always have to browse to that directory anyway. I never finished my work so I'm welcoming this. Will look at the code later. IIRC you can get the path to the tvshow from CVideoInfoTag::m_strFile.\n. Starting in the root of where the movies belongs has the same problem as with sets and tvshows: A movie source can consist of several paths.\nIMO in these cases we either decide to make an (educated) guess and use the first path available (for sets the path of the first movie) or we don't add any special handling for these items and open in the root of the filesystem.\n. I don't have any strong feelings either way. IIRC we discussed these values once in a trac ticket and the consensus was to go with maximum year.\n. The splash and the progress bar work great although the progress bar looks a bit out of place on my phone as it is yellow. Is that just on my Samsung or is that how it looks everywhere? Could that color be adjusted? But that's just a nice to have.\n+1 from me.\n. I see you updated the changes to use the main splash image, removed the stub files and adjusted the progressbar color. I'll give it a go this evening and if it's ok I'll merge it in for Beta 2.\n@theuni / @davilla: any objections?\n. I just gave it a try and the progress bar looks much nicer.\nBUT it doesn't work out of the box anymore. When I built your PR and started it on my SGS2 I got http://pastebin.com/40JQTL8k. I had to add the GET_TASKS permission to the APK to get it to work. I don't know if it was there before you force pushed and just lost it or if you added some code that requires this permission. \n. DB triggers it is then. Updated the code by adding triggers to delete from taglinks and a trigger to delete from tag (which also allowed me to remove some code I recently added to keep the tag table clean).\n. I don't have a mysql setup and I don't plan on setting one up ;-)\nI wasn't gonna merge this till tomorrow or sunday anyway.\n. Updated with the proper commit to fix mysql.\n. Could be done although the triggers don't need to be re-created after every schema change (well neither do the views but there it's more likely).\n. I'm not sure that's gonna work out. CreateViews() is called at the very end of UpdateOldVersion() so it will always operate on the newest db schema but if we call CreateTriggers() depending on the update version we might call CreateTriggers() with triggers on tables that don't even exist yet (which might then be deleted and recreated later again by another call to CreateTriggers() for another version. Maybe this will not be an issue because it all happens in the same transaction but I'm not sure.\n. @jmarshallnz Damn thanks for the hint. Will have to find another condition that matches files view but not custom library nodes or smartplaylists.\n. @jmarshallnz I updated the logic to retrieve the NODE_TYPE of m_strFilterPath instead of items.GetPath() which will cover smartplaylists and custom video nodes because their filter path will be videodb://foo/bar/ instead of smartplaylist://foo/bar/ or library://foo/bar/ whereas in files view m_strFilterPath will be identical to items.GetPath().\n(looks like m_strFilterPath wasn't such a good naming choice after all ;-))\n. I removed the second commit as there are some cases that are not properly handled. This can be worked out for Frodo+1.\n. tbh if you really need a screensaver to go easy on your display the fanart screensaver is probably the worst you can pick ;-)\nThe problem of fallback addons applies to everything in xbmc. We can't even change the default scraper for existing installations because it will be immediatelly overwritten by whatever is stored in guisettings.xml. But this will be remedied by  the settings refactor I've started working on.\n. I don't really know about the addon system so what happens if a user updates from Eden to Frodo and has the old builtin slideshow screensaver as the active screensaver and we silently mark it as broken on first run? Is it still usable and will it still be used?\n. I don't really know if this is possible on win32, will have to check. Is it possible on other platforms?\n. Yup that's possible, similar to the logic I added for the . Basically the logic would check for the screensaver.mode value being \"screensaver.xbmc.builtin.slideshow\", then replacing it with \"screensaver.xbmc.builtin.dim\", then maybe showing a warning to the user and then saving the changed settings.\nI'm not really around until 29th so if anyone else has the time to add it (somewhere in this area https://github.com/xbmc/xbmc/blob/master/xbmc/settings/GUISettings.cpp#L1395) I wouldn't mind ;-)\n. I added a new commit which fixes CVariant::empty() to return false for booleans, (unsigned) integers and numbers.\n. And there are the requested unit tests.\n. Thanks to @koying trying this PR on a mysql setup we figured out that removing \"BEGIN\" and \"END\" from \"CREATE TRIGGER\" queries for mysql is a very bad idea because it doesn't work. So I had to add an additional commit which removes that special handling of CREATE TRIGGER queries in mysql setups.\n. Hehe right, that's what happens when you are in a hurry. Will remedy ASAP.\n. OK this one should be ready now.\n. IIRC initially I had it setup to have the temporary files on the external storage if available but someone changed it (due to speed reasons?).\n. @jmarshallnz: I changed the code to use CLabelFormatting for the episode label fixup.\n. In general I like the idea as we do the same thing for weather data providers.\nGenerally I like both 1) and 3) although in 3 just the name would probably enough (same as we do in the weather view).\nBut to get this to work properly (for Frodo+1) we need to know from the scraper which sites it's scanning because e.g. the Universal Foo Scrapers get information and artwork from all kinds of sites for a single library item. So apart from NFOs overwriting (certain) information for a library item there's no real way anymore to know where the information comes from. But 1) is the most likely candidate for Frodo IMO.\n. No bug reports on github. Please post your problem in the forum (http://forum.xbmc.org) or on trac (http://trac.xbmc.org).\n. @DDDamian: Yeah I have seen the change from using the user-friendly sink name to the UID. Unfortunately matching the user-friendly name from AE against the user-friendly name used by Eden (and stored in guisettings.xml) doesn't work as they differ (\"WASAPI: ...\" in Frodo vs \"wasapi:...\" in Eden, so they have different cases and different spacing).\n. I can only compile-test and test with a keyboard and nyxboard but I can't test the PVR related changes as I don't have it setup. Maybe putting together a list of what should be tested might make it easier to find testers.\n. @jmarshalllnz: This implementation is located in CAEFactory and not in one of the engines.\n@DDDamian: Yeah I realized that as well but I didn't see any use in duplicating the same code at least three times as it operates on AEDeviceList and AEDevice which are engine-independent. Currently only CSoftAE seems to have such  code and it could probably be removed but I didn't wanna do that to keep this as low-impact as possible.\n. Ah sorry didn't realize it. My bad as VS only shows me hits in files it has in the project. Will hunt down the others and update the commit.\n. Done. According to git grep it was only used in SoftAE and CoreAudio but not in Pulse.\n. It's a concatenated string containing\n- 1 character for the screen number (as a integer)\n- 5 characters for the width (as a 0-left-padded integer)\n- 5 characters for the height (as a 0-left-padded integer)\n- 9 characters for the frequency (as a 0-left-padded float)\n- 1 character for progressive/interlaced (Frodo only)\n  which results in 20 characters. See https://github.com/xbmc/xbmc/blob/master/xbmc/settings/GUISettings.cpp#L1588 for how it is in master and https://github.com/xbmc/xbmc/blob/Eden/xbmc/settings/GUISettings.cpp#L1374 for Eden.\n. OK I gave this a try on my SGS2 and apart from the mentioned issue it compiled fine. I was able to play normal AVI files as I used to and then I tried a 1080p mp4 which I recorded with my phones camera. The result was a very green-blueish image and it didn't seem accelerated to me (i.e. very jerky). This is the part of the log where I start playing the video: http://xbmclogs.com/show.php?id=15380. So it looks like it uses libstagefright.\nAfterwards I wasn't able to close XBMC anymore (only force close through android's task manager) and after a restart of xbmc I couldn't play any h264 files anymore. It just kept on going in the busy dialog and there was nothing in logcat.\n. Updated the PR with an extra commit that replaces the \"watched count\" string for the number of watched episodes in a tvshow with a new \"watched episode count\" string. @koying pointed out that having \"watched count\" and \"play count\" is a bit confusing.\n. OK I've made a few changes.\n- I removed the commit changing \"artist\" from an array into a string. This will also keep backwards compatibility for this which is a huge advantage.\n- I added a new commit introducing a \"displayartist\" property for albums and songs\n- I extended the commit adding the \"genreid\" to also be able to retrieve \"genreid\" (and \"artistid\") through methods like Player.GetItem and Files.GetDirectory.\n. IMO everything that is settable should also be gettable (not the other way around though). But that's just personal preference.\n. OK I dropped the commit removing the \"albumartist\" property on song level so that clients can still retrieve and set \"albumartist\" for songs. While looking into \"albumartist\" I realized that it was never actually retrieved from the database so the property was always empty. I've added the necessary logic to populate it and also added an \"albumartistid\" property. Furthermore there's a fix commit for a minor bug in retrieving songs from the musicdb.\n. I ran some basic tests. Furthermore in the current state there's no backwards incompatible changes which I'm very much in favor of.\n. We don't handle bug reports on github. We only use the \"Issues\" page for managing PRs which contain code changes etc (one of the reasons being that for every post made here, hundreds of people get an email notifications). So either post your bug on http://trac.xbmc.org in a new bug report ticket or create a new thread in the Development board.\n. The problem with making JSON-RPC available this early is that the behaviour on calls like VideoLibrary and AudioLibrary methods might be undefined because some profile might not have access to the video and/or audio library. Same problem with accessing sources through Files.GetDirectory and Files.GetFileDetails as some sources might be locked in one profile but not in another. I don't really know much about all this profile stuff as I've never ever used it so I don't know what exactly will happen.\n. I didn't try it but it looks reasonable (apart from the comment I made). It might be better to move the calls to DeleteLocalRef further up right below the last usage of the reference because we only have a limited amount of references available so the sooner we get rid of them the better. But as this happens at the very start where no other JNI stuff is running, it isn't such a big deal.\n. Looks good to me but I don't know the whole code around it. I'd probably have used a for loop instead of the while but that's down to personal preference.\n. I'd say stay on 5.0.0 now and then bump to 6.0.0 for a clean start on release of Frodo.\n. Nice catch, thanks.\n. No bug reports on github. Please use the forum at http://forum.xbmc.org or the bug tracker at http://trac.xbmc.org. Thanks\n. Looks good.\n. @jmarshallnz Updated from using <= to == based on your comment.\n. TheUni was kind enough to check all plugins and scripts to see if there are any conflicts but they are all good. The only addon that came up with outdated dependencies is webinterface.awxi from Mizaki. But I already gave him a heads up that he needs to update the  versions and he said he already did and that he'll send a PR soon.\n. Updated to also install the pvr.demo addon.\n@opdenkamp: Can't test right now but are you sure that they are disabled by default after installation? Obviously I didn't run a clean install during my tests but I only had pvr.hts installed before and when I went to the list of PVR addons they were all enabled.\n. I'll double-check as well as I'm not 100% certain.\n. OK I gave it another try with a clean install and all the PVR addons were disabled so it works as expected.\n. I ran a test build on billy but building the PVR addons didn't work, see http://buildbot.xbmc.org/builders/win32-nightly/builds/877. It didn't fail but the PVR addons weren't included. Will have to re-run tomorrow with more debug output to see where it fails.\n. OK finally figured out what the problem on billy was. Successfully built a win32 installer containing the PVR addons and @koying tested it.\n. I thought at this point it would be safest to just stick with what we used in Eden and before because it worked fine there. But I can clean it up if requested.\n. Yeah still not working for Files.GetDirectory because it goes through CDirectory::GetDirectory and we don't retrieve these details for list items in general. Will have to add some extra code nonetheless (which I'd really prefer to avoid but all the logic required is all over the place).\n. @jmarshallnz: Are you ok with this?\n. Looks good but I don't really know how stacks work though. Do they get a CVideoInfoTag object with info merged from all the stacked files i.e. is m_duration the sum of all stacked m_durations? Any specific reason for 60% (or just because it's a bit more than 50%)?\n. @davilla is the decision maker. Without this movie sets in a smartplaylist won't always behave 100% as expected.\n. Looks alright to me. I tried to reproduce it but didn't really manage to and now I also know why. I always use the back key to navigate back to home so I never really jump right into a sub-directory of the library.\nAt first I was concerned about library nodes where we rely on those URL options but it seems like we don't jump directly into those nodes from the home menu so it's not really an issue.\n. No bug reports on github. Please use the forums or trac.\nThanks.\n. Well you know my opinion on the matter. If I disable \"Show parent folder items\" in the settings I do it because I don't want to see the \"..\" anywhere (which is why I added the jump-back logic). But I guess I'm the only one with that opinion.\n. Toggling hide watched should work because that triggers a call to CGUIMediaWindow::Update() and the actual watched filtering is done in CGUIWindowVideoNav::OnFilterItems but filtering doesn't. So this logic would have to be duplicated and also placed in the filtering logic.\n. @bobo1on1: That mapping only applies to the use of RANDOM() / RAND() in SQL not in C++.\n. I guess the first question to answer is: Should the webserver or the TCP connection be running when no profile is active? Personally my answer to this question is no, because XBMC doesn't come with the webserver or the TCP connection enabled by default on a clean installation. But I can see that this is a problem because it's impossible to control the profile selection screen with a remote relying on JSON-RPC.\nIMO the ideal solution would be to start the webserver and the TCP connection but only allow access to the profile-related functionality. But that's not possible with the current implementation AFAIK.\nPS: You should probably properly set up your git environment. \"invalid-email-address\" is not a very friendly author name for a git commit ;-)\n. Apart from the few nitpicks I mentioned, this looks good to me. Maybe StartActivityWithExtras() and StartActivity() could be merged into one method StartActivity() to save the code duplication? All the extra params of StartActivityWithExtras() could have a default value (empty string), in that case it should behave the same as StartActivity() right?\nCan't say much about the external player support as I don't know much about it. I'm guessing it probably won't work for some streams and network protocols that xbmc supports but the android player might not? There's a discussion about external player support on android in http://forum.xbmc.org/showthread.php?tid=138464 so maybe check for any gotchas in there as well.\n. Fine by me for Frodo+1.\n. +1 from me for Frodo as it solves the often reported issue of the windows screensaver kicking in while xbmc is playing a video (but is not focused). It could be discussed whether the changes in WinEventsWin32.cpp (removing the handling of the WM_SYSCOMMAND event) should be applied or not but either way it is much better than the current situation.\n. But only if we're focused right? For me that's the expected behaviour because I have XBMC setup to activate the XBMC-specific screensaver to kick in if it is idle.\n. Ah right yeah windowed would probably need to be handled seperately. Maybe just comment out that section in WinEventsWin32.cpp with a comment that it needs to be re-visited at a later points so we don't \"loose\" the code in case we need it again?\nIMO the most important fix is to not let sss or some microsoft tool disturb xbmc while it's playing a video, which this PR achieves.\n. So is there some \"standard\" way or does every plugin do it the way they want?\nEDIT: Either way there's probably no easy way to distinguish between an URL path and an URL GET parameter passed in so not sure how to handle that.\n. Should the (relative) path + params be an extra parameter or just appended to the plugin:/// URL? That probably means that I have to deprecate something in the JSON-RPC API but I'll have to take a closer look.\n. Because then we'd have to extract the addon's ID from the URL to be able to check if it's valid and it would break the current API of Addons.ExecuteAddon in JSON-RPC.\n. I think it's worth a discussion on how to do this best. The problem with the approach in this PR is that if XBMC closes or is closed unexpectedly (Android can kill any process anytime), there's no guarantee that onDeactivate() is executed and therefore volume might not be restored.\nI'd prefer options 2 or 3 from @jmarshallnz's list over this one if it is possible at all (maybe a problem with passthrough?). It would still be nice to be able to show XBMC's volume control slider when volume is changed while xbmc is active so maybe internally keep volume at 100% and control system volume in the background and pretend to adjust internal volume so that the volume control slider still pops up and shows the proper volume level. But that might require too many hacks in CApplication (or wherever we handle volume now since AE merge).\n. I don't see how controlling the system volume in 2) or 3) is a problem when xbmc crashes. If any volume change done in XBMC is forwarded to the system volume, it will behave the same way as the stock android player and most other video and audio players I've used on my phone (yes I know smartphones are not the primary target). Whether we let android display its volume slider overlay or use xbmc's volume control slider to indicate volume changes would probably be a question of personal taste. Showing androids volume slider would make it obvious that the user is controlling the system volume and not some xbmc internal volume.\n. I don't really have a preference. XBMC volume slider better fits the overall presentation whereas the native android volume slider makes it more obvious that the user is controlling the system volume.\n. Just changing the initial value of the scraper setting isn't enough in case of an update because the value stored in guisettings.xml will overwrite whatever initial value we set. So anyone updating from Eden to Frodo will still run into the broken addon. But I don't think there's much we can do about it.\n. Yup but that only helps for any newly created musicvideo sources. For any existing musicvideo sources the scraper for that source will still be set to Last.FM.\n. I once played around with the default scraper settings and having an invalid (i.e. non-existing) or empty default scraper will result in very odd behaviour of the \"Set content\" dialog. Sometimes I wasn't even able to get to the \"Get More...\" button and the content-options at the lower half of the dialog were actually the ones from movie content and not the one from musicvideo content. So we should avoid setting no or an empty default scraper.\n. After some discussion with Memphiz who looked at how to integrate this with iOS I've made some changes to the ITouchActionHandler interface. OnSingleTag(), OnSingleLongPress(), OnDoubleTap() and OnSwipe() now take an optional \"pointers\" parameter which indicates how many fingers/pointers were involved in the touch action. So OnSingleTap() with \"pointers\" = 2 means that there was a single tap of two fingers/pointers etc. Because of this change I also removed OnDoubleLongPress() because it can be represented by OnSingleLongPress() with \"pointers\" = 2 whereas the meaning of OnDoubleTap() has changed to a touch action where the screen is tapped twice in quick succession (like a double click) which IMO makes more sense.\nThis change effects how we do the keymapping because we need to support all those touch/gesture actions for multiple pointers. What I've come up with is to define e.g. ACTION_TOUCH_TAP and ACTION_TOUCH_TAP_TEN with values that range over 10 numbers. So ACTION_TOUCH_TAP_TEN = ACTION_TOUCH_TAP + 10 and a tap with two pointers would be ACTION_TOUCH_TAP + 1 etc. I'm not sure if this is the best way to do this but our action translation system basically relies on the fact that there is an action ID for every mappable action. If anyone has a better idea, please let me know.\nMemphiz and I also discovered another problem: How to differ between a pan and a swipe gesture. Detecting a swipe gesture is easy but it is only possible to do this detection once the gesture is finished so as long as the gesture isn't finished yet, it is also a pan gesture. In the generic touch input handler I wrote (which is used for Android) I send both pan gesture and swipe gesture events but on iOS if you want to detect swipe gestures you can't detect pan gesture and vice versa. Up until now this was solved by having swipe detection logic in the pan gesture action handling in the places where necessary but that requires code duplication everywhere where swipe detection is needed and obviously doesn't allow swipe gestures to be user-mappable. Does anyone have an idea on how to tackle this?\n. I added the work from @Memphiz to integrate iOS into this. There's still the pan/swipe problem that needs resolving though.\n@Memphiz: both zooming and rotation snap back still work the same on Android for me.\n. I rebased the commits and made some additional changes:\n- I turned the enum values of EVENT_RESULT into flags so that a GESTURE_NOTIFY query can return more than one possible gesture (e.g. zooming and rotating) and also adjusted CWinEventsWin32 accordingly.\n- I made use of the new flag nature of EVENT_RESULT in CGUIWindowSlideshow\n- I fixed a bug in CGUIWindowSlideshow which made it impossible to vertically move a picture, if it was zoomed but not enough to be horizontally moveable.\n- I added a new method QuerySupportedGestures() to CGenericTouchActionHandler as a wrapper for the GESTURE_NOTIFY queries to the GUI control.\n@Memphiz: I had to do a forced push. The code should now be ready for you to try to figure out the pan/swipe problem on iOS. There are cases where a control supports both panning and swiping (e.g. in the slideshow if a picture has been zoomed and can be moved (through panning) vertically but can not be moved horizontally and therefore swipe left/right still works to get to the previous/next picture.\n@anyoneelse: Does anyone have a touch device with windows 7 who'd be either willing to do the necessary changes to the win32 touch handling code OR who'd be willing to be my gpig for blind coding changes?\nWhat about Windows 8? I checked and it comes with a new (and probably improved) touch input API (the old implementation should still work though). Does anyone have a (non-ARM) touch device running windows 8 and XBMC?\nI checked the code and didn't find any touch input support for ubuntu/linux. Are there no such devices or is there no touch support? Or is the touch just turned into a mouse event by the OS?\n. @Memphiz: I've pulled in your swipe support work and have done some adjustments to the ITouchActionHandler interface. Did you have time to look into calling OnTouchGestureStart() and OnTouchGestureEnd() for zoom and rotate gestures? I haven't done a rebase yet because you mentioned possible merge conflicts with some stuff done by @ulion. How should we handle that?\n. @Memphiz: done, just let me know which commits to pull in and then I can squash and rebase them with your other commits. Thanks.\n. @Memphiz: Thanks for the update. I've merged the xcode changes from your fixup commit with the other commit messing around in the xcode file. Furthermore I've added the gesture start/end changes into 79c1030. Should I merge  d091776 (swipe support) into 79c1030 as well or do you want to keep it separate?\nDoes the rotation snap back now work? Anything else that needs work or is all good now on iOS?\n. Great, so I guess this is ready to go in during this merge window. I'll give it another day or two in case someone else has something to say about it and if not I'll punch it in. The win32 adaption can be done as soon as I can test it and @theuni said that touch support on linux (which we currently don't have anyway) requires some more work as well which can be done in the future.\n. I also got confirmation from @topfs2 that it works fine for him.\n. Just as an FYI @wsoltys tried to update to a newer version a few months ago on win32 and it was reverted because it caused a lot of crashes on starting/stopping the webserver while XBMC was running. But since then there have been new versions. Ideally all platforms would use the same version as whatever is in the ubuntu repo i.e. 0.9.20-1.\n. @ulion: Any idea since when (which version) this problem exists? We are not necessarily bound to the thread pool, we could also use one thread per connection but I figured a thread pool would be faster and less resource intensive.\n. So for this issue it doesn't really matter whether we use 0.9.17, 0.9.20 or 0.9.24+ right? I'll double-check on win32 if this is a problem but when I made #2262 I played around with starting and stopping the webserver and didn't run into any trouble.\n. See #2316.\n. Maybe we should use the same logic as the webserver's /vfs handler does which currently only allows access to directories, subdirectories and files that are part of a source available in XBMC. It's not perfect but a start.\n. It already is in the \"Choose art\" dialog like the \"Get more...\" button when opening the dialog of available addons of a specific addon type. So it's not really a seperate button, it's the same button that is always present (but often hidden) in the DialogSelect dialog just with a different string and there's no need for skinners to change anything.\n. I'll have to re-check tomorrow but I have several tv shows with additional artwork types like clearart, logo, landscape etc and some of my oldest tv shows don't offer these artwork types in the \"Choose art\" dialog. The fixed types \"banner\", \"poster\" and \"fanart\" are displayed for all items independent of whether they have a valid artwork assigned or not.\n. @Hitcher: I know but @jmarshallnz said that if you add a \"landscape\" artwork to movie A that it should also be listed for movie B (with no actual image assigned to it), which is definetly not the case in my setup (at least not for tvshows). That's why I need the \"Add art\" button to be able to add non-standard artwork types like landscape etc to tvshows where Artwork Downloader doesn't pick them up automatically.\n. So can this go in as is or do I have to write a new select dialog first that allows filtering and adding a new item? I had a quick look into it and I can't think of an easy way to integrate such a functionality in the existing CGUIDialogSelect implementation because the filtering functionality should be optional and as we don't have flowing layouts, the dialog looks silly if the filter text box is invisible and there's just an empty space. But then again I know very little about skinning and it might be possible to do it in another way.\n. I don't think I understand what the problem is.\n@Memphiz: IIRC it was @theuni who added the CWinEvents implementation on Android. I made the first attempts at forwarding input to CApplication but I did it through direct calls which obviously ended up in the wrong thread ;-)\n. The question is if this should happen at all. The CWinEvents and message pump should only be used to get the events into the main/GUI thread so that they are handled in the proper context. If a user input triggers an event that goes through the message pump into CApplication::OnEvent(), that code will be executed in the main thread. So any other event triggered by that code should not have to use CWinEvents and the message pump but should be able to call into CApplication::OnEvent() directly. Or did I miss something?\n@ulion: Where is the event triggered that causes this recursion?\n. Are we sure the allmusic scraper will never work again? Because if it will, it becomes impossible to set it as the default scraper because this logic will always overwrite it.\nPS: The same applies to the logic we added for the default music video scraper.\n. OK I have addressed all the comments raised by @jmarshallnz and I've even reordered the commits as recommended. I haven't looked into the sorting issue yet but hope that I can get to it before this merge window closes.\n. Fixed the comments.\nShould I merge this in and address the sorting and potential GUI improvements later?\n. Like I wrote in the PR description this was more meant as an RFC. There are a few more refactors of the same type as the ones already in place which I could add to this PR before it gets merged. Just wanted to know if the direction this is going is ok.\n. I've added some additional commits which introduce CMediaSourceSettings (to read/write sources.xml and access all the sources) and CViewStateSettings to access the different view states. Furthermore I've moved all the logic to read playercorefactory.xml into CPlayerCoreFactory.\n. OK I've done some additional reorganizing by adding CApplicationSettings and CMediaSettings and moving RSS loading into CRssManager. There are two more areas to go (display/resolution and profile settings) to clean up CSettings and CGUISettings completely but those two have a much bigger impact so I'd like to postpone those for a seperate PR.\nAs you can see this one has gotten quite big as well so if preferred I can split it up as well to make it easier reviewable (e.g. one PR for the first 8 commits and then another for the other 8 commits).\nPS: Tomorrow I'll do compile tests on linux and android.\n. TBH I'm not sure about the performance impact of using a map and variants. There is at least one case (replay gain) where we actually retrieve the values of some GUI settings everytime they change and store them in a local struct/variable to be able to access the values without the map lookup so there seem to be situations where the performance impact is too high.\nIMO the advantage of seperate CFooSettings classes is that the whole settings logic gets a bit of a structure. Right now everything is thrown in CSettings (and some of it in CGUISettings) and it becomes kind of a mess (at list in my opinion). E.g. the whole profile handling could certainly do with an extra class instead of having it all in CSettings. Furthermore changing some of those settings has additional impact which would again need special casing if we'd go with the map lookup and again we'd end up with logic that has absolutely nothing in common to be right next to each other in the source code. One of the ideas of my settings refactoring is/was to move code where it actually belongs e.g. the actions performed when changing the PVR backend addon have nothing to do with CGUIWindowSettingsCategory but should be handled somewhere in the pvr code.\nThe main disadvantage I see with using different classes for some of the additional (and non-GUI) settings is that it's not possible to make them accessible to the outside (python, json-rpc, ...) in a generic way as it would be possible with a map. But the question is if we actually want to expose things like current video settings, default video settings etc.\n. I had to make some fixes for this to work on linux and android but now it compiles fine on both platforms.\nSo what's the general opinion on this? Should I keep going in the direction I'm headed or should I look into moving towards a map of CVariants for all the non-GUI settings?\nEither way IMO 97182e1, b52b0ce, a90c791, parts of 987a87f, ff065c1, ed4a57d and e2bd827 would be valid \"cleanup\" commits (with some adjustments) independent of the direction we want to take as they move the loading of other config files (not guisettings.xml) into their proper code location. I can extract those commits for now and adjust them so this can move forward independent of the general decision on whether to use seperate CFooSettings classes or a map of CVariants.\n. In my settings refactor work there are only callbacks (on value changes) for the \"GUI\" settings (after the refactor they aren't really GUI settings anymore but they are still the only values that are shown in the GUI settings window) and there are no callbacks for all the other setting values we currently store in CSettings because those are kinda hardcoded with the fixed member variables right now. If we moved to a map of CVariants we could also add callbacks for those but we'd kinda loose the information on what type a setting has and there are some \"nested\" types with members of their own. For the GUI settings I've written an XML file containing all the information (type, range, ...) about every setting but I'm not sure if some of the non-GUI settings (e.g. default/current video settings) would fit into that XML description.\nIIRC I didn't come across a use case where multiple listeners registered for a callback of the same GUI setting. For the non-GUI settings there might be multiple listeners e.g. for volume change (specific audio/video player and CApplication).\n. See #2258 for a PR containing only the cleanup commits.\nWill update and rebase this PR on top of #2258.\n. After having merged the settings cleanup PR which was a collection of the cleanup commits from this PR I looked through the remaining changes and I think there are some changes/refactors that make sense and can not easily be represented with a map of CVariants. An example is the refactored CSkinSettings class which contains all the skin settings related methods like TranslateString, TranslateBool etc. IMO they are better placed in their own class than in CSettings. Same goes for CMediaSourceSettings and maybe even CViewSettings. I agree that most of the getters/setters in CApplicationSettings and CMediaSettings (apart from the watched stuff) could be simplified with a map of CVariants. Your thoughts @jmarshallnz and @cptspiff ?\n. I'll make a seperate PR for CSkinSettings, CMediaSourceSettings and CViewSettings and once those have been cleaned out of CSettings I can take a look at simplifying all those getters and setters for the remaining settings.\n. Closing this one, as it has been split up into different other PRs.\n. I can look at it. Shouldn't be much work.\n. OK it's a bit more difficult than I thought. There are two places in the code with fallback logic to use the first remote image but if we use std::set instead of std::vector, there is no \"first\" entry anymore. @jmarshallnz your thoughts?\n. @jmarshallnz I looked into using a std::set again to save those for-loops but there are two problems:\n- with an std::set we loose the order of the types i.e. \"poster\" and \"fanart\" won't be at the top of the list anymore\n- CVideoDatabase::GetArtForItem() fills an std::map with the available artwork types and their values and there's no easy way to retrieve just the map keys (i.e. the artwork types) without using a for-loop so there is no real gain here\nTherefore I propose to leave the code as is.\n. This doesn't work as GetAudioCodecName(), GetAudioBitrate() and GetChannels() only returns these values for the currently active stream so if you have multiple audio streams you'll end up with a result where \"codec\", \"bitrate\" and \"channels\" have the same values across all returned audiostreams and for all except the currently active one that information will most likely be wrong. That's the reason why it isn't already in the code.\n. I'm gonna close this ticket for now. Feel free to re-open if you've made any improvements.\n. Thanks.\n. Aren't you missing the adjustments necessary in the JSON schema so that the \"audiostreams\" property of the Player.GetProperties response also is of type Player.Audio.Stream.Extended? Actually we could probably drop Player.Audio.Stream.Extended and add its additional properties to Player.Audio.Stream because there's no difference now anymore right?\n. Forgot about this before: Please change the version in ServiceDescription.h to 6.0.4 but put it into a seperate commit. Then it's ready for merging. Thanks.\n. You need to rebase your commits and you can drop the version bump as the last version bump was a new feature as is this one. So just drop your last commit and do the rebase to master and then ping me and I'll merge it in.\n. @jmarshallnz: Well in my settings refactor it would be possible to implement more generic python methods that would allow something like\nxbmc.setSetting(\"foo\", \"bar\")\nwhich would automatically trigger the proper change in behaviour. But in the end it would behave the same i.e. if the provided value does not make sense it will fail silently.\n. Hm seems like we forgot to merge this one on March 1st?\n. Looks good apart from the two comments.\n. Assigned to next merge window. Thanks.\n. I built my own libmicrohttpd.dll.lib import file as the distributed .a file is for MinGW and not for VC++. It will obviously be part of the updated dependency package.\n. I just went with the release version that also came with pre-built win32 binaries. All the other releases are source code only. I can try to build another version with MinGW though.\nWhile discussing these versions: why did darwin bump to 0.9.24 and not to 0.9.20 which is distributed by Quantal and is also the version in the Ubuntu development repo? If we want to use the same version on all platforms, 0.9.20 seems like the best candidate.\n. OK I did a few more tests on win32 by starting and stopping the webserver multiple times and doing several HTTP requests in between and didn't run into any crashes or anything. So looks like win32 is not affected by that bug @ulion discovered.\n. Did libmicrohttpd change its license between 0.4.6 and 0.9.x? I checked the COPYING file of 0.4.6 and 0.9.20 and both are LGPL v2.1 unless you don't compile with https support, then it's either LGPL v2.1 or eCos license. So not sure what would change with a bump.\n. See #2316.\n. So what's the consensus here? The problem with building libmicrohttpd from source on win32 is that it depends on a lot of other libraries like libgcrypt and ligbnutls which again depend on other libraries etc. We'd need to setup a complete MinGW build environment and system to be able to build all those binaries.\nThe drawbacks of this bump is that it increases the final size of the XBMC installer and it means we have to switch to one connection per thread because of the bug discovered by @ulion (his fix has just been commited to the libmicrohttpd svn) but who knows when libmicrohttpd will release updated win32 binaries.\n. 0.9.17 is currently the highest version with a release containing win32 binaries. But as mentioned earlier Ubuntu et. al. distribute 0.9.20-1.\n. Can I push this in?\n. Not a clue. The one that bumps libmicrohttpd for osx has been closed by @ulion.\n. Good luck with win32 and unified deps ;-)\n. The problem is that anything between 0.9.11 and 0.9.26 (excluded) has a (platform-dependent) bug mentioned by ulion. So e.g. iOS can't go with 0.9.17 because then it would have to use a different threading model than the others. Not sure what other platforms have the same problem, I just know that win32 doesn't. So if possible we should use 0.9.26+ but there's no pre-built win32 binary for anything newer than 0.9.17.\n. Looks good AFAICT (apart from the whoopsies you mentioned yourself). Looks like we won't make it much further without some additional Java code.\n. Apart from the missing detach I commented on, there are a few cosmetics (missing spaces before/after \"=\" and between \"if\" and \"(\") but didn't spot anything else otherwise.\nIt's hard to see if this actually works in all cases as well as the android lifecycle is very complicated (and confusing). The old code certainly wasn't ideal.\nIIRC one of the odd use cases in the lifecycle is when long-pressing Home to get to the task manager. The app receives an OnPause() (and should stop doing anything in the GUI) but it doesn't receive an OnDestroyWindow() because the window is still visible in the background of the task manager.\nI'll give this a test run when I got some time and I'll try to cover all use cases I can think of (including the task manager scenario, being Home'd etc).\n. In the current/old code, video and audio playback is always paused when we are Home'd or when the task manager is open so that would be a regression if we want to keep that behaviour.\n. Go ahead. I know who to blame from now on ;-)\n. You reset it so that it gets fetched by the background loader?\nIf I understood correctly the problem is that the CFileItem objects used by g_playlistPlayer and the ones in CGUIWindowVideoPlaylist are not the same right? In that case I fear that resume point is not the only property that might cause problems. Actually any property that is changed by the user in the GUI after an item has been added to a playlist will probably not be synced with the CFileItem in the playlist.\n. Right, I forgot about the resume point check in PlayMedia(). I'm OK with this. Probably best ping @jmarshallnz as well.\n. Could you also bump the version of JSON-RPC in ServiceDescription.h to 6.0.2 because this is a fix that changes the behaviour? Then it's good to go in.\n. Nope updating the commits in a PR doesn't create any PR specific notifications/email.\nIdeally every change results in a version bump. That way developers (and myself) can know exactly what is available in an XBMC install when a bug report or question comes in. But it's a bit of a hassle during the bug fixing period of every month. I'll merge this one and then update my PR with 6.0.3.\n. No bug report or feature requests on github.\nPlease use the forums.\n. Those are our terms/rules. On github you spam 200+ developers with every comment you make and in 99% of the cases only 1 or 2 of them care. Github is our place for developers only and only to discuss code contributions and nothing else. For everything else, we have our forum where anyone can post without spamming anyone and where you will nonetheless get a response from someone interested.\n. No bug report or feature requests on github.\nPlease use the forums.\nPS: Not possible right now but I'm working on something that will make it possible eventually.\n. No bug report or feature requests on github.\nPlease use the forums.\n. Absolutely agreed on that. I can see the reason that there is some extra code in CGUIWindowVideoBase because the CGUIVideoInfoDialog needs to be closed during the update (ideally that shouldn't be necessary either) but all the rest of it should certainly be moved to the info scanner.\nBut with this approach the problem is temporarily fixed and it could most likely also be used for 12.1.\n. Please use the forums or trac for bug reports (and feature requests).\nThanks.\n. Thanks for the hint. Will see what existing solutions I can find and try to unify them if possible.\n. OK I've unified the implementation of my CBuiltins::Escape() and the existing CFavourites::Paramify into StringUtils::Paramify and added a unit test for it. Concerning $ESCINFO I wasn't 100% how it works and I didn't wanna mess around in that code.\neb41220, 4a420ea and 609522d would be backport candidates.\n. Please use the forums for feature requests and bug reports. Thanks.\n. TBH I'm opposed to moving away from thread pooling completely out of two reasons:\n- We've been using it with 0.4.6 on all platforms since 1.5 years on all platforms and there have never been any complaints.\n- Thread pooling is faster and less resource intensive than spawning a new thread for every connection. Before I switched to thread pooling I looked into some other webservers like Apache etc and they all usually use thread pooling.\n. OK I've moved the #ifdef around MHD_USE_SELECT_INTERNALLY and MHD_USE_THREAD_PER_CONNECTION into CWebServer::StartMHD() but still kept the functionality to be able to pass in other flags (I'm working on HTTPS support which will require this).\nIs this ok to go in?\n. Great, nice work.\n. Looks fine.\n. The main change in behaviour that I see with these changes is that directories aren't listed at the top of the list anymore. But that was a bit of a limitation anyway because it screwed up the sorting.\n. Yeah that probably depends on the OS but in XBMC you can set a flag to tell a CFileItemList object whether to special sort directories/folders or not.\nThe impact of having the \"filetype\" property set in other calls is that it will appear in the output even though it was not requested by the client. I don't think anyone cares for a \"filetype\" property in a VideoLibrary.GetMovies call.\n. @cptspiff: Thx for mentioning that. I actually have that in my settings refactor branch but I copied the code from CSettings for this PR. Will make use of XMLUtils and rebase ASAP.\n. @cptspiff: actually that last statement was wrong. There's not really anything that can be done with XMLUtils in CRssManager::Load() because it's all done with attributes and multiple xml tags using the same name. So we have to get the TiXmlElement and iterate through all the children/siblings etc which is currently not possible with XMLUtils.\n. IMO you can squash the two commits together into a single one (e.g. with interactive rebasing) then you also lose the TODO that you add in the first commit and then remove in the second one.\n. The general implementation looks good and something a lot of people have asked for. Just a few things to improve.\n. Looks much better. Just a few small things and then the code is good IMO.\nI don't really have a strong opinion on what @t-nelson said because I have nothing to hide in my local network.\n. Thanks, code looks good now for me.\n. Looking over the commit order I'm a bit confused. Is it just github showing the commits in the wrong order or are they actually in the wrong order? Shouldn't it be\n1. [webserver] add HTTPSpecialHandler\n2. register CHTTPSpecialHandler\n3. add HTTPSpecialHandler to vcxproj\nActually 1 and 2 could be squashed down. As you'll have to rebase anyway, it would be nice if you could add a \"[win32] in front of the \"add HTTPSpecialHandler to vcxproj\" commit message to make it more obvious.\nThis will also need some xcode monkeying when merged.\n. Thanks. Will if the commits are in the wrong order, the code won't compile for each commit. Usually the order wouldn't matter but if you e.g. bisect to find a bug and you end up between those commits you can't really check if that revision works because you can't compile it.\n. @topfs2: Where would the security be through JSON-RPC? We have permissions but we don't do anything with them at the moment. Furthermore for an average joe user it's much easier to open a browser URL to retrieve the log file from a \"remote\" machine than having to execute a JSON-RPC request etc.\n. Yeah I forgot to add the unregistering because we clean that array in the CSettings destructor anyway so it never was a problem. But I'll add the calls to keep it clean.\n. This PR does not really have any impact on behaviour or anything. It's just refactoring and moving stuff around. Ideally I'd like to throw it in the first day because I already have another branch which depends on this one with more refactoring etc. The faster I get these things in, the sooner I can go back to the actual settings refactoring work (damn that rebase is gonna be a pain :-/ ).\n. I've added a commit with the necessary calls to the UnregisterFoo method as requested. I'll check the other PRs currently queued for April and see if there are any potential issues (ignoring project files).\n. I just made sure this also compiles fine on linux. Had to add two small include fixes.\n. I'm back and I remember that I had a reason but I don't remember what :-/ Let me reboot my brain and get back to you. If I don't remember, it can't have been a very good/important point.\n. Actually I remember what was going on. Android does this as well so there shouldn't be any problem about it on iOS either. The reason @Memphiz didn't do it like that at first was because he said/thought that the iOS touch framework only allows for EITHER panning OR swiping but not for both simultaneously so the only way to get around that was to first determine which gesture was supported/expected. But that limitation doesn't exist (anymore) so this should be fine to go in IMO.\n. Oh I didn't know about AMotionEvent_getPointerId(). With that it might even be possible to get rid of the whole UpdateTouchPointer() stuff because I only added that because I couldn't figure out how to determine to which pointer an event belonged. The pointer index was always 0 for touch move events. But this change might also mess up some of the gesture recognition logic. I'll have to take a closer look.\nDid you find some case where multitouch currently doesn't work (because you label this PR with \"FIX\")?\n. I've played around with multiple touches a bit and looked at the indexes and IDs of the touch events provided by android and I'm not sure what the best solution is. With your changes (i.e. passing the pointer ID instead of the pointer index into CGenericTouchInputHandler) there will be problems when the user e.g. first touches down pointer 0 (ID = 0), then pointer 1 (ID = 1) but then first lifts pointer 0 (ID = 0, but now the index of pointer 1 becomes 0 whereas the ID remains 1) and then pointer 1 (ID = 1 but index = 0) because CGenericTouchInputHandler already does that switching internally i.e. if the primary pointer is lifted, it replaces it with the next available pointer.\nThe general questions are\n- where should this be handled? In the OS-specific raw event handling or in CGenericTouchInputHandler?\n- should we work with indexes or with IDs? If we want to work with IDs we probably need to move from an array to a map because we can not assume and be certain that the IDs are in a specific order.\nAnother problem on android is that touch move events are always sent for the pointer with index 0, we don't receive events for any of the other pointers (even if we don't move the pointer with index 0) so we can't get rid of that loop calling CGenericTouchInputHandler::UpdateTouchPointer() which I kind of dislike.\n. Well they don't have to be global, we only really care about events from the first touch down to the last touch up. After that, we don't care about anything until the next (first) touch down. In between we neither care about index nor ID.\n. Yeah it's not really a problem, it's just ugly IMO that we get the event with an index that may not actually have moved. That's why I added the UpdateTouchPointer() method so that we can update all touch pointers in a touch move event.\n. This would require some extra logic that makes sure that all the swipe gestures are done in the same direction etc. But it might actually work with some small additional changes. I'll take a closer look.\n. I looked at the code again and noticed two things:\n- Wouldn't it be better to count the number of touches in OnTouchDown() and OnTouchUp() instead of using \"index + 1\"?\n- I don't think the logic is 100% correct because OnTouchMove() will only be called for the pointer with index 0 so all the checks for the swipe direction etc will only be done for that pointer. The other pointer is completely ignored so you could touch down two fingers but only use one for swiping and the result would be the detection of a two-finger swipe. You could even do two swipes in opposite directions and it would still be recognised as a two-finger swipe in the direction of the primary pointer.\n. 21cee17c493ef75be5e5a521d694cd76c3a3d05d works for me and also takes care of the two points I mentioned before i.e. with that code it's not possible to detect a two-finger swipe gesture if the two fingers/pointers move in different directions. Should I queue that one up as a PR and close this one?\n. Closing in favour of #2514.\n. Cool, I actually tried to get that to work once but didn't succeed but I didn't have the time to look into it more. That was actually one of the goals of my touch refactor so that users can add these kind of gestures. I'll give it a try and report back.\n. OK finally managed to fix my android build env with the new depends and gave this a spin. I didn't see any regressions so should be fine.\n[ot]\nI tried to map swipe left/right in the music visualization window to SkipNext/SkipPrevious but it didn't work because CGUIMusicVisualization doesn't handle SkipPrevious/SkipNext. Didn't try it with fullscreen video though.\n[/ot]\n. Why don't we just replace the GUI_MSG_UNFOCUS_ALL message with something that can be passed through CWinEvents with an XBMC_TOUCH message by e.g. introducing ACTION_TOUCH_UNFOCUS or something like that? GUI_MSG_UNFOCUS_ALL is only used in touch-related context right now anyway and it is only handled in CGUIWindow so that code could be moved from CGUIWindow::OnMessage() to CGUIWindow::OnMouseEvent().\nIt doesn't cover the case with fullscreen windows (not 100% sure though what the issue there is) but it would at least fix the problem at hand i.e. the order of event/action execution.\n. You're forgetting that the problem of unfocusing a GUI control is not only present on tap events. It's also present on long press events and on pan events in a list. So just focusing on the tap event and its translation to a mouse left click doesn't cover all the cases.\n. Didn't have time to look at the code yet. Will do so tomorrow.\nWhat @MartijnKaijser mentioned is some work I started on a dialog that basically lets users handle one-to-many, many-to-one and many-to-many relationships like sets, tags, actors, directors, writers, .... within a single dialog (per relation). You can see a screenshot of the WIP dialog here: https://www.dropbox.com/s/591z53rckceu30i/screenshot003.png\nIn that particular case the dialog replaces the \"Add movies\" and \"Remove movies\" context menu options in the Movie Tags view with a single editor that shows all the existing movies (that are not part of the selected tag) in the left list and all the movies that are part of the selected tag in the right list. Selecting a movie in the left list will add it to the tag, selecting a movie in the right list will remove it from the tag. In an advanced version I also added an (optional) \"Add\" button which allows to add additional items to the left list so if a user e.g. edits the genres of a movie and he wants to add a new genre, he could do so very easily in the same dialog and assign the new genre directly to the movie.\nApart from the dialog itself I haven't done any work on its integration yet so where and how to make that dialog available would still need to be discussed etc. But obviously first I wanted to finish the dialog to be able to show it to see if people like it or not.\n. Yeah in case of applying a set to a movie that 1:M/M:M dialog is of no special use (except that it wouldn't require an extra \"Clear\" button or anything because you could just remove the one item from the right list to clear it) but for the other way around (i.e. if you are in the Movies -> Sets view) it would certainly be useful.\nSo my dialog is not really a replacement for this but it would be nice if we could discuss, unify and improve the integration of all these \"edit item\" stuff into one place (code-wise and GUI-wise) instead of throwing something in and having to re-do it once more stuff like that comes in.\n. I think the discussion about the UI integration should be done in either http://forum.xbmc.org/showthread.php?tid=154474 or a new thread in that forum so we don't spam everybody here.\nConcerning the reverse (i.e. from the sets view) I prefer to manage my media that way because I can assign lots of movies to one set/tag in the same dialog and I don't have to go to every single movie and open the same dialog over and over again.\n. Ideally we would add this behaviour through the new touchscreen.xml mapping and not as hardcoded action handling. There are already \"rotate\" and \"rotateccw\" actions available so a mapping for\n<keymap>\n...\n  <SlideShow>\n    <touch>\n      ...\n      <swipe direction=\"up\">rotate</swipe>\n      <swipe direction=\"down\">rotateccw</swipe>\n    </touch>\n  </SlideShow>\n</keymap>\nmight achieve the same behaviour without extra (hard) code. Could you give that a try instead?\n. Ah you want it to behave differently depending on whether you swipe on the left side of the screen or the right side? Yeah that's not possible with the XML.\n. Yeah it's a shame that it can't be done in the XML but adding conditional swipe locations would be a lot of work (it would obviously be nice to have but a bit overkill at this point).\nThat being said I'm fine with this going in as is in the next merge window.\n. OK I changed the whole PR because I had a different idea for an approach to improved swipe gesture recognition. The updated code allows swipe gestures with a perpendicular movement of up to 20 degrees. This allows gestures to be recognised as vertical/horizontal swipes even if the swipe movement is a bit diagonal (up to 20 degrees from the horizontal or vertical movement) which improves swipe gesture recognition a lot especially because most swipe gestures tend to move up/down a bit at the end of the gesture.\nThe numbers I've chosen (20 degrees) etc are all just trial and error numbers and can be further tweaked if necessary. I've read somewhere that Windows has a similar functionality and IIRC they used 25 degrees.\nFurthermore ideally we'd use a parabolic curve to define the limit/variance of the perpendicular movement because at the beginning of the swipe gesture, the variance shouldn't be so big.\n. Updated based on the comment of @jmarshallnz. Thanks.\n. @ulion: I don't know of any way to control which one is preferred/considered first. I think it fully depends on how you move your fingers. If Windows thinks it looks like a rotate gesture, it only sends rotate events. If it thinks it looks like a zoom/pinch gesture, it only sends zoom events. The decision is not up to us. The only thing I can control is fully enabling/disabling these events.\n. Looks good apart from the things I commented on.\n. Thanks.\n. @Memphiz can I get you to do some xcode monkeying and send me a PR? Thanks.\n. @Memphiz great thanks a lot.\n. @FlyingRat: You should read the \"Git Usage\" article on our wiki: http://wiki.xbmc.org/index.php?title=Git_Usage\nIt clearly states that you have to set core.autocrlf to true. It doesn't matter whether you use jenkins or anything else, every dev committing something to XBMC needs to set core.autocrlf to true because otherwise you run into problems when people from different platforms (Windows vs. linux/osx) commit/pull stuff. Even github has a page stating that anyone using git on Windows should set core.autocrlf to true.\n. The changes look good. Have you tested Playlist.Add, Playlist.Insert and Player.Open?\n. Thanks @Memphiz, will do.\n. There's no mail notification on additional/changed commits on a PR.\nConcerning the merge: we work in a monthly cycle where PRs that add new functionality can only be merged in the first 10 days of a month. The remaining 20/21 days are for bug fix commits/changes only so this PR will have to wait till May.\n. I'm generally OK with this but IMO it doesn't really make sense to allow a client to specify in Playlist.Add that the items are of type \"music\" when the playlist is of type \"video\". AFAIK XBMC won't be able to play such items in the playlist.\n. Sending an InvalidParams error is probably the easiest. For slideshows (i.e. picture playlists) you might check for \"picture\" or \"video\" because they are both valid for slideshows.\n. Looks good for the next merge window.\n. We already use OnPause for the other players so IMO using that makes more sense.\n. The question is whether looking at a picture (i.e. not in slideshow mode) is considered playing it. It doesn't really do anything without user interaction. IMO we have to differ between whether we are in a slideshow or not. If a slideshow is active (i.e. the pictures change automatically) sending OnPlay with speed=0 is absolutely wrong and OnPause should be used. If we're not in a slideshow we should just send OnPlay. The problem with providing speed=0 is that JSON-RPC clients consider speed=0 as paused.\n. While looking through the code I just realized that we already do this in RunSlideShow at https://github.com/xbmc/xbmc/blob/master/xbmc/pictures/GUIWindowSlideShow.cpp#L1127 so I guess I had the same idea once but forgot about it. In that case this would even be a fix.\n. Any reason why this PR contains the OnPlay announcement change that you already opened #2573 for?\nI haven't taken a look at the code but the slideshow code is a mess in general so I'm sure you've added some much needed and nice improvements.\n. Furthermore it's not only the title listing that might have changed. Adding a new movie to the library could also introduce a new genre so library://video/movies/genres.xml/ would need to be updated as well.\nOn a related note: Do you distinguish between flattened views and non-flattened views (depending on the GUI setting)? Because those use different paths as well.\n. Looks good to me apart from the minors.\n. Looks good for next merge window.\nREMINDER for myself: \n- This needs to go in AFTER 2567 due to JSON-RPC versions.\n- Needs xcode changes.\n. We've disabled the milestone and issue feature of github because too many people were spamming too many devs with unwanted bug reports and support requests. Unfortunately it's not possible to only disable issues but keep milestones so we had to disable it all.\nI'll review the AddFavourite() implementation when I got some time.\n. The AddFavourite() looks good to me but @jmarshallnz certainly knows more about it than me.\n. Just as an FYI (as I looked into HTTP Range support in detail last week when I implemented it for xbmc's webserver): Any webserver that doesn't support HTTP Range can either choose to ignore the header and just return the full data or return an appropriate error code.\n. Theoretically you can get rid of the xbmc. namespace/module for the constants but it's more hassle than it's worth IMO and would probably also require changes to the code generator. Either stay with xbmc. or go with @topfs2's suggestion.\n. What's the difference between your ShowPicture() method and just adding a single image to the image queue in CGUIWindowSlideShow and then starting the slideshow? It would allow you to use the already existing methods and not having to duplicate the CAnnouncementManager stuff (for which there are already ready-to-use methods as well in CGUIWindowSlideshow) and the handling of any possible video playback.\n. Maybe check https://github.com/xbmc/xbmc/blob/master/xbmc/interfaces/json-rpc/PlayerOperations.cpp#L537 and https://github.com/xbmc/xbmc/blob/master/xbmc/interfaces/json-rpc/PlayerOperations.cpp#L966 from JSON-RPC where it is possible to start displaying a single picture as well. It clears the slideshow playlist, adds the single item and then uses the GUI_MSG_START_SLIDESHOW message. In the end it comes down to calling runSlideShow() with an empty path (which is supported) after having already added the picture(s) you'd like to show.\n. I didn't say you should use the JSON-RPC API or anything I meant you should check out how I did it there. RunSlideShow has an optional parameter \"startSlideShow\" with which you can control whether to actually start the slideshow (including all special effects etc) or if it should just show the first picture and wait for user interaction. That's why I still think that you should be able to achieve your goal with less code duplication by first using Add() to add your picture to the slideshow list (probably need to reset it before that) and then calling RunSlideShow() with the appropriate parameters (empty \"strPath\" and \"startSlideShow\" as false).\nEDIT: Just to be clear once again I'm not opposed to the ShowPicture() builtin function you introduce at all. I just think that the implementation can be improved.\n. Yup taht's exactly what I meant. You save the \"stop video\" and the \"announce OnPlay\" logic duplication.\n. Probably after anyone else. Ideally nobody touches CSettings or CGUISettings in that time because otherwise I'd have to go do a sync of those in addition to the rebase ;-)\n. Sure, I just figured that's how we did it with @TheUni's depends stuff etc. Would be nice though if @Memphiz or whoever could make sure that this beast compiles on OSX as well (didn't test RPI either) so that other people can rebase and compile test their PRs.\n. I forgot to mention that some of the unit tests are currently broken because of these changes. I looked at it but the whole settings loading stuff is not very well done/supported in the unit tests even though a lot of code in xbmc relies on one setting or another. Therefore I didn't bother with fixing them yet as we should probably discuss how to better address this problem in general.\n. @popcornmix: Thanks for your feedback, I'll fix the compile error in IMXPlayer.cpp. Concerning your video output problem I've run into it once as well but then I never was able  to reproduce it :-/ I'll see if I can get it to show up for me as well.\n. I made a few updates:\n- fixed the compilation errors on OMXPlayer.cpp reported by @popcornmix \n- added some doxygen comments in ISettingCallback.h as this is the main interface for handling setting changes\n- moved CSettingSection, CSettingCategory and CSettingGroup into SettingSection.h/.cpp to reduce the includes in SettingsManager.h\n. @topfs2: Due to the rebase our discussion got lost. I see your point and I'm trying to get rid of the GetDependencies() methods in CSettings and CSettingsManager's public interface but it's not that easy :-(\n. @topfs2: The current callback handlers are implemented under the assumption that a call to OnSettingChanged() only ever happens if the value of the setting has changed. There is no logic in them to check if that's actually the case because I figured that it would be kind of code duplication (not c&p but still). But I can see your point that disabling a setting because of a change to another setting should result in a state change of the disabled setting. I can't think of an example right now but for a boolean setting the disabled state should be considered the same as the \"false\" value even if the value of the setting is \"true\". A question here is if e.g. CSettingBool::GetValue() should return\nreturn m_value && m_enabled;\nto save everyone else the need to check the value AND the enabled state or not. And how to handle this for other setting types? Boolean settings are probably the only case where something is started/stopped based on the value of the setting so it's probably the only case that needs this kind of consideration.\nA similar problem currently exists in the new system if someone would change e.g. the videoscreen.screen setting from anywhere else but the GUI. As the GUI currently handles the dependency logic a change of videoscreen.screen from anywhere else but the GUI will not result in any dependency handling and therefore the options available to videoscreen.resolution will not be updated and it will also the value of videoscreen.resolution will also not be updated if necessary (if the two screens don't have the same resolution). In this case there are three scenarios:\n- The list of possible options has not changed and therefore the value of the setting doesn't change either.\n- The list of possible options has changed but the old value is part of it so the value of the setting doesn't change, only its options\n- The list of possible options has changed and the old value is not part of the new options so the value of the setting has to change.\nThe last scenario will obviously trigger OnSettingChanged() because the value of the setting has actually changed but what about the other two scenarios? In the first we don't really have to do anything but in the second we at least have to tell the GUI that the list of options has changed. The question is if it makes sense to do this in OnSettingChanged() to save an additional callback method but forcing every callback handler to add\nif (setting->GetValue() != currentstate)\nchecks or if a new callback (e.g. OnSettingPropertyChanged) should be added.\n. Forgot to mention: Big thanks to @Memphiz for updating all xcode project files and fixing compilation on osx/ios/atv2.\n. @popcornmix: They didn't vanish, they are hidden because the default setting level is \"Standard\" and the passthrough settings are only visible on level \"Advanced\" and \"Expert\". In Confluence there's a new sidebar in the settings view where you can change the level.\n. @jmarshallnz: Agreed it is the responsibility of the callback handler to also check any other settings which a setting depends on. I guess the question comes down to whether OnSettingChanged() should only be triggered when the value actually changed or also when the state (enabled/disabled or the list of possible options changed) changed but not the setting.\nA related problem is that with \"dynamic\" option fillers (e.g. the list of valid resolutions for the current screen) it is possible that the current value of a setting is not a valid option anymore. This is only detected by (manually) triggering an update of the possible options. Currently this only happens through CGUIWindowSettingsCategory but IMO that's not the right place for it. But on the other hand it's also confusing that any call to retrieving the possible options of a setting can result in a change of that setting's value.\n. I've decided to move the translation logic to CVideoDatabaseDirectory and CMusicDatabaseDirectory as it covers way more cases.\n. @jmarshallnz: Could you be more specific? Which table would that be? Are there any other tables where we store these paths, maybe in the views database?\n. OK I re-organized the whole translation logic again and moved it into a new utils class CLegacyPathTranslation so that it can be used in different places like CVideoDatabaseDirectory, CMusicDatabaseDirectory, CMusicDatabase, CViewDatabase etc. I've also added the necessary db version bumps and translation logic for the musicdb and viewdb as mentioned by @jmarshallnz.\nBecause of the new files this will need some xcode love.\n. I've only added a few cosmetic hints but please follow our \"coding guidelines\" in general i.e. two spaces (not tabs) indentation, a { and } always go on a seperate line, no { and } around single line blocks, spaces between if/for/while/... and the following ( and so on.\nConcerning the IPv6 support in CWebServer there's a ticket somehwere on Trac (from @bobo1on1 IIRC) that contains a similar patch and some discussion on libmicrohttpds support for it.\n. Does the prefixed ++/-- really make a difference or is it just some theoretical gain?\n. Bad indentation but you can ditch the { and } in this case anyway as there's only a single command inside the for-loop anyway\n. Bad indentation (not that important in the service description but still looks nicer.\n. Bad indentation again\n. There already is a json object with the ID \"Library.Genres\" in AudioLibrary.GetGenres so you should rename this to something like \"Library.Genres.Videos\" (and adjust the one in AudioLibrary to \"Library.Genres.Audio\") or just ditch the whole ID definition as you don't use it anywhere else anyways. The one in AudioLibrary could be ditched as well.\n. You might wanna check if this call succeeded and only execute the for-loop and the call to HandleFileItemList when it succeeds (check AudioLibrary.cpp for the GetGenres implementation there).\n. Bad indentation.\n. One space too much in front of CVideoLibrary::GetGenres\n. You need to add a \"field\" parameter with the \"thumbnail\" value in an enum. I changed this behaviour a while ago but I forgot to remove it from AudioLibrary.GetGenres.\n. This should not be here and \"thumbnail\" should be an optional field.\n. This extra line is unneeded.\n. I'm not sure I like this. Sure it does what it should BUT we will end up with a file playing but not being in any playlist. If possible I'd prefer if every (audio and video) item that is being played is in a playlist because that makes it easier to access the currently playing item(s) by just checking CPlaylistPlayer.\nNot sure if adding the file to a playlist should be done here or inside CApplication::PlayMedia() though. Doing it inside PlayMedia() would have the advantage of being able to handle all those special cases like internet streams etc first before actually creating the playlist (if necessary).\n. I'm not sure I like this. Sure it does what it should BUT we will end up with a file playing but not being in any playlist. If possible I'd prefer if every (audio and video) item that is being played is in a playlist because that makes it easier to access the currently playing item(s) by just checking CPlaylistPlayer.\nNot sure if adding the file to a playlist should be done here or inside CApplication::PlayMedia() though. Doing it inside PlayMedia() would have the advantage of being able to handle all those special cases like internet streams etc first before actually creating the playlist (if necessary).\n. CFileItem::IsPlaylist() does not exists but CFileItem::IsPlayList() does so you need to fix that because otherwise it won't compile.\n. Why even use SQL's LIKE? No sense in using LIKE if there are not any wildcards (%) used. It will only slow down the DBMS as LIKE comparisons are a bit more work than equality (=) comparisons (unless the DBMS notices that it doesn't make sense to use LIKE itself).\n. I have to admit that I don't know. I took this from the current logic which chooses the audio stream with the most channels / best codec (see https://github.com/xbmc/xbmc/pull/700/files#L1L640).\n. It could be stored in g_langInfo instead of the value read from langinfo.xml (if we want to drop those) so that it can be retrieved using g_langInfo.GetDVDAudioLanguage() (or rename it to GetAudioLanguage).\n. I just checked the code and I'm not sure if this code does even affect DVDs because there is some code in DVDInputStreamNavigator.cpp which tries to set the audio stream using DllDvdNav::dvdnav_audio_language_select() (where we probably should replace the usage of CLangInfo::GetDVDAudioLanguage() by the new CLangInfo::GetAudioLanguage()).\n. Bad indentation. Either remove the { and } or fix their indentation.\n. This is not really needed as you don't do anything else after this if-statement.\n. bad indentation\n. bad indentation\n. bad indentation\n. bad indentation\n. Is this extra parsing (instead of using XMLUtils::GetStringArray() really necessary? Is it because of the optional < name > tag?\n. @jmarshallnz has already mentioned this earlier and this was my response:\nI don't really like doing the sorting myself either. The reasons why I did it that way is that I did not want to change the original order of the streams as read from the container. Furthermore I figured that in most cases there are one or two streams to sort so using std::sort doesn't really seem like it will provide a huge advantage. But if we don't really need/care about the original order of the streams I'm happy to remove the custom sorting code, implement the needed method to pass to std::sort und use that one. I'm guessing @elupus will be the man to tell me whether we want to keep the original order or not.\nSo if we don't need to keep the original order I can switch to using std::sort. Otherwise I'd either have to use the custom sorting implementation or copy the whole CSelectionStreams object into a new one in which I can change the order (because it's just a copy).\n. A c&p error. Thanks for spotting it.\n. It has been removed in the new code in my alternative branch (see the PR's last comment).\n. Any reason for the params parameter being a reference and not a const reference?\n. What's the difference between strArtist and artist? I didn't read through the thread so maybe it's stated there but it looks very confusing to me. Will strArtist always contain a single artist's name?\n. Why do you need this if GetArtist() also returns m_strArtist after these changes?\n. I don't like this at all. I did the whole conversion from CStdString to more suiting types like std::vectorstd::string for the very reason to get rid of such things. With these changes m_strArtist and m_artist basically contain the same information, just in a different form and m_artist is IMO the better representation because it's a list of artists. Sure the m_strArtist may be easier to use in a GUI context but not in the database context.\n. See comment above. What you do now is make a vector into a string and then back into a vector.\n. See comment above concerning m_strArtist and m_artist.\n. Would a m_data.array.reserve() make sense here as we know the size of strArray?\n. A simple return i->second == DB_READY; should be enough?\n. This is wrong. You can't change SORT_METHOD_PLAYLIST_ORDER because smartplaylists have their own sorting which the user can specify so we can't ignore that and sort by SortTitle. But the %T instead of the %L makes sense.\n. This doesn't look right. It will change the sort method of the tvshow view to whatever the user set it to in the movies view.\n. No need for this check. CJSONServiceDescription will make sure that parameterObject[\"deletefile\"] exists.\n. No need for the empty string initialization.\n. These need to go on a new line (also the ones further down).\n. No need to do all this here if you can't delete a tvshow anyway (you don't retrieve filePath).\n. Either pass VIDEODB_CONTENT_FOO directly to GetFilePathById() and get rid of the iType variable or move the call to GetFilePathById() outside of all the if-else code and call it only once.\n. Can be integrated into the above if-condition.\n. No need for the { } if there's only one statement.\n. I don't like this. It means that whenever someone just wants to retrieve the streamdetails we will also query the database for the cast, sets and other information that require extra queries. Either make an extra if-condition-block for the streamdetails or add an \"if (additionalInfo)\" in front of the videodatabase.GetFooInfo() call (not only here but also for episodes and musicvideos).\n. I don't really see any benefit from this. In JSON-RPC every CVideoInfoTag object is only retrieved once from the database then serialized into JSON and thrown away. In the GUI listings the thumbloader already checks against m_streamDetails.HasItems() before it tries to retrieve streamdetails so IMO there is no benefit in this extra member variable.\n. Sorry didn't get any email notification on your response. No the CVideoInfoTag object already exists in the CFileItemPtr from the list and both GetMovieInfo and GetStreamDetails just alter its details if necessary.\n. This needs to be fixed for win32 because the method must return a value (void) so make it return NULL;\n. I'd prefer using GetField(m_field, strType) instead of a fixed \"tvshowview.idShow\" in the SQL. That makes it more in line with all the other field accesses (except all the .idFile ones).\n. It's only about the \"tvshowview.idShow\" and not about the idShow in the sub-SELECT. If we wouldn't wanna have the \"select idShow\" in the sub-query we'd probably have to use EXISTS and NOT EXISTS and I never really liked those.\n. So caching HTML pages for a day and non-HTML pages for a year? Shouldn't be a problem.\n. Make i unsigned int (or size_t) and you don't need the cast to int to avoid the compiler warning ;-)\n. Same\n. This could be merged with the #elif defined(TARGET_LINUX) ... on line 38 i.e.\nelif (defined(TARGET_LINUX) || defined(TARGET_FREEBSD)) && defined(HAS_GLES) && defined(HAS_EGL)\n. Yeah iterators would even be better. The cast is to avoid the compiler warning about comparing an int (i) with an unsigned int (std::vector::size()).\n. Shouldn't this be \"system.h\"? Obviously \"xbmc/system.h\" will also work but it confused me for a sec as I had to check if there's a second \"system.h\" somewhere.\n. One space too much indentation. But in the light of davilla's crusade against log messages this one could be removed as well I guess.\n. #else (like in the android implementation) because otherwise you'll probably get a compiler warning about unreachable code if FBDEV_WINDOW_H is defined.\n. Can we be certain that nativeWindow is never NULL or do we need a check here?\n. If this is intended you can remove the if-else condition completely.\n. Not really necessary as you already initialized the whole buffer (valstr) to 0 i.e. '\\0'.\n. Can this get some indentation? It looks like a new line of code but actually belongs to the previous CStdString::Format() code.\n. Maybe\nset_sysfs_int(blank_framebuffer.c_str(), show ? 0 : 1);\nto save some duplication?\n. We usually have the else (and the { ) on a new line.\n. can be done in one line\n. Does the refresh rate matter (i.e. should we only match 60Hz and 50Hz)? If not you could just check \nif (modestr.Left(4).Equals(\"1080\"))\n. How about\nfromMode.Left(4).Equals(\"720\")\nthen set the proper width and height and then use another comparison to check if it ends with \"50Hz\" or not? Would save some code duplication especially on all the 1080p/1080i/...\n. Could do with some indentation as well (see my previous comment). Actually mabe this could be factored out into a helper function as this is an exact c&p from code further up (line 149).\n. You're right. I thought only delete was NULL-safe but looks like free() is as well. Nothing to see here ;-)\n. cosmetic: space between if and (. Same in some of the checks further down.\n. bad indentation\n. bad indentation\n. I know this is a real sucker as I tried to abstract it as well back when I worked on EGL for android. Maybe someone else has an idea on how to properly abstract this into something platform-agnostic.\n. Could we make this an implementation-dependent configuration as well instead of using this #ifdef?\n. cosmetic: space between if and ( (also the others further down)\n. cosmetic: no need for the { and }\n. Yup, nice find.\n. Will do.\n. I'm not sure I remember correctly but I think I had that first but then changed it to this for some reason (which I obviously can't remember anymore).\n. I don't think I understand. You mean rename the SetRangeSelector() method? Or what do you mean with SELECT?\n. Probably yes. They mainly differ in the WHERE and GROUP clause (which is easily handled with the Filter class) and in the field read from the database and used for the label and path.\n. Yup will align properly.\n. Yup will add.\n. Yeah I'd love to come up with a better implementation but I wasn't able to so far either :-/\n. Ah now I get it. Well I never considered it, not sure what would be more intuitive. But using SELECT instead of UP/DOWN would certainly make it easier to navigate through the list of filters because every UP/DOWN will bring you to a different filter instead of switching between the range selectors.\n. Why? Filter() contains all the logic to update the button, show whatever dialog is required etc. I moved it there because I need it in ACTION_FILTER handling as well and didn't wanna duplicate the code.\n. Actually I just realized that it already works that way. dirty is a reference parameter passed to ProcessSelector() from Process() so Process() will get dirty == true if it is marked as such in ProcessSelector() and will also handle it there. Should I change that to passing dirty back as a return value instead of a reference parameter?\n. Ah the compiler just reminded me why the call to Open() has to be done in there and on the CVideoDatabase/CMusicDatabase object: CDatabase::Open() is protected and can therefore not be called from outside.\n. Moved the variables down as they are not needed before this possible call to \"break;\" anyway\n. Ah right yeah didn't consider that possibility.\n. Wrong method name. Should be UpdateContainer.\n. Why does this have to happen here? What if the call to CommitTransaction() fails and throws an exception? In that case the movie wouldn't have been removed but the announcement has been sent out.\nEDIT: Same problem further down.\n. The problem is that everything we throw into the data object of an announcement is also sent out to JSON-RPC and a parentid is not part of the API specification right now. But it might be worth adding an extra object to every announcement where we can store internal data that should be ignored by JSON-RPC etc.\n. Well the chance for a failed CommitTransaction() is very very small so IMO this change is acceptable but can you add a comment like\n//TODO: move this below CommitTransaction() once UPnP doesn't really on this anymore\nso we don't forget why it is there and that it would ideally be placed differently.\n. Something I was wondering last time I looked into this code. Why don't we use a list of items that need additional art here (obviously negated and with &&) instead of a list that doesn't need additional art? Because if we add a new type and it doesn't make sense to fetch any artwork for it (e.g. \"tag\" right now) we never look into CVideoThumbloader and add it to this list (as you can see \"tag\" is missing in this list because of that reason). Buf if I add a new media type (e.g. \"sport\") and I want artwork for it I automatically look into this implementation and see that I have to add it to this list.\n. I was considering the same thing but the changes required are certainly more work and they touch more files as Update can be overwritten by every class derived from CGUIMediaWindow. But I agree that I would also prefer to save this extra member variable if possible.\n. Ah I forgot to change that (had it in mind). Thanks for pointing it out.\n. The problem is that the Copy into m_vecItems also copies the path stored in items which might not be the original path but a filtered path (for xsp's the original path points to the xsp file but the path in items is \"videodb://foo/bar/\" so this is necessary.\n. This one is certainly not required. I can remove the commit adding some logging to CGUIDialogMediaFilter but if the filter dialog doesn't open/work for someone there's no other way to know why.\n. It's already done in OnFilterItems() which is called by OnFinalizeFileItems() which is called three lines further up. But I can re-add it here if requested.\n. If I remove that logic from CVideoDatabase and CMusicDatabase the filtering won't work anymore because it needs the actual videodb:// and musicdb:// path.\n. I get your point, all I wanted to point out is that removing this line and adjusting the database code to not alter the CFileItemList's path will break the advanced filtering completely so we'll have to come up with a different approach that covers both use cases.\n. An alternative would be to store the path used for filtering into a property (e.g. \"path.filter\") of the returned CFileItemList in CSmartPlaylistDirectory::GetDirectory() and check if that property exists and extract it in CGUIMediaWindow::Update().\n. As there are no arguments in the ctors of CCurlFile and CHTTPFile the base constructor (i.e. CCurlFile) should be called implicitly.\n. Any reason why you store the sort order as a string instead of just the value of the SortBy enum? You have to convert it to the string when storing it and back from a string when reading it.\n. Maybe make it strtof while you're at it?\n. This will break VideoLibrary.SetFooDetails methods in JSON-RPC because they currently work with a string. Plus it needs adjustments in the JSON schema.\n. This will break JSON-RPC clients retrieving the \"runtime\" property of a video as they expect a string. And it will also need changes in the JSON schema.\n. This causes all the SortByFoo methods which don't have a corresponding SORT_METHOD_FOO (and therefore aren't listed in the map in SortUtils) to appear as \"None\" in the smartplaylist editor dialog. Either add the missing SortByFoo to the map in SortUtils or keep CSmartPlaylistRule::GetLocalizedOrder() for now (as the map it uses is still present anyway).\n. I'm sure there a way around these goto's e.g. using the value of ret further down to check if an error has happened before and then doingthe rollback instead of the commit. Will even save you doing the announcement call twice.\n. Ah now I see why you used goto. Sorry I read the code wrong. Yeah we should bail out on the first error so I guess the goto is needed nonetheless. It doesn't make sense to run CleanupAlbums() or CleanupArtists() if CleanupSongs() already failed.\nSorry about that. Hope you can get your previous work back with \"git reflog\".\n. No need for this to be a pointer. A normal object will work just as well and you can't forget the call to delete in that case (which you did).\nSame applies to curP and the changes in CGUIWindowVideoNav.\n. I'd put the \"* \" into the localized string as well (think of right-to-left languages etc).\n. This is a bit tricky because we can't assume that the filesystem structure has an extra directory for the movie set. Not sure what the best way to go is though.\nEDIT: To make things easier we could change the logic in CVideoDatabase::GetSetsByWhere() to store the path of the first item im CVideoInfoTag::m_strPath for a set item. Then you could safe the additional call to GetDirectory() etc.\n. Why index 1 and not 0 (same on the next line)? I'd just do\ncpp\nif (GetDirectory(item.GetPath(), items) && items.Size() > 0)\nhere because GetDirectory() might also fail.\n. This is most likely the full path to the media file and not the path to it's parent directory so you are missing a URIUtils::GetDirectory().\n. @cptspiff has the final word these days on PRs being merged ;-)\n. Ah that's the \"...\" (parent) item you see in the GUI. Unfortunately that depends on GUI settings so doing it like this here is not safe as the user might have the parent item disabled and the set might only contain a single movie and then items[1] wouldn't exist and it would blow up.\nProbably best to go with the way I mentioned in the comment further up i.e. setting the path of the first item in the set as the path of the set's CVideoInfoTag.\n. This check is not necessary as at the very start of the for-loop there's a check for it->second.movies.size() <= 0 which will result in skipping the set so this check will always be true.\n. GetType() could return \"artist\" (although it should never happen here) which we don't handle so I'd do something like\ncpp\nelse if (item->HasMusicInfoTag() && !item->GetMusicInfoTag()->GetType().empty())\n{\n  std::string type = item->GetMusicInfoTag()->GetType();\n  if (type == \"album\" || type == \"song\")\n    object[\"type\"] = type;\n}\ninstead. That way we are 100% sure that object[\"type\"] won't contain anything that is not specified in the JSON schema.\n. I thought this would be more future proof in case we have to add more of these special cases. I went with the boolean approach in VideoLibrary.cpp and it's getting a bit confusing.\n. Should be sMediaMounted instead of sExternalStorageState.\n. Always nice to c & p a typo :-)\n. Can't these go on one line? Furthermore the method is called StartActivityWithExtra so using \"StartActivity\" in the debug output could be confusing because there's also a StartActivity() method.\n. Please move this all the way down right before where you use it. We only have a limited amount of JNI references available and therefore we need to create them as late as possible and destroy them as early as possible.\nPS : I assume you copied this from the StartActivity() method so maybe you can change it there as well if you got time.\n. Same as above, please use \"StartActivityWithExtras\".\n. Any reason why you don't store the returned value here? But if you merge StartActivity() and StartActivityWithExtra() as I proposed in your other PR you won't need this differentiation anymore anyway.\n. Please call DeleteLocalRef() on cActivity after this line because you don't need it anymore. Actually deleting the cActivity reference is missing altogether.\nSame applies for SetSystemVolume().\n. Bad indentation.\n. Can you move this into a seperate commit please?\n. You need to detach again.\n. Don't have time right now for a closer look but IIRC there's kind of a chicken-egg problem in this area where g_guiSettings.m_LookAndFeelResolution depends on the rendering system already being initialised to be able to choose from a list of available and valid resolutions and the fact that the rendering system needs to know about the resolution to use. It popped up once after @theuni refactored some of the \"run headless\" stuff.\n. Do we really need an extra variable here?\n. Does this have any effect on other calls like VideoLibrary.GetMovieSets because a set is theoretically a folder containing movies (same with GetTVShows etc). We don't want the \"filetype\" property showing up in these cases. Maybe it should be added in CFileOperations::GetDirectory() where we loop through all the retrieved files/directories anyway? Then we are 100% that \"filetype\" will only show up for Files.GetDirectory.\n. Not sure if \"GetDateTime()\" (and m_dateTime) is a good choice as it's a very specific date time and there are other date time values as well.\n. Cosmetics: add a space between if and the paranthesis and you can drop the { } if there's only one line following the if-condition.\n. Indentation\n. I just realized that you need to put this parameter behind the \"sort\" parameter because otherwise you break backwards compatibility of the \"parameter-by-position\" functionality demanded by the JSON-RPC 2.0 specification.\n. Can you bump the version to 6.1.0 instead as this is a new feature and not a fix? I will then first merge #2248 (which is also a new feature) and then this one so that we don't have to bump the version twice.\n. From a general XBMC point of view IMO something like GetDateTimeTaken() or something like that would be more obvious. I'm not sure what other date/time values there are for a picture (apart from the usual file times like created, modified, last accessed etc which are handled by CFileItem) but IMO choosing a good name is better than having to open the header file to read the comment to know what date/time it represents.\nEDIT: Obviously you can leave the comment about libexif etc even if we change the name of the variable/method.\n. That's just because of the squashing and rebasing.\n. \"video\" is currently not a valid value for the \"type\" property in these notifications in the JSON-RPC API. So you also need to adjust types.json and ServiceDescription.h (see \"Notifications.Item.Type\").\nPlease remember that these announcements are actually a JSON-RPC thing so any changes will most likely also require changes in the JSON-RPC API.\n. This list should be alphabetically ordered so please add your new entry where it belongs.\n. No need to set a response here as it won't be used anyway.\n. So \"/log7\" is a valid URL for accessing the xbmc log? ;-)\n. Any reason why they have to be CStdString objects? Personally I prefer std::string wherever possible (will also save you the StdString.h include) and you're using std::string almost everywhere in the implementation anyways.\n. cosmetics: spaces after the commas makes it easier to read.\n. I don't think you'll need this include right?\n. You shouldn't need this one either.\n. As I already told you I'd prefer if you changed the order of the logic.\n1. Check if the file exists (you don't need the CFile instance for that yet). If not, set the error to MHD_HTTP_NOT_FOUND and return.\n2. Check if you have a .log or a .xml file. If no, go to #3, otherwise go to #4.\n3. As you don't need to run the password removal stuff, save the path of the file and set HTTPFileDownload as the response type and return.\n4. As you need to run the password removal stuff, you can now create the CFile instance and open the file for reading and whatever other magic you perform.\n. Do you really need the string() around \"://\" etc? concatenating const char* with string should be possible. Especially \"string(user)\" and \"string(pass)\" don't make sense as \"user\" and \"pass\" already are of type string.\n. cosmetics: spaces after the commas.\n. Could be turned into a std::string by using StringUtils::ToLower() on line 49. Then you/we don't need CStdString in this implementation at all.\n. Easier and not 100% correct ;-)\n. Well it's certainly not wrong but IMO unnecessary and confused me for a second.\n. As long as it compiles, it's well enough defined for me.\n. Why don't you just do a string comparison against \"/log\" and \"/log/\"?\n. We already have a log output for every incoming HTTP request so this one shouldn't be needed.\n. small cosmetic between ! and XFILE.\n. Two copy & paste monsters ;-)\n. You're right, the abs() is not needed. I first had another variable than deltaYabs/deltaXabs which was not guaranteed to be positive but then noticed my mistake and forgot to remove the abs(). Will do that and I'll calculate the value of the tangens and store it directly in the define to save some tangens calculation on every swipe movement.\n. Check the replaced code (line 816). It is already done like this in the current/old code and nobody reported any problems. And the (native) windows events should all be received in the main thread anyway IIRC.\n. I'm not very knowledgeable in that code area. That's just how I read the code. If \"CurrentResolution\" is no fitting name I'm more than happy to rename it to something more fitting. But \"LookAndFeelResolution\" doesn't mean anything to me either ;-) I figured the difference between what is stored in m_LookAndFeelResolution and what is stored in the \"video.screen\" GUI setting is that m_LookAndFeelResolution stores the resolution that is actually used right now.\n. That's why I've taken care to provide seperate commits for the \"separate\" changes. So just look at 74208af3f47537673dcbe258f6393f2bca411cdb instead of the whole PR to be able to better review the changes involving m_LookAndFeelResolution.\n. If it didn't overwrite LookAndFeel before this PR, it doesn't know either. I'm not sure what your point/concern is. If it's about the wording of \"GetCurrentResolution(Info)\"/\"SetCurrentResolution()\" I'm happy to consider any ideas/suggestions. Like I said I don't really know about this part of the code and it took me a while to figure out the difference between \"video.screen\" and m_LookAndFeelResolution. Once I (thought I) got the hang of it I just moved the old logic into a new class, did some renaming and then a lot of copy & pasting. There shouldn't be any behavioural change due to these commits.\n. Cosmetic space.\n. Can't you get the path directly from the CVideoInfoTag? That would save us from having to create a temporary CFileItem object.\n. Please move this whole block into a seperate method. You'll need to pass it the CVideoDatabase (videodatabase) object, the parameterObject value and the CVideoInfoTag object (infos). But having the exact same code block in three different places in the same source file and class is a lot of unnecessary duplication.\n. Didn't see this before. As this is a new feature, you need to bump the minor version part not the bugfix part i.e. 6.2.0.\n. Just to be safe, best make this a <= 0, you never know what ideas people get ;-)\n. Maybe you want to use StringUtils::StartsWith() instead of .Left(34) == \"foo bar\"? Saves you the need to count the characters and should decrease the chance of an error in case the path should change in the future.\n. You'd need to add the include to utils/StdString.h although I'd prefer if we wouldn't introduce CStdString at all.\n. Yeah I'm sure it gets pulled in from multiple places but I don't like to rely on these indirect includes.\nThe CStdString thing is a personal preference so not a real show stopper.\n. We can't add a music item to a video playlist. Well we can but XBMC won't be able to play that item AFAIK.\n. You could factor this out into a separate method so you can just re-use it in CPlaylistOperations::Insert.\n. Just personal preference but I find the usage of ! with std::string::compare() very confusing and prefer the more obvious == 0. Obviously the result is the same just IMO better readability.\n. use strtol() instead of atoi()\n. Get rid of the { and } around this single-line body.\n. But the extra check doesn't hurt and you can save a few lines of duplicate code.\n. In general atoi() et. al. is inferior to strtol() et. al. because it doesn't provide any error handling/detection. I'm not that strict on it but some other people on the team are which is why I pointed it out.\n. You forgot to put the \"else\" on a new line ;-)\n. This assumes that we have agreed upon sending a speed of 0 in this case as discussed in #2573 so IMO the that one will need resolving first.\n. Everything is a bug fix because without it old favourites and other videodb/musicdb paths which are stored in an external file are broken. I can move these changes into a seperate commit though.\nWhat do you mean with \"use the TranslateLegacyPath to do a single compare?\n. A space between the \"if\" and the \"(\" please :-) (on the other if-conditions you added as well).\n. It's not visible in the diff but in the file view (see https://github.com/simonvetter/xbmc/blob/96d6ea65194f094f0c2e5cd48b2bbc6e0e6cdc47/xbmc/network/WebServer.cpp#L579 ) the indentation in this are looks completely off.\n. || ?\n. Bad indentation as well.\n. I don't remember how we use this in other places but maybe InternalError fits better? I can't check other usages of InternalError or FailedToExecute right now.\n. I checked and FailedToExecute is ok.\n. Intentional?\n. Looks like some bad indentation or unneeded.\n. jutils-details.hpp\n. Maybe it's worth mentioning here that in the Emulator there's a limit of ~2000 global references which can exists simultaneously. If that limit is exceeded it will error out with \"Excessive JNI global references\".\n. Cosmetic: Missing space.\nPS: I guess this file uses 4 spaces tabs instead of 2 because you mainly copied it from crystax?\n. I can't think of a specific reason except legacy.\n. Could be integrated with the previous if condition\n. Couldn't this be taken care of by the default value of CSettingLevel?\n. Looks to me like there's one level too much here. You should only need 3 classes to represent the boolean logic.\n. Why not passing the CSettingsManager object in the constructor like everywhere else? Then CSettingLevel would have the same Deserialize definition like all the other classes.\n. Why do you limit the Check() functionality to \"IsDefined\" here? That way you won't be able to do more dynamic checks.\n. Can you please move the second part of the condition on a new line and apply De Morgan's law to it? I always find it much harder to read !(some conditions) than (some inverted conditions). And you can replace the 0 with SettingLevelBasic.\n. Please make { and } around the for-block. Makes it much more readable IMO.\n. Yeah I realized it this morning when I was driving to work but forgot to mention it here.\n. IsDefined only checks static conditions which do not change throughout XBMC's runtime so they are set once at startup and never touched afterwards. In CSettings there's a method that adds all kinds of \"static\" conditions like has_gl etc. If you run the IsDefined check and it doesn't find the value you pass it in the list of static conditions, the result will be false, otherwise it will be true.\nThe only case I currently know of that requires this is the peripherals setting when a CEC adapter is present. Can a CEC adapter be plugged in while XBMC is running (i.e. is there runtime detection?) or does it have to be present when XBMC is started? If there's runtime detection we need a dynamic condition which can be evaluated at any given time. But then we'll also need additional logic in CSettingsManager et. al. to update the conditional settings whenever a list of settings is retrieved.\n. Hehe, yeah looks good.\n. Sure I first wondered as well why the #define was in the header file.\n. I'm still gonna raise my initial argument: How many people (in relation to the whole xbmc user base) actually change the settings of the nyxboard in xbmc? I have a nyxboard and I've only once changed a setting but just out of curiosity of what is possible; in the end I reset the value to the default. So personally I don't see the need for it to \"MUST be displayed\". I can totally understand the reasoning for the CEC adapter but also there it's only a small number of users that have one and that will have to use it.\nIn the end IMO the fewer settings we throw at an average joe user the easier it becomes to use XBMC (as long as we have sane default values).\n. Some cosmetics in these two lines.\n. Cosmetic\n. Value() might return NULL here (at least there's no check earlier to make sure it isn't. Maybe use ValueStr() instead if an empty string would be acceptable?\n. No need to duplicate this info here (the label wouldn't be necessary either) when it's already defined in settings.xml.\nPS: You use the same setting ID for \"input.appleremotemode\" so there's probably something wrong here.\n. No need to duplicate this info here (the label wouldn't be necessary either) when it's already defined in settings.xml.\nEDIT: Hm why is the help string ID here 36419 and in settings.xml it's 36282?\n. No need to duplicate this info here (the label wouldn't be necessary either) when it's already defined in settings.xml.\nEDIT: In settings.xml the help string ID for \"smb\" is 36346.\n. How do you switch monitors in windowed mode through xbmcsettings? At least on win32 that's not possible. It's only possible by dragging the whole window to another screen using the mouse but that doesn't change the value of videoscreen.screen (-1 i.e. DM_WINDOWED), videoscreen.resolution (15 i.e. RES_WINDOWED) or videoscreen.screenmode (WINDOW). @jmarshallnz said to only show the prompt if the resolution of the whole screen is changed which is certainly not the case if xbmc is windowed.\nI can only test this properly on win32 because (as you said yourself) multi monitor setups don't work on linux. And there the settings show \"Fullscreen #1\" or \"Fullscreen #2\" so we in fact expect the user to identify the monitor by an arbitrary integer (so does Windows btw).\nLast but not least I'm still not very familiar with the whole screen/resolution code but nobody else seems to look into the problem (and I caused it) so I'm just trying around until I find something that works.\nThe whole screen/resolution setup is IMO far too complex in the code with 3 settings where videoscreen.screenmode actually covers the value of all of them (and is abused in the GUI to represent the refresh rate setting) and is used everywhere whereas videoscreen.screen and videoscreen.resolution are only really used for GUI representation but still need to be in sync with videoscreen.screenmode. I don't know a better way to do it though.\n. While I agree that the whole display setting stuff needs rework and would be willing to help out in any way, the problem with the prompt showing up unexpectedly exists in the current code and needs to be fixed and we can't rely on anything that will be merged someday in the future. If there is a better solution that is more generic and would be easily adaptable for any future changes I'm all ears.\n. Not sure how OpenForWrite works. Does it delete the content of the file or does it just start writing at position 0? If the latter is the case you might run into problems if you first pass in a bigger file and then a smaller. The second one would not fully overwrite the first one.\n. Couldn't all these CGUIDialogKaiToast::QueueNotification() calls (except for the ones taking an enum) be combined into one by using a variable for the first parameter which would either be empty or contain the path to the file to load (the path passed in or the path to the temporary image)?\n. Hm I don't like this. I can have subfolders in my source directories and do a \"..\" from one of them and I'd still be in an accessible and valid source directory but the request would fail. For real paths this is taken care of by the call to CUtil::GetMatchingSource() further down.\n. I'm not sure if it's as easy as removing it. We e.g. don't wanna provide direct access to \"special://profile\" but for \"special://profile/playlists\" so one could do \"special://profile/playlists/../\" and would end up in \"special://profile\" which we don't want. Same for \"special://\", \"sources://\" or \"virtualpath://\".\n. I just realized that the logic is not complete. The logic to sanitize the provided path to handle any \"..\" etc is located https://github.com/xbmc/xbmc/blob/master/xbmc/network/httprequesthandler/HTTPVfsHandler.cpp#L52. URIUtils::GetRealPath() will evaluate any \"..\" and return the real path which can then be checked against the sources list or whatever other paths we want to allow. So we should probably first call URIUtils::GetRealPath() (and the archive handling logic) on the given path and then check against the allowed paths. Then we also don't need to worry about any \"..\" anymore because they have been eliminated.\n. Not unused but has the exact same value as the \"info\" variable so will replace it with that.\n. Is that even possible i.e. different refresh rates for different resolutions? My monitors only have two refresh rates and they are the same for all resolutions so I don't know if it's possible and I can't test it either. The problem with the current/old implementation of g_Windowing.ScreenResolutions() is that it returns the first RESOLUTION_WHR object for a specific screen independent of the refresh rate. So if your current refreshrate is 60.00 Hz but the default (and always the first in the list) is 59.94 Hz you will get the resolution index for the resolution with 59.94 Hz instead of the one with 60.00. So maybe that logic needs to be extended to choose the best matching one for every resolution i.e. if there's one matching the refresh rate, we return that one otherwise we return the first one.\n. Refresh rate was already 2 fractional digits before the settings refactor. It can still be changed later independent of this fix IMO.\nI'll see if I can come up with some logic that makes sure that every resolution is available and in case where there's one matching the current refresh rate that specific one and not just the first one that is found.\n. OK I pushed another commit. Can you try that one?\nI mentioned the idea of merging videoscreen.resolution and videoscreen.screenmode into one setting showing e.g. \"1920x1080p @ 60.00 Hz\" in team IRC yesterday and of the two people present both were against it because the list would become too long if there are many refresh rates per resolution.\n. No comment? ;-)\nShould probably go below the TiXmlNode forward declaration anyway.\n. What's the difference between \"focus\" here and \"select\" in the doxy of SetDefaultItem()?\n. Shouldn't the factory be in a seperate file (ListProviderFactory)? That way the IListProvider interface also stays header-only.\n. The \"node\" parameter could be TiXmlNode (also better matches the parameter name ;-) ) since you don't use any of the TiXmlElement specific methods.\n. Cosmetic. Above you used a single space before the colon.\n. Could be an \"else if\" since it will never be true if we just updated m_updateTime to CTimeUtils::GetFrameTime().\n. Any chance to merge the two list iterations into one e.g. by using a bool that tells you whether to call UpdateProperties() or not? Looks like UpdateVisibility() needs to be called either way.\n. Is it possible that two items have the same m_iprogramCount value but one is visible and the other not? If not you could keep the return if the item is visible or break out of the loop if it is not visible.\n. More lines of code (actually just 1) and a single iteration over the full list vs less code and two iterations over the full list.\n. \"filetype\" is not a property that can be requested by the client, it's automatically returned. So no real need to look for it.\n. If we rely on \"filetype\" being part of the \"properties\" array we should probably move the logic out of the if condition about the value of the \"id\" property.\n. This change is backwards incompatible because any client who passes the \"file\" property in will get an error (even though it wouldn't make any difference in the result) so we should keep it in.\n. Just being able to bump the version number doesn't mean that we should break backwards compatibility at every other turn. Plus I remembered that this would actually break Player.GetItem where the \"file\" property is not automatically returned but can be optionally requested by the client. So it definitely has to stay in.\n. Should be 2013\n. Please put the includes in alphabetical order (starting with ProfilesOperations.h as it is the include of the corresponding header file).\n. Maybe change it to \"value\" because [\"password\"][\"password\"] looks a bit odd.\n. No need for the { and }.\n. Don't return ACK if loading the profile failed (see comment further above).\n. Theoretically you are right but our JSON-RPC request parser will automatically add all optional properties/parameters to the request using their default value. So there's no need to set \"required\" to true. You don't need to set it at all, just make sure to provide a default value. Then CJSONServiceDescription will take care of the rest and you don't need to add any kind of \"does this optional property actually exist\" logic in the method handling.\n. Obviously there are always parameters/properties which must be there so those should have \"required\": true. Everything else which is optional (e.g. the \"password\" parameter) does not require a \"required\" attribute but a default value. So just consider what is absolutely needed to complete a request (e.g. the \"profile\" parameter in LoadProfile) and what isn't.\n. What if bLoadProfile is false because the given password doesn't match? You still return ACK even though the profile wasn't loaded because of an invalid password.\n. Isn't this object the same as Profiles.Details.Profile? If so you can reference it here similar to how you did it in Profiles.GetProfiles (just not as an array item).\n. InvalidParams is the proper error. BadPermission is meant for something else that hasn't been fully incorporated yet i.e. if a client doesn't have the permission to call a specific JSON-RPC request.\n. Just noticed a bad indentation here. Needs an additional 2 spaces at the beginning.\n. Check StringUtils::Split. There are different overloads that either work with std::string or CStdString. No need in adding yet another method doing the same.\n. IMO the method name does not really reflect/describe what the method does. I'd rename it to something like HasMultipleSortMethods() or something like that.\n. Please move this into a separate commit as it has nothing to do with the rest.\n. Maybe a utility method in one of the utility classes called \"GetBackupPath()\" which would take in a path and return the same path with \".bak\" appended would be nicer than having to repeat .append(\"bak\") all the time.\n. IMO doing + \".bak\" all over the place is much more error prone than introducing a method\nstd::string URIUtils::GetBackupPath(const std::string &path)\nwhich hides away the \".bak\" and reduces code duplication. IMO the method shouldn't be part of CSettings or something like that though.\n. Bad indentation in this block.\n. With our coding convention this should be\nif (params.size() > 1)\nSame goes for the if further down.\n. Don't use { and } for one-line blocks.\n. This logic confused me for a bit. Wouldn't it be easier to understand if it where\nif (m_egl->GetPreferredResolution(&fallback))\n  resolutions.push_back(fallback);\nelse\n{\n  CLog::Log(LOGERROR, \"%s: Fatal Error, GetPreferredResolution failed\",__FUNCTION__);\n  return;\n}\ni.e. first handle the positive case and then the negative case?\nIf you want to keep it that way I'd suggest to at least remove the \"else\" because it's not necessary thanks to the early return in the \"if\" block.\n. Doesn't look like it's needed.\n. IMO \"type\" is not a very matching parameter name but I can't provide a better one off the top of my head.\nFurthermore there's too much \"type\" in here (from a JSON schema POV). The following is enough.\n{ \"name\": \"type\", \"type\": \"string\", \"enum\": [ \"current\", \"supported\" ], \"required\": true }\n. You could specify the valid modes here.\n. parameterObject[\"mode\"].toString()\n. Why don't you call the Builtin method here? First of all that way you can do it in the GUI thread through\nCApplicationMessenger::Get.ExecuteBuiltIn(\"SetStereoMode(foobar)\")\nand you save the code duplication. The only downside is that you don't get a response but that might be possible with a change to your implementation in builtins.\n. C++ doesn't support switch-case on strings. Furthermore you're again missing a .toString()\n. You could write a helper method that takes a RENDER_STEREO_MODE parameter and returns a CVariant object (or pass that in as an out-parameter) and call it from here and from above to save the code duplication.\n. break is not needed here after the return.\n. You could do\n```\ndbSettings.host = CSpecialProtocol::TranslatePath(CProfilesManager::Get().GetDatabaseFolder());\nif defined(TARGET_WINDOWS)\n// very long and descriptive comment\ndbSettings.host = CWIN32Util::SmbToUnc(dbSettings.host);\nendif\n```\nto save a bit of code duplication.\n. Yup.\n. The question is whether you can actually execute the command (which most likely affects the GUI) in the non-GUI thread or if that might cause a deadlock/freeze/exception. I'm sure @elupus can answer that question.\n. Sorry, missed this one.\nCDbUrl::IsValid() returns true, if the path passed to CDbUrl::FromString() is valid and false otherwise (same as the return value from FromString() itself.\nIf the URL isn't valid an early return is probably the best thing to do.\nIIRC there are a few places in CMusicDatabase where this check might be missing.\n. Please extract this into its own commit as it looks like a fix independent of the rest of the changes.\n. Do we need a NULL-check on channelEpg?\n. IMO \"program\" should be \"broadcasts\" to match the rest of the naming. Same in the API definition.\n. Please add some line breaks after 4 to 5 items so it's easier to read without having to scroll that far.\n. \"broadcasts\" instead of \"program\" as mentioned above.\n. TBH I don't remember my previous comment exactly but I think I mentioned that in general JSON-RPC methods don't just return an object consisting only of a \"fooid\" property because that's not really useful to a client. The idea is to always return \"fooid\" and a \"label\" or \"title\" property which is human-readable. It would be nice if the same could be applied here. In most places we use a \"label\" property which is always returned. A client can still request the \"title\" property but it's mostly identical to the \"label\" property (except for tv episodes IIRC). But looking at the existing code now it's most likely already handled so just make sure that you get a valid \"label\" property for every retrieved broadcast and all should be good.\n. Actually, I'll commit it to master right away as it is broken right now.\n. IMO we should do these things all at once otherwise someone will eventually run into some trouble.\n. Probably not. It will most likely go away when you rebase your work on master once everything is fixed.\n. These two exclusive locks cause a deadlock (at least on win32) because CSettingsManager::Load() can be called recursively. The exact use case is CSettingsManager::Load() calling OnSettingsLoaded(), which calls CAdvancedSettings::OnSettingsLoaded() which in turn calls CSettingsManager::Load().\nWouldn't it be better to minimize the area protected by the locks? In this case that would probably be the call to Deserialize().\nEDIT: Damn, that won't work either because there's a shared lock in CSettingsManager::OnSettingsLoaded() so we can't take the exclusive lock.\n. This works: https://github.com/Montellese/xbmc/compare/master...settings_deadlock\nBut it's not really nice :-/\n. There already is try { } catch { } stuff around this call (which is why I didn't use ExecuteQuery()).\n. Hm I actually copy & pasted this stuff so it's probably wrong in other places too. Will try to hunt them down as well.\n. This might conflict with #3529 where we specifically change the path property of the CFileItemList to the actual retrieval path (e.g. videodb://movies/titles/) instead of the passed in path (e.g. library://video/movies/titles.xml).\n. Please use URIUtils::HasSlashAtEnd() here instead.\n. No multiselect?\n. Yes that's possible. It's not supported yet in the dialog i.e. you can select more than 3 items but it will just fail to save your selection. That's something that could be improved in the future.\n. If the user selects no items, changing the value of the setting will fail. If the user selects 1, 2 or 3 items, those items will be saved in the value of the setting. If the user chooses more than 3 items, changing the value of the setting will fail as well. When changing a value fails, it will just keep whatever value it had before.\n. If m_definition is NULL, then CSettingList::Deserialize() will fail and the setting will be destroyed and won't be available.\n. I added checks for the setting's type before doing the static_cast.\nI still don't think that it's necessary to add a NULL check for the GetDefinition(). If we manage to get into this code with a setting object that returns NULL for GetDefinition() something went very wrong during the initialization of the settings system.\n. Would it be possible, that the string only contains HH or does that not make sense? In the old code it would have retrieved the HH and assummed MM to be empty and therefore 0.\n. Same as before, the string might only contain part of the information and the rest could be assumed to be 0? With this change you don't do any string processing if not all the data is present.\n. Wow, this actually never worked as it is missing a space between \"musicvideo.c%02d\" and \"like\".\n. Hm your SELECT (and therefore your result set) is missing path.strPath now which is used further down in a condition. Any reason why the additional conditions on files and path are only needed for locked users? Do they hurt (besides the fact that the query will be a bit slower) in the other cases?\n. SQLite knows\nDROP INDEX IF EXISTS\nbut looks like MySQL doesn't.\nNot sure if it would return an error on a simple DROP INDEX if it wasn't there. But we don't check for errors anyway and nothing bad happens if we can't delete something that doesn't exist in the first place.\n. You're right but resetting it before the while loop would work. What I dislike about increasing the initial timeout is that it could happen that the first request (Stop) takes like 20 seconds and then you only have 10 seconds left for the remaining calls to SetAVTransportURI, Play and repeated GetTransportInfo. Using one big timeout may cause random failures in one of those WaitOnEvent() calls depening on the timing.\n. SetTimezone(CSettings::Get().GetString(\"locale.timezone\"));\nCDateTime::ResetTimezoneBias();\nwould be enough\n. While this (and the same logic for the constructor taking a CPVRTimerInfoTag) should work with JSON-RPC I'd prefer the way this works for video, music, epg etc i.e. CPVRRecording and CPVRTimerInfoTag implement the ISerializable interface and expose all their properties through that method which is then called by JSON-RPC to serialize the retrieved values. It prevents unnecessary cluttering of the properties map in CFileItem.\n. Well the device reference is kept until it disappears which will result in a call to OnMRRemoved() where we also remove it from the set. But changing it to a std::string is not a big deal.\nThe calls to OnMRAdded and OnMRRemoved usually come from the same thread (the one listening for SSDP and SCPD messages from other UPnP servers/clients/renderers). But in case of closing XBMC it will obviously come from another thread.\n. Actaully I don't think that the try-catch block would do you any good. @jmarshallnz is right. The cleanest approach would be to use CVariant::isMember() to check if the \"player\" and the \"playerid\" members exist in the CVariant objects.\n. ",
    "ohara": "I guess I didn't explain the idea correctly.\nThe idea is of a randomizer, that is triggered when playlist playback ends (either by finish or skip) adding one random item (episode) to the current playlist. therefore the playlist never really reaches its end.\nthe \"channel\" is just the current settings of that randomizer.\nas long as the randomizer flag is up (a global variable that marks the current channel), even if a new playlist is set manually, coming playbacks end, a new item is randomly added. (the stop button lowers that flag).\nthe randomizer options are mentioned in my first post.\nWith it, here are some examples of \"channels\":\n- random a show, and grab it's next unwatched item.\n- random a comedy show, grabbing an already watched item by show progress. (aka reruns).\n- random a specific animation shows, grabbing a watched or unwatched random item (no order).\nalthekiller: some of the querying can be done by smartplaylists (like the third example). but it's not the same.\njmarshallnz: thanks, I fixed the special-episodes issue.\n          order by\n          case when c12>0 then      cast(c12 as integer) * 100 + cast(c13 as integer) \n          else case when c16<>4096 then  cast(c15 as integer) * 100 + cast(c16 as integer)\n                   else              (cast(c15 as integer) + 1) * 100 - 1 + (cast (c13 as real) / 1000)\n                   end\n          end\n          limit 1\nMontellese: Pseudo TV is different. it actually takes smartplaylists and calculates its items length to simulate playing all the playlists simultaneously.\n. jmarshallnz, you are right not to like the idea of an external editor. it was created only for my personal use and demonstration. I started out saying \"this is not a complete work\".\nI started this project because my girlfriend is lazy. she needs her TV content to be decided for her like in real TV broadcast.\nShe will just not play around with XBMC's library.\nI believe XBMC users are interactive users.\nEven with the biggest auto updating Movie/TV library in the world, I would not replace the normal old-fashioned TV broadcast with it for my mom. Most TV viewers are lazy (or passive) like that, and I believe that with this kind of feature (no matter how implemented) you could reach more people (at least those who have one active user in the house for getting the content).\nthose who I know and showed them this feature like it a lot.\nI think creating \"channels\" should be with a much easier editor than of the smartplaylist.\n. ",
    "obijywk": "Yeah, I still patch this in every time I rebuild.\nOn Sat, Mar 17, 2012 at 12:46 AM, jmarshallnz <\nreply@reply.github.com\n\nwrote:\nThis doesn't appear complete - it only affects gamepad (whether or not we\nwant it being a separate issue).\nI know it's been a long time, but are you interested in this still?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/17#issuecomment-4551892\n. Maybe - I suppose the most general solution would be to have an option\nper-input-device of whether that device respects focus or not. I'm not sure\nif this would be possible to implement for all types of input devices. It\ndefinitely works for gamepads, and I suspect it might be possible for\nIR/bluetooth remote type devices as well, but somehow I doubt it would be\npossible for keyboards and mice - I don't know how one could \"pin\" events\nfrom a particular keyboard or mouse to a particular window.\nOn Mar 17, 2012 4:08 AM, \"jmarshallnz\" \nreply@reply.github.com\nwrote:\ndoes it make sense to apply the same sort of trick to other input devices?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/17#issuecomment-4552554\n. \n",
    "huceke": "Wouldn't it make sense to use a smarter way to set FF_MM_MMX | FF_MM_MMXEXT | FF_MM_SSE.  Not all architectures have those flags available. See ARM cpu's.\n. Sorry. My fault. Had missread it.\n. Indeed, it belongs to the PowerSysCal interface. Thx for the hint topfs. Changed in the latest commit.\n. A merged one will come ;).\n. Does it compile on Linux / Windows ?\n. topfs2 and CrystalP changes are included now.\n. Last check. Is it save to pull now ?\n. Changed. See commit.\n. Done.\n. Done. You are welcome to hit the \"Merge pull request\" button ;)\n. No need to reopen it. The RaspberryPI has it's own player ( OMXPlayer ), where we handle decoding different.\n. There is already a new pull request whare it is included where needed.\n. Depends on if we trust valgrind. If yes, those are two different moemory blocks getting freed.\n. Reading the allocation code in ffmpeg i think this is the right way to free the context.\n. nicer ?\n. Please provide the last lines of configure and also the config.log. \n. What about :\n1.) bufferxbtinmemory               : enables it, we set default limits based on the platform.\n2.) bufferxbtinmemorysize       : user can overwrite the size limit. 1.) must be still set to enable it.\n. @jmarshallnz: As far as i understood our texture handling. When we load the image it will be put in a texture on the GPU. On platforms with small GPU memoty we run out of GPU memory quite soon when we buffer the textures. So keep the Textures.xbt in memory and only load it from there on demand would solve that problem. The caching is for reducing the access to the disc. On embeded systems that can coast. Take the PI where we run of SDCard or system where we might read out of a nand flash.\n. Updated. Now the image data is stored seperate with every frame.\nThe current hardcoded limit is set to 10MB for all platforms. The user can overwrite it the advanced setting bufferxbtinmemorysize.\n. Yes, if the textures.xbt file is larger that the cache limit, we would only cache the first images. Tracking the usage of images would be not a big deal. We could log the image access when debuging is on.\n. R.I.P. ATV1, it was a nice time.\n. Tested on the PI and worked. \n. Another nice feature for arm would be the posability to limit the number of loaded images. Have seen it on the PI when we use a view with lot of fanarts we run pretty fast out of GPU memory.\n. I think you should extend AE and check if the extended enumeration is available from the slected engine and or audio sink. Based on the check display the information or not. Lets take platforms where we don't have AE and the dummy NULL audio sink is used.\n. @Memphiz: can you test it on iOS/OSX ?\n. Nope. It only hides access the the global engine object.\n. Can one of the windows devs also test it ?\n2012/6/8 Memphiz <\nreply@reply.github.com\n\ntested it on osx and ios with success (tested menu sounds, volume and a\nmovie)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1055#issuecomment-6210137\n. Don't forget the brand new android AMPLayer ;)\n. @opdenkamp : Do so. Thx\n. @Memphiz : https://github.com/huceke/xbmc/blob/6b37a4c8ec605689aee9b8625aec0c41764f21b4/configure.in#L895 comes out of the android merge. It is not PI speciffic.\n\nEdit: My bad, missunderstanding.\n. Please have patience. Prio number one is to nail critical bugs down and get the merge done.\n. @gnif : Don't take my lines as offend. It is my personal standpoint.\nFor AE i still do not get it why refusing war proofed code and reinvent the wheel. ffmpeg includes a lot of optimized code from many people, for many platforms and tested a lot. My personal standpoint is, use ffmpeg where it fits and does a good job, instead of reinvent the wheel.\n. Hit merge ?\n. +1 on inject. On the PI we also use extradata on the decoder component.\n. @tompen: yes. i'll add it when it is merged.\n. https://github.com/xbmc/xbmc/blob/master/tools/rbp/depends/xbmc/Makefile\nHere you see the correct usage of configure for the PI.\n. The previous PR was borked, git wise.\n. You might force paplayer, doesn't mean the platform supports paplayer.\n. I think the plugin shouldn't know anything about the player selection. XBMC should be the one in charge to select the right player. Since we are getting more internal players and supported platforms, plugin writers can't know what the right player is to choose. \nFor example, on the PI we only have OMXPlayer, no PAPLayer or DVDPlayer.  Plugin developers on platforms with DVDPlayer/PAPlayer have no clue that their plugin might not work on other platforms.\n. @amet: But you know on Desktop default would be DVDPlayer/PAPLayer.\n. @elupus: Draw me a strong example why it is that important for plugins to be able to set the player ?\n. @elupus: here we come to the point you oversee. On RaspberryPI only OMXPlayer is usable. You can't select DVDPlayer or PAPLayer. There might come other platforms where it is the same. \n. Plugin should only tell the source to play. XBMC should decide which player to use.\n. @elupus: yes i do. We just have a different point of view on player selection and plugins. I could ask you the same ;)\n. I think i understand your point ( a bit ).\nHow i see it, our main problem with the API is that hardcoded player names are posible. The proper solution would be, the plugin is requesting a player based on a type ( video / audio / .... ). Based on that type XBMC creates, based on it's internal player selection,  a player for the plugin.\n. Seems not to break RaspberryPI. +1\n. @jmarshallnz, @cptspiff : Ok to merge before the merge window ? I would need it for another change. Move OMXImage -> guilib where it belongs to.\n. @theuni: quite late. not sure if i'll get it added in this merge window. \n@cptspiff: is it ok when i add the caps to omxplayer till the weekend.\n. @theuni: Please take a close look at the PI implementation. After a first \"fast\" look, i'm afraid the PI will not fit to the rewrite. The EGL call logic on the PI is a bit different from the generig EGL call logic.\n. @theuni: I do not talk about the native window. It is when the EGL context/window/display is initialized. \nTake a look at xbmc/windowing/egl/WinEGLPlatformRaspberryPI.cpp and compare it with xbmc/windowing/egl/WinEGLPlatformGeneric.cpp. ( CWinEGLPlatformRaspberryPI::ReleaseSurface )\n. @theuni: it the plugging in doesn't work, feel free to break out the PI support.\n. Had a fast look at the updated PR in the morning. You broke the PI support in a horrible way and made the native implementation quite unsave to use.\nWill work on a fixup after work and make the implementation save and working again.\n. @gnif: we had a long discussion why and how it used on OSX and agreed to keep it. \nGive another unique raw format criteria for the COREAUDIO_IS_RAW macro. So we know the format is a raw.\nhttps://github.com/xbmc/xbmc/blob/master/xbmc/cores/AudioEngine/Engines/CoreAudio/CoreAudioAE.h#L40\n. @gnif: welcome back and great that we have a new maintainer for CoreAudio.\n. @gnif: look, it is pure resignation. It was explained why it was done like that. this explanation is ignored. A strong dejavu in my head. So there is nothing left to say in that case.\n. @theuni, @davilla: Ok to merge ? \n. Updated the PR with the sugested changes. Sorted Makefile, added missing pop in header, changed array to a vector.\n. @elupus: i can remove the vector but i'm afraid, i have no idea how the timestamp calculation could look like.\n. Updated to use a single stream.\n. @elupus added timestamps. \n. Thx\n. @Memphiz quite hard to test. My environment for the PI is IPV6 enabled.\n. No. I use a buildroot environment ;)\n. It is only debug logging, but the CEC debug log is that massive that normal debug messages getting realy hard to read.\nNormal users using CEC knowing what CEC is ;)\n. No clue how to bring up the CEC settings dialog. I had in mind to have a simple way to reduce the massive CEC logging. \n@opdenkamp any better ideas than my solution ?\n. @Montellese you think users know all settings and are not confused by some common one ?\n. @Montellese i think it is no bad example to have settings a user doesn't understand. for that we have our wiki to document it and make it understandable ;)\n. @Memphiz you mean more like http://pastebin.com/WVnkCunJ ?\n. @opdenkamp why not be able to disable it ? When a user has problems it can be enabled it in that speciffic case.\nFor example : I have my PI connected to a LCD monitor with HDMI. CEC is enbled and there it fllods the log. Sure i could disable CEC for this build, but then going to my TV and testing there where i need CEC would mean a full XBMC recompile, which makes no sense when there could be a setting for this flood.\n. http://4youtech22.appspot.com/pastebin.com/wYHSKbrH this is an example with the CEC logging. It continues filling up the log.\n. @opdenkamp in which version of libCEC it is fixed? IIRC with 2.0.0 i still saw it. The flooding is also bad, leave the device running over night and see how the log grows without a stop.\n. signed-off for RaspberryPI\n. @elupus @davilla ok to merge ?\n. @elupus updated, better now ?\n. No error reports on github. Please use our forum.\n. If nothing serious speaks againts this, i'm going to hit the merge button later today.\n. @jmarshallnz: updated the PR to be more compatible to the current master version.\n. @jmarshallnz : Added the window id to SendThreadMessage.\n. @jmarshallnz : squeezed it down ;)\n. @opdenkamp: This fixes a problem i have with scarping. ( http://pastebin.com/rBWJyvR0 )\n. Tested on the PI and looks good to me.\n. https://github.com/huceke/xbmc/commit/38c025c1e752c8a28f42b38f4305368b8db2ce65\nI think for embeded we use to small alsa buffers which can lead in underruns and broken pipes.\n. @TheUni: When snd_pcm_hw_params_get_buffer_size_max is reporting less than 8192 we end up in realy low alsa buffers. With to low alsa buffers, alsa tends to underrun on low power platforms.\nSaw now on two platforms ( A10 /Exynos4 ) the exact same behavior without my patch : \n(SNDRV_PCM_IOCTL_SYNC_PTR failed (-32): Broken pipe). \nAfter using https://github.com/huceke/xbmc/commit/38c025c1e752c8a28f42b38f4305368b8db2ce65 the broken pipe went away.\n. @Memphiz ?\n. I'll also test it in the RaspberryPI.\n. You should iWidth and iHeight otherwise it doesn't work with clamped gui rendering.\n. Looks ok from my side. @davilla @theuni would be nice for frodo ;)\n. @DDDamian: What about helping in fixing FRODO code instead of telling we fixed it in a private repo ?\n. Please corrcect your commit message to something like : \"[rbp/omx] fixed propper lock/unlock in omclock\"\nthx\n. Please clean up that mess you have in this PR.\n. Removed in 55e1e268617c49dc3770f2ece09ed6091efab2ad\n. @davilla, @theuni : What do you think about this one ?\n. @davilla: Looks good to me.\n. I can confirm, recent Archlinux, needs this patch to successfull configure and compile xbmc.\n. @Memphiz: Thumbs up.\n. I think this feature causes more troubles and confusion than the benefit is.\n. @davilla: l8er today i'll check it.\n. @stupid-boy: thx for spotting that out.\n. I think you mean m_upmixBuffer and not m_upmixBufferSize.\n. @Memphiz, @davilla : Looks ok to me.\n. @popcornmix, @stupid-boy : Updated #2372 please test it.\n. @sraue so it is basicly 28de0da9afeb6bcbc2c8a3cad31c79225b07ec7d splitted up in a nice way, correct ?\n. @sraue great job\n. Was also on the way to prepare a PR ;) https://github.com/huceke/xbmc/commits/raspberrypi\n. @MartijnKaijser : It is on the list for the next merge window.\n. @MartijnKaijser : Basicly it's a fix. Would me not merge window dependend.\n. ",
    "anssih": "I'm not setting those anywhere.\n. davilla, I guessed you were going to use them :)\nAnd the git rev is said in the commit message: \"updated: internal ffmpeg to c3beafa0f1\".\nwsoltys, ah, I didn't notice /lib/ffmpeg/include was our code and they were not in our ffmpeg patchset. Would it be ok to rename it to e.g. /lib/ffmpeg/include-xbmc-win32/ to make that more clear?\n. wsoltys (or someone else on windows), could you try whether https://github.com/anssih/xbmc/tree/ffmpeg-update-win32 works for you? It has one additional patch where I added dxva2api.h back.\n. As for avconfig.h, that is generated in lib/ffmpeg/libavutil/avconfig.h by lib/ffmpeg/build_xbmc_win32.sh. Is that not enough?\n. Thanks for the information. The change in the ffmpeg-update-win32 branch is not enough then, I'll make a better fix later today.\n. wsoltys, I've now pushed a different fix into ffmpeg-update-win32. It restores both avconfig.h and dxva2api.h, but changes the directory from lib/ffmpeg/include to lib/ffmpeg/include-xbmc-win32,\n. Thanks to wsoltys this now works on win32 as well. I'll merge this to master.\n. Thanks. I'll wait several days before merging in case someone wants to object to the removal.\n. davilla: is osx/ppc built using --enable-liba52? If so, why is that?\n. Ah, I know the issue, I'll fix it later today/tomorrow. Thanks.\n. OK, I've done that.\n. The fix for ppc-osx has been tested, so I'll push the fix and then pull this one.\n. I can't test on win32, but there seem to still be references to DVDAudioCodecLibFaad.(cpp|h) in project/VS2010Express/XBMC.vcxproj and project/VS2010Express/XBMC.vcxproj.filters.\nOtherwise looks nice :)\n. Why doesn't it cause a problem?\nIf I were you, I'd be very interested in why it doesn't cause crashes/hangs, as from what I can see the subsequent Initialize() calls never lock the python interpreter. Maybe it causes issues only on certain multithreaded python scripts, etc. (that is what I saw with external python 2.6 on Linux, i.e. it crashed on certain subtitles plugin downloaders only).\nOf course, this doesn't affect me in practice as I don't have Apple products, so feel free to do what you want :) ...\n. IMO we should apply the last patch from the previous comment, lots of distros are shipping libpng 1.5 (at least in their development versions, which will soon be released as stable).\nThe patch doesn't change any pre-1.5 codepaths so it should be safe for all already-working systems, and it will fix compilation failure on libpng 1.5+ systems.\n. Instead of this, IMO XBMC should be changed to use the new names internally and only the DllAvFormat implementation should then call the old names when necessary.\n. If we want to also check for matching archive name, then the two first hunks from https://github.com/verybadsoldier/xbmc/commit/e270600c79178acbbced46f1b4ab4519e3eb987d would probably be the correct solution (in addition to this commit).\nBut as said, I'd like more comments for/against first.\n. I haven't actually looked at this patch closely, but just checking: Does it work properly with the splitted .vdr files?\ni.e. as VDR recordings are generally split at 2 GB intervals to 001.vdr, 002.vdr, 003.vdr... and IIRC there is a single marks.vdr file.\n. Hmm, this seems to be dropping most of lib/ffmpeg/patches, how are you intending to handle divergence from upstream now? (i.e. reviewing / submitting / generally looking at / keeping track our patches, or applying them to an updated FFmpeg)\nFrom a quick look this sequence of commits seems to also contain some unbuildable trees in between, making git-bisect a bit more painful... but I guess it might not be worth it to fix them now afterwards.\nAlso, not 100% sure if this drops too much backward compatibility, but I don't care myself right now as xbmc can't be built with old Mageia FFmpeg packages anyway for other reasons (if other distros/users complain, the needed compatibility can be added later).\nNice job converting us out of deprecated stuff :)\n. @elupus: OK, though a bit weird that you remove them first if you plan to readd them IMO. Also note that our tree missed a dozen or so patches in lib/ffmpeg/patches, and I just recently put them there, did you keep those applied? I see your commit doesn't remove them as it is based on an older tree.\nOn patches, it would also have been nice to have a list of patches that have been remove/added and the reasons (upstreamed, fixed in other way, dropped for some other reason)...\n. I really think we should double-check the patches in xbmc_0.10.2 against the patches currently in lib/ffmpeg/patches then to document the dropped patches. I guess it'd be preferable if you did it as the work is yours, but I can do it as well if you don't want to.\nInstead of removing the patches in the first commit and adding them back later, IMO it would be better to just replace them in the same commit so that git can track the renames and patch history.\nOTOH I wonder if there is some better way of keeping track of our patches on top of FFmpeg instead of plain patches in lib/ffmpeg/patches (which is tricky to keep in sync with the lib/ffmpeg itself to avoid losing anything), like some separate git repository that can be merged or rebased against new FFmpeg and the patches applied on-top (after all we use git when rebasing our patches anyway...) - but I don't know how would we keep that in sync then (and git submodules are probably not a good idea here). Does @theuni maybe have any ideas regarding this, or should we just continue as before?\n. @amejia1, I admit I'm not very familiar with git submodules, do they play well with git-bisect and branches in general? Also, the rebasing issue elupus notes would be a concern.\n@elupus, no need to care about the order I think, just put the removal+addition in the same commit, git will find the renames then.\n. @amejia1 As said, I'm more interested in how branches and bisect work there. i.e. if I pull someone else's xbmc branch or create my own, and git-checkout between them and other commits, the lib/ffmpeg directory better update along or it will be a mess. Similarly, when git-bisecting, lib/ffmpeg should follow xbmc checkout automatically or bisecting becomes nightmarish. I really doubt all that works well enough with submodules...\n. Sorry, do you mean that your fix doesn't work, or you want me to review it?\nIf the latter, it looks fine, assuming you've tested it :)\nJust change \"fixed breaks common cases like\" to \"fixed broken common cases like\" in the commit message so that it will be more clear :)\n. Sure, if a player can fail gracefully, it should. But neither paplayer or dvdplayer currently does, and this PR doesn't add such handling either. IMO this kind of check should be added in MakeStream(), as there is no value in duplicating the same checks on all callsites (All callsites already check the return value of MakeStream()).\nAlso, IMO this API has a trap in that if another player gets written, it is likely to not have such sanity checks at first (as it wasn't noticed for dvdplayer/paplayer until now either), and the bug is not obvious as it will only be triggered with non-sane streams, in which case an assert will be hit (or a crash, if asserts are disabled on a release build).\n. Hmm, to (try to) avoid more misunderstandings, here's again what I suggest:\n- Players should catch the error themselves earlier if they want to perform some special fallback procedure (like switching to another stream). However, this would be optional, and out of the scope of this patchset.\n- MakeStream() should perform a minimal validity check to at least avoid any crashes/asserts. In that case simply returning NULL is okay, so the player will know that something went wrong.\nMy intent at this point is to address the second more serious point only, which IMHO is a separate issue from players catching this error condition earlier and possibly performing some fallback operation.\n. @DDDamian, agreed. I'm a bit uneasy about duplicating the sanity check on all engines, though, but if you prefer not to have a generic wrapper for MakeStream() I suggested, I can just add the check on every engine...\n. I return back to my earlier question, then. Where would such a function go? :)\n. OK, I'll make a new PR with that approach, while leaving only the channelcount != channelmap check to DVDPlayer.\n. Opened https://github.com/xbmc/xbmc/pull/983 as an alternative to this PR. (I'll add the channelcount != channelmap check to dvdplayer separately later if that PR is merged)\n. Closed, will be fixed differently.\n. OK, changed to check blocksize now.\n. The needed fix is entirely different now (and simple enough to not need a PR), so I'll just close this one.\n. One thing I'm not sure of is the magic placeholder for the \"front/default/surround51/surround71\" string in the device name. I've currently used \"@\", but would something else be more clear maybe, like $foo$ with something interesting as \"foo\"? I couldn't think think of any descriptive word so I used a non-descriptive \"@\" :)\nThis is the thing that will appear in the device names like \"@\" or \"@:CARD=Intel,DEV=0\".\n. I think before AE we used to simply consider SL+SR without BL+BR input as BL+BR if the output device has only BL+BR without SL+SR (and/or vice versa). In my opinion this would be the best approach, since IMO generally it is a good idea to match 5.1 input directly to 5.1 output no matter if input is side/back and output sink is side/back \n(and I think whether a 5.1 audio has back or side depends also on the sink library, e.g. ALSA always has 5.1 with back speakers while I guess other systems may consider them as side speakers - also, I guess most audio codecs would use the side speakers instead).\nTo clarify, I mean:\nInput: FL FR C LFE BL BR\nOuput: FL FR C LFE BL BR\n=> 1-to-1 mapping\nInput: FL FR C LFE SL SR\nOuput: FL FR C LFE SL SR\n=> 1-to-1 mapping\nInput: FL FR C LFE SL SR\nOuput: FL FR C LFE BL BR\n=> 1-to-1 mapping\nInput: FL FR C LFE BL BR\nOuput: FL FR C LFE SL SR\n=> 1-to-1 mapping\nInput: FL FR C LFE SL SR BL BR\nOutput: FL FR C LFE BL BR\n=> mixing\nInput: FL FR C LFE SL SR BL BR\nOutput: FL FR C LFE SL SR\n=> mixing\nThis can be achieved by e.g.\na) Always considering output with SL SR without BL BR as BL BR instead, and then direct any input with SL+SR without BL+BR to BL+BR if output has not SL+SR, or\nb) Always considering output with BL BR without SL SR as SL SR instead, and then direct any input with BL+BR without SL+SR to SL+SR if output has not BL+BR, or\nc) Direct any input with SL+SR without BL+BR to BL+BR if output has not SL+SR, and any input with BL+BR without SL+SR to SL+SR if output has not BL+BR.\n. @taxigps, you were previously involved with VobSub stuff, mind giving your two cents and/or testing? :)\n. Sorry, been too busy for the last week or so. I think the second commit could probably be changed to what taxigps suggested, but I have to test it first to be sure. I'll try to do that this week.\n. I knew I forgot to mention something :)\nNo, not tested on darwin and windows. Since there are no actual behavior changes (outside xbmc.log), I expect no issues (other than possible typos preventing build). Feel free to test to make sure of that, though :)\n. I don't think an all-integer mode should have its own AEDataFormat, there are already AE_FMT_S24x and AE_FMT_S32x for 24bit and 32bit formats. No float conversions is something that I'd like to see as well, but IMO that is unrelated to data format (just like hog mode) and therefore doesn't belong to AEDataFormat.\nEven if AEDataFormat would be used for that despite the above, IMO it should use a separate format since obviously \"all-integer\" 24bit/32bit output is completely different from CoreAudio hog mode float output.\nAs for WASAPI, the code actually does nothing with AE_FMT_LPCM except put it in m_dataFormats, which is only outputted in xbmc.log by AEDeviceInfo.cpp. Multichannel support is indicated by specifying a channel map that has more than 2 channels.\n. @DDDamian - Yeah, I do understand that obviously m_dataFormats is supposed to plugged in later to other stuff than simply xbmc.log. However, I don't see the need for AE_FMT_LPCM to see if device is multichannel capable since the enumerated devices have a channel map (m_channels) and you should be able to see the multichannel support from that already, no? Or am I missing something? :)\nIf I am missing something above, and we need a separate flag for \"multichannel support\", the format name should be something like AE_FMT_HDMI_MULTICHANNEL_LPCM. But as said, IMO m_channels (or a separate flag if that is unsuitable for some reason that I don't see) should be used for this, since \"multichannel support\" is not a real format, just a device flag (when outputting data, the data is not actually in \"AE_FMT_LPCM\" format since it is not real).\nAs for the CoreAudio hog mode, maybe name it AE_FMT_FLOAT_CA_MULTI_HOG_MODE?\nAnd if we want a audio format for no-float-conversion, that would be AE_FMT_DIRECT or AE_FMT_NATIVE or something. However, I don't see how a single audio format could be used there, since that same field is used to indicate the actual dataformat (AE_FMT_S16LE, AE_FMT_S32BE etc), and no-float-conversion AFAICS would need just an additional flag, not a format type (since you can do no-float-conversion output with any integer format, which there are many of).\nThe above 3 things are all very different use cases and AFAICS none of them should have their own AEDataFormat, instead the channel map could be used or a separate flag, depending on case..  And if we really really really have to use AEDataFormat for them, they should have different formats since they are different meanings (or we rename AE_FMT_LPCM to AE_FMT_MULTIPURPOSE_HACK).\nAnyway, currently only CoreAudio makes \"actual\" use (even that is unnecessary AFAICS) of the field, and I don't see how the other proposed future use cases belong to AEDataFormat at all.\n. +1 for better than nothing. Sorry for having been MIA lately :/\nAs for arnova's comment, if the dialog shows all the devices at once, the \"reliable\" HDMI devices have the receiver/TV name in them, which may differentiate them enough? (I'm not opposed to additional marking if wanted)\n. Thanks for the patch. However, the hardware mixer check is incorrect and instead checks for devices that have subdevices.\nThe solution seems to otherwise be valid, though, in that for devices with hw mixer we don't need to care about dmix sample rate. I'll try to look for other solutions ASAP (today or tomorrow), but feel free to update your patch if you find another solution :)\nAlso, the semantics change a bit so you might want to update comments and the name of \"preferDmixStereo\". In addition, you can't really really on enumeration information in Initialize() since users may use custom non-enumerated devices. You need to check for hw mixing in Initialize() (unless a bigger restructuring of the code is made).\n. @manio  OK, I will double check later when I'm home, maybe the subdevices work differently than I remember :)\n. So.. subdevices > 1 can mean that there is a hw mixer, but it can also mean that different subdevices are wired to different connectors. The way ALSA uses them is defined in the card .conf file.\nI didn't find any non-hacky way to detect dmix, so personally I'm compelled to remove the \"try-to-skip-dmix-when-playing-stereo-non-48kHz-audio\" hack (uses \"front\" instead of \"default\" device in such cases) altogether. This way, if the selected ALSA device is configured to have dmix, dmix will be used (this doesn't affect surround audio, since for those ALSA surroundXX are tried first by default, and those never have dmix; similarly, this doesn't affect HDMI nor S/PDIF that don't have dmix either).\nThis is also the way it worked in Eden and how it works in most other applications.\n(this hack was originally added by me, since originally the AE ALSA sink always bypassed dmix, which was problematic - In fixing that, I tried to have a middle ground between original AE ALSA sink behavior and Eden behavior, but clearly it still causes issues)\n@DDDamian @gnif  Would you be OK with that?\n. I'm really sorry, again, for the long delay. There is now a PR #2422 which supersedes this one. Please test.\n. I'd rather not go back just yet.\nPlease try if either of these fixes the issue:\nhttps://github.com/anssih/xbmc/tree/fix/AE-buffersize\nhttps://github.com/anssih/xbmc/tree/fix/AE-periodsize\nIf neither helps, before/after logs would be nice.\n. @gnif, since buffer size should not be smaller than before the changes, I guess it is the lower period count that causes issues for you, since this results in a smaller number of frames in \"non-active\" periods. Enlarging the buffer (as you tried) would be the preferable solution to this, but unfortunately this causes too much lag in menu sounds. Do you have a log (of failing case at least, preferably also a log with an older working version), to confirm my suspicions and rule out other bugs?\nIn any case, can you see if https://github.com/anssih/xbmc/commit/5e7278fba90a1bf2e6efed9a5f64d6e86feae927 fixes the issue (instead of doubling buffer size)? If not, I'd really like to see both of the logs I asked :)\nAs for your second question, currently menu sounds have a lag corresponding to the buffer size if the stream was already running when a menu sound was triggered. This is because the buffer is full of silence that will be played out before the menu sound. This does not affect the first menu sound, since there is no silence in buffer yet. AFAIU this issue is avoidable (by skipping over the silence by some means), though I'm not sure of the best/correct approach yet without further investigation.\n. @fritsch I believe halving periodSize once more will likely not yet break it for @davilla (though of course it is possible), since the period count is still 8, while original was 16. Of course this makes the periodSize smaller than really necessary for us, but since we can't feasibly use a larger buffer instead due to menu sounds ATM...\n. Issue is real and the idea is correct.\nHowever, I think it is wrong in case of 7.1 => 5.1(back).\nEDIT: just add a \"&& !m_mixInfo[AE_CH_BL].in_src\" in there I think.\nAlso, I believe reading the code that there is a similar issue to the one this patch addresses in the reverse direction, i.e. 5.1(back) => 5.1(side), which is not addressed by the patch.\nSee also my related comment here: https://github.com/xbmc/xbmc/pull/1490#issuecomment-9012541\n@davilla: standard AC-3 5.1 test file in teamftp, my directory.\n. On a second thought, not 100% sure what we want to do with 7.1 => 5.1(back).\nDepending on whether the actual speaker arrangement is 5.1(back) or 5.1(side), we would optimally either\na) in case of 5.1(back) speakers, the 7.1 side channels should be mixed to rear and front (like the second patch, though we should mix more of it to rear than to front), or\nb) in case of 5.1(side) speakers, the 7.1 .... er... both rear and side to rear, I guess, (like the first patch) did.\nDuh, I guess I should see what my amp does :)\n. My amplifier seems to do (b), and since it seems sensible, I think I'm going to backpedal and say that it was better before my suggested modification. Especially since we don't know the actual 5.1 speaker arrangement.\nEDIT: However, it might make sense to not change anything at 7.1 right now to focus on the 5.1 issue. 7.1 can be meddled with later if wanted.\n. Seems ok to me in principle, i.e. at least better than what we do now.\n. ",
    "wsoltys": "win32 will need the /lib/ffmpeg/include directory. avconfig.h is needed to compile the vs project and dxva2api.h to enable hwacc in ffmpeg.\nthe ffmpeg dlls compile fine but vs somehow uses now the dxva2api file from its own sdk which has other types defined.\nMaybe CrystalP can shed some light on it?\n. will try to test it this evening but still suffer from a cold so have to see.\nConcerning avconfig.h you assume that ffmpeg is build before xbmc which isn't the case on win32 (see http://trac.xbmc.org/ticket/11037 for elupus comment)\n. works fine on win32\n. Do you mean inside the dharma/eden folder or outside? Either way I have no preference and will live with what you've decided ;) Just drop me a pm with the ftp login.\n. Nope. This just should bring the third party libs to our mirror. Since you've provide not more information I assume bootstrap fails for libdvdcss. This was fixed in https://github.com/xbmc/xbmc/commit/27bfc6a90afce21ab90aeca5e9b03a7585c8c166 and you have to call DownloadMingwBuildEnv.bat again. I dunno why it won't work with automake 1.11 for msys but with automake 1.11 for mingw.\n. Does it build for win32? IIRC it was a hassle to build it but elupus got it done.\n. I assume the new files _xml* _json* needs to be added to the vs project file as well. Thanks for looking into it.\n. go for it :)\n. @jhsrennie: ffmpeg and libdvdnav dlls are no longer in the repo and build during compile time. If you don't use BuildSetup.bat you have to call DownloadMingwBuildEnv.bat and afterwards buildmingwlibs.bat.\nIt might make sense to put it somewhere in the vs project file but only when we changed it to not recompile on every build.\n. works fine on windows\n. works fine on win32. go for it.\n.  8409c7b75f70a20d1906\nThanks,\nWiSo\n. Windows attention in 5a3744b5107c9ab094aa\n. win32 is ready for production\n. Did I somehow mixed the PR with my commits? As comment to the backlog I just fetch your changes and rebased mine on top of it. I never used merge yet.\n. Thanks blinkseb. My call for production was not properly tested (i.e. playing a video file ;)\n. btw can't reproduce it on win64\n. push it ;)\n. It compiles and seems to run fine but after closing XBMC I get the following line (repeated a lot):\nFirst-chance exception at 0x75c2b760 in XBMC.exe: Microsoft C++ exception: boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> > at memory location 0x0427f51c..\n. can't reproduce it now either, weird. Anyway I'll merge it now. Better that than the broken build.\n. had another exception when exiting XBMC and it hang even though the thread window didn't show any running threads:\nFirst-chance exception at 0x0151eb56 in XBMC.exe: 0xC0000005: Access violation reading location 0x0000002c.\nFirst-chance exception at 0x75c2b760 in XBMC.exe: Microsoft C++ exception: access_violation at memory location 0x0439eccc..\nCThread::staticThread : Access violation at 0x0151eb56: Reading location 0x0000002c\n. unfortunately not. it does not happen reproducable and with the hang yesterday it even showed no running thread anymore nor any stack trace. \n. before fiddling with the git crap I have nothing against fixing the win32 build later.\n. compiles fine on win32\n. ok\n. compiles and runs fine on win32.\n. Not sure if I like this. Your changes might be valuable but I have the feeling that the XBMC project will be over complicated and I don't see the benefits. \nAnyway I'll make a dependency package out of unittest++ and push the changes to my repo.\n. You can find my changes here: https://github.com/wsoltys/xbmc/commits/fm-threads\n. @jimfcarroll: just read the backlog about the include path of unittest++.h. you can use the same path as on linux. i just use an extra include path on win32 to make it work without it ;) its already in include/unitest++/ so we would have the sam as on linux.\n. We might ask taxigps. He was the one who implemented it once.\n. fopen_utf8 was used by fontconfig which was linked to libass. I guess this was lost when I changed to a third party build of fontconfig ;)\nSince no one complained so far I assume we can get rid of it.\n. i'm with crystalp. let's merge and look later. maybe newer versions won't suffer from this problem. as said i missed the freetype change month ago and nobody complained so far. \n. Unfortunately it doesn't work. Put a special char in the xbmc installation folder and you see what I mean.\nAnd my changes didn't get lost. I've provided a self build freetype with taxigps changes. See the readme.txt in the old package freetype-2.4.4-win32.zip.\n. See my comment above. The implementation was in ass_utils because we didn't want to change too much of freetype.\nJust add the things back as they where and everything will work again :)\n. seb: just put the changes back and all is fine. freetype needs this. Since freetype is used for libass and xbmc fopen_utf8 can be found in both (ass_utils and win32util).\n. fixed in 0efaac04ab554d6b86c5bde539e0478f6cc99124\n. Thanks for reviewing. Yes dnssd.dll is self build. The vs2010 project files and a \"how to build\" is included in the package.\nSo question is do we merge it in soft freeze or not? ;)\n.  if there're no objections I'll merge the AirPlay pull request for win32 in ca. 1hour \n. yeah could be something to think of later. I have no problem to let the user install bonjour if he wants to have airplay.\nBut as you said we should only disable zeroconf if we can't find the daemon.\n. one commit to much in this pr\n. cool. didn't know that you get mail from github if you're just referenced in the text ;)\nAll three sample looks fine for me\ntrac12023-2-alt and trac12023-2-alt2\nBoth look the same for me. The \"know\" in the white text is italic. The colored text is pure italic\ntrac12023-2-orig\nthe white text look the same like in the other samples with \"know\" italic. The colored text looks like a different font compared to the samples above.\n. hehe, WiSo = wsoltys so you pinged me twice ;)\nWe're using a precompiled libcurl from here http://www.gknw.de/mirror/curl/win32/old_releases/. Problem is every third party lib can ship it's own version of ssl. If we just have an eye on curl we can take the dev package of the version used by libcurl and put it in our dependency lib. We just have to take this version in future too if we need ssl somewhere else and want to use our dependency system (or bump it if we bump libcurl).\nLet me see if I can cook something together today or tomorrow.\n. I've added the missing headers but getting unresolved external symbols for _CRYPTO_set_locking_callback and _CRYPTO_set_id_callback. To resolve them I would need the ssl import lib which fits to the ssl dll used by the third party build of libcurl which we don't have.\nDo we have the curl locking in windows as well or can we skip this implementation?\n. so we don't need any changes on win32. If worth I can change to a newer version of libcurl which uses openssl 1.0.0\n. could be. what happens if I set bPlaying = true (which I forgot anyway)? then it shouldn't call itself, should it?\nFeel free to open another pr but we need the other devs to chime in.\n. closed in favor of #579\n. yeah looks like a better approach.\n. I guess we could convert the solution in CStdString with some safety checks first. Question is if Linux and OSX are also fine if we rip off the video_ts from the string?\n. true. the question remains for Linux then ;)\n. and as CrystalP already mentioned, do we need the single step to strip only the video_ts.ifo or can we do it all in one?\n(for example: should an ifo structure inside any directory work?)\n. agreed. I'm still no git expert but shouldn't the Merge commits vanish as well? Then it should be a lot less and even easier if its rebased to dsplayer and changes to xbmc core (including libs). I assume latter one is what most people are interested in.\n. what about the ffmpeg changes? Are they pulled from head or do we need patches for every change here to do the upcoming ffmpeg updates?\n. Is there any special thing to do to make it run with Visual Studio Express under the debugger? I just keep getting the message that VS is unable to start it because the application configuration is incorrect!?\nThis happens right before any output in the debug window appears.\n. still no joy for me. Is the .reg needed to start XBMC? Any other idea what I could have done wrong?\n. just for the record: it doesn't even reach WinMain for me.\n. Jup, I can start XBMC in debug target now, great. Some small issues still persist:\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\Microsoft.Common.Targets(1200,9): warning : The referenced project '..\\..\\..\\..\\..\\project\\VS2010Express\\guilib.vcxproj' does not exist.\nAnd the subtitle dll won't build due to:\nmt.exe : general error c101008a: Failed to save the updated manifest to the file \"F:\\Coding\\Windows\\xbmc_wsoltys\\project\\VS2010Express\\objs\\libsubs_dll\\Debug\\libsubs.dll.embed.manifest\". Wrong Parameter.\nBeside that we have a lot of warnings. Maybe nitpicking but it would be nice to reduce them a little ;)\n. Just for interest. I see that XBMC loads some shaders for dsplayer at start even though I don't wanna use it. Is it possible to load them only when dsplayer is used?\nNot sure if the effort is higher than the time it saves us on every start but XBMC already starts slower than some years ago ;)\n. Nice. We'll help with the warnings after the merge. But maybe you can reduce some of them by just set to ignore them ;)\nObviously we should take a deeper look at the redefinition ones as this could have different meanings.\n. Nice find. How was it triggered?\n. To be clear, exiting with the context menu and when no cd was playing worked fine for me and was a test scenario whenever I've updated libcdio. However IIRC there was a problem when a cd was playing and one pressed the drive open button.\n. BTW cdio_config.h produces some warnings due to the package define. Is it possible (and wanted) to define cdtext_t with a forward declaration to not include the cdio header inside the cdioSupport header? If yes how? ;)\n. Ah, I don't own one with cdtext.\nYou mean with 0.84 and upwards the internals will change? So when updating someday I should get in touch with you!? ;)\n. Since no one complained, merging?\n. Does it make sense to put some effort in using 1.5 on win32 as well?\nCurrently we're using the bundled 1.2.24 in our repo.\n. Wouldn't it be better if zeroconf would react on the return code of doPublishService that all ports benefit? A connection test to a port can be successful even though the service behind isn't working. Granted this is more importent for Loadbalancers than our application.\n. Beside that its fine for me ;)\n. please see https://github.com/xbmc/xbmc/pull/612\n. I know that OSX and Linux probably won't need the check but I would like to have it at this point rather than in zeroconfwin.\nIf the compiler isn't smart enough we can ifdef it out.\n. @CrystalP : thoughts?\n. Doesn't work out of the box. Had to rename TINYXML_DECLARATION in DECLARATION l171 in XBMCtinyXML.cpp to make it compile with 2.6.2. But I get the following linker errors:\n1>tinyxmlSTL.lib(tinyxml.obj) : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in SlingboxLib.obj\n1>tinyxmlSTL.lib(tinyxmlparser.obj) : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in SlingboxLib.obj\n1>tinyxmlSTL.lib(tinyxmlerror.obj) : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in SlingboxLib.obj\n1>     Creating library XBMC\\Debug (DirectX)\\XBMC.lib and object XBMC\\Debug (DirectX)\\XBMC.exp\n1>GUIDialogSmartPlaylistEditor.obj : error LNK2019: unresolved external symbol \"public: void __thiscall TiXmlDocument::operator=(class TiXmlDocument const &)\" (??4TiXmlDocument@@QAEXABV0@@Z) referenced in function \"public: class CXBMCTinyXML & __thiscall CXBMCTinyXML::operator=(class CXBMCTinyXML const &)\" (??4CXBMCTinyXML@@QAEAAV0@ABV0@@Z)\n1>Addon.obj : error LNK2001: unresolved external symbol \"public: void __thiscall TiXmlDocument::operator=(class TiXmlDocument const &)\" (??4TiXmlDocument@@QAEXABV0@@Z)\n1>ButtonTranslator.obj : error LNK2019: unresolved external symbol \"public: class TiXmlAttribute const * __thiscall TiXmlAttributeSet::Find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const \" (?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) referenced in function \"public: int __thiscall TiXmlElement::QueryValueAttribute<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)const \" (??$QueryValueAttribute@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@TiXmlElement@@QBEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@Z)\n1>XBMC\\Debug (DirectX)\\XBMC.exe : fatal error LNK1120: 2 unresolved externals\nWill see if I have more time today to investigate it.\n. first three errors seems to go away if I use the debug lib of tinyxmlstl. leaves still the unresolved symbols\n. ok now the end of my monologue ;) The errors are there since I didn't removed our tinyxml sources from the file system.\nWith the addition of\n```\ndefine TIXML_USE_STL\ndefine USE_RENAMED_TIXMLNODE_ELEMENTS\npragma comment(lib, \"tinyxmlSTL.lib\")\n```\nI get XBMC compiled and running fine. Although I get a lot of redefinition warnings due to #define TEXT        TINYXML_TEXT and TEXT is already defined in the M$ includes. Does anyone know if its safe to just ignore this warning or is it better to undef TEXT somewhere?\n. just for the record. win32 needs some love after merging the pull request (editing the project files, implement the scripts for downloading the lib, etc). I'll happy to do that but I'm on a business trip tomorrow so either do it today or earliest Wednesday.\nI would advise removing the tinyxml source from /lib. Otherwise I get problems on win32.\n. nice and yes you should have mentioned that :)\nfind my repo here https://github.com/wsoltys/xbmc/commits/tinyxml\nI use the debug an release version for building and undef TEXT seems to help here.\nI already uploaded the precompiled libs to our windeps.\nNot removing the sources leads to using the internal tinyxml.h rather than the new one on my setup.\n. and I should stop now pushing to my repo because I do one error after the other ;)\n. I had to push another fix for periphal.cpp.\n@Montellese: does your lib compile with target release? the debug lib spits a lot of errors and I get one unresolved symbol with the release.lib.\n1>Peripheral.obj : error LNK2001: unresolved external symbol \"private: static struct TiXmlString::Rep TiXmlString::nullrep_\" (?nullrep_@TiXmlString@@0URep@1@A)\n@amejia1: you should maybe have a look at periphal.cpp at it seems to use tinyxml directly and not via the wrapper. Could be that after that is fixed all the errors might be gone.\n. beside the problem above XBMC compiles fine in debug and release.\n. please implement the last compile fixes:\nhttps://github.com/wsoltys/xbmc/commit/4b37cc66593d2e8dc81191bb863dc418d32bc3ce\n. looks okay for win32.\nAnd I agree with Montellese. The undef in the header was a bad idea (in the cpp it might had worked).\n. The vs project file is completely borked and if we even consider merging this it should be overdone. I also don't like the /force given that it worked before when I first tested it. Dunno about the Test(). it seems to be that url is invalid.\n. I didn't said that's easy or hard it just needs to be done before merging. dunno if this is worth all the hassle and if we shouldn't keep what we have (is it really me saying that? ;).\n. Compiles and seems to work fine with the vs filter file change here: https://github.com/wsoltys/xbmc/commit/aa7b12d47086096df39339ed241c87484f147446.\nThe test fails as we can't use relative path here (the binary runs somewhere else). Using the right path (special://xbmc/xbmc/utils...) it still doesn't work. I can't explain why. I just see that the special path is transformed into the right local path but File.cpp l240 returns false because CFileFactory::CreateLoader(url) returns a CHDFile() which is m_hFile(INVALID_HANDLE_VALUE).\n. the filter file is still broken. A fixed version is here: https://github.com/wsoltys/xbmc/commit/9184e993ea4d5faa41a1559e3edd7fb4f2360a47\nWhat else did you change since the last working version as it doesn't compile anymore:\n1>f:\\coding\\windows\\xbmc_wsoltys\\xbmc\\utils\\xbmctinyxml.cpp(28): error C2039: '{ctor}' : is not a member of 'TiXmlDocument'\n1>          f:\\coding\\windows\\xbmc_wsoltys\\project\\builddependencies\\include\\tinyxml.h(1393) : see declaration of 'TiXmlDocument'\n1>f:\\coding\\windows\\xbmc_wsoltys\\xbmc\\utils\\xbmctinyxml.cpp(33): error C2039: '{ctor}' : is not a member of 'TiXmlDocument'\n1>          f:\\coding\\windows\\xbmc_wsoltys\\project\\builddependencies\\include\\tinyxml.h(1393) : see declaration of 'TiXmlDocument'\n1>f:\\coding\\windows\\xbmc_wsoltys\\xbmc\\utils\\xbmctinyxml.cpp(39): error C2039: '{ctor}' : is not a member of 'TiXmlDocument'\n1>          f:\\coding\\windows\\xbmc_wsoltys\\project\\builddependencies\\include\\tinyxml.h(1393) : see declaration of 'TiXmlDocument'\n1>f:\\coding\\windows\\xbmc_wsoltys\\xbmc\\utils\\xbmctinyxml.cpp(100): warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning)\nI don't have the time to look further atm.\n. @jmarshallnz: the app messages are in now quite a while and no one uses it so far. I think they're fine to remove. I don't know what TMSG_CALLBACK is about or if it is in use somewhere.\nIf Linux/OSX won't need this job (as they're using DetectDVDType) I can also move the job inside win32util and get rid of some includes then because win32util is already included in Application.cpp and WinEventsWin32.cpp.\n. probably we won't need it static here as the class is a singleton?\n. @jmarshallnz: thanks for reviewing. I've done the changes you've requested. Maybe I should have squashed the repo later :)\n. Not ages but it can take 1-2 seconds and even longer when bonjour isn't installed.\nAnd I have a run with jobs atm ;)\n. Nice one. Is AirPlay in this implementation on windows still usable without libshairport?\n. Nice work. Do you think the utf8 decode will harm osx/linux?\n. As said the main purpose was for learning reasons as dvdplayer seems to difficult for me ;)\nThe second could be why use some reengineered stuff if you can get the original. We do the same with WINFileSMB.\nAgreed that wmv would make more sense since we had never proper wmv playback (at least what I get from the user reports since I don't use wma nor wmv).\n. Sure for that we have the pull requests and thanks for the info ;)\nI still can live with 128kbits mp3 :P\n. I never had a look at AE but IIRC we just need to deliver float samples rather than int for the current implementation.\n. This isn't meant for eden ofc. As said why use some \"hacked\" stuff if you can have the original? After all this was for learning purpose and if nobody wants it we can discard it.\nI don't think that the N version is used widely so no really good point for me. wmvcore is delayed load and only needed when playing wma files. If not found CanInit returns false.\nDon't get your last question. isyncreader can only handle local files and an istream object. To use our vfs I had to implement cfile in istream which is working fine. to change istream was also mentioned in all infos I found on the net.\n. On a side note what is the difference between using windows native codecs and linux system or external libs. I would suppose we have a lot more hacks to support all the different library versions for the different linux distributions.\n. paplayer lets the codecs handle the disc access and several our codecs uses Cfile which handles all kinds of urls fine. Other codecs accesses the disc with their third party lib which is wrapped to use our CFile. Cfile is the access to our filefactory and used at several places.\nthe XBMCistream was taken from an example out of the windows sdk. I just replaced the createfile statements for local disc access by our Cfile.\n. btw paplayer used dvdplayer to play wma files. You still get the same behavior if you choose \"play with dvdplayer\" from the context menu.\n. haha, jmarshall you always have a nice way of saying: we don't want this ;)\nYou know that I always kept the platform idea and tried to think for all platforms but in this particular area I disagree. I think we should use what the platforms offer if it can be implemented without harming the others. But I can live with the decision knowing that I've learned some other parts of XBMC.\nI assume the same statements would be valid if I would dive into dvdplayer for implementing wmv? Not that I did this yet as dvdplayer is a beast for me.\n. IIRC we had more problems seeking and playing wmv than with wma. But as said dvdplayer is a beast for me and wanted to start with a small thing :)\n. bump ;)\nEven with our new ffmpeg XBMC won't playback any of my lossless files. If anyone want to test/fix it I've uploaded samples on teamftp in my /wiso folder.\nThis pr will get a fallback to dvdplayer if the dll wasn't found and then all should be good (assumed it still works).\n. I need to rebase it with latest master. Probably you missed the change in CodecFactory.cpp but I'll look at it to include more log infos and the fall back to dvdplayer.\nJust for the others as info as the logfile tells ffmpeg detects it as lossless samples but denies to play it since experimental codecs aren't enabled.\n. The rebase was a mess due to massive changes to the vs project files. Also the wmacodec wasn't returned in CreateCodecDemux. Dunno why it worked before but I think it has to do with the changes in between.\nThe fall back will follow later. the 24bit file doesn't work atm.\nNote: paplayer plays all wma files in 44khz 16bit. Dunno if this is due to paplayer or that probably the syncreader just returns that when we request uncompressed streams.\n. updated with a fallback to dvdplayer when wmvcore.dll isn't available.\nIf now one objects I'll merge it within the next merge window.\n. and if we wait another few months the wma lossless codec might be not experimental anymore and even activated in ffmpeg (which it isn't yet)\n. closed as it would need to be rebased on ae anyway\n. if we remove specialprotocol.h from guisettings.cpp we would need to add xmlutils.h for path_version as guisettings uses it as well. so only a small cleanup.\n. Looks good. Unfortunately I can't test as I have to leave earlier. But since all important functions are there it should work.\n. haha, John collective is good ;)\n. Tested and works as is.\n. compiles fine on win32 but two things I noticed:\n1) l16 and pcm extensions aren't added \n2) I didn't found good/right test files for it but with the wavs I've tested I just get noise (PCM S16 LE araw, PCM MU-LAW mlaw) even though the content type equals audio/l16.\nAt least the PCM S16 LE araw plays fine without this patch.\n. we can add it to both since the edl feature is also in both. don't see a reason to just add it to pvr as I can still use it without the pvr extension to some extend.\n. In current core it doesn't since the files aren't stacked. But this isn't a edl issue but a stacking issue which could be adapted. I dunno the pvr code well enough to know if stacking for vdr files or via the pvr plugin is possible. If yes this patch will work there too.\nAgain: I use vdr and I would like to have that feature to get rid of vdr as a frontend. I'll have a look at the pvr branch later and if there's anything missing like stacking for those files I'll add that.\n. edl is so deeply integrated into dvdplayer how can one use it without? ;)\nI'll have a look at how pvr opens the stream but I hope we somehow can reuse the edl feature. I really don't wanna dig so deep into dvdplayer and as it was implemented it was easy to support other formats without writing much code.\n. Didn't checked the code yet but think I got it know. I assume regardless if the *.vdr files are local or not they're streamed through the plugin right? didn't thought of that since on my setup vdr and xbmc are on the same server.\nThen please let me know what you intend to change to make it more \"generic\".\n. The format is different for all backends (see edl.cpp: ReadEdl, ReadComskip, ReadVideoReDo, ReadBeyondTV, ReadMythCommBreakList, ReadMythCutList).\nI guess we need to receive the scene cuts/commercial breaks from the plugins and feed it to edl.cpp as dteirney said.\n. I didn't had a look at pvr yet but I doubt this will work. the current edl implementation gets the url of the video from dvdplayer and tries to get the scene cut file from this location via our vfs. if we get all the streams though the pvr plugin the edl class won't know how to access the file afaik.\nI assume dteirney already implemented some similar methods for myth to get the cut marks. We could implement that via virtuals and just deliver nothing where it isn't implemented (wouldn't harm the existing plugins). But I have to look at the sources first.\nThe ultimate solution would be if the plugin could also extend our vfs on runtime. ;)\n. Nope as we have feature freeze already and this would only make sense together with https://github.com/xbmc/xbmc/pull/1743 and some additions to the vnsi client.\n. compiles with the following additions: https://github.com/wsoltys/xbmc/commits/ffmpeg_0.10.2 \nstill access violation when trying to play a video. Next try would be to reverse the gcc mingw update though it did work fine with the old ffmpeg.\n. still fails playing a video when compiled with our old mingw env.  Access violation when avcodec_alloc_frame.\n. above rebased code doesn't compile on win32 and throws a lot of errors. I tried my old branch posted above with --disable_asm but the access violation is the same.\n. Compiles fine but you might want to change postproc-51.dll to postproc-52.dll in dllpaths_win32.h.\nUnfortunately this build seems to have problems with dxva. When I start the I'm Legend trailer the file menu still shows but no video no audio is shown. If I press X the last message in the log is \"waiting for video thread to exit\".\nFrom the killa sample the sound is played but after pressing X the same happens.\n. Forgot to mentioned that I'm Legend and killa sample work fine when turning off DXVA acceleration.\n. First one starting I'm Legend, wait, press x, wait:\nhttp://pastebin.com/P2hzBrAz\nSecond one playing kill sampla, wait, press x, wait:\nhttp://pastebin.com/CgpFxT3B\n. I'm not at home any more and only have a small rig with me with almost no sample files. I probably can try something tomorrow since this Laptop has also an ati card.\n. compiles fine for me (vs and mingw) without errors but did a \"git clean untracked\" before. My video samples work fine. Just got some problems with some wma samples but thats not that important :)\n. Just for the record one wma pro files crashes in DVDPlayerCodec::ReadPCM l288 because m_decoded is a bad pointer.\nLogfile ist here:\nhttp://xbmclogs.com/show.php?id=1133\n. the file is on teamftp in the wiso folder. I've uploaded another one (recit16bit.wma) which just fails to playback.\n. no crash on  the wma pro and overall nice work.\n. The current mini dump code is only executed if XBMC got a uncaught exception and exits. You might wanna change that to support the rest of the caught exceptions. The dumps shows not much without the pdbs which you already requested from TheUni. I think for 80% of the current exceptions the xbmc.pdb is enough :)\n. pull it in.\n. rebased #1285\n. Unfortunately the guiinfomanager requests the disc state every loop so I thought to use the map instead of always send device requests to the drive.\nSo it might work when I add m_muAutoSource before the find call? the libcdio got already an own single lock.\n. I'll guess I'm to dump for threading ;)\nWhat about the last commit? lock(m_cslibcdio) is only used in getcdinfo and for the time the call is made. The access to m_mapcdinfo is guarded by waitLock(m_muAutoSource) and also only used when we accessing it.\nStill to many locks IMO since TranslateDevicePath is also guarded with m_muAutoSource.\n. I can repro the issue so this is just an assumption based on the code.\nWhen starting XBMC with a disc inserted during start the job CDetectDisc::CDetectDisc is started with uses a few mediamanager methods to detect the inserted disc (GetDiskLabel, GetDiskUniqueId, IsAudio). Latter one is receiving the CCdInfo object (cdio.GetCdInfo) which does a lot of stuff in the background and could misbehave with some bluray drives.\nMeanwhile XBMC is started and fires every loop (dunno why, legacy?) g_mediaManager.IsDiscInDrive() (see GUIInfomanager). I assume this is to put the disc in drive icon in the gui. On Linux this is just accessing on variable since it only handles one drive there IIRC. \nBecause I wanted something similar and preventing accessing the drive every call I introduced m_mapCdInfo which stores the ccdinfo object for every inserted disc.\nIn the current implementation both accesses were guarded through the same lock making the app thread wait until cdio.GetCdInfo is ready.\nThe code in this pr should change that. Now the cdio.GetCdInfo call is guarded with m_cslibcdio for the rare cases it could be called twice at the same time. During the call mapCdInfo could be called from the app thread and would just return false until the libcdio call is ready without stalling it. \nmapCdInfo is then guarded with m_muAutoSource which should be short enough because it now only locks the mapCdInfo  access. cdio.GetCdInfo is only called once until we have the cdinfo object in the map.\nHope this will make it clearer :)\n. right, thanks for the heads up I must have overseen that because I checked for it :)\nI've updated the pr with the changes.\n. Sure I would have squashed it anyway for main line. Do you mean the following by scoped locks (see above).\n. Ah right, thanks and updated.\n. Not tested but looks okay. Throw it in and if needed I fix it later.\n. thanks for reviewing. will do an update soon.\n. libcec1.6.0.zip is uploaded to the win mirrors and xbmc compiles fine.\nTwo small issues remain:\n- the name of the zip is libcec1.6.0.zip but in libcec_d.txt libcec-1.6.0.zip is referenced. Which one should be renamed?\n- in libcec_d.bat pthreadVC2.dll is copied but not included in the zip. Since the dll seems not be required it anymore please update the script accordingly.\n. not tested but libcec 1.6.2 uploaded to win32 deps\n. uploaded. I waited for the final go because I didn't want to uploaded every intermediate release.\n@Memphiz: the win32 deps are parallel to your darwin folder. Since I can create files in \"your\" dir I assume you can do the same in the win32 deps dir ;)\n@opdenkamp: drop chadoe, montellese or me a line on irc and you'll get the credentials there. For the next package version please do me the favor and provide two packages. One with the files needed for XBMC in the form described here: https://github.com/xbmc/xbmc/blob/master/project/BuildDependencies/scripts/0_package.list and one with the rest of the files which aren't needed for xbmc to build or run.\n. You could implement HasOpticalDrive() in CMediaManager by requesting m_bhasoptical.\nIt works on Windows but I dunno if Linux/OSX set that boolean.\n. compiles and works fine on win32\n. nope. HAS_SECTIONS wasn't defined on win32 either.\n. fine by me\n. the order got broken due to all the git merges or someone working with a text editor. current master is a mess in terms of the filters file. sources are referenced in the filter file but not shown and some filters being empty. last example is the thread refactor with commons being empty and no threads filter at all.\n. mmh last example may be wrong as it seems that common and threads are now own projects. didn't checked the merge cascade.\n. which sources do I have to take for a win build? Are they already prepared for win or does it need some modifications?\n. Uploaded to win deps as well:\nhttps://github.com/wsoltys/xbmc/commit/4017bde664c00500ae9f3767254917934737d45c\n. I've uploaded the dll to our mirrors and the scripts are here: https://github.com/wsoltys/xbmc/commit/ea403bc446ddc2deeb3787d9f8a4a2527df80284.\nIt seems to work but I see heavy stutter while debugging. Dunno if its due to AE or milkdrop. The log is spewed with AE related lines so its difficult to spot anything: http://www.xbmclogs.com/show.php?id=2688\n. btw I locally changed the WINJoystick files to unix style line endings but git found nothing to commit. I assume this needs to be handled afterwards by someone on Linux if needed.\n. I reshuffled the includes and put them where they needed. Would be good if Linux/OSX could test it as well.\n@jmarshallnz: I've replaced the statics as I don't think they're needed. Could you please review again and have a look if I don't have an error in reasoning here?\n. @jmarshallnz , @davilla :  Any comments about using HAS_SDL for indicating full screen capability?\n. So can we remove the ifdef around full screen completely? Powermanager.cpp and AdvancedSettings.cpp that is.\n. btw I searched for code lines to determine endianness but found so many examples that I dunno which could be safely used. So I decided to use boost but I'm open for suggestions.\n. That seems to work:\ndefine LITTLE_ENDIAN 0x41424344UL\ndefine BIG_ENDIAN    0x44434241UL\ndefine PDP_ENDIAN    0x42414443UL\ndefine ENDIAN_ORDER  ('ABCD')\nif ENDIAN_ORDER==BIG_ENDIAN\n:)\n. I've kicked boost out and just disabled big endian on windows for now (unlikely that we need it soon).\nI'll let the HAS_SDL ifdefs for full screen in because I dunno what happens if a user sets m_fullscreen to false via advancedsettings on embedded.\nIf no one objects I pull this in the next days.\n. @davilla : maybe replacing the ifdef HAS_SDL by something like a target embedded might be more suitable? At least for all devices which doesn't support window mode if I read it right.\n. I guess CDDARipJob.cpp still needs to be added to the osx and win project files.\n. Please also add the following:\n- 08696c [WIN32] fixed release build. added missing dxguid.lib (thanks Jezz_X for the heads up)\n- 0cbbf0 [WIN32] changed from old deprecated joystick interface (SDL) to directinput\n. Depends on how long it takes to get Eden.1 out. The DirectInput stuff is for fixing crashes with wireless controllers: http://forum.xbmc.org/showthread.php?tid=129274\nGranted only a small subset of people uses gamepads to steer XBMC but for most of them Eden made it worse so that they provide their own builds (see forum thread).\n. I would really like to get the directinput changes in because the user feedback is promising. Here is the commit for the eden branch:\nhttps://github.com/wsoltys/xbmc/commit/f8d004b2a0e648169dbb877dc85fa483d8de083b\nUnfortunately I can't start XBMC anymore because it crashes with an access violation in Textur.cpp l177 in if (jpegfile.Open(texturePath, maxWidth, maxHeight)) with \nJpegIO: Error 13: Wrong JPEG library version: library is %d, caller expects %d\nUnhandled exception at 0x0272e73e in XBMC.exe: 0x80000026: Ein \"long jump\" wurde ausgef\u00fchrt.\nSo I guess there's still something missing for windows.\n. I can't say why but with the bumped lib it works: https://github.com/xbmc/xbmc/commit/c852c0d9b7520a60fe7d4f48060ac4f44295c271\nWhat's weird is that it bails out in jpeg_create_decompress(&m_cinfo); but throws an error message from Cximage (jerror.h l55)\n. for me it looks like that it just had been added with commit 3971617ffc6bc6e87915025c0b49b4c49818d69d because before it wasn't in. And it was meant from my repro because I rebased all later bug fixes in one commit for the Eden.1 branch. but looks good now as far as I can see.\n. not tested but looks fine at a first glance.\n. I might be able to help when back from my business trip but I need some pointers where to start. Atm I dunno for what files I should create a new project file and what to link with it. From an outside point of view its just several cpp files and libs spread over our repo.\n. here are the changes to build a xbmc-test.exe console application: https://github.com/wsoltys/xbmc/commits/testsuite\nWhat to do with the test cases and how they are implemented and run?\n. if I add one test case to the project file (testmd5.cpp) it shows the following behavior:\n- when running on the command line in a xbmc release installation it just prints out:\nF:\\XBMC>xbmc-test.exe\n[==========] Running 3 tests from 1 test case.\n[----------] Global test environment set-up.\nSetup of basic environment failed.\n- when running in the debugger it never reaches the end of xbmc-test.cpp but just ended in gtest.cc l2107\nreturn HandleSehExceptionsInMethodIfSupported(object, method, location);\n. okay found the problem why it doesn't run together with a release build (see second commit).\nNow it works as well with the vs debugger.\n. mmh looks like I have to add every test one by one as sometimes they just won't compile (might be easy to fix) but sometimes they just end the test prematurely without any notice.\nBut not today.\n. any reason you didn't pulled my changes? It's a pita to add them every time you do a rebase. Here's a new try: https://github.com/wsoltys/xbmc/commits/testsuite.\nNo test added yet but you don't need to wait until win is ready because it won't harm the debug or release build anyway.\n. c:\\development\\xbmc\\xbmc\\utils\\test\\testcpuinfo.cpp(44): error: Value of: t.IsVa\nlid()\n  Actual: false\nExpected: true\n[  FAILED  ] TestCPUInfo.getTemperature (5 ms)\n[ RUN      ] TestCPUInfo.getCPUModel\n[       OK ] TestCPUInfo.getCPUModel (0 ms)\n[ RUN      ] TestCPUInfo.CoreInfo\nc:\\development\\xbmc\\xbmc\\utils\\test\\testcpuinfo.cpp(57): error: Value of: c.m_st\nrModel.empty()\n  Actual: true\nExpected: false\n[  FAILED  ] TestCPUInfo.CoreInfo (0 ms)\n[ RUN      ] TestCPUInfo.GetCoresUsageString\n[       OK ] TestCPUInfo.GetCoresUsageString (0 ms)\n[ RUN      ] TestCPUInfo.GetCPUFeatures\n[       OK ] TestCPUInfo.GetCPUFeatures (5 ms)\n[ RUN      ] TestCPUInfo.getUsedPercentage_output\nPercentage: 0\n[       OK ] TestCPUInfo.getUsedPercentage_output (10 ms)\n[----------] 9 tests from TestCPUInfo (65 ms total)\n[----------] Global test environment tear-down\n[==========] 66 tests from 8 test cases ran. (11970 ms total)\n[  PASSED  ] 62 tests.\n[  FAILED  ] 4 tests, listed below:\n[  FAILED  ] TestCharsetConverter.utf16LEtoW\n[  FAILED  ] TestCharsetConverter.wToUTF8\n[  FAILED  ] TestCPUInfo.getTemperature\n[  FAILED  ] TestCPUInfo.CoreInfo\n4 FAILED TESTS\n. Nice. This is so fragile that after I've added some more tests it just crashes inside RUN_ALL_TESTS() without any notice where. After removing the additional tests it still crashes and what have worked before doesn't anymore :(\n. okay, latter one was my fault. The temp directory couldn't be created since it wasn't unique anymore. Current fix isn't nice but does the job.\n. Thanks. The changes in TestBasicEnvironment.cpp look exactly the same like mine. Dunno how I could break the linux builds if I changes something between #ifndef _LINUX #endif ;)\nYes, please make the change to Testfft.cpp.\n. Go for it. There's again a problem with the project files (fixed here https://github.com/wsoltys/xbmc/commit/2c6547bbedf86e2864487b50bd66014f340502c4) but I assume we get more with the final merge and I'll take care then.\nOnly a few tests are added yet but this shouldn't stop this to be merged as it won't harm the release or debug builds.\nThe tests needs to be added one by one as a few fail and its sometimes difficult to debug where they fail. But this can be added when already merged.\n. Don't forget to add new methods to libcmyth.def. Otherwise they won't be exported by the dll.\ncmyth_mythtv_remove_previos_recorded needs to be exchanged by cmyth_mythtv_remove_previous_recorded in libcmyth.def.\ncmyth.msc.h misses an #endif at the end.\nCan't test though if it works.\n. I forgot the most important change. There's a mismatch between winsock.h and winsock2.h. It just compiles fine if you change winsock.h in winsock2.h in mysql.h.\nMaybe it makes sense to grab the mysql lib and includes which are used by XBMC rather than having different ones in cmyth source.\n. for your convenience see here: https://github.com/wsoltys/xbmc/commit/ea80a3250f745fb002306be32f494b7da4d1a4b0 \n. it builds fine on win32. you might want to remove one cmyth_get_cutlist from libcmyth.def since its twice in.\n. As bas-t stated this is already in master and if it doesn't harm there it won't harm in Eden I would assume :)\n. sounds good.\n. mmh guess I'll need a lot more time to get that thing done as I didn't looked deep enough into imagelib ;)\nI'm not sure what to do with the ImageInfo stuff introduced by ImageLib. Currently I would assume to use that inside the factory as other libs might expose this infos too which means to alter jpegio to fill this struct.\n. but what about all the other stuff like alpha and exif which is also stored in this ImageInfo struct? It seems to me that this is all left out of the jpegio class.\n. closing this for now but really far with the new version. Will open up a new pr for it after frodo.\n. Compiles fine on win but throws now a compiler warning on \n3>c:\\development\\xbmc\\xbmc\\util.cpp(1126): warning C4244: '=' : conversion from '__int64' to '_off_t', possible loss of data\n3>c:\\development\\xbmc\\xbmc\\util.cpp(1153): warning C4244: '=' : conversion from '__int64' to '_off_t', possible loss of data\n. I don't think that I like that. As I can see from the imon thread this is a bug in the imon firmware and I don't want to fix their shit in our code.\nSince I can't test it I would appreciate a real and more general fix if possible.\n. btw for your next pr please make sure that you don't have the merge branch thingies in. Try something like git pull --rebase upstream master to get your changes on top without the merge.\n. To get you into thinking, is there a possibility to detect the firmware in question? Maybe via a key in the registry or a certain dll which is there?\n. I like the idea with the gui settings but you mixed too many different changes into one commit which makes it difficult to review. One commit for the gui setting and one commit for the cosmetic changes please.\nI don't know what the asm fix has to do with the joystick class nor this pr in general.\n. @jmarshallnz what do you think? can this go in?\n. Just two are fine :)\n. I didn't checked all commits and I'm also not near a dev rig for testing so I can just give some pointers\n- reshuffling precompiler defines aren't needed. They work in every order :)\n- the OpenGL target is abandoned and not further supported. We will remove it sooner or later\n- it could be that we decided for some targets (debug?)/projects to not use sse but I can't remember. so maybe those fixes are correct but need validation\n- default values aren't in the project files unless you change it once and back again. Therefore it makes no difference if they are there or not\n@chadoe , @Montellese : what commits are of use for us?\n. okay. then please squash that to one commit and I'll commit that to master.\n. is there a special version of taglib needed? neither 1.7 nor 1.7.2 seem to include taglib/tiostream.h, taglib/modfile.h, taglib/s3mfile.h nor taglib/xmfile.h.\nFirst additions can be found here: https://github.com/wsoltys/xbmc/commits/taglib\ndon't forget the right directory prefix for the includes!\n. okay looks like you're using 1.8 beta. is this even available on linux?\n. I've pushed some minor fixes (not sure if you wanna use them 1:1) and copied taglib 1.8beta static lib to our mirrors.\nhttps://github.com/wsoltys/xbmc/commits/taglib\n. taglib 1.8beta for win is already on our mirrors (see my comments above). Just add the following commit: https://github.com/wsoltys/xbmc/commit/465d9174994cc4b6617d94283872c905c14599fa\nI forgot to add the download scripts.\n. added taglib-1.8-win32.7z to our mirrors.\n. fine on windows.\nHere're the script changes to download taglib 1.8 final: https://github.com/wsoltys/xbmc/commit/f82dbc928c23dd0fde8580e3763dd9e08bf6c171\n. windows fix is here: https://github.com/wsoltys/xbmc/commits/karaoke\n. how should we handle CPU's which can throttle their cores individually? Not sure if this makes any sense currently nor is it really important for XBMC ;)\nIgnore my comment above I don't think we need that at all.\n. a6ca119240326c9a8a27c5f1baf654f475703dd2 does the trick\n. you're right that my implementation isn't doing what it should but I dunno if yours does it. m_ScreenSaverEnabled will always be false as we set it at the beginning regardless what the previous state was. \nin both our implementation we enable the system screensaver even though it was disabled before we started XBMC.\nI guess we both have to think a bit longer :)\n. Thats a nice solution. Could you please squash it to one commit?\n. as long as nobody follows your branch you can easily force the squashed result.\n. you shouldn't force a push on branches you work together with different people. for example we would never force a push to the XBMC master repository.\n. @opdenkamp: mind having a look?\n. Did this even compile for you? ;)\nBuilds fine on win32 with the following changes: https://github.com/wsoltys/xbmc/commit/47a2fdf403ed3687563756071899adbc25ab4e14\n. signeoff for win32 with this change: https://github.com/wsoltys/xbmc/commit/db766a09b5c52a37dfc319a484a30a89552e7cf2\n. Looks fine even though its not only [win32] :)\nIf unsure with the unary, keep it like it is (this was the reason I didn't changed it with my last cosmetics)\n. Do you still need help on the win side or did you receive the vs project files already? \n. You can find the fixes for the windows platform here: https://github.com/wsoltys/xbmc/commits/upgrade-platinum\n. Seems to work fine after the above mentioned changes.\n. It hangs for me as well when running a video in window mode and close it via the cross. setting the handle to null fixes this indeed. nice find.\n. Not sure why the WM_CREATE is there at the first place and maybe it should go in the switch case as well. Can't say anything about DESTROY/CLOSE but guess one wanted to capture all messages and react on it. I assume that the code can handle double calls though I'm unsure with m_pEventFunc.\nFor setting the handle to null a second time shouldn't matter, or should it?\n. More info. thats what I get without the fix:\nCSoftAEStream::CSoftAEStream - Converting from UNKNOWN to AE_FMT_FLOAT\nAudioDecoder::GetReplayGain - Final Replaygain applied: 1.000000, Track/Album Gain 89.000000, Peak 0.000000\nCAEUtil::GuessChLayout - This method should really never be used, please fix the code that called this\nFirst-chance exception at 0x01ef0cc2 in XBMC.exe: 0xC0000094: Integer division by zero.\n. better fixed with bb898485241e0a91c0041a2e07ed365d9a508e9c\n. libsquish for the XBMC main project was already build with SSE2 optims and linked statically to XBMC so we have that since quite some time. Therefore I enabled it yesterday for the AE change also for the XBMC main project. We could wait a few days and see if it causes any more trouble (user reports).\nIf all is okay I would like to use that pr to clean up the project settings because we have those settings already for some projects but not for all.\nQuestion for me is if a SSE2 enabled XBMC binary would at all launch on non SSE machines and if we could log there that we only run on SSE2 enabled cpu's? We have already a dependency to direct9 and some capabilities there and won't run on older HW. Dunno what's older though :)\n. @theuni unfortunately I don't know it either. Since I can't tell if we in any way benefit from SSE2 over SSE I'm also okay with using only SSE but do it consequently for all projects (although I don't know how many user with Pentium 3 or AMD processors < Athlon 64 we have).\n. just found that\nWindows:\nThe SSE instruction set provides support only for single-precision floating-point vectors. \nDirectXMath must make use of the SSE2 instruction set to provide integer vector support.\nNot sure if XBMC gain anything from that?\n. I switched back to SSE because I noticed that still some users have a non SSE2 CPU. During that task I cleaned at least the project files a little so thanks Karlson2k for the heads up. Still not all your clean ups are in yet.\n. I like the idea in general but I dunno why\n1) we need so much code and so many new functions\n2) charsetconverter isn't used\nFor 2) needs to be taken care of as we use it everywhere and if there's something wrong for windows it should be fixed there. Also please replace WIN32 by TARGET_WINDOWS.\nAt last I dunno if Linux/OSX boys are willing to add extra code for existing functions on their platform even though we might get rid of some ifdefs ;)\n. Apparently a wchar version was needed: c5f50fb41e4a8353a1817ffcd127a1706b838ccf\n. @chadoe can you tell us why the UTF8->wchar conversion was needed?\n. @jimfcarroll I've added some minidumps to thread.cpp as CrystalP did: https://github.com/wsoltys/xbmc/commit/fe6cc743c59139f167ee4ee4c33522ac270a04fa (somehow I can't see that yet in the pr). Do I still need the own catch routine there?\n. Thanks for looking into it. I forced a division by zero in a thread to test it but it was only caught in the default handler (...). After calling win32_exception::install_handler(); in CThread:action (see 1b436e6) it worked at least with the two catch's I've added.\n. MP3Codec.cpp comment l60 and play a mp3 file :)\n. note that for debugging the catch's in xbapplicationex are ifdef out that the ide catches the exception.\n. okay, squashed and rebased with jcarrolls changes.\n. The only fix I see is 607d320 and thanks for that. But for what are the other changes needed or do they fix?\n. _sigh I'm not in the mood to argue here. Don't get me wrong I appreciate any help for the windows platform but couldn't you fix bugs mentioned on trac where users would benefit?\nConcerning this pr I would be fine if you could replace CStdString/W by std:string (where appropriate) since you already touched it. \nJust removing a workaround (c9f82ae) because it works for you isn't enough verifying for me. It was there for a reason and maybe one should speak with the original author.\n. I'm fine with CStdString for the MAX_PATH case rather than playing new/delete games there.\n. Ah, mixed MAX_PATH with the 32k. You know what I wanted to express :)\n. @jmarshallnz @davilla @cptspiff any objections comments? Would like to commit that as bugfix ;)\n. Probably add it to TMSG_EXECUTE_OS in the app messenger. Its used to start emulators and such. \n. While I think about it I assume that the shell call won't necessarily wait for the program to finish (depending on the second parameter). So there might be cases where we AESuspend -> start emulator -> AEresume even though the emulator is still running.\n. @Memphiz , @vdrfan anyone? ;)\n. changes are in, thanks.\n. @otzy007: Great, thanks. Did you had a chance to test it if it still works?\n@Memphiz: Sure that you won't need the headers as well since they are also included for TARGET_DARWIN in ioSupport.cpp. But if it already compile for you they were probably not needed at all :)\n. Nice find! Since this is windows only can't we put this in XBMC_PC.cpp to avoid another ifdef?\nIs the timeGetTime() really needed?\n. and please don't forget timeEndPeriod at the end :) Fits nicely in XBMC_PC.cpp\n. Still at the devcon so can't fix if there are issues but I trust you :)\n. compiles and works fine on windows (tested with the vnsi plugin and my vdr). I don't have nav sounds with directsound but other audio is fine (mp3, live tv, etc). Maybe @DDDamian could have a look at it. Otherwise its fine and I'm okay with the merge.\n. Another thing I noticed is that the description for settings->server is the same like settings->live tv. I use German but since its English I assume it uses the default values.\n. you don't need the hw for testing the navsounds for this branch :)\n. The file win32/stdbool.h is added but I can't find where its used right now. Maybe a leftover?\n. @DDDamian current master is also missing the nav sounds with direct sound so not related to pvr.\n. The file read method in jpegio.cpp got obsolete with the implementation of the Image Factory. But IF uses the same code just at a different place (somewhere in textures AFAIR)\nAm 08.04.2013 um 09:52 schrieb jmarshallnz notifications@github.com:\n\n@Karlson2k: Compare the read method in JpegIO.cpp with this - perhaps the one in JpegIO.cpp could be moved to FileUtils.cpp and reused here? It's basically the same idea.\n\u2014\nReply to this email directly or view it on GitHub.\n. @jmarshallnz: yes. I left that in because there were some other unused methods in afair and I thought one want to reuse it one time. But they could be misleading indeed. \n. Sorry for not responding but I just noticed that gmail sorted all github mails as spam since end of September and I didn't noticed it :)\n. mmh, might be something for Windows as well.\n. Nice. @FernetMenta I would love to see this in the vnsi client. Then https://github.com/xbmc/xbmc/pull/792 would make more sense. Though this is something for after frodo.\n. Do we pipe down movie sound to give the imagination that it can be boosted up? ;)\nCompared to the gui sounds it seems to have lost volume or its just imagination I dunno. 10db sounds like previous level but higher settings will sound distorted (clamped).\n. If I add a non existing path (like c:\\test2 to my video files) with this pr I can't delete it anymore. I assume there is somewhere an url compare which needs a CompareWithoutSlashAtEnd but I couldn't find it yet.\n. The problems seems to be in GUIDialogContextMenu.cpp l657:\nif (!testShare.strPath.Equals(item->GetPath()))\n\nReplace that by if(!URIUtils::CompareWithoutSlashAtEnd(testShare.strPath, item->GetPath()); and it should work.\n. Its possible. See \"XBMC for Windows.nsi\" line 107+108\n. +1\n. Nice work! Didn't tested it but looks fine.The vnsi addon worked just fine for me by compiling it, copy xbmc-pvr-addons\\addons\\pvr.vdr.vnsi\\addon* to the destination and delete exp/lib/pdb. So the way you've done it should work fine. \nI would include the demo addon as well.\n. agreed. Lets install them all. \n. Logfile for the abort: http://www.xbmclogs.com/show.php?id=24354\n. Not sure if this is enough. CAddonInstaller and CAddonMgr have its own critsection and the update job runs in the CRepositoryUpdateJob context. Another point is that CRepositoryUpdateJob works with the database which at this point is not existing for that new profile. It'll create when the profile is loaded, the update jobs runs when the login screen is shown.\n. I wrapped m_cpluff in AddonManager with the critsect. Now XBMC won't abort any more but as stated above the database accesses still fail http://www.xbmclogs.com/show.php?id=24660.\nIMO we shouldn't run the update job when showing the login screen as at this point we dunno which profile will be chosen and therefore for which profile the job should run. Especially as we run the job again when we have logged into the new profile.\nWhat I don't know is if the way I have implemented it here is the right way and on the right spot.\n. I also thought about the fallback but yet have no idea on how to do that in the factory. when an image can't be loaded we get the error in textures.cpp on load or decode and thus would have to recreate a new object there with another back end (cximage in that case) which makes the factory useless. Any ideas are welcome.\n. @jmarshallnz: I've made the changes you've suggested and added some doxy. I have to admit that I copy & paste most of the image stuff so a review of the IImage documentation would be appreciated :)\n. Tested it on ubuntu 11.04 as well. Still needs some OSX and embedded love.\n. Merged xcode project changes. Would be nice if someone on OSX can do a second tests as it crashes for Memphiz during Thumbnail creation whereas it worked fine for me on Windows and Linux.\nHere's a stack trace from him http://pastebin.com/viAvG5iW. Dunno what happens there as I mimic the old code of loading/unloading imagelib (which is handled by dynamicdll).\n. @jmarshallnz: would you mind testing it on OSX?\n. If there're no further objections I would squash it down to one commit and merge it.\n@Memphiz: might ask you to check the ios/osx project files afterwards as I had to resolve conflicts.\n. If we keep the WM_SYSCOMMAND we won't let sss kick in if we're not playing videos (at least it happens to me when I tested it also it should work with the syscommand).\n. mmh, I would expect the sss to kick in if xbmc is windowed but doesn't play anything. But I guess we need to sort that out later and define when sss should kick in and when not (fullscreen window or fullscreen, windowed, paused, etc). I would say it would be the best to concentrate on one way (setthread... or win events) to not loose control. But I'm open for ideas.\n. Agreed and pr updated.\n. @Memphiz: it was 0.9.12 and its still on our mirror. We can try a newer version though. As Montellese said it might make sense to try it again :)\n@amet: we just try to keep the version in sync for all platforms. But there're still exception from this rule ... :)\n. Nah. IIRC the problem was that I tried to compile libmicrohttpd which made the problem due to all the dependencies. So I looked for a precompiled binary and only found 0.9.17. But I didn't tried it yet.\n. fine by me\n. fixed and rebased.\n. The problem I noticed is that we need the .pdb file to get the method name, the filename and the line number. Without .pdb it looks like:\n```\nThread 6324 (process 5232)\n0\n1\n2 RtlNtStatusToDosError\n3 RtlInitializeCriticalSection\n4 RtlFormatCurrentUserKeyPath\n5 RtlImageNtHeader\n6 RtlImageNtHeader\n7 RtlImageNtHeader\n8 RtlImageNtHeader\n9 RtlImageNtHeader\n10 RtlInitUnicodeString\n11 RtlInitUnicodeString\n12 RtlInitUnicodeString\n13 RtlInitUnicodeString\n14 RtlInitUnicodeString\n15 RtlAllocateHeap\n16\n17\n18\n19\n20\n21 BaseThreadInitThunk\n22 RtlInitializeExceptionChain\n23 RtlInitializeExceptionChain\n```\nSo question is if we ask the user to download it and reproduce the issue again or if we ship the .pdb with the nightlies at least.\n. They are available yes but we would need to ask the user to download it. Current .pdb's are 72MB so yes they'd double the installer size.\n. yes. During debug vs will do that for us (see XBApplicationEx.cpp).\n. removed the goto.\n. It is weird but it introduces only code changes to the directsound sink. for other solution like I described above we need to alter also shared code (which should be done one day).\nSince we need the default device on enumeration we can't just open it and with the sorting we have the default interface at first :)\nCurrently this is only called during startup so it won't harm much.\n. @Memphiz : fine. its exactly what this pr is about. then I think its fine to merge as we just doing the same :)\n. When XBMC starts it gets an own session in the audio mixer which is default to full volume (1.0). This is what we set here as well (so no change).\nThe windows master volume is not affected as in Vista and up every applications has its own session.\n. Wait. What I said about the own session is true. But windows will also remember which volume was set for xbmc and applies it again when XBMC is started again. Which means with this pr we would reset it than to full volume ... grr.\nSeems to be we should implement in AE reading the volume of the sink on start to set m_volume right.\n. You can alter the master volume with the old directsound method we used in Eden. Unfortunately you have to set the volume in hundreds of decibel something. But only altering the audio session of the current process (XBMC) is the way it should be used on windows nowadays.\nNote that we currently in AE only set the internal volume of XBMC and won't affect the external volume at all. It looks like that AESinkAUDIOTRACK is the only sink which supports setting the volume.\n. So how do we here proceed further? This change only affects the directsound sink and instead of the softae internal volume it will change the volume of the audio stream. If we are worried of not using the previous volume we could extend this by: https://github.com/wsoltys/xbmc/commit/d8b0dd32b0cf1d8a48fae4f394f9b410860a0c9f\nIf supported it get the volume from the sink and if not uses the AE internal volume.\n. Nice. Did you build your own import lib or was it already included? In the last package only a mingw import lib .a was available which didn't played nicely with XBMC. \n. libmicro has a lot of dependencies which need to be pulled in our mingw env. Beside that I only had bad experiences with compiling it by myself.\n. No way for unified deps on win32 yet. We use precompiled libs where possible. \n. So, many opinions and no progress. We have so many different library versions across the platforms and even different problems with the same library version. So my opinion is to go for the version with fits best if we can't have matching versions.\nI'm fine with this going in.\n. Count the parameters. As it looks like unsigned int autoCloseMs is supposed to be the last parameter but is set on the place of bool hiddeninput which produces the performance warning. I would say we miss a parameter there :)\n. Compiles fine here. Error is on your end. Please don't spam hundreds dev for that and use the forum to get help.\n. Looks good at a first glance.\n. Thanks for the contribution. I currently rewrite the build stuff for jenkins and will use that for the user buildsetup too. You're invited to look at it afterwards although I don't think the error handling like this is absolutely needed :)\n. Nice catch. The \"if(m_thumbnailbuffer)\" isn't needed as its done in FreeMemory. Please remove that and put the opening brace in the next line and this can be merged.\n. Its @wsoltys at github ;)\nI also use the avr volume rather than the system volume but if it could be done, why not as it was requested. If the sink supports volume we need to get it back from sink to indicate outside volume changes to xbmc.\nThe other volume pr needs a revision as the ds sink returns a linear scaled scale but as I understand AE it needs to be different.\n. well it seems to have worked for daniela's build and since AE already delivers those formats to ds why not trying to support it. But still I live an learn here :)\n. @DDDamian - I didn't read the whole thread but what I got is that it works good when exclusive mode is checked. But I'll rephase my question: \nDoes this change make the DirectSound sink:\n1) working better in some circumstances than before?\n2) working worse than the current implementation?\n3) no change?\nSo if you opt for 1) I'm still fine with implementing it as currently it doesn't work at all when ae is sending hd audio to the ds sink.\n. @DDDamian - please do so. Thanks. \n. works for me too.\n. fine by me.\n. Even when this is very windows like we support that on other places too. So you decide on your own that windows isn't supported anymore?\n. I won't argue with you. I was the opinion we supported that but don't have the code handy ATM. I won't comment on github anymore if not asked directly as my opinion seems not to compute. \n. @ulion: go ahead. I was afraid that we won't handle it internally but I think XFILE::CDirectory::Exists() can handle it. I'm a little thin skinned when it comes to windows as its not much cared of. \n. I've added m_AppActive to the lowfps bool which lowers resources needed when running minimized.\n. @theuni: thanks, will look into it to unify it across platforms. but this shouldn't hinder this bugfix to go in first.\n@MartijnKaijser: one step after another. if its a one time peak and go down when maximized than its no real problem. For the other issue since python is involved you should extend the ticket with the test case and add @jimfcarroll as well.\n. Dudes its really difficult to keep the fun for what we're doing here. I'm no professional dev doing this in rl for years so just give me the right text for that commit and I'll change it.\nThis here is quite simple you allocate textures and if you won't deallocate your eating up memory. I can't tell why we still store them in m_unusedTextures but that wasn't the point of this pr. Leaving the render path too early just won't free the textures.\nProbably one can have a look why the are allocated when minimized but thats more than a bugfix. Feel free to do so.\n. @theuni : Using SetRenderGUI() seems to work fine when we still process CWinEvents::MessagePump(); which you currently won't do.\n. closing in favor of #2546\n. removed the appActive line in XBMCApp and rebased to one commit.\n. @theuni : fine with it or should I ifdef the pump message?\n. So can we then use this for the platforms != iOS? This approach is at least for windows better than before. \n@theuni , @jmarshallnz ?\n. Thought you still might get issues due to threading? Can you pr your changes or post a patch that @theuni can have a look?\n. Can this be merged? It seems to work on the major platforms and iOS could be added later when it's ready?\n. could you please separate the changes to lib/ffmpeg and the rest to different commits? would make it easier to review the changes to the XBMC core.\n. nice work on the ffmpeg bump. I'm a little unsure about all the batch file changes. most will get lost when switching to jenkins since I already rewrite them but probably I can get some nicer ways to handle it from your scripts. \nI have mixed feeling about the automatic generation of the header includes. For the two times in a year (if ever) we bump ffmpeg I'm able to change the files by hand and all the error prone changes wouldn't be needed.\n. @FlyingRat: please bring back the copy of the pdb file as we need it that jenkins can fetch that too. Then I'm fine with it.\n. Pull it in. \n. Hope so ;)\nAm 11.04.2013 um 21:00 schrieb Martijn Kaijser notifications@github.com:\n\n@wsoltys\nYou can adjust the Jenkins builder after merging because it fails now?\n\u2014\nReply to this email directly or view it on GitHub.\n. just a short update after trying to build this revision.\n1) the buildsetup script is still missing some things which are currently in like setting the shell -> I can fix that later\n2) the buildsetup script won't work and throws a syntax error on Martijn's and my setup -> I was able to fix that somehow\n3) the ffmpeg libs won't build at all. the make breaks with \n\ncommon.mak:138: *** missing separator.  Stop.\nThis message comes already before configure starts but configure runs fine so the error might be somewhere else but I couldn't figure it out yet.\nSo I wouldn't stop the merge as we don't have a working buildbot anyways. But please help to figure out where the build problem with ffmpeg is.\n. As Martijn said we can't set autoctrl to false. This is a no go in our multi platform env so we have to find another solution. It worked before so where is the difference?\nHow did the build setup error slipped thru? As said this happens on  Martijn's and my setup. \nAm 11.04.2013 um 23:29 schrieb FlyingRat notifications@github.com:\n\ncommon.mak:138: *** missing separator. Stop.\nI got the same error some time ago and found this error report: https://ffmpeg.org/trac/ffmpeg/ticket/1209. I think this made it to work again: git config --global core.autocrlf false\n\u2014\nReply to this email directly or view it on GitHub.\n. @FlyingRat: short update. ffmpeg compiles with gnu make 3.82 (already committed to master). unfortunately libdvdnav and libdvdread won't compile anymore. \nWhereas gnu make 3.81 seems to work fine with VPATH gnu make 3.82 just won't find the source files anymore. if I adapt the src paths in the Makefile directly libdvdread will compile but libdvdnav won't due to a missing rule.\nDoes any Makefile expert has an idea if this is a bug in gnu make or if there's something wrong with the libdvd makefiles?\n. v3.81 was our current make until today when I update make to 3.82. and again I try to build ffmpeg with autoctrl=true as like I already explained we can't use false.\n. @FlyingRat : the autoctrl thing was a team decision that helps us working in a mixed environment (win/Linux). Switching would lead to huge problems which was the trigger to switch to autoctrl=true on windows systems.\n. The patch is wrong. All you need is to change SECTOR_COUNT to 10.\nThough a better way would be to determine before if we have a drive connected via usb any only reduce it than. But I dunno if this makes any great difference.\nDo you mind to try it out with SECTOR_COUNT?\n. Wait. I just noticed that even setting SECTOR_COUNT to 10 the buffer is big enough to read 30 sectors. So your best bet is to set iSectorCount directly to 10. The only issue I have with that is that the dvd drive spins very fast and loud compared to when reading 52 sectors at once.\n. We could also try the following:\n- make iSectorCount a member variable  m_iSectorCount\n- set it to 52 in the constructor or when opening the drive\n- set it to 10 in the if ( iret != DRIVER_OP_SUCCESS) block\n\nbtw, nice find on the sector count ;)\n. almost :)\nJust use the m_iSectorCount and you don't need the iSectorCount at all. \nDo me one favor and try to just set the sc lower but don't do the second deviceiocontrol. I don't think the read process will stop but I don't know for sure.\n. You are right. I need to rethink it a little more. I'm off for today so take your time :)\n. Nice. IMO big_sector can be dropped and m_isector can be used. \n. Yeah you're probably right. Squash it down to one commit and I'll be fine (you can force push it to your branch and it'll update this pr).\n@cptspiff ?\n. fine by me. I wonder if there is any reason we have those IsVistaOrHigher()/IsWindows8OrHigher() if it just calls one other method?\n. Probably to not include the Windows only values in all ports. \nAm 10.04.2013 um 08:32 schrieb a11599 notifications@github.com:\n\nI guess it is for convenience (although it really looks a bit over-engineered).\n\u2014\nReply to this email directly or view it on GitHub.\n. works fine on win32. These changes are needed for the windows project file:\nhttps://github.com/wsoltys/xbmc/commit/6a6d42fb1258720db32a0d9fe0e6595753c893ce\n. compiles and seems to work fine on win32 but I didn't do any extensive testing.\nI'm fine with it.\n. This means for our windows port - even though it is wrong in its current form - all converter methods would be in software and AE would suck more processor power.\nI really dunno if we still should support sse1 only platforms in windows anymore.\n. No. All project files are still set to sse1. We set them once to sse2 and got complains from users with only sse1 CPUs ;)\nBut I think one day we'll have to move forward. \n\nAm 15.04.2013 um 22:31 schrieb jmarshallnz notifications@github.com:\n\n@wsoltys is SSE2 not defined on win32?\n\u2014\nReply to this email directly or view it on GitHub.\n. @jose123456: I know, see aeutil.h where we already check it for sse. You can ofc extend it to support sse2 too. The point is not the detection on compile time but how we should build our installer and we should really move on with it. \n\nAm 15.04.2013 um 23:57 schrieb Jose123456 notifications@github.com:\n\nApparently the way to detect the level of SSE support on VC++ is to examine the _M_IX86_FP macro:\nhttp://msdn.microsoft.com/en-us/library/b0084kay(v=vs.80).aspx\nI can add this logic to the patch, if you like, but I'm wondering where is \"SSE\" defined for Windows platforms right now?\nI understand the desire to move on, but what if there's a new x86-based embedded platform in the future that supports SSE1 and not SSE2?\nAlso, I would never have even tried XBMC if I didn't have an old Shuttle SFF lying around doing nothing that I could play with. Requiring modern hardware will reduce the tinkering potential.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks @jose123456 but this is more a decision rather than a fix. Do we want the windows installer to depend on sse1 or 2 and how many user would be loose due to that? You don't have to worry if you don't use windows or can compile on your own. ;)\n\nAm 16.04.2013 um 16:45 schrieb Jose123456 notifications@github.com:\n\n@wsoltys I did extend AEUtil.h to detect SSE2. I'm motivated to keep XBMC working on my old SFF so I'm willing to help with your installer if you like and if I'm able.\n\u2014\nReply to this email directly or view it on GitHub.\n. @Memphiz: Works fine. I only compiled the vs stuff as you didn't touched any mingw source and that worked fine.\n. I wasn't either able to compile it for windows. I got a lot errors because somehow vs believes bind is a template. I couldn't figure out why this happens now and not before. \nEven though visual studio was set to english the error messages appear in german, weird. Anyhow if anyone can read it: http://pastebin.com/7yNjnb5g\n. Unfortunately it doesn't help.\n. still get the bind error. could be a std:: include from somewhere else.\n. yeah noticed that after the comment :)\nbut ::bind seems to do the trick as well.\n. Webinterface works fine. Music via airplay also works but streaming from the youtube app to XBMC fails with lots of\n\nAIRPLAY Server: New connection detected\nAIRPLAY Server: Accept of new connection failed: 0\nafaik it worked fine before.\n. and it seems not to end even though I closed the youtupe app it still hammers the log endless.\n. your are right. seems not related. it won't work on master either but I get a different error:\nAIRPLAY Server: New connection detected\nAIRPLAY Server: New connection added\nAIRPLAY: got request /server-info\n. definitely breaks airplay on windows (win8 64bit). worked fine on master after a few tries. \n. @simonvetter : don't forget to fix the bind -> ::bind as well.\nI don't have much time for testing today but I found the following. The error returned by the accept is:\nWSAEFAULT 10014 \nBad address.\nThe system detected an invalid pointer address in attempting to use a pointer argument of a call. This error occurs if an application passes an invalid pointer value, or if the length of the buffer is too small. For instance, if the length of an argument, which is a sockaddr structure, is smaller than the sizeof(sockaddr).\nwhen xbmc is started netstat -a doesn't show any ipv6 addresses but when trying to connect via the youtube app I got the following:\nTCP    [fd00::2028:28cf:dcc8:e661]:36666  Winfrieds-iPad:62708   HERGESTELLT         \n TCP    [fd00::2028:28cf:dcc8:e661]:36667  Winfrieds-iPad:62714   HERGESTELLT         \n TCP    [fd00::f524:3ddc:96f6:9e09]:36666  Winfrieds-iPad:62709   SCHLIESSEN_WARTEN   \n TCP    [fd00::f524:3ddc:96f6:9e09]:36667  Winfrieds-iPad:62715   SCHLIESSEN_WARTEN\nSo it looks like that it tries to connect via ipv6 which win8 supports but my network isn't ipv6 ready.\n. ",
    "jhsrennie": "It builds and runs fine with VS2010. I haven't looked in any more detail than this.\n. It builds fine with VS2008. Is there anything specific you'd like me to test?\nJR\n. Builds and runs fine with VS2008\n. Builds fine with Visual Studio 2010.\nThe XBMC.exe produced fails to play videos with an error:\nERROR: Win32DllLoader::Load: Unable to load special://xbmcbin/system/players/dvdplayer/avutil-50.dll (126)\nHowever I note the trunk build does this as well.\n. Thanks, I've put in a #if defined(GNUC) to bracket the calls to __cxa_demangle. Could someone try compiling in Linux and OSX to check the demangling works. You should find a debug log contains entries like:\nDEBUG: Thread CRssReader start, auto delete: 0\nDEBUG: Thread CRssReader 2388 terminating\n. Is everyone happy for me to push this? It builds and works fine on Windows and Ubuntu 10.10. I'm not in a position to test on OSX, but the only problem is likely to be the name demangling.\n. The demangling is cosmetic. If there's a suitable #ifndef that can be used with clang the only side effect would be that the thread names may look a bit odd.\n. Now I think about it, the code should compile and work fine with clang because neither the MSC nor the GNU constants will be defined so the abi::__cxa_demangle code won't be compiled. Can someone try it with clang and make sure the thread names aren't hopelessly mangled e.g. contain non-printing characters.\n. Thanks all, when I get my multimedia keyboard back I'll finish the work.\n. Oh bugger, I clicked the wrong button on the github web site and I think it's merged it into the master :-(\nThis shouldn't have done any serious harm, but if you want to back it out please go ahead and I'll take my beating. The only problem is that the makefiles and VS project need the two extra files XBMC_keytable.cpp and XBMC_keytable.h adding otherwsie you'll get unresolved externals. Jesus, sorry guys.\n. I'd be happy to have my push rights removed. While I'm not the biggest fan of GIT, I have to admit that using a fork on github makes it very easy for others to review suggestions. It just means someone else would have to do the final pull.\nIn the mean time, could someone make the changes to the makefiles? I could update the VS2010 file but I'm out of my depth with the Linux/OSX makefiles.\n. Actually, I've just tested and it builds and works fine on Linux. Phew :-)\n. I would be interested to know of any problems with regional keyboards. The change in e1a7b46 was to a bit of code that converts scan codes to a VK_ value, and I'm not sure what effect this has on non-US/UK keyboards. In fact I'm not sure why the US layout was used, though experience suggests that very little in the XBMC code is done without a good reason!\n. @blinkseb: can you try the >< key with my mods and see if that does the same as backslash, i.e. toggles between windowed and fullscreen? On a UK keyboard the MapVirtualKeyEx Win23 function converts the scancode to VK_OEM_102 and I think on a French keyboard this is the key with >< on it. With my changes XBMC looks at the keysym.sym rather than the unicode value so it identifies the key rather than the character. Thanks, JR.\n. @jmarshall: does this address your concerns about the Mac arrow keys. I thought the simplest solution was to check if the unicode is zero in the key table, and if so ste the keysym.unicode to zero.\n. @blinkseb: is that an acceptable solution? If not, I will have to think about the algorithm for identifying the keypress. If use the keysym.sym if fails to detect the backslash, as you've found. I can use the keysym.unicode instead and that will detect the backslash press on your keyboard, but then the numpad * / etc won't work properly (life is never easy :-). I suspect German keyboards will show exactly the same problem.\n. Is everyone happy for me to merge this into the trunk?\n. Is everyone happy for me to merge this into the trunk?\n. Fair enough.\nHow about this approach? This tries first to match both the sym and unicode. That means it can distinguish between the numpad keys and the main keyboard, and most keypresses will be matched at this stage. If this fails, try matching just the unicode. This will find regional variations like the backslash on a French keyboard. If this fails try matching just the sym to find the remaining weird keys.\n. I've tested on Windows and Ubuntu and all seems fine.\nCould one of the Mac users give me an ACK?\n. I've tested on Windows and Ubuntu and all seems fine.\nCould one of the Mac users give me an ACK?\n. @amet: well spotted, thanks. It's because OSX is returning a unicode value of 0x7f for the backspace key. I think backspace should return a unicode value of zero since it's a non-printing key, and I've done this in f645201. Please will you try this and see if it fixes the backspace problem.\nI'm not sure what's happening with the arrows, but lets fix the backspace first and see if the arrows still give a problem.\n. XBMC (i.e. v10.1) sets the unicode to 0 for non-printing characters and non-zero for printing characters. CApplication::OnKey looks at the unicode and if it's zero it retrieves an action based on the vkey, otherwise it prints the character. I overlooked this in my changes, but on Win/Linux it made no difference because backspace has a unicode of 0x08 and this was being used to do a backspace action anyway. The problem on OSX arose because a unicode of 0x7f and I'm not sure what this does, but it isn't a backspace!\nSo f645201 just makes my changes do what v10.1 already does.\n. Hooray :-)\nIs everyone happy for me to push this now?\n. Hooray :-)\nIs everyone happy for me to push this now?\n. Also, after I've merged the changes should I delete the temporary branch I used to pull the changes from my fork? Github recommends doing something like:\ngit checkout -b jhsrennie-branchname master\ngit pull https://jhsrennie@github.com/jhsrennie/xbmc.git jr-keyboard\ngit checkout master\ngit merge jhsrennie-branchname\nbut doesn't say whether you'd normall delete jhsrennie-branchname aftwerwards.\n. Thanks all, now pushed!\n. Taking the specific example of backslash, the problem is nothing to do with using ascii mapping or any other form of mapping. It's because since Dharma the key handling included modifiers, so for example backslash and ctrl-backslash require different entries in keyboard.xml. On French, Swedish (and probably a lot of other European keyboards) backslash is reached by pressing AltGr, and AltGr is basically the same as pressing the ctrl and alt keys. So on these keyboards it's impossible to generate a  keypress. The best you can do is generate . This also true in Dharma, and in fact with these keyboards backslash doesn't work in Dharma or v10.1 either. There's no way out of this apart from abandoning the use of modifiers in key mappings, or adding special cases to ignore modifiers for certain keys like backslash.\nOn a more general point, and to clarify what I've done, the way XBMC now works is:\n1. try to match both the unicode and the key sym - this matches most keys and allows numpad keys to be mapped differently from the main keyboard, which isn't the case in Dharma.\n2. if 1 fails, try to match on just the unicode - this is where backslash gets mapped, and it ensures backslash works even though it moves around on different keyboards\n3. if 1 and 2 fail try to match on just the sym - this catches cases like arrow keys on the Mac where even though it's a non-printing key the unicode value is set.\n4. last resort - check for multimedia keys on Linux and the left control etc keys (I plan to move the Linux specific stuff into CWinEventsSDL).\nKey handling is inherently difficult due to the different platforms being supported. But I think that the changes I have made allow everything that Dharma does and some extra features not in Dharma, and they greatly simplify the key handling code. Well, they have at least moved all the special case handling into a single key handling table.\n. Ah, github has eaten my angle bracket characters, presumable thinking they're HTML tags. The line:\n\nSo on these keyboards it's impossible to generate a keypress. The best you can do is generate . \n\nshould be:\n\nSo on these keyboards it's impossible to generate a keypress {backslash}. The best you can do is generate {backslash mod=\"ctrl,alt\"}.\n\nwhere the { and } should be replaced with the angle brackets.\n. e11c5a0 modifies the Win32 handling of the AltGr key modifier to match SDL. On French, Swedish, etc keyboards this now means no mod=\"ctrl,alt\" mapping is required for characters entered using AltGr.\n. If no-one objects I'll push these changes today. I'm not sure we've arrived at the best solution for handling the AltGr key in Windows, but it works and is at least better than Dharma.\n. @blinkseb: ah, yes, sorry, you did mention this before but I got hung up on fixing the backslash and forgot about it. It's happening because I added entries to the keymap to match the shifted number keys on a US keyboard. All I have to do is remove these, and they're unnecessary anyway, and the French keyboard should now work. Please will you try it now and let me know if it works.\nNote however that there is a problem. When you press shift-& to get a '1', XBMC will detect shift-one. The problem is that you can't map an action to this because shift is used to jump around in lists. In fact the & key will do the same as pressing (unshifted) 1 on a US keyboard, but that's because there's no key name <ampersand> in XBMC. The problem comes with the keys like -/6. When you press this key without shift XBMC will see it as \"minus\" and will execute whatever action you mapped to <minus>. If you press the key with shift XBMC will see it as shift-six, but you can't map an action to <six mod=\"shift\">.\n. I've discovered an unrelated keyboard bug in CApplication::OnKey - in an edit control ascii characters > 127 are implicitly cast to int and the int value becomes 0xffffffxx, where xx is the original ascii code, instead of 0x000000xx. I will fix this, but this isn't related to my changes and I feel I'm getting mission creep with this pull request. Unless anyone objects I'll push this today then get on with the other things that have crept out of the woodwork.\n. Oops yes, I've changed the two functions to static.\nAt the moment the lookup code is specifically to address a problem in SDL i.e. it is failing to set the keysym.sym to anything useful for multimedia keys, so WinEventsSDL.cpp is the obvious place to put the code. If/when we move away from SDL no doubt we will run into other issues, and at that point I'll revisit the code to see what needs changing.\n. Ah I see. At the moment there isn't a WinEventsLinux.cpp/h. I can't create one as I don't know how to modify the Linux makefile. If someone wanted to add a WinEventsLinux and update the makefiles I can move the code there. But is it really worth it at this point?\n. I think your point is a good one, but this is a feature that has been asked for several times over the years in the forums. I'd be surprised if users mapping shift-keys was a problem. I think anyone capable of fighting with XML will be sophisticated enough to understand the consequences. Most people won't even notice anything has changed.\nAlso blinkseb was complaining, quite reasonably, that it's impossible to map actions to the number keys on his French keyboard because the number keys are shifted, so it's impossible to press 5 - you always get shift-5. My change would allow him to map <five mod=\"shift\">Number5</five>, which is impossible at present.\nFinally, we could start adding mappings for all the shifted characters like *, $, & etc - I suppose whether this is worthwhile is debatable.\nAnyhow, this is the last thing on my list of keyboard hackings, and I left it to last because I suspected it would be the most contentious. If the vote goes against me I'm happy to drop the idea. But even if we decide to keep shift as a special case for use with jumping, I still think my other changes and commenting are worth keeping as it makes it far easier to understand what's going on.\n. It would probably be tidier to only try and use the key for navigation if the window is a list. The navigation is handled in the CGUIBaseContainer class, but I can't see any elegant way to tell if the currently focussed window is derived from CGUIBaseContainer. Any suggestions for how to do this are welcome.\n. > Sadly I'm fairly certain that most remotes uses standard keys without modification\nThe remotes that emulate a keyboard (i.e. cheap and nasty MCE remotes) normally send the MCE keyboard shortcuts and these are mostly modified. See http://windows.microsoft.com/en-us/windows-vista/Windows-Media-Center-keyboard-shortcuts for a comprehensive list.\nNone of which helps me decide whether I should push this change or abandon it ...\n. Thanks kraqh3d, that was easier than I thought :-)\n. > If the intent here is to move all of the basic controls to modified versions, go ahead and pull the trigger\nIt would be tempting to take this as licence to push. However trying any radical overhaul of the key mappings will cause howls of protest from existing users. Assuming that the customer is always right, there is very little chance of the keyboard.xml changing significantly in Eden.\nBut I just don't see why it's a problem that an unmapped key is used for list navigation. Isn't this just what Windows does anyway? As for the modifiers, control changes the unicode (e.g. ctrl-A is 0x01 not 0x41) so the only modifiers likely to be used are shift and possibly alt. I could change the code so that only shifted (as at present) and unmodified keys are used for navigation, but there seems little gain.\n. Shall I go ahead and push my changes then?\n. > Would it be possible to do a lookup through the keymap to list all keys\nYes, this is straightforward. The map associates vkeys with action ids. You just need to iterate through the map and find all the vkeys that have been ORed with KEY_VKEY. CKeyboardStat has a method to convert a vkey to the friendly name of the key and CAction can return the friendly name of the action.\n. Should I push the changes or abandon them? I think the consensus seems to be to push the changes even if it's only a temporary measure.\n. OK, but I don't want to delete all the unmodified mappings from keyboard.xml because whoever does it will make themselves only marginally more popular than Bill Gates.\nI want to get on with my next project so I'll close this pull request for now. I'll keep the diff in case we want to revisit them.\n. http://forum.xbmc.org/showthread.php?t=102133\n. I think it's nice to have the option of using the multimedia keys, but it's not something I feel strongly about.\n. I'd say there are three potential targets for a patch like this:\n1. the minimum to add the new functionality without breaking anything\n2. everything in (1) plus make it cool e.g. slicker and new toys\n3. radical overhaul to make it work perfectly\nAt the moment the patch is at stage 1. If you leave all the mouse mappings at the default then the mouse works as it did before. Mapping left click to pause works but isn't slick because the info window pops up on mousemove and confuses matters (actually it also breaks the controls in the Info window). My aim for this patch is step 2 (or maybe 1.9 :-) i.e. make all the obvious mappings work in a nice way.\nThe action generated by a mouse input has the co-ordinates, so the code implementing the Pause action could look at the CAction it's being passed and get the co-ordinates from there. However it seems to me that this will rapidly lead to a coding mess.\nIf we were serious about this I would go for the same model used by Windows. Every window has a message handler. Messages that aren't handled by that window get bubbled up to it's parent and eventually to the <global> handler. So for example when you click the left button XBMC finds whatever window is under the click position and passes the CAction to that windows OnAction function. But we'd be talking about a massive rewrite to do this. I'm not sure I'd have time to do it and pay the mortgage :-)\nI could probably go some way towards this. At the moment the window id comes from g_windowManager.GetActiveWindow(). I can't remember if there is a g_windowManager.GetWindowFromPosition(x, y) function, but it would be easy to write, and would allow more sensible message routing.\nRe the context mapping: I'm not sure I've fully grasped what you mean. The \"in list\" would be addressed by routing the message to the list window as described above. Using a \"video playing\" would give problems if for example I'd momentarily switched away to view the weather (more likely with music playing). it seems to me that more snesible routing of the actions to windows would achieve basically the same result.\nAnyhow, since no-one is screaming I take it that it's worth me going ahead to polish up the patch.\n. > if you're in a list you want to soak up keyboard presses in order to jump through the list.\nBut a list is a window isn't it? If you click somewhere in a list the list should have first go at the action, and only if it ignores the action would the action be passed to the next window up. If you click on the OK button this is also a window and it would get a chance to process the message. This is how Windows works, and I assume X window managers work in a similar way.\n. OK, but I still haven't grasped what the problem with the current action prpocessing is. From your description it sounds as if the control does get first go at processing an action, so a mouse click on a control is handled by that control.\nCan you give me a concrete example of a situation where there is a problem i.e. a situation I can reproduce then follow through the debugger?\n. The mouse mapping seems to be working very well, so I'd like to merge the patch now. Is everyone happy for me to go ahead?\nI agree we need to sit down and think about the event handling, but I think this patch adds useful functionality that doesn't need to wait for a redesign of the event handling.\n. I'm aiming at something like http://trac.xbmc.org/ticket/11125\nActually one of the development team also suggested this, though I've now forgotten who it was.\n. Abandoned due to lack of interest\n. In AdvancedSettings.h the following lines are duplicated. Copy and paste error?\nbool m_canQuit;\nbool m_canWindowed;\nbool m_showSplash;\nbool m_useVirtualShares;\nbool m_alwaysOnTop;\nbool m_GLRectangleHack;\nbool m_AllowD3D9Ex;\nbool m_ForceD3D9Ex;\nbool m_AllowDynamicTextures;\nbool m_playlistAsFolders;\nbool m_useDDSFanart;\nbool m_dvdplayerIgnoreDTSinWAV;\n/* Karaoke Settings */\nbool m_karaokeAlwaysEmptyOnCdgs;\nbool m_karaokeKeepDelay;\n. It seems a lot of pain is being caused by the fact that Win32 doesn't have a CommandLineToArgvA function. Wouldn't it be easier to just write a CommandLineToArgvA and put it in XBMC_PC.cpp? A quick Google suggests legions of Win32 programmers have already done this.\n. What's the best way to propose a patch to your branch? I cloned a read-only copy of your repository.\n. http://swarchive.ratsauce.co.uk/XBMC/cli.diff.txt\n. > What is the license on the stdargv.c code\nDon't know, but it's so generic that it's hard to see how it would be protected. I've probably already changed it enough (e.g. by replacing _TSCHAR by char) to take it outside any licence.\n\nI suspect this code will break for things that need utf8 \n\nI don't see how. WinMain is passed an array of bytes and neither knows nor cares what's in the array. parse_cmdline just splits it up using space and tab as dividers. The bytes themselves remain unchanged. It could easily be rewritten to use BYTE instead of char to make this manifest.\n. Well yes, but the existing code uses:\nCStdStringW strcl(commandLine)\nso it's taking the argument passed to WinMain and converting it to UNICODE. So it would run into exactly the same problems. If you changed the code to be something like:\nCStdStringW strcl(GetCommandLineW())\nthen you might stand a chance.\n. I quite like the CAppParamParser class, and I'm happy to put together a pull request for this from my fork. However I don't see the point of all the accessor functions so I don't want to pick up this pull as it is. Shout if you want me to do the CAppParamParser stuff.\nI'll have a think about the UTF8 issue and modify the code accordingly. I still think CAppParamParser should be platform independant, so any hackery with UNICODE/UTF8 should be confined to XBMC_PC.cpp. I don't like the bif #ifdef that surrounds CAppParamParser::Parse because I think whatever gets passed to CAppParamParser::Parse should be the same for all platforms.\nDoes Linux/OSX supply UTF-8 to CAppParamParser::Parse?\n. > I'll give you write access to my repo if you want to work there?\nThanks, that would be easiest if you trust me to trample all over your code [fx: sound of demonic laughter]. I can probably have this done today since I'm laid up with double pneumonia (OK - man flu) and won't get any proper work done ;-)\n. Oops, I've just spotted that the call to g_advancedSettings.Initialize(); needs to be outside the if (lstrlenW(GetCommandLineW()) != 0) block otherwise it may never be called. I won't correct this until you've had a chance to look at my changes.\n. Done! I think that wraps up the AppParser stuff, though I wonder if we should remove the -fs flag since it doesn't work.\nLet me know if you want anything else doing.\n. There are a few unintended consequences from these changes. For example they also apply to mouse and appcommand mappings. As things stand, as soon as you connect a recognised keyboard the mouse and all appcommands stop working. Also the switch only takes effect when a USB device is connected. If the USB remote/keyboard is already connected when XBMC starts it's keymap is not loaded.\nI'd be inclined to keep the default maps as the core maps and have the device specific maps add to or override the default mappings (you can disable core mappings by redefining them as the action noop) and I'd have all the maps loaded when XBMC starts. That way I can keep the keyboard/mouse/appcommands at the default mappings and selectively change the response to signals from the remote.\n. OK, you can add <mouse name=\"whatever\"> and <appcommand name=\"whatever\"> to configure the mouse and appcommand mappings for the new input device, but that means a lot of duplicated mappings.\n. I've been testing with the receiver from an Ortek VRC-1100 remote; this emulates a keyboard. I've added LOGDEBUGs to CWIN32USBScan::CWIN32USBScan and CKeymapLoader::DeviceAdded to track what's happening.\nWhen I start XBMC with the VRC-1100 connected my log shows:\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nCWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nCKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nIf I start XBMC without the VRC-1100 receiver connected I get:\nDEBUG: CWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nDEBUG: CWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nDEBUG: CWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nDEBUG: CWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nDEBUG: CWIN32USBScan::CWIN32USBScan: calling DeviceAdded(hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#)\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = hid#vid_045e&pid_0040#6&2a11c5a0&0&0000#\nthen when I connect it I get:\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = HID#VID_05A4&PID_9881&MI_01&Col02#7&47642e9&0&0001#\nDEBUG: CKeymapLoader::DeviceAdded: Switching Active Keymapping to: VRC-1100\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = HID#VID_05A4&PID_9881&MI_01&Col03#7&47642e9&0&0002#\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = HID#VID_05A4&PID_9881&MI_00#7&284d80ab&0&0000#\nDEBUG: CKeymapLoader::DeviceAdded: deviceId = HID#VID_05A4&PID_9881&MI_01&Col01#7&47642e9&0&0000#\n. I added the following code to do the logging. I think this should catch everything. Re \"Also dont use a sub device for the HID\" - I didn't do anything honest :-) I just connected the VRC-1100 receiver and waited for Windows to find it. This is with Server 2008 R2.\ndiff --git a/system/deviceidmappings.xml b/system/deviceidmappings.xml\nindex 7114170..03297f4 100644\n--- a/system/deviceidmappings.xml\n+++ b/system/deviceidmappings.xml\n@@ -1,3 +1,4 @@\n \n\n-\n\\ No newline at end of file\n-   \n  +\n  diff --git a/xbmc/input/KeymapLoader.cpp b/xbmc/input/KeymapLoader.cpp\n  index 7777b23..fe63450 100644\n  --- a/xbmc/input/KeymapLoader.cpp\n  +++ b/xbmc/input/KeymapLoader.cpp\n  @@ -38,10 +38,12 @@ CKeymapLoader::CKeymapLoader()\nvoid CKeymapLoader::DeviceAdded(CStdString deviceId)\n  {\n-  CLog::Log(LOGDEBUG, \"%s: deviceId = %s\", FUNCTION, deviceId.c_str());\n  +\n  CStdString keymapName;\n  if (FindMappedDevice(deviceId, keymapName))\n  {\n-    CLog::Log(LOGDEBUG, \"Switching Active Keymapping to: %s\", keymapName.c_str());\n-    CLog::Log(LOGDEBUG, \"%s: Switching Active Keymapping to: %s\", FUNCTION, keymapName.c_str());\n   g_settings.m_activeKeyboardMapping = keymapName;\n  }\n  }\n  diff --git a/xbmc/win32/WIN32USBScan.cpp b/xbmc/win32/WIN32USBScan.cpp\n  index c22a8db..46e3759 100644\n  --- a/xbmc/win32/WIN32USBScan.cpp\n  +++ b/xbmc/win32/WIN32USBScan.cpp\n  @@ -1,6 +1,7 @@\n  #include \n  #include \"WIN32USBScan.h\"\n  #include \"input/KeymapLoader.h\"\n  +#include \"utils/log.h\"\nstatic GUID USB_HID_GUID = { 0x4D1E55B2, 0xF16F, 0x11CF, { 0x88, 0xCB, 0x00, 0x11, 0x11, 0x00, 0x00, 0x30 } };\n@@ -68,6 +69,7 @@ CWIN32USBScan::CWIN32USBScan()\n     CStdString dbcc_name(devicedetailData->DevicePath);\n     dbcc_name = dbcc_name.Mid(dbcc_name.find_last_of('\\')+1, dbcc_name.find_last_of('#') - dbcc_name.find_last_of('\\'));\n-    CLog::Log(LOGDEBUG, \"%s: calling DeviceAdded(%s)\", FUNCTION, dbcc_name.c_str());\n   CKeymapLoader().DeviceAdded(dbcc_name);\nif(!detailResult)\n. Ah, you mean in deviceidmappings.xml. Corrected now!\nIn Device Manager the receiver shows up as a \"USB Composite Device\" under the \"Universal Serial Bus controllers\" heading. It also appears under \"Human Interface Devices\" as \"HID-compliant consumer control device\", \"HID-compliant device\" and \"USB Input Device\" twice, presumably once as an emulated keyboard and once as an emulated mouse.\n. You're in the UK aren't you? I can post you the VRC-1100 if you want: I only use it for testing. Altermatively they're widely available on eBay e.g. http://cgi.ebay.co.uk/ws/eBayISAPI.dll?ViewItem&item=280693735317\n. I've also tested with a Speedlink remote control and also an AURC-001, both of which are cheap remotes that emulate keyboards. In both cases they are detected when they are plugged in, but they are not detected when XBMC starts. This may be a Server 2008 R2 issue. I have a Win7 test machine around somewhere. I'll try the remotes on that.\n. On Windows 7 the VRC-1100 receiver is detected when XBMC starts, so there must be an issue with Server 2008 R2. I imagine that won't be worrying too many of our users :-)\n. I found the issue because my development machine is 2008R2, but as you say I'd be surprised if it was an issue for the vast majority of users. I wondered if it was an x86/x64 problem, but I've tested the current trunk build on Win7 x86 and x64 and in both cases the remote is found when XBMC starts. So it is something specific to Server 2008R2.\n. It builds and runs fine here.\nWhen I first tested the build it was hanging on exit. However having deleted my profile folder and let XBMC recreate it, it now closes normally. Oh well :-)\n. > No issue on exit seen here.\nI suspect it was https://github.com/xbmc/xbmc/commit/dedac84af3a6e4c012246fb5f8fcdedecc1054c8#commitcomment-448387\n. > I don't fully understand why its needed?\nI originally added the setting in https://github.com/xbmc/xbmc/commit/d1ea087dbb07eb0fa8b6acc7bbc38dfbef6534a2\nIn Windows, pressing a multimedia key generates both a WM_KEYDOWN message and a WM_APPCOMMAND message. If XBMC responds to both the end result is as if the key was pressed twice. The easiest solution seemed to be to ignore the WM_KEYDOWN message and just respond to the WM_APPCOMMAND. However it's possible that users might want to handle the keydown messages, so I made it an advanced settings option. I haven't looked at Malard's code in detail, but I assume he is just tweaking this to work with his new USB device code.\n. At the time I wrote the patch there was no noop action, so there was no way to selectively disable keys. I subsequently added a noop command when I added the patch to make the mouse actions mappable.\nThe problem is that in Linux you do want the multimedia keys to work because there are no WM_APPCOMMAND messages. That means you can't use the same default keymap for Windows and Linux. You can't take the opposite tack and disable the WM_APPCOMMAND in Windows because some remote controls send APPCOMMANDs without any multimedia keypress. So disabling the multimedia keypresses in Windows seemed the best solution. It's a bit messy, but that's life.\nRe the volume appcommands: XBMC deliberately doesn't handle these so they get passed on to Windows where they control the system volume. Some years ago I added a patch to make XMBC handle the volume APPCOMMANDs and I immediately got shouted at and I had to take the patch out again. Of course, now that I've added a noop action I could have XBMC handle the APPCOMMANDs but make the default appcommand.xml assign the noop action to them. That should keep everyone happy :-)\n. If you disable handling of WM_APPCOMMAND you will break things for users of various types of remote control. At the moment nothing is broken, so even though it's (arguably) a bit inelegant I think we should leave things as they are.\nI will look at a patch to make XBMC handle the volume appcommands and only pass them to Windows if there is no mapping for them. Personnally I think XBMC should handle the appcommands for it's own purposes, but I got outvoted last time. I don't see anything wrong in doing our own internal volume management.\n. @jmarshallnz: there appear to be no standards for how remotes work in Windows. The nearest are the standard keyboard shortcuts for Windows media Center. See for example http://msdn.microsoft.com/en-us/library/bb189249.aspx and http://windows.microsoft.com/en-us/windows-vista/Windows-Media-Center-keyboard-shortcuts\n. +1 here to leave things as they were. I don't recall any comments in the forums complaining that the sound level is in dB.\n. OK but you still can't see the time bar because the OSD hides it. The point of hiding the OSD is so you can see the time bar.\n. If the OSD is active the CGUIDialogSeekBar doesn't appear. If the OSD is not active it does.\nThe CGUIDialogSeekBar still receives and processes the mousewheel actions, but nothing happens. If I place a breakpoint on:\nbool CGUIDialogSeekBar::OnAction(const CAction &action)\n{\n  if (action.GetID() == ACTION_ANALOG_SEEK_FORWARD || action.GetID() == ACTION_ANALOG_SEEK_BACK)\n  {\n    if (!m_bRequireSeek) <-- breakpoint here\nThen when I move the wheel with the OSD active the breakpoint is hit.\nDoes anyone know where in the code the CGUIDialogSeekBar is opened? I've tried tracing the mousewheel actions through the debugger, but I'm lost in a maxe of twisting passages.\n. OK it's nothing to do with the action handling. If I play a video then at 10:55:30 I move the mouse and wheel down, the log (with a few extra logging lines of my own and midly edited) shows:\n```\n10:55:30 DEBUG: ------ Window Init (VideoOSD.xml) ------\n10:55:30  INFO: Loading skin file: VideoOSD.xml\n10:55:30 DEBUG: Load VideoOSD.xml: 35.07ms\n10:55:30 DEBUG: Alloc resources: 140.00ms (35.26 ms skin load)\n10:55:30 DEBUG: ------ Window Init (Pointer.xml) ------\n10:55:30 ERROR: Control 1 in window 10099 has been asked to focus, but it can't\n10:55:31 DEBUG: CApplication::ProcessMouse: trying mouse action wheeldown\n10:55:31 DEBUG: RATS: CApplication::OnAction: 125\n10:55:31 DEBUG: RATSRATS: CGUIDialogSeekBar::OnAction: m_bRequireSeek = 0\n10:55:31 DEBUG: RATSRATS: CGUIDialogSeekBar::OnAction: pSlider->SetPercentage(29)\n10:55:31 DEBUG: CApplication::ProcessMouse: trying mouse action wheeldown\n10:55:31 DEBUG: RATS: CApplication::OnAction: 125\n10:55:31 DEBUG: RATSRATS: CGUIDialogSeekBar::OnAction: m_bRequireSeek = 1\n10:55:31 DEBUG: RATSRATS: CGUIDialogSeekBar::OnAction: pSlider->SetPercentage(28)\n10:55:37 DEBUG: ------ Window Deinit (Pointer.xml) ------\n10:55:38 DEBUG: ------ Window Deinit (VideoOSD.xml) ------\n10:55:38 DEBUG: ------ Window Init (DialogSeekBar.xml) ------\n10:55:38 DEBUG: Alloc resources: 8.86ms (0.01 ms skin load)\n10:55:38 DEBUG: CDVDPlayer::SetCaching - caching state 2\n10:55:38 DEBUG: demuxer seek to: 1003744\n10:55:38 DEBUG: CDVDDemuxFFmpeg::SeekTime - unknown position after seek\n10:55:38 DEBUG: demuxer seek to: 1003744, success\n```\nSo the OSD appears at 10:55:30 in response to the mousemove, and the SeekBar responds to the wheel down at 10:55:31. however nothing happens until the OSD times out and disappears at 10:55:38. As soon as this happens the SeekBar window is initialised and DVDPlayer does the seek.\nSo it's the presence of the OSD dialog that is blocking the SeekBar from doing the seek. The action is getting queued somewhere and only released when the OSD is de-initialised.\nI can see two fixes for this. One is to find out why the OSD is blocking the SeekBar, and the other is to simply close the OSD before opening the SeekBar. This is of course what I originally suggested.\nI'm unwilling to look any further into why the OSD dialog is blocking the SeekBar. It's not an area of the code I know and there must be others who know this code well enough to quickly see what the problem is.\n. Abandoned ...\n. I get the following build errors with Visual Studio 2010:\n1>------ Build started: Project: XBMC, Configuration: Debug (DirectX) Win32 ------\n1>Build started 23/07/2011 07:18:34.\n1>InitializeBuildStatus:\n1>  Touching \"XBMC\\Debug (DirectX)\\objs\\XBMC.unsuccessfulbuild\".\n1>ClCompile:\n1>  All outputs are up-to-date.\n1>  IRServerSuite.cpp\n1>  Thread.cpp\n1>d:\\dev\\git\\xbmc-jmarshall\\xbmc\\threads\\thread.cpp(417): error C2039: 'Right' : is not a member of 'std::basic_string<_Elem,_Traits,_Ax>'\n1>          with\n1>          [\n1>              _Elem=char,\n1>              _Traits=std::char_traits<char>,\n1>              _Ax=std::allocator<char>\n1>          ]\n1>d:\\dev\\git\\xbmc-jmarshall\\xbmc\\input\\windows\\irserversuite.cpp(82): error C3861: 'SetName': identifier not found\n1>\n1>Build FAILED.\n1>\n1>Time Elapsed 00:00:26.36\n========== Build: 0 succeeded, 1 failed, 35 up-to-date, 0 skipped ==========\n. This seems to fix it. I think I still have push access to your repo so I can just push this if you want.\ndiff --git a/xbmc/input/windows/IRServerSuite.cpp b/xbmc/input/windows/IRServerSuite.cpp\nindex 3ccda88..01628d0 100644\n--- a/xbmc/input/windows/IRServerSuite.cpp\n+++ b/xbmc/input/windows/IRServerSuite.cpp\n@@ -30,9 +30,9 @@\n#define IRSS_PORT 24000\n-CRemoteControl g_RemoteControl;\n+CRemoteControl g_RemoteControl(\"CRemoteControl\");\n-CRemoteControl::CRemoteControl()\n+CRemoteControl::CRemoteControl(const char* ThreadName) : CThread(ThreadName)\n {\n   m_socket = INVALID_SOCKET;\n   m_bInitialized = false;\n@@ -79,7 +79,6 @@ void CRemoteControl::Initialize()\n   if (m_isConnecting || m_bInitialized) return;\n   //trying to connect when there is nothing to connect to is kinda slow so kick it off in a thread.\n   Create();\n-  SetName(\"CRemoteControl\");\n  }\nvoid CRemoteControl::Process()\n  diff --git a/xbmc/input/windows/IRServerSuite.h b/xbmc/input/windows/IRServerSuite.h\n  index b0c7c96..d1fdc45 100644\n  --- a/xbmc/input/windows/IRServerSuite.h\n  +++ b/xbmc/input/windows/IRServerSuite.h\n  @@ -28,7 +28,7 @@\n  class CRemoteControl : CThread\n  {\n  public:\n-  CRemoteControl();\n-  CRemoteControl(const char* ThreadName);\n  ~CRemoteControl();\n  void Initialize();\n  void Disconnect();\n  diff --git a/xbmc/threads/Thread.cpp b/xbmc/threads/Thread.cpp\n  index 95c2a46..bd213e2 100644\n  --- a/xbmc/threads/Thread.cpp\n  +++ b/xbmc/threads/Thread.cpp\n  @@ -414,7 +414,7 @@ std::string CThread::GetTypeName(void)\n  #if defined(_MSC_VER)\n   // Visual Studio 2010 returns the name as \"class CThread\" etc\n  if (name.substr(0, 6) == \"class \")\n-    name = name.Right(name.length() - 6);\n-    name = name.substr(6, name.length() - 6);\n  #elif defined(GNUC) && !defined(clang)\n   // gcc provides __cxa_demangle to demangle the name\n  char* demangled = NULL;\n. Oops, sorry, I meant to say, yes the thread names are being set in the Visual Studio threads window.\n. I had a look at your commit, but it involves quite a lot of changes, and it isn't clear to me how to do the same with linux and OSX. 5fb1e9f achieves the same effect with three lines of code and makes the change for all platforms.\n. Ah, I see the problem. A mouse button down event sets the internal state variables then calls CApplication::ProcessMouse(). This calls CMouseStat::GetAction() and for a button down event this returns ACTION_MOUSE_MOVE, and this wakes the screensaver. When the mouse button is released the screen saver has been woken so the mouse click is processed.\nI think the problem is that CMouseStat::GetAction() returns ACTION_MOUSE_MOVE on a button down event. The best fix would be to address this. I'm not sure that 6a6ee94 is the best solution as I think it patches a symptom rather than fixing the underlying problem.\n. How about this?\nThe change to MouseStat.cpp is to make a doubleclick actioned on the button up not the button down event.\n```diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp\nindex 23e6552..692ed95 100644\n--- a/xbmc/Application.cpp\n+++ b/xbmc/Application.cpp\n@@ -377,12 +377,14 @@ bool CApplication::OnEvent(XBMC_Event& newEvent)\n     case XBMC_KEYUP:\n       g_Keyboard.ProcessKeyUp();\n       break;\n-    case XBMC_MOUSEBUTTONDOWN:\n   case XBMC_MOUSEBUTTONUP:\n   case XBMC_MOUSEMOTION:\n     g_Mouse.HandleEvent(newEvent);\n     g_application.ProcessMouse();\n     break;\n-    case XBMC_MOUSEBUTTONDOWN:\n-      g_Mouse.HandleEvent(newEvent);\n-      break;\n   case XBMC_VIDEORESIZE:\n     if (!g_application.m_bInitializing &&\n         !g_advancedSettings.m_fullScreen)\n  diff --git a/xbmc/input/MouseStat.cpp b/xbmc/input/MouseStat.cpp\n  index 7027e06..b60217a 100644\n  --- a/xbmc/input/MouseStat.cpp\n  +++ b/xbmc/input/MouseStat.cpp\n  @@ -93,7 +93,7 @@ CMouseStat::CButtonState::BUTTON_ACTION CMouseStat::CButtonState::Update(unsigne\n     m_state = STATE_RELEASED;\n     return Update(time, x, y, down);\n   }\n-    if (down)\n-    if (!down)\n   {\n     m_state = STATE_IN_DOUBLE_IGNORE;\n     return MB_DOUBLE_CLICK;\n\n. @JezzX: The (Windows) mouse handling is done in two stages:\n1. CMouseStat::HandleEvent - to set various state variables\n2. CApplication::ProcessMouse - to action the mouse event\nThe change is basically to not call CApplication::ProcessMouse for mouse down events. This stops them from disabling the screen saver. XBMC only processes mouse actions when the button is released, so everything still works. This is what commit e3b9c3c does.\nBut ...\nWhile a mouse click is only actioned on the mouse button up, a mouse doubleclick is actioned on the mouse button down - it's the only mouse action that is actioned on button down. So commit e3b9c3c would stop CApplication::ProcessMouse being called for doubleclicks, and they'd stop working. Commit 36fc520 changes the mouse processing code so the doubleclick is actioned on mouse button up just like all the other mouse actions.\n. How about this, or is it too hacky? Really the problem is that the wheel moves are being treated like button clicks i.e. there is no XBMC_MOUSEWHEELUP/DOWN action. Ideally we'd define these two constants and modify the OS specific stuff to send these actions on a mouse wheel action rather than a button down/up. This seems a lot of work though when the attached patch fixes it in 5 lines :-)\ndiff --git a/xbmc/Application.cpp b/xbmc/Application.cpp\nindex 72a8069..84b97f6 100644\n--- a/xbmc/Application.cpp\n+++ b/xbmc/Application.cpp\n@@ -378,6 +378,12 @@ bool CApplication::OnEvent(XBMC_Event& newEvent)\n       g_Keyboard.ProcessKeyUp();\n       break;\n     case XBMC_MOUSEBUTTONDOWN:\n+      g_Mouse.HandleEvent(newEvent);\n+      // Only mousewheel actions should be processed at this point. Other\n+      // mouse button actions are processed when the button is released.\n+      if (g_Mouse.GetAction() == ACTION_MOUSE_WHEEL_UP || g_Mouse.GetAction() == ACTION_MOUSE_WHEEL_DOWN)\n+        g_application.ProcessMouse();\n+      break;\n     case XBMC_MOUSEBUTTONUP:\n     case XBMC_MOUSEMOTION:\n       g_Mouse.HandleEvent(newEvent);\n. I feel uneasy with CMouseStat::GetAction changing the CMouseStat state variables. If you do this it means successive calls to GetAction would return different results and I feel this is building unnecessary traps for the unwary developer.\nMaybe we need to do this properly and add a XBMC_MOUSEWHEELUP/DOWN action ...\n. I had another look at this, and the problem is that SDL generates a button down then button up message when you move the wheel, so defining new XBMC_MOUSEWHEELUP/DOWN actions probably isn't the best course. I would just make the changes in https://github.com/xbmc/xbmc/pull/298#issuecomment-1652884. This seems a quick and easy way to fix the problem.\n. OK, this builds and works in Ubuntu. I don't have a Mac to test on.\nI'm not convinced that any Linux or OSX user will ever use the -d flag, but it's free ...\n. Do you mean the #ifndef _WIN32? If so, what should I use?\n. Ah, OK, I need to think more carefully about this.\nCApplication::ProcessMouse sets the CAction.m_amount array to the mouse position and last movement size. So CAction.GetAmount() returns the x position of the mouse. Thus if you map the mouse wheel to a volume change, the volume gets changed by an amount related to the position of the mouse, and thus usually immediately mutes or maxes the volume.\nSince I allowed mouse actions to be mappable several users have mentioned this in the forum, and I must admit I think changing the volume with the mouse wheel is quite cool. I'm trying to find a non-hacky way to make it work. I should have realised that the call to CAction.GetAmount() wouldn't have been there without a good reason.\nI'll close this pull request and think again.\n. @Memphiz: have a look at this. I think it improves our original ideas, and hopefully keeps the marshall beast happy :-)\n. Yes, the old version of CMouseStat::GetAction couldn't tell the difference between a button down and a mouse move. It returned ACTION_MOUSE_MOVE for both. That made it hard to disable the screensaver on a mouse move but not on a button down. GetAction now only returns ACTION_MOUSE_MOVE if it's really a mouse move, and it returns ACTION_NOOP on a button down.\n. OK, this seems to me a more sensible and obvious way to handle mouse events.\nAll the hard work is now done within HandleEvent, and GetAction just returns the value to the m_Action member variable.\n. Just a thought - the XBMC mouse code supports a long click i.e. a click and\nhold, but it's never been used in XBMC. Would a long click be useful for the\ntablet version of XBMC?\nJR\n-----Original Message-----\nFrom: Memphiz\n[mailto:reply+i-1309350-25784677f9a0e6c7d29ffadd8f06d8d47fe662a8@reply.githu\nb.com] \nSent: 01 August 2011 14:24\nTo: john.rennie@ratsauce.co.uk\nSubject: Re: [xbmc] Tidy up mouse interaction with screen saver (#312)\nthx man :D\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/312#issuecomment-1700176\n. Comments removed - self commenting code or what? :-)\nhttps://github.com/jhsrennie/xbmc/commit/15ff244e6e0eadf426f102f45a534628e77fd88e#L1R76 also allows the numeric dialog to be closed with numpad enter as well as the main keyboard enter/return key. It only occurred to me after I committed that this probably should have been in a separate commit. I will split it out if the panel insists.\n. I grepped the source tree of the old literal values, 0x23 to 0x27, to make sure there weren't other occurrences that I had missed. The only place I found them was in WinEventsWin32.cpp, where they were in an array Arrows_keymap that wasn't being used anywhere. I assume this is an accident of history and I've removed the array.\n. Having a builtin to open the Search dialog is good. I've several times advised users in the forum to do this with the Sendclick builtin, but this is hacky not to say unreliable. I vote to push the addition of the builtin though possibly not of the keymap changes.\n. Having thought about this for an hour (well you have to find something to do in project planning meetings) the problem is that CURL::IsLocal() is misnamed. In Dharma the function really means CURL::IsNotAURL() i.e. it doesn't start with protocol://. In the trunk code it means CURL::IsNotAURLOrIsAURLToTheLoopbackAddress(). The code in CUtil::GetQualifiedFilename just needs to know if the string is a filename that needs a path prepended.\n. This achieves the same end result in a different way, by modifying CUtil::GetQualifiedFilename to check if the argument is a URL.\n. > I am pretty sure the change to URL.cpp will break local livetv sources with no network connected\n0b76a1e fixes the problem by changing CUtil::GetQualifiedFilename instead of CURL::IsLocal.\n. I shouldn't have put the revert to CURL in the same commit as the change to CUtil. I'll close this and do a new pull request.\n. The problem is the way the USB dependant mappings have been implemented. XBMC should read the default mapping files first, then read the USB dependant files as updates/additions. This is exactly the way the system and user mapping files work i.e. the files in userdata /keymaps need only contain extra mappings that get added to or override the mappings read from the system files.\nThe way it has been done at the moment, we need to provide a complete copy of all mappings for every USB device that's defined in system\\peripherals.xml.\n. Just strip out the USB detection dependant mapping stuff. The Nyxboard doesn't need it because it doesn't clash with any of the standard key mappings. The only keys generated by the Nyxboard that aren't already mapped are:\nred shift-F3\ngreen   shift-F4\nyellow  shift-F5\nblue    shift-F6\nepg F3\nuser    F4\nrotate  F7 and ctrl-F7\nso just add these to system/keymaps/keyboard.xml and change the ButtonTranslator code back to what it was pre-USB. Leave the USB detection stuff that's outside ButtonTranslator in place because it's potentially useful in the future. However for now USB device specific mappings simply aren't needed.\n. I see it as a bugfix rather than a feature :-)\n. Actually all you'd have to do is remove the Nyxboard entries from peripherals.xml and add the Nyxboard keys to keyboard.xml. Isn't that simpler than your patch?\n. I've just tried the Official XBMC remote for Android with the current trunk code and it seems to be working fine. How do I reproduce the Eventserver problems?\n. Ah yes, that's because the USB device detection means any xml file without the name=\"Motorola Nyxboard Hybrid\" parameter is being ignored. The way the USB stuff currently works means the entire set of mapping files needs duplicating for every device in peripherals.xml.\nJust delete the system\\peripherals.xml and system\\keymaps\\keyboard.nyxboard.xml and add the few key mappings needed (just F3 and F4 I think) to keyboard.xml. Instant fix and the Nyxboard still works as it should. That gives us time to review the USB stuff for v11.1.\n. Yes, I rewrote that bit of code and the problem is fixed. This pull request can be closed, though I'd check with spiff.\n. @vdrfan: I've replaced the FirstPage mapping by ActivateWindow(Home) to make the Nyxboard Home button work. Do we really need a mapping to FirstPage? da-anda suggested mapping shift-Home to FirstPage, which is a possibility though I think it's not very intuitive.\n@opdenkamp: the flip generates F7 and ctrl-F7 and I've left these mapped to noop, which disables them. You can configure custom actions for the flip just by adding mappings for f7 and f7 mod=\"ctrl\" to a custom keyboard.xml. I experimented with mapping the flip actions but I kept accidentally flipping the remote e.g. when putting it down so i though mapping the actions to noop seemed the safest default.\n@da-anda: the reason for this pull is that XBMC has been coded to completely replace the mappings with the Nyxboard mappings when it detects a Nyxboard. There is no way to have it look at the Nyxboard mappings first then fall back to standard mappings. I will have a look at changing the keymapping code, but this would be for v11.1 at the earliest.\n. @vdrfan: no, the Nyxboard just sends an unmodified VK_HOME keypress so we're stuck with the same action as the Home key on the keyboard.\nThis is a problem, though a small one, if we want to merge the keymaps but I think it's a reasonable price to pay. This is after all intended as a quick fix while we do the key mapping code properly. I don't think the change to the key mapping code is very hard, but it won't be in v11.0 now.\n. @opdenkamp: I must admit I haven't looked at the peripherals code recently. Is it possible to remove the Nyxboard keymapping support but still have the settings in peripherals.xml modify the keymap? I'd have guessed not.\nJR\n. 3a4312f restores the Nyxboard settings in peripherals.xml and just disables the keyboard.\nHowever I don't believe there should be settings in the peripherals settings to configure the keymap. This seems confusing to me as it means you configure key mappings in two different places. It also means the code processes keyboard input in two different places. All key mappings should be kept in one (set of) keyboard.xml files.\nFor example, suppose there is a Mk 2 Nyxboard that changes the \"flip\" to send different keys (OK it's not likely but this is an example). With the current code you'd have to edit PeripheralNyxboard.cpp and recompile to properly process the flip actions. If all key mappings just go through the CButtonTranslator maps then it's a 30 second change to an XML file.\nJR\n. OK, what do the panel think? Do I merge this or abandon it?\n. True\n. No other comments? I thought there'd be more interest.\nAm I allowed to merge this, or is it too late to go into Eden?\n. @da-anda: the keymaps are only parsed once when XBMC starts or when a recognised device (currently only the Nyxboard receiver) is connected or disconnected. In practice it seems unlikely that users will be disconnecting and reconnecting their remotes on a regular basis, so the keymaps will only be read once when XBMC starts.\n. At the moment the code only handles custom mappings for one HID device as defined in peripherals.xml. That is a restriction, but actually peripherals.xml only defines one HID device (the Nyxboard) so the restriction doesn't matter.\nNB there won't be any clash between something like a PS3 controller and the Nyxboard because the PS3 controller isn't handled as a HID device. Any clash would only occur between two or more devices defined in peripherals.xml.\nSuppose you had some other remote control that you wanted to provide custom mappings for. For example let's say it's a ORtek remote. You can add an entry to peripherals.xml for the ORtek receiver then create a new keymap directory to hold the extra mapping files for the ORtek. Suppose you have both the Nyxboard and ORtek connected.\nWhen XBMC starts it loads the basic mappings from the keymaps directory. This includes the keyboard, mouse, PS3, all the different types of joystick etc. These mappings are always present. Now XBMC finds all the USB HID devices. i.e. the Nyxboard and ORtek, and for each it loads any custom mappings you have defined for that device. But when it loads the Nyxboard mappings it will clear any ORtek mappings, and when it loads any custom ORtek mappings it will clear the Nyxboard mappings. So you only get the extra custom mappings for one of your remotes, depending in what order they appear on the USB bus. This is what I mean by the code supporting only one HID device at a time.\nFor v11.0 I propose leaving the code as it is. The next step would be to have the USB HID detection code keep a list of all connected devices, then CButtonTranslator can load the base keymaps then load the custom keymaps for each HID device. This means you can support two or more USB HID devices at the same time. I don't think this is hard, but there ar a few problems e.g. the order the device mappings are added, because later devices can redefine keys mapped by earlier devices.\nI hope this makes sense. Reading it back, I'm not sure it does!\n. @opdenkamp; the setting in the peripherals might be easier for naive users to change (since they don't have to edit an XML file). On the other hand, the setting in the peripherals is global so you can't make the user key do different things in different places. To be honest I doubt anyone will ever change the mapping from the default so I don't think it matters.\nI don't think any keys should be mapped in the peripherals code as that's the wrong place to handle key mappings. However not everyone agrees with me.\n. Can someone test on OSX. I've tested on Windows and Ubuntu and all seems well on both.\nIt would be nice to get this into the nightlies asap.\n. If no-one objects I'll merge this today\n. I should probably remove the definition for the Speedlink SL-6399 remote from periperals.xml. This was just for testing.\nIf I tidy up peripherals.xml am I OK to merge this into Eden?\n. If no-one objects I'll merge this. I know we're in a freeze, but it's not a new feature it's just cleaning up existing code.\n. Tested on Windows and Ubuntu and works fine on both. I'm assuming that Lars and I are the only people interested in this code, so unless someone shouts I'll merge this tomorrow.\n. Giada almost certainly didn't make the remote themselves. It will be a rebadged remote. If we can figure out what make the remote is I'm prepared to buy one and test on Windows.\n@tarka: can you spot any obviously identical remotes on the Internet anywhere?\n. I'm reluctant to add Linux only support for a remote that is unique.\nIncidentally, the comments on your blog in the \"Enabling more keys on the remote\" section are a bit misleading. All the \"remote sends keyboard\" presses setting does is to change the way the virtual keyboard handles navigation keystrokes.\n. Apologies for the slow response.\nThe SDL library generates a keysym structure when a key is pressed, and keysym.sym identifies the key that was pressed. However for the multimedia keys SDL helpfully leaves keysym.sym set to zero. To get round this the SymFromScancode function in xbmc/windowing/WinEventsSDL.cpp sets the sym using the lookup table SymMappingsEvdev. If you look at lines 81 and 87 in you'll see that for scan codes 176 (0xB0) and 216 (0xD8) the sym is set to 0x52 ('R') and 0x46 ('F') respectively. I did this because there are no SDL codes for the FF and Rew keys, so the table converts them to R and F keypresses and these have standard mappings for Rewind and FastForward in XBMC. It's a bit of a hack, but should work fine.\nHowever, you've spotted my deliberate mistake. The keys should be mapped to the lower case characters 'r' and 'f' (strictly speaking (XBMCK_r and XBMCK_f)  not 'R' and 'F'.\nSo please will you try starting from the current trunk code and editing WinEventsSDL.cpp to change line 81 to:\n, { 176, 0x72 /* 'r' */}             // Rewind\nand line 87 to:\n, { 216, 0x66 /* 'f' */}             // Forward\nand see if the FF and Rew buttons now work.\nWhile you're in that file, I note I've made the same mistake for scan codes 138 and 147 (lines 68 and 69) so you could correct those as well.\n. I think the change will fix the problem, however it means the FF and Rew keys are the same as F and R, so you wouldn't be able to remap F and R without also remapping the multimedia keys. If the change works that means we know what's going on, so at that point we should incorporate your extra key symbols and handle those keys properly.\nApologies if this seems longwinded, but I can't test these changes as I have no MM device with FF and Rew keys, so I'm a little nervous about commiting the changes to master.\n. @tarka: please will you grab my fork from git://github.com/jhsrennie/xbmc.git and build the ffrew branch. If the ff and rew keys now work I'll pull in your extra key symbols and merge it into the trunk. Soon would be good if you want the changes in Eden as if we miss beta 2 the changes will have to wait for v11.1.\n. PS the key thing to check is the SDLKeyboard debug log. In your ticket it's:\nDEBUG: SDLKeyboard: scancode: d8, sym: 0046, unicode: 0000, modifier: 0\nNote that the sym is 0x46 ('F') because the key got tranlated using the SymMappingsEvdev table. After the change the log should be:\nDEBUG: SDLKeyboard: scancode: d8, sym: 0066, unicode: 0000, modifier: 0\nand for comparison if I just press the 'f' key on the keyboard I get:\nDEBUG: SDLKeyboard: scancode: 21, sym: 0066, unicode: 0066, modifier: 0\n. Beta 2 is about to be released, so I've merged my changes to the mapping table. Ignore the request to build my fork. Just test Beta 2.\n. Yes, this is fixed in Eden\n. This is the cause of the bug reported in http://trac.xbmc.org/ticket/12445\n. @JasonBSteele: the sort method specified in advancedsettings.xml applies to all media types, so your comments on the sorting are correct. It would be trivially easy to add extra sort types. The sort types recognised are listed in https://github.com/xbmc/xbmc/blob/master/xbmc/SortFileItem.h and there are several sort types that ignore the \"The\" when sorting.\nAssuming the other devs are happy for me to make this change, now is a good time to request your favourite sort type.\nI think anything more than this basic sorting is a bit ambitious to get into Eden.\n. 0c68fbe adds separate sorting for video and music. I've also added a few more sort types.\nPlease note:\n- sorting this way is always going to be a bit of a hack. The sorting applies to all uPnP requests including those that return higher level results, e.g. a list of genres, so the sorting is never going to be perfect (don't let that stop you suggesting improvements!).\n- the sort types and defaults I've put in are a quick guess as to what's best. If you want extra sort types or different defaults shout now.\n- the sorting is limited to the types in SortFileItem.h, and you can't have compound sorts e.g you can't sort by album then trancknum.\n. I'd guess the most sensible default sort for music is \"album\". If I understand the code correctly this sorts by album, then by artist, then by track number.\nIf anyone wants to test a copy of XBMC.exe with the above changes grab XBMC-upnpsort.exe and libcdio-12.dll from http://swarchive.ratsauce.co.uk/XBMC/. Copy the two files into the Eden beta 1 install directory and just run XBMC-upnpsort.exe. You need libcdio-12.dll as Eden beta 1 uses libcdio-13.dll.\n. No comments?\nI can't test these changes as I have no PS3 or other uPnP client, and I'm not going to commit untested code to master.\n. @IronTetsubo: Thanks. I saw your comments in the ticket. Have a look at the SSortFileItem::ByXXX functions in https://github.com/xbmc/xbmc/blob/master/xbmc/SortFileItem.cpp starting at line 108. These show you what all the sort options do. In my patch the default sort for video is \"title\" and I'm not sure how well this will work for episodes.\n. I've gone cold on this.\nIf we can put together a list of examples that give problems with sorting then maybe I'll look at again. At the moment, and given that I have no PS3 or other uPnP client to test with, I feel uncomfortable about committing what's basically a hack.\n. Drat, yes, how did I miss that? I'll correct this now.\n. Apologies for the slow response, this has been on my list to look at. I'll grab it and have a look in the next day or so.\n. This seems to work fine, and it does allow event clients to type into edit controls provided they send 0xF1NN instead of 0xF0NN.\nHowever it's never been clear to me why the HTTP and EventClient API's should have to use different prefixes, F0 and F1, to specify the difference between a command keypress and a literal keypress. The keyboard handling code just looks to see if the focus is in an edit control and it interprets the key accordingly. Can't the HTTP and Event Clients just do the same? That eliminates the need for the key.GetFromService() call.\n. I suspect this may be an accident of history. The only extra processing of \"real\" keypresses is to check the ctrl, shift etc keys and a few special case fixups. By the time CApplication::OnKey is called the keypress is simply a DWORD (ORed with &F000 to indicate it's a virtual key code) and I can't see any obvious reason why the emulated keypresses shouldn't do exactly the same.\nIf you'd like to get your change into Eden then I'd say go ahead because it looks fine. However I'll play around a bit and see if I can eliminate the F0/F1 distinction completely (thereby breaking all existing client software :-).\n. You can send key codes with;\nkeydown = new CPacketBUTTON(0xF150, \"KB\", BTN_DOWN | BTN_QUEUE);\nkeydown->Send(m_Socket, *m_Peer);\nthough the F1 won't do anything without Sascha's changes.\n. All the \"KB\" events pass through the key mapping table. In brief:\n- real key presses get passed to g_Keyboard.ProcessKeyDown where they are converted to a DWORD, then that DWORD get's passed to g_application.OnKey.\n- HTTP Sendkey calls have to supply the DWORD directly, and this DWORD just gets passed to g_application.OnKey\n- EventServer \"KB\" packets assume the value supplied is a key name and this gets converted to a DWORD by CButtonTranslator::TranslateKeyboardString then passed to passed to g_application.OnKey. Actually, I don't think the BTN_USE_NAME flag affects the \"KB\" handling - a quick grep of the source tree failed to find any mention it.\nSo the point is that keyboard input, emulated or otherwise, gets converted to a DWORD before passing through the code that converts it to an action. Any input API just has to make sure the correct DWORD reaches g_application.OnKey.\nIf you want some EventClient sample code grab http://swarchive.ratsauce.co.uk/xbmc/SimpleEventClient.zip\n. Aaahhh, CPacketBUTTON::Send is automatically setting the BTN_USE_NAME if a button name is sent. That's why me not setting the flag made no difference.\nI agree that as the code stands using BTN_VKEY means that you can't send text to an edit control. As I mentioned above, I think the best way to address this is to have all keypresses treated as if they came from the keyboard. Then they automatically behave properly in edit controls.\n. > The only doubt i have with the PR is that the commit 65069ac the fromservice\n\nflag is set also when not sending the BTN_USE_NAME \n\nThat's the way it should be. Irrespective of whether the event client sent a key name, vkey or a literal, by the time OnKey gets it the key has been converted to a DWORD, and it doesn't know or care in what form the key was originally sent. It just needs to know it's an emulated keypress and not actually from the keyboard.\n. If we want this in Eden then I'm happy for this request to be merged.\nHowever, I'm not sure we should be encouraging the use of 0xF1xx codes because I think it's better to remove the historic distinction between \"command\" key presses and \"literal\" keypresses. Remote client keypresses should work just like a real keyboard. It's on my list to have a play with this, but it's not appropriate for v11.0.\n. But you can do this already simply with noop in mouse.xml\n. Yes. In Eden all mouse input passes through a mapping table just like keypresses. By default mouse move messages are mapped to the \"mousemove\" action and this ultimately generates a ACTION_MOUSE_MOVE. By mapping  to \"noop\" in the  section all the change is that no ACTION_MOUSE_MOVE is generated. Mouse clicks etc still work as normal, and the  works as normal outside full screen video.\n. I've already tried several suggestions for uPnP sorting, e.g. https://github.com/xbmc/xbmc/pull/626, but to no avail. I'm unconvinced we should be making ad hoc changes to the sorting. It needs someone to sit down and come up with comprehensive guidelines for sorting.\n. @davilla: good point, thanks :-) Changed now!\n. Would it be possible to include https://github.com/xbmc/xbmc/commit/e7841fd4f9a8fcffa9d25f0cf82fd98c8c3fb8ab\nIt's a pretty minor change and it was specifically asked for in 11.0 but I forgot :-(\n. Does anyone mind If I merge this on Sunday? It's a pretty small change.\n. I had a look through this and it all looks sensible though I don't have any PVR hardware so I'm not sure I can test the changes. I do have a PS/3 pad lying around so shout if you want me to test anything with that.\nIt has always felt a bit tacky that g_windowManager.GetActiveWindow() doesn't return the window that is receiving the input events. Fixing up the window ID feels clunky.\n. The gamepad (it's actually an XBox 360 pad) does not work. It works in Eden but not in your branch. I'll look into why shortly. Should my keymap file from Eden still work, or would I need to rewrite it?\nRe the IDs: the problem is that GetActiveWindow is being used where the function should really be GetFocus. The difference would be that GetFocus would always return the ID of the window receiving the events regardless of whether it was real or virtual.\n. That was easy :-) In CButtonTranslator::TranslateJoystickString you aren't setting the action argument so the function is failing to return the action ID.  You just need:\n```\n$ git diff\ndiff --git a/xbmc/input/ButtonTranslator.cpp b/xbmc/input/ButtonTranslator.cpp\nindex 92ba17e..1500fdb 100644\n--- a/xbmc/input/ButtonTranslator.cpp\n+++ b/xbmc/input/ButtonTranslator.cpp\n@@ -825,6 +825,9 @@ bool CButtonTranslator::TranslateJoystickString(int window,\n       actionID = GetActionCode(-1, id, wmap, strAction, fullrange);\n   }\n\nif (actionID > 0)\naction = actionID;\n+\n   return (actionID > 0);\n }\n```\n. In Windows (God bless you Bill Gates) pressing a multimedia key generates two messages. First it generates a WM_APPCOMMAND message, then it generates a WM_KEYDOWN message. By default XBMC handles the WM_APPCOMMAMD but ignores any WM_KEYDOWN messages from multimedia keys (obviously, only from multimedia keys), and this prevents the keypress being handled twice. You can change this behaviour from http://wiki.xbmc.org/?title=Advancedsettings.xml#.3Cenablemultimediakeys.3E, which is presumably why Voyager1 experienced the duplicated key presses.\n\nHowever the current problem is unrelated. It's happening because XBMC misinterprets the multimedia keypresses so they look like other keypresses e.g. the mute key looks like a \"d\" keypress. This fix prevents this mishandling of the keypresses.\nFWIW http://forum.xbmc.org/showthread.php?tid=148760&pid=1290606#pid1290606 reports that the fix works.\nI guess it's a bit scary putting a change like this in at the RC3 stage, but I'm 99% confident it won't affect anything else. It's difficult to be 100% sure as the problem only occurred on some keybpoards and doesn't happen on mine, or with any of the remotes I use.\n. Are you going to pull the changes into the Frodo branch as well?\n. Hmm, I wonder if it would be better to use ActivateWindow(shutdownmenu), or maybe leave things as they are.\nI don't feel strongly about this: I'm just responding to the Trac report. Views from the team would be welcome.\n. @Lars, you've used \"<key id='61952'\"> and 61952 is 0xF200 hex, which is generated for every unrecognised keypress. Assuming we're still talking about Linux, I've just tried my (Mk 1) Nyxboard with Ubuntu 12.10 and it generates scan code 0x96 and keysym.sym = 0x9F. This isn't recognised by XBMC, which is why you get an unknown key. To make this work we need to add a mapping for a new key e.g. \"<sleep>\".\nWas it you added this key to the SymMappingsEvdev array in WinEventsSDL.cpp? Do you want me to add the sleep key to the keys XBMC knows about?\n. @Lars: see https://github.com/jhsrennie/xbmc/commit/169be40560488d0e6ca9548dc694e7ca0005288e\n@FernetMenta: as it stands SDL doesn't process many keys properly and we have to do a tacky fixup to convert the scan code to a keysym.sym value. The standard SDL headers don't (as far as I can see) define a constant for the sleep key so in the above commit I've just invented one. I'm not sure how this will play with OpenElec. Really, the sooner we can be rid of SDL the better, but for now we need something that works for Frodo.\n. @FernetMenta: where do I find WinEventsX11.cpp? Is it in a branch or different repository? I can't see any such file in my repo here.\n. I assumed we'd want this in Frodo, or at least I assume Lars wants the Nyxboard fix in Frodo, but maybe it's too late and we should wait for 12.1.\n. @Lars: I should probably remove the mapping from the sleep key from the Nyxboard file and put in system/keymaps/keyboard.xml as something like:\n<sleep>ActivateWindow(shutdownmenu)</sleep>\n. I'll close this pull request and create a new one that includes the handling of the Nyxboard sleep button\n. https://github.com/xbmc/xbmc/pull/2077\n@Lars: this includes your change to the mapping for F4. can you test and let me know if this works for you.\n. Am I OK to merge this today?\nIf nothing crawls out of the woodwork I'll ask the commits to be merged into Frodo.\n. Ah, OK. I'll merge anyway in case there is a 12.1 release. This code won't be needed when SDL is removed, which will presumably be in 13.0.\n. NB these changes only apply to Linux (and possibly OSX) because on Linux SDL does not properly handle the power and sleep keypresses.\n@da-anda: it might be an idea to handle the Windows WM_POWERBROADCAST message and make it generate a keypress so it's handling can be customised by the user. However that's a patch for another day.\n. Incidentally, this fix works with other remotes as well. For example it make the power button work on the VRC-1100, which is a popular low end remote.\n. Thanks, it's good to know it works on OSX as well. I've requested (on my knees :-) the commits be merged into Frodo.\n. @davilla: http://forum.xbmc.org/showthread.php?tid=150554&pid=1301360#pid1301360\n. I can see the problem, but i went to considerable effort to standardise on using hex everywhere in the key handling code and I do not want any of this reverted. A compromise would be to prefix the key id with 0x to indicate that it is hex.\n. jeroensteenhuis, please will you post the log entries generated by the unknown key i.e. the lines that look like (this is just an example):\nDEBUG: Keyboard: scancode: 1e, sym: 0061, unicode: 0061, modifier: 0\nDEBUG: CApplication::OnKey: 0 (f200) pressed, action is\n. @jeroensteenhuis: logs? I ask because if there's an unknown key I want to see what key it is.\n. The correct syntax for keyboard.xml is:\n<three mod=\"ctrl\">fullscreen</three>\nYou do not need to use the key=\"...\" form. In fact there should be no reason to use the key=\"...\" form because I can't think of a key where there isn't a key name available.\n. I'm afraid that this seems to me to be non-issue. The key=\"...\" is provided as a last resort and isn't expected to be used by most users. Unless another member of the dev team objects i will close this pull request in 24 hours.\n. OK, I'll close this pull request and start a new one to make the changes:\n1. any hex values logged are prefixed with 0x\n2. the key=\"...\" accepts 123, 0x123 (and octal, 0123?)\n. https://github.com/xbmc/xbmc/pull/2149\n. Nevertheless, speaking as a stereotypical anal retentive nerd I think it makes the code clearer to explicitly check for XBMC_MOUSEBUTTONetc. Although it doesn't seem likely, who knows when more cases might be added to CApplication::OnEvent() and break your code?\nAlthough I like the change, it's not obvious why a button click event would ever use dx and dy. Presumably that's why it's taken so long for anyone to notice.\n. Thanks :-) I'm not really in a position to give the go ahead for the merge because I'm not that active an XBMC developer. If jmarshallnz is happy the change is fine by me.\n. I had a look at the thread you mention, and it seems to me the simplest option would be to provide a way of overriding the mouse pointer image. If there was a way for the user to replace it with a null or fully transparent bitmap the problem would go away without needing any code changes.\nIt's not obvious to me that adding all sorts of special cases so a user can make the mouse appear to be a keyboard is a great strategy.\n. ",
    "dteirney": "What's next with this pull request. Do I need to push this in from my repository, or can this be accepted magically somehow?\n. Replaced with new pull request. https://github.com/xbmc/xbmc/pull/91\n. Is it easier just to go back to the patch that used a recursive mutex instead so there don't need to be internal and external functions?\n. I'll revert and add to .gitignore. If they do get more configuration that point and click settings I'll look at adding. Pull request was mainly to make sure I didn't bork anything. I'd talked with some others on IRC about this eons ago.\n. This was a code change that a pull request was open for a week months ago and was commented on by a couple of people so I thought it would be fine. Unfortunately I nuked the commit in my tree so the push couldn't be done at that point in time. I think I've got the hang of things now so pushes directly to master will hopefully avoid a git WTF award.\n. Bah, pull requests for a branch get updated if that branch gets updated. I just wanted this pull request to be the first one.\n. Updated pull request where a private unlocked method is now used and the public locked method just delegates to the unlocked method with the lock around it. @elupus, any better name that could be used for the unlocked method? Had to move the unlocked variation in the file above it's first usage which is why the diff is so large.\n. I didn't find any examples of an internal method that was an unlocked variant.\nAdded the prototype to the top of the file so the diff is now more sane.\nMethod was static already.\nHopefully this is the final change before the big \"Merge pull request\" button can be pressed.\n. The old code can't be moved over as it was. Details about what needs to change are in the Trac ticket.\nFurthermore, the Codec Priority stuff in the old code doesn't match all the cases that is currently in StreamDetails.h. It must be updated to support the additional checks now in there.\n. If you can look at how to add UI properties for the following and find out where the ISO language mapping stuff is in the existing XBMC code I may be able to find some time to put together a fresh pull set with the other changes that are needed.\n\"Default Subtitle Language\"\n\"Default Audio Language\"\nFirst step will probably be to commit the changes necessary to choose the audio stream with the most channels and then look to add the language related complexity.\n. I've created a pull request that just contains the selection of audio stream based on codec and number of channels.\nhttps://github.com/xbmc/xbmc/pull/265\nThat pull request fixes the codec priority changes that have been made since the patch was crafted a long time ago.\n. Updated pull request so the default stream is identified prior to checking for max channels etc. Might need to think more about that when the language checks are added in for the audio and subtitle streams. Having the default audio stream flag take preference assumes that the person watching is the content author and I doubt that is often the case.\nRealistically I'm not sure how often that will matter though as I suspect the default flag is rarely set.\n. @joelmeans, there was discussion about whether this functionality needed yet another GUI option to turn it on / off. At the time it was decided that it didn't need a setting as the current behaviour was somewhat arbitrary already. I think the preference would still be to avoid having another GUI setting.\n. @elupus, can you have a quick once over again before I merge this in.\n. @elupus, rebased and repushed. Not sure what went weird there. Seems OK now.\n. @elupus, thanks for spotting that. Updated and repushed.\n. I don't even know where the Windows project file is (only have linux). I assume this is to add the ability to build the new StreamUtils class. Can you put me in the right direction?\n. @elupus, I can't test that the Windows build file changes are correct. The changes look fine. Updating all the XCode project files looks more complicated so I'll leave those well alone.\nI've added in the initialization of channels to 0 in all the places where the struct is created (that I could find).\nHopefully this is now good to merge in.\n. If I understand this code, it will only display languages for content that are currently in the XBMC Movie or TV Shows database. Is that correct? That's an interesting way of tackling the problem. Would it be necessary to show other languages as well to deal with cases, for example, where video content is not in the library. For example, through an Addon, or just directly off the file system.\nIt's a tricky area because there are LOTS of languages and for most users there will only be a couple they are interested in for this.\nI don't know enough about the GUI to comment on the other bits.\n. How I pictured this functionality working is noted in a forum thread now. http://forum.xbmc.org/showthread.php?p=837101\nPlease continue discussion there. I agree that there needs to be a way to just have an \"empty\" value for these configuration options. The decision to not have a setting to automatically choose the best audio stream is independent of this functionality.\n@joelmeans, are you able to update, rebase and push as a single commit? I'm finding it hard to follow what the current \"change\" to master will be.\n. Bah, the merge didn't keep all the individual commits.\n. Should have pushed from my branch to master. Not sure there's any point unwinding.\n. @elupus, not sure if you want to review or not. I changed around one of the files quite a lot so it was easier for me to compare with the MythTV source.\n. There hasn't really been any significant activity upstream in MVPMC for a while. I'll need to do some other changes for yet another significant object structure change to the protocol before 0.25 can be supported. I'll be using the MythXML interface for as much as the PVR plugin as I can because it's much easier to understand and test. Myth Protocol will still be needed for a good chunk of functionality though. Some of the XBMC changes have been moved upstream by the primary maintainer there.\n. I've contacted the MVPMC mailing list to get their thoughts on libcmyth moving to github. Details on the forum. http://forum.xbmc.org/showthread.php?p=879408\n. Looks like the .vcproj file should also have the references to ../../../win32 removed as well. Best I can tell, that location doesn't even exist. Will update pull request for that tomorrow morning unless someone else can make that change to and test that everything still compiles with VS.\n. @elupus, pretty sure I got all this right, but would be good to check I've added the new extern method information in the right places. It's all working fine on Linux.\n. Bump, @elupus do you want to review this at all. I'd like to push in at the weekend before I head away on holiday. Fix has been working great for me on the HTPC.\n. Yeah, all of libcmyth is still long and long long. It should all be changed to int32_t and int64_t. I'll look at doing that when I start adding support for Myth 0.25 because there are lots of other places in the protocol that now send back a 64bit int rather than the 2 32ibt integers that get smashed together to create the 64 bit.\n. @FernetMenta, is it possible for this to be rebased against master? I'd like to try this PR out to see if it helps with the frequent \"only audio starts playing and then XBMC locks up when stopping\" problem we've been having playing recorded 1080i DVB-T content on Linux using VDPAU. The current PR doesn't cleanly apply to master. Thanks!\n. @sandersch any comments re testing of the Myth 0.25 related protocol can be posted at http://forum.xbmc.org/showthread.php?tid=129021\nI couldn't find any concrete Myth Protocol documentation re the RINGBUF related methods. Based on the code pathways Live TV hasn't used RINGBUF since protocol 26, which is ages ago so perhaps it's not even supported anymore (there is no reference to it in the Myth 0.25 source code).\n@elupus Good call on the the changes to the single method rather than putting function pointers everywhere. If my git foo was stronger I would have redone the initial protocol 66 commit. Not sure it matters. I can look into that more if you think it necessary. I'll spend a bit more time on it tonight and push a rebased update if I can figure the rebasing stuff out.\n. Figured out the rebasing. Pretty easy actually and very powerful. Awesome. Protocol 66 changes now look much cleaner.\n. @elupus, haven't heard any complaints from the people who have been testing this with a Myth 0.25 backend now. Do you want to review the protocol 66 changes re long_long before I merge it?\n. @hcw70 report as a trac ticket at http://trac.xbmc.org/ and include a full debug log. Cc me in the ticket when it is created.\n. @elupus, do you also know why the VIDEO_NOSKIP message would need to be sent to the video player? I've left the TODO in there to remind me to ask. I'll take that out and amend the commit with either a change to remove that message or to comment why it is needed.\n. So as far as you know non-flushed seeking is indeed working? I wasn't sure given the only code path that I could see using it was the commercial skipping. The delay is always identical to the timeout used within SynchronizePlayers so somehow the lock isn't getting released.\nI've had limited success getting my debugging environment working but I'll have another look at the weekend. I guess the next step is to find where the threads are sitting while that lock is waiting to timeout.\nThe way that the messages end up getting back to the place where the lock is released is pretty complicated so I'm not sure I'll be able to do more than identify where each thread is hanging.\n. Backtrace included in the trac ticket at http://trac.xbmc.org/ticket/12984#comment:5\nNot sure how useful it is though :(\n. @elupus is there anything else I can help with for this? The problem unfortunately makes playback of any content that has commercial skips very frustrating.\n. I've tested this patch and it appears to resolve the issue with the seeking timeout and the problem with \"go slow mode\" after the seek. I also tested it with a number of my EDL testing files and I have observed some slightly strange behavior for some of my samples that have lots of small cuts that are close together. I've added a log file to http://trac.xbmc.org/ticket/12984\n. @wsoltys thanks for the changes for win32. I've rebased so the commit of the cmyth_msc.h file has the closing #endif. Not sure how I missed that with the diff merging.\nI've added commits for the other 2 areas that were picked up as well. I always forget that libcmyth.def file when adding methods.\nNot sure why it's not using the XBMC mysql includes. Once XBMC source changes are synced with upstream I'll work on removing the source from the XBMC tree so we can just use upstream.\n. @wsoltys is there any chance you could confirm that with the changes I made that everything is all good on Win32.\n. I've done some more testing on this tonight and fixed a problem with one method that should have been forced to call cmyth_rcv_new_int64 rather than relying on cmyth_rcv_int64 to route to the correct one based on the connection version.\nI've also fixed the libcmyth.def commit so cmyth_get_cutlist isn't duplicated.\nToday's the last day for the merge window for July and I want to get this in so I'm going to merge it.\n. The link in the previous comment points to the old commit. The new stuff at https://github.com/fetzerch/xbmc/commit/a6019acde046f4f3179c9ceb54da4609a62bb821 looks fine to me. Nice work.\nI'm not sure why SCENE was taken out. I'll have to look at why some other time.\n@opdenkamp over to you for review.\n. ",
    "arnova": "Nice :-) You may want to check my comments/ideas in this (rather old) ticket: http://trac.xbmc.org/ticket/5971 \n. Really nice refactor, looks good :-)\n. I don't think it makes sense to unmute to 0%. I explicitely implemented it to unmute to 100% so one can easily \"return\" to 100% volume. And else one can use the arrow up button to start from 0%\n. +1 on the volume & mute seperation. I think it totally makes sense to change this and as a bonus it will also make to code easier to read...\n. Oh yes, I think I did accidentally click \"Comment &close\", sorry about that.... :/\n. Could we use this to also allow have a node that contains recently (non-finished) played video files? I think this could be quite useful...\n. A testing function sounds reasonable. Is there any such thing already somewhere within XBMC which I can use as a template?\nOh and shouldn't we do the same thing for multipath://'s ?\n. \n. The above commit does fix our initial issue. Jonthan, does it look right or can it use some additional tests?\n. Something like this? I've also reverted the initial commit so I think you're safe to pull this request to mainline.\n. @elupus mind acking this? I've already tested & reviewed it (on Linux) and seems to fix the problem/crash.\n. IMO it's fine with CRC32 (especially since we also still include the disk label in our ID). And I see no real problem in using file times too. So as far as I'm concerned this can be merged...\n. Sure, I can test it but I don't know when (maybe this afternoon). But did you already commit all the changes then since I don't see any additional commits in this PR.\n. I've added a few more cosmetic cleanups. I'll test it as soon as I have the time (maybe tomorrow or else Friday).\n. I will test it on Linux but since I'm pretty tied with work at the moment, I don't know when. Probably this weekend.\n. Just quickly tested it but found the prototype for HashDVD() in MediaManager.h to be completely wrong:\nbool CMediaManager::HashDVD(const CStdString& devicePath, uint32_t& crc);\nshould be\nbool HashDVD(const CStdString& dvdpath, uint32_t& crc);\nAre you sure this compiled on Windows?\n. Oh and the inclusions of URIUtils.h in MediaManager.cpp should be moved outside the #ifdef _WIN32 block.\n. Yeah already fixed the above issues locally and then it all works fine\n. Btw. wouldn't it make sense to rename removable:// to iso9660:// ?\n. Agreed. Elupus, can we pull this to master since it fixes an 11.0 (crash) bug?\n. Excellent :-)\n. I'm fine with this. Are you sure this works properly with libcurl-gnutls? I'm not that familar with the internals of this...\n. Nice work. I like it :-)\n. I think it looks good. Only thing remaining afaik is the formatting like having { and } on seperate lines (check the code comments). Furthermore this probably want be pulled in until after the release of Eden.\n. @jmarshallnz : I think this is looking good, is it?\n. And the same thing for the spaces, that will very likely cause issues. I recall useragent can't have spaces in them and also caused issues in the past.\n. @jmarshallnz: Thanks for the comment, I already had a feeling it was wrong. I've changed it, I assume it's ok now?\n. Ah yes, silly c&p error. Fixed it in the last commit. When implementing this I already made sure (as far as possible) that there was eg. nothing that might already be torn down when shutting down.\n. @jmarshallnz: What do you think about it?\n. Yeah, post-Eden stuff. It's not THAT important ;-)\n. Sorry, I completely screwed up the squash (never did it before). I'll try to fix it up.\n. Squashed & fixed the commit. It's already almost in the beginning of CApp::Stop(). I'm afraid to put it before the CancelJobs() call as it may collide with each other (not sure what will happen if CFileStateJob() is called from 2 threads: CApp & CJobManager).\n. The player is stopped a few lines below in CApp::Stop(). After looking over the code one more I think we're fine. We would only miss the case we're we stop the player and immediately shutdown as that would abort the FileStateJob(). Although this scenario is rather unlikely, I guess..\n. Good suggestion, I'll have a look\n. Well, that's not that straightforward since StopPlaying() is also called in other places where saving the file-state would interfere with file-state-save job. I think it would be better to wrap the foreground filestate-saving into a function and call that from both the powermanager & CApp:stop() functions.\nWhat do you think?\n. Something like this?\nUnfortunately I somehow managed to screw GIT in a way this commit can no longer be automatically merged (probably something went wrong with rebase (I'm still \"learning\" git) :/\n. I managed to properly rebase & squash the commits into on that can be merged into master.\nAny objections against this going to master?\n. Basically what jmarshallnz says: Might as well do this for internet-streams too and make it the default. I don't see why we need to differentiate between LAN and internet stuff. Might also pay to ask Elupus's opinion on this...\n. Perhaps we could already implement it the way it is for our Curl filesystem? In that way we could at least already test it?\n. Oh and rebase please ;-)\n. You can see it's working by checking the OSD info (it's the cache: property) and you can also see it when popping up info during video playback, the seekbar will show a darker trailing part which is the progressive cache..\n. But what about the issues that bob1on1 was having with smb, which is the sole reason this never got merged... ?\n. Sounds good. Please submit a PR then for further inspection...\n. Hehe, I was about to say the same thing but now I keep my big mouth shut ;-)\n. Basically anything in lib/ is external\n. Feels like the CJob should be moved out of GUIWindowVideoBase.cpp into a seperate file like we do for other jobs. Please have a look at eg. xbmc/utils/SaveFileStateJob.h\n. @elupus : What's the status of this? @FernetMenta : could you please rebase this PR on master?\n. That's a pity although I already suspected that. The reason is that currently using vdpau + h264 + upscaling to 1080p doesn't work properly on Ion (although I assume it's a more general nVidia issue), sometimes the video drops to a very low framerate, especially when dialogs are shown on top of a playing video. This PR fixes that. @elupus @FernetMenta : Is there anything that can be cherrypicked specifically for this issue from this PR perhaps for Frodo?\n. Yeah it's a shame I didn't figure out any time sooner, what the cause of my problems was (and that this PR fixes it). The main reason as that the \"scene\" recently switched from xvid to h264 for SD releases and I therefor didn't use vdpau acceleration that often... I now also patched my htpc setup, but the users out there that don't have that ability are probably going to b*tch about that...\n. Then we might as well only release an ATI/Intel version of xbmcbuntu 12 and redirect them to OpenElec for nVidia....\n. Shouldn't the PR's description be made more general? This doesn't only affect vdpau, right?\n. @elupus: What's the status of this?\n@FernetMeta: Please rebase\n. +1 for getting this in, especially since other decoders can eventually also benefit from this.\n. I'm also against doing this. I belief NFO files are not the place to store info like this. And if you really really must do this, make it at least optional in some way...\n. Sorry Davilla, you need to rebase because of the commit I just pushed... Great idea btw.\n. Yeah and with ffmpeg's http we can't do progressive caching either. I assume you have a problem with a specific stream?  Please open a trac bug report about it then. Thanks! \n. Nice catch :-)\n. Well, you didn't really make that clear, right? ;-)\n. Again, then you should have mentioned that you wanted a more thorough review, either yourself and/or jmarshall (which already looked over the code before anyway). But it's rather confusion if I fix all the things you mentioned, and all you say is \"Yup, agree\", as that doesn't tell me much right?\nThis way it feels like I'm being bossed around instead of having constructive feedback... If you want me to revert the whole thing again, let me know.\n. Ok, agreed. This is at least clear story that helps to improve \"things\" :-)\nLet's bury the hatchet then, and let us both try to prevent annoyances like this in the future.... But clear communication is the key here, IMO...\n. You probably have to ask the webserver builders why they implemented it this way (partially), I couldn't find any specifics about it. I just tested it with both Apache & lighttp and together with the RFC, this turned out to be the list of characters that is excluded from encoding. I also found another RFC about URI encoding, RFC2396. Specifically have a look at section 2.3 (\"Unreserved characters\"). See http://www.ietf.org/rfc/rfc2396.txt. \nIMO it makes sense to resemble the behavior of webservers as much as possible.\n. That seems like a good idea yes, I'll look into that. Note that I figured out our character list by simply performing trail-and-error -> just created some files with special characters and see whether the webserver URL encodes them before sending them to the client.\n. That's weird, according to my tests it does NOT encode: * but it does encode ~ and '\nDo you have a link?\n. Indeed, not that obvious ;-). An idea could be to detect which characters use encoding in an URL-encoded string, and use that later on when re-encoding. This list could optionally be stored inside the CURL-object, although it's only a single instance where we actually do this now (StackDirectory) so that may not be that useful.\nEDIT: And of course we should honor the minimal list that Apache & lighttp share\n. 1) Can't we update when the user opens the Music window/library view?\n2) Having the background loader run for each item totally makes sense. This would also improve the overall performance (and feel) for the video views as well, since certain items have to wait now before others eg. finished fetching/caching their thumbs. Also having some sort of caching would probably help a lot although this may cause problems on platforms which don't have an awful lot of ram(?)\n3) We already noticed this in ticket #13052 as well ;-)\n4-5) No comment.\n. I think we shouldn't add features which only a small minortty of users will use, like this one. Especially if it's another GUI setting, this will only clutter the GUI more and more again (like we experienced in the past).\n. Doing it on stop/(re)start makes more sense yes then on pause. I would however, not modify the resume bookmark but instead simply substract the time when starting from the resume-bookmark. In this way we won't be rewriting the resume-bookmark over and over again with a substracted timestamp when eg. doing pause-stop-start-pause-stop. It may need some more though....\n. Shouldn't we also do this for eg. https/https/ftp/ftps (quasi) protocols?\n. Nice work btw.\n. @elupus & @vdrfan: Mind ack-ing this?\n. Sure, if you would be so kind to provide additional patches for that ;-)\n. @elupus: Can this go in?\n. @elupus: I have to agree with koying. Perhaps merge this and see over time whether any problems exist with it?\n@koying: Please rebase your PR\n. Mainly for crashes during and after pausing. And for systems that will auto-hibernate/sleep, where you really want to save the filestate in case the system doesn't recover (not that uncommon on certain hardware). Bumping the job's priority is, like I said, to make sure it gets executed as soon as possible....\n. For clarity: Do you mean dropping the whole PR, or just he priority-part?\n. @jmarshallnz : I can remove the priority setting. But wouldn't it still make sense to set the priority for thumb/fanart jobs to low?\n. @jmarshall: Can this go in or should we drop the PR?\n. Saving while playing is probably not something that we are going to do anyway since this has been tried before and it caused playback to eg. stutter in some cases...\n. Since the two commits are totally unrelated. I guess it would be nice to have them in seperate PRs\n. Just create a new branch from your current branch, and revert one commit in each branch and submit those as a PR. That's should do it, I guess (the AE fix is a oneliner anyway)\n. And yeah GIT can be a b*tch when you're new to it ;-)\n. You got it ;-) Thanks for the effort of splitting the commits..\n. I just realised there's already something in the works here: https://github.com/xbmc/xbmc/pull/831 which supersedes this PR. The only reason it didn't hit master yet is problems specifically with the smb filesystem afaik.\n. I don't think this is the correct approach since this would always prioritize a DNS lookup over a NMB lookup right? Rendering the last one rather useless in many cases.\n. Doing DNS prior to NMB is certainly wrong. I think the one and only proper approach would be changing the NMB implementation so that it can handle multiple IPs.\n. IMO we should just only use NMB for SMB lookups and nothing else. I think this is also what most clients/servers do...\n. You cannot report bugs here and issues like this should be reported on the forum....\n. Ah yes, good one. I've changed it, you meant like this? Is the location (CApp) ok?\nI was also wondering whether the cacheDuration calculation in AirPlayerServer.cpp (line #926) is correct at all? I'm not sure about what cacheDuration should represent (absolute cache time?).\n. Thanks for the heads-up, I fixed it. Accidently didn't branch on master. \n. I normally do, but since this was so straightforward, I saved myself a few secs doing it directly in master ;-)\n. What's the point of having ms resolution for these functions? I would favor having all functions using seconds as dimension.. And now CApp GetTotalTime() uses seconds and IPlayer uses mseconds, which seems confusiong...\n. I do like to recommend to properly document this in CApp.h for GetTime/GetTotalTime etc. And make clear in CApp:GetTime & GetTotalTime etc. that we have convert from ms to seconds to make it more obvious in the future..\n. Thanks (for the effort) :-)\n. I meant @Memphiz, sorry ;-)\n. No issues here please. Use http://trac.xbmc.org or in this case first the forum to isolate the issue...\n. So that means we can also modify/cleanup CGUIWindowVideoNav::LoadVideoInfo() to take advantage of GetFileDetails(), right?\n. Would probably be better to seperate those commits into seperate PRs... Nice catch though (catched one myself before) :-)\n. Hey, I was the one that told him to split it into a seperate PR. I think I should have had the honours .... ;-)\n. Would help a bit to describe what the possible race is...\n. Everything is possible but without enough knowledge about both git and compiling/building I'd probably use my time/efforts for other things...\n. In principle +1. And if we don't, we should at least make clear to the user that those are auto deps being installed...\n. I've been waiting for this :-)\n. I don't know why you're issueing a pull request for the same issue over and over again, but it's annoying/makes a lot of noise since all developers will receive a notification about it, so please stop doing that.\n. FYI: You can always re-use a git-branch (and thus the PR) by resetting it with \"git reset --hard upstream/master\"; git push --force\". After that you can start all over again and the PR will automatically update...\n. Like Elupus says, I think this is the wrong approach. Perhaps this needs a little more thought?\n. I think we can consider this functionality an Xbox remnant where we had both mplayer & dvdplayer on the same platform and some stuff would only work with one of them. Since this is no longer the case on any platform the only thing the remains is either default video or default audio player...\n. An alternative could be specifying multiple players using bitmaks, eg. (DVDPlayer | OMXPlayer | AMPlayer). Obviously this does require us to modify the defines for those.\n. +1. Always wondered where this CStdString legacy came from...\n. Give \"git rebase -i HEAD~2\" a try and carefully inspect what the editor shows, it will explain you how to squash commits...\n. I'm on ALSA so I could test this but I need to know what to look for...\n. @Davilla: All those issues only on low-powered (ARM) systems like RPI/aTV?\n. Nice to have this finally (before b2) and since we don't really need Suspend for ALSA I think not using it there totally makes sense :-)\n. spiff != arnova last time I checked ;-)\n. Nice :-)\n. The changes look fine and could be useful too in case something like this happens again ;-) \nIMO it would still be nice if we could somehow have our REGEX's to handle URL encoded paths properly, or have CURL somehow detect the encoding scheme (which characters are encoded and which are not), in case we decode and (re)encode. AFAIK this only applies to stack://-paths. This is all beyond the context of this PR ofc, but still something to keep in mind.\n. Cool :-) Note that I kept this PR as a placeholder for the issue.\n. I think this makes senses but I think @jmarshallnz needs to sign this off...\n. Nice to have this fix in yes but since the lists will be quite long on a lot of systems I think having a select dialog (instead of a spinner) is mandatory.\n. When using a selection dialog: perhaps we could then also somehow mark the \"reliable\" devices or seperate them somehow (reliable ones on top, unreliable ones below) ?\n. @pieh: looking good. I think prefixing with \"unreliable\" is rather \"long\" and might be confusing for users? Like I said: Perhaps move those down to the bottom and suffix/prefix with ? or something?\n. About 1): I assume you mean CSong::embeddedArt, right? I think it would make sense to check for it in CMusicThumbLoader::FillLibraryArt(), agreed?\n. I think it's CMusicInfoTag::m_coverart what you mean? CMusicInfoTag::GetCoverArtInfo() returns it. Should it be the same as CSong::embeddedArt and/or should on prefer one over another?\n. I think I already got it ;-) Please check the above commits...\n. Yeah, but if I move it down then I must check again for HasMusicInfoTag(), so it doesn't seem to much difference. And I might as well stuff it in FillThumb() ?\n. @jmarshallnz : I also added the embedded art overrule logic. I think it's ready now...\n. When knowing the entire context, this totally makes sense ;-)\n. Shouldn't this be pushed/forced in by now?\n. Ah I see. Just wanted to make sure it didn't get forgotten again before beta2....\n. @jmarshallnz : I've updated the PR with your suggestions. Let me know what you think.\n. Looks good.\n. Yeah looks good: shouldn't cause any breakage :-) Perhaps it could only be written a little simpler?: http://pastebin.ubuntu.com/1425791/\n. Nevermind my pastebin, I misread the original code.\n. The problem is that we don't cache the stuff in sub-folders. So when you have:\n- dir/subdir1\n- dir/subdir2\n- dir/subdir3\n- ...\nand enter \"dir\", we check for folder art in all subdir's, which are not cached. In my case this is terribly slow as they have no (db) art assigned so XBMC will look for poster|fanart|banner.jpg existance in all of those subfolders. I probably should have explained that the performance problem specifically occurs when entering a new directory, since the backgroundloader is still accessing the Curl filesystem (although it's about to terminate), getting the new Curl directory is really slow. By caching the directories in the ThumbLoader thread, the directory access from the main thread doesn't have to wait for all the queued Exists()-call from the ThumbLoader thread.\n. Done. And what about the number of cached directories? Is 30 ok (what's the maximum amount of subdirs most users have) ? I think we can make it fairly large without draining too much memory and/or cpu.\n. Agreed, removed the commit that changes the amount from 10.\n. @jmarshallnz (or @davilla ): Can this be merged (be)for(e) Frodo?\n. Looks good: totally makes sense. As a side note I like to point out that IMO we should do a simular thing for music items (grab the duration from the stream).\n. @jmarshallnz : I mean for the case where we use PAPlayer, currently we don't update music items with the duration as read by the codec (eg. the functions are commented out in MP3codec). We just assume that whatever TagLib retrievies is ok, although that's not always the case. Unless you can point me in the right direction?\n. This well could be the cause of issue I reported here: http://forum.xbmc.org/showthread.php?tid=141224&page=22\n. @jmarshallnz : I've updated the PR. I also improved the logic in ShowShareErrorMessage() a bit so it better detects whether it's local or remote. If you're fine with it, hit the green thingy on the bottom...\n. @jmarshallnz : Can this be pulled in now?\n. Yup unless @jmarshallnz says no ;-)\n. Well my reasoning was that instead of silenty returning to root when GetDirectory() fails, with the chance of the user not noticing it, the user always gets an error dialog presented (and since the dialog text depends on the item's path, you need to pass it thus the change in Refresh()). I can remove this behavior, if you like, I don't particularly prefer one... ;-)\n. Ping @jmarshallnz \n. @jmarshallnz : The case I hit where I thought a dialog could be nice is when a user browses to a usb stick, goes to the homescreen, janks out the usb stick, and returns to the media-window. But agreed, I think we shouldn't have it in Refresh() so I removed it there. In case you think the rest is ok, go ahead and merge.\n. Pull requests are not supposed to be used to tutor people C++ and/or have it as a shortcut to get features implemented, especially if you can't even compile. This is what the forum is for. Just my 2c.\n. Note that those \"too many arguments\" warnings occur with all our libs due to the way we detect for gold linker syntax. I had this on my todo-list to properly fix it, but since it's a lot of work I didn't bother yet.\n. Just had a quick look, and the fix for the gold linker check seems rather trivial actually: https://github.com/arnova/xbmc/commit/ebea889c17f2341925b013061bb167e100bfa2df\n. Any objections against this?\n. @theuni / @elupus: Indeed checking the return code seems like a bad approach. I checked the output here of the Gold linker on my test system and fixed the grep expression accordingly. I think this should do it? Please verify.\n. @theuni / @elupus: Ping\n. @davilla / @Memphiz : Do you have any problems with this (for OSX)?\n. Well I tested it on Ubuntu 12.04/x64 with binutils-gold. Can you test what `ld -nostdlib -o /dev/null -llibbluray -Wl,-t`` gives you?\n. From what I understood the \"library name\" = \"so name\".so. If this is not case (which seems strange to me) we could change the grep regex into eg. \"/.*$2.so$\" or something?\n. Sorry, don't have the time nor the energy to be bothered with this again. Nor does it gain that much on my platform (Linux). It's hard enough to get proper response on PRs/Tickets as it is, let alone for ALL platforms.\n. @elupus / @vdrfan / @koying : I'm pretty sure this change is ok. Any (last) comments?\n. Please no issues on Github, use our Trac bug tracker for this.\n. Yup\n. @jmarshallnz : I've modified the PR with the suggestions you made. It's work in progress, and I'm not sure whether this is the correct approach. Let me know what you think.\n. Sure, but the advantage we have now is that you can pause a job between its DoWork() and OnJobComplete(). Not sure how much we gain with this though, you probably have a better overview. If there's little or no gain we indeed might as well handle it in PopJob()\n. @jmarshallnz : I think this is ready for merge as well?\n. @jmarshallnz : Cleanup as in remove the functions for type based pausing?\n. Removed all pausedType functions in e0ff1a49b640915628531baf4b1a2d3e8022a016.\n@jmarshallnz: Everything updated + squashed. Guess it's all ok now?\n. @jmarshallnz : Do you think this (is safe enough/) should be included for 12.1?\nEDIT: Reason I ask is since I see OMXPlayer on RPI completely lockup when trying to play a video while there are still DDS creation jobs running and this maybe a nice workaround for now.\n. @elupus: Please comment. Perhaps there's a better way?\n. Yup, I'm aware that file caching (didn't think about the other stuff you mentioned, but caching is imo the most important one) doesn't work with ffmpeg. And ideally we should fix this in LibCurl (which, I think, should be possible somehow) but I spent several hours trying to wrap my head around it but in the end couldn't figure out why it doesn't work.\n. @elupus: Any idea what the problem in LibCurl is that could be causing this? Apparently ffmpeg http is handling these just fine....\n. I just had the same idea: I'll try disabling multisession and see how it goes...\n. @elupus: I tried disabling multisession but that doesn't make any difference. Any other ideas?\n. Yeah but I didn't see anything funny in there (except where it goes wrong). This is a snippet of the relevant sections: http://pastebin.ubuntu.com/1610097/ . Let me know in case you need a full one.\n. @elupus: Had another look at the logs and compared it to what ffmpeg's http is doing. The problem is that we use Curl's CURLOPT_RESUME_FROM_LARGE and ffmpeg uses the method from CURLOPT_RANGE. I hacked this into FileCurl and that fixes the problem :-) See http://pastebin.ubuntu.com/1610215/ Not sure what the proper way to implement this, we need some logic to decide which method to use....\n. Closing in favor of PR2187\n. @elupus, this is a followup for PR2179. The silverlight streams now play nice with Libcurl although there's still something weird going on: after a seek, dvdplayer keeps seeking back in the stream causing the file cache to never fillup. You can see this here: http://pastebin.ubuntu.com/1611686/\n. Curl WITH Range Opt: http://pastebin.com/M4DGVm8X\nCurl WITHOUT Range Opt: http://pastebin.com/HQNY96Kv\nNote that this still doesn't completely fix seeking with Silverlight streams. There's still something strange going on in DVDPlayer. After a seek, vq never returns to 100% rather to 30% (where aq is 100%) and slow decreases until playback stalls. In the meantime ffmpeg keeps seeking back in the stream (as shown by the logs). As if after a seek there's all of a sudden some poor interleave/delay between a/v. I also tried the ffplay of OUR ffmpeg and that works fine with the same stream. Any ideas?\n. Well that doesn't explain why CURLOPT_RANGE partially fixes the issue, right? Also note that there seem to be 2 issues at play here:\n- Curl not handling RANGE/RESUME properly for redirections\n- DVDPlayer not properly handling the mp4/264 stream (the aq/vq / seek back issue I mentioned above), even when ffmpeg's http transport is used. No point in fixing Curl if the problem in DVDPlayer isn't fixed either.\n. @elupus: Had another look on what happens without this patch with one of my own http servers when playing video files and seeking. This has also works as it should. In thise case Curl debug shows this:\nCurl::Debug Range: bytes=45525318-\nCurl::Debug Content-Range: bytes 45525318-733485423/733485424\nSo apparently both (=content-range & range) get set when seeking is working properly. But somehow under certain situations (on redirects?) the RANGE-option needs to be set explicitly which is what is done with this PR. It therefor seems a safe workaround for the issue.\nI think this may be some bug or weird behavior (we don't understand) in libcurl itself, not sure. I've already debugged this issue extensively but this PR is the only thing that seems to remedy it.\n. @ulion : Since you've been doing some Curl stuff as well: Do you have any ideas about this?\n. The streams use session-tokens so I can't provide one directly. Just install this addon: http://www.rieter.net/ext/?uri=http://xot.hamans.com/net.rieter.xot-3.3.3.zip . In the addon go to \"Uitzendinggemist.nl\" (the one on top), go to \"Vandaag (....)\" and select one of the items in the list (they may not all work due to copyright restrictions outside of NL).\n. That's exactly the problem that is fixed by applying this PR/patch: seeking outside cache causes XBMC to freeze (or sometimes even crash). With this patch (and your cache patch in the other PR) all is well (I've been running a patched version on my HTPC for a few weeks now and that seems to working well).\nNote that I also did some digging in the Curl source and one thing I noticed is the fact that there are some places in http.c where RESUME_FROM is \"handled\" where RANGE is not which probably explains why this PR fixes the problem for me. I suspect some bug in libcurl causing RESUME_FROM data being reset (eg. with redirects?) where RANGE data is not. Just look for all \"state.resume_from\"-references in http.c and you'll see what I mean.\n. @ulion: Thanks for digging into this :-)\nI also had a look at ffmpeg's implementation in their connect/resume method resembles what CURLOPT_RANGE does so I'd favor to just replace RESUME_FROM_LARGE with CURLOPT_RANGE.\n@elupus: What do you think is the best approach to fix this?\n. Ping @elupus \n. @ulion: CURL_OPT_RANGE also works with FTP (tested it myself), so that isn't a problem. Only thing we need to decide is the best approach...\n. Will do. Then we can continue work on PR2229 :p\n. We could also simply detect response 502 and try without Range: bytes=0- the first time, right?\n. I think this makes sense. @jmarshallnz : What do you think?\n. Looks good. Can be merged in the next merge window (the one for February is closed afaik)\n. @cptspiff : Any comments/ideas?\n. Nice catch. Should remedy the issue I mentioned in PR2187. \nCan't we also make this work properly for our CircularCache somehow?\n. And they told me avi was a b*tch ;-)\n. @ulion: Could you please rebase this PR, so I can test the Curl/TLS issue with it?\n. Btw. can't we also make this work our Circularcache?\n. Looking good. It's up to @Elupus to decide whether we go for this approach or we want it handled by DVDPlayerInputStream itself.... ?\n. But again I also wonder whether we can also make this work with our circular-cache....?\n. @elupus: Any ideas yet? ;-)\n. Please rebase..\n. Since this PR could also be interesting for streamed filesystems like Webdav I also tested it with that. Unfortunately without any luck as seeking totally freezes DVDPlayer with some samples and/or it keeps seeking back in the stream causing stutter. Any ideas ?\nEDIT: This was with .avi stuff btw.\n. I know: I already hacked it in myself for testing with the results described above.\n. I'm still seeing some issues with it:\n1) It crashed on my a few times (where it never did with the old cache method);\n2) After eg. skipping forward or pausing ever now then the cache seems to grow and grow until the whole file is cached, which isn't proper behavior IMO.\n3)  As soon as you pause playback, caching is also paused, which shouldn't be happening, right?\n. 1) The problem is that it's hard to reproduce. The few times I've seen it crash it was on my HTPC. I'll try to reproduce on my development machine;\n2) Yup, also tested with the updated PR/commit;\n3) I've tested it with one of my MP4's stored on a Webdav server, so I can't pass a link. Did you check by looking at the OSD info screen DVDPlayer?\n. @ulion: Stacktrace/log of the crash after pause here: http://pastebin.ubuntu.com/5698725/\n. Oh and please rebase\n. Yeah, I also came to the conclusion the crash is in libtls/url BUT it only occurs with the patch in this PR, without it, all is well. It looks like that due to the pause the connection times idle, gets disconnected, and reconnects as soon as play resumes but then immediately crashes. I suspect the crash is may be caused by the double connection, which may cause locking problems in SSL/Curl again, we also had in the past ( @jimfcarroll may be able to confirm whether this is possible?). I could test this theory by pausing some non encrypted stream or test the SSL stream with the PR that contains the other fix you made for MP4 seeking. Any other ideas?\n. @ulion: I've an update about the issue. The crash occurs when the retry logic in FillBuffer() kicks in due to eg. a server timeout. Note this also occurs with non-https streams. You can simply trigger the issue by playing some file from an http server and then restarting the http daemon (apache / lighttp etc.).\nEDIT: BT of the Filecache thread http://pastebin.ubuntu.com/5708296/\n. I reproduced the crash on 2 of my systems:\n1) Ubuntu-12.10 i386 with libcurl-gnutls 7.27.0\n2) Ubuntu-12.4 x64 with libcurl-gnutls 7.22.0\nA few other observations:\n1) It doesn't crash if I disable double caching;\n2) It also doesn't crash when I comment out the calling m_oldState->Seek() in CCurlFile::Seek(). Apparently (re)using that once triggers the crash later on.\n. @ulion: You don't have Linux?\n@elupus: Any idea why this crashes on me?\n. Cool, nice catch :-) Didn't have much time on my hands this week to further debug the issue myself but I already suspected something like this since resetting the easyhandle also fixed the issue. Strange that it only crashed on Linux btw.\n. @ulion: Yeah seen github do that too with a couple of my PRs after doing eg. interactive rebase, although the order in the git log shows different.\n. @ulion: Thanks. The crash is gone now :-). Only one problem that still remains: after seeking + pause, the cache size becomes huge. You can simply reproduce this with following steps:\n1) Play an MP4 file;\n2) Skip/jump forward;\n3) Pause it for a while;\n4) Continue playback again and you will see that both the progress bar and the OSD info show a huge cache size.\nI assume this is caused by the cache swap done while jumping forward?\n. And there is nothing we can do about this cosmetic \"flaw\" ? For rest I'm fine with how this PR is working now. @elupus: Can this be merged in the next window?\n. Looks good, else it wouldn't make sense to pass success as an argument to CJobQueue::OnJobComplete()....\n. @jmarshallnz / @Montellese : Thanks for the input/hints. I've updated the PR, please review.\n@elupus: Rebased/cleaned it. Please have a look at the change in CDVDPlayer::GetStreamDetails() as it seems that has always been broken/never properly tested. Only other way I see to fix that is to either init m_State before Process() or move the storing of the streamdetails in CApp to SaveFileState, so they get stored after playback finishes.\n. @elupus / @jmarshallnz : I also fixed the last remaining issue by moving the storage of the streamdetails from CApp::PlayFile() to the SaveFileState-job. Strangely enough it was already there for DVD stuff but no-one ever bothered to merge it with the stuff in PlayFile(). Let me know what you guys think.\n. Will squash as soon as this is ready to be merged.\n. @jmarshallnz : Updated & squashed PR (and fixed another race in UpdateFileState()). Let me know whether everything is ok now.\n. @jmarshallnz : Is this ok for merge now?\n. @jmarshallnz : Updated everything as suggested, is this ready to go now?\n. For the rest: looks good.\n. Please add to 12.1 backports.\n. We can't simply bump the Curl version as on platforms that have native libCurl support, we use the version the OS provides.\n. Well since we can't remove the hacks for other platforms and there's always a chance of regressions, I don't see the real advantage of this. I'd rather keep the majority of platforms as close together as possible...\n. We should probably create something like rss.xbmc.org for this. This allows us to always have the option to redirect, if required...\n. Nice catch :-) My bad, thanks!...\n. @koying. Please apply this one for 12.1 backport.\n. With some hardware VSYNC causes eg. issues like high-cpu usage and such, so there is no \"perfect\" default :/\n. Broken drivers. Seen it happen with Intel for example (in combination with older hardware)..\n. @davilla: This supposed to be the PR for dadc48808e2281acf2359e666ca6e40b8a6201fa but I'm not sure it's correct this way? Never created PR's for subbranches before.\n. @davilla: This is the correct PR for Frodo for dadc48808e2281acf2359e666ca6e40b8a6201fa\n. @davilla: You forgot to pull this in for Frodo (12.1) branch... \n. No biggy but thanks anyway.\n. @davilla: Don't forget to pull this in for 12.2\n. IMO this is something that should be fixed by either using a stream filesystem (eg. webdav) or we should resurrect the PR where we implement filesystem caching for smb. Bumping vq/aq isn't a proper/real fix IMO..\n. Fine by me. But please also ask @elupus and/or @vdrfan \n. Just to chime in: I'm using an Atom N330 with Ubuntu 12.10 here and I'm still getting occassional buffer underruns with ALSA when playing with PAPlayer, especially near the end of songs when eg. stuff gets written to the log. I really think we need more buffering no matter what...\n. @DDDamian: Well it's indeed about 5 seconds near the end of the song but no change in sample rate/channel count is at play here since all my songs are 44KHz 2 channel MP3.\n. @elupus / @ulion / @koying : Let me know what you think..\n. @koying: What do you main by descendant? The webdav/ftp stuff?\n@ulion: I think the logging I added should only occur when things go wrong, as far as I can tell. I think it's inline with eg. our smb filesystem now. Please correct me if I'm wrong.\n. @koying: Then we're fine since those all directly use CCurlFile...\n. @ulion: Please have a close look at the PR, those conditions should all be catched (and not logged). Obviously we shouldn't log warnings on non-existing files, which is the case AFAIK.\n. @elupus: Perhaps just use AdvancedSettings.m_curlconnecttimeout for that then? It defaults to 10....\n. @elupus: And what about the log-stuff, are you fine with it being LOGWARNING as well?\n. @memphiz: What @Elupus says: it only logs when there are real failures, like with eg. smb, that's why there's some special casing implemented in the PR, like the 404 exclude but it's possible we need to add more in the future, we'll see. But I've extensively tested this and for the scenarios I could think of, it's fine..\n. Ah so potentionally rendering your router's firewall useless doesn't matter?! It's your first line of defense...\n. A GUI setting for this: no way...\n. Looks good, ran into this myself quite a few times with avi/mpeg4 stuff...\n. @uNiversaI : I think I understand why, the logic at the end of loaditem has always been flawed (which I just noticed now). I'll fix it up which should take care of it.\n. @uNiversaI / @jmarshallnz : Updated PR with another fix, please let me know whether it's ok.\n. @jmarshallnz : I updated the PR. It also includes a fixed for the automatic extraction of flags/thumbs which didn't previously work for items without a videoinfotag. Let me know whether it's ok now.\n. @jmarshallnz : Updated and squashed (as much as seemed logical). Let me know whether there's anything missing and/or needs reshuffling/squashing.\n. @jmarshallnz: Ping. Only thing I'm not 100% sure about is the approach I chose in IsVideo(bool). alternatively we could also use the infotag's filename to determine whether it's a video file...\n. @jmarshallnz : All updated/squashed. As you can see I've kept the 2 uses of IsVideo(true) as I really believe those are much safer/accurate to determine whether those blocks should be run. Especially if the surrounding code is ever going to be changed (again). Relying on the fact that hitting the HasVideoInfoTag() in IsVideo() won't happen due to other factors in the equation isn't going to do it for me, and I really don't want this to bite us/me in the tail again...\n. @jmarshallnz: If you put it that way I agree. I updated the PR, I do wonder whether you want to get rid of the commit that implements IsVideo(bool) now?\n. @jmarshallnz: Removed the commit for IsVideo(bool) + added doxygen.\n. I'm surprised we haven't noticed this before, are we sure this is really the issue at play here?\n. Agreed\n. Probably forgot to rebase on top of master...\n. @ulion: I used the fix the mentioned in the previous PR. Seems to fix all known cases. @elupus: You fine with this?\n. Seems like a useful options to have (for addons)....\n. I prefer false/true, it's in line with the other stuff we do....\n. Can't we do both?: 0/false and 1/true?\n. @elupus: Please let me know what you think. The code I changed was written back in the days when we didn't have jobs etc. for this stuff yet. Perhaps we could even drop the whole LAN check?\n. @elupus: Well nowadays we use file-caching which should make eg. ftp perform better with seeks. Furthermore for my specific setup the server is not in my LAN, but colocated. With my ~20MBit DSL connection autothumb generation seems to work fine, and since it's processed in jobs I can't see any real downside of it, right?\n. We could also create some as.xml setting that overrules the LAN check...?\n. And what if we would only do it for Webdav?\n. @ace20022 : Modified. Thanks for the heads-up.\n. Well, it's a feature IMO so let's merge in the next window...\n. @elupus / @ulion: Please comment. Hopefully fixes most of the remaining issues.\n. Well I'd rather do it the other way around since I don't like to depend on what (legacy) addons do. We could simply only set range-header when seekable, right (and always try/do resume like we used to)?\n. @alcoheca : Did that stream ever work at some point in time and if so: when?\n@ulion: ffmpeg's http implementation is also capable of handling all these streams properly by default, so I'd rather try to find some generic approach.\nBtw. I've updated the PR to only skip the range setting when the stream is unseekable now...\n. @alcoheca : And with the updated commit in this PR? If not: Can you provide the url once again?\n. @alcoheca : Shouldn't/can't we detect such stream upfront (like with the other UPnP hacks) and set m_seekable to false? Seems silly to do it the other way around.\n. @alcoheca / @elupus: Do you happen to know with which error code Curl fails in such cases?\nEDIT: Is it always CURLE_HTTP_RANGE_ERROR ?\n. @alcoheca / @elupus: Updated the PR with something that should fix the issue. Please let me know what you think about.\n. @alcoheca : Any idea what the http response code in that case is then? We could simply also check for that then...\nMy guess would be: 400, 406 and/or 416...\n. @alcoheca : Updated the PR once again, I think it should fix/handle your case properly now.\n. @elupus: Please review the updated PR. I think the implemented logic to retry without seeking  + have creadstate and cfilecurl communicate the seeking ability, is something we may want anyway...?\n. Oh crap, I know what's going on. SetResume() is ofc called by Connect(), the first time.\n. @alcoheca : Can you provide a debug log?\n(Ignore the previous comment btw.)\n. @alcoheca : Another fixup. Hopefully really fixes the problem. If I have some time this weekend I'll try to test it myself...\n. I'm fine with both solutions, although the advantage of this one is that it doesn't require any special action from the addon author. IMO have @elupus decide what the best solution is...\n. @elupus: Well yes, we need the m_bRangeAllowed variable since we want to retry to occur inside the readstate, where we don't have m_seekable available since that's in the CCurlFile class. Only thing we could probably dropping is setting m_seekable = m_bRangeAllowed and the other way around in CCurlFile, I guess?\n. @ulion / @elupus: Sounds good. I'll modify it\n. @ulion / @elupus: Updated PR.\n@ulion: It also seems like the http seekable=0 option never worked as m_seekable is being set to true AFTER ParseAndCorrectUrl. This PR fixes that too.\n. ah yes, I didn't think straight with the m_bnoseek. Didn't realise it was a member variable inited in the CCurlFile constructer\n. @ulion: Not really sure what you mean by the double ptr? Shouldn't we just handle ReadState's m_seekable like m_filepos/m_filesize etc. (copy it on eg. seek)? And I assume this is something you'll handle in your PR?\n. @ulion: This PR requires m_seekable to be in m_state. It probably makes sense to either first merge this PR the way it is now (after squash) and you rebase on top of that. Or you modify your PR including the shared m_seekable, merge that so I can rebase this PR on that. Either way: it's time to get this show on the road imo.\n. I agree with @elupus : I don't like back refs either, especially not in this case. Although m_seekable may strictly be some property of CCurlFile, there's more stuff then in CReadState where that applies for then, so that can't be a \"good enough\" reason IMHO...\n. @ulion: Well, you have a point there. Since we're deadlocked: @Elupus: will you veto the backref implementation?\n. @ulion: Please implement it the way you had in mind in your PR, so we can merge that in the May-window. I'll rebase this PR on top of that then.\n. @cptspiff / @jmarshallnz: You fine with this?\n. Nice. +1 from me. We really need easy access to eg. verbose logging of ours libs. As a bonus it would allow us to have users easily create debug logs including this stuff without them having to create/modify as.xml\n. Yup, since it's a crash/freeze-bug, it would be nice to have this for 12.2. @jmarshallnz: Do you like this solution or do you see a better approach possible?\n. Added #13919 to the list in the commit/PR. Considering the amount of reports and the severity of the issue, this seems like a must-have for 12.2\n. @jmarshallnz: I've tested it with a few scenarios here with both dvdplayer & paplayer and that seems to work fine. I also believe it can't get any worse than it was since this only changed the code that fires in case the queue of a new item fails.\nWould be nice though if some other devs/team-members can ack this assumption and/or test this. And again it would be nice to have this 12.2.... @davilla: What do you think?\n. @davilla / @jmarshallnz: I hope I just did ;-)\n. @jmarshallnz: Well I can confirm that the issue does not occur with DVDPlayer (probably since it simply doesn't have QueueNextFile()). I haven't tested it with Eden yet, but I'm pretty sure it wasn't an issue there (will do later, when I have the time, it's \"Koninginnedag\" here now ;-)). I suspect it's some of the changes in PAPlayer concerning either AE or the callbacks that caused this.\n. @jmarshallnz: Found the cause: https://github.com/xbmc/xbmc/commit/349ec408c33c250b614b68037fec4dd5de5ddcff\nIt is the AE switch for PAPlayer. Before that it used m_bQueueFailed to flag a failed file open/play in PAPlayer::Process. It got lost after the AE merge, and it's probably non-trivial to reimplement due to heavy refactoring at the time. Probably my fix is still the best approach, agreed?\n. @davilla: Frodo version for \"fixed: Streamdetails & resume-bookmark saving etc. for bluray folders didn't work (fixes #14288)\"\n. @elupus: Sorry about the lines, did this one in a hurry due to \"Koningsdag\" (King's Day) here in Holland.\n. @elupus: Btw. I added this to the 12.2 backport list. In case you don't want this for some reason, let me know, and I'll remove it...\n. For the rest: looks good.\n. ",
    "llyzs": "Yes it basically needs name,address,type and status. Address is indeed optional. I'm not quite sure how to add this UI without adding a new dialog, but it works for me though. Let me know if you have a better idea.\n. I took a look at Settings->System, but looks like all the things in it is static options: text boxes, check boxes, drop downs, etc. The Bluetooth GUI is basically a list of devices, which will be automatically added, removed or updated based on DBus messages.\nI think the current window that is closest to the bluetooth setting GUI is Settings->Addon Browser. I can work on that direction if you think that's ok, however although it's simpler it's still a new window.\nAny other thoughts?\n. I've merged with latest master and done some very minor updates, and it still works well. I think the backend code is still quite usable, however I might need to some help in doing a new UI to the way you expected, since I am kind of busy these days.\n. I've written a proper fix and rebase things into a separated branch 'bluetooth', as a result I've open a new pull request #369. Closing this one. Please continue review on the new pull request.\n. I had an attempt to add bluetooth audio integration for only myself here (hardcoded, not for upstream): https://github.com/llyzs/xbmc/commit/4c79509ac28b6dbd6faae697e53cc1e5e965ef34\nBut just a few days ago bluez has completely removed ALSA support (targeting bluez 5) and provide their own API call \"BlueZ D-Bus Audio API\" as replacement. It seems for xbmc the best option is to use this API directly, that is, a new sink can be developed on top of the BlueZ Audio API (AESinkBlueZ) and that should work better than using ALSA plugin or PA. Any other comments?\n. BlueZ Audio API documentation:\nhttp://git.kernel.org/?p=bluetooth/bluez.git;a=blob;f=doc/audio-api.txt;h=ca430fc224cb49375acf5d25f563d8ddc03c1bdb;hb=HEAD\n. ",
    "jimfcarroll": "You lost me. This prevents the use of de-initalized variables during destruction and forces the order of destruction to be natural according to use. As evidence that this certainly solves SOMETHING, several of the CRITSEC errors, which occur when someone uses a CCriticalSection after it's been destructed, have been eliminated, precisely because of this. How many other places does the use of an uninitialized object happen that we don't know about because we don't have code that checks? Also those CCriticalSections are not leaked as a result.\nI think you missed the point of reference counting by compilation unit. It is true that a particular compilation unit could have been uninitialized, and therefore have decremented it's reference count, but still have code that ends up executing and referencing the 'global.' That works fine. The reference counting simply determines the point in time when NO ONE needs the object anymore - and therefore it can be deleted. \n. As a quick additional note, I had a conversation with davilla about simply allowing the globals to leak - then we wouldn't have any issues during destruction. This is not an option on platforms where the xbmc app itself is run essentially as a \"plugin.\" Hence the need to get the reference counting right.\n. Looking at the code, I don't understand how my changes are related to that missing reference (not that they aren't). My Makefile.in change simply moved all of the static libraries to --whole-archive, and this is more flexible, not less. Looking at your fork the Makefile.in is the same as prior to my changes.\nxbmc.bin: $(OBJSXBMC) $(DYNOBJSXBMC)\nifeq ($(findstring osx,@ARCH@), osx)\n    $(CXX) $(LDFLAGS) -o xbmc.bin -Wl,-all_load,-ObjC $(DYNOBJSXBMC) $(OBJSXBMC) $(LIBS) -rdynamic\nelse\n    $(CXX) $(CXXFLAGS) $(LDFLAGS) -o xbmc.bin -Wl,--whole-archive $(DYNOBJSXBMC) $(OBJSXBMC) -Wl,--no-whole-archive $(LIBS) -rdynamic\nendif\nLooking at the code, the pertinent section of the ldt_keeper.c file is the same in both (besides the fact that there's not a single reference to a global in the .c file).\nAlso, this builds under OS X which seems to have the same block of code included and used in ldt_keeper.c. \nDo you know where that symbol is supposed to be resolved to?\nIs that library on the link line?\nIf so, does it appear after dllloader.a (I believe it would need to unless it's in the --whole-archive section of the link - stupid single pass linker:) )?\n. Fneufneu, I added a branch with a FreeBSD fix for you to test. It should build now. If it does it should address your crash-on-exit issue. Let me know. There's another possibility for the crash on exit problem in the CLinuxRenderer - which is one of the many globals I didn't get to yet. If it still crashes, let me know and I'll do that one next.\n. FneuFneu reports that this is fixed, and SO FAR, has alleviated the crash-on-exit issue he was experiencing.\n. Yeah - can't think why that wouldn't work. Think I should change it?\n. I'm not sure why this didn't auto-close when I pushed the change to the main repo. I closed it by hand.\n. Davilla. Looks like it picked up about 6 commits of yours and then I needed to resolve conflicts. Please make sure it looks ok to you.\n. I see 6: 1) f859993 (fixed, force autoreconf for libmodplug, libmicrohttpd), 2) dd69ac6 (fixed, simplify DllPaths_generated), 3) 97fd4fd (fixed, add missing ;), 4) 059671b ([osx] changed, use our download loc), 5) d8d8067 ([osx] update xcode project, still using lib/darwin/libSDL-OSX static,...) and 6) 2c2b2aa ([osx] fix app packaging errors, something is still wacky)\nThen my merge - 61686c0 (Merge and confict fix with davilla's latest osx-new-buildsys).\nThe xcode project didn't have any conflicts so I'm assuming it's exactly what was in your repo.\n. Davilla would like the efforts to change the osx build system and the normalization of external python separated. This request is being closed and will be resubmitted as two separate requests. First, Davilla's osx build system change. Once accepted that will be followed by the python normalization.\n. Nope. Just got rid of the custom reference counting, which I only wrote because I thought we were moving away from boost. Now the consensus seems to be that we're moving more towards it. I had this sitting out there for a while and so I guess I wanted someone to make a final decision.  :)\n. Am I waiting for more people to Ok this? I can go ahead and merge it whenever I have the requisite approval - I'm just not sure how many more 'oks' I need.\n. AlTheKiller, This isn't using SingleExit; bobo1on1 just borrowed the name because the Py_BEGIN_ALLOW_THREAD/Py_END_ALLOW_THREAD acts kinda-like that class was intended. The issue with recursion is specific to the way Py_SaveThread works and doesn't have anything to do with a recursive mutex. I'm in the process of fixing the Tls functionality which is 1/2 broken on Unix/Linux and totally broken on OSX. I'd prefer your future replacement (given you're working on a boost solution in a thin wrapper) if you're close to ready. Let me know.\n. They potentially recurse because of callbacks - which depend on the script developer. Certainly a recursion check is unnecessary in cases where what's being done while the threads are released is minimal. Depending on the script however, it's easy to find a stack trace that shows an instance of going in and out of python multiple times. I can guarantee problems if, for example, you use the Py_BEGIN_ALLOW_THREAD/Py_END_ALLOW_THREAD in every python api call.\n. Not that it matters but ... it looks good to me.\n. Something went wrong ... this was supposed to be a single commit.\n. Correct. They are currently not used anywhere (except in my SWIG branch) but bobo1on1 is looking for Tls functionality and until there's a replacement, I figured I'd fix this.\n. If we don't need it then it should be removed from the codebase to prevent it from being used.\n. I'm going to need this for my swig work. I'll merge it into that branch but I hope to replace it with something new by the time that's ready.\n. davilla and bobo1on1 both gave the ok for this. I'm going to merge it.\n. closed by hand .... again\n. Is this going to address the current issue that myself and Montellese have had? That is, if you start from scratch on windows, the build dependency for dvdcss fails.\n. As a result of removing the wrappers, the following things need to be kept in mind while writing scripts. Doing any of the following will make scripts incompatible with this change:\n1) Assuming the cwd is the root directory of the script.\n2) Assuming any os python module functionality (file or directory create/delete/access/read/write/stat/etc) that takes a path can have a 'special://' in it.\n3) Assuming python extention libs will automatically be loaded from the 'special://' path\n. This is pretty much ready to go. I'm looking for a few senior team member thumbs up and I'll squash a bunch of the commits and push it. Keep in mind this change has script compatibility ramifications.\n. Also, I propose removing internal python completely. External-python is already the default on OSX and will be on Windows once this change goes in; internal python can't even be built there without significant modification to the respective build systems. So the default for the Linux build is currently incompatible with the other platforms.\nAnd besides, we can delete a lot of code from the repository. :)\n. It compiles ... ship it! :)\n. This is ready to go. .... any dissenters? It's a fairly large change.\n. I think ideally you should exit the bottom of main rather than call exit from anywhere (and exit all non-daemon threads). In this case you would at least need to send a message rather than call 'exit' causing Application::Run to exit and check for a \"shutdown\" condition in 'main' rather than loop 'while (1)'\n. You could but you might be opening a can of worms. How many threads are non-daemon threads? How many non-daemon threads do we have control over (that is, how many were spawned in libraries)? How many daemon threads SHOULD BE non-daemon threads with special shutdown handling? If you did this then I wouldn't be too surprised if it hangs on exit until we get all of those type of issues worked out ... but maybe not. Give it a try :)\n. This has been tested on Linux and Windows (Debug and Release/ OpenGL).\n. This also works on an OSX Makefile build\n. I checked verified this builds under xcode (with the project file updates).\nLet me know when you want it pushed.\n. I just thought of a way to handle this that might make everyone happy. What if we made an attempt to recover from an error in setting the id in the Addon constructor by attempting to use the default id and issuing an ERROR in the log? This way old scripts will still run (though I'd prefer to force them to be upgraded) and we wont need to modify the default behavior of python to make it happen.\n. Yup ... just did it. Look at the second commit.\n. Thanks jmarshall! I'm a bit slow sometimes. Fixed.\n. elupus, anyone using os.getcwd for reasons other than setting the id are much more likely to run afoul of the inconsistency generated in your solution between the os.getcwd results and relative path file access. Is that something we want to encourage?\n. OK, My OCD will not allow me to move on until this is resolved. :-) \nCan elupus plus a few other senior members give their yea or nea to this?\n. Well ... what do you expect ... I'm a java developer :)\nWill check this is when I get a chance. I'm in scenic Kansas in a meeting right now. Probably be tomorrow.\nEdit - I'll change the name also.\n. elupus, I think your suggestion about blocking access to certain functionality is less controversial than your previous commit. It's not the same thing as changing the functionality as no one will make a mistake about what it's doing. At least I wont push back against you on it.\nI'm just wondering if there's not a better way to do it. I'm working on running scripts in a separate process space. This will entail some sort of an application that acts as a container for the running scripts. I think \"sandboxing\" that native application (if it can be done) is the right direction because everything done there will carry into all future scripting engines and scripting engine versions.\n. Actually I'm working on doing it for all plugins. Given that plugins do all of their GUI work through the existing xbmc api, it shouldn't be that hard. It's the current API I'm working on breaking out.\n. Ah. I continually blend the distinction. I meant \"non-native (non-binary) Addon.\"\n. Yes. The reason I put the PR out is because I don't like the fix. :)\nI was hoping someone might suggest a better approach. Moving a method to static and passing what is effectively the 'this' pointer to get around the idiosyncrasies of boost::shared_ptr semantics? ... yuck! \n. Ok. Didn't work exactly like I thought but it is a MUCH MUCH better solution. Thanks again.\n. Better? :)\n. Thanks WiSo! If no one has any objections I'll push this soon.\n. ok. I redid the work. elupus, what do you think of this version?\n. Decrementing the lock can cause interpreter code to run (the documentation says such) and in the most recent code I made exceptions for it. But is it really true the incrementing the lock can do that? Was it just decrementing that was the problem?\n. Ok. For the third time I revamped this fix from scratch. It now only releases the GIL inside the PyXBMCGUILock call. It is restored prior to leaving the function.\nwindow.cpp had a few explicit g_graphicsContext lock acquires so that is now wrapped in a release of the GIL and a restore.\nThe race condition with the counter is also fixed (removed).\n. Sorry. You lost me here. This change doesn't hold onto the GIL any more than before (less actually - though there are more transitions). It just releases it for whatever time it takes to grab the g_graphicsContext at which point it reacquires it.\nIOW the change holds locks for less time than before. Did I miss something?\nIt's only slower because of the Release/Acquire of the GIL that needs to take place every time the current API needs to grab the g_graphicsContext. It's why I resisted doing it for JUST grabbing the g_graphicsContext lock. That is, since I needed to release the GIL to grab the g_graphicsContext lock anyway, I wanted to take full advantage of NOT having the GIL and do as much as possible before reaquiring it. Your observations correctly noted that this can cause other subtle problems.\nThis is all a side effect of the current threading practices used in the code (global locks that users of functionality need to manage rather than the functionality itself). The new API I'm working on is structured differently (but I'm not addressing issues like the fact that clients of the g_graphicsContext need to manage the lock rather than the GraphicContext functionality doing the management).\n. Just to be clear, in case you misinterpreted the diffs, this change doesn't add any additional locking.\n. elupus, are you all right with this?\n. Thanks. This looks good. I'll test it on the different systems in the next few days and if it works everywhere I'll merge it.\nThanks again!\n. Hand closing pull request. Code pushed to master: https://github.com/xbmc/xbmc/commit/2b32c079efe85f0247d7b9318d21e93c21f029d8\n. well ... a minor point but, if you go with it, does it really require the introduction of another global?\n. BTW ... not sure if this comment applies but after reading through the comments above, does it makes sense to try to do something for startup via a plugin/shared lib? \nCode could be isolated and specific for the device. It wouldn't require pollution of the main codebase. It wouldn't require startup commands.\nAll it would take would be an appropriately defined abstraction in the main codebase and an implementations in a dynamically loaded shared lib.\n... or, am I way off in understanding what's being attempted here?\n. Heh, I thought I was the only Eclipse user. Though, I currently just use it as a gdb wrapper, I'm all for adding it back in.\n. Either way is fine with me. I didn't bother to update it since I thought I was the only one using it and I'm fine with having my own.\n. It looks fine as far as how it fits into the current and future plans for the scipting/plugin structure. I'm not qualified to comment on the functionality itself (though I don't see any problem there either).\n. So if there are no issues, I'll merge this in a few hours.\n. Closed by hand after merge\n. Other than that, I like it.\n. Though, I have removed many of them as part of my thread code refactoring. It would make it easier as far as merging goes if you waited until I merged my branch. I'm shooting for finishing it today.\n. No worries. I'm not sure what happened - it might just as well been me. At some point most of the commits were duped. I rebased -i and combined all of the dups. \n. @davilla, @wsoltys, I made some additional changes. I removed CSemaphore which will change the project files. WiSo: I also made a significant change since you last looked that includes removing all references to WaitFor*Object and replaced them with a CEvent. This is a significant change in that it touches many many files. A double check would be greatly appreciated. Thanks.\n. @blinkseb - can you tell me what the thread that has the lock at RenderManager.cpp:L506 is doing? What is it waiting on? I don't currently have a DX capable windows install to reproduce this with.\n. I think it's because the boost::shared_mutex is not recursive - it's \"upgradable.\" I need to change the CSharedSection so it models the prior behavior more closely in terms of the shared_mutex.\n. I figured out what's going on in the above stack trace. Notice, the second thread is trying to get an exclusive lock. At the same time the first thread HAS a shared lock already at \"XBMC.exe!CXBMCRenderManager::Present()  Ligne 600   C++\" but is trying to acquire another (and boost shared locks are not recursive). The exclusive lock attempt is preventing the second shared lock from being acquired while the first shared lock is preventing the exclusive from being acquired. \nThis is likely to fail on any platform. I verified this behavior in boost in a unit test on Linux.\n. @blinkseb, can you send me that video? I will be fixing the deadlock (should get it done today). I wrote a unit test that fails for the same reason as your video but it might be nice to have the video. No biggie either way.\n. @blinkseb, ready for a trial if you have a sec.\n. As far as I can tell, this is ready to go. I'd like an additional signoff by @wsoltys or @blinkseb since a bunch has been changed since I got the last Windows signoff.\nThanks everyone for your help and comments. I'm going to to the CThread class itself in a separate PR and then the thread library will not be part of any circular dependencies.\n. @blinkseb, just rebased to remove some temporary commits and squash some others.  Thanks!\n. merged by hand\n. Merged by hand.\n. Mistake. Will redo this PR\n. there must be a race condition on deleting the globals. Is there a way to get a stack trace when that happens?\n. The issue is here is that the UnloadAll is now called as a byproduct of shutting down and not explicitly in the Application::Process method. I'd like someone senior (like @jmarshallnz and/or @elupus) to make sure this new behavior doesn't break anything.\n. @Memphiz, I talked to elupus on IRC. He seems ok with the change but would like to know why IsLoaded was returning true after UnloadAll was called. That should probably also be addressed since this just hides that problem.\nAlso, he wanted the commit comment amended :)\n. I thought about that. Actually, these are mostly header file indirections via inlines. Also, correct me if I'm mistaken but, I think immediate PR doesn't doesn't add anything more. Do you think the performance is measurably different?\n. Thinking about this a little more, I think the only real effect of doing this is the addition of the 'this' which adds a single level of pointer reference indirection to the calls. The rest can be ignored given that these are mostly accomplished via inlines. \nGiven the nature of the calls that this effects, there should be no noticeable performance issues. The nanoseconds for the indirection pales in comparison to what's being done in the actual call (waiting, obtaining locks, etc.).\nThe more time sensitive calls (those that use spinlocks) were simply moved to a common assembly language implementation without the 'this' pointer indirection.\nWhat we gain is:\n1) Common, centralized, and small basis for all threading mechanisms giving the code more uniformity and more maintainability.\n2) Platform independence (or well defined place to manage platform specifics).\n3) a step toward removing the circular dependencies in the libs.\n4) Some uniform tests\n5) Ignoring comments and tests, about 2000 lines less code to maintain overall\nIMO, seems like a small price to pay.\n. This change moves all of the classes that directly rely on boost into a common place under a 'platform' subdirectory. The goal would be to simply rewrite the classes there in terms of a different threading library (like say pthreads) in order to have another implementation. The only place #include \"boost/threads/...\" is found is in that directory. \nWe can completely change the basis for the threading by just rewriting CCriticalSection (3 methods), ConditionVariable (4 methods), ThreadLocal (2 methods) in terms of a different basis. The default is 'boost' which will be available on most platforms but there's now a requirement to support platforms with much older versions of boost than what this was written against. For those I was thinking about doing a pthreads implementation (@topfs2's suggestion) ... or perhaps a slightly modified boost implementation.\n. Funny you should mention this. I just rebased it and am adding a pthreads implementation so that we can figure out what's going on with CEX.\nSo, the PR seems to be saying \"I'm not dead yet!\"\n. Yes. I was going to do that as soon as I refactored CThread - the last piece of the threading functionality I haven't touched yet. Then the tests will run based on the selection when you configured.\n. By your command. :)\n. Hand merged, closing.\n. I agree with malard on this one. As far as versioning goes 2.0 is certainly not equal to 2.0.0 in most (if not all) of the systems I'm used to working with (mostly those based on apache maven - http://maven.apache.org/). IMO to make the reverse true would be most non-intuitive to those familiar with version numbers.\n. 2.0 < 2.0.0 and therefore 2.0 < 2.0.1 (which, afaik, is fairly standard).\n. closed by hand\n. Well, not counting tests (+72 lines) that is. That's +54/-80. Ignoring tests that's net -26. :)\n. Yes. This is fixed in this PR.\n. This solution looks like it will work. It's somewhat bothersome that we're locking in the destructor (we were before this fix also) but this looks like it's the simplest solution to the problem.\n. Oh. Nice job ... I was beginning to think about a fix going down a different path but I like where you ended up more than where I was going. :)\n. Compiles on linux (with 2d373c68ff6261d63d30). looks ok. Push it when you're ready.\n. Very good thanks ... I'll commit this.\n. Merged by hand to avoid the merge commit. Closed manually.\n. Mistaken branch PR\n. Why, @jmarshallnz, what could you possibly be referring to? :) ... (the up side of being able to change history)\n. Cherry picked, so closed by hand. I need to figure out how to merge without getting a merge commit log message.\n. Cherry picked, so closed by hand. I need to figure out how to merge without getting a merge commit log message.\n. Cherry picked, closed by hand\n. Cherry picked... closed\n. Originally I only converted the ones that were clearly having issues with creation/deletion order.\nPersonally I think we ought to aviod adding any new ones. I've been toying with a means of creating a \"dependency injection\" container in C++ which should remove the need for globals going forward and make the code that would use them testable.\nThis looks fine.\n. I'm not sure why this is still out here. If it resolves an issue, you should merge it. If it doesn't, it's your choice (I'd probably merge it).\n. Well, it's derived from the target so it would be redundant. I could probably eliminate the select file all together; it would have made for a larger diff but it probably makes sense.\n. Actually, I remember why I didn't delete the select header file; it does error checking. I guess I could still get rid of it as without it you will still end up with an error if you don't define TARGET_POSIX or TARGET_WINDOWS somewhere.\n. At least until threads is a separate build ;)\n. I'm also thinking about other ways to handle the platform specifics. I'm open to suggestions.\n. This is now updated with the circular dependencies in thread.a fixed. Also, the tests no longer depend on boost threads or boost unit test.\n. Thanks Rainer. I cherry picked it and merged it in. It's here:\nhttps://github.com/jimfcarroll/xbmc/commit/862667942a830886e55240b38b49bde506820f09\n. Ha Ha. I just fixed it and overwrote the previous.\nEDIT: In other words, ignore the above link. This is now the change:\nhttps://github.com/jimfcarroll/xbmc/commit/b460d7e67274aa219e4d4a0fc5d9a20c29812b41\n. This most recent changes seems to have put back the stuttering in the startup of my test video.\n. No. Something else did it.\n. @wsoltys and @CrystalP. I made some dramatic changes to the windows project here and I really need some review and help with modifications. \nI began to break some of the xbmc libraries into separately buildable libraries inside of the project. This is so that I could begin to build unit tests against the libraries rather than against all of xbmc. You will notice there is also a test-XbmcThreads project which builds an executable.\nOne thing I think that should be changed is that UnitTest++ has been dumped into the codebase. I don't think we should do this. It should be a dependency that's built like the other build dependencies are. Unfortunately, I don't have access to (or know how to) add to the build dependencies for windows.\nIf you guys don't like the direction I took here, please let me know what you'd prefer. Thanks.\n. Ah Thanks! If you didn't notice I'm cleaning up this PR.\n. Ugh! Now I see what happened. Reordering the commits and squashing them 'undid' a bunch of the changes in Thread.cpp. I need more surgery. Thanks for pointing that out. It would have sucked to find it later.\n. Ok. This should now be right. Let me know if you see any other issues. Thanks again.\n. Done. Thanks.\n. I'm shooting to merge this tomorrow (last day for this windows). Please let me know if anyone has an issue with it.\n. See also: http://forum.xbmc.org/showthread.php?t=109915\n. Yes. I will do that at some point but this fixes the immediate problem.\n. I don't like the idea of using a dynamic type variable for stuff which is dynamic with the type. :)\nThough it's just my opinion, the use of CVariant inevitably leads to one of two things in the code:\n1) The underlying type is assumed based on the method it's passed to  - which means it's not really needed. So you might as well have the method take the proper type.\n2) The type is switched on. Which (probably) means your abstractions are not correct.\nThe pull request you mention seems to go in the opposite direction. Strings can be thought of as \"Variants\" since you can really put anything you want in them and force the users of the api to deal with marshalling. PR 394 replaces the use of the string with structured types that make more sense in the context. This (at least in the description) seems to replace one \"variant\" (CStdString) with another (CVariant) - I don't understand how this helps conceptually.\nJust my $0.02.\n. Don't read too much into my comments; they were just some high level reflection that might not even apply in your case.\n@Montellese: \"switched\" meaning you use a switch statement given the type. \"switch (variant.type()) { ... }\" That's probably an indication something is wrong with the abstractions that are defined.\n\"I agree that a string is kind of a variant type as well BUT whereas there are more or less standard ways to represent integers and such as a string there is no standard way to represent an array as a string. \" ... someone that works with JSON just typed that? :)\nI guess you're right. It's better than using a String. And I guess I can see how it can make sense in transports or serialization/storage, but I wonder how many uses can be eliminated with the judicial use of templates and overloading which would still preserve static typing. I seem to be able to build rather complicated systems in statically typed languages without resorting to a generic bag for untyped values - then again, maybe it's reflection that allows me to do that.\n@jmarshallnz - I'm not sure I could solve that a different way provided the \"given.\" Maybe a concrete solution would be too verbose. If you point to a specific section of code/functionality I could take a stab at how I might do it differently (if you think it's worth it).\n. Ah. I had thought it would build and link in VS2010 but would fail at runtime at the point you called InitializeConditionVariable. If that's not the case I need to rework this. But i don't know for sure since I don't have an XP to test with.\nSince we're really concerned about performance I thought it would be better to keep everything as inlines and switch on a simple boolean. The alternative is a double dereferenced function pointer (virtual function) followed by non inlined function call. Certainly, the code would be cleaner to use polymorphism but I didn't want to take the performance hit. We had a brief conversation about this on IRC yesterday.\nCan someone try this on Xp?\n. I'm sure you're right about the load time failure. I'll fix it.\n. Ok @CrystalP, This has been redone. I didn't use you (rather good) suggestion to use the array of pointers for a couple of reasons. First, I'm not sure it's fast than switching on a single boolean and executing an inline function. Secondly this is a stop gap until Xp is no longer supported at which point I will delete all of this and drop back to the nice and simple single implementation.\nIf you really want me to use the function pointer idea, let me know. Maybe I'll knock it out.\n. @CrystalP, re: building XP under Vista, I had thought about that, except it's actually more efficient to not use the function pointers so if you know you're building for XP, you can get better performance.\nI don't usually worry about performance since it's not usually an issue (people just tend to hyper-optimize at the cost of harder to maintain code - a trade off that is ALMOST never worth it) - but since this case is specifically a performance issue, I chose to err on the side of allowing optimizations.\nI tested the XP function pointer implementation by forcing the \"return false;\"   :)\n. @Albinoman887 I'll double check on my windows box at home in about 10 hours, but it worked fine when I checked it in :) . Did anyone else try it? \n. Don't spin your wheels. I'll take a look tonight. I don't have access to my Windows box at work.\nEDIT: It's possible I didn't push my last changes. Let me look.\n. It looks fine. I don't have any problems on Windows 7. Did you define XBMC_HOME?\n. Nevermind. I see. The release build seems to be having a problem.\n. @Albinoman887, ok fixed. Idiosyncratic Windows BS. You'll need to re-pull it as I did a forced push.\n. Make sure you follow these directions: http://wiki.xbmc.org/index.php?title=How-to:Compile_XBMC_for_Windows\nIncluding: \"Running/Debugging XBMC from Visual C++ Express 2010 \"\nIf you're building the release build you'll need to copy the .dll's into the release folder rather than the Debug folder (they will be in the same place).\n. Cool. I don't think anyone has tried it there. I tested the XP code path on Windows 7 but I don't have an XP machine that I can test it on. If you want to give it a shot, let me know how it looks.\n. No. He just doesn't like the way the code is currently structured. I'll change it when I get some time.\n. @CrystalP, I'll change it. I'm just a little busy these days (if you saw the message in IRC this morning you can probably guess why). I should be able to clean it up over the weekend.\n. @CrystalP, ok, I took a look at this. I can't think of a way to do this with two sets of pointers to functions since the functions need to take a value (in the vista case, of type CONDITION_VARIABLE) so I'd need to switch on the IsVista flag anyway. I see four alternatives:\n1) Leave it the way it is\n2) You can give think it over and see it you can come up with a way to use two parallel sets of pointers to functions that will work without simply wrapping the underlying Vista calls (at which point I might was well do (3))\n3) Use an abstraction\n4) Leave it the way it is but delete the TARGET_VISTA option and put the TARGET_XP (or FORCE_XP_IMPL, or whatever) in initial selection logic.\nLet me know what you think.\n. @CrystalP. Ok, this should be more to your liking.\nI couldn't run it because I'm currently failing the setup when trying to fetch http://ftp.osuosl.org/pub/xbmc/build-deps/win32/fontconfig-dev_2.8.0-2_win32.zip  (should the protocol be ftp?).\n. @CrystalP: made a couple other small changes. Reformatting, removed the #if that was remaining in Implementation.cpp, and added Implementation.cpp to the xbmc/threads/platform/win filter as a header file.\n. Actually, isIsVistaSet and isVistaSet is guaranteed to be set prior to main since it's set as part of the globals/static initialization (Implementation.cpp l66). So unless there's a system where there's multi-threaded initialization of the bss (which I know of none or we'd have more problems than just this) it should be fine.\nThe cosmetic change has been made.\n. Ordering doesn't matter since it works if a condition variable is created prior to the bss of compilation unit Implementation.cpp being initialized. However, it can never be unset prior to main being called because of the static initializer. The only thing that needs to hold for this to work is that the static initializers are not called from multiple threads. There are no systems I've ever heard of that do this and if there ever where, this particular problem would be the least of our worries. See the long description in utils/GlobalsHandling.h for more info.\n. Hey. New MIPS atmomics. How about fixing the Linux AtomicAdd and AtomicSubtract return values.\n@TheUni: Do you want to get the tests running for these?\n. Yeah ... that was a nudge to phi :)\n. As for the tests, I have them separated out from boost now. I need to do a little work on them yet, but I'll let you know this weekend when you can give them a shot. Of course you'll need to run them on a mips machine.\n. WiSo, sorry about the miss-ping (if you check).\n@wsoltys is who I meant. ^^\n. If that's the case I'm going to simply add a destructor to clean up the locks then check this in. Is everyone Ok with that?\n. @arnova, I copied the code from an example and on my system HAVE_GCRYPT is true and it executes. I'm not sure how else to verify it since it's used indirectly anyway.\n. I have a code change that includes a simplification and cleanup (previous to this the locks don't get cleaned up) I didn't get a chance to check in this weekend. I'll do it shortly.\n. Ok, one more review would help.\n. Ok, I'm putting this in. Please let me know if it addresses the problems we've been seeing.\n. This commit looks uglier than it is. I basically only added 3 try/catch blocks to FileRar.cpp (plus limited the scope of the rar.hpp include to make sure the methods weren't being called somewhere else). The problem is, two of them surround a larger chunk of code that changed the indentation. To review this just look at the source file FileRar.cpp and just find the three try catch blocks. The code in the blocks wasn't modified.\n. Haven't tried it yet but really nice feature. +1\n. Memphiz, Nice catch. This looks good to me. I've been in this code enough, I should have seen that before.\nI also wouldn't mind a non-polling solution to this.\n. Actually, I think ultimately \"cross-language polymorphism\" (a SWIG phrase) should handle this. If you have an subsystem built around invoking abstract methods on (for example) a Player, I'm not sure why you'd want to force that functionality, plus one that provides (say) notifications of changes to settings, onto the same mechanism simply to cross the programming language barrier.\nI'm working on resolving this so that there wont be a need for the boilerplate code you had to cut-n-paste but it will work the same way you intended (there will be a class in python that you can inherit from, but invoke the abstract (virtual) method from the C++ side).\nDoes that help?\n. Oh yee of little faith. ;-)\n. LOL! ...  :-)\nIt's just my opinion. I think the established pattern in the Player is a good one. Once I'm done it will be easier to maintain the pattern than it is now. However, if you want to do something using generic notifier, that certainly wont break going forward.\n. Looks like I'm in the minority. I actually was going to use the announcer as a counter example but I deleted the text before I sent it. :-)\n. Well, in general I prefer polymorphism to switch statements. I see this as the same distinction (actually - it's exactly the same since that's pretty much what you need to do with the notifications). <- short enough argument  ;-)\nAs for Montellese's concerns, the c&p will go away when I'm done (I'm making good progress by the way). My only problem is using a general notifier like the Announcement stuff couldn't be an interim solution once someone starts depending on it.\n. Oh, one other thing. I think the JSON-RPC api should be identical to the python api (or vs. vrs.). Which should also be something we can do when I'm done.\n. Yes. I'm sure that's true. What I really meant is that the code that executes whether or not called from python or JSON-RPC should be the same code. ... maybe something like this: https://github.com/jimfcarroll/xbmc/tree/swig-groovy-addons/xbmc/interfaces/native ... minus all the \"AddonAddon\" redundancy ;-)\n. IMO (again), just add a method per notification like on the Player\n. @Montellese, yeah, except the new code is functionally equivalent. There's a refactor of the code on the way, but not a redesign of the API. That would probably be the best thing to do but it's out of my area of expertise.\nEDIT: That's the problem with having someone maintain the plugin system that doesn't write many plugins ;-)\nEDIT2: Although, if anyone wants to take a crack at it, I'll work with them on it.\n. I reviewed this the other day and, in short, it doesn't. ;-)\nIn a week or so I was hoping to drag Montellese behind closed doors and beat him into submission ... I mean ... discuss future opportunities :-)\nSince I'm converting the entire Python API to native code with a lightweight, code generated bridge to python, there's got to be a better way to make seamless calls between the two of them (JSON and Python). \nBut even if there isn't immediately it wont be too difficult to retrofit this into the paradigm I'm working on. The new python class (JSONRPCClient) would become a non-python specific native addon class (with a generated bridge to python) and the code currently being submitted will actually end up being simplified.\n. No. In a month or so I should have a pull request ready for a refactor of the entire Python addon system. It will include changes to what you're checking in here but it should be functionally equivalent.\nIn the longer run, I was hoping to merge Python and JSONRPC as much as possible but I think once the refactor is out there it will be more clear to everyone how that could work.\nIn a week or so I'll have my branch working and I was hoping we could spend some time going over it and see if you end up agreeing with me about a potential future merge.\n. I don't think that's quite right. On windows SystemTimeMillis can wrap. If you're trying to check that a certain duration has gone by use the EndTime class in threads/SystemClock.h - the comment has an explanation.\n. Nice!\n. This will just encourage them.  :-)\n. Ok @jmarshallnz, The issue you pointed out about holding the GIL over the StartModal has been resolved. Since I squashed it I lost your original comment and my nice little rant :-)\n. Great. Thanks for the review.\n. It looks ok. Two comments that I don't think you need to do anything about right now: 1) Ugh! More dynamic typing. 2) GilSafeSingleLock is a hack that doesn't really work right and should be fixed differently.\n. Given it looks like I might be resurrecting my codegeneration efforts, it would probably be easier to handle if these were separate methods. However, they could be implemented with straight overloading. That is, an Window::AddControl that takes a list and a Window::AddControl that takes an individual control. So it should be easy to manage.\nIOW, it's fine.\n. I always thought jmarshall was just an alias :-)\n. I didn't mean your use of GilSafeSingleLock was a hack, I meant, GilSafeSingleLock itself is a hack (I wrote it a while back). It doesn't work because it still hold both the gil as well as the other lock at the same time (it only releases the gil in order to obtain the other lock, then it grabs the gil again). It can't leave the gil released for the duration of the other lock because most of the code it protects mixes Py* calls with code that requires the gc. THAT'S what needs to be fixed (the code mixing).\n. Looks good. Thanks.\n. Yup. Better than the previous. \n. What's the screensaver have to do with the settings? ;-)\nAmet, nice job! I guess you couldn't wait the 2 months ;-)\nIf JSON-RPC is going to use the Announcement stuff then using the same mechanism would probably be preferable.\n. Actually, Don't get me wrong. This looks great. I'm hoping we can resolve a lot of the redundant code between JSON-RPC and Python (if there is a lot) once I'm done. I'm making progress but there's a lot to do.\n. Nope. Don't want to hold you up. Go for it.\n. Good idea.\n. Ok. Separated.\n. Ok, cleaned up the native addon redundancy. @cptspiff - this should be less redundant redundant\n. Thanks @garbear !\n. The ModuleAddonXXXX.h/cpp files only hold the non-class module methods. The addon module doesn't have any. The module definitions are in the xbmc/interfaces/swig directory and end in a '.i' which is a SWIG interface file. There's one per module.\n. Hey @Montellese,\nWhat do you think of this: http://msdn.microsoft.com/en-us/library/e85wte0k.aspx\nand the reference to \"Custom Build _Step_s\" here: http://msdn.microsoft.com/en-us/library/dd293663.aspx\nIt looks like you can add a \"step\" to a build and not necessarily override the entire build rule. I can play with this over next weekend.\n. Maybe that's a step in the overall build process. I'm not sure. It does say \"The step can specify a command line to execute, any additional input or output files, and a message to display. If MSBuild determines that your output files are out-of-date with regard to your input files, it displays the message and executes the command.\"\n. Ok. That should fix it.\n. Thanks everyone for all of your help. \nEDIT: Moved the TODO List into the main message at the top. I'll keep it up to date.\n. Oh!\n8) Update the License text.\n. The crash is unrelated to the nature of my changes. It's because XBPython compilation unit must now be initialized later than the Announcement code and therefore the static call to CAnnounementManager::AddAnnouncer called from the constructor of XBPython (which is called when the XBPython.o compilation unit initializes due to the global g_pythonParser) is executed prior to the static elements (one of which is a std::vector) have been constructed.\nThe fix is ugly.\n. Ah. No problem resurrecting the PR. If you're right then the fix is trivial. I didn't really want to release the GIL for short lived method calls that quickly return to python and the Player.play method should kick off the player and return. We can try a fix if you can rebuild the code. Can you add a \"DelayedCallGuard\" to the top of the playStream method in Player.cpp (you can find an example of a DelayedCallGuard in the Player destructor). Let me know if that resolves your issue and I'll put a fix in.\n. @mazkolain, That's exactly right. You'll need to help me reproduce it. I guess we should move to the Developer forum. I'll look for your post. You'll need to explain how to reproduce it. Thanks. Sorry for the trouble.\n. I think this should go. I have some work I'm adding to it that I can submit this weekend. For a preview it's here:\nhttps://github.com/jimfcarroll/xbmc/commits/thread-cleanup\n. Oh ... and my additions will address CrystalP's comments so we wont be adding back the circular dep\n. Ha ... I was waiting for you to merge it. I'll do it now.\n. I just wanted to understand why. You're right, I should have committed this and then asked.\n. @CrystalP , can you try this out. I got it working on Windows. For some reason on Windows I have no sound but I don't think it's related to anything in this PR.\n. Hey, @CrystalP . I was hoping to get this in for June but I want to make sure it gives you what you want. What do you think?\n. Ok. I'll do it in the next day or so.\n. I'm going to merge this, tomorrow, the 9th. If anyone has any issues please let me know.\n. Ok @Memphiz, I didn't realize your PR was against my repository until after I merged this. So I hand merged the project files and pushed them to the main repository. Please let me know if there's any issues (since I didn't build them myself).\n. Ok. Checking this now. Maybe there was an indirect conflict.\n. The Makefile is broken. Fixing it now.\n. Ok. This commit should have fixed it:\nhttps://github.com/xbmc/xbmc/commit/327710767d2257dad27e3885effba1d49d4557f0\nLet me know if there are more issues.\n. If you're in there (since I only load up the windows project to double check it) can you fix it and check it in? If not, let me know and I'll take care of it. I don't think this warrants a PR since it's a minor fix.\nThanks for taking a look.\n. @jmarshallnz , yes. It has implications. But I don't think it will pose any problems.\n. The code looks OK to me.\n. Yes. Those tests always failed because the assembly language for a certain platforms doesn't return the correct value from the call. If you're good with assembly, feel free to fix it. :-)\n. @amejia1 , I fixed the OSX build issues and cleaned up some of the complexity due to the templates that were in the thread tests. Cherry pick the top commit from here: https://github.com/jimfcarroll/xbmc/tree/testsuite-fix\n. @amejia1 , BTW, this is the first time I've taken a close look at what you have here. Nice job. I like the direction.\n. Looks like it's all within the priority code - which I'm not an expert in. But it looks fine to me. Go for it. If it's a major bug I'm not sure it needs to wait. @cptspiff - you ok with this going in now?\n. My concern here is whether or not you considered that calls made from these methods assume the GIL is held and not just what's visible here. For example, you are now calling \"new CGUIPythonWindowXMLDialog\" without holding the GIL. Did you check that all possible call stacks resulting from all calls where you no longer are holding the GIL nowhere assume you were holding the GIL?\nThis is why I did it the way I did in the first place. Not that I think it was the right answer (The right answer is in my PR).\n. I tried to take a quick look but didn't get far enough to understand more than what you're trying to do. I should be able to take a closer look over the weekend.\nJust so you know, when I was working with CrystalP I added the abstract Exception handling so that you could plug in logging (minidump, etc) in the LogThrowMessage of the Win32Exception. I never heard back from him as to whether that worked for him.\n. I want to do the same thing. where is a good place for the divide by zero? \n. Thanks!!!!\n. Hey. Thanks for the fix. But I think the problem is with the codegenerator. It's too brittle if it can't handle the original valid c++ code. I have a fix for it in the type check code in the swig.cpp but I want to write unit tests against it. This isn't a standard part of the API so we should be Ok until I get that done.\nThanks. Let me know if you agree.\n. I'll leave this open as a reminder until I get that fix checked in. Thanks for the commit.\n. Ok. This should now be resolved with this checkin: https://github.com/xbmc/xbmc/commit/8df5ef8ce3f136fe7f2e4ee2066f8a885338d668\n. I reviewed this and it looks good to me. I see no reason why it can't go in the October window.\n. If this has no dependencies on other things in xbmc, can we move it to 'commons' rather than utils?\n. If we're removing CStdString (or making it an implementation detail of StringUtils included only in the StringUtils.cpp) then that dependency goes away.\nThe only other one I see is on XBDateTime and that can be fixed by moving the time format call from StringUtils to XBDateTime itself.\nThen we can eliminate all dependencies on CStdString (if that's what's wanted) in the rest of the code base in one shot.\nJust a suggestion.\n. What's the criteria for pushing the green button at this point? Are we too close to freeze for this?\n. Oh. I see you assigned it to October. I guess that means I can go with it?\n. Was told on IRC that assignment=consent :-)\n. Congratulations BTW. You're the first person to brave the groovy template that generates the python code. :-)\nIt will probably work right now, but having a typemap insert a 'return' implies it knows too much about how it's going to be used. So, for example, if I restructure the method code and expect to do cleanup work before returning from the method then all of a sudden my code can be skipped.\nKeeping the typemap so that it either does it's job, or throws an exception, keeps it well defined and potentially relocatable.\nThat said, I don't think I thought through the implications of a failed conversion well enough and I need to better define what typemaps should do and not do and make sure the template works with them correctly. So thanks for pointing it out.\nFor reference, here is the PR that should fix your issue: https://github.com/xbmc/xbmc/pull/1516\n. This should be resolved in https://github.com/xbmc/xbmc/pull/1516\n. Nice job. \nThe problem is that you've overloaded the constructor and both are visible to the scripting language. This isn't allowed (sorry, can't do method overloading yet). See http://wiki.xbmc.org/index.php?title=Category:Codegeneration#Current_requirements.2Frestrictions\nYou can fix this by hiding the new constructor from SWIG by surrounding it with '#ifndef SWIG/#endif'. Ping me when you get a chance. Sorry I missed you earlier.\nIt may fail on the return value next. If it does, let me know.\n. Do you prefer to use a tuple like you did in your previous implementation? That should be easy (I would just need to extend the Tuple<> type parameters length).\n. Ok. I fixed this a different way. Callbacks to python historically only execute when you \"Pulse\" the window in the modal loop with a \"PulseActionEvent.\" This happens as a side effect of calling \"OnAction\" which is why it worked when you put that call in or when the second action event (onKey or extended mouse move) even occurred.\nI changed this. Now, when a window is in doModal loop, it will still process python callbacks without the need for a PulseActionEvent. This MAY have further reaching consequences but it seems like the right fix.\nThe code was added here:\nhttps://github.com/xbmc/xbmc/commit/33c04d0d5d8fd89c77708da6f5af25bc5a4b73b1\nAs a result I'm going to close this PR. Feel free to respond here if you have any issue with this.\n. I can do Windows this afternoon (in about 3 hours) but can someone fix up xcode for me? If so I'll merge this today. Thanks.\n. Not sure why it might have been a problem. The button was green. In any cases it's rebased.\n. @jmarshallnz if you get a chance, a quick review would be great. Thanks.\n. I'll do a count to check. I think 2. I was also worried about a hang there. Maybe I'll limit it to like 10 and log an error if it doesn't finish by then. I think it just results in a cyclic garbage collector invocation pass so i suspect it just depends on the referencing depth. The time it takes isn't noticeable on my machine. Seem to run pretty clean. \n. @elupus, I agree. It doesn't make a lot of sense but it's pretty easy to reproduce. You can see deallocs of WindowXML object called, not while the interpreter they were created from is open, but when a later one is opened. Maybe python handles native objects differently than python objects.\nIf you want to reproduce it I can send you a test script. Catch me on IRC. I'd love a better way to do this.\nI found a way to invoke the gc from within python but not natively. I suppose I can run a string in the interpreter and see if that also works.\n. @elupus, @jmarshallnz, I made a few changes. You can easily verify the original problem now if you comment out the loop that calls Py_NewInterp/Py_EndInterp (and the subsequent debug log). An error message will be printed that details any API classes that were created by running any script, still left around after the interpreter running that script is closed. Just open the \"Forum Browser,\" back out of the script, and look in the log.\nThese messages go away when you leave in the hack.\nIf you turn on trace logging in the API you'll see that these leaked windows actively participate in the windowing event loop forever (or at least until another script is run where the Py_NewInterp ends up cleaning them up). This happens in the pre-codegenerated version of the code also - we just never noticed (if you add TRACE messages to the old codebase you can see the same behavior).\nI also:\n 1) Limited the number of correction attempts to 10. \n 2) Changed method names so they made more sense.\n 3) Moved some of the (formerly) 'inline' calls that got somewhat large after this change into the .cpp file.\n 4) Tightened up the logic that tracks the API classes instantiated by a particular script.\nLet me know what you think.\n. Eye-sore removed. How about now? :-)\nThe code isn't that much different in the XBPyThread class than what it used to be. I could do the same thing in the pre-codegenerated codebase if it would help. Like I said, I'd like a better solution to this than what's in this PR - if you can think of one I'll take it.\n. Sorry about the other 2 posts. I was logged in (and then re-logged in) with the wrong account. In any case, this can go in but it's possible my ultimate fix may slightly change the API. I didn't get that change done in time for Frodo but it's here: https://github.com/jimfcarroll/xbmc/commit/53f15d29fc57490620f3b4599fe56ff12f0bbb40\n. I addressed this prior to Frodo but the change was (rightly) deemed to large to go in.\nI haven't had a reason to support multi-param typemaps but I guess it makes sense in this case (since this kind of thing is what they're for). Instead I have a memory buffer class which encapsulates the void* and length parameters and a typemap in terms of that. Here is the commit: https://github.com/jimfcarroll/xbmc/commit/53f15d29fc57490620f3b4599fe56ff12f0bbb40 \n@ulion, what do you think?\n. Oh. In case it's not obvious, in python the memory buffer can be either a string or a python bytearray and it should work the way you'd expect.\n. In short: http://wiki.xbmc.org/index.php?title=Category:Codegeneration#Why_not_simply_use_SWIG.3F\n :-)\n. https://github.com/xbmc/xbmc/pull/2359 ... I need @bobo1on1 to make sure RenderCapture works with this. \n. Yes. I have the fix for this but it will need some testing.\n. How does this look: https://github.com/jimfcarroll/xbmc/commit/58a53c906e2667a527ef94e5f80426f290fa51d6\n. I'd rather not have the API change after 12.1. It's not right in 12 so it shouldn't be used anyway but it should be right in 12.1. I'm less concerned about the particular implementation than a consistent API.\nPlus, I think the other one works, there's just some suggestions you made. All I need is someone to verify the render capture functionality.\n. Well, I think my PR is in acceptable shape to go in. I will have the last few things fixed today (within the next 24 hours). I will list it on the forum thread.\n. As pointed out (thanks @ulion) This simply wont work. I'm going to redo it in another PR.\n. @ulion, does this look better?\n. Yes. Except this way it doesn't really matter what happens. For example, multiple changes could take place to the underlying list (rather than just assuming that the only change would be for the currently executing callback to remove itself from the list). This code is less brittle than what you suggest, and the cost (copying the list) isn't that high.\nLet me know if you disagree. \n. > if in the callback, the moniter/player add another moniter or player, \n\nit won't be callbacked since you used the temp list, but this could be\nok if we mark it as a rule.\n\nYes\n\nif in the callback, the monitor/player remove other monitor/player, after the current one in the list, \nit still get called, it seems not good still, you may need to check whether the iterator one is still in \nthe original list?\n\nSame as above, I guess. If it's in the list at the mark, it gets called. In general I need a more robust means of handling the state of objects that have been decoupled from the scripting language but may have a temporary existence afterward. The goal is for these objects to eventually be manipulated directly by the main system rather than through XBPython. So I think I will fix that.\nIn that case the objects need to be manipulated using smart pointers but decoupled from python when the *_Dealloc is called. That's fairly easy to do with the codegenerator.\n. Actually, what I'm suggesting is making it safe to call on it after it's been removed by not calling the Unregister from the destructor but calling it from the _Dealloc.\n. Well, if the 'mark' for calling it is the copy of the list, then after the unregister, the callback can still execute. The problem with it executing after an unregister is because the unregister is done in the destructor. That's what I would change.\nHowever, I think I will take your suggestion to check the original list. I can make it optimized by flagging a change and only recheck the list if the flag is triggered.\n. Ok @ulion, Let me know what you think of that.\n. @ulion, ok. How's that?\n. @ronie, yes. It does that. The API is wrong and needs to be changed. You can convert the bytearray to a string. This was the original intention and IMO the current API was not official.\nIf we must keep it BW compatible then I need to add another method. \n. This looks good and is certainly the right way to do it. Thanks.\n. Ok. I just want @Montellese to review this when he's back next week (he reworked all of the mouse/gesture stuff for android). I hope you're ok with that.\nOther than that, I'm fine with this.\n. @jmarshallnz , what do you think?\n@nuka1195 , could this be done as an option on a DialogProgress? It seems that might result in many fewer copied lines of code.\n. @nuka1195, do you still have your original commits? If so, can you point me to them?\n. nm, I see you didn't rebase. The commit is at the top. Sorry about that.\n. Ok, I took a look at this more closely and I don't believe we gain any real efficiency by combining these 2 classes. The main problem is that the xbmc gui classes (CGUIDialogProgress/ExtendedProgress) are not closely enough related. If you roll this back to your first PR I'll put it in.\n. @nuka1195 Can you just squash these commits down to the original? If you can I'll get this in today.\n. In either case isn't it just a matter of changing the classname in the script?\nI took a shot at doing this myself. Based on the fact that there's no real relationship between the core progress classes, most of the code needed to be written independently for each progress dialog type anyway. So it seems to be cleaner to just leave them as separate classes in the 'legacy' lib.\n. I still don't quite understand. The DialogProgress.create/update methods would be completely independent of the DialogProgressBG.create/update. They would have their own code because the underlying xbmc core dialogs aren't related close enough to use the same code for each. Therefore, I don't see what's gained by having them related in the legacy lib.\nSince they're really independent then you're free to make the interfaces more intuitive to each rather than force the same signature on their create/update methods but assume that the parameters have completely different meanings (label vs dialog id) in each.\n. ha! I was about to push the button when you message came through. I forgot we're on a cycle. When is the next window?\nAnd, I'm fine with this. It looks good to me.\n. I'm not sure what you're asking. If you add an optional parameter (defaulted) to the constructor it will work from python.\n. ... like it appears you did in your code. \n. The error indicates you generated your code against a version of Dialog.h that contains your change but then built against a version of Dialog.h that doesn't.\n. Actually, if you're on windows, could this be a PCH issue?\n. you need to rebase this so only the Dialog edits appear. I would:\n1) git reset [hash] - where [hash] is the hash of the commit prior to your first one.\n2) git checkout -- [file] - where [file] is each of the non Dialog.h/cpp files to reset them to the repo\n3) git status - to make sure only the Dialog.* files are affected.\n3) git commit -a -m \"[commit message]\" - for the Dialog files.\n4) git push -f origin [your branch] - which should change this PR to be only 1 commit with only the Dialog.h/cpp files.\n. Nice job. \nI've been away for a few weeks so I apologize about the last PR I promised to get in at the next commit window (which I missed). I'm not sure if anyone got it in for you in the first 10 days of the month (let me know if they didn't). I'll get this one (and the last one if it wasn't done) into master on the first.\n. It appears there's a couple bugs in that area of the code, but you can easily work around them. \nFirst. SWIG_CONSTANT and SWIG_CONSTANT2 assume the data with the constant is defined somewhere else. If you want to define the data and the constant in the same module use SWIG_CONSTANT_FROM_GETTER and define the getXXX method. In you case you would so the following:\nIn Module.h you would write:\nconst char* getNOTIFICATION_ERROR();\n   SWIG_CONSTANT_FROM_GETTER(const char*,NOTIFICATION_ERROR);\nSWIG_CONSTANT_FROM_GETTER assumes there's a 'getter' for the constant in the module of the form getXXXXX where XXXXX is the constant name.\nYou could either make the getter inline, or supply the definition in the .cpp file.\n. That's hardcoded in the template itself.\n. the codegenerator works with default values. It doesn't work with method overloading (two methods, same name, different parameter list). What error are you seeing?\n. ",
    "Fneufneu": "it broke the build on FreeBSD: final linking failed:\n\ng++ -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -g -D_DEBUG -Wall -O2 -I/usr/local/include -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -g -D_DEBUG -Wall -O2 -I/usr/local/include -L/usr/local/lib -L/usr/local/lib -o xbmc.bin -Wl,--whole-archive lib/cmyth/libcmyth/libcmyth.a lib/cmyth/librefmem/librefmem.a xbmc/linux/linux.a xbmc/network/network.a xbmc/video/windows/videowindows.a xbmc/utils/utils.a xbmc/cores/DllLoader/exports/util/exports_utils.a xbmc/cores/DllLoader/exports/exports.a xbmc/settings/settings.a xbmc/video/video.a xbmc/guilib/guilib.a  xbmc/xbmc.a xbmc/addons/addons.a xbmc/cores/playercorefactory/playercorefactory.a xbmc/cores/dvdplayer/DVDPlayer.a xbmc/cores/paplayer/paplayer.a xbmc/cores/VideoRenderers/VideoRenderer.a xbmc/cores/VideoRenderers/VideoShaders/VideoShaders.a lib/tinyXML/tinyxml.a xbmc/cores/cores.a xbmc/interfaces/python/python.a xbmc/cores/DllLoader/dllloader.a xbmc/cores/dvdplayer/DVDCodecs/DVDCodecs.a xbmc/cores/dvdplayer/DVDCodecs/Audio/Audio.a xbmc/cores/dvdplayer/DVDCodecs/Overlay/Overlay.a xbmc/cores/dvdplayer/DVDCodecs/Video/Video.a xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxers.a xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreams.a xbmc/cores/dvdplayer/DVDSubtitles/DVDSubtitles.a xbmc/cores/AudioRenderers/audiorenderers.a xbmc/cores/ExternalPlayer/ExternalPlayer.a xbmc/filesystem/filesystem.a xbmc/filesystem/MusicDatabaseDirectory/musicdatabasedirectory.a xbmc/filesystem/VideoDatabaseDirectory/videodatabasedirectory.a xbmc/input/input.a xbmc/dialogs/dialogs.a xbmc/music/karaoke/karaoke.a xbmc/music/music.a xbmc/music/dialogs/musicdialogs.a xbmc/music/infoscanner/musicscanner.a xbmc/music/tags/musictags.a xbmc/music/windows/musicwindows.a xbmc/video/dialogs/videodialogs.a xbmc/pictures/pictures.a xbmc/playlists/playlists.a xbmc/programs/programs.a xbmc/powermanagement/powermanagement.a xbmc/storage/storage.a xbmc/threads/threads.a xbmc/windows/windows.a xbmc/interfaces/python/xbmcmodule/xbmcmodule.a xbmc/network/libscrobbler/scrobbler.a lib/libRTV/librtv-x86_64-freebsd.a lib/libUPnP/libupnp-x86_64-freebsd.a lib/libXDAAP/libxdaap-x86_64-freebsd.a xbmc/interfaces/interfaces.a xbmc/cdrip/cdrip.a xbmc/interfaces/json-rpc/json-rpc.a lib/jsoncpp/src/lib_json/libjsoncpp.a xbmc/interfaces/http-api/http-api.a xbmc/dbwrappers/dbwrappers.a lib/libsquish/libsquish-x86_64-freebsd.a lib/libapetag/.libs/libapetag.a lib/xbmc-dll-symbols/dll-symbols.a xbmc/rendering/rendering.a xbmc/windowing/windowing.a  xbmc/rendering/gl/rendering_gl.a lib/libXBMS/libxbms-x86_64-freebsd.a lib/UnrarXLib/UnrarXLib.a lib/libhts/libhts.a xbmc/threads/posix/threads_posix.a xbmc/network/linux/network_linux.a xbmc/powermanagement/linux/powermanagement_linux.a xbmc/storage/linux/storage_linux.a xbmc/windowing/X11/windowing_X11.a -Wl,--no-whole-archive -lavcodec -lXrandr -lavahi-client -lavahi-common -lSDL_image -lrt -ltiff -ljasper -lSDL_mixer -lsmbclient -lfaad -lmysqlclient -lmodplug -lmpeg2convert -lmpeg2 -lwavpack -lcrypto -lssl -lz -llzo2 -pthread -ljpeg -lbz2 -lGLU -lGLEW -lGL  -L/usr/local/lib -lmad -lm   -L/usr/local/lib -lfribidi   -L/usr/local/lib -lsqlite3   -L/usr/local/lib -lpng -lz -lm   -L/usr/local/lib -lpcre   -L/usr/local/lib -lpcre -lpcrecpp   -L/usr/local/lib -lcdio -lm -lcam   -L/usr/local/lib -lsamplerate   -L/usr/local/lib -lfreetype   -L/usr/local/lib -logg   -L/usr/local/lib -lvorbis -lm -logg   -L/usr/local/lib -lvorbisenc -lvorbis -lm -logg   -L/usr/local/lib/mysql -lmysqlclient -lz -lcrypt -lm -L/usr/local/lib -lasound   -L/usr/local/lib -lenca -lm   -L/usr/local/lib -lXt -lX11 -lSM -lICE   -L/usr/local/lib -lXtst   -L/usr/local/lib -lXext   -L/usr/local/lib -lXmu -lXt -lX11 -lSM -lICE   -pthread -L/usr/local/lib -ldbus-1   -Wl,-rpath,/usr/local/lib -pthread -L/usr/local/lib -lSDL   -pthread -L/usr/local/lib -lhal -ldbus-1   -pthread -L/usr/local/lib -lhal-storage -lhal -ldbus-1   -L/usr/local/lib -lavcodec -lavformat -lavutil -lpostproc -lswscale   -rdynamic\nxbmc/cores/DllLoader/dllloader.a(ldt_keeper.o)(.text+0x1a0): In function `Setup_LDT_Keeper':\n/usr/home/fneufneu/xbmc/xbmc/cores/DllLoader/ldt_keeper.c:244: undefined reference to `i386_set_ldt'\ngmake: *** [xbmc.bin] Error 1\n\n. build on linux (reported by TheUni)\nbuild and run on osx (reported by davilla)\n. in my TODO:\n- optical drive support\n- CLinuxTimezone::GetOSConfiguredTimezone support (it will work on osx to)\n- lirc support: inotify prob, lirc will be updated soon on freebsd\n- port libbluray on freebsd: someone is already working on it because recent mplayer need it\n- ppc and arm support\n- crosscompiling\n- clang support\n. hi, sorry for the very long absence.\ni juste rebased the branch and the pull request seams to be OK now.\n. the pr is clean now :) ready to be tested\n. commit about libcurl and DVDDemuxFFmpeg.cpp dropped\nthanks jmarshallnz for the review !\n. i begin the test with FreeBSD and python 2.7 on git 2011-03-25 version.\nit compile fine :)\n. after few days of use, all python stuff works fine here on multiple install.\ngo go apply, we need python 2.6+ support :)\n. ok, so i need to confirm that bug exist on FreeBSD (and / or osx ?) to\nbtw it's hard to have suspend working fine on FreeBSD.\n. quid of clang support ?\n. also notice: recent libarchive handle .xz format\n. i already code a GetCurrentDefaultGateway for FreeBSD and OSX on my freebsd branch\nusing sysctl to avoid a popen.\ncan you test it on ios/atv2 ? (already tested in OSX)\nyou can catch the code here: http://fneu.fr/freebsd/defaultrouter.c\n. PR tested yesterday with fresh master and xbmc crashed when i hit X to stop a video.\nxbmc.log: http://pastebin.com/iWqddnTb\nbacktrace: http://pastebin.com/StAS12WX\n. fritsch: xbmc continue to crash with your patch and give same backtrace :(\ni'll try on another hardware.\n. @FernetMenta i will !\ni tried today on another desktop on FreeBSD and no crash ...\nso difference between two systems are: gcc vs clang, boost libs, ..\n. @FernetMenta CDecoder::Release() finish completly\nand a CLog::Log() after the SAFE_RELEASE(m_pHardware) show nothing :(\n. and the most interesting information: it crash only when built with clang !\nno problem with gcc 4.6 or 4.7\nclang: 3.2 and 3.3 r174891\n. can someone with clang try this PR plz ?\ni need to know if it's a FreeBSD problem.\n. @macmenot see PR #1535 for this problem\ni need it for FreeBSD but i think OSX doesn't\n. so maybe we hit a clang bug here, i'll request some help to debug this.\nbut does this bug also hit OSX ?\n. gogo ! :)\n. oops sorry, i'll try that tomorrow\n. taglib 1.8 need some fix on FreeBSD. i'll keep you posted.\n. i get an errror at final linkage:\nxbmc/cdrip/cdrip.a(EncoderLame.o): In function `CEncoderLame::Close()':\n/usr/home/fneufneu/xbmcnight199uk/xbmc/cdrip/EncoderLame.cpp:156: undefined reference to `MUSIC_INFO::CID3Tag::CID3Tag()'\n/usr/home/fneufneu/xbmcnight199uk/xbmc/cdrip/EncoderLame.cpp:168: undefined reference to `MUSIC_INFO::CID3Tag::Write(CStdStr<char> const&)'\n/usr/home/fneufneu/xbmcnight199uk/xbmc/cdrip/EncoderLame.cpp:170: undefined reference to `MUSIC_INFO::CID3Tag::~CID3Tag()'\n/usr/home/fneufneu/xbmcnight199uk/xbmc/cdrip/EncoderLame.cpp:170: undefined reference to `MUSIC_INFO::CID3Tag::~CID3Tag()'\ngmake: *** [xbmc.bin] Error 1\nand the full cmd:\ng++ -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -g -D_DEBUG -Wall -O2 -I/usr/local/include -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -g -D_DEBUG -Wall -O2 -I/usr/local/include -L/usr/local/lib -L/usr/local/lib -o xbmc.bin -Wl,--whole-archive xbmc/linux/linux.a xbmc/network/network.a xbmc/video/windows/videowindows.a xbmc/utils/utils.a xbmc/cores/DllLoader/exports/util/exports_utils.a xbmc/cores/DllLoader/exports/exports.a xbmc/settings/settings.a xbmc/video/video.a xbmc/pvr/addons/pvraddons.a xbmc/pvr/windows/pvrwindows.a xbmc/guilib/guilib.a  xbmc/freebsd/freebsd.a xbmc/cores/dvdplayer/DVDPlayer.a xbmc/cores/dvdplayer/DVDCodecs/DVDCodecs.a xbmc/cores/dvdplayer/DVDCodecs/Audio/Audio.a xbmc/cores/dvdplayer/DVDCodecs/Overlay/Overlay.a xbmc/cores/dvdplayer/DVDCodecs/Video/Video.a xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxers.a xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreams.a xbmc/cores/dvdplayer/DVDSubtitles/DVDSubtitles.a lib/SlingboxLib/SlingboxLib.a lib/libRTV/librtv.a lib/libXDAAP/libxdaap.a lib/libhts/libhts.a lib/libsquish/libsquish.a lib/xbmc-dll-symbols/dll-symbols.a xbmc/addons/addons.a xbmc/cdrip/cdrip.a xbmc/cores/AudioEngine/audioengine.a xbmc/cores/DllLoader/dllloader.a xbmc/cores/ExternalPlayer/ExternalPlayer.a xbmc/cores/VideoRenderers/VideoRenderer.a xbmc/cores/VideoRenderers/VideoShaders/VideoShaders.a xbmc/cores/cores.a xbmc/cores/paplayer/paplayer.a xbmc/cores/playercorefactory/playercorefactory.a xbmc/dbwrappers/dbwrappers.a xbmc/dialogs/dialogs.a xbmc/epg/epg.a xbmc/filesystem/MusicDatabaseDirectory/musicdatabasedirectory.a xbmc/filesystem/VideoDatabaseDirectory/videodatabasedirectory.a xbmc/filesystem/filesystem.a xbmc/input/input.a xbmc/interfaces/http-api/http-api.a xbmc/interfaces/info/info.a xbmc/interfaces/interfaces.a xbmc/interfaces/json-rpc/json-rpc.a xbmc/interfaces/python/python.a xbmc/interfaces/python/xbmcmodule/xbmcmodule.a xbmc/music/dialogs/musicdialogs.a xbmc/music/infoscanner/musicscanner.a xbmc/music/karaoke/karaoke.a xbmc/music/music.a xbmc/music/tags/musictags.a xbmc/music/windows/musicwindows.a xbmc/network/libscrobbler/scrobbler.a xbmc/network/websocket/websocket.a xbmc/peripherals/bus/peripheral-bus.a xbmc/peripherals/devices/peripheral-devices.a xbmc/peripherals/dialogs/peripheral-dialogs.a xbmc/peripherals/peripherals.a xbmc/pictures/pictures.a xbmc/playlists/playlists.a xbmc/powermanagement/powermanagement.a xbmc/programs/programs.a xbmc/pvr/channels/pvrchannels.a xbmc/pvr/dialogs/pvrdialogs.a xbmc/pvr/pvr.a xbmc/pvr/recordings/pvrrecordings.a xbmc/pvr/timers/pvrtimers.a xbmc/rendering/rendering.a xbmc/storage/storage.a xbmc/video/dialogs/videodialogs.a xbmc/windowing/windowing.a xbmc/windows/windows.a xbmc/xbmc.a xbmc/network/httprequesthandler/httprequesthandlers.a xbmc/rendering/gl/rendering_gl.a lib/libUPnP/libupnp.a xbmc/network/upnp/upnp.a xbmc/input/linux/input_linux.a xbmc/network/linux/network_linux.a xbmc/powermanagement/linux/powermanagement_linux.a xbmc/storage/linux/storage_linux.a xbmc/windowing/X11/windowing_X11.a lib/UnrarXLib/UnrarXLib.a lib/libapetag/.libs/libapetag.a xbmc/main/main.a -Wl,--no-whole-archive xbmc/threads/threads.a xbmc/commons/commons.a -lva -lva-glx -lavcodec-011 -lsmbclient -lXrandr -lavahi-client -lavahi-common -lmicrohttpd -lSDL_image -lrt -ljasper -liconv -ltinyxml -lyajl -lssh -lmysqlclient -lssl -lcrypto -lz -llzo2 -pthread -ltiff -ljpeg -lbz2 -lgcrypt -lgpg-error -lGLU -lGLEW -lGL  -L/usr/local/lib/python2.7/config -lpython2.7 -L/usr/local/lib/mysql -lmysqlclient -lz -lcrypt -lm -L/usr/local/lib -lfribidi  -L/usr/local/lib -lsqlite3  -L/usr/local/lib -lpng15  -L/usr/local/lib -lpcre -lpcrecpp  -L/usr/local/lib -lpcre  -L/usr/local/lib -lcdio -lm -lcam   -L/usr/local/lib -lsamplerate  -L/usr/local/lib -lfreetype  -L/usr/local/lib -ltag  -L/usr/local/lib -lasound  -L/usr/local/lib -ldbus-1 -pthread  -L/usr/local/lib -Wl,-rpath,/usr/local/lib -lSDL  -pthread  -L/usr/local/lib -lasound  -lhal -L/usr/local/lib -ldbus-1 -pthread  -lhal-storage -lhal -L/usr/local/lib -ldbus-1 -pthread  -L/usr/local/lib -lX11  -L/usr/local/lib -lXext  -lXt -L/usr/local/lib -lX11  -lXmu -lXt -L/usr/local/lib -lX11  -lusb -lavcodec-011 -lavfilter-011 -lavformat-011 -lavutil-011 -lpostproc-011 -L/usr/local/lib/ffmpeg-011 -lswscale-011  -rdynamic\n. build fine on FreeBSD\n. CAESinkALSA::WaitReady is a c/c of the begin of CAESinkALSA::AddPackets ...\n. good for me\n. On amd64 FreeBSD with base gcc 4.2 and clang\n```\ndefine HAS_BUILTIN_SYNC_ADD_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_SUB_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_VAL_COMPARE_AND_SWAP 1\n```\nand compile fine.\n. Cool feature, why it's only for tv show ? can be usefull for movies to.\n. same problem with a Motorola NYXboard ...\ni just unplugged it for now\n. hum RANDOM() does not exist in MySQL\nand i always heard ORDER BY RAND() have some perfs issues.\n. PR tested and works perfectly, with and without chapter.\nthanks for the fix ! \n. plz be aware of FreeBSD too: http://stackoverflow.com/questions/2369738/can-i-set-the-name-of-a-thread-in-pthreads-linux\n. ",
    "taxigps": "I have a problem need xbmcvfs.file. In shooter service of script.xbmc.subtitles, need to read some data of video file to calculate special hash for search subtitles. Many people use xbmc on ATV or IPAD, and movies store on smb server. So some api like xbmcvfs.file important for this.\n. @elupus ;\nI just find the problem is not sync after seek, and do m_pSubtitleDemuxer->SeekTime when read packet can solve it. but still don't know why it goes wrong. :(\n. @elupus ;\nThe problem is the pts value is older one(time point before seek) when first time (or times) to call CDVDPlayerVideo::ProcessOverlays after seek. So some subtitles are cleaned by m_pOverlayContainer->CleanUp(pts- m_iSubtitleDelay). Use m_pClock->GetClock() to alter pts can solve this.\nany advice?\n. see: https://github.com/xbmc/xbmc/pull/865\n. Sorry! I misunderstand. So may I revert it?\n. @anssih;  fixed breaks of subtitles in rar and zip file. any advice?\n. oh, it work. just want you to review it. and my english is pool :)\n. language id 31950-31959 of skin.confluence not synchronous with Transifex\n. @alanwww1 ok.\n. thx, fixed\n. thx, fixed\n. ",
    "amejia1": "Look forward to seeing this merged.\n. I thought libarchive would need some changes like hooking into the VFS. I took out libarchive from the source tree and these changes would simply need an external libarchive.\n. libarchive already handles many archive formats and compression filters. This would allow xbmc to read (and write to if we wanted) any archive format, not just rar and zip which we currently support.\nI had intended to allow xbmc to use libarchive now, and then work on the rarv3 support in libarchive. In this manner, once libarchive supports rarv3, there's little changes needed in xbmc.\n. Going to supply different branch for merge.\n. Am going to close this for now. Will reopen once libarchive gains better support for RAR files and seeking.\n. Just a thought. Instead of building part of xbmc as a shared library, couldn't you just build any of the test programs with the appropriate object files? For example\n```\nxbmc.bin: $(OBJSXBMC) $(DYNOBJSXBMC)\n    commands\ntestprogram1: $(TESTPROGRAM1OBJSXBMC) $(TESTPROGRAM1DYNOBJSXBMC)\n    commands\ntestprogram2: $(TESTPROGRAM2OBJSXBMC) $(TESTPROGRAM2DYNOBJSXBMC)\n    commands\n...\n```\n. @dbrobins There will probably be only a few test programs (and not test cases) so this should still be reasonable.\nIn fact, a lot of the potential test cases that would arise from this wouldn't make sense to go through CApplication anyway. Internals like the VFS and utilities used in XBMC should require some kind of test harness that directly links with the VFS and utility classes so they can be tested directly.\n. To answer jmarshall's comment,\n1. The tinyxml in xbmc is based off of 2.5.3, which was released 4 years ago. 2.6.2 is the current release which was released in May this year.\n2. It looks as though the tinyxml was committed with the xbmc changes included, so there's no revision history as to what changed. The following is a diff between the original tinyxml-2.5.3 and our copy in xbmc. http://pastebin.com/hUV7a4nk\n3. Regarding cptspiff's comment, libxml2's webpage claims libxml2 doesn't even implement SAX completely. libxml2 has many features, making it huge. I suppose we should determine if we want/need something else from any xml library.\n. As an aside, maybe you'll want to look at replacing cximage entirely with graphicsmagick (http://www.graphicsmagick.org/). I hear they are like \"libav\" but for still images. graphicsmagick has things desirable to us, namely, a much more active upstream, an upstream that maintains support for every conceivable device on the planet (at least they claim), and Python bindings. There's probably other things too, but this is things that stood out to me skimming through their website.\ngraphicsmagick can use libjpeg for jpeg support, so I imagine libjpeg-turbo could also be used.\n. Ok, so apparently, imagemagick has gone through a bunch of improvements since I last checked and looks like a better alternative to graphicsmagick now (www.imagemagick.org). They have IOS support and PythonMagick uses them now, and they use libjpeg for jpeg support.\n. I think it's worth another look (imagemagick I mean) as far as windows support goes. It seems activity has picked up for imagemagick, and whatever problems that might have existed before might have been addressed by now.\n. I like this. I've always wanted to run xbmc as a daemon to get to some upnp shares.\n. I prefer an option to separately disable -v and -f instead.\n. Here's the diff again. http://pastebin.com/pTqJcpdG\n. About that number 7, that modification was used to always return a match to any entity passed to GetEntity(). Comments in the library mention that this doesn't work anyway. Looking at the code, it doesn't seem like it would have done anything, since there would have needed to be some kind of mapping between entities and the characters they represent. Below is the mapping I'm referring to.\nTiXmlBase::Entity TiXmlBase::entity[ TiXmlBase::NUM_ENTITY ] = \n{\n    { \"&\",  5, '&' },\n    { \"<\",   4, '<' },\n    { \">\",   4, '>' },\n    { \"\"\", 6, '\\\"' },\n    { \"&apos\", 6, '\\'' }\n};\nWere there other entities we wanted to allow?\n. With regards to the iconv conversion, it seems tinyxml has to be modified directly with the changes made for xbmc. How bad do we need this change?\nIn the meantime, how about we make using system tinyxml optional, similar to how xbmc can be built with other external libraries?\n. Ok, is this acceptable?\n. Waiting on windows signoff.\n. I think it's better to fix these warnings. I'll remove tinyxml sources before I push.\n. Here are debian's patches.\nhttp://anonscm.debian.org/gitweb/?p=collab-maint/tinyxml.git;a=tree;f=debian/patches;h=935174ed6bda2713a80dd43fc2bbe9a154f9851d;hb=HEAD\n. @wsoltys I'll merge your changes then.\n. @wsoltys Yes I saw some of those includes. I meant to fix those after merging your branch and rebasing from xbmc master.\n. Alright, recheck for windows please.\n. Ok. To all, tinyxml is removed from xbmc source. I need a signoff on all platforms again.\n. @jmarshallnz Yes, everything goes through CFile. I've been able to read config xml files through special://.\n. @wsoltys @davilla I just merged your changes. Aside from what cptspiff brought up, is there anything else left before I push to xbmc master?\n. @Montellese I suppose if all platforms are using tinyxml 2.6.2, then yes, the TINYXML_* enums can be used directly.\n. All, please recheck latest commit for all platforms.\n@cptspiff Though I can't get xbmc to read from any nfo files (no calls to LoadFile are made to read an nfo file), I have checked that LoadFile indeed works with special:// and smb:// urls.\n. And it builds for me on linux. Shall I merge?\n. Would overriding TiXmlBase::GetEntity be acceptable within XBMC?\n. I'm ready to have this reviewed again.\n. PING PING PING!!!\nI'm ready to have this reviewed again. I know it's not mergable right now. I just need an ok from all platforms that this change is good. I can resolve conflicts and merge afterwards.\n. I suppose we need a better way to support these test cases which doesn't involve injecting code into the regular source files.\n. Ping @davilla @wsoltys @jmarshallnz and anyone else following this.\nAny objections before this gets merged to master?\n. Ok, ready to have this reviewed again by everyone. This passes the test case.\nThe difference from the other updates is now the data passed to tinyxml is prefiltered to replace the beginning '&' for invalid entities with a '&'.\n. That was an '&' followed by 'amp;'.\n. Ok, this now overrides Parse as well and now there's no need for that reference file for the test case. Please review.\n. I took the liberty of cleaning up the commits. The changes here now cover all cases of overriding LoadFile to include the problematic case reported by the Linaro devs.\nPlease review.\n. @davilla @wsoltys @jmarshallnz ping!\n. av_find_stream_info() made use of the lock manager as well.\n. @elupus Here was that backtrace http://pastebin.com/A0RVhyee\n. And here's backtraces showing who's calling the lock manager http://pastebin.com/cz8HfKfF\n. @elupus Ok, I've made the changes as you suggested. Please review.\n. @elupus Please review the last commit.\n. @elupus The old declaration of av_vsrc_buffer_add_frame() is in ffmpeg too, not just libav. As for an easier way to determine what library is being used, I'm afraid there's not. I asked at #libav.\n. @elupus I changed the define to something else. Is this better?\n. Not yet, this won't work with master but for Eden branch. I'll submit a PR for Eden and update this PR for master sometime later.\n. @elupus Ok, ready to get this reviewed again.\n. Even so, this is for libav-0.8, so this diff would be needed still for latest libav release.\nI may just ask them about buffersink and the alloc/free convenience functions.\n. Ping @elupus made those fixes.\n. @elupus BTW, went on #libav-devel. One of the devs, elenril, is going to add in the avfilter_inout_{alloc,free} functions and buffersink. What else should I ask about?\n. @elupus Ok, ready for another review.\n. @elupus Ok, ready for the next iteration.\n. @elupus resolved the above, please review\n. FYI, though the address is correct (for now), the FSF (since GPLv3) recommends that the bottom paragraph with the address be replaced with this.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n. This is something that's already being worked on. See https://github.com/xbmc/xbmc/pull/629.\nThanks anyway.\n. @scarabeusiv Which distro do you work with?\nAlso, this doesn't address the issue with properly checking for vdpau support in libav. The symbols from libav used to check for vdpau support are no longer exported with libav-0.8.\nAs elupus said, hold off on this until his pull request is merged. If you want to help, provide your feedback in PR #629.\n. What's wrong with using git submodules? We could have a clone of https://github.com/FFmpeg/FFmpeg with our changes and use the clone as the submodule.\n. @anssih A git submodule is basically a git repository embedded in another git repository. You can run any git command on the submodule just like any git repository. A .gitmodules file is created and tracked in the superproject. This file stores the url of the submodule git repository and the path within the superproject where it should be cloned.\nSo in our case, adding ffmpeg as a submodule could help better track changes upstream. We clone ffmpeg upstream (or the github mirror) and place it within https://github.com/xbmc. We make our changes that we need (probably a good idea to use a branch other than master). Then within xbmc, we add this clone as a submodule.\n$ git submodule add git://github.com/xbmc/ffmpeg.git lib/ffmpeg\nAfterwards, run\n$ git submodule init\n$ git submodule update\nAnd that's it. For anyone cloning xbmc anew, the command to clone xbmc and all submodules is\n$ git clone --recursive git://github.com/xbmc/xbmc.git\n. @anssih I'm afraid submodules don't work like this. Essentially a submodule would be it's own self contained repository. Doing a git bisect won't effect the submodule and vice versa. Same with git commit and any other git command.\n. Ping @elupus I would like to directly apply this one to Eden.\n. Ok.\nPing @davilla @wsoltys , are these chages ok for Eden?\n. Closing, use PR #875.\n. @aviksil should I close the other PR?\n. Got signoff for ios and this doesn't affect the other platforms as far as I can tell.\n. @elupus libav are to make libavresample available soon. See http://lists.libav.org/pipermail/libav-devel/2012-April/025629.html\nNot sure how different this is than libswresample yet.\n. @elupus ok, as to the two lib*resample libs being incompatible, the answer is yes, they are completely incompatible.\n. Ok, libav implemented libavresample and ffmpeg merged it.\n@elupus Michael did the merge. Here is his reason https://lists.ffmpeg.org/pipermail/ffmpeg-devel/2012-April/123746.html\n. @opdenkamp Are there any API/ABI incompatibilities in libcec 1.6.1 against previous releases (say 1.3.2)?\nEDIT: Oh, and I'm asking to see if latest libcec should be uploaded to Debian.\n. I presume a dedicated XBMC server wouldn't need various configuration settings anyway. Ideally, a server instance of XBMC should be able to run with default settings and without the need of any config file. A local admin can then adjust settings via a config file, say /etc/xbmc/*.\n. This works for me on Debian. The Ubuntu issue must be something else.\n@nils-werner try doing a git clean -dfx and build again.\n. @davilla @wsoltys @jmarshallnz ping!\nAny further comments? Shall I merge?\n. @jmarshallnz trac #12999 is fixed. Anything else?\n. Ok, merge approved by @cptspiff .\n. I would like to get this backported to Eden, if at all possible. I'll be willing to supply a PR for Eden.\nAlso, I just uploaded the latest libnfs to Debian (http://packages.qa.debian.org/libn/libnfs/news/20120505T193305Z.html).\n. The build system changes LGTM and I see now XBMC doesn't blast my computer's volume to max when playing anything using this branch, so +1 from me.\n. @Memphiz Would you mind supplying a PR for me against https://github.com/amejia1/libshairport? Your patch in this PR doesn't apply cleanly.\n. @Montellese I cherry picked some of the commits you mentioned.\nFor 5f8739199720b655acad62c98b1889045389bda8 it seems there is a previous commit needed to set that parameter which becomes optionShuffled.\nFor 36323f5e1506073478aca98e3ab1e89142f1f6e4 this looks to change the schema.\nFor 39ef4f8b882d3f7292fd81e02d778385662fa218 the SQL queries look different in Eden than what exists in master.\nFor the commits I just mentioned, there were merge conflicts cherry picking them. If you want those fixes in Eden.1, provide me with the changes needed so I can cherry-pick/merge them in Eden.1.\n. @wsoltys There was a conflict with 0cbbf01e2370a9d7d9ff67f04e5b50d7d9013113 which involved the vcxproj files. Could you provide me with the change from that commit?\n. @Montellese can you instead provide links to the commits please?\n@jhsrennie Ok, it's in.\n@Memphiz Got it in.\n@wsoltys Commit f8d004b2a0e648169dbb877dc85fa483d8de083b seemed to have already been in. Cherry picking it results in an empty commit. Your other commit was picked successfully.\nAs @davilla mentions, this should be tested some more. I can test linux changes, will need help with the other platforms.\n. I'm not sure why you guys can't pick my repo for PRs. I can see all of your repos just fine. :/\n. @Montellese Alright, it's in.\n. @odon Thank you.\n. Ping @jimfcarroll @jmarshallnz @theuni @davilla \n. @jimfcarroll FYI, if you run the test suite for xbmc/threads/test, you'll find that TestAtomic.Add and TestAtomic.Subtract tests fail. They also failed using unittest++.\n. Whoops, included some autogenerated files in lib/gtest. Just did another force push.\n. @jmarshallnz yes, the import of gtest should be all fixed now (i.e. the .svn directory and all the bootstrapped files are not included).\n. @theuni this mimics the behavior done with any autotools project. The tests and the test framework are only built when you run 'make check'. Furthermore, if you run 'make check', the tests are suppose to run automatically. I presume most people will expect this behavior.\n. @jmarshallnz @theuni @davilla I did some further refinements to this PR. Now, the framework won't be configured at all unless you explicitly want to build/run the testsuite. There's still the 'check' target which builds and runs the tests, and there is now a 'testsuite' target which simply build the tests.\nAs far as cross is concerned, I don't believe running the testsuite should be disabled when cross is detected. I imagine you would want to run some portion of the testsuite still, say if you're building for i386 on an x86_64 machine. That's why the testsuite is built using a seperate make target anyway.\n. ping @jmarshallnz @jimfcarroll @theuni @davilla \nI'm continuing on at https://github.com/amejia1/xbmc/commits/testsuite2. In the meanwhile, anything else to be said about this PR?\n@theuni, @jmarshallnz You'll see that there's yet another commit which seperates out the 'main' function in a seperate directory which will allow to build libxbmc.so and xbmc.bin using the same build. I needed to do this to get the test suite building with the next commit which introduces a test case for CXBMCTinyXML.\n. @theuni @jmarshallnz Another test case has been added. With TestArchive.General test, the CStdStringW operator currently fails. http://pastebin.com/Arr5PRLY\nI tried resolving. So far no success :(\n. @cptspiff Ok, I addressed the issues you raised.\n@theuni @jmarshallnz I did another merge and rebase of master and another force push.\n. @theuni @jmarshallnz Wrote some test cases for the CFileOperationJob class. It looks to me there's something wrong with the class itself. For example, the ActionCopy action will always copy a file to the destination as a directory, even though the file is clearly not a directory.\n. @jmarshallnz I think it's better if Windows use its own functions for temp file/dir creation (http://msdn.microsoft.com/en-us/library/windows/desktop/aa363875(v=vs.85).aspx).\nI still don't have a windows machine ready for XBMC development work yet.\n. @jmarshallnz Also note that I did not find a function that I could use anywhere in XBMC that created a temp file/dir in the manner I needed. In fact, I didn't find any function that used tmpnam(), tmpnam_r(), or CreateTempFileName().\n. @cptspiff Ok, the build issue is fixed now. Will test using valgrind later.\n. @wsoltys First thing would be to ensure the framework builds. Afterwards, it's ensuring the xbmc-test program builds. xbmc-test should build in exactly the same way as xbmc.bin (i.e. uses the same libraries, etc.) excluding the main() function needed by xbmc.bin and including the object files built from the test cases. There are three locations so far where the test cases are (xbmc/test, xbmc/threads/test, xbmc/utils/test).\n. @wsoltys The only time the test suite should exit prematurely is if the setup of the global environment fails. At other times, the test suite should continue. Even if a test fails, it should be able to report the failure. There were times CGUISettings settings needed to be set because of the asserts in that class.\n. @davilla Would you mind repulling and trying again? That variable wasn't even used anywhere.\n. @davilla Pushed another patch.\n. @davilla It should be ULL then. As for the other error, you mind just putting an ifdef there for now and see if the rest of the test suite compiles and runs?\n. @davilla @theuni TheUni ping! See davilla's last comment.\nI could revert some changes back where gtest was configured during xbmc's configure stage, but not built unless 'make check' or 'make testsuite' was invoked.\nIt's also worth noting that the gtest developers recommend building the framework with the same configure settings as the original program/library. See [1]. This is why there are no shared libraries for gtest in Debian/Ubuntu.\n1. https://groups.google.com/forum/?fromgroups#!topic/googletestframework/Zo7_HOv1MJ0\n. @davilla @theuni Ok, so now the configure stage of lib/gtest will be done during xbmc's configure stage. There is a new configure option (--enable-gtest) that has to be set in order to configure gtest, and thus be able to build the test suite. This matches how xbmc.bin is configured and built with the differences being xbmc-test has a different main() function, and is built with the test cases and the gtest libraries.\nThis should fixup cross-builds.\n. @davilla Real main is in xbmc-test.cpp. I got rid of the linking against libgtest_main.a.\n. @davilla do you intend just to leave out SDLMain.o only from the test suite?\n. @davilla So this is going to affect xbmc.bin whenever the test suite is built, no? Wouldn't you rather place SDLMain.o in a separate static lib which is then linked to xbmc.bin?\nSee https://github.com/amejia1/xbmc/commit/6dcc53264ccd05035da3cccbed7d563fb2872183 for what I mean.\n. @wsoltys I merged your changes. Note that I had to fix your very first change to TestBasicEnvironment.cpp since it broke Linux builds.\nAbout using Sleep(), yes, let's use Sleep from XBMC instead.\nFor TestDownloadQueue, not sure why it completely exits. It's suppose to just silently pass if no URLs are given for the tests. Make sure there's no asserts or exits being used.\nFor the Testfft.cpp compile error, the expression '(sizeof(refdata)/sizeof(float))' can be made a constant if needed. That expression should evaluate to 128.\n. @wsoltys Ok, I made the changes to TestBasicEnvironment.cpp.\n. @theuni @jmarshallnz @jimfcarroll @davilla Ok, this is what I would like to submit to Google as my GSOC submission. The work that was done after the midterm were adding test cases for the VFS. This includes automated tests for regular files, zip files, and rar files. There is also a way to test the other parts of the VFS that cannot be automated, such as http files, smb files, etc. Finally, there is a function that can be used to corrupt a file, useful when testing that XBMC can properly handle corrupt input, such as corrupt zip files and rar files.\nOf course, I would like this tested on the other platforms (OSX, Windows, etc.).\n. Ping @davilla @wsoltys @jimfcarroll @theuni @jmarshallnz @Fneufneu \nI now want to get this in shape to be merged into master. It's ready for Linux. Need a sign off for the other platforms.\n. Ok, got a sign off for Windows.\n@davilla @Fneufneu Anyone else?\n. Ok, this is ready for September merge then.\n. I could take a look at the linux parts. Here I think is where we would need a test case to verify the changeover to taglib doesn't break anything. So first the testsuite changes need to be merged, then the current implementation of reading tags needs a test case written for it.\n. @Montellese @Memphiz Got those changes in.\n. Ok, so I got a sign off on OSX and Windows already. Will leave this for the October merge unless someone wants to merge earlier.\n. Ah NM, I see I can merge now.\n. Ping @theuni @cptspiff @davilla @wsoltys \n. @cptspiff If you remember, you had mentioned something about the lack of seek support in libarchive to make libarchive suitable to replace UnrarXLib. Seek support is still not in libarchive, but I'm told on IRC that RAR files are always extracted somewhere first, even if they are uncompressed RARs (forgot already who said this). This change basically does the same thing (extracts the RAR file) but with libarchive.\n. Alright, noting that proper seek support for uncompressed RAR files needs to exist first. I'll close this and open another PR once there is a release of libarchive with seek support.\nThere are other features for RAR files that still need implementing in libarchive, though I don't consider those crucial for use in XBMC (stuff like encryption support, filter support for RARs, solid archive support, and a few other bells and whistles). So far, libarchive handles RARv3 (practically the only RAR file types that exist in the wild this day and age). It has support for all compression types for RARs, multivolume support, SFX RAR support, and unicode support.\nWith that said, if there is some other feature for RARs needed by XBMC, note them here please. I'll get around to implementing seek support in libarchive.\n. @Memphiz FYI, there's a bug in the encryption support for RAR files in most RAR programs. I suspect that it results in weakly encrypted RAR files, but I don't have anything to back that up. Still, I would advise users to use something else if they want to encrypt their RAR files directly.\n. @akva2 What version of libarchive is available from apt? I'm going to be making a new release of libarchive soon which contain some fixes for the seeking done in rar archives. Also, libarchive would need someone to implement a seek function for zip archives if it is to be used in xbmc to handle zip.\n. @cptspiff This version of libarchive did not include multivolume support, and you just reminded me that I need to update the configure script to look for the correct version of libarchive. I recommend using libarchive v3.1.2, which I just released yesterday.\n. @akva2 Yes, I did see the special handling of RAR's with just one file. I intentionally made it so you have to click on the RAR and then click on whatever file you wish to play. This is the behavior I'm use to and what I see in other file browsers. I could change it back, though I would very much like it if users knew they were going to click on an archive. If it has to change back, I would prefer this kind of handling only be kept for RARs and ZIPs.\n. @wsnipex Check now. The listing for libarchive has been updated. Actually, I had uploaded libarchive v3.1.2 packages over the weekend. For some reason the package page didn't update until today.\n. @wsnipex Some architectures have broken LZO support. It's been reported.\nhttp://code.google.com/p/libarchive/issues/detail?id=303&colspec=ID%20Type%20Status%20Priority%20Milestone%20OpSys%20Owner%20Summary\nFor this PR, I recommend using the latest packages for libarchive (3.1.2-3). It has LZO support disabled.\n. ",
    "beenje": "I built on ppc-osx (with --enable-liba52) and it looks fine.\n/beenje\n. Still OK for osx-ppc\n. Works on OSX ppc with (and without) the patch.\nNo problem to push.\n. I did a few tests on my iMac. I haven't noticed any problem.\nI saw a cpu decrease.\nLooks nice :-)\n. Bye Bye ppc :')\n. ",
    "queeup": "I am so sorry to involve this but what about translations? There is some corrections on strings I think.\n. theuni: Better idea. You have lots of job to do just give translaters 1 day for checking their strings after Dharma 10.1 tag and we will send you pull request if it's needed.\n. What about this one?\nhttps://github.com/xbmc/xbmc/commit/160836caa886329aaf4b5e3b7e815161c8ac30e2\n. yea I used it current master string actually. I just download the English string and translate. My xbmc git code old a bit but Turkish string is new.\n. Hmm is it for Eden? Do I need to translate?\n. Is it documented? I just saw we have \"optional\" key for add-on. Or I am totally wrong and this is not what I am thinking.\n. Opss I also commit for Eden :( sorry\n. I already correct this strings on master. This is just strings correction actually.\n. So is not allowed to send correction for Eden branch? Are you going to commit or it's closed permanently? \n. OK get it. I will keep in my mind. But the problem is my master commit together with new strings. Thats why I PR this separate for Eden. I did it for make things easy for you. Anyways with new translation system I hope you are going to be more comfortable. For this commit I repeat there is no new added string just corrections.\n. Don't forget get rid of weather strings. :)\n. or keep it like it is and fix with value.Left(7).Equals(\"http://\")\n. What can I say, you are totally right. Fell free to close this pull request.\n. ",
    "amet": "it builds/runs on OSX\n. \"09:55:32 T:2690794816 M:1329168384  NOTICE: Starting XBMC, Platform: Mac OS X (10.6.0 i386). Built on Mar  6 2011 (Git:20110305-b58d845)\" \nit works fine on osx :)\n. /Users/Shared/xbmc-depends/tarballs does not need root access and is next to ios-4.2_arm7 and  osx-10.4_i386, also TARBALL_LOCATION is outside the tree and git clean -xdf has no effect on it\nswitch from append to ignore is cos the tarball doesn't need to be added to .gitignore any more as its outside the git tree\n. @wsoltys\nk, fixed.. squished it together.\nThanks, missed #ifndef, somehow read it as #ifdef :)\n. multiple jobs are there to handle different cases. we dont want to update all when only watched status is changing or update music RA if only one new movie has been added\n. @althekiller  & @jmarshallnz: \nis this better?\n@spiff: \nyou still happy with it like this?\n. @jmarshallnz: and now? :)\n. squashed some commits together, will wait for spiffs comment before pushing \n. builds fine on osx/ios/atv2 \n. @jmarshallnz \nyeah, works for me too, but you knew that already :)\n. hmm, the backspace on keyboard doesnt work on osx\n16:18:50 T:2692638016 M:1292926976   DEBUG: SDLKeyboard: scancode: 33, sym: 0008, unicode: 007f, modifier: 0\n16:18:50 T:2692638016 M:1292926976   DEBUG: OnKey: backspace (f008) pressed, trying keyboard action 61823\nwe pick up the key, but no action on the virtual keyboard. I tested it by getting  virtual keyboard on a screen in a addon configure and then used osx keyboard to delete entry\nif you need more tested let me know\n. and, after a while (as long as it took me to type the above msg) the virtual \"<\" , \">\" and backspace stopped working. only way to get them back is to close and reopen the keyboard\n. hi, sorry it took a while\nI see no issues now on osx\n. cos I had it done, it might be useful to make a first run wizard in a future\n. all the same to me\n. this is fine on osx, it fixes all the addons being marked broken if you hit \"force refresh\"\n. I agree with jmarshallnz about percentage, my receiver has it in dB so for me that is standard :)\n. @cptspiff will this go in at any point, my macmini would love you for it.. it has years of updates :)\n. thx @ronie, I'll push it in soon\n. @jmarshallnz  \nthe idea is to get the list of addons that we(user) would want to run when the player announces start, stop, ended, paused and resumed. you can start the subtitle addon and dim the lights when movie starts, hence the need for multiple addon selection.If that is an issue I can hack it around with having multiple selector lines for each addon in settings.xml\n. @jmarshallnz\nwell, yes for the player start, but with the service script we can handle stop, pause and others\n. @jmarshallnz\nok, then in that case ignore what has been done so far, at least for the addon setting part of it.\nEDIT: not quite sure if there will be any use cases if its added, devs dont use it as its not there. I can think of a few addons that would want to be run on a player ended(trakt and similar so that  they can update the watched status),  I know I could use it as I have had few request to auto run sub and lyrics script.\n. @JezzX\nYeah, I agree but seeing how many users use it on iOS/atv2 platform there really isn't much harm in putting it in GUI.\nAs for the thumbs, there is a band-aid solution for that until we refactor thumbs and extraction of the existing urls from remote db\n. As I said, there is a band aid solution for thumb path substitution ...\nAs for the users support, I can't see how telling an average user to ssh in and use vi to edit as.XML is easier. I actually don't care anymore :) mine is setup, that's all that matters by the looks of things\nBb in a week\n. Well, it was worth a try... I agree that this is not ideal but it was definitely better than telling someone to edit as.xml \nAs for not messing with mysql if you can't edit as.xml..... BS, it takes 10 seconds to install it on some systems and it doesn't require any knowledge other than clicking \"install\" ...\n. And I have said more than once that there is a fix for remote thumbs... \n. @firnsy you need to address @jmarshallnz if you expect the answer :)\nstill, we are not checking for the existing DB before we create the new one with appended version? what happens if it exist, is it just ignored?\n. works like a charm on osx, I know firnsy tested it on linux as well.... it is indeed needed to notify the user that the DB is being updated (it goes slow if its ATV2 and DB is a remote mysql), otherwise it just looks like its hanging \nthx pieh for doing this :)\n. tested on OSX, working fine... running it on my main machine. guys in openelec channel (including pike) have tested it and all are working fine. \n. someone is scared? \n/me makes chicken noises :)\n. I still think that fixes like this should go in addon repo and build script will pull it in prior to releases\n. XBMC Subtitles and WWO have it in, both are fine on OSX and Openelec\n. ok, removed need for the ID when calling the class. used the same code as Montellese  on #728 so that it can get reused at later stage.\n@jimfcarroll if you would like us to wait for you just say it, I really dont mind waiting few months. I just wanted to see if I can c/p this , now that it works I am ok either way :)\n@jmarshallnz I was not able to remove CPythonMonitor::Release() and CPythonMonitor::Acquire() , will keep trying\n. @ronie the onDatabaseUpdated(database) will follow, database will be 'video' or 'music' as string, anything else you can think of?\n. @ronie onDatabaseUpdated() done, just for you :)\n. @jmarshallnz as discussed, announce hooked in, let me know if thats what you had in mind.\nI am keeping this as separate commits so that its easier to review, if you want me to I can squash it quickly.\n. updated with some cosmetics\n. squished, updated with osx/atv2/ios xcode fixes and if I understand linux build process, that should be done as well\n. @davilla ok to merge?\n. @davilla , base sdk set to latest\nhow do we handle the old xcode project that is hanging in the root?\n. @davilla I have thought about moving build dir and I actually like it in project ... doesnt pollute the root. your call where you want it.\n. +1, we bump the python API and go for it... it has to be done, the longer we wait the worst it will be\nwe need frodo-pre repo to be in place for new addons\n. python\nuse_subs_folder     = __addon__.getSetting( \"use_subs_folder\" ) == \"true\"\ncould be changed to return bool instead of comparing it to \"true\", @dersphere is that what you were talking about?  \nthat would break almost every addon that there is :)\n. it is still all green on there, no issues\n. instead of braking all addons with this,  if its needed addon can do this as well.\n. not sure we need this, closing until there is an addon that needs this ...\n. 7 months later you need it, then we can look into it\nI cant reopen it, it needs a new pull request\n. well you obviously didn't need it in the past 7 months.\n. @ronie is this needed in skins?\n@nuka1195 it really would help if we knew what you intend to do with these additions, adding it just for a sake of extra code is not what we would like to do. if there is a valid reason for them let us know please\n. closing as this seems to be a wrong approach \n. @JezzX @ronie should this go in? \n. @pieh if its not needed feel free to close it\n. rebase is needed and again not sure where it would be used, do you have addons that need this? till then, closed\n. as noted on the other PR, I cannot reopen this... please submit new PR\n. @jmarshallnz this is no different than what python does right now. this just mimics that behavior ... same would apply for any python module then\n. @PatFrost please try now\n. @PatFrost FTP is read only on XBMC, at least it should be :)\nEDIT: see here -> https://github.com/xbmc/xbmc/blob/master/xbmc/Util.cpp#L1182 it only allows for local, SMB/NFS/AFP files... no FTP\n. @PatFrost check again, write should be ok.\n. @PatFrost for some reason mkdirs is limited to the above mentioned protocols, FTP is not one of them unfortunately. I am not sure why, but I am sure there is a valid reason for it :)\n. I have done it like that in the other PR I did, this looks like less lines of code and looks \"cleaner\" as well. Had to use temp obj in the other one due to the nature of the code\n. @jmarshallnz fixed as per your comments, let me know if it needs more fixes\n. needs rebasing and again not sure where it would be used/needed ... closing till then\n. this looks like a mix of OSX/ios/atv2 pre and post xcode 4 jump, we have moved to xcode 4 after eden and if this gets released it cannot target ATV1(osx) and will need to be tested heavily on atv2/ios as the new xcode has new ios sdk.\n@davilla can shed more light on it for sure\n. builds fine on OSX\n. @cptspiff \nwould you want to be able to pass addon ID or addon instance? and if nothing is passed in, we kill all?\n. @Karlson2k patience please.... otherwise submit the patch\n. looks like the general idea is to move strings to addons and out of XBMC core\n. PLEASE dont :)\n. please don't c/p all in here... I have hard time dealing with the @ pings coming from here... c/p previous conversations will make me remove myself from github entirely \n. Xbmc.setLanguage was never in master\n. lol , HDD space shortage?\n. @Albinoman887 problem is that when you say something, everyone even remotely associated with XBMC gets a email notification, use this place for constructive development discussion. stuff you consider a major bug might be the bug most of the people never experience.\n. most of the time addon authors will not spec the player needed, in case they do and its not available on the platform we should gracefully fallback to AUTO\n. @davilla if AUTO will fail then we are doing something wrong, addon developers will almost never spec the player but we have to be ready for it.\n@theuni if author specs for DVDPLAYER and that shouldn't be the case for a specific platform than we should overrule it in that platform only.\n. @theuni what happens if PAPLAYER is chosen by the addon as it performs better? on desktop it will go to DVD player by default and that was not what the addon author wanted.\nall I am saying is that if these changes are needed for embeded or specific platforms they should apply to those platforms and not on Desktop as well\n. @Montellese I am not sure how you got that out of what I said :)\nif addon developer specs PAPlayer and we default it to AUTO with this PR desktop users will use DVDplayer and that is wrong I think. if PAPlayer is needed by the addon and it doesnt exist for the platform then we need to default to AUTO, if DVD player is needed and user is on Pivos, again default to AUTO but if user is on desktop let it be DVDplayer\n. as per @pieh code earlier, amended and force pushed\n. 1. would be fine on upgraded eden->frodo versions, and as it always was on new systems. you have to set the script either in skin settings or you get prompted when hitting the subtitle button on OSD if the script was not set. no skin changes would be needed for any of it.\n2. I have taken care of it in here, that way the script will close and user can download and enable the service(one time only), but unfortunately user will have to go back to full screen and run the script again.\npython\n    service_id_list = xbmcvfs.listdir(\"addons://enabled/xbmc.subtitle.module/\")[1]\n    if not service_id_list:\n      xbmc.executebuiltin('XBMC.ActivateWindow(addonbrowser, addons://all/xbmc.subtitle.module)')\nEDIT: I personally wouldn't want it bundled in the XBMC, people don't always need subtitles and find it unnecessary to have installed. one thing we could look into would be to not offer the user a script selection if only one is installed, but that might involve some skin and/or more xbmc changes\n. change of heart here... after all its better if this doesn't go in\n. @jmarshallnz it can if we want it to, but my last conversation with @cptspiff was that one will do detailed and other just a list of files and folders. I could be wrong though ...\n. as I said on IRC, fixes the issue I had with some HD channels\n. as much as @jimfcarroll hates the monitor, maybe we should extend it to receive this as well if we need it in scripts/addons\n. @jimfcarroll I have added this but it wont generate the code -> http://paste.ubuntu.com/1256607/\nhm, I suppose I shouldn't have made it PR since it wont build :)\n. looks ok to me, cant comment on the code generator details, thats @jimfcarroll \n. oh yeah... +1 \n. wizard? :)\n. seems that 1 and 3 are fine, I cant get fileenum  to work  .. how was it supposed to be used?\n. also, below(or similar) is needed to have it select the actual default value \ndiff\ndiff --git a/xbmc/addons/GUIDialogAddonSettings.cpp b/xbmc/addons/GUIDialogAddonSettings.cpp\nindex 4bd19d3f52e6628f0c9b9254cc504dfc01194300..f996123bed118557824df79e734cb46b9112584e 100644\n--- a/xbmc/addons/GUIDialogAddonSettings.cpp\n+++ b/xbmc/addons/GUIDialogAddonSettings.cpp\n@@ -290,9 +290,10 @@ bool CGUIDialogAddonSettings::ShowVirtualKeyboard(int iControl)\n             else if (setting->Attribute(\"lvalues\"))\n             { // localize\n               CUtil::Tokenize(setting->Attribute(\"lvalues\"), valuesVec, \"|\");\n+              CStdString valueDefault = setting->Attribute(\"default\");\n               for (unsigned int i = 0; i < valuesVec.size(); i++)\n               {\n-                if (valuesVec[i] == value)\n+                if (valuesVec[i] == valuesVec[atoi(valueDefault)])\n                   selected = i;\n                 CStdString value = m_addon->GetString(atoi(valuesVec[i]));\n                 if (value.IsEmpty())\n@@ -309,7 +310,7 @@ bool CGUIDialogAddonSettings::ShowVirtualKeyboard(int iControl)\n             {\n               pDlg->Add(valuesVec[i]);\n               if (selected == (int)i || (selected < 0 && valuesVec[i].Equals(value)))\n-                pDlg->SetSelected(i); // FIXME: the SetSelected() does not select \"i\", it always defaults to the first position\n+                pDlg->SetSelected(valuesVec[i]); // FIXME: the SetSelected() does not select \"i\", it always defaults to the first position\n             }\n             pDlg->DoModal();\n             int iSelected = pDlg->GetSelectedLabel();\n. ok, using what @MartijnKaijser posted works for me as well, one strange thing is that the list is in reverse alphabetical order. it would be nice if it was not in reverse, but I'd accept it as it is if that's all we can get :)\nhttps://dl.dropbox.com/u/19359762/R_alpha.jpg\n. @jmarshallnz nope, doesnt select default still\nI added some logging and if (valuesVec[i] == value) is looking rather strange, valuesVec[i] is \"30201|30202|30203 ....\" and value is \"11\"\nif (valuesVec[i] == valuesVec[atoi(value)]) is however correct(at least on my side) with changes you mentioned above\n. works here, thx!\n. I would merge 2 commits :)\n. please please ... use forum \nplease please... use trac\nplease please ... dont use github for bugs and discussions\nthanks thanks\n. this is public, please stick to internal forum for discussions\n. at some point I touched this for OSX, worked fine then\n. works for me if you have tested it.... @jimfcarroll might have more to say about it\n. @ronie was that issue introduced with this commits?\n. @ronie @MartijnKaijser if you dont mind trying again, looks okay here\n@davilla    2d95a2d  doesnt need to go in, but its \"nicer\" if it does. its not really a fix\n. @ronie I just tested, even without these we cant roll back the service. so this going in wont be bad but it wont be complete, I am working on it\n. @ronie if you wouldn't mind ;) ^^^^\n. @jmarshallnz \nyou are talking about this one? -> https://github.com/xbmc/xbmc/pull/2071/files#L1R569\nI know its not ideal, but to avoid bigger changes and to keep it safe I have decided to go this route. rollback and install both use CAddonInstaller::Get().InstallFromZip() so to keep it simple we just remove it and install a new one.\nwe have tested extensively and seen no ill effects, can you think of a problem with it?\nEDIT: just reread your question, we have seen issues with not being able to install over it unless we remove it(hence the comment in https://github.com/amet/xbmc/commit/199b753e48ff120c0922dcf88e37d36db922a66d#L1R298 , but I decided to remove it in PreInstall() so that the state of it can get saved and reused later\n. it would not apply to non service addons as they would not be running.\nremoving before installation is not possible without more changes that I was not sure would be safe this late in RC stage.\nprevious flow was:\nrollback -> disable-> install -> start\nin which case the old one doesnt get stopped as it was marked disabled and new one gets started ... so we end up with 2 addons running\n. @jmarshallnz if we RemoveAddon() for services we dont know if addon was enabled or not before rollback, we have no idea what to do with it after we installed a new one, enabled/disabled ... plus for service addons, we need to enable them to be able to uninstall them(not sure why that is) so even disabled addons need to be enabled and then removed. in OnPreInstall() I tracked the pre-rollback state of the addon and that gets used in postInstall().\n. @jmarshallnz I get what you mean now, its possible that it would be ok but I was not sure and we didnt want it in frodo this late. this change only hits service addons and it fixes them without touching any other addons. If you think its safe, I am ok to change it for all.\n. 1. not sure, they need to be enabled to get the AddonPtr so we can remove it. By design I think?\n2. issue with service addons is that if enabled, they are running in the background and we need to stop them in order to remove/install/rollback. in order to uninstall we need to have any addon enabled, but if we enable service addon it starts running, so we need to stop as well :) see how it just got complicated\n3. updating it affects the disabled status as per above 1 and 2, we need to enable it to install and we have to save the current state\n. @Memphiz this only affects darwin, why sign-off on all platforms?\n. do it :)\n. @ronie I am not sure, we are over 5 times what they allow us to use, so 30 min to 60 min is not going to change much.I am ok to remove it and make WU its replacement. I see no reason to have both\n. @HitcherUK true that\n. caching a response might be an option so someone else could reuse it in the next 30 min,  that would however only work on major cities and regions that get a lot of hits, not sure they would allow us to do that\n. osx builds fine\n. if no one has any objections in 2 days I am pushing this in to give us enough time to test new addons and official repo\n. @jmarshallnz \nFrodo has all services bundled in as you can see here as I was apparently too late with including this into mainline for frodo  and will stay like that until Gotham is out ... unless we feel its safe to push it in 12.1(2), but I wouldn't hold my breath for that.\nGotham branch has a GUI only version that will be hidden if this PR goes in and Service will depend on it(version needs a 5.0.0 bump)\nI want every service to return a locally downloaded file and GUI will process that, just move it around and rename accordingly. we shouldnt, nor do we want to, worry about downloads and compressed files and all other issues, service needs to do all that. having it simple as that would allow us to move the GUI function into core later on if we feel its necessary.\n. yes, we would need a Gotham official repo started. I have maintained 2 versions in parallel ever since I started doing this so it wont be an issue.\n. @jmarshallnz if this is not something we want just let me know... or if it needs more work....  but I feel we need to address the service split one way or the other\n. @jmarshallnz cool, I am just nervous about it as last time I was told no rush we hit frodo :)\n. @jmarshallnz , @theuni .. anything? I would like this in if possible\n. @ronie yes you are correct, -pre at least\n. @theuni we could make modules depend on a totally new subtitle addon(GUI part) and push it all in frodo repo, ATM same xbmc subtitle addon ID is used for testing, we could create clean slate and let everyone use a new one.\nNot sure how we can hide modules and the new GUI addon from current frodo users, would API filter that?\n. @theuni I have thought of it differently... Modules depend on addon.subtitle.foo which is hidden, you only need to install a module/service and you get the UI with it.\n@jmarshallnz correct, they won't be visible in Frodo but I am not sure about the log spew\n. if we have a new addon, with different ID, then if dependencies are not met it will not show up for installation. dependencies will be met only on nightly(v13) of XBMC.\nwhat I have is a test repo for this, I have made UI script depend on  and it shows as \"broken\" in Frodo and log is silent about \"xbmc.subtitle.module\" being in repo, it just gets ignored.\n. would probably work but its not my call to make, @davilla or someone who knows insides of it should comment\n. @theuni please check if Gotham repo is okay...once you are done I'll push what I have in there and start testing\n. @jmarshallnz \nI have added another commit here that allows us to set addon and settings for it in video->subtitle section of XBMC, its one more step closer to moving all subtitle settings into one place.\none thing that I cannot do is use newly created \"subtitle.addon\" setting from guisettings.xml in subtitle button on OSD. I was told that skin can only get system.getbool() settings out of it... can you think of a way to make this easier than setting the same addon twice, once in settings and once in OSD?\n. way too much time on your hands... thx!\n. finally someone found use for #183 ;)\n. please use http://forum.xbmc.org, github is for development only\n. use forum please, github is for development only\n. please use http://forum.xbmc.org to report issues, github is reserved for development only, not to mention posting 3 times is a bad idea as all 100 or so devs get this\n. ",
    "magnimus": "thanks elupus.\nI made few changes according to your comments.\nplease review.\n. done\n. ",
    "MartijnKaijser": "@elupus \nStill useful?\n. Translations must be handled through Transifex and should not be added directly. Only English strings\n. No problem :)\nNow all of XBMC is at least in Dutch and not mixed with English.\n. Processed your comments about the translation\n. Normally i do mention that in header of pull req. Sorry. Updated header.\n(accidently closed pull)\n. @cptspiff \nI can't see any comments on why it couldn't be merged or am i missing something?\nWith the merging an small form HTPC like rpi and the android boxes this would be a very welcome addition to clean disk space\n. I reported this bug to Big Noid about the screencalibration.\nNormally i use my TV (1920x1080, 16:9AR) so that's where i found out the problem.\nJust tested it on my workstation (1280x1034, 4:3AR) in full screen and there no problem.\n. @ Opdenkamp\nFixed all typo's/changes.\nLet me know if anything has to change\n. - XBMC Dutch update\n- Confluence Dutch update\n. Rebase done\n. As a user (and starting skinner) i think that the back button becomes custimizable it gets confusing for the user. It should have the same behaviour in all skins. And like ronie said nog give it to the mercy of the skinner.\n. I don't think there gonna be happy with all the \"Merge remote branch 'upstream/master' \"commits that came with this pull.\nBetter fix this so only the catalan translation remains\n. Here's the commit.\nhttps://github.com/xbmc/xbmc/pull/330\n. Small note. You didn't actually had to close the pull. Just the same as you now did only then update commit range..\n. Hmm. I pulled a fresh copy just now. Will do a rebase.\nAnd about the white spaces.\nThis is done automatic by:\nLanguage file translated with Team XBMC Translator\nSo why are we asked to use it then?\nEdit:\nOk I see my error on the rebase\n. Will have to do another pull because I used a very old git version for this one and had to hard reset my fork.\nI checked several other language files and all comments and empty lines were also removed.\nSo before doing another PR I would like to know what do to about that.\n. Current string also contained 'hd-trailers'.\nSo loose the 'hd-trailers' in string 30001 and include 'Youtube' in string 30004?\n. 'Enable Trailer: YouTube'  would be better indeed. Also can be added to every language currently availble. Just append ':YouTube' to all those strings.\n. I'll open a new pull for update on Dutch language. It had some missing strings\n. Same language layout as all other languages as referred in the mentioned commit\n. Depends on what you are thinking :)\nThink it needs to be added to the wiki.\nHere's some info from several commits:\nhttp://forum.xbmc.org/showpost.php?p=997083&postcount=3\n. I just built a setup from latest master and my library got totally borked.\nWhen going into the normal movies i only get movies that are in sets.\nSmartplaylists don't even open\nEDIT:\nI'll do a fresh install and see if that helps\n. Ok seems like different setup screwed my install. I recovered an earlier backup and installed the build from latest git and no problems anymore.\n. Hmm don't think this is an improvement IMO.\nThis doesn't reflect anymore that it actually uses the folder name for searching the movie.\nWith this it seems you can put the movie in a random named folder.\n. That looks more clear to users IMO.\nHere are some more suggestions:\n\"Use the individual movie's folder name for lookups?\"\n\"Use the individual movie's folder name for scraping?\"\n\"Identify movie's by using the movie's folder name?\"\n. Should be understandable for the common users I think :)\nEDIT:\nIf you want i can also provide the Dutch translation so you can include it in your commit.\n. @jmarshallnz \njust looking at PRs. Was there still something needed for this one or was it already pulled in by you?\n. Well the Star Wars series would be an exception on the year sort method or else you would get  \"IV, V, VI, I, II, III\"\nother than that the year sort inside a set would be a nice default IMO \n. correct\n. @sraue \nCould you rebase this PR?\n. @alanwww1 \nOK for me\n. Between years and genre isn't that obvious. Think like JezzX suggested is a good way.\n(note: No need to close PR I think. Just do a PR update)\n. no. otherwise it had said merged\n. @a11599 \nThis still needed (Frodo+1 perhaps)?\n. Is this PR still needed for current master (or Frodo+1)?\n. Master is the one where all code commit go in. So master is more like the development branch\nWhen doing a release the commit from 'master' will merged/cherrypicked into the Eden branch for release.\n. @alcoheca \nStill needed after your upnp improvements?\n. Have to agree with JezzX here. They don't really fit the Confluence theme.\nSince they have different shapes and text they can (and should) be made in the same silver/gray style like the current ones\n. Although I already had no problems I just included this PR into my build and  there where no regressions and all seems to be functioning well\n. @Montellese could you add some basic sorting methods as well?\nnone, random and label (and maybe type if that would make sense)\n. both came with same results for me\n. I would vote to minimize number of option as well. Already to many. Like already suggested make it default and if they want users can always disable through as.xml\n. since we are at feature freeze i doubt this would be pulled in and @classicspam should open a PR with his patches so it can be reviewed \n. Github is not a support forum. Use Google. \n. @elupus @FernetMenta \nCan we hit this thing moving again so we can start to sync OE upstream? \n. this would only be usefull if you are doing a direct reinstall of XBMC and watch to transfer your resume point. This data is much to volitile to store in an xml file for later use. and if it goes in it should indeed go through as.xml with something like\n importresumepoints =True\n. I'm such a user ;)\nI do want playcount but don't care about resume points\n. hehe don't care in don't want them ;)\nhowever i'm not against this ofcourse if majority does want this merged in one setting (and ease of coding).\nI can image users wouldn't want this merged. Up to you ofcourse\n. @mazkolain \nIf you need help please use the XBMC forum.\nhttp://forum.xbmc.org/forumdisplay.php?fid=93\nPosting you questions here will send a notification to a lot of people which we rather avoid\n. @theuni \nGuess this was missed in previous window?\n. @theuni \nThis still for Frodo or will it be Frodo+1?\n. closing for now until time allows it\n. @justdan0227 \nPlease ask these question on the forum as we use github for development and not support\nhttp://forum.xbmc.org/showthread.php?tid=162157\n. no tickets/requests here.\nuse trac.xbmc.org\nnot gonna happen because the default skin has to be as light as possible\n(can some one close this because i have no rights on this repo)\n. Please issue/bug reporting on github (yet)\nUse trac.xbmc.org  for this.\nPlease close..\n. Do not post isseus here. Only for PR.\nPlease use trac.xbmc.org for bugs/requests\n. @anssih \nCould you rebase this PR?\n. Please do not use github for features/bugs, these still need to be done on the XBMC forum.\nOnly use github for PR with actual code contribution.\n. +1 for me to.\nBetter get it fixed once an for all.\n. another thought.\nAre there more fixes needed on the python side that could be incorporated before bumping the API?\n. combining two or more commits into one commit.\nsearch for \"git squash\" to get more info\n. perhaps a setting that the needs to set to give that add-on explicit permission?\n. thank you @Giftie  :D\n. no bug report on github. Only PR\nUse forum for reporting bugs\n. We will focus on Frodo 12.0 so Eden 11.1 won't happen.\n. @jmarshallnz \nOn a fresh install i get this dialog \"remote share: path not found\"  when trying to browse \"years\" and \"recently played albums\"\nOnce a album has been played   \"recently played albums\" does show the list. Years still doesn't work\n. One way would be to won't let add-ons/skins use core strings\n. @cptspiff \nThis was planned for Frodo too right?\n. there is already a PR for this by @Montellese \n. No request on github. Only code contribution\nPlease use the XBMC forum for bugs/requests\n. No request on github. Only code contribution\nPlease use the XBMC forum for bugs/requests\n. Didn't we discuss something like this in another PR that add-ons should use their own string as much as possible?\n(in the string cleanup PR)\n. Worked without any issues :)\n. Do not use github for  issues bug reporting.\nPlease use the forum and use trac.xbmc.org\nPlease close\n. Do not use github for issues bug reporting.\nPlease use the forum and use trac.xbmc.org\nPlease close\n. If you have patches you can first post them in the development section on the forum for initial discussion. code patches are ofcourse allowed here for easy merging once accepted.\n. Just tested the patch and can confirm it works.\nWould it be valid to also back port this fix to Eden .1 release?\n. So that means you lost interest then?\nThis is exactly what was meant we had to maintain it when the dev looses interest.\n. Tested and confirmed fixed.\n. Just to be sure. Is this fix supposed to be for the Eden branch?\n. That will be for the .1 bugfix release of Eden. IMO there is no reason to already pull this in and leave the others.\n. Please do not use github for bug/issue reports.\nOnly use the forum and trac.xbmc.org\nPlease close.\n. Yes they are required or else they end up without artist. You must also check/uncheck the compilation flag for albums or compilations\n. Are these folders and subfolders still needed (because they are still generated again at every start-up)?:\nThumbnails/\n    generated\n    Music\n    Video\n. Since mysql setup isn't in GUI the WOL for that shouldn't be either.\nFor sources it could be under network settings.\n. I agree with @pieh and @bobo1on1 that these options seem to advanced for regular users to be bothered with. One who can set up his network can also add some values to as.xml\nIf there is a noob simple way of adding one or to bools to the GUI that would function in general purpose it would be ok\n. @pieh \nScreenies make it look simple enough for users. If more source are added from same server will the dialog detect what settings the other one had? That would make sense\n. No bug reports on Github.  Please the XBMC forum\nPlease close this issue\n. http://forum.xbmc.org/forumdisplay.php?fid=111\n. You can force push to your branch and this PR will be auto updated. No need to open a.new one.\n. Wouldn't 'FanartImage' be better than 'Fanart_Image'? Others listitems don't have the underscore\n. No bug reports on github\nFor issues please use the forum.\nPlease close\n. We will focus on Frodo 12.0 so Eden 11.1 won't happen.\n. We will focus on Frodo 12.0 so Eden 11.1 won't happen.\n. Modifying a database is something else than physical removing files.\nUser should give explicit approval before this could happen\n. Force push is the way to go\n. @Karlson2k \nLearn to have patience.\n. Maybe\n. @koying \nplease rebase\n. Do not post issues on github.\nUse the forum!\nPlease close\n. You are so wrong.\nThe forum IS THE place to get help.\ntrac.xbmc.org is only for confirmed or very reproducable bugs. Feature request are also only on the forum and not trac anymore.\n. So what did you expect? Get a straight answer within 24 hours?\nIt's opensource software and it's not like there is a paid tech support around.\nWe all have our own lives and jobs to deal with.\nEither:\n1. Post just got missed\n2. No one can reproduce\n3. No obvious answer\n4.  Whatever you can come up with.\nAnd no need to be sarcastic.\nHelp on issues -> forum.xbmc.org\n. 2nd showed you what to do\n9 posts now (and starts being sarcastic)\n. See no true gain in this\n. -2) Just stupid because you can easy make 2 separate folders on which you set the source. One containing all movie that are inside folders and another that have no separate folders.\n. Not meant to insult you in any way. My apologies.\n. Got a complete gui freeze while scanning scinning for artist info. playing a album and returned to home screen.\nWeird part is the XBMC just continued to scan for artist info according to the log.\nOther issue is that the main menu background are complete black now\nhttp://pastebin.com/Z1g3ugk5\nThey work fine in confluence.\nSame issues as @phil65\n. Did a fresh compile. Latest master show the backgrounds without the patch and with the patch it doesn't.\nWhen scrolling through the movies the backgrounds don't seems to respect the fadeout time so they appear flickering when going through movies.\nUploading a video:\nhttp://youtu.be/zDoOR_CeYCQ\n. 100% sure\n. OK got the background back but the image are still flashing/flickering when scroling\nEdit:\nThis now only happens in main menu. If you want a video let me know\n. Hmm. You're right. Extrafanart doesn't work anymore too so hence the reason why there is no flickering in movies because only the Listitem.Property(Fanart_Image) is loaded.\nInstalled a recent nightly and the extrafanart works again.\n. http://youtu.be/laaHtGFctRI\n. Just a recent nightly:\nhttp://pastebin.com/N5rwV2ya\nNot working extrafanart (with these commits):\nhttp://pastebin.com/XSGgLpeC\nlog of the flickering home screen when scrolling through menu items:\nhttp://pastebin.com/1PEE87uP\nIf i install the nightly again all works again.\n. Hit that little green button if you will :)\nAll seems to be fixed now.\nEdit:\nMaybe remove that last commit for extra logging or will that come in handy some other time?\n. I tend to disagree. I would definitely put it in this order:\n1. folder.jpg\n2. scraped\n3. embedded\n2+3 order can be debated because some have different covers for each track of an album.\n1. is an absolute must for me. I spend a lot of time searching the best covers and putting them alongside my albums so i would hate it if the lower quality embedded ones got scraped\n(something like this was already discussed in the team forum pages)\n. Issue is that some will just downloaded some files with crappy embedded artwork (as i regularly find out) and don't check that.\n. Uhm weren 't proper tags needed to even do a proper search result when scraping in the first place or is scraping also done from filename when tags are missing?\nIt's difficult to assume what users prefer. Comparing the embedded covers with what is available through scraping isn't probably available in current scraper code (maybe something for top2fs his project).\nDifficult choice because both have pros/cons\n. No issue reports on github.\nPlease use the XBMC forum.\nClose please\n. Yes.\nThe forum is best place to discus bugs to be verified.\nIssues can't be disabled because that would disable the functionality using the milestones on github that are used for PR merge windows\n. Besides that XBMC is meant to be system independant so treating the \\ on one system as valid character isn't something that should be done IMO\n. That's what makes XBMC so special :)\n. +1\n. @Montellese \nReady for this window?\n. IIRC we wanted to move away from one guisettings.xml and make it just like add-ons now work. So on settings.xml for each skin\n. No issues on github.\nUse the forum for this.\n. Do not report issues on github\nPlease use the XBMC forum\nPlease close\n. Please use the forum for issues.\nGithub is for code addition only.\nPlease close\n. Changes must be done using the Transifex site.\n@alanwww1 \nYour thoughs?\n. It could that these are already translated but not yet added to github.\nFor more info see first post of this thread.\nhttp://forum.xbmc.org/showthread.php?tid=132639\nYou can request to be part if the Portugese team for translations and work together.\n. and we don't appreciate you doing that because it has nothing to do we the actual code and is spamming a lot of people\n. No issue report on github. This is for code contribution only\nPlease use the XBMC forum\nPlease close\n. No issue reports on github.\nPlease use the XBMC forum\n. no issue report on github\nplease use the XBMC forum or http://trac.xbmc.org\n. no bug reports on github.\nPlease use the xbmc forum\n. @alanwww1 \nI see that in Dutch there are some strings not translated however on transifex translation is at 100%\nStill need to go through all of them there to check for errors\n. @alanwww1 \nNot sure what current state of PVR strings are but last I heard there where still some hard coded ones flying around.\nMaybe I see if i can be of any assistance there.\n. @alanwww1 \nDid a quick run through PVR and all seems to be localized. Anything that is missed will come up sooner or later. If you could resync with Transifex?\n. @alanwww1 \nLooks ok to me but can we please get rid of the e-mail address embedded in the .po files.\nI don't want mine in there (and so do others i think)\n. @alanwww1 \nTake your time. No rush on getting it done today. Just something that needs to be done at some point :)\nI mean you can see all details if needed on transifex so no point in having it listed here and add potential spam hazard. \n@cptspiff \nWant this in before the monthly build or does this need to be in merge window?\n. @NEOhidra \nNo because it takes you login e-mail and i won't want that to be all over the place and i refuse to create another one\n. Closing this one. Feel free to bring this discussion to the forum or trac.xbmc.org\n. @cptspiff \nReady to merge?\n. no issue reports on github.\nplease use the forum or trac.xbmc.org\n. this was discussed at devcon when @jmarshallnz was playing with the remote\n. changed to \"back\" button in remote.xml\n. i'll leave that for some one with more knowledge\n. mlestones can't be used without issues. github limitations\n. use the xbmc forum for issue reports\n. no bug report here\nuse xbmc forum or trac.xbmc.org\n. no bug report here\nuse xbmc forum or trac.xbmc.org\n. +1 from me on this. When installing some skins you get tons of new scripts which the user doesn't have to know\n. You cannot uninstall a dependency plugin and you are told why. Not sure about disable.\n. @ronie \nlooks good\n. Currently de slider for addon settings is broken\nhttp://imageshack.us/a/img823/3310/screenshot004hh.png\n. please don't use github issues for bug reports\nuse he forum or trac.xbmc.org\nor in thi case you could as well send us a PR \n. @xhaggi \nWhat happened?\n. @Albinoman887 \nIf you have nothing constructive to say keep quit. you already have been warnd several times. this a dev area and not for users\n. @jmarshallnz \nIs this something we still want/need?\nlooking at the test numbers it looks promising\n. Tested and confirmed working\n. I'm getting an error with GetAlbums query which i missed previously when testing\nSnippet:\nhttp://pastebin.com/gg4HjY2u\nFull log:\nhttp://pastebin.com/471uDFeT\n. @Montellese \nConfirmed working together with you JSON-RPC cleanup PR\n. What is ticket 13347? Please always add a full description of the problem\n. Please use the XBMC project Transifex.com for fixing translations\nhttps://www.transifex.com/projects/p/XBMC-Main-Frodo/\n. It's not in yet. You just have to wait a while\n. No issue report on github\nPlease use the forum\n. please use transifex. for translations\nhttps://www.transifex.com/projects/p/XBMC-Main-Frodo/\n. @alanwww1 needs to update that. Will be done soon.\n. Please use the xbmc forum for issues \n. compiled on win32 without problems. haven't tested functionality\n. JSON-RPC\nsee the wiki page for frodo\n. TV shows won't scan their episodes anymore\nhttp://pastebin.com/BXi7SUtY\n. +1 from me. Could be usefull for scripts\n. @dersphere \nMaybe also hide \"scan for new content\" (tvshows) while already scanning.\n. So far works for me (of i have covered them all).\n. @dersphere \nCould you rebase?\n. @AndreyPavlenko \nThere's a forum for such question\n. ping\nGo for merge?\n. also there's 'Merge branch 'xbmc-master'' in it that doesn't belong there. Stream data could have gone on pastebin.com prefarably i think\n. http://forum.xbmc.org/showthread.php?tid=132639\nPlease only use our transifex project\n. Please read\nhttp://forum.xbmc.org/showthread.php?tid=132639\n. no bugreports on github\nuse the xbmc forum\n. Sorry i am strongly against adding another gui setting\n. can you rebase again?\n@jmarshallnz you ok with this going in?\n. Fixes tabs :)\n. @rowanborder \nperhaps you can looks at this one and give your comments on that if it is actually still needed or not and possible improvements needed (i don't own a XBOX controller).\nMaybe this is superseded by your PR\n. This was just a mapping that was still laying around on trac before the cleanup. Feel free to use anything from it if you think it can be used.\nWill close this since i have no way to test it myself\n. @jmarshallnz or @cptspiff \nGood for this merge window?\n. Please read\nhttp://forum.xbmc.org/showthread.php?tid=141158\n. @ocram \nNo need to comment on PRs without having tested anything\n. See\nhttps://github.com/xbmc/xbmc/pull/1545\n. Scanned my local files and so far it seems good looking through the database. TV shows using poster.jpg and banner.jpg and movies using poster.jpg (in separate folders) are scanned in and thumb is filled with whatever comes first from the scraper.\nWhat will be the convention for season artwork? seasonxx-poster.jpg or seasonx-poster.jpg in root level and poster.jpg in season folder (and possibly also season banners or that post-frodo?)\n. @jmarshallnz \nwe could use a python script that uses PIL module for check the AR of the image and determine what it is?\nSame as fixing all the stale urls from themoviedb when they changed servers. A one time fix em up script for existing users. It's not pretty but could close part of the the gap.\nadding seasonxx-poster.jpg would be a good thing because you can already differentiate at early stage when you want to support more in the future\n. @Montellese \nYour territory\n. Well you we see a lot of reports on the forum so doing some check on this would definitely make sense.\n. http://forum.xbmc.org/showthread.php?tid=141158\n. no bug reports on github\nuse the forum\n. no bug reports on github. \nonly use the forum or trac \nbesides its already fixed\n. Please use the forum. \ngithub is only for PR\n. no issue reports on github\nuse the forum \n. It also has the wrong wiki link. Just:\nhttp://wiki.xbmc.org/index.php?title=How-to:Compile_XBMC_for_Windows\nAlso other things are missing like you need java and directx SDK\nIf you could add those as well\n. Win32 builds ok\n. No. only use the forum or trac.xbmc.org\n. @fape \ni don't think that log.txt should be included?\n. next time just fix your commits and force push to your repo. it will auto update this PR.\nmaybe also just make it one commit\n. http://forum.xbmc.org/showthread.php?tid=141158\n. It has the address in the language so it should be obvious enough.\n. It's definitely not a no however we first want context menu cleaned up and structured before adding more to it (i think).\nTeam discussion here: http://forum.xbmc.org/showthread.php?tid=154474\n. please discuss this on the forum so it won't spam everyone if it doesn't concern this PR directly\n. Even if you haven't finished it so playcount stays zero but last played time is still updated. \n. Or on stops. Not sure (tm) \n. @ronie / @JezzX \nThoughts?\n. @cptspiff \nany comments?\n. @cptspiff \nSince you semi commented in referenced PR. Is this ok for you?\n. no bug reports on github.\nuse the forum or trac.xbmc.org\n. use the forum for issues \n. If it is supposed to work like this:\n      id=\"file\" type=\"select\" source=\"/resources/lib/\" mask=\".py\"\nit works.\nthis saves selected filename.\n. I'm not seeing the same as @amet All listed alphabetical.\n. @jmarshallnz \ncan this go in after rebase?\n. Yes please :)\n. Sorry but this is not needed any more.\nEdit:\nAt least not artwork downloader specific. So you should at least drop the comments in the file\n. @ace20022 \nit will directly set the URL in the database and will not download any file by default anymore. It works exactly the same like the scrapers atm.\nI do agree that when opening the browse for art takes to many clicks and imo the ideal situation would be that the browser opens in the folder where the video files is located.\nMovie sets is a bit of a difficult issue on where to start. Option would be to start in the root of the source where the movies belong to. \n. It could indeed be useful for music too. Make that a separate PR\nCan we pull this in for Frodo? \n. Tested with tvshows and works like it should.\n. Please use the forum \n. @xhaggi \nBecause we are in feature freeze for a month so nothing will be added until after Frodo release\n. I disable GUI sounds at first sight of xbmc startup. So it would be very preferable that the test sound would play regardless of gui sound settings  (in appearence or audio settings). \n. Do these need to be bumped to?\nhttps://github.com/xbmc/xbmc/blob/master/configure.in#L5\nhttps://github.com/xbmc/xbmc/blob/master/tools/android/depends/configure.in#L2\n. @cptspiff \nRepo confirmed working\n. There won't be an Eden update. Try Frodo instead\n. No bug reports on github. Use the forum\n. Seems that there is some confusion with users who do an upgrade since the old slideshow is still there but not working. \nThe can install the new one but then they have two listed. \nCould we solve this by adding the old one to repo with a broken tag? \n. This isn't in userdata but in the install XBMC\\addons\\  folder. So when a user decides to go back to Eden it will be reinstall.\n. Please use Transifex for translation. See xbmc forum \n. Sorry misread. \n. This should definitely be in beta2.\n. @jmarshallnz could you perhaps review?\nCompiled/tested it on win32 and so far no negative effects i noticed.\n. No bug reports on github \nUse the xbmc forum \n. closing for now as it's semi merged already\n. Tik tok \n. @alanwww1 \nPlease remove language files too from transifex\n. Use the forum \n. Use the xbmc forum \n. Agree. Stay on 5.0.0 or bump to 6.0.0? Maybe do that on final release\n. confirms at least fixing your suspicion part about by skipping non available sources\n. Fixes the log spamming\n. Tested with variety of addons and seems to work like we want with changing xbmc.foo addon version and backwards compatibility tags.\nAny chance that a check could be added for non xbmc.foo addons that if backwards compatibility is set we also check on that and if not present just ignore?\nI was still able to install an addon that was depended on a lower version than the backwards tag was specified\n. Tested patch and build without any problems and all addons shows up in manager.\nQuestion is should we by default install all addons? Since i don't have PVR (yet) i don't need them so should i have to disable them or do we expect people who do need PVR to select and enable the one they need on install?\nimo we could use \"PVR\" install type as extra option (if possible)\nMaybe an extra screen if PVR is selected so the user gets a better option screen for which addon they need like a btter description than pvr.hts (since that wouldn't mean anything to the common Joe)\npvr.demo is questionable since it's not of real use except for skinners. we could build/package it along and never enable it anywhere. the \"regular\" user wouldn't rely need it and could be confused by it.\n. Yes they are disabled on clean install\n. @davilla merge to your liking \n. No issues report on github.\nUse the forum\n. no bug reports on github\nUse the xbmc forum\n. no bug reports on github\nuse the forum\n. @jmarshallnz \nYour thoughts about this.\n. Another issue arose with this and with Montellese his PR #1879 \nSince the other PR all addons of openelec became broken because they depended on system addon os.openelec.tv=3.0 which in its turn depended on xbmc.addon=1.0\nWith PR #1879 that didn't match our dependency. The problem is that after bumping the os.openelec  to 12.0 the addons were still marked broken. The only way to get them corrected again was doing a force refresh on repo. \nNow with this addon the idea was to go to a x.y.z dependency version style. \nHere the same problem arises that new installs won't have issues if we depend on xbmc.python=2.1.0 but existing installs will have problems since the version bump in the system addons isn't detected somehow (or never was).  So again force refresh will be the only thing that fixes this. \n. @jmarshallnz \nShould this go into Frodo? \n. https://github.com/xbmc/xbmc/blob/master/language/English/strings.po#L10696\nThat extended region is for scripts \n. Use the forum for issues\n. Use the forum for issues\n. @ace20022 \nJust tested this PR and looks good. It's assigned for XBMC13.0 first merge window.\n. No support on github. This is for pull request only.\n. Use the forum for issues\n. No issue reports on github like I already told you\n. Point 1. I already told you! \nhttps://github.com/OpenELEC/OpenELEC.tv/issues/1576#issuecomment-11159039\nPoint 2. Wunderground is an addon so this is not core code\n. Looks good to me.  If @jmarshallnz agrees we can merge it so all version schemes are the same \n. No streamdetails using JSON-RPC  Files.GetDirectory\n. Just tested with some other JSON calls and all still working :)\n@davilla ok to merge?\n. @takoi\nPlease rebase\n. @davilla \nguess we should add this for Frodo \n. No issue reports on github. Please use the forum.\nAnd yes it was needed\n. No bug reports on github \nUse the forum \n. Please read! \n. No issues on github. Use the forum \n. We dont handle issues on github which is mentioned each and every time\n. You noticed those all have code attached.\nFirst the forum and confirmed bugs to trac.\nAnd this is spamming lots of people so Please go the forum\n. @jmarshallnz \nFrodo material (or any comments)?\n. @opdenkamp \nAny comments on this PR?\n@nemphys \nplease rebase\n. @arnova \nGood to go?\n. @alanwww1 \nI tested on windows and it doesn't show up initially so it probably needs more work.\nFrom previous PR i read:\n\"Builds and works on Linux and OSX, DX port needs developer, GLES port in evaluation\"\n. Agree with @Montellese \nAlso I think we discussed at devcon on getting rid of those dots altogether because we have the back button almost everywhere\n. No issues on github \nPlease use the forum \n. We don't handle issues on github\nPlease use the forum \n. @opdenkamp \nOk for merge this window?\n@jmarcet \nPlease rebase your PR\n. @davilla \nup to you\n. next time you can just change your code and do a force push to your repo. saves opening a new PR\n. You may want to get a test build containing this fix? What platform do you use? \n. ios build will be done in ~3hours. will post link when done\n. id3v2 tag is empty for me on windows with lame encoding\n. Works ok for me\n. ok\n. you already posted on the forum so don't bother here as we don't do issues on github\n. No help on github. Use the forum \n. No issues on github and never post such log spam \n. Couldn't you have done that in the first place. Would have saved a of people getting these mails \n. Use the forum \n. Use the forum \n. Use the forum \n. Use the forum \n. use the forum\n. What I would also be interested in besides getting the list of available profiles is which profile is currently active.\nOn quick view this is not yet integrated into this so it would be great if that could be added in the process too\n. use the forum please\n. @davilla strikes and misses. \nSame results as ronie. No audio and lock on stopping music. Sound on video is fine and no lock on stopping. \n. Current patch still doesn't fix it on OE.  After suspend mp3 playback still doesn't work. Only after first playing a video audio for mp3 comes back. \n. Use the forum \n. Against against any advanced setting added\n. Would it also fix service  script failed on uninstall? \nhttp://trac.xbmc.org/ticket/13620\n. iirc it used to start on my current install.\nWill test tonight.\n. hit the little green button\n. Second try. hit the button ;)\n. Do NOT use github. Use the forum\n. looks good\n. No issues on github \n. No issues on github. Either create a PR to fix it or create a trac ticket \n. No issues on github. Use the forum and pastebin.com for that log spam \n. @mcrosson \nDid you find some time to look at the comments made? (and perhaps do a rebase)\n. Use the forum \n. Use the forum \n. no issues on github.\nuse forum or trac.xbmc.org\n. updated XBMC splash screen\n. @ronie or @JezzX \nPlease check :)\n. i am in principle against any (advanced) settings added. \n. We do don't count +1 so leave those comments behind. Get a solution without settings added.\n. Or we have to change the stored value as well like you did for some other cases. \n. updated\n. I doubt if many people actually use musicvideos. It's not as huge an audience as artists and albums so my guess is it will only be a fraction of current API traffic.\nPerhaps you can see in your server stats what part accounts for musicvideo scraping and how it's handled?\natm yours is the only other option as scraper. if yours can't handle it we can perhaps set no default scraper and just let user decide?\n. @Montellese \nI made a ticket about that issue.\nWe some other default scraper if possible or get a working API key again\n. use the forum\n. @davilla told me to close this because we don't handle issues on github.\nuse  the forum or trac\n. Well unknown could still be used somewhere that I couldn't find. Also they may be widely used makes more sense to have in core language. \n. Not safe since we don't know how many 3rd party rely on these strings. Not all strings are called that way. \n. Can't the old xbox code be removed as well in an additional commit?\n. Let's throw it through Buildbot too and see if it compiles on all platforms. ios needs some special handling first? \n. Tested on Nexus7.\nWorks fine on starting xbmc, homescreen and while playing video\n. @theuni \nOk for merge? \n. No support on github! \n. @jimfcarroll \nthoughts?\n. @ulion \n0.9.26 is available\n. win32 doesn't use goom, will test it on OE\n. tested on OE 32bit version without any issues\n. script in repo. feel free to pull in\n. Doesn't fix no audio after suspend \n. Sound after resuming is back for MP3 play (finally) so on the right track there :)\n however hitting suspend while playing music xbmc freezes after you do resume. I somehow get json connection but screen stays blank (no input signal) \n. @Memphiz suspend while playing is not far fetched scenario. However most important is this pr works for me and I could replicate the issue 100% each time. \n. Throw me another build for gpig testing  if you will.\n. Noticed a regression that is repeatable each time. On each track that you play first tenths of a second are cut off or you hear an audio glitch. Happens on initial boot or on resume. No matter how many times you stop and start playing this happens. Tested with a build of januari 30 and it didn't happen there. Will try your older builds to see when it comes up\n. Yes that works ok. \n. Behaviour before ecd6fe3:\n    SPDIF to amplifier -> sound was chopped of for tenths of a second on fresh boor, same after suspend/resume\n    HDMI to TV -> same behaviour as SPDIF however with the addition of a noticeable crack/pop whatever you call it in first tenths of a second\nAfter ecd6fe3:\nPerfect audio on fresh boot or after suspend/resume on both SPDIF and HDMI\nRetried several times going back and forth between versions.\nLooks ok to me from usage standpoint (without knowing the code of-course). Do we need more gpigs for this?\n@fritsch give the word when you're happy with it or if anyone else has objections\n. Last mentioned build functions without problems for me. After suspending 10 times still got audio and no crashes or glitches \n. @fritsch\nLast version is a no go. No audio at all and video plays like ****\n. @alcoheca \ncan you look at this one?\n. Use forum \n. At the end of tomorrow \n. Yes that would be better to try limiting the buttons. Also like discussed on irc to have some default list to choose from (like the ones already in db) because a typo is easily made and it would make it easier for users\n. Correct.\n. Use the forum!!! \n. pdb files are already available for each nightly on the mirrors \n. @jmarshallnz \nCan this go in? \n. Personally I would go even further and retrieve it even less (once in 2 hours or more) . How often is data updated at providers side? If that's even less we should use their update interval (if it's bigger of course). \n. If you want live weather look outside. Sorry but having it once every 30 minutes is plain silly and definitely hogging on our kind weather providers. \n. We are talking about a media center here not some personal full blown high update 24 hours a day weather station. Once an hour is acurate enough. Want better data check their website. We talking about reducing millions of API calls here. Sorry but not all can agree here. If you want to further discus lets do that on the forum. If other ways are to large of code change i say that we at least do this for 12.1 release.\n. Also keep in mind that if user base starts growing more the API calls are increased even more. We need to make a good way too make a lot of headroom available to allow us to grow without possibly loosing our weather provider like we did on Dharma.\n. Did someone contact our weather providers on this what they prefer?\n. The scraper selection logic is a bit flawed since there isn't a good way to handle this atm. We've seen this with the music scraper, imdb scraper (when it became broken users were left in the dark on how to easy fix), weather provider.\nOf course this is just a quick hack. Perhaps it would be better in place in the same logic as the Eden->Frodo database upgrade. So just run once on new install.\n. So what should we do with this?\nOther option is to move the scraper replacement logic to function that is run once after initial/upgrade install (like it's done with db upgrade / thumbnails). This solves the issue of broken scraper and won't prevent reactivating the scraper in the future (same for music scraper).\n. should we merge this until a nicer way comes along to handle the whole addon process?\nEdit:\nperhaps the settings refactor could be of some assistance here\n. Use the forum or do a code pull request. \n. We don't do request or help on github \n. Go to the forums \n. A bugfix release contains something that fixes something that breaks user experience like crashes, bad audio video, not extent the user experience by adding new things that they can live without.\n. works for me. if @jmarshallnz has no comments merge away :)\n. There's still a whole day left ;) \n. i'd like to get this in soon because it's rather big change to keep up to date.\nwill do test compile to see if nothing was broken.\n(win32 builds ok)\n. @elupus \nGood to go after squash commits\nPlease make commit message  \"Fix memory leaks & use correct \"delete\" for arrays\"\n. we don't do support on github. use the forum and ALWAYS put such log spam on pastebin.com\n. updated per comments\n. Crashing while starting to play music was the new feature? \n. so far so good for me\n. @ulion\nPlease use pastebin for those logfiles next time\n. alternatives:\nhttp://paste.ubuntu.com \nhttp://xbmclogs.com   <-easier to read\n. as far as i can see none the remarks made by @theuni or @elupus has been adapted. besides this affect all platforms so needs to get an ok from all devs\n. @huceke \nyour thoughts?\n@stupid-boy \nPR needs a rebase\n. no help on github. use the forum\n. no help on github. use the forum\n. what happens if you set a wrong language/value? will it fall back to default (English)?\n. @snowjim \nThis is an area for devs and not for users. Besides there's no point in asking in three places. Stick with the forum. \n. @jmarshallnz \ngood to go in?\n. ok for this merge window?\n. A word from my holiday. Do not start adding new options please ! There are way too much already.\nSo  minus a gazzilion on whatever is added to advancedsetting\n. please provide a proper github code PR to master branch\n. No isseus on github. Use the forum\n. already a proper PR for this\n. Please no more advanced options. \n. There should be no setting at all.\n. I also think just say to wait for 10 minutes is better\n. @uNiversaI \nwhy are you asking this here?\ngo ask on the forum\n. Don't use github for this\n. Since this is a scraper you should use the forum thread. Github is only for development code. For core bugs use trac.xbmc.org and the rest the forum\n. imo this should indeed go in 1st\nI think the other PRs that it might affect can be handled/adjusted more easily than fixing this back if you pull it in the last day.\n. @jmarshallnz  can you look at this?\n. No issues on github. Use the forum or trac.xbmc.org \n. No bug reports on github. Use our forum or trac.xbmc.org \n. I'm against a new advanced setting so since you are replacing current one with a better one playcount should be reserved imo so setting is obsolete\n. @jmarshallnz \nok for merge?\n. I'm not in favour of a text box. This would break a lot of script / skin since that would need adjusting again.\n. Then should skins still need to adjust the xml files because of the change in label/function\n. I'm for limiting the amount of yet another vast list of skin changes to make it easier for skinner. Maybe it's a small change but it's yet another one on the list.\nBesides that there are skins with only one line so how will it look then because text scrolling might be affected\n. I don't want any breaking script.\n. Perhaps clarify in the readme from with Android this will work.\n. use the forum\n. I don't know what you are planning to do but this doesn't seem right\n. confirmed fixed on win32\n. Besides that don't use github issues for bugs \n. All translations must be done through Transifex.\nhttp://wiki.xbmc.org/index.php?title=Translation_System\n. @jimfcarroll if ok for you this can go in next merge window\n. Lets wait for @Montellese as he showed me some initial work he was doing on something similar for tags/directors/actors and so on.\n. No they should not be dropped because they are different things. I was just saying that Montellese was working on an easier way for managing several items from within XBMC. Adding a temporary workaround is not something that we should do.\n. @jmarshallnz \nAny remarks or can this be merged?\nMy only remark is that the \"edit movie set\" should be moved like mentioned in forum thread before Gotham release.\nhttp://forum.xbmc.org/showthread.php?tid=154474\n. Reason explained in thread \n. I've seen this happening (when i cared to look) too once on my system with writeable smb://\nThe problem probably is that the folders don't even exist and the the log keith showed is from a tv series so there are multiple video files in that folder.\n. @alanwww1 \nthx for clarifying that as i thought it wouldn't pick that up. Must have confused it with XML then\n. Updated PR with extended xbmc.sleep() and also wait after video finishes.\nalso fixed the c/p monster in strings.po\nAlthough this is a feature it would be useful if it could be included in this monthly\n. jfcarrol hide those interpreter constructs after Frodo release.  Was also thinking about using xbmc.Player.onPlaybackEnded however that would also require the script to be running a deamon (correct me if i'm wrong) so it would be running al the time.\nNow i use XBMCs internal clock to just start the script once every 24 hours and i figured it wouldn't hurt much if i did it this way because the sleep is only when you are actually watching a video so it's not hit often.\nidea's improvements welcome of course and advantage is the script can be updated through repo :)\n. nothing will be merged for Eden anymore. If you want a new language for Gotham added request one on Transifex.\nthe langinfo.xml can be done as a PR to master branch\n@alanwww1  fyi\n. you included a whole lot of other commits that should not be here.\nOnly add langinfo.xml\nTranslation should be handled through Transifex\n@alanwww1 added you fyi\n. also add a more descriptive commit text/pullreuqest some thing like  [language] add Latvian langinfo.xml\n. please make a PR with only langinfo.xml\n. @JezzX / @ronie \nthoughts?\n. no request here. use forum\n. hmm maybe we need to bump the projectm version to last stable release (and see the diff)\nof-topic:\nIt also seems they have an ios/android version @Memphiz Maybe interesting to see if that's easy to incorporate.\nhttp://projectm.sourceforge.net/\n. no issues here\n. @Montellese wanted me to say this works(tm)  :)\n. xbmc/xbmc#2554\n. no issues here. use the forum\n. @huceke \n. @wsoltys \nthis indeed fixes the huge mem leak however there's still another small leakage present in the orders of 10mb/minute.\nSame testcase as in ticket (or perhaps also set The Big pictures screensaver and minimize)\nEdit:\ncould be unrelated and something else leaking however when minimized it got from 100mb to 175mb.\n. @wsoltys \nofcourse. thx for tracking this one down and i'll search for other test case and if needed make new ticket\n@davilla \nif you can confirm this can be merged?\nthis should also be backported to 12.2\n. Can you rebase again please \n. use the forum\n. use the forum. if you want to contribute code please open a PR\n. xbmc/xbmc#2525\n. @wsoltys\nYou can adjust the Jenkins builder after merging because it fails now? \n. Git docs tell to set it true on windows if working together with other platforrms http://git-scm.com/book/ch7-1.html\n. if there needs to be fixes/improvements on current master they should just be done through PR\n. @BtbN \nLet me repeat myself again. If something needs fixing do a PR. \n. @FlyingRat \ncore.autoctrl=false is a no go end of story. Period!\n@Voyager1 \nWhat did you else change to get it compiled?\n. this has nothing to do with Jenkings!\nyour point is not valid and I don't believe you. core.autoctrl=false  won't happen.\n. no i am ignoring that false statement\nEdit:\nand since you obviously did not pay attention due to chasing some ghost we already have ffmpeg build but are now stuck at libdvdread\n. ok for merge (or is this considered feature)?\n. @cptspiff \nas you requested\n. @jmarshallnz \ndo we really want to add more support for mysql?\nif we are eventually hoping to drop it i thinks it's bad idea to extend it now\n. go for merge?\n. @leechguy \n\"last used\" or \"last used profile\"\ncan you PR the changes and also handle some remarks @jmarshallnz had after it was merged?\n. ok for merge?\n. yep, hit the green button. after that you can remove your branch from your repo (as mentioned in the message after merging)\n. @hmis \ncan you incorporate the \"Removed unnecessary comments\" in the first commit you did and also rebase this PR so it's ready for merging next month (after Memphiz has his xcode part done)?\n. indeed to head of xbmc master\n. almost there but you squashed it down to one commit instead of keeping the separate ones.\n. @huceke \ncan you look at this\n. @huceke \nCan you look at this?\n. @elupus \n. Patches themselves need to be fixed instead of adding a patch to fix them\n. @opdenkamp \n. @Memphiz \nfor xcode adjustments\n. @Tolriq \nNeeds a rebase\n. @elupus \n. did cherrypick this is and still nothing, just brief flash with \"\"invalid syntax of the command\"\". only thing that helped was opening it in notepad and saving it again. that at least gives me some output like the SET command but then fails on line\nhttps://github.com/xbmc/xbmc/blob/master/project/Win32BuildSetup/BuildSetup.bat#L62\n\"invalid syntax of the command\"\nEdit:\nnext line that is still shown in the output is this after the syntax error\n\"invalid syntax of the command\"\n. already tried notepad++ (including changing line endings settings) before notepad.\n. fixed with ce8efc8a71d2999539590766304e243d4530b0c0\n. No advanced settings should be added. Rather removed. \n. My first comments is that the commit message doesn't tell anything. Split it up like it was in the first PR.\n. Renaming the commit message is not enough. It needs to be split up into parts it touches and commit message needs to tell what it does. This for future reference in bug tracking. \nLike this\nhttps://github.com/xbmc/xbmc/pull/831\n. Still long way to go\n. Perhaps it's that time for 13.0 It seems we already have problems with older videocards. Time to move on. \n. I take it that default value will be False if you use autoclose?\n. If it's no it's enough for me as that is also the default selection. Setting cancelled isn't really needed imo (and indeed another PR if needed).\n. @uNiversaI \nthat is not what this PR is about.\nif you have any problems with ffmpeg use the forum and don't start spamming here\n. @night199uk \ncan you rebase so i can test it (updated scrapers in master with repo)?\n. got some errors\nhttp://pastebin.com/1imXT4eL   (not a debuglog)\n. btw i guess this will also need a db version bump and conversion to upgrade \"old\" db?\n. take your time :)\ni won't be in any condition to test tomorrow.\n. yep that's what i meant. although i couldn't get the icon to work. Do feel that the string options to use for the default ones are a bit long. just having  info/warning/error as string would be nice(r).\nHaven't tried using a custom icon due to lack of time, is that also supported by this?\n. http://trac.xbmc.org/ticket/14283\n. For example my Samsung amplifier can only be turned on 10 seconds after i have switched on my Samsung TV because of the auto shutdown feature combined with these two. So XBMC turns on my TV and i need to turn on my amp delayed.\n. does getLanguage() still work and default to option 0 (backwards compatible)?\n. @jimfcarroll \nHow can we get default values in?\n. Any objections for May merge window?\n. @ace20022 \nneeds a rebase\n. @MaDDoGo\nPlease comment as you are coordinator of Spanish transifex group\n. Any objections for May merge window?\n. You missed it. It says it right there in the PR description \n. I don't see the problem with the int as the constant. You only set it once and forget. If you need to know what it is pull the pydoc. It's easy and quite clear. \n. Well I don't know/care what iso code is what so still have to look it up. So its the same effect: search what to use. How do you call the full string option then which I now option 0 since you need it in he other language function too? \n. fine by me.\nalthough without the \"xbmc.\" part in front of the ISO would be nicer but if it makes the code easier sure.\n. ISO code is better.\n. @ace20022 \nCould you squash 291ca3b & 893fe24 so they just reflect using the ISO code and adapt the other PR accordingly?\n. nice. imo also backport to 12.2 if possible when merged\n. also http://trac.xbmc.org/ticket/13919\n. Don't change the string ID, just change the text\n. also the whole settings handling is rewritten \n. ",
    "IronTetsubo": "Yay! Sorry for the delay in not getting to this - I really wasn't just waiting in the hopes that someone else would do it... :)\nhappy days, this is great. I'll move on to the next set of UPnP fixes now.\n. Shrug. happy to do so - but the existing CleanDatabase routine builds a list of idFile values by getting all the file rows (that match valid path rows), then performs various checks to see if they should be deleted. Once all the file rows are processed, it then goes and creates lists of movie/tvshow/musicvideos to be deleted that match up with the idFile rows that are deleted - and then finally it deletes all the appropriate rows in the various tables that line up. So, to try to stick with the style, I just appended more values to the filesToDelete variable. \nWhile looking at it, I can probably be even cleaner if I changed the main \"check files\" loop to do a left join between files and path (i.e., getting file rows where the path doesn't exist), and then changing the logic accordingly, instead of doing an additional sql after.\nAlternatively, to go down the path you suggest, I can either do the minor change of the sql you suggest, or rework it so all the various file/path/episode/movie/etc. deletes so it follows the \"delete from foo where idfoo not in (related table)\" logic. Up to you guys, of course - this is exactly why I put the patch up for feedback. :) FWIW, I agree just doing the deletes directly is more fault tolerant, I was just trying to minimise my changes.\n. okay, I'll rework the CleanDatabase routine, then.\n. I'll try this out today/tomorrow, let you know. I'm running on linux, so I can't just pull your exes above.\n. ",
    "gnif": "For the sake of keeping things sane for AE, any PCM data in the interface should be float, even if for now there is a hard coded conversion to S16 for master.\nRe JM, number of frames would be best, along with a function to retrieve the channel layout.\n. @gmarshallnz: sure, thats fine then, as long as it doesnt get hard coded to S16 like the rest of the code.\n. Much better then my fix, +1 for this, but I also have not tested it under windows.\n. You missed one, l274 - xbmc/interfaces/DbusServer.cpp\nFixed here in my branch - 2501aa41034c384858d3f6d218be74cf3b5c9e02\n. +1 to adding this now, I was just hit with this exact problem also\n. I can confirm that the patch by Zenkibou works perfectly, so bobo1on1, whenever your ready :)\n. +1 as ArchLinux provides the mysql_config tool as part of the entire MySQL package, kind of ridiculous to have to install all that bloat when your never going to use it.\n. This also occurs when AE tries to show the failure to open audio device dialog, at current a return has been thrown into the null renderer to prevent this from occuring.\n. I am happy with where ae_rebase is right now, and even with its known issues I feel it is ready for merge to master, so here is my +1 :)\n. Ok, to add my 2c..\nThe player should ensure that the source does not provide a null channel map, this IMO is a critical failure on the players part and the an assert is the correct thing here, a stream with 0 channels is useless. If the stream has > 0 channels and ffmpeg cant provide a map, then a default map should be provided by the codec. This is a codec bug.\n. @neoflex - devision by null is not this issue\n. I agree, I discovered the same issue a few days ago.\n. +1, ill look at the sse code later, more important it just works for now\n. cptspiff: I am most certainly not gone, just do not have the time at current to keep up with XBMC dev. I agree with using a class to allow libav reuse, but I do not agree with removing the old code at all. My plans are still the same, AE will become an external library depending on nothing by the OS sound API.\n. @huceke: Sure, that's why I said I am OK with abstracting it, I do like the idea of having the option, just keep the code around for the old stuff for when I/someone is ready to make it an external lib.\n. I dont like the access to 'is_valid', it should be private and a get function be written as this is read only outside of the class.\n. @Karlson2k - I avoid this if I was you, this is NOT the standard behaviour, expect to get flamed in the forums for this change.\n. @Karlson2k - Please note that those diagrams support the current layout...\nSBR or as we call it, BR, is not the same as SR\nSBL or as we call it BL, is not the same as SL\nPlease look at those diagrams more closely.\n. Either way, the code was as you are suggesting here is how it used to be, we were flamed by audiophiles for it being incorrect and sounding terrible on their 5.1 setup, there are a few very lengthy trac tickets that describe that the behaviour you are suggesting is wrong, and the correct behaviour is what is currently implemented.\n. Just did some digging, @alanwww1 is the one that would be able to comment on this one and set matters straight.\n. +1 to renaming it, but not to OINK... perhaps AE_FMT_NATIVE or AE_FMT_BASIC, not sure what would quite fit here.\n. @anssih - The addition of AE_FMT_LPCM in the enumerated data is obviously in error and should be removed.\nI have never accepted the need for AE_FMT_LPCM and it was only left there to keep the CA devs happy, IMO it is a format that should be dropped or renamed as it is not really a format, just an obscure name that does not define anything at all.\nI like the ifdefs for CA, and think that it should be renamed to AE_FMT_CUSTOM or AE_FMT_COREAUDIO... etc. AE_FMT_FLOAT == AE_FMT_LPCM, that is all there is to it.\n. @huceke - I agreed to keep it just to get AE out the door, I never agreed that it was acceptable. Also why is that macro duplicated? AE_IS_RAW does the same thing unless AAC is not considered RAW in CoreAudio?\n. @huceke - Please don't turn this into what it is not, my questions are valid.\nMy suggestion is to rename it as it causes confusion just as I predicted it would many months ago (see Anssih's questions about it here and in IRC chatlog) and make it CoreAudio specific if at all possible. I do not understand the reason for needing this format, nor do I pretend to, I just do not agree with platform specific defines entering into the platform agnostic headers.\n. @huceke - I did not say it was not needed, nor do I care why it is needed, I have submitted to the fact that you know the platform and the CoreAudio code... all I have done is ask questions, and point out that if it is possible, it should be moved out of the agnostic headers as it only makes sense on OSX which is the exact same conclusion @Anssih came to when he reviewed the code, and thus this PR.\n. @davilla - Agreed on the rename, not sure I agree on making CA a sink.\nI could be wrong, but I thought that CA was able to perform much of the software implemented features such as audio mixing, resampling, and gui sounds in it's API already, the CA engine should leverage the operating system's API and be a very simple wrapper around CA.\n. @DDDamian - I have been giving that feature some thought and I do not believe a AE_FMT_X would be the correct approach, the better way to handle it would be to start passing a struct which contains AEFormat and a bitfield for extra parameters, such as, RAW for bitstreaming, which would deprecate the AE_IS_RAW macro, and a flag for native/passthrough, whatever :)\n. The messy buffer size logic is REQUIRED due to issues with ALSA driver implementations, you are re-introducing a bug where the buffer size never gets set on some hardware. For confirmation please check the pulse audio ALSA driver where they have had to do the same thing.\n. @fritsch: No worries, there is a bit of black magic and voodoo with a pinch of salt in here, I would get this tested by the community before assuming it is correct. You also need to work with a copy of the hwparams as each attempt modifies values in the structure in ALSA which can cause the next attempt to fail.\n. @fritsch - Code looks good, but unable to test for the moment\n. Looks good to me :) Nice find.\n. I am still getting under-runs, doubling the buffer sizes fixes the issue for me. Also I do not understand the comment that states that 'Buffer will be increased after those are fixed' with regards to menu sounds. What needs fixing about them?\nI am configured for 7.1 LPCM with output stereo to all speakers enabled. Under-runs occur every 1-2 minutes.\n. @anssih I did some testing over the weekend and found that you are correct, this issue was occurring on the old code also, wife uses the TV more then me and as such she never brought the issue to my attention. I just noticed it when I did some updates to my network and as part of it, updated XBMC. Also, doubling the sizes did not fix the issue, just reduced it.\nAs for the samples for GUI sounds, AE injects them as late as possible into the stream, that is why they are pre re-sampled and pre up/down mixed. IIRC SoftAE then takes these samples and mixes them in right before the buffer is passed to the sink, so I am not sure how you can reduce the delay any further.\n. Looks good to me, but do you realise this does not free sounds at all?, it just removes their buffers from the playing list, they still reside in memory.\n. this change is worse, you are now just duping code. Why must you free them in suspend? they are kept in RAM so that the latency on playback is kept very low. Suspend is all about stopping the threads and saving CPU, not RAM.\n. Playing sounds is just a pointer to the sound buffer and the index of where it is up to, it is not an allocated buffer. All sounds are pre-loaded and pre-rendered into the sink format by CAESound via CGUI(something). A sink restart reformats these pre-loaded samples to the sink's output format.\n. > if somebody else reads this: use FreeSound(ss->owner) would really remove them and all references on them in the other relevant structures.\nAnd even then, FreeSound should only be called by the code that created the sound object, you do not want to delete the sound object out from under it's owner (read: double free segfault)\n. ",
    "AWilco": "Looking at CptSpliff's commits there he does the reverse of what I do. It was originally set up to pass everything to the PlayMedia function, but for the special case of a folder he turned it into a list of files and handed it off to the playlist player.\nCurrently the TMSG_MEDIA_PLAY command takes a list of files and hands it off to the playlist player. We want to catch the special case where we are given a single file and give it to PlayMedia instead.\nThe PlayMedia function handles some special file types that only make sense if you give it a single file (SmartPlaylists etc). Therefore the playlist player doesn't call this function.\nCurrently TMSG_MEDIA_PLAY does not handle folders correctly either in the modified or committed form. However I would suggest moving cptspiffs mIsFolder() handling into the MediaPlay function to avoid repetition (MediaPlay should be able to handle any CFileItem that might possibly be played in some default way, we know we're not being called inside PlaylistPlayer, so it's fine to expand out the folder into a playlist and play that).\nThe changes in CApplication.PlayMedia() are for plugins that resolve to file types only handled in the MediaPlay function. An example which I use is the BBC IPlayer plugin. This takes a plugin path of something like plugin://addon.video.iplayer/b123e456 (where b123e456 is a reference to a TV show) and parses that into a URL to an internet playlist, which always contains a single playlist item which is the url of the TV show. I currently cannot pass these URLs using the JSON RPC interface because they are resolved in PlayFile, which then does not know how to handle an Internet playlist.\nI'm guessing youtube plugins resolve straight to the URL of the video without needing a playlist, which is why they work with the current setup.\nAnother example is Last FM streams, if you had a plugin that resolved to a Last FM stream then you couldn't use the JSON RPC interface for the same reason that PlayFile doesn't know how to handle the resolved Last FM url. That is the reason why the guy who pulled this commit used it.\n. @Montellese, I've used the commits you mentioned, and moved the Folder handling from the Builtin to PlayMedia. This doesn't affect much yet as you cannot pass a folder via JSON RPC, I was going to put that in a separate commit. While this says JSON RPC because that was the reason i made the changes, the actual code area is more Core Player functions. I don't know who is in charge of that, but as I've changed @elupus commits maybe he wouldn't mind taking a look at these changes. I know I've left this a long time, but it's been eating away at me, I'd like to help out with other improvements to XBMC and getting this one sorted would be a good first step.\n. The playlist player already handles plugin -> real url expansion as it calls back to Playfile for each file in a playlist after it has been expanded. However some items don't make any sense as part of a playlist, for various reasons (internet playlists because they can't be handled by the standard playlist player, last fm streams because they use a different manager). These file types are handled in PlayMedia instead of PlayFile. However the ApplicationMessenger never calls PlayMedia so you can't use it to play these file types. \nWe could move all the handling from PlayMedia into PlayFile but I don't know how the Playlist player would react to some of the more esoteric items handled in PlayMedia. Occam's Razor says just send single file types to PlayMedia instead, and allow Plugin expansion to those file types there. \nFor an example how would you want the code to flow if you had wanted to open a plugin file type that resolves to a smart playlist (as the BBC iPlayer plugin does)?\n. Okay I've reverted to the basic changes I made. I'm going to look into refactoring PlayMedia and PlaylistPlayer, try to get everything under one roof. I'll start a forum post or another PR about it.\n. Apologies, never trust yourself to re-write code correctly :)\nI've made the changes and compiled and tested the code, it all works.\n. What wrong with just chopping them up into nice avi or mkv files? and same for merging the DVD videos? then the files are a lot nicer on your hard drive as well?\n. A little think piece.\nIf we use file modified time, it tells us when the file arrived on our system, or was last modified by the user (maybe updating metadata). Apart from metadata updating Content files are generally not modified.\nI believe the \"standard\" use case is a user rips/copies/downloads a file into a content directory. A periodic XBMC scan, or a scan on next startup then picks it up. The scan time and file modified time are similar, and assuming a small number of files added in the time since the last scan, the order is roughly correct either way (but technically more correct using file modified time).\nThere is the case of the file is modified after we've added it to XBMC. Easy, don't modify the timestamp once it has been set.\nI'm not sure I understand the \"tvshows\" directory bit, for multi-file items we should choose the most recent modified time.\nThe other major case is on a large scan, either on first run or after the user has dropped in a lot of files in one go. Current method, and by using scan time, results in a random list. (This is helped somewhat by the fact that scan are often sorted by name so later episdes come last). Using modified time in the case of a large transfer of files, or when the user has been through and modified file metadata or some such, is equally random). However in the more normal case that content has been added over time the file modified date gives the correct order.\nBasically in a large scan the order is undefined for the simple reason you cannot define a sensible order. Using file modified date is I think always a preferential value, so I can't see any reason to offer an alternative.\nSummary: Use Filed Modified time.\n. I would say don't include a dateModified field. It's always available as a file property, not the kind of data we need to cache, and if we did cache it it may well not update fast enough for any application you'd want to use it for.\n. I have to say, does this need to be in the GUI? Its a very technical setting that I don't think anyone outside of this discussion has even though about. I think it should be an advanced setting, if people come along and don't like the current behaviour they can change it, but otherwise the GUI will become full of settings that nobody understands, which will put people off.\nSecondly, I think the default behaviour should be to use the file modified time. This would in almost all cases give better behaviour. I should think almost nobody notices how the recently added show list is selected, and anyway this will only affect the edge case where you add lot of shows at once. Therefore use the better method where we can.\nSSortItems and GetRecentlyAdded should use the dateAdded field, and then their behaviour is dependent on how that is populated. Otherwise there isn't much point in the field surely?\n. ",
    "twinaphex": "I AM a developer - just not an XBMC dev, and I will still give you people a piece of my mind. People having an independent opinion sucks doesn't it?\nSorry, just chalk it up to the 'noise' while you strike more proliferate deals with commercial HTPC hardware vendors.\n. @davilla - You win two browny points for being very mature towards your critics. Gives me a lot of faith in this (hijacked) project. To be honest, I think I was around this project long before you even entered it - just not as an active developer - which, BTW, I wouldn't even want to be right now at the state this project is at - thanks very much.\nXBMC will always stand for 'Xbox Media Center' whether you guys like it or not - and the fact you're now having a cheering fest over removing the last XBOX define is proof to me you guys don't give a damn about anything other than lame HTPCs (which are on their way out anyway). You guys snub your noses at consoles and using 'SDKs' which are not authorized to be used (never mind the fact that XBMC started out with the Xbox 1 SDK to begin with - long before you were involved with this project davilla, might I add), you invent bullshit excuses for not supporting said consoles (citing that the PS3 is too weak to do it, then you go around and entertain the possiblity of Android/Raspberry Pi ports - I hope I don't have to tell you how much more inferior these systems are in comparison - because it would really show your ignorance on this matter), and in the end what it all boils down to is that FOSStards want to make some lucrative money deals with HTPC hardware vendors - so that the nice hardware vendor can get his software royalty-free and then reap those benefits by not passing any of the savings on to the consumer but rather taking them for themselves. From the perspective of the end-user, they might as well use a closed-source set-top box software package if all the difference it makes to the end-user is that your hardware vendor gets to pay less for flogging his product.\n. davilla - sorry to burst your ill-informed bubble - but PS3 can indeed do H264 hardware decoding on the Cell - up to quality level 5.1 - there is a Cell SPE decoder that is provided to you out of the box in the SDK. If this feature wasn't available, Showtime (a media player that still caters to consoles, unlike yours) wouldn't be able to run HD x264-encoded videos at fullspeed.\nSo please dude, start acting like a mature adult (like I would expect most coders in a public repo to be) and by all means do heed your own advice - GAIN KNOWLEDGE of the shit you're talking of (BTW, it's 'you have no knowledge of' -  not 'no knowledge about' - just FYI - speaking intelligible English is definitely a plus in software engineering land) - in this case, your claim that the PS3 lacks hardware decoding of any kind (yeah right).\nAgain, you're employing the same tactic I alluded to in an earlier post - making up bullshit excuses as to why this or that platform can't be supported. This, I presume, is supposed to cover up the predisposed bias of this new HTPC-centric XBMC team. If you guys would just admit that you have no interest to pursuit consoles of any kind - that'd be one thing. But don't invent bullshit reasons which - to any seasoned coder in this area - can be discredited out of hand. Another nice fairytale i heard earlier by one of the XBMC devs on the forum was that the PS3 Cell PPU was about as fast as a Pentium 3 700MHz CPU. Nice try bubba - but I actually port software on a daily basis to PS3 - I think you would happen to find it's more along the lines of a Pentium 4 2.4GHz CPU (yes, I benchmarked it - I make my claims based upon 'findings' - something you might want to try sometime - you know, not pulling claims out of thin air and having people believe it - that kind of stuff). So, again, who here 'doesn't get it'?\nYou want to know something else? Why the hell would I even attempt to port XBMC to PS3 when I know the lead devs have ignorant and misplaced uppity atitudes like you? That's something for you to ponder. Seriously, the response you've given me just now just screams '15-year old kid with an attitude'. I don't mean to be derogatory, but your constant 'dick' remarks and whatnot and then this ill-informed ignorant rant really speaks to that - I can play the abrasive game a lot better than you, I wouldn't attempt to go down that road for your own self-respect.\n. To tell you the truth, I'd have to factor in how you talk down to people before I invest my time into something that won't even be appreciated by you lot. My time is my most valuable resource - something I won't ever get back - you can get your money back, but I can never get my time back.\nWhy do a lot of work for a bunch of trashtalking folk when there are on the other hand a lot of nice people in the Showtime camp that DO CARE and don't care about whether or not HTPC hardware vendors come on-board? Really the decision is not that hard to make.\nNot to mention - when are you going to 'remove' the PS3 defines in the future for 'increased portability' if I do make that port and commit it? If your heart is not in it, it's not in it - and you're going to sacrifice ports as if it's Russian roulette.\nXBMC became big because devs had their heads still screwed on and appreciated community effort - you can lose your comparative advantage at any point, and by acting like this, you won't be winning any friends anytime soon.\n. LOL at your veiled threat of me getting 'banned' for absolutely nothing except getting your poor little ego hurt. It seems your 'criteria' for getting banned is people owning you in a conversation and you not wanting to listen to criticism. You would feel right at home in North Korea.\nLet's get one thing damn straight - you engaged me in a conversation (in a very impolite and abrasive manner at that) - therefore, I 'abused' nothing - you wanted a reply - and you got it - your only issue is that you were not able to destroy me with logical arguments - therefore, out comes the veiled ban threats - the last resort for people who cannot win an argument in a sensible way. and have a narcissistic ardent need to win every argument. Except you'll find you will not win anything here - the more you talk, the more you talk yourself into a corner. You made your own bed, now you get to lie in it. Accept the consequences of what happens when you try to get the last word talking to somebody who can intellectually outwit you.\nYou spread falsehoods about why a PS3 port wouldn't work - then when I set you straight on that, out comes the 'oh do it then'. Hence showing you had absolutely no clue about what a PS3 port would entail, yet saw no issue in spreading falsehoods anyway.\nI'm done with you now too, OK bye. And you can put that offer for a PS3 port of XBMC where the sun does not shine for the record, because I will not bother developing it just FYI. Try to talk to people with more respect. Until then, your project will die a slow inevitable death. Bye now.\nAnd finally, it's 'to begin with', not 'being with', it's 'have a nice New Year', not 'have nice New Year'. Try to make it a point to write in proper English, for the second time. Such a shame to see main devs can't even converse in proper English nowadays. How the mighty have fallen...\n. ",
    "crash123": "\"...your project will die a slow inevitable death.\" lol\n. Nice. Trivial thing for such a huge a huge pull request but the XBMC licenses need to be updated :)\n. Wrong handle. @jmarshallnz \n. ",
    "mmrvka": "no, unfortunately it doesn't.\nhttps://github.com/xbmc/xbmc/commit/89bdffb7a405db2a6fa96a7e35cdeea5f631cd56\nis for smart playlists which are media type independent. my really small fix is special for the video database.\n. ",
    "HarryMuscle": "I've made some changes ... closing this request and will open a new one.\nHarry\n. Thanks elupus.  I didn't realize that feature existed until after I created a new pull and made changes.\nBtw, the new pull for the Slingbox patch is here: https://github.com/xbmc/xbmc/pull/77 .  Feel free to check it out when you have some time.  It would be nice to finally get this into XBMC.\nThanks,\nHarry\n. I fixed the IsDiscStub function like you suggested.  I left the -1 since that's what the Find function actually returns.\nAs for getting rid of the DialogPlayEjectCancel dialog, I tried to see if that's possible by inheriting from the DialogYesNo dialog (I need to inherit since I need to override certain dialog behaviors in the OnMessage, OnAction, and OnInit functions).  Unfortunately if I inherit from DialogYesNo I also inherit the ID (since that's tied to the actual IDs used in the XML file that define the Yes No dialog) and when adding the new inherited dialog I end up with errors about duplicate dialogs with the same ID.\nSo it seems that in order to get rid of the DialogPlayEjectCancel dialog I would need to do an overhaul of how the dialog system works to allow multiple dialogs with the same ID.  I'm assuming you will agree that it's better to just leave the DialogPlayEjectCancel dialog.\nAs for the comment about osx support, are you referring to OSX build changes (ie: changes to the Xcode project files)?\nThanks,\nHarry\n. The reason for the inheritance is because of the Eject button.  I need to eject the tray without closing the dialog.  Otherwise if I just call the ShowAndGetInput function on the CGUIDialogYesNo class, when the user clicks the Eject/Load button, the dialog would close, then I would eject the tray and then I would have to open the dialog again, then the user would click the Eject/Load button again (to close the tray with the disc) and the dialog would close and I would close the tray and then I would have to open the dialog again, so the user can click the Play button.  That would cause lots of flickering and just doesn't seem like a good approach.  It makes so much more sense to deal with things when the user clicks the Eject/Load button without closing the actual dialog and to do that, I need to either inherit from CGUIDialogYesNo (and override the OnMessage function) or create a whole new dialog class.  And since inheriting from CGUIDialogYesNo creates the problem of duplicate IDs, the only choice left is to stick with the new CGUIDialogPlayEjectCancel class.  Also while I'm making a whole new class, I added things like only enabling the Play button when a disc is actually present, etc.\nHope that clarifies things as to what my reasoning is.\nThanks\nHarry\n. I thought the window ID is tied directly to the ID specified in the XML file.  I noticed all the window IDs are XML ID + 10000.  So I was under the assumption that the code simply minuses 10000 to get the correct ID as used in the XML file.  Then again, we specify the XML file used for the dialog, so maybe the XML ID is irrelevant?  If anyone could confirm that that would be great.  If the XML ID is indeed irrelevant (since we already specify the XML filename) then either one of your suggested options should be doable.  Otherwise I'd need to change the base dialog class to allow two separate IDs, one for the window and one for the XML ID.\nHarry\n. In that case I think your idea should work no problem.  I'll probably go with option 1, I'll just need to add a new constructor to the CGUIDialogYesNo class that allows me to specify the window ID.\nThanks,\nHarry\n. I've done the changes to implement option 1 that you suggested.  I think it's actually quite a good solution.  Let me know what you think.\nThanks,\nHarry\n. EDIT: I think the next comment has a better idea.\nI was thinking that that change does exactly that.  We're using the item.IsDiscStub() function as our third state.  Since if the PlayFile() function returns false and the file is a Disc Stub, then based on how the code is structured in the PlayFile() function, we know that the dialog was cancelled.  If the file is not a DiscStub, then it's business like normal (ie: failed playback).\nOne item to note, if the PlayEject dialog actually starts to play a DVD, there is a separate PlayFile() function call made outside of the one that we are currently dealing with.  In other words, if the file is indeed a Disc Stub, PlayFile() will return true only if the Play button was pressed (which results in a separate call to the PlayFile() function once the DVD auto play stuff kicks in) and it will only return false if the PlayEject dialog was cancelled (if the file is a Disc Stub).\nWe could however possibly move the check of IsDiscStub() a few lines higher to the same if statement that actually calls the PlayFile() function, so it would look like:  if (!g_application.PlayFile(_item, bAutoPlay) && !(_item).IsDiscStub()) .  That way a cancelled PlayEject dialog would result in that whole section that deals with failed playback being skipped.  Would that be be a better solution?\nThanks,\nHarry\n. I had another thought ... the whole point of the PlayFile() function is to initiate playback of the specified file.  In the case of a Disc Stub file, the \"playback\" of it is to present the user with a dialog box (the PlayEject dialog).  What the user does with the dialog should really be irrelevant (just like if the user where to stop a normal movie from playing shortly after they start it).  So in other words, as long as we succeeded in presenting the user with the PlayEject dialog, PlayFile() should return true to let the calling function know that it did what it was supposed to do and it succeeded.  If the user happens to cancel the dialog, that shouldn't really prevent PlayFile() from being successful, the user just happened to change his mind.\nHope that makes sense.  Personally I think that might be the best solution.  Let me know what you think and I'll make the changes.\nThanks,\nHarry\n. I've made the changes and everything seems to work nicely with queues.  The only \"issue\" is that the only way to stop playing a DVD is by stopping it, which also stops the queue.  Would you (or anyone else) happen to know which function takes care of stopping the queue when file playback is manually stopped.  If I can find that code, I could change things so that if you stop a DVD it will still continue playing the rest of the queue.\nThanks,\nHarry\nEDIT: I figured out the parts of the code responsible for stopping the queue when file playback is manually stopped.  The problem is that there's no simple way to see if the file that was stopped was a DVD/DiscStub or not.  Which made me wonder if we should even allow Disc Stub files to be queued.  After all the whole point of queuing items is to allow them to play back without user intervention.  Disc Stub files need user intervention to insert the correct disc etc.  So I'm wondering if you'd be OK with me simply disabling queuing of Disc Stub files.  I could either do it silently (nothing happens when the user pressed Q on a Disc Stub file) or if you'd like I can make a dialog appear letting the user know that Disc Stub files cannot be queued.\nLet me know that you think of this idea.\nThanks.\n. Sounds good then.  I'll push the changes shortly.\nHarry\n. Changes are all done and ready to be pulled.\nThanks for all the feedback to make this work.\nHarry\n. I don't think there's anything stopping us from turning the contents of the disc stub file into an xml file in the future if the functionality is needed.  As for not adding another extension, not sure what exactly you are referring to, since in the next sentence you mention another extension: .xstub?  It might be just me cause I don't know the internals of XBMC as well as you guys the devs.\nHarry\n. @jmarshallnz, you are correct, bError is superfluous so I've removed it.  I was thinking it might be more useful when I first added it and then forgot to take it out.\nThanks,\nHarry\n. Just wondering if there's anything that's holding up this patch from being reviewed/added.  If it's just a matter of not enough time, that's totally understandable.  However, if there is something feel free to let me know and I'll see what I can do.\nThanks,\nHarry\nP.S.  I know I'm missing the Linux Build changes, however, I'm not familiar enough with make files yet to figure out how to link the code properly.  Currently I'm simply adding all the new files to the filesystem make file (which links properly for me), but I know I should be adding them to two separate make files (since one set of files is in the filesystem folder and the other set is in the lib section) and then configuring the linking properly.\n. @cptspiff, thanks for the changes.\nI've added the changes to my code so they are now part of this pull request.  Whenever one of the devs has a moment to push this into XBMC that would be great.  I know a lot of users are waiting for this :)\nThanks,\nHarry\n. Friendly bump :) ... hoping to get the attention of one of the devs.  As far as I'm aware there is nothing outstanding with this pull request and it's all ready to be pulled.\nThanks,\nHarry\n. That's elupus for finding some time to look at this.  I'm gonna try to rebase this locally and push the changes to my Slingbox branch.  I'll post back when it's all done.\nThanks,\nHarry\n. I've rebased things locally and resolved the two merging conflicts.  This should now be ready to be pulled.\nThanks,\nHarry\n. Hi elupus, thanks for the git advice.  I believe I've done it correctly this time.  Please pull when you have a moment.\nThanks,\nHarry\n. Just a friendly bump ... it would be nice to get this pulled before it needs to be rebased again since I'll be away for a few weeks soon.  I know a good handful of people are looking forward to this making it into XBMC.\nThanks for all the hard work,\nHarry\n. I noticed JMarshall fixed this a day or two ago, so I'll close this pull request.\nThanks,\nHarry\n. I've moved the code over to the actual PlayEject dialog like you suggested and simplified things for Line 2.\nThanks,\nHarry\n. While I'm making changes to the Disc Stub code, I moved the #ifdef section around a little to better handle things when running on systems that don't have a DVD drive.  Before, the whole section that deals with disc stubs was skipped when compiled for a system with no DVD drive, meaning that the function would actually try to play a disc stub file as if it was a normal file.  Now, it simply returns true to let the calling function know it handled things ... which is do nothing on a system with no DVD drive.\nHarry\n. @jmarshallnz, just wondering if there's anything else outstanding that you would like me to change before this get's pushed into XBMC?\nThanks,\nHarry\n. ",
    "GritzNGravy": "I made a github account so i could bump this- excellent work harry! =))\n. ",
    "tiben20": "anarchintosh elupus is right about the current seek that will corrupt the download. My test were done with megaupload free account this is why i didn't see it right away.\nI'll see if i can make the seek happen on what as already been cached instead of making it on the input stream directly\n. ffmpeg change are going to be removed. They were only required for internal filters and i won't keep the internal filters they required too much change in the ffmpeg core to be stable.\n@elupus ill look into removing the ipaintcallback and the debuglog too\n. @wsoltys i have no idea you might be able to get more help with google, i never got this bug with vs studio\n. I will look into the reason why the shaders loading when not using dsplayer when i added the shaders for dsplayer they were not loading when dsplayer was not used.\nFor the warnings i might need some help\n. I will add a message notifying the user that he doesn't have the codec required to play the file. It will be better than a easier for the user instead of having to look at a line in the xbmc.log \nDon't remember why blinkseb removed the baseclasse from the solution it was there when i incorporated them at the start\n. Cptspiff:\nI removed everything in log.h,log.cpp and thread.h\nabout timeutils.cpp i'm using the function llMulDiv which come from the baseclasses which is only for windows directshow.\nAlso cleaned the typo and used = {0} for guiwindowsettingscategory\nStill need too see about the modification in stdstring.h\nfor the Util.cpp currently .sup are bluray subtitles and can be used by dsplayer\n. ",
    "nilzen": "The forum thread mentioned in the first post, is it inside some internal dev forum category? I can't access it...\n. ",
    "bradmann": "Thanks.\n1. I originally had the full fields spelled out but I thought I would save some uri space and network traffic by shortening them. It only buys 20 bytes per uri though, and I can definitely see how the full fields help from a usability standpoint.\n2. In a REST interface, ideally you would have a single location for a single resource, and then pass information in the request headers or url parameters about how you want that resource. However, you're probably more in tune with where the webserver is heading, so I don't mind making that change if it's how you think it should be done.\nThanks for the FYI. Branching definitely sounds like the way to go. :-)\n. ",
    "Giftie": "Thanks for pointing that out..  I should have read what/where I was typing...\n. Messed this up royally beyond repair..  Createded a new branch and resubmitting this PR since I now know how to work GIT a bit better..\n. Tested on an existing system that has settings.xml in the ./xbmc/userdata/addon_data/screensaver.xbmc.builtin.dim(and slideshow)  works correctly.  The setting stored in addon_data is still stored as a floating point(ie 72% on the screen is saved as 72.000000)\n. Fixed string and squashed.\n. Changed to default to true.\n. @jmarshallnz - You are correct about the GUIDialogMusicInfo.cpp changes.  At first I thought they were needed, but they definitely are not needed.   Removed.\n. Now part of #1017\n. I think I figured ListItem.DBID.  I believe this is set in GUIInfoManager.h/GUIInfoManager.cpp  Am I correct?\ncpp\ncase LISTITEM_DBID:\n    if (item->HasVideoInfoTag())\n        return item->GetVideoInfoTag()->m_iDbId;\n    if (item->HasMusicInfoTag())\n        return item->GetMusicInfoTag()->m_iDbId;\n    break;\nAm I on the right track? This should provide ListItem.DBID for Audio and Video files\n. I'm making some headway, I have ListItem.dbid being properly set for Video files, but not for Music.\nThe code I have so far is the following:\ncpp\n  case LISTITEM_DBID:\n    CStdString dbid;\n    if (item->HasVideoInfoTag())\n      dbid.Format(\"%i\", item->GetVideoInfoTag()->m_iDbId);\n    if (item->HasMusicInfoTag())\n      dbid.Format(\"%i\", item->GetMusicInfoTag()->GetDatabaseId());\n    return dbid;\nVideo Files report the proper ID, but Music Files only report '-1'.  it seems like m_iDbId is not being set before GetDatabaseId() returns it.  I'm probably missing a very simple step.\n. Did a little more testing.  The ID is set properly for songs, but not Albums or Artists.  The '-1' is set by CMusicInfoTag::Clear().\nSometimes the compiler complains that it can't convert a long to a string.  I saw the Format(\"%i, ) used elsewhere.\n. closing this PR as a better method is provided\nhttps://github.com/xbmc/xbmc/pull/1017\n. It might be better to remove the ListItem.ArtistID/AlbumID and add the ListItems.Properties(artist_id/album_id) from PR #963\n. @jmarshallnz - not sure which branch of yours to look in for the code you think might fix the problem.\n. @jmarshallnz - I have tried(and failed) to have the Artist's ID and Album's ID(using ListItem) set when accessing them thru the their Info screens(ie, DialogAlbumInfo.xml)  So I've put back ListItem.Property(Album_ID) and ListItem.Property(Artist_ID).  These ID's properly match the ID's in the Database albumview.  I'm not sure if I can do a better job.\n. By using the following in CGUIDialogMusicInfo::SetAlbum\ncpp\n  m_albumItem->GetMusicInfoTag()->SetDatabaseId(m_album.idAlbum);\nand in CGUIDialogMusicInfo::SetArtist\ncpp\n  m_albumItem->GetMusicInfoTag()->SetDatabaseId(m_artist.idArtist);\nListItem.DBID reports the ID's for the Artist, Album and Song when on the matching Music Info screen.  I'll rebase after I do one final compile(I wish I had a multi-core processor on my XBMC Machine... ) \n. Ok squashed and rebased against master...  I hope this turns out to be the proper way. It works properly.\n. @jmarshallnz - Thanks for the assist..  I really need to learn C++...\n. I'm interested :)\n. @Fice I'm really hoping this does get added to XBMC.  You mentioned Cinema Experience which would really benefit from being able to be integrated into the context menu.  Since you have a pull request already up, if you want discussion on it, you probably be best to open a thread in the Python Development thread.\n. I needed to add both to fix the problem on my side.\n. ",
    "garbear": "sorry about the merge weirdness above. it was only supposed to be 3 commits (network scanning, remember location, and smarter weather). I can submit another pull request if i need to\n. OK, two more patches coming up. First, a minor change in weather.cpp that only affected internal xbmc labels. Second, removed m_bLocationFailed from CGUIWindowWeather because caching the location-failed state doesn't offer any performance benefits.  overall function of the pull request is unchanged.\n. OK. So. Here's the outcome of this pull request.\nIn a perfect world :-), XBMC will show weather for the current location the first time it's run. (When the user switches locations using the weather location slider, XBMC remembers this.) But it also degrades quite well for the following situations:\n1. Location fails due to no network\n   not important, because without internet what good is weather?\n2. Location fails when set to \"current location\" (e.g. first time xbmc is run)\n   Upon visiting the weather screen, user is given the option to change to a predefined location\n3. Same as above, but user clicks cancel instead of changing the location\n   A location refresh is triggered. If it succeeds, we're in our perfect world. If it fails, back to # 2. If it fails and the user is a ninja and quickly returns to the weather screen (so the location update is still in progress), on to # 5.\n4. Location fails when set to a predifined location\n   \"Current location\" is simply skipped on the weather location slider\n5. Location is set to \"current location\", but the user checks weather before location has a chance to fail (mid-update)\n   When location eventually does fail, a NOTIFY_ALL msg is sent and # 2 occurs\n6. Location fails but is eventually refreshed and then succeeds (weather set to \"current location\")\n   When weather finishes refreshing we return to our perfect world scenario\n7. Location fails but is eventually refreshed and then succeeds (weather set to pre-defined location)\n   Current location is added on the weather location slider\nDoes that address all the cases? If there's any I missed, lemme know\n. @jmarshallnz, that's how I originally implemented it, and I ran into the following problem: how to differentiate between an ephemeral failure (say, network problems) and a permanent one (not in google/ipinfodb's database)? Prompting the user upon failure helps us decide... \"Location lookup failed, switch to another one? OK/Cancel\" - Intuitively, cancel does nothing permanent (xbmc will try to redetermine location) and ok Does The Right Thing (permanently switches to area code 1). Most importantly, the window message makes sure this happens in a noticeable (non-confusing) way.\nAlso, the auto areacode is only placed in the location spinner when the current location is known.\nIf those were the terms, it looks like they've been updated, http://www.weather.com/common/home/legal.html. Only restriction I can see is on copyrights, and you can't copyright a datum. If it's a problem we could switch to google's weather API\n. I'll approach that by tackling the larger picture. XBMC has what, like 200 skinable windows? TBH, I think it's a greater offense to shove New York's weather in your face 200 times than an admissible 50-pixel void =)\nAlso, a second point is that it adds confusion (maybe resentment?) when software takes the initiative to modify your personal settings without notifying you.\nEDIT: The shift away from a paradigm, of putting cool features before utility (\"Remember that weather can be shown anywhere,\" -- even if it's the wrong weather?), is unfortunately overlooked by Git's diff\n. The 3+1 behavior and the toggling-back-to-automatic behavior is currently in place, plus in addition the 'automatic' option is omitted if unknown (permanently enabling it would be trivial)\nPrompting the user is annoying and is avoided as much as possible. The only time the prompt will ever be shown is when the user is on the MyWeather screen, and they try to view the weather for the current location, and the location-based lookup has certainly failed (not just in-progress). I figure if the user is trying that hard to see the weather, they deserve a shove in the right direction, right?\n(and i modded my post above mumbling about paradigms right before you posted) =)\n. In regards to 44978fdd34b3ac3dc96b693c3a6d293235b0abdf... did I do the const's correctly? or do they come after the method\n. Uh oh. I think Github just blew its nose all over this pull request\n. =) Yea I tried to rebase (to pull in the new confluence modifications) and Github kicked me in the nuts and ruined everything. What I plan to do is, close this pull request, and open a new one that looks really pretty. (it's all about looking good :-p)\n- I agree, ::toJson should be exiled into the location code.\n- I found the network patches topfs2 posted 7 months ago, http://trac.xbmc.org/ticket/7248. The fixes and additions I make in this patch might get overwritten, so when development picks up on the new network implementation I'm down to help out\n- So now I'm going to open up two pull requests. One is just bug fixes and network enhancements I've come across. Two is location-based lookup. In other words, twice the chances for Github to screw up my pull requests ;-)\n. I prefer to avoid prompting the user at all costs. The code includes a prompt, and 999% of users should never see it, and those who do shouldn't see it twice. (essentially only due to network problems, as IPinfodb always returns at least a country)\nBasically this patch tries to undo the paradigm of putting cool features before utility. Showing the weather on every single window is cool, and how useful is it if it's the wrong weather? ;-)\n. 60 seconds tops, I can split it up into 2 divergent pulls requests ready\nnow. The first 6commits (bugs Andrea network enhancements) on the left, next\n2 comits (location-based lookups) on the right.\nReviewability is 1. Give the word and it'll happen\nEDIT: Haha this makes no sense\n. A lot's changed in the XBMC codebase over the last 3 months :)\nI rebased on top of master (which included 5 of the original 9 commits in this PR). I modernized the JSON stuff to use CVariant and I made sure that the doxygen comments were in tippy top shape.\nThe 3 wifi commits have been submitted separately in https://github.com/xbmc/xbmc/pull/303. I'll rebase these 3 commits out later if PR #303 is merged.\n. You make a fine point, my patch is an example of an engineer putting cool features before privacy considerations, and this should probably bee fixed if the ideas In this are worth using.\nI'll check out the link u sent!\nOne could argue, as well, that all of the scraping services xbmc offers are a similar offense, though less drastic because music and video preferences are a less touchy subject than location. Food for thought\n. complain to the Git Gods. I'll sacrifice my next harvest or something ;-)\nIt seems that topfs2's Trac ticket (http://trac.xbmc.org/ticket/7248) is the storage bin for the network manager code. Let me know when my patches get committed, and I'll update his ticket with links to the relative commits.\n. =D the whole point of this patch is to support my \"smart weather\" pull request at https://github.com/xbmc/xbmc/pull/128. While it's agreeable that certain things like channel and POSIX scanning are extraneous for networking, they are 100% necessary for proxy-agnostic geolocation. So i'll ask that you please don't drop them from the new abstraction!\nAlso, let me know when you update the network code and i'll do my best to help out.\n. I feel like these builtins would be more significant if XBMC remembered the current weather location across restarts. I wrote a little patch to add this functionality, how should I suggest it? With a pull request to pieh/weather_builtin?\n. will do - https://github.com/xbmc/xbmc/pull/229\n. any word on this? when it's merged i'll work on making my PR above less sucky :)\n. I re-implemented this patch with jmarshall's suggestion to have g_weatherManager handle which area is selected. How do I have git replace the commit above with my new commit? The new commit uses code from master that isn't in my remember_location branch (PR #227). So basically I need to have switch branches entirely. Should I just open a new PR?\n. Deal. https://github.com/xbmc/xbmc/pull/263\n. Sorry about the non-granularity, I assumed that the other stuff was trivial, like removing the two unused #defines and fixing the duplicated #define MAX_LOCATIONS\nMy argument for why 1-indexed is much simpler: this is how the setting is ultimately stored in guisettings.xml (you can't have 1 refer to ). Otherwise, every internal reference would require first subtracting 1, and then adding 1 to the reference before saving it to the persistent variable. Removing these two steps seems simpler. By my count, outside of CWeather::GetLocation(), six +1's and -1's were nuked.\nAlso I agree about doxygen comments, I'll add them if this PR is decided to be merged.\nWhat do you guys think?\n. Ping. Any word on this? Thanks!\n. done. git used the commit message from the original commit, I hope it isn't too short.\n. ok, will do. thanks a bunch for the git help, by the way\n. Yup, my original thought was \" I figured that g_weatherManager didn't get any smart global love because it was too simple and didn't pose enough dependency issues to earn its way out of the bss.\"\nYour idea there is a cool one, you've done so much work on the tricky, internal workings of xbmc, you have my appreciation\n. Updated with jmarshall's comment about the evilness of early returns\nEDIT: does push -f always erase everyone from the \"people participating right now\" list?\n. damnit github\n. woooooo 400 pull requests. /garbear opens a beer to celebrate. good job team\n. ee6872a updated to use uint32_t instead of unsigned long (thanks cptspiff's obstinate prejudicial hatred of long types :D)\n. wav files can't be larger than 4 GB. XBMC doesn't support RF64\nsorry this got deleted, cptspiff and I just had this discussion here https://github.com/garbear/xbmc/commit/2ac94f6571#commitcomment-588088\n. this PR's bugfix qualifies it for 11.eden, but it is being deferred until 12.frodo.\nThe bugfix only applies to python scripts, and no python script in any repository uses this broken feature (except for me :p). So definitely wait on it.\n. my point is it affects exactly 0.5 user (me!!! but i'm a dev so i only count 1/2) in the whole cyberworld. Honestly it's better to focus on fixes that affect >= 1 people, thats where I draw the line. ;-)\n. Check this out, http://trac.xbmc.org/ticket/6212. This problem's been reported 3 years ago. If that's not a means for including in Eden, I don't know what is =)\n. The first commit, 8c2249e, is a pretty trivial bugfix.\n(edited:)\nShould e823c34 be merged before eden?. On one side, it fixes the problem in the simplest way possible and introduces no bugs. On the other hand, it's less \"proper\" in that the includes it loads from the addon's local includes.xml are added to the global skin's includes and aren't unloaded when the addon is closed.\nMy vote is commit the fix now, and get the \"proper\" fix in post-eden \"when it's done\"\n. Updated the second commit slightly to work around the change introduced in 371c73b\n. It would also be useful if there was a way to ensure the includes are kept in separate name-spaces\nor similar - this would require the windows knowing who they belong to during load though, right?\nThis is true. Forgive me for not having the details in my brain (it's been a few months) but I looked into a simple patch and one doesn't exist. Needs some pretty deep restructuring to support skin contexts. Maybe a project for a rainy day.\nI see you're pushing code again johnathan. Welcome back :)\nRegards,\nGarrett\n. Closing - requires a more thorough solution. The trivial fix has been committed manually as ed0e58cf9.\n. I see a lot of requests for features like this (editing GUI settings) on the forums. This used to be doable using the deprecated /xbmcHttp?command=SetGUISetting(). This patch is a good idea, and maybe before considering it we should tackle the more general case of modifying gui settings from builtins/json/python\n. tsombrero, i'd be OK with collaborating with you on this one. can you give me write access to your repo? That way I can add commits (like 7c6c30c49 in this case) and they will automatically show up on this PR as additional commits. If not, I can notify you of commits that you can manually cherry-pick. I might not be able to contribute much, but we can see where this PR can take us =)\n. and please excuse the butting in of a total non dev\nCorrection, bossanova, you're on a dev site, participating in dev things, AND you're bringing valuable research to the table. Ipso facto, youre a dev as much as any of us. [ok, back to dev things]\n. Github shows wsoltys synchronize pull request 471 on xbmc/xbmc in my newsfeed. Maybe this is related to the comments disappearing? what is github's \"synchronize\"?\n. I'm with jalle19 and spiff on this one, ! is common enough to warrant this PR. I took the liberty of updating advancedsettings.xml on the wiki, too\n. My \"related rates\" homework in my calculus class told me this isn't a problem if we find another part in the codebase that forgets memory at a rate of greater than or equal to 0.41MB/hr\n. That calculation definitely puts it in perspective, 0.41MB/hr is a significant amount of memory\n. > I think I'm getting the hang of this GitHub thing. :)\n\nShame I don't really know how to do some proper coding to help out the project in anything meaningful! :P\n\nKeep at it DeMoB, all of us had to start somewhere! I think two pull requests automatically makes you official contributor status (even if they are exactly the same :p)\n. This is related to PR #830. It seems location is starting to play a bigger role in XBMC. We should probably consider pulling our scattered location methods (wunderground, freegeoip, wifi, maybe android/iphone gps in the future) into an addon.\n. script.library.geoip suffices. Content providers block by IP, so it doesn't make sense for us to use any other locationing mechanism besides geo-ip for geolock.\nThis duplicates functionality from the wunderground add-on, so I think we should setting on a single URL for ip lookups.\n. If this feature does go the way of a location addon, I got the perfect icon for it :)\n\nEdit: copied the wrong link\n. fixed (maybe)\n. ya. it was just a thumb i drafted a year or two ago\n. makes my geo-wifi patch look better and better ;)\n. Three strikes you're out\n. Glad to know someone is as OCD as me :)\n. Gotta start somewhere. Cheers to getting you involved in XBMC's development!\nI'll let others comment on the million whitespace emails flooding their inbox right about now ;-)\n. updated (already) to appease OOP\n. I'm pretty sure I've learned more about XBMC's codebase from rejected pull requests than accepted ones.\n. I feel that spelling errors would warrant a PR, and most other cosmetics like caps and spaces are probably fine left as is.\n. i had a birthday party last week. my birthday present from me to you is a list of typos in XBMC: http://sprunge.us/PaJV. go crazy :)\n. deleting a TODO is possible? hm, you learn something new everyday\n. +1. Off topic: started this also, ran into a problem: my python screen saver couldn't use includes.xml or Fonts.xml (even tho xbmc complains about not having one). When this gets in I'll dust off my old branch and see what I can do.\n. I was able to do python screensavers without adding another extension point. It reuses the existing one, so a python file with <extension point=\"xbmc.ui.screensaver\" library=\"default.py\"/> will show up to the system as a screensaver.\nTwo issues with my solution: addons can't be a script AND a screensaver (limitation with xbmc: see this fixme), and the few existing scripts I've tried don't die immediately when a key is pressed.\nHere's the patch. a888d2bf6\n. I guess multiple extension points do work, but I'm clueless where this is in the code. \nThe test screensaver has problems running on top of other addons. I see a CAnnouncementManager - Announcement: OnScreensaverActivated from xbmc event fire, but the screen only dims - no SS.\n. Added to the July merge window. Screen savers during modals is not included in this PR\n. To run the script? I'm afraid I'm confused\n. I can carry the torch. Can you clarify sphere, what is meant by using ::Create and ::Destroy?\n. Off topic: Something that struck me as weird is that databases aren't loaded on startup, they're loaded \"just in time.\" Thus, a database update isn't done on app load, it's done when the skin first uses \"HasContent(Video)\". Just something I found weird, and something that made debugging the DB creation/update process a little more difficult.\n. The last (maybe) piece of the puzzle falls into place, screensavers are stopped after 5s if they don't exit on their own. Are their any other blockers I'm overlooking?\n. I tried the AlarmClock approach in the two new commits. It's a much less volatile approach than dissecting the processing loop. Wish I had known about g_alarmClock a lil earlier!\n(edit: updated commit below)\n. Rebased with all comments and fixes above included. Any show stoppers before we merge?\n. Fixed elupus's comment. What value should be used for WaitMSec(15)? I chose 15 because it's about 60fps.\n. Updated the message processing part (see commit description)\n. Rebased into single commit. @elupus any more thoughts?\n. Merged by hand in 469b420\n. Almost :)\nThe key is to have CBuiltins::HasCommand(\"toggledebug\") here return true (action id is then ACTION_BUILT_IN_FUNCTION). This is done by making \"toggledebug\" a builtin function (listed in the BUILT_IN commands[] table instead of the ActionMapping actions[] table). Instead of static functions, your code will be below a statement like this: else if (execute.Equals(\"toggledebug\"))\nWhen this is done, <l>toggledebug</l> will still work plus skins and scripts can now also make use of your work.\n. SetDebugMode() needs a good home. I nominate (non-static) CAdvancedSettings::SetDebugMode(int) because we are already accessing its member variables, and this has the added benefit that you can factor out these two lines into your new function.\nAlternatively, ditch the new function and just c/p the code. Thoughts jmarshallnz?\n. Thanks for making XBMC even better!\n. It looks like we have unused variables at here and here\nWould it be possible to split up the big commit so that lib/ additions and xbmc/pvr/ additions are in separate commits? I know it breaks compilation but it's too big for github to load the commit diff\nedit, nevermind just realized I can do it myself\n. Use xbmc.Player().onPlayBackStarted(). This doesn't require a timer to fire off and you can then change the audio/sub stream as the video starts playing.\nIf the latency using this method is undesirable, please post a bug report on trac. We're only using GitHub for pull requests.\n. ## tl;dr\nGitHub is only for pull requests, not issues. Please visit the forum and we'll work with you there. Please don't begin your post with tl;dr, it's insulting to demean the attention span of the people willing to help you. Thanks.\n. I overreacted. I'll ping the dev who tends to those kind of bugs and see if he can head over to the forum thread.\n. Maybe we can add a few letters to the name? Every once in a while I come across ToLower(); Equals(); . An Equals with \"CI\" or \"NC\" in the name would reduce confusion in those cases.\n. but what about the ridiculously unsafe, non-sanitized direct database querying and arbitrary execution that xbmcQueryVideoDataBase() politely offered me???\n. Interesting, I wasn't expecting the json parser to be so heavy. I'm storing the entire picture info tag (exif AND iptc) so i imagine I'll be seeing some performance hits as well. I'll do some tests later and get back to you\n. Testing 1,000 pics from 16 different cameras under four scenarios, 1) Ignore picture info, where all pictures IDs are queried but no picture info is decoded. Sets the baseline for the next tests. 2) Decode from the Database, where all available data is retrieved from a completely normalized database. Skips JSON decoding and tests the speed of LEFT JOINs on six 1:N relationships. 3) Parse JSON like the PR currently does. 4) Decode info tags from files. This is kind of creative - don't store anything in the DB except file name and path, and re-load info tags from the files. Surprisingly, on a SSD, this is way faster than JSON parsing.\n\nSQLite  (\u00b1 sigma)                 MySQL\nIgnore:      82ms \u00b1   11ms        Ignore:      83ms \u00b1    4ms\nDatabase:  1339ms \u00b1   83ms        Database:  2043ms \u00b1   75ms\nJSON:      7451ms \u00b1 2134ms        JSON:      6017ms \u00b1  591ms\nDecode:    2595ms \u00b1  349ms        Decode:    2476ms \u00b1  466ms\n\nResults: Picture info tags have ~65 fields, most of them useless. The Database test was on a database completely normalized over all fields, as an upper bound on performance. If fully initializing the picture info tag isn't important (maybe the complete info tag can be loaded from the file on demand), the end result is a number between the baseline and the upper bound.\nI think my database can adapt to this strategy. Completely normalizing the db was done without touching any code, save for the declarations of the picture-field relationships. The JSON parsing could be avoided by having the picture database instantiate the FileItem from the dataset instead of JSON, which I do in the test. From the numbers it seems like this is the best way to go.\n. Digging deeper into the JSON test, parsing each JSON string is 3.8ms \u00b1 1.3ms. I'm going to try pulling in BSON as a dependency to accelerate the deserialization stage.\n. I'm just glad my ghetto AMD processor was finally good for something - making quick calcs take more than 1ms :)\nI swapped JSON for BSON and ran some more tests. The BSON decoding inolves Base64 decoding as well because our database wrappers don't support BLOBs.\n\nBSON\nIgnore:    99ms \u00b1    4ms\nJSON:    6753ms \u00b1 1220ms\nBSON:    1324ms \u00b1  103ms\n\nResults: BSON is an 80% reduction in speed versus JSON. It is even faster than directly querying the normalized database. Swapping YAJL with a different json parser might improve parsing times, though it would require a 5-fold increase in speed to compete with BSON.\n. I updated the PR, database abstraction and test cases now use BSON\n. BSON is fast, and I'm guessing that migrating to RDF would take a performance hit. That said, from my understanding, we would be gaining access to more complex object relationships, subject and object URIs, and external maintainability. Having native support for subject and object URIs will be welcome, if not critical, when Heimdall is ready [hint hint ;) ].\nWhat can I do to help us decide on the best path? Any ideas, @topfs2?\n. and isn't this solved by e2335bec?\n. delete xbmc\\interfaces\\python\\generated. recompile\n. Yes, I considered rebasing on your patch and waiting til then, but the patch doesn't deal with the joystick code so I figured this wouldn't clash. Besides, the input handling has been separated from the API so dropping SDL will be changing ~240 lines instead of ~580 when we switch to linux input.\nWhen I dig into trac 14130 i'll probably add the API for linux input to the PR. The JoystickManager can track linux input and SDL joysticks at the same time, so the interchangeability should make the transition a lot easier.\n. @elupus nuking SDL is dropping virtual void Update(SDL_Event *joyEvent) = 0;. This function noops outside of the SDL joystick, and even now isn't used unless --disable-sdl is provided (which currently breaks the build...)\nThe SDL_Event enum is forward declared, so no code pulls in the  headers except for SDLJoystick.cpp\nIs this ok? Is there a better way to do it?\n. Re: the enum SDL_Event, it gets called from CWinEventsSDL::MessagePump(). I don't know the history, does someone know when this code gets hit? Is Update(SDL_Event*) still necessary?\n. @cptspiff is polling joysticks every frame bad? it was done that way before\nI updated the PR with a Linux Joystick API client. SDL joysticks have been dropped.\n. Right now, yes. Earlier it also did event-based joystick handling, but it kind of muddied up the interface, and the client API supported both polling and events so I dropped the events part.\nFor android we'll probably want IJoystick::Update() to noop and do our own event-based handling, and implement IJoystick::GetState() so that the joystick manager can still process the input.\n. gladly :)\n. @koying rebased\nsorry for the spam there, the rebase nuked all of theuni's comments!\nsome configure checks and #define overhauls are in order. Koying, I don't have an android platform to test, could you look into this?\n. The PR has been updated, some previous comments have been included and\n- ./configure checks for the Linux Joystick API and, if present, that will override SDL joysticks (regardless of whether --enable-joystick was provided. The docstring for --enable-joystick is \"enable SDL joystick support (default is yes)\")\n- @romanlum has fixed Suspend/Resume support\nAlso, @TheUni was asking if we should poll() on the fd in a separate thread for the linux joystick api client. I don't think that's necessary because we don't poll() for keyboard events, right?\nFinally, @romanlum hooked up udev above but I'm not able to test ATM\n. with two months of numerous pull requests and drastic code changes... probably not\n. sorry alcoheca my phone just flipped out\n. Are CDatabase objects not threadsafe?\n. I recommend reducing out the unneeded sql subqueries. If you add fixup commits instead of squashing and force pushing (though it keeps things clearner) it's easier to see previous comments and changes, and theres time before merging to do a final squash.\n. I think the last reply got rebased out. Unless my relational algebra is wrong,\nfrom movie where idSet = (select idSet from movie where movie.idMovie = %i)\nis equivalent to\nfrom movie where idMovie = %i\nEDIT: Yup, its wrong :)\n. 5 seconds after the video finishes is perfect :) I checked th Frodo debug log and it gets hit with debug spam during video play, from what I can tell waking the interpreter constructs a new thread state and does some tracing. Player.onPlaybackEnded (if it's hooked up) could remove thread wakes all together but adds complexity. If this advantage is something we'd want I can help change it to event-based sleep tonight. Fortunately, I'm not seeing any debug spamming n 13alpha2.\n. I was thinking only create the daemon when needed (only when a video's playing) like this https://github.com/garbear/xbmc/commit/81f0672622719cac8b58972c6a0c8c1197cd47b7.\nThe commit above doesn't work though, onPlayBackEnded() isn't firing and i'm not sure why (any ideas?) so maybe creating the daemon only when needed isn't an option.\n. HasSlashAtEnd() won't match 'Z:' per #13789. Also, adding xbmcvfs and friends to our unit tests would be a good thing to put on our Gotham christmas list :)\n. TestStringUtils.cpp tests this code directly, can it be updated to include this fix?\n. Thanks ScudLee\n. ",
    "JezzX": "The first commit probably got screwed by this one that was done later but is now completely irrelevant thus causing a conflict\nhttps://github.com/xbmc/xbmc/commit/ae583e68e6a6274fa30d1b35eb869fc38d56831b\n. yeah that revision is not needed at all anymore so thanks for re basing in the 10 mins I tried before work I kept getting errors about not fast forwarding may as well close this one now you have a new one.\nP.S. when this gets merged it will screw up the pvr skin when you merge it in, but just merge it anyway then ping me and I'll take care of cleaning up the pvr side\n. Merged it myself\n. I kind of forgot this is probably a good technical reason why it can't be merged \"just yet\" but I'm sure jmarshall (or someone else) could fix it pretty easy\nhttp://trac.xbmc.org/ticket/11482\n. Nope but thanks for pointing out an error for me :) I forgot to resize the main menu font in the other font sets.\nBesides that its only the main menu thats in caps everything else is lower case now and with the recent changes I did for dialogs and the side menu its about the only thing in the skin that is in caps these days\nHope this pull request auto updates with the commit I just pushed\n. While I'm not saying its impossible to keep both it is a huge effort to maintain both when things that effect home happen They are so different style wise the only real possible way is to maintain 2 different sets of code for home screen and recently added and skin settings and use them as includes\nI guess a good analogy is maintaining the internal ffmpeg and all its digital decoders for dts (the compile time options on linux) and still letting people use system ffmpeg as well.   Its not impossible but its sure a hell of a lot easier to just maintain 1\n. I guess when I put this into main I need to rebase it again and force overwrite to get rid of the \"Merge branch 'master' into Confluence_Horizontal\" commits\n. Here is a quick question for you are you actually using confluence ? because all the osd hides in confluence is the end time and the next playing in music.\nAnd \"wheel actions to the time bar \"is for seeking\nAnd Last right click is already mapped to close the OSD\n. Clicked the wrong button sorry :)\n. I'll but in here with what I said on irc.\nIt needs to be moved out of the current codec info and a simple extra label in with a specific id in each window.  (I assume you can't do it in anything but full screen) \nAs long as the proper visible conditions on the label get set we can then build up all the extra stuff like background,location, extra text like \"Jump too\" we can use Control.IsVisible(blah) in the window\nBut now I think about this my other trac ticket will prevent this from happening.  Because video full screen acts like a idiot compared to music full screen when it comes to skinning http://trac.xbmc.org/ticket/10526 \n. Maybe I'm just not understanding the lingo but doesnt that just mean it triggers when you lift your finger and not when ou touch\n. Just to point out when this was merged I did a test win32 build and got these errors that will of course probably need fixing\nhttp://pastebin.com/KuyVwrqR\n. Not being a code reader myself does this change the default from just minutes ? because that would probably break a few skins and scripts that already use it\n. Pretty much all of Ronies examples can be done via the script .  Qlock does this by executing itself, updating, setting a new timer to execute itself again,\nAs for Loop vs Repeat I think we should go with Loop because its consistent with the animations code loop=\"true\"\n. start it at start-up let it do all the calculations of when it needs to be run next then quit itself and set a time to relaunch with a command line parameter to say this is the main launch \nBut anyway we are kind of getting off topic for this pull request :)\n. I'm sorry but I'm not even seeing an issue here it looks fine to me :\\ and my build was compiled on the 29th so what am I suppossed to be looking for\nhttp://img215.imageshack.us/img215/3125/screenshot033c.png\nhttp://img26.imageshack.us/img26/6935/screenshot034ue.png\nP.S yes I know I'm in a 4x3 res and not 16x9\nP.P.S yeah I should not read these things as soon as I get out of bed Ronie is right it works fine in windowed just not fullscreen my guess is the window is not scaling up the width of the labels\n. I got a question from a skin point of view does this screw with direct access to the current nodes via shortcuts on the home screen ? \nAnd please don't ditch flattening unless I can make a library that doesn't contain all the extra nodes and jumps straight to titles\n. I'm sorry this one confuses me are you saying that every single control now needs a  in case the user pushes back on it ? and what is putting it in the grouplist achieving ?\nIs it making the back command set focus to the list or is it transferring its back command to the list making the list go up one level ?\nIf Its the later I always hated how we did that anyway and think it should be removed, back to navigate \"up one level\" in the list should only work if the list has focus\n. Ahh ok then I guess I need to ask do we really want/need this in confluence ? I can see how it might be useful for skins that pop up a dialog and cover the whole screen in the center but to me (maybe because I coded it) its pretty obvious what you have to do in confluence to get out of it. \nIf anything I would think it needs to be set to window close instead of focus the main list since like I said I found the old default annoying of back when the buttons are focused still navigating the unfocused list\n. I still think its a bad idea like ronie said it will get abused by skinners and cause all sorts or frustration for users but that being said if/when it gets merged in I will add it to confluence though I personally think its not very intuitive in that skin since it doesn't really look like a dialog\n. Like I said I'm more than willing to confluence it but I'd rather jmarshall just push it and let me work it out in xbmc git since it doesn't actually need the skin stuff and I hate all the subbranch multiple remote merging and pushing I'll probably end up pushing the code into master myself if I tried\n. Having actually tried this out now that we have a build with it in first thing I must say is its great not having a blank screen anymore.\nSecond thing is the settings for the visualizations are all wrong. if you open up the settings for the glspectrum one it doesn't give you all the normal options like linux and windows (set bar height, wire frame, etc)  instead it gives you the option to change to the waveform visualization :\\\nThat's what the vis select window is for not the viz settings window.   And on that note, I find that if I actually go and set the waveform viz in the correct window it doesn't actually work :\\  you have to select it from withing the opengl spectrum settings :(\n. time string ? the point of the other one was to give a % value so we as skinners could do a graphic to represent how much has been played\n. to be honest I was thinking of actually making the tick a progress control (if they are even supported in lists) so that it starts off as just an outline (except on 0) and then fills it self up the more you have watched.\nAt least that was my current thought.   But really I'd call it ListItem.PercentPlayed  seems a bit more obvious about what it is than ResumePoint and also fits for audio\n. I'll just pop in here and say please don't commit the skin changes :) I'll work on that after you merge it\n. I guess the thing it has over runscript is no scripts are allowed in a skin unless they can be used for all people and added to the main repo\n. I forgot to mention I'm all for chucking it out too but maybe that's because I don't know python so don't use it myself I would imagine it would be handy for doing so regex on things like file names for flagging\n. Right so this doesn't actually allow us to use the addonsettings dialog yet ? it just moves the values out of guisettings into  resources/settings.xml\n. Does this auto happen with you flip everytime ? because that's a bad idea if you ask me what if someone wants to just use the mouse part or wants to use it as a Filter as well ? or is filling in one of the other textboxes (like the filter button on the confluence side menus) or using the alpha keys to jump in a list.\nWould they have to close the search every single time ?\n. As for the name I think \"media\" fits because it shows the media window type addons Video, Audio, Image, Executable and I don't think it would get confused with other skin stuff for the future because they would be more specific like TexturePack, WeatherFanart, BackgroundTextures, CodecTextures, StudioIcons, etc etc \n. odd it was never a problem when I first wrote the skin xml code did something like the  smooth list scrolling screw it up ?\n. I actually requested being able to add a background to labels (auto sizing) so I could make the breadcrumb bar in confluence better and not have blank white space.  Also other people have expressed interest in it for things like video sub Languages\n. maybe so but buttons are not auto sizing based on the label width :)\n. I'm 100% for this :) so it goes back to the old way\n. The issue with grouplists for this kind of thing is \n- No fixed focus\n- no focus offset\n  but other than that they would be able to be used for such things\n. This was discussed in the team forum a while ago and basically was decided \n\"don't think it should be added to the GUI until there is easy to set up instructions for all the 3 main platforms on the wiki (as well as tweaks to make it run faster) and it can handle images (thumbnails/fanart) as well\"\nThe only things that should be in the UI are things that will also not require other things as well\nbtw its a post by firnsy under the title \"Database (metadata) settings - From AS.xml to the GUI?\"\n. yeah I know but the thumbnail path substitution still requires editing AS.xml anyway so its kind of pointless to put on in and not the other.\nAlso from my point of view many \"iOS/atv2\" users may use it but they do not 'require' it in order for xbmc to work properly so to me its still an advanced setting and spiff, jmarshall, natethomas and Malard all also agreed that it will cause more harm than good in user support\nP.S. I bumped the topic int he team forum so go look\n. Thanks but can you do me a favor and redo it for https://github.com/xbmc/skin.touched touched will be getting removed from the xbmc repo soon hopefully and using magic git-fu to appear in the source\n. Just so you know I'm not ignoring this I have read this from the start :0 and I will add in this functionality I just don't think I will be using this pull request directly.\nReasons are you did a great job of doing the heavy lifting but the alignment was not quite right for me (picky I know).  The album icons were too large and the height of boxes were bigger than the height of Movies and Episode ones (I know I'm being real Picky)\nYou also reused the same control id for them that Episodes had and that caused a little issue when I  fix another issue on trac http://trac.xbmc.org/ticket/12851.\nThe other issue is whats the teams opinion on reusing labels so soon?  while its fine for English all the other languages will have the wrong text already translated and not know if they need to change it.   Anybody else got an opinion on that ?\nAnyway with all those seemingly negative comments aside you basically did about 90% of the work and I just tweaked it to how I wanted so thanks for giving me a kick in the butt too do so.\nI'll leave this request open a little until people comment on the translation stuff, \nIgnore the other changes in this screenshot here is the one I did that I'll put back in main soon http://i44.tinypic.com/2q8vwnb.png\n. While on basic principle I have nothing against this from a design standard I wonder if the placement of it is good ? do we really want it in the middle of Genre and Years ? seems to me a better location would be after Recently added? since the main button takes you to Title anyway\nAnyone else agree ?\n. and done thanks\n. Hi Max looks like you duped me a little here :(  \"Library.HasContent(Sets)\" does not even exist in the xbmc code so the button is always hidden \nMy fault really for not testing it (or maybe I can blame github auto merge :)  but anyway end result is merging the code did nothing :P so I guess I'll just remove that visible condition and have people go to a blank list if they click it.  but hopefully if they use TheMovieDB scraper it wont be empty\n. Its nothing to do with the nodes its all to do with the code in GUIInfoManager.cpp and all it has is\nvoid CGUIInfoManager::SetLibraryBool(int condition, bool value)\n{\n  switch (condition)\n  {\n    case LIBRARY_HAS_MUSIC:\n      m_libraryHasMusic = value ? 1 : 0;\n      break;\n    case LIBRARY_HAS_MOVIES:\n      m_libraryHasMovies = value ? 1 : 0;\n      break;\n    case LIBRARY_HAS_TVSHOWS:\n      m_libraryHasTVShows = value ? 1 : 0;\n      break;\n    case LIBRARY_HAS_MUSICVIDEOS:\n      m_libraryHasMusicVideos = value ? 1 : 0;\n      break;\n    default:\n      break;\n  }\n}\n. I already just made it always visible because I want to use it but not actually group my sets in the main title node. :) \nWorst case is people get a empty window with a \"..\" item in it no real biggy like it used to be before \"Always show parent item when a list is empty regardless of setting\" was added and you lost navigation\n. Well I guess it just comes down too where to we draw the line?\nLibrary.HasContent(smartplaylists) \nLibrary.HasContent(playlists) \nLibrary.HasContent(addons) \nLibrary.HasContent(tvheadend) \nLibrary.HasContent(genre,scifi)\nLibrary.HasContent(genre,Action)\nAll of these are just as valid IMO more so for the first few as they actually show up in the root list of the videos window unlike movie sets\nThe list can just go on and on and then it starts going slower and slower, of course I'm not against adding the option just saying it may not really be needed any more than others, other than its the \"in thing\" right now\n. I can confirm that the test build does fix the error in the example I made.  It also fixes a issue of scrolling I had in touched skin as well.\nXBMC did crash on me at one point while just idling but I think thats probably unrelated because second time I ran it it was fie\n. P.S  this would be nice for eden final since its technically a bug right ? and does effect the current default skin even though most people wont notice it\n. Problem is I can't get it to crash while I have debug on but it has happened quite a bit now just seems while it's idle randomly and the normal log has nothing in it\n. I don't really like it :( maybe it's just a personal thing but i don't see a need to include it. Do we really need to have the buttons just because we can? Can't people just push the buttons our turn the dial\n. you can't even currently control the volume on iOS last a checked so the buttons would do nothing on the atv anyway\n. I think its very variable depending on what site you scrape them from and is the reason I never added it. I'm also on the verge or removing the mpaa ones just because its only in 1 view and used to only work if you scraped from imdb though I guess themoviedb works now too ?\nAlso isn't this supposed to include image files as well ?\n. Well I guess I'll through another personal issue out there and maybe its just me but the icons don't really match the look of the rest of the skin. Is this something anyone else thinks or is it just me ? guess I'm just trying to think of UI consistancy but if every one thinks i'm being picky I can let it slide\n. Wow I was still just thinking about it.  I'm sure there is no rush because it's too late for Eden and Billy has not started doing night builds yet\nWhen we close the pull request then you can get worried  :-)\n. I'm slightly against it just because it introduces another confusing setting and I want to get rid of as many as we can. flexibility is nice and all but it goes against user friendliness for new people.  That being said its such a small change I could live with it but it still falls under an \"advanced setting\" to me\n. Nice work spiff I can hear the out cry now \"XBMC is tracking my location\" :)  even though weather already does it \nAnd yeah the fact that you can disable it is good\n. garbear getting off topic but your image is \n\"Error (403)\nIt seems you don't belong here! You should probably sign in. Check out our Help Center and forums for help, or head back to home.\"\n. yep fixed and nice but its an addon not an addon category right ?\n. Max no point translating it until it gets but in anyway I may have to just pick and choose bits that go in (I hope not) but all I did was add one string and remove one\n. Its had a few updates but yeah I'll make a new build of it and upload it as a different skin to my Google code account so people can just install it separately and try it\n. Ok here you go for all the slackers out there (obviously not for pvr since its a pull request for master)\nhttp://code.google.com/p/jezzxbmc/downloads/detail?name=skin.confluence_lite.zip you can use the install from zip for it\nAnd jut for kicks here is 2 themes for it \"Fire\" (red)  and \"Kryptonite\" (green) these you will have to manually extract I guess since it probably wont do a install from zip with no addon.xml\nhttp://code.google.com/p/jezzxbmc/downloads/detail?name=skin.confluence_lite_themes.zip\nP.S the themes are not part of the pull request because they double the size of the skin to 8mb\n. nope because its confusing and really does not translate well.  I'm more for the ship default with limited stuff available and then let users turn on an advanced setting than make it impossible for users to change anything at all\n. Don't like the idea of DialogExtendedProgressBar.xml being a extra file for every skin surely we can reuse one of the other current ones\n. Well DialogExtendedProgress is basically DialogMusicScan with different id labels which is basically DialogVideoScan with 1 extra animation to move it out the way of the other\nI would bet all 2 now 3 dialogs are pretty much clones of each other with different positions in all skins and could easily be combined if we could find a way to set the positions of them based on if more than 1 is visible, which not all skins do anyway some skins let them overlap \n. does \"add 1 finger single long tap as alternative for double finger\u2026\" get cancelled with movement? because I quite often just sit there with my finger on a list for a while steady in the middle of a scroll reading stuff.\nWhen do those labels even show up ? I've never seen or heard of them in the gui\n. Sorry as a none coder I'm a little confused as too what this does.\ndoes this do that when you click on a bluray directory it pops up dialog select with a list of Menued items on the blueray in plain english names that the disc gives it ?\nIf so I would just go for using the non addon id 3 list instead of id 6 and then I can add a label 2 too it so Label1 = title Label2 = duration any extra info is just fluff end users don't really care about the file size when trying to play something.\n. I'm against exporting and importing resume points it could be months later that you need tip reimport a file or maybe even a different PC and the information would be way way way out of date and your stuck with it unless you do the overwrite old files on export\n. This is actually outdated not since the merge of confluence lite since all items have the same background now I wont be adding this in anymore sorry \n. This should not need anything added to the skin it should auto fill label2 with the date added value when sorted in that way the same way sorting by year and duration and that do\n. From a non code point of view I have to wonder if this is a good idea some skins like aeon can have texture files in excess of 120mb which probably won't even if in memory on somthing like the rpi of atv\n. Right finally got around to trying this and works as expected I do have a few minor pokes at it.\nFirst is the options to put into ",
    "slash2009": "Sorry for all the bad indentations. Need to work on this (using VS 2010 with GIT GUI).\n. I like the idea of having all videos genres from one request, I'll try to get it working and probably will remove the content parameter all together.\n. Ok, I did look at the code again and I can't return all the genres without altering / adding code to the xbmc core functions.\nAlso, I agree with you we should stick with XBMC logic.\nSo is it ok if I only correct my code according to your other comments and resubmit the request ?\n. Cool.Thanks\n. Thanks for the tip ;-)\n. Not sure if I did the push correctly. Let me know and sorry wasting your time with this.\nI'm still learning to use GIT.\nThanks\n. I'm working on the Videolibrary.SetMovieDetails that will allow to update movie details with JSON-RPC. My guess is I need to wait for my push request to be accepted before submitting a new one ?\n. Sorry again for all my mistakes. It seems that I still don't fully understand how to use git and setup my dev. env. :-(.\nThanks for beeing so patient and helpfull :-)\n- I've corrected the the commit according to your comments.\n- Added thumbnail as optional parameter but it doesn't show in the json response (do I need to have genres pictures setup ?)\n. Thanks no rush.\nI did create a branch for my SetMovieDetails (your UpdateMovie)\nThe only difference (apart from my bad indentations :-) is in VideoDatabase.cpp  look here\nhttps://github.com/slash2009/xbmc/commit/9c60407d68b27c5107ea0202f1b1f873f6dc1668\nI figured when you just setMovieDetails you should keep the thumbs (added param to true) when calling deleteMovie. Let me know what you think.\nAny specific method you want me to work on ? if not I'll be working on the scrapers calls with JSON-RPC which should allow to do some scraping action remotely.\n. You need a path to determine which internal scraper will be used (according to how the content was set).\nI like the idea of using the ID, but with the path this method could be used in conjunction with setDetails to scrap orphan items ;-).\nActually,  this make me think that the path should be replace by the full filename\nSo we should one of these alternatives for the parameters:\n1- ID: required, title : optional (requires for the item to be in the database)\n2- file: required, title : optional (does not require for the item to be in the database)\nPersonally, I think alternative 1 is better. Let me know and I will make the changes.\nSorry for the way I did the commit, I'm still learning to use git :-(. If you guys have a good tutorial for git it would be appreciated.\n. I'll make the changes to apply alternative 1 and try to push them. I'll let you know if I have any problem.\nIf everything goes as expected I'll be also preparing AudioDatabase.SearchForDetails and may be some methods for addons.\nI'm glad I could help, the JSON-RPC API rocks and I always wanted to contribute to XBMC ;-)\n. I just realized that my analysis of the situation was incomplete. Doing a search for details in XBMC  Video Library can be different things: movie, tvshow or episode (They are in different tables). Therefore if we use alternative 1, I will have to add a parameter \"type\" to the method. Looks somehow complicated to achieve something simple.\nAm I missing something or should we roll back to alternative 2 ?\n. I'll run some scenarios and let you know.\n. After some tests, when doing a scan new items it not always added to the library if not found by the scraper (so will not have an id). This situation can moslty occure with TVShows and Music Videos items. \nThe only way would be to stick to alternative 2, which is how XBMC does it for individual items.\nLet me know so I can proceed with AudioLibrary also.\n. Make sense, I'll work on this scenario and let you know.\n. Sorry for delay of my response, partly because your question made me think about the pertinence of alternative 2 (again).\nIt seems that my suggestion was based on how I'm building the XWMM addon and I should not ;-).\nBut to answer your question. It is the way It is done but the comparison with the video library is only for finding orphan (not scrapped) items.\nWhat I suggest is start with alternative 1 and see how it goes in the future.\nPS: sounds like a nice tool it will save a lot of time ;-)\n. Hi guys,\nI think I got a simple solution. changed SearchForDetails with file parameter and it works with movies. tvshows and musicvideos (it selects the right scraper). The important part is the title parameter and is required for the method to work.\nThe file parameter value is common to all the items, therefore only one methdo is required.\nLet me know what you think\n. ",
    "ronie": "i've tested $ESCINFO[] thoroughly and couldn't find any case in which it failed.\nthumbs up!\n. as for using it as an indicator in the skin, would it be possible to add it to ListItem.Overlay?\ncurrently ListItem.Overlay returns OverlayUnwatched.png for unwatched videos\nand OverlayWatched.png for watched videos.\nif we could get OverlayPartiallywatched.png for unfinished videos, that would allow for easy skin integration. \nall we'd have to do is add one new image to the skin and there'll be no xml coding involved at all.\n. i'm not seeing any issues on linux either.\n. i get this error when trying to build on linux:\nhttp://pastebin.com/nMUi79hQ\n. shouldn't it  be VIDEOPLAYER_USER_RATING instead of MUSICPLAYER_USER_RATING?\n. i'd certainly welcome the loop functionality.\nmaybe 'repeat' would be a better name for it though?\n. usecase: periodically run a script.\n- a wakeup call script, so xbmc starts playing some nice tunes each morning at 7AM\n- a script that auto-updates your library every hour\n- a script that periodically fetches up-to-date info from the internet (like weather and rss are currently doing)\n  things like that...\n. you're both correct. with a service script you can achieve the same functionality.\nas for the name, it's purely cosmetic of course. i just though 'repeat' would fit it better.\none repeats an alarm after a certain amount of time....looping an alarm, just doesn't sound right ;-)\n. edit: although i'm not sure one could specify the initial execution time with a service script.\nit just starts when xbmc starts....\n. lol, yeah...just add the loop functionality alright.\n. would you mind creating a ticket for it anyway?\nthe issue should be addressed in the xbmc source-code.\nthere's not really anything wrong with the skin code.\ni've tested it on a 2 month old git build and it's working ok there.\nalso, it only seems to happens in fullscreen. when running windowed i'm not seeing any issues.\n. the labels are being cropped on both sides:\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/screenshot000.jpg\n. my initial thoughts:\nwe've recently gone through a number of code changes to unify the 'back' behavior \nand make sure it always does what the user expects it to do (ie. close dialog, navigate up, etc..).\nand now we are handing it off to the mercy of the skinner?\nso they can (ab)use it in any way they see fit?\ni can see the \"press back here to watch trailer\" and \"press back there to see additional options\"\nskin implementations popping up already and in the end we'll be back to square one.\n. build and works as expected, can't spot any issues.\nwould it make sense to add mouse support for this as well?\nmake right-click on a control honour whatever onback function is defined there\ninstead of ignoring it...\n. getting a build error on linux:\nhttp://pastebin.com/raw.php?i=1tCu2ese\n. did test it this morning and didn't notice anything out of the ordinary...\nbut then again, i didn't quite know what to look for.\nam i correct in understanding this has only effect on textures that use aspectratio 'center' ? \n. ok, only skin using that is Shade.\nwill have a look-see.\n. allowing code execution inside xml is a no-go imo.\nthe fact that it could be done until now can even be considered a security breach.\nthe end-user should not have to worry some malicious code could be running\nin the background when using a skin.\n. the first time i ran it i lost all my customized skin settings and the skin loaded with the defaults.\nsadly i can't reproduce it anymore...\nxbmc crashes when trying to configure a skin through addon settings (any skin except confluence):\nhttp://pastebin.com/5XgwyYGu\n. i hope we can get some discussion upfront whether we really want/need to add another window to the skin for this.\nsince it's not unlikely we're going to add wifi / network setup one day as well (which requires 2 new dialogs as well),\nmaybe it's worth to create a generic gui window that can be (re)used by all of those.\n@jmarshallnz since you're the knowledgeable one in this area: thoughts?\n. vdrfan, if you go to www.wunderground.com, does it display weather for your location?\n. closing this one.\nwill open a new pr.\n. weather Underground recently added language support to their api,\nso it's possible to fetch localized weather forecasts now.\nmight be worth checking it out...\nif the results turn out to be ok, we can avoid adding Weather Underground specific strings to our language files.\n. @alanwww1 \ni only briefly tested it, but it looks like there are still a few of those initial bugs they need to straighten out.\nfor one thing, their json response does not validate when localization is used.\nonce that gets fixed, i'm all for adding it to the addon.\n. @HitcherUK: sorry mate. a 'certain' someone decided to add a bunch of new weather infolabels during feature freeze ;-p\n. guess i should be able to handle that myself..\nit's just.. that i've never done it before... and i'm i little scared of the consequences.\nwill i lose my virginity if i do?\n. thanx, i'll handle the ones for weather.wunderground.\n. i'll cherry-pick the one for wunderground.\ncheers!\n. thx for re-opening :)\ni came across one issue, i have a bunch of scripts that are not part of any repo and thus not listed in the addon.db.\nwhile GetAddons does return info on these addons, GetAddonDetails errors out on them:\nhttp://www.xbmclogs.com/show.php?id=9550&mode=raw\n. are we going to submit personal data to google without explicitly asking the user for permission?\ni'm not a big fan of using their service as i strongly oppose to the way they collected the data.\nthey violated privacy regulations in several countries and were already ordered to destroy all\nssid records collected the netherlands as well as implementing an opt-out service.\n. nice one amet.\nonSettingsChanged would be quite useful for service addons.\ni hope we can extend on this by adding callbacks for library updates.\nit's something i could use for a number of scripts.\n. @uNiversal\n1) download PR as a patch: add .patch at the end of the url\n2) apply patch to master: patch -p1 < 870.patch\n. same issue on linux btw.\n. isn't that how confluence used to do it, before this change?\nif i'm not mistaken it did include an all caps fontfile at one point.\nno idea if it contained all charsets for all the languages though.\n. we already have Player.Filenameandpath \nno need to duplicate it to MusicPlayer.* \n. is there any reason for not using Addon.HasSetting(foo) ?\njust to keep the naming scheme of our infobools somewhat unified.\n. yes it is.\nmaybe i don't fully understand the purpose of your patch then.\ni though you wanted to provide a way for skins to check whether a certain addon setting was enabled.\nsimilar to our current Skin.HasSetting() implementation. \n. makes sense to me.\nwe currently only fade the label of disabled controls... the accompanying textures should be faded as well\n. @nuka1195 mind setting the default value to 0xffffffff so current skins aren't affected when we pull this in?\n. @pieh i can't think of a way to get it to work with $VAR.\nit needs a condition to check if the control is enabled or not.\ncontrol.isenabled(id) can't be used on the settings screens as we don't have those id's\n. that would most certainly work\n. git blame says @vdrfan would be the most likely candidate: eb312499f3\n. mail sent to one of the flirc guys.\nwill pull this in at the end of the june merge window.\n. @cptspiff, @alanwww1 : i did include the scrobbler related strings in the addon.\nthese strings can be removed: 15201 15204-15212 15217-15220 15250\n. builds and runs fine on linux.\naddons that fully replace the last.fm and libre.fm functionality are ready,\nso this can go in during the march merge window as far as i'm concerned. \n. last.fm and libre.fm addons are in the repo now.\n@cptspiff the pr needs some rebase love.\n. @maysl may i ask why you closed the pr?\n. thanx, i added this some time ago to the beta version of wunderground, which is available for testing on the xbmc forum.\nin case you have any future patches, please use either the forum or the addon mailing list instead of the xbmc git.\n. please use the xbmc forum for bug reports.\n. please use the xbmc forum for bug reports.\n. code & patches.\n. a few oddities i came across after using it for some time:\n- i have a hard time figuring out how to clear the filtered list and get a listing of all my movies back.\n  i would expect hitting 'clear' and 'ok' in the dialog would do this, but it doesn't have any effect.\n- navigation is somewhat borked. when a filtered list is in effect, hitting back on my keyboard to navigate back to the home screen, we take this path:\n  filtered list > root of movie lib > filtered list > root of video lib > home\n- slight skin breakage: the old filter button (id=19) doesn't show up anymore in other skins.\n. this is gonna be a long shot....\nif we want an intuitive way to control the range slider, without any navigation issues, it should be done like this:\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/slider.png\nthat being said, i'm fine with the current implementation as well.\n. please use the xbmc forum for feature requests.\n. please no bug reports on github,\nuse the xbmc forum instead.\n. http://xbmc.org/natethomas/2012/09/06/xbmc-august-2012-cycle/\n\"Finally, a note for those of you who are tracking and submitting bugs. You may notice that Github has an \u201cIssues\u201d section. The Team would very much appreciate it if you did not submit bug reports through that section, but rather continued to use the forums and Trac. At the moment, the Team is using Issues as a concise means of grouping and identifying particular bugs that they gather from the forum and Trac sources. Thanks for your help!\"\n. was wondering what would happen if xbmc simultaneously imports epg data and scans the music library,\nturns out it alternates the info on the dialog.\nimo it would even make more sense if you could incorporate the videoscan dialog as well.\ni'd say we either want 1 dialog for all or just keep all three of them separate.\n. looks like your changes to GUIInfoManager.cpp break\nMusicPlayer.offset(xx).Title\n. thx!\ni can confirm this fixes issue #11015\n. there are 100's of things that would be nice to have in frodo :)\nbut reality is, we're way past feature freeze and have beta1 knocking around the corner.\n. it fails.\nthis is a generic problem though i think. \nfor instance if i set my weather addon to worldweatheronline,\nnext uninstall this addon, xbmc will still try to use it instead of falling back to wunderground.\n. agreed on the need for a fallback.\ntried your suggestion but, m_screenSaver->ID() returns empty for the slideshow one.\n. i've added the empty() checks to Application.cpp\nthe remnants of the slideshow screensaver now behave as if the dim screensaver was selected.\n. hmmm... what are our options here?\nideally this would be handled by the xbmc installer, but i have no idea if that's even possible (on all platforms).\n@jmarshallnz any ideas?\n. @Montellese thoughts on 3?\nif it's no option, i'll handle 1.\n. yes, only marking it as broken will have no effect, it needs to be disabled as well.\nthe broken screensaver is still kinda usable (in the sense it does not crash or anything), \nbut instead of the expected slideshow, you'll get a black screen.\nisn't there a way to actually delete the addon from the users system on first run?\n. lol, that kinda was my initial question when i said:\n'ideally this would be handled by the xbmc installer'\nso delete on install, yes please :-)\n. dummy addon (marked as broken) is now in the frodo addon repo.\n. hmm..marking it as broken + disabling it still doesn't have the desired effect.\nit still shows up as the selected screensaver.\n@Montellese is it possible to do a guisettings rewrite on update?\nfrom:\n<screensaver><mode>screensaver.xbmc.builtin.slideshow</mode></screensaver>\nto:\n<screensaver><mode>screensaver.xbmc.builtin.dim</mode></screensaver>\n. https://github.com/xbmc/xbmc/pull/1996\n. /me flips a coin\n. thanx!\nshould be fixed now\n. builds and runs ok on linux.\n. -1 on getting this in.\nimo skins should just stick to using the string range that's reserved for them.\n. i can't remember how i found out about it, probably by checking the default xbmc language file.\ni'm not sure why you would like to extend the range to 32999?\ndoes your skin need more than 1000 strings?\nusing 32000-32999 in a skin is no option anyway as those are reserved for scripts.\n. please create a pull request ;-)\nwe don't use git issues for bug reports\n. please add this info on the trac ticket.\nwe don't use github for bugreports.\n. +1 and a lot.\nthe confluence home menu doesn't look to well for a large part of our userbase,\nso i'm a big fan of changing it one way or another.\nyour workaround by localizing it through the skin language file seems like a perfect solution to me,\nbut i'm worried we may not have enough time to get all the translations done before frodo hits the shelf.\n@alanwww1 your thoughts?\n. pretty obvious we're not gonna make that :-)\ni would suggest simply dropping the uppercasing than.\n. @alanwww1 now we have frodo out of the door, are you ok with getting this one in?\n. sure no problem: https://github.com/xbmc/xbmc/pull/2153\n. i wouldn't have had any problem if it was merged right before rc2.\nbut getting it in, untested, this close to release...\n-1/2\n. Jezz_X gave his blessing, so who am i to decline ;-)\n. hi there,\nplease report the issue on the xbmc forum.\nwe're not using github issues for bug reports.\n. please use the forum for bug reports.\n. it doesn't seem to fix things for me. italic text is still (ocassionally) cropped.\nsometimes it's just the last pix of the char that's missing, other times almost the entire char.\nfurthermore, it's making things worse, now also regular text gets cropped sometimes:\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/ital1.jpg\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/reg1.jpg\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/reg2.jpg\n. nice one pieh.\ni've tried the updated patch and all issues are gone now.\n. @maysl mind squashing things into a single commit?\nwould like to get this in now master is open for business again.\noh, get rid of the Merge branch 'master' commit btw. ;-)\n. builds and runs fine on linux 64 bit\n@maysl\n- which platforms are supported? we need a dev signoff on each of those\n- if you could include an icon.png as well. doesn't have to be anything fancy, just a 256x256 screenshot would be good enough\n- in case you missed my previous comment, please squash everything into a single commit\n. thanx @maysl\nit was about time we got some fresh fish in xbmc ;-)\n. there was nothing wrong with the 's'. ;-)\nall i did was rename the skin settings so we don't use whatever they were set to in eden.\n. hmm.. i tried to explain that as best as i could on the ticket :-)\nhttp://trac.xbmc.org/ticket/13839\n. hmm.. doesn't work on my end.\ni still get an empty list when i apply a filter that doesn't produce any results.\nsame issue when marking all as watched and toggling 'hide watched'.\n. yup, all working now.\n. this could happen if you don't run xbmc at a 1280x720 resolution (or any other 16:9 aspect ratio).\nsince your screenshots are oddly sized, i suspect that's the case?\n. one other thing that matters is which font you're using.\nyou can make the textbox perfectly fit with the default font,\nonly to find out it will be cut off again after switching to arial.\n. results are the same, with or without this patch.\npython\ndata = bytearray.fromhex(u'00 ff')\nxbmcvfs.File('/home/ronie/test', 'w').write(data)\nTypeError: argument 1 must be string, not bytearray\npython\nxbmcvfs.File('/home/ronie/test', 'w').write('\\x00\\xff')\nTypeError: argument 1 must be string without null bytes, not str\n. nope, just point me to the next dev i have to ask for approval.\n. my tests were with gui sounds enabled yes.\nfwiw with gui sounds disabled, i don't even get sound before suspend with this patch applied.\n. no issues with or without this patch.\nUbuntu 12.10\nAlsa 1.0.25\nAudio device: Intel Corporation 7 Series/C210 Series Chipset Family High Definition Audio Controller\n. tested and works as expected.\nthx!\n. nope:\n19:56:44 T:140662014445312   DEBUG: FileManager: delete folder /home/ronie/.xbmc/addons/script.xbmc.boblight/\n19:56:44 T:140662072739584   DEBUG: Process - The source file to load is /home/ronie/.xbmc/addons/script.xbmc.boblight/default.py\n19:56:44 T:140662014445312    INFO: ADDON: cpluff: 'Could not read plug-in directory /opt/xbmc-20120113/lib/xbmc/addons: No such file or directory'\n19:56:44 T:140662072739584   ERROR: /home/ronie/.xbmc/addons/script.xbmc.boblight/default.py not found!\n19:56:44 T:140662072739584   ERROR: EXCEPTION Thrown (PythonToCppException) : -->Python callback/script returned the following error<--\n                                             - NOTE: IGNORING THIS CAN LEAD TO MEMORY LEAKS!\n                                            Error Type: <type 'exceptions.IOError'>\n                                            Error Contents: (2, 'No such file or directory', '/home/ronie/.xbmc/addons/script.xbmc.boblight/default.py')\n                                            IOError: (2, 'No such file or directory', '/home/ronie/.xbmc/addons/script.xbmc.boblight/default.py')\n                                            -->End of Python script error report<--\nlooks like xbmc is trying to start the addon after it has been uninstalled\n. looks good to me.\none remaining issue, if you enable a service addon (that's been disabled previously)\nwe don't start it.\n. @amet yes\n. noooooooooooo!!!!!!\n. sure, fine with me.\nhit it!\n. ..0...go!\n. we have a 'development' section on the xbmc forum,\nwhere you can ask for help on questions like these.\ngithub is not the place for it ;-)\n. up to @JezzX \nis there any reason, i'm not aware of, to use spaces instead of tabs?\n. as a last resort, we still have a yahoo musicvideo scraper in eden repo.\nit's not marked as broken, so i assume it's still functional?\ngetting a new last.fm key is meh.\nfor all we know they'll disable it the minute we start using it.\n. fixes all issues i came across so far.\ndidn't spot any regressions either.\n. @JezzX thoughts?\n. no problem on linux 64-bit.\nbuilding on 32-bit fails (with or without this patch):\nhttp://xbmclogs.com/show.php?id=32400\n. it crashes xbmc before the machine goes into suspend:\nhttp://xbmclogs.com/show.php?id=32772\ni guess that's one way to get rid of the problem ;-)\n. nope, i wasn't playing any audio.\ni just started xbmc, waited 20 seconds and pressed the suspend button.\n^ will test.\n. ok, that last change fixes the crash.\non resume, xbmc locks up though and all i get is a black screen.\nhttp://xbmclogs.com/show.php?id=32782\nnot sure i understand your comment on resetting your tree...\ni downloaded your squashed commit from above as a patch file and applied it our master branch.\nif something else needs to be done, write me a manual ;-p\n. ^ confirmed.\napplying http://paste.ubuntu.com/1610818/ for testing purposes\nfixes the crash on suspend.\n. works fine for me as well with the last commit\n. all working fine on my end.\n. @alanwww1 shall i add it to the 12.1 backport list?\nthis touches the confluence language file,\ni'm not sure what's easiest for you/transifex.\n. @alanwww1 thanx, not being able to get the translation in time for frodo +1 crossed my mind, hence i asked.\ni'm not sure if the uppercase function is used widely across skins (need to check),\nthe uppercase function was added not that long ago and pretty much broken from the start,\nso i doubt many are using it.\nas for fixing it, jm left some comments on the ticket:\nhttp://trac.xbmc.org/ticket/13701\n. would it be possible to add it to the 'choose art' select dialog\ninstead of having it as a separate button in the skin?\n. *ronie restarts his brain\n@Montellese sorry for the noise. not sure what i was thinking there\n. nope, please report bugs on the forum\nand use pastebin for logfiles.\n. might depend on your location, but for me it's updated twice every hour.\nregardless, since we provide hourly forecasts, we should at least update once every hour.\nthe 'current conditions' won't be accurate either anymore if switch to 2/4 hour updates.\nthe fact confluence doesn't show a weather icon anymore by default on the homescreen in frodo\nshould already have a big influence on reducing the number of api calls we make.\nif we add this pr on top, it should get us back in the save zone i hope.\n. this someone already tested the shit out of it ;-)\nalbeit using reverse engineering, as i suck at reading c++ code. \nin frodo, confluence will not trigger weather retrieval outside of the actual weather window.\ninvisible controls don't trigger weather retrieval unless you'd use Weather.IsFetched as a visible condition.\nthe problem with world weather online is the number of api calls we make,\nso using 'cheap' calls won't help us there.\nas for weather underground, i have no idea if it's the number of calls or the amount of data we fetch.\n^ @theuni ?\na few other suggestion to reduce the load on our weather providers:\n- call out to our skinners to follow confluence and make all weather labels/icons outside of the weather window optional (and disabled by default)\n- i haven't tested this one, but i think we still fetch weather when you're on the weather window and the black or dim screensavers are active\n. @bossanova808 yeah, i agree. whatever problem we have with wu and the likes should not affect addons for other weather providers.\n@Voyager1 moving the update interval to the addon makes it kind of user-configurable. is this something we should worry about? or should we just take the few that may change the update interval 'once a minute' for granted?\n@da-anda several skins indeed only show a current conditions icon on home, but there's also quite a few that display a 'mini' 7 day forecast on the homescreen as well.\ni think we need to get a clear answer from wu first, if it's the amount of data or the number of api calls we make that's bothering them.\n@amet any thoughts on what would work for world weather online?\n. am i correct in understanding we also need a gotham addon repo as soon as this goes in?\n. make the selected subtitle addon id available to the skin as an infolabel.\n. i would leave loop out of the equation and only check for a negative value of seconds.\n. it might be me missing the point, but wouldn't this work as well:\nif (seconds >= 0)\n. @overbyrn that one is fixed by this pr as well ;-)\n. i'm sure there's a reason it's hosted at feedburner.\nwe don't want millions of xbmc installs to hammer our website for feeds ;-)\n@theuni can you have a look into why it's broken?\n. btw, i'd like to suggest we remove the rss code from core\nand turn it into an addon.\ndepending on external sites in our code is evil :-)\n. @theuni any word?\nwould be nice if we can fix whatever needs fixing in 12.1\n. meh...this is causing major audio borkage on my end.\npaplayer + pulseaudio = underrun x many\nhttp://xbmclogs.com/show.php?id=3069\nall other combinations (dvdplayer + pulseaudio / paplayer + alsa) are fine.\n. hold on a second :)\ni'm currently testing this and it breaks several addons.\nxbmcvfs.File().read() used to return a string, but with this patch applied it now returns a bytearray?\n. os.read() returns a string afaik\n. i can confirm it fixes the underrun issues introduced by PR 2320\n. if a site is experiencing difficulties, it might be better to prompt the user to just wait 10 minutes,\ninstead of suggesting to hit the refresh button.\njust a (maybe too far fetched) thought.\n. hi, would you mind posting your bug & suggestion on the xbmc forum instead?\nwe don't use github for bug reports and feature requests ;-)\n. please use our forum or trac for bugreports.\nthis is a know issue btw,\nticket: http://trac.xbmc.org/ticket/14055\n. http://forum.xbmc.org/showthread.php?tid=116668&page=33\nhttp://apicommunity.wunderground.com/weatherapi/topics/alerts_message_messed_up\nhttp://trac.xbmc.org/ticket/14033\n. @phil65 it's not a problem on our end:\nhttp://apicommunity.wunderground.com/weatherapi/topics/alerts_message_messed_up\n. @phil65 i don't see how that could be fixed xbmc side, but if you've got some ideas, i'm all ears :-)\ni did try your patch, but it didn't make any difference at my end (tested on both linux & windows)\n@cptspiff yup, the api provides a completely garbled alerts message. \n. this is what i get (with or without your patch):\nhttp://i687.photobucket.com/albums/vv237/roniez/tmp/alerts.jpg?t=1364158958\nlooks pretty messed up to me, but again, if it's fixable at our end, i'm all for it.\n. heh figured it out why it works in one skin but not the other:\nline 523 & 524 also need the fix.\nthis seems to work ok:\nfoo.encode(\"latin-1\").decode(\"utf-8\").rstrip('&nbsp)')\nif you could give it a spin:\nhttp://ronie.googlecode.com/files/weather.wunderground-1.0.11.zip\n. k, will move the strip between the en- and decoding.\ni've posted a test version on the forum so users can test this stuff\nbefore i push it to the addon repo.\n. thanx for confirming.\nthe single-quotes are used to escape part of the string that should be used as is: ' de '\n. ",
    "Memphiz": "looks good ... nice and clean :)\n. There are plattforms which can't mount (ios).\n. If nobody of the linux devs spotted any blocker for this, i would like to rebase once more and hit the green button in 2 days.\n. Is there anyone who doesn't want me to merge this fix?\n. When i got it right the UnloadAll message should be changed to \"Unload unused sections\". Cause thats what it does - right jimfcarroll?\n@elupus\ni've changed the commit log message. Did you get my backlog on irc yesterday? Did you understand why IsLoaded returned true?\n. looks good to me\n. I find it logical how this is implemented here. Mute and Volume should not interfer with each other. Unmute should allways restore the previous set volume. And if it was zero - then pebcak or the user wanted it that way :)\n. @jm For the strange lock ... can't i just leave that notify message out? I don't need to know if the control supports pan or not ... ios just allways gives me the callbacks - and windowing knows if it can something do with the gesture actions or not.\nI've tried ThreadMessage and stuff ... i can get it to not lock the thread from the gesturecontroller - but it locks somewhere else then ...\n. I'll merge this tomorrow (in about 22h) if nobody has something against it ...\n. About breaking the screensaver - i think i see it ... will fix in couple of mins ...\n. Although i'm not speaking dutch, i don't see a reason why this shouldn't be merged ... :)\n. Is it a fact that /sys/class/hwmon/hwmon0/temp1_input allways holds the CPUs temperature and not something else?\n. i only asked because of http://www.mjmwired.net/kernel/Documentation/hwmon/sysfs-interface states:\n\"There is no standard that ensures, for example, that the second temperature sensor is connected to the CPU, or that the second fan is on the CPU\".\nBut imho we could just merge this and wait for bug reports, if the wrong temperature is shown somewhere ;).\n. looks good to me\n. looks good to me - but the CTimeSmoother class is over my top. But it has an awesome documentation dude! :)\n. Are you sure that creating the dir and failing with EEXISTS is lighter then doing a STAT?\nWell the problem is, that some error messages come from the different FS implementations itself. So this has to be tracked for all fs implementations - and future fs implementations could readd messages there aswell ...\n. topfs2: nfs for example does return (ret == 0 || EEXIST == ret); ... but it logs every error which comes from the create function ... and each implementation may handle this a bit different. But we have the exists function in our interface - so why not using it in the baseclass?\n. topfs2 that is not the point ... the point is that there are implementations that do errorlogging (which is good thing). And they log any errors - also the already exists error. So if they return false or true - they spam the log.\nOr is it only my nfs implementation what does this?\nIt is annoying when using path substitution for having the thumbs/fanart on the nas ... i have tried both - smb and nfs - and both come up with felt 500 lines of \"already exists\" messages in the logs when capplication trys to init the dirs ...\n. well ... i will grep all apis end check for eexists ... but whenever a implementation is added by someone - it might happen again that it logs that failure ... because that is it what we do when we develop stuff ... log each error ;)\n. sorry for the trouble folks ... i realised that only nfs, samba and hd implementations even implement the create dir method. And of these 3 only smb and nfs logged the error ... fixed both in trunk and spamming has an and ...\n. Yeah looks much better when someone is there which knows how the things play together ;) - will change the pr to your suggestion :) thx\n. I've adapted it and broke it into 2 commits ...\n. touch and hold will do nothing ... if you lift or move your finger - it weill break the screensaver then ...\n. @jhsrennie i'v had to revert it partly ... this breaks the scroll wheel and i didn't find a good fix for this.\nScroll wheel state has to been set on BUTTON_DOWN. When set on BUTTON_UP - nobody resets the zmovement and its scrolling whenever i move the mouse ... clicking resets the z move state then...\ni hop you have another good idea :)\n. what about t his one?\n```\ndiff --git a/xbmc/Application.cpp b/xbmc/Application.cpp\nindex 72a8069..0ec8985 100644\n--- a/xbmc/Application.cpp\n+++ b/xbmc/Application.cpp\n@@ -378,6 +378,8 @@ bool CApplication::OnEvent(XBMC_Event& newEvent)\n       g_Keyboard.ProcessKeyUp();\n       break;\n     case XBMC_MOUSEBUTTONDOWN:\n+      g_Mouse.HandleEvent(newEvent);\n+      break;\n     case XBMC_MOUSEBUTTONUP:\n     case XBMC_MOUSEMOTION:\n       g_Mouse.HandleEvent(newEvent);\ndiff --git a/xbmc/input/MouseStat.cpp b/xbmc/input/MouseStat.cpp\nindex b60217a..06ecea0 100644\n--- a/xbmc/input/MouseStat.cpp\n+++ b/xbmc/input/MouseStat.cpp\n@@ -146,8 +146,6 @@ void CMouseStat::HandleEvent(XBMC_Event& newEvent)\n     if (newEvent.button.button == XBMC_BUTTON_MIDDLE) m_mouseState.button[MOUSE_MIDDLE_BUTTON] = true;\n     if (newEvent.button.button == XBMC_BUTTON_X1) m_mouseState.button[MOUSE_EXTRA_BUTTON1] = true;\n     if (newEvent.button.button == XBMC_BUTTON_X2) m_mouseState.button[MOUSE_EXTRA_BUTTON2] = true;\n-    if (newEvent.button.button == XBMC_BUTTON_WHEELUP) m_mouseState.dz = 1;\n-    if (newEvent.button.button == XBMC_BUTTON_WHEELDOWN) m_mouseState.dz = -1;\n   }\n   else if (newEvent.button.type == XBMC_MOUSEBUTTONUP)\n   {\n@@ -156,8 +154,8 @@ void CMouseStat::HandleEvent(XBMC_Event& newEvent)\n     if (newEvent.button.button == XBMC_BUTTON_MIDDLE) m_mouseState.button[MOUSE_MIDDLE_BUTTON] = false;\n     if (newEvent.button.button == XBMC_BUTTON_X1) m_mouseState.button[MOUSE_EXTRA_BUTTON1] = false;\n     if (newEvent.button.button == XBMC_BUTTON_X2) m_mouseState.button[MOUSE_EXTRA_BUTTON2] = false;\n-    if (newEvent.button.button == XBMC_BUTTON_WHEELUP) m_mouseState.dz = 0;\n-    if (newEvent.button.button == XBMC_BUTTON_WHEELDOWN) m_mouseState.dz = 0;\n+    if (newEvent.button.button == XBMC_BUTTON_WHEELUP) m_mouseState.dz = 1;\n+    if (newEvent.button.button == XBMC_BUTTON_WHEELDOWN) m_mouseState.dz = -1;\n   }\n   UpdateInternal();\n }\n@@ -254,7 +252,7 @@ bool CMouseStat::MovedPastThreshold() const\n   return (m_mouseState.dx * m_mouseState.dx + m_mouseState.dy * m_mouseState.dy >= MOUSE_MINIMUM_MOVEMENT * MOUSE_MINIMUM_MOVEMENT);\n }\n-uint32_t CMouseStat::GetAction() const\n+uint32_t CMouseStat::GetAction()\n {\n   int actionID = ACTION_MOUSE_MOVE;\n@@ -269,9 +267,15 @@ uint32_t CMouseStat::GetAction() const\n   else if (bHold[MOUSE_LEFT_BUTTON])\n     actionID = ACTION_MOUSE_DRAG;\n   else if (m_mouseState.dz > 0)\n+  {\n     actionID = ACTION_MOUSE_WHEEL_UP;\n+    m_mouseState.dz = 0;\n+  }\n   else if (m_mouseState.dz < 0)\n+  {\n     actionID = ACTION_MOUSE_WHEEL_DOWN;\n+    m_mouseState.dz = 0;\n+  }\nreturn actionID;\n }\ndiff --git a/xbmc/input/MouseStat.h b/xbmc/input/MouseStat.h\nindex 33f6ac5..b6cda71 100644\n--- a/xbmc/input/MouseStat.h\n+++ b/xbmc/input/MouseStat.h\n@@ -76,7 +76,7 @@ public:\n   void SetState(MOUSE_STATE state) { m_pointerState = state; };\n   void SetEnabled(bool enabled = true);\n   MOUSE_STATE GetState() const { return m_pointerState; };\n-  uint32_t GetAction() const;\n+  uint32_t GetAction();\nint GetHold(int ButtonID) const;\n   inline int GetX(void) const { return m_mouseState.x; }\n```\nstupid code block ... ;)\n. Yeah your right everything else is more hacky...\n. +1 for fixing this quick of course. I did a (unclean) build yesterday and it had no problems ... though it nearly compiled everything as o f tze compile time. But the issue sounds logical to me...\n. Looks correct to me too...\n. This looks good. If i understand correct the ACTION_NOOP is sent on button down and returns early before screensaver. At least it keeps me happy :) - nice solution imho ...\n. thx man :D\n. Mhh atleast for iOS i don't think so. The iOS SDK also provides a gesture recognizer for detecting long presses. But we don't use it there because this isn't commonly used on iOS apps aswell. I know that for win7 tablets the long press is used for getting the context menu (iOS uses 2 finger tap for this - as other apps too). Don't know how win7 does this.\nBut don't remove that code. Sounds like it might be usefull in the future when more embedded devices come in imho.\n. this pr seems b0rked somehow ... i never committed to it but it shows some of unrelated commits from master ...\n. yeah ... is there any possibility to squash it and keep the ref to gimli as author? ... \n. will do a new one...\n. that is because the waveform addon is non ios compatible but has set plattform = all ... will change that in 10 hours so that it doesn't appear on ios. It has nothing to do with the gles addon which consists of both, spectrum and waveform. Confusing i know.\nMaybe it will be one of my next tasks to split it into 2 addons. About the settings i hope we can count on gimli once he has some spare time again...\n. commit broken auth and rebased once more ... prepare for a push\n. Looks good to me. And i love the idea - looking forward for getting this to the progressbar point :)\n. Rebased ans squashed again. And fixed comments from jm and spiff:\n- make startpercent value real percent from 0 - 100\n- cleaned up headers in AirPlayServer\n- added missing free of plist dict\n- removed unused var in GUIWindowSettingsCategory.cpp\n- removed unused commented functions in DllLibPlist.h\n- added license header to HttpParser.cpp/.h - its public domain\n- fixed string to \"Allow XBMC to receive AirPlay content\"\n- fixed AirPlayServer - now using CFile for tmp image and special://temp as path for it\n- fixed AirPlayServer - check socket >= 0 instead of socket > 0\n- fixed some cosmetics in AirPlayServer\n. to say it with pike's words \"you mean something like binary addons?\" ;)\n. Not quiet sure. TBH i rape the GESTURE_NOTIFY not for query what the current gesture is, but if the control wants inertia. So this is an abuse 100% ;). But i thought it was not intended to getting the control aware of the fact that a gesture would follow but for knowing if panning in horizontal or vertical axis is supported by the control no?\nDon't know how to ask it in a clean way. TBH i hope this inertia stuff will go into the new CScroller class which pieh implemented with his tweeners - someday ;).\nWell open for suggestions as usual for the NOTIFY abuse ...\n. @JM\nWell i tried to send the GESTURE_NOTIFY message on ACTION_GESTURE_BEGIN in InertialScrollingHander. But the message isn't passed to the control at that time.\nThat is because in EVENT_RESULT CGUIWindow::OnMouseAction(const CAction &action) the m_exclusiveMouseControl is false. Exclusive Mouse Control isn't enabled until the ACTION_GESTURE_BEGIN made it to the control.\nSo its tricky because ACTION_GESTURE_BEGIN is send to the control after CInertialScrollingHandler::CheckForInertialScrolling is finished. So it is impossible to send the NOTIFY before ACTION_GESTURE_BEGIN is completly through the chain ...\n. If no other complains or solutions are comming in - i'll rebase and merge it ...\n. by just looking at the code it seems fine to me...\n. Vector of strings definitly sounds better and nicer then parsing a string. So IMHO your work on that is worth it :)\n. For linux it should be included in afpfs-ng. We use version 0.8.1. It should be in the distros - but i don't know ...\nNo clue about windows.\n. And you have to add xbmc/filesystem/FileAFP.cpp/.h and xbmc/filesystem/AFPDirectory.cpp/.h to the Makefiles on linux\n. theuni ... could you test this on linux? i seem to have missed something - because i didn't get it to link ... dunno what it is ... and the readme adaptions mentioning afpfs-ng dep are still missing for this pr - can't edit files on ipad shell ... for building libafpclient on linux - readline-dev, libgpg-error-dev and libgcrypt-dev is needed...\n. TBH i'm with you there - and i won't push the merge of this.\n. Well you are right. If you deactivate zeroconf then airplay isn't able to announce its service anymore ... but i don't know if users know that? - imho its ok to move it above zeroconf since it its logical correct.\nI added it at the bottom because i just didn't think about it ;)\nThe question is ... will the user know that if he turns off zeroconf, airplay won't work anymore?\n. I think graying out is the most logical approach here. And with that we should move Zeroconf setting over the services (because graying out a option above a setting when it depends on it is not intuitive).\nI don't care about renaming tha zeroconf lable though ;)\n. Because for embedded system with limited ressources (e.x. RAM) the user should be able to only activate what's needed. I've turned AirPlay off because I don't use it - and so the needed libplist can be unloaded - freeing some RAM. But I use ZeroConf.\n. Then i still don't get it. If i disable ZeroConf announces - and enable AirPlay - this would be a senseless configuration then?\n. You might have a look at https://github.com/xbmc/xbmc/pull/420 which involves airplay settings aswell ...\n. This is a very special use case then. Why do you do this? Because the announced name from XBMC doesn't fit your needs? AirPlay without zeroconf is useless for the most users (who don't run a dedicated avahi server with custom configs).\nBeside that this dependency is already in mainline (it did come in with another pull request some month ago).\n. Well then it shouldn't matter if you announce 2 services less right? (speaking of airplay and airtunes) ;). \nWhen zeroconf doesn't appear in the GUI then something went wrong with your build imho. Its only there if libavahi and maybe more needed dependencys where found during build time.\n. Great ... really great :)\nGood to go from me ...\n. btw i tested this on win7 64 ... server browsing is working here ...\n. I wanted to test this on ios/gles. But it didn't compile:\nRenderSystemGLES.cpp:399: error: 'GL_MODELVIEW_MATRIX' was not declared in this scope\nRenderSystemGLES.cpp:400: error: 'GL_PROJECTION_MATRIX' was not declared in this scope\n. I'll test this for sure when i get home from work ... no problem :)\n. Didn't spot any issues with this afair.\n. Forgot something - i basically did this as PR because i'm unsure if this still should go into the network settings or if we should give it a own category \"AirPlay\". But when i look at the webserver - it has far more options. So i just want to be sure that this approach is right for airplay too then ...\n. This is how it would look like with this pr:\nhttp://memphiz.f00-bar.net/images/settings-messy.png\nAnd this when giving AirPlay its own category (still logic is a Problem because it depends on the Zeroconfoption)\nhttp://memphiz.f00-bar.net/images/settings-cleaner.png\n. Sounds good ... but we should allow to select the passwordprotection per service. So maybe all use the same password - but i want to have a password on webserver without having airplay password protected e.x. ... so what do we do know? hehe\n. Works as expected on iOS. For calling the AutoInterlaceMethod(). Why not cache the result? It won't change during runtime will it?\n. Nice - i'll give that a compile shot on osx/ios later this day ...\n. compiles on ios/osx ... \n. looks like you squashed and committed this already - by going around this pr right? So you should close this pr ...\n. +100 for the renaming ... how about a new pr which renames ALL file implementations for making the protocol a suffix instead of a prefix?\n. I will do the renaming stuff in an extra pr ...\n. Since the order of the commits doesn't allow to fullfill your suggestion, the only option would be to squash this all into one commit for beeing bisectable :(\n. Yeah - i'll do that ... the splitups where offending to the sqash because they are in the middle (because that was the order i did the work ...)\n. - done - the only thing git didn't get right is the rename of Slingbox.h -> SlingboxFile.h ... dunno why - i've used git mv when doint it :(\n. Rebased the PR and changed renamed the cache files back again. That would be the FileList (class names are same with prefixed \"C\" as usual):\nhttp://pastebin.com/LvDsJhhL\nReady to go from my side...\nPS: please keep the noise low ... that renaming stuff is really annoying work ;)\n. rebase for the sake of the green button\n. cptspiff signed off (well kind of) on irc \n. Looks and sounds good to me based on the assumption that PlayNext(track); plays track number \"track\" from the playlist ... and not the track after ;)\n. ha ... great thing - 2 chairs - one opinion - firnsy already has a similar patch in the queue ... :)\n. without having time to review the commit - this should go in imho. There was alot of whining about subtitles already - i don't want to see more tears rolling ;)\n. when all the hacks wrap over this will morph into the best designed code ever right? ;)\n. I can confirm that cpu usage is back to normal when playing dvd iso ... at least for progressive non interlaced material this fixes the issues (buffering due to cpu peakout) users where running into latly. Tested on ios 4.3 on atv2 ... i bet davilla did ios5 tests with this already right? \nThis has definitly to be in eden...\n. osx:\ntrac12023-1.mkv - same as in trac with the wired font\n- these three are looking the same - and the italic and normal font are the same (good right?)\n  trac12023-2-alt.mkv\n  trac12023-2-alt2.mkv\n  trac12023-2-orig.mkv\nios/ipad:\ntrac12023-1.mkv - same as in trac with the wired font\n- these three are looking the same - and the italic and normal font are the same (good right?) - but\n  its a different font as on osx!\n  trac12023-2-alt.mkv\n  trac12023-2-alt2.mkv\n  trac12023-2-orig.mkv\natv2: same as ios...\n. it behaved differently with current master ... not for test1 but for the others (at least the fonts where different and the italic word was not the same font as the non-italic)\n. I'm not sure if i understand correct. So the fonts.conf has the pathes with the fonts in it right? And i should ensure that on ios the /system/players/dvdplayer/etc/fonts/fonts.conf works and sets the fontpath to media/Fonts? But how may i verify that?\n. I've tested this pr on linux. Works as expected - same like on osx. And btw ... i don't think i will do anything on atv2 because i just don't have any clue on what to do ;)\n. Ok ... here we go (relative not possible since we our outside of the frapp):\nPath for ATV2: /Applications/XBMC.frappliance/XBMCData/XBMCHome/media/Fonts\nPath for iOS(ipad and others): /Applications/XBMC.app/XBMCData/XBMCHome/media/Fonts\nI see that arial is used now on the white sub. But when haveing this paths in place in the fonts.conf the italic word is printed in another font again. And now the strange thing. When i override to arial the italic font is arial. WTF?\n. yep - same on atv2 and ipad - and the library bumps where in place ...\n. yes ... go for it :)\n. @Fneufneu - i've tested your code. Unfortunatly the IOS SDK doesn't provide the net/route.h header. When using the OSX header here it works at runtime on ios too - but with that missing header i had not a good feeling and i'll leave that PR as is for now ...\n. Rebased that PR. I stick with the scutil approach for atv2/ios/osx since its the only solution for both (gateway and primary dns) on all 3 plattforms. Since FREEBSD support isn't merged in yet i leave it to fneufneu to do the gateway/dns code for freebsd, when the time has arrived.\nDavilla or jm could you do a short review and give it the green light?\nTested it on iPad iOS 4.3, iPod iOS 5.0.1, ATV2 iOS 4.3, ATV2 iOS 5.0.1, OSX SL 10.6.8\n. I don't think this pr has dangerous and would like to have it in the aprils merge. FneuFneu already prepared his freebsd pr so that this one here fits in very nice...\n. K ... i'll have to look into this again ... because i think i had some crashes when removing the addon from the vector. Maybe i have to lock access to it ... not sure what happend ...\nAnother possible approach would be a map which maps addon id to a settings map in the addonmanager...\n. looks good to me and seems like it can't do much harm :)\n. tbh i'm with you here. I would leave it as is. Phaeodaria suggested that change for getting rid of pointers...\nAny complaints phaeodaria? Else i would be fine to close without merge...\n. I've rebased that PR. I also stepped through the PushMatrix code with the debugger. It only uses the Copy Constructor. So we have one memcpy here and whatever push_back does.\nIMHO there is no performance hit (didn't do measurements here because i don't think its worth it).\nGood to go from my side.\n. don' be irritated about the commit msg ... its not a fix and therefore not ment to be merged into eden ... but afterwards \n. Nothing obvious spotted (as so often ;) ).\n. Good catch. I'll get a testbuild ready  for the forum users after work for verification. :o). I wonder why it didn't screw on other plattforms...\n. bomb has been planted:\nhttp://forum.xbmc.org/showpost.php?p=1017072&postcount=52\n. We don't seem to get usefull feedback on this grrr ...\n. enough feedback i think. This should go in now imho.\n. What i wanted to say with this is - when we are on that point where the event is set - we are also in the ::stopped method - waiting on that event and are inside of m_pExecuter->m_critSection. \nSo moving the event.set down a view lines after the Process method trys to enter that section it will have to wait until ::stopped metho leaves the section. And this happens only when event.waitmsec times out in that case.\nIt should read \"this event has to be fired without holding m_pExecuter->m_critSection before\" (this one slipped onto the next line). Not sure how to phrase it correctly...\n. If i understand the code correctly the abortRequested flag is automagically visible to all threads of the script isn't it? Imho its part of the addon itself to implement a proper shutdown mechanism. I for myself poll the abortRequested flag only in the mainthread and when triggered call appropriate shutdown methods of the other threads.\nWhats that keyboardinterrupt for?\n. gotcha - i will add raise of keyboardinterrupt then ... though most of the scripts might want to poll for changed settings where this approach doesn't help anything. Polling is a need for situations where we just can't callback. Sad and nasty but you know its true ;).\n. Montellese is partly right:\nCurrent behaviour:\n1. Service scripts are polling for abortRequested\n2. Service scripts get killed with SystemExit exception\nNew behaviour would be\n1. Service scripts are polling for abortRequested\n2. Service scripts are getting abortRequested flag set this time\n3. Service scripts get killed by unhandled KeyboardInterrupt Exception nearly at the same time\nThis is because of current scripts don't catch the KeyboardInterrupt Exception. So adding this doesn't alter the behaviour for current scripts - but it also doesn't allow them to shutdown like they ment to. So i agree that the overall behaviour is the same - but this PR would also be able to FIX the shutdown of current scripts (be leaving the raise of KeyboardInterrupt out).\nNot sure what should be achieved in that regard. Is there some API version or so, so that we could introduce this with a API version bump?\n. Mhhh ... well i figured this whole problem because i'm working on an addon which has to be shutdown proably (listening sockets - multiple threads). Not sure what the majority of other service scripts do.\nStill unsure what is right here. However - when adding KeyboardInterrupt - are we really sure that we don't add a behaviour which might be to intrusive for eden? Beside that we should add this to the wiki somewhere (so best practice - catch the interrupt and shutdown).\n. Nope - it has to revoke the announced zeroconf services and has to shutdown a loaded dll via ctype for example. KeyboardInterrupt isn't an issue for my addon because it isn't released yet - so i can of course take care of it ...\n. I wonder why we even should keep the abortRequested flag thing, when adding KeyboardInterrupt it wouldn't be of any use anymore imho...\n. Just for me to remember - this would fix http://trac.xbmc.org/ticket/11970 and http://trac.xbmc.org/ticket/10845\n. K replaced the abortRequested flag with raising keyboard interrupt exception for a test. TBH i don't have the \"eden feeling\" for that change :(. If you want this elupus please do your own PR on that. This PR is supposed to be eden food.\nAny comments on the principle abort approach implemented here are welcome. If nothing obvious or blocking jumps in your eyes - i would like to merge this one in some days...\n------------as expected the non prepared service addons would puke on exit when raising he KeyboardInterrupt\n18:21:44 T:2957197312   ERROR: Error Type: \n18:21:44 T:2957197312   ERROR: Error Contents: \n18:21:44 T:2957197312   ERROR: Traceback (most recent call last):\n                                              File \"/Users/memphis/Library/Application Support/XBMC/addons/script.common.plugin.cache/default.py\", line 44, in \n                                                run()\n                                              File \"/Users/memphis/Library/Application Support/XBMC/addons/script.common.plugin.cache/default.py\", line 37, in run\n                                                s.run()\n                                              File \"/Users/memphis/Library/Application Support/XBMC/addons/script.common.plugin.cache/lib/StorageServer.py\", line 146, in run\n                                                while not self._aborting():\n                                              File \"/Users/memphis/Library/Application Support/XBMC/addons/script.common.plugin.cache/lib/StorageServer.py\", line 111, in _aborting\n                                                def _aborting(self):\n                                            KeyboardInterrupt\n. Me too. Maybe we can change this one after eden release. (though it might need some time before all the pollers vanish from the repos :) )\n. Yes - we still need the libshairport porting for win32.\n. ahh sorry missread ... its usable without libshairport. When shairport is not found or ctypes is missing it just does the airplay part (video/pictures) only :)\n. Addon can be found here:\nhttps://github.com/Memphiz/script.xbmc.airplay\n. Tbh i'm not really familiar with json-rpc. I know it can be called from within python. When it looks readable enough when called from python i don't have a problem doing it that way. Montellese any thoughts?\n. I get that point. But just for defence - these properties where there before airplay. Exposing that SetProperty method of the CFileItem would be enough for doing the trick (mhh beside the mimetype which is not a property somehow). With builtin its not that nice doable, thats why i introduced params for each...\n. Because i don't have that much clue on python either ;). Will dig into this - thx :)\n. Thx Montellese - no changes to playmedia needed at all now. only the new builtin for ShowPicture (there isn't an api for this in python module either).\n. Rebased the PR and fixed the things which jm mentioned (so far possible). Will squash the commits and reorder when i have the go.\nBeside that i'm a bit unsure if fore pushing changes the commit order (because IIRC i had bisectability in mind when doing this pr).\n. I'll take care of the right order on the final squash. Hopefully github will take that order then when force pushing my repo.\nSomeone special we should invite here?\nI can't tell you what we want to expose. But i can tell you what i need to be accessible for AirPlay - well every function i've exposed in that PR is needed. :)\n. another rebase for keeping the country green\n. What do you need it for?\n. Will work on it again after frodo i think.\n. I know - but AE is broken on osx like sh... and ios6 makes atv2 unusable with XBMC. This one has low prio ...\n. If you wanna prepare something then you could try to figure out if loading shared objects (dll's) on android from python is possible (a.k.a. python module ctypes). If not - this would be a showstopper ...\n. i close this because ae superseeds it.\n. for backward compatibility - could you find out if the scale member in the uiscreen class was there on ios 4.x already? If not you have to guard those with therunning iosversion and default to 1 if not present...\n. No time for a detailed git howto. You just do the changes local on your computer until the commits look like you want them to be. After that you force push to your repo (git push -f origin master). This will automatically update this pull request here.\nYou need to work in your own repo locally of course (not ours), else you can't push.\n. i don't want to be pedantic - but for preventing the condition mess i would suggest the following:\nAdd a member screenScale to the class and do the if thing in initwithframe once and default to screenscale = 1 when uiscreen doesn't respond to it. then use screenScale as the x and y factor. This would be much cleaner imho.\n. eaglview is good - though i won't check if scale is 2.0 but would just use what uiscreen scale returns...\n. thx for yours - looks good now to me :)\n. Gave it a shot on my iPad1 - nothing changed (as expected) - so at least on that side its a good thing haha.\nSo from my side i sign this off - maybe davilla could do an additional test with a retina device (i don't have one off those - and i guess now that this work here is been done - i also don't need one anymore ;) ).\n. yeah we get event down and nothing until released. I'll try something more general then...\n. Mhhh not that easy. iOS injects joystick events by using its own message pump. Thats not possible with a general EventRepeater class in Application...\n. jmarshallnz - would this be overengineered? https://github.com/Memphiz/xbmc/commits/atv2remote2\n. Implemented the timer approach now as suggested by jm. I have to dynamically adapt the timer fire time to the number of queued events. Because there are actions which don't obey the holdTime (volumeUp and down) - and with 200ms firetime the volume change was just to slow...\n. i tried different  times between 10ms and 200ms. It depends of the usage if the queue fills up or not. In movie list in library mode it just can't keep up. I don't have a bluetooth keyboard for testing, but i guess it would behave the same on atv2. Its just the lag of ponys and the atv2 scheduler i think.\nBeside that it is initially fired every 50ms now and slows down / speedsup as needed. Also i check if queuesize > 1 because on that check i've already queued one event up (so basically i could mov the code around and check for empty there). only these sort of events are queued up atm. When using a bt keyboard these events are queued up there too (key down+ key up events). Bot i guess nobody uses remote + bt keyboard at the very same time [tm]\n. Ahh missread you last comment slightly - yeah i guess that would be a cleaner approach - only queue an event if no event of that type is there already. Will do this :)\n. Grats for the marriage. Was nice to have you contribute your last PR here :D.\nJezzX mhhh i'm not quiet sure if i like to have a submenu entry which might end in an empty list tbh. I still don't get why we don't fix this condition in core and make the submenu entry dependend on it?\n. Thx for the quick test :)\n. Good work putting these patches as PR. Really cool would be if you could add a comment with the link to the PR into each ticket you \"transfer\". So that everything is synced :)\n. JezzX you could mail me the crashreport and i could have a look (i'm pretty sure its unrelated too or its about my buildsys or whatever). For this bugfix - i'll push the button...\n. Yeah mail me the crashlog ... :)\n. Thx for that idea - will give it a shot after work ...\n. Thx - urlencoding did the trick :)\n. Well there is a pr in queue which adds repeated remote key presses (talking about atv2 though - no clue about atv1) ... at least for video playback one just needs to push and hold up/down then to change the volume. Pretty easy imho (should work in music fullscreen too i think).\n. nvm ... maybe i just got this whole pr wrong. I just wanted to say that with my pr the volume during fullscreen video playback can be changed by holding button up/down on the appletv2 remote ... \n. @jmarshallnz this is not fixed with the bad usage of the lock. It has nothing to do with it imho. So this PR is still important for AE (on all plattforms of course). Reproduction description is still valid.\n. With the fix jm mentioned the stacktrace of the deadlock now looks as follows:\nhttp://pastebin.com/yT86rN5z\n. Gnif fixed it in his AE branch by sorting the callbacks. Should we close that PR?\n. Builds for ios/atv2 and linux. But i'm too struggling with testfiles and test procedure here.\n. Confirmed, that that test file didn't play before this PR (xbmc just crashed) and played after applying the patch. Tested on OSX and iOS.\nSo basically funk is flowing through my veins now :)\n. indeed switching display on ios can last 10secs on my slow display. I don't get a callback when its really finished switching so i have 2secs fadeout + 6 secs worst case switching time + 2 secs fade in ... all in all 10 secs ... will test the other approach then... \n. Updated the PR. I don't think basing the AutoClose timing in the GUIDialog on GetFrameTime is the right thing to do then, when it depends on when we rendered last. So i've done the EndTime approach here. (JM your suggestion didn't work either).\nPretty straight forward i think :)\n. I don't know. I just gave it a quick shot and it didn't do it. I didn't investigate any further because i already felt that basing the timeout on GetFrameTime here is not the right thing to do. Are you of another opinion here? Or just curious why it didn't work?\n. sigh ;)\n. I find the code much cleaner by using that nice EndTime class jimfcarroll did. (last try)\n. So i gave it another shot. It doesn't work with setting showstarttime in doprocess. Since i just don't get how this is supposed to fix the issue. Could you just add a 10 secs sleep in WinSystemOSX.mm:629 and reproduce my problem and help me out?\n. Thx jm your fix worked only once - so i added a \"m_showStartTime = 0;\" into DoModal_Internal (in your name as i've squashed the commits) - because the dialog is reused as it seems. Works now. What do you think?\n. done ...\n. forgot - https://github.com/xbmc/xbmc/pull/778 has to be taken care off before tvout will work (else that yesnodialog won't show up and throw as back to the mainscreen).\n. added the comments and errorchecking of GetScreenResolution + fixed typo...\n. another rebase ... i hate those gray buttons\n. will do after easter :) \n. Squashed and rebased once again and deactivated resolution switching for ATV2 for now. Because of the changes i did for iOS5.1 a feature called \"CA rootLayer scaling\" kicked in from iOS. It allways scales the layer to 720p independend of the resolution of the screen. So it scales on its own and allways reports sizes off 720p. This is against the XBMC scaling code and i just disable it on ATV2 for now. Since iOS5 (4.4.4) the user can select the resolution in iOS settings itself - so its not so important to have this ability from within XBMC imho.\nMerging in a min.\n. uriutils fix looks good to me ... can't say much about the edl thing (not into it)\n. mhh all horses on davilla now for getting this to build on ios :/ neither ffmpeg nor libav seems to care about linker issue for ios when compiling dylibs :(\n. sounds like a plan :)\n. Mhhh shouldn't we bump versions to 11.0 instead of 12.0? Looking at ios it was on 10.0-9 or so until eden was released. Why bumping to 12.0 now?\n. i like blue and red - and boblight color :)\n. Didn't test it but looks good as of the code (mainly c&p - murphy will get us anyways).\n. If someone wants to test this pr - here is the patch needed for applying videorotation by using ffmpeg filters:\nhttp://pastebin.com/FcXzwWdH\nThe test movies are on the teamftp under my subdir.\n. Talking about thumbnails i don't see them on that test .mov files. The GPU thing was more a thought for the video rotation. I think rotating the thumbs on cpu wouldn't hurt.\n. Fixed the comment (yep its counter clockwise -  checked that one). If nobody complains i'll merge in 12 hours.\n. those labels show up since yesterday whenever you connect an idevice to an external monitor (e.x via hdmi or vga adapter) and switch xbmc to that screen. The touchscreen becomes a controller then which shows these labels.\nAnd for your first question. MUH why do i allways get that complicated stuff ;). I have to write my own gesture recognition for that - apples long tap will kick in after you start touching the screen and don't move the finger for more then 10pixels over a time of 0.4s.\nNothing for the april merge then - i'll need some time and motivation for get it right ;)\n. ohh wait - rereading the first question - it gets cancelled as soon as you move your finger more then 10pixels within 0.4secs after touch begin. So i guess thats what you wanted? Forget my whining then ...\n. Added the \"deselection\" of the current control. Thats what it looks like now:\nhttp://www.youtube.com/watch?v=dY1D5sda5GY\n. Don't worry about osx projects. Someone of us will sync it up once you merged...\n. Frodo won't be our last release for sure ;). And that said - i'm using XBMC on linux with VDPAU since ages (without this patch) - so at least its not totally broken as is.\n. Yep - the title says it all. But the varname \"whereClause\" doesn't. Maybe you find a better fit? Beside that i think a bool is not that nice to understand from the callerside. Can't you pass in the ID itself here and default to VIDEODB_ID_TITLE ?\n. Not at a rig here so i can't see how these are defined but:\nif (field == FIELD_TITLE) result.Format(\"c%02d\", whereClause ? VIDEODB_ID_TITLE : VIDEODB_ID_SORTTITLE);\nlooks like the bool only decides if the result is ordered by VIDEODB_ID_TITLE  or by VIDEODB_ID_SORTTITLE\nThough i might just read the code wrong and will better shut up ;)\n. Mhh rereading your answer i think i got it now. Yeah my first suggestion is not applying here of course ;). So that function just gives the C00 or C01 or whatever back. I see.\nHow about: \"forSorting\" - at least the prototype would read like CStdString CSmartPlaylistRule::GetDatabaseField(DATABASE_FIELD field, const CStdString& type, bool forSorting /* = false */) - which is some sort of human readable imho.\nBut thats only picking on nothing, because i didn't read the code change in the right way at the first time.\nBeside that i would say that this change is sane of course :)\n. compiles on osx - source is uploaded to the dep mirror for osx.\n. uploaded 1.6.2 to darwin depends and verified compilation\n. I will bump the version when someone really decides to merge it and skip any intermediate bumps without sense ...\n. it gets a milestone for 2013 ;)\n. Ping me some days before the next merge window if you are sure that this is the version you wanna have and i will take care of the darwin deps then ...\n. Sure - no version bumps anymore for this merge window after i have uploaded to darwin :D\n. Undefined symbols:\n  \"_CVGetCurrentHostTime\", referenced from:\n      PLATFORM::GetTimeMs()     in cec_client-main.o\n  \"_CVGetHostClockFrequency\", referenced from:\n      PLATFORM::GetTimeMs()     in cec_client-main.o\n. Worked now - 1.7.1 uploaded to darwin deps\n. I don't have access to windows deps - only darwin deps ;). wsoltys will rescue us here i guess.\n. Well fought :D\n. Nice presentation of a PR here (in the meaning of small commits only which are nice to read). I didn't get the full picture of things, but i didn't spot anything obvious.\n. just take the 1.3 sources from here. https://github.com/sahlberg/libnfs/downloads they will build fine for windows - nothing else to do.\n. i'm fine with that...\n. Sure its set. I just didn't realise i have the hint there. Stupid me ;)\n. updated the pr to use the hint.orientation field.\n. Fixed hint reset in mainline and rebased.\n. Ohh yep - i'll do it last minute :D\n. This also affects ios i guess? Have it on my testing - todo -list for after work ...\n. Thumbs up from me. I think you've got around 5000 new friends from the iOS fanbase with this commit :). At least on my problematic testfiles this commits fix the cpu peak out / framerate dropping. Great :)\nWe should stick this in in may, when the other platform testers give a sign-off too.\n. done and also added the patch to lib/libshairport for our linux friends.\n. Did a PR to amejia (for debian/libshairport) and consider this one ready to go for june merge window. It will get a slight refactor because i will do a PR for adding AirTunes support to windows including metadata at the same time (so basically the metadata functions will be shared between windows and others).\nI will merge the windows PR first in june, then adapt this one to the windows changes and merge this one. Will ask for quick review during merge window then.\n. amejia1 are we ready for this PR from the linux/package side?\n. stale dependency\nmake -C tools/darwin/depends/libshairport distclean\nmake -C tools/darwin/depends/libshairport\nthat should you get going with latest git code on osx...\n. Looks good to me. But since we are relying on the exception now we could even get rid of that return bool value (which now allways returns true). But thats only cosmetic of course.\n. If anybody reads - this needs xcode sync (remove utils/win32exception.cpp/.h and add commons/exception.cpp/.h). Tested on ios (compile only) and osx with these changes and didn't see anything obvious during runtime. I think we sync xcode after its merged for preventing any merge conflicts...\nI did a pr to you with the sync nevertheless if you merge it and the button is still green then its fine - if not just remove the commit again from the commit range and we will fix after merging.\n. xcode sync looks good ... can't compile atm - only on battery ;)\n. nvm - upstream dev already fixed the win7 ipv6 issue...\n. its paplayer / ae - cptspiff already knows why and gnif is informed afaik...\n. Mhh not my day latly ... i would have done that part of win32 port too but i'm just not into the win32 depends system. Sorry and thx.\n. This is one of my most wanted things to happen - and thats why i will test the shit out of this after work :)\n. Just by looking at it the libffi has to go into depends/Makefile then aswell if it works ...\n. I've tested it on osx32, osx64 and ios and what can i say - i bow to davilla :)\nBoblight is the first addon which loads a 64bit dylib hahahahaaa\nWell i sign this one off...\n. done ... but it also is valid for other addons - not only skins. How to communicate that?\n. yeah and its still there and it has to stay :)\nso system.platform.ios will go true on ios and atv2\nsystem.platform.atv2 will go true on atv2 only ...\nbut imho thats offtopic ;)\n. Is there anything speaking against this change? Else i would like to queue this one up for the june milestone...\n. Nope you are fine. Actually the script starts to put the logs in the right directory on ios with this PR. Before it used the osx path ;)\n. I wonder why i can't merge this PR. Button is green but it complains:\n\"Your merge target has changed since we cached the merge commit - try the merge again\"\nWTF\n. Do a git pull rebase next time instead of git merge. I now own a pull/req WTF award ...\n. fixed in mainline\n. yep double checked that one ...\n. Thx for testing. Anyone else who thinks this is not a good idea? Will merge in 2 days if not.\n. I would like to do a PR with ipad3 retina fix and xcode sync but i can't select amejia1 as destination github repo for a PR. amejia1 is this a github bug? Maybe related to your nickname change? Or did you deactivate pull requests?\nI'm just a bit uncomfortable to throw with patches. But if there is no other way i would of course.\n. Well if pull requests are not possible - pleas pull\nhttps://github.com/Memphiz/xbmc/commit/e82bffa65b8b0649ae81b010c54a8d12de915d65\nhttps://github.com/Memphiz/xbmc/commit/1c5f6ab5f5535b71cbc0aad93c6f9e9cb8164819\nand\nhttps://github.com/Memphiz/xbmc/commit/0097305feff96e2c7dbb8455e0f5a8a355c65577\n. Looks straight forward to me. Hit it.\n. Might be that i won't have any time until monday...\nWith the approach of GetEngine you could get rid of all your wrapper methods if i'm right...\n. Ahh right ... we could implement a NULL AE and default to that - well just not seriously ;)\n. tested it on osx and ios with success (tested menu sounds, volume and a movie)\n. Beside that you are missing the addons/visualization.fishBMC folder with the icon and addon.xml.\n. Beside that i'm a bit irritated about the name of the source files fische.c/.h fische_internal.h ... why is this german? Is there a need for it to be german?\nBeside that it compiled on osx (with the float change) - will try to do a runtime test too. Any chance you could add the needed bits for opengles? Then we could use it on ios too.\n. Beside that i'm using \"beside that\" way to much ;)\n. Hey cool it works on osx :).\n. No real clue either on dx or gles. But openglspectrum has both implementations gl and gles in it. Maybe this would help you? Basically you need to express quads as triangles or something (beware this is really bad half knowledge) :)\n. Just to confirm - current pr builds and works great on osx.\n. This PR looks broken to me...\n. 1. issue tracker is for internal use only (github doesn't support it so its public)\n2. user has fucked up the build\n3. close\n. Are you sure that system.h is included somewhere in the chain where you check HAS_MYSQL? As its defined in system.h we have to be sure. Else mysql won't work - even if enabled via configure.\n. Does this work on xbmc/dbwrappers/mysqldataset.h too? ^^\n. I like the idea but xcode can't do conditional compile of source files. So at least in the cpp file you have to ifdef with the guard because the mysqldataset.cpp is going to be compiled there ... (maybe same for the win32 projects - not sure, but the guard is needed anyways).\n. Just before even reviewing this. We can't merge stuff without proper commit messages. \"Update master\" is a bit to general in that case ;).\nYou can change your commit message by doing the following on your branch:\ngit rebase HEAD~3 -i\nthen before each line put a \"r\" for reword. After that you can change the commit messages. Then you can update this PR by issueing:\ngit push -f origin master\n(assuming origin is your remote - not ours ;) ).\n. Overall looks good to me (after adressing the mentioned things).\nAnd you should consider to prepare the needed documentation in the wiki for the new advancedsetting.\nI'm not sure if this approach will disturb the refreshrate adaption. From a quick look it could be that it will prefer the best fitting resolution and therefore skip a fitting refreshrate couldn't it?\n. Ok some more thoughts. If a user has turned on refresh rate adaption - i bet he is doing this because of micro stuttering when refreshrate is not matched to the framerate. So in that case we have to ask us the question:\nWhat is worse - having XBMCs upscaling or having microstutter. Imho microstutter is worse. In that case we should do the following:\n1. If refreshrate adaption is turned on - only match resolutions which have the exact same refreshrate (refreshrate calculation is above your code as you might already have seen). If the user wants resolution matching without caring refreshrate - he just has to turn of refresh rate adaption.\nAnother question is:\n1. Is it really a good thing to try to find a \"close to\" - native resolution? Or should we really try to match to the EXACT native resolution? When we only take a resolution close to the native one - we have 2 upscalers running (XBMC scales it up to the \"near by\" resolution and the TV/AVR scales up to the output resolution e.x. 1080p). I'm not into video quality enough for doing a judgement here. Maybe elupus could jump in here? ^^ (i bet most native resolutions in movies aren't even possible with most TVs right?)\nAnd the last thing. Once we have consensus here. Since you changed your commit message for all 3 commits to the same - you can just squash all your commits down to 1 when everything is in place at the very end of this  (no need to have 3 or 4 commits for this one feature).\nWell lets hope for other comments because this isn't really my sector ;)\n. Imho the keepfps option is a dupe of the refreshrate adaption in the gui. Get rid of it and use the gui option instead.\n. Just tested it and stumbled over it. Up to you what this should do - i don't have an opinion on that. Well so far i compile tested this on osx, ios, linux and Windows. And runtime tested it on osx (testing the other platforms shortly).\n. On windows i get 2 compile warnings. To fix use double instead of float for your variables (else it complains to stick a double in a float in line 105 because calculation is done in double)\n. Ok - i did runtime checks for all platforms now (osx,ios,atv2,linux,windows). It does what it should on all of them including ios with tvout (though i wouldn't do it there because switching resolutions is pain slow and we are loosing audio due to hdmi handshake audio b0rk).\nSo jm - at least from the technically POV i would sign this off for at least osx/ios (and if nobody else tests i sign it off for linux and windows too ;) ).\n. wsoltys - do i need to fear anything bad for osx or ios with that one? ^^\n. i like it :)\n. 1. I don't care about crappy equipment\n2. This feature is not for a small minority of users. I want it too ... :). It happens automagically when you watch a movie with at least one person on your side and this person can't resist to comment stuff or starts a conversation in the middle of a movie. Until you realise the person is talking you need about 5 secs. You hit pause then (and already missed that 5 secs because it where overtalked ;) ).\nBasically on some TV channels its the same after the advertising block. But they mostly jump back between 30 to 60 secs - thats to much imo.\nSo i'm with JM here - if this goes in, then without a setting but per default. We could couple the amount of jumpback with either \nsmallstepbackseconds\nor\npercentseekbackward\nWhich both are advancedsettings which are already there and which have a good default values i guess (10 secs and 2 percent or so).\n. Lets try to keep it simple. No pause measurement games.\nJM so we would just decrease timeInSeconds in https://github.com/xbmc/xbmc/blob/master/xbmc/Application.cpp#L4359  by lets say 10 - 30 secs when saving the bookmark?\nThis would reinterpret this feature request in a different way and i would be fine with it (though the users not - but who...)\n. @davilla ... not more then we already do when starting from a resume point. (hw decoder doesn't know if we resume 20 secs earlier then we stopped because not HE is watching the movie - but WE do ;) ).\n. We are already talking about a less intrusive approach where we only jump back when starting from a resume bookmark since ages ;)\n. I've made a little python addon for the initial feature request here and will post it in the forum.\n. case closed for me - thx for the comments :)\n. No offense ment dude. But you know that we all get an email on each edit you do on your PR texts? ^^\n. For a compile test. Clone the xbmc repo in a second path (e.x. xbmc-ios). Then follow docs/README.ios. But i can do it too since i have already an ios build environment. Just wanted to be sure that the dep compiles for ios.\n. the dep doesn't build on osx. It specifies 7c4c455 in the makefile. But what gets extracted is taglib-taglib-9bb57fe\n. When i change to 9bb57fe in the makefiles it at least compiles without a problem on osx and ios. Once you have fixed this and the \"final\" revision is set to stone - we should host the tarball on our mirrors.\n. Gave it a really quick runtime test and it works on osx. Nice work so far :). But we would prefer to dyload the libtag instead of linking against it in the xcode project with -ltag.\nSee DllLibid3tag.h for an example on how to do this. (this is basically on demand loading and unloading the lib when idle - for keeping the ram pressure low on embedded devices).\n. Looks like this PR takes already care of it ... i'm already about trying to compile this PR on osx/ios.\nfor depends see \nhttps://github.com/night199uk/xbmc/commit/b3a8756d22dd718b59078a02a88f182352d7e67d from this PR.\n. @davilla the only thing which bugs me about it is the added -ltaglib in xcode vs. dyloading ;) - though no blocker for merging but once its in it should be migrated to dyloading ...\n@night199uk please merge the PR to your repo i have done (this syncs ios and atv2 xcode projects aswell).\nBeside that builds fine for osx and ios - and can go in from my side after my additions are in.\n. First taglib error report:\nhttp://forum.xbmc.org/showthread.php?tid=141212\n. Ok updated once more. I decided the following approach\n1. Use CPoint[4]\n2. Leave m_destRect untouched\n3. Let the baseclass do the rotation - with option of overwriting in e.x. gles renderer (still no solution there with the triangle points)\nI also adapted the winrenderer.\nIts still assuming that pixels are square. Any hint on how to get the pixel aspect ratio?\nFurthermore its still crashing when using gl software rendering (guess what - its swscale again - but a different thing this time - i have the feeling the cachedcontext stuff might be wonky).\n. Successfully tested so far:\nOSX: all renderings working, beside software rendering is crashing in swscale - VDA needs testing (don't have a mashine with VDA support)\nLinux: all renderings are working including software rendering (no crash in swscale here - strange) and VDPAU\nWindows: to be tested in software rendering (no DXVA support - maybe someone could give hints?)\nGLES: to be implemented\nIf anyone wants to test - i have orientated movies in my folder on the teamftp...\n. Ok - sorted the gles orientation aswell.\nWorks with VTB and GLSL singlepass (no other settings available on ios).\nUntested is OpenMax (should work ^^).\nUntested aswell multipass (which isn't even hooked up in gles renderer) and software modes - no clue which devices with gles support these.\n. Once again windows is completly different. Rotation works with Software rendering,  but doesn't with Pixel Shader or DXVA setting.\nI was not able to figure out an easy way howto rotate on render with these 2 settings. @elupus do you have any idea how we can make windows working?\nIf not i'm willing to merge this someday even if video rotation is not working on all our renderers.\n. Ok thx @elupus added rotation for pixel shader rendering on windows (and tested briefly).\n. thx davilla for the test. So the only things which are untested are vaapi and omxplayer. But the fact that all others worked and the approach is the same on all of these i think they will just work.[tm]\nSo if any one could give a hint on how to determine the pixel aspect ratio i could take it into account in the calculation.\nThe question is if the autorotation of videos should be an option like we have for pictures already?\n. Ok i have added an optimisation so that the draw points are only recalculated if either destrect or orientation changes (before it was calculated on each frame).\nBeside that i added a new Renderfeature RENDERFEATURE_ROTATION to the renderers and use this to determine if the renderer supports rotating the video.\nI also added a new filter FILTER_ROTATE to the codecs.\nIf the renderer doesn't support rotation the filter will be set in the codec instead. For FFMPEG codec i have implemented support for this filter already.\nThis fixes rotation when rendering with DXVA under windows. Though this still doesn't work when hardware decoding is enabled and the renderer doesn't support orientation (so to say - it doesn't work for DXVA2 hw decoding).\nAm i still on track guys? ;)\nNot much more todo imho. Basically every constellation on every platform should be able to handle videos with orientation with this PR, but windows with dxva2 hw doesn't.\nI've also tested VAAPI - though my test movies didn't get decoded with it, i can confirm that normal oriented movies are still working with VAAPI ;)\n. @jmarshallnz i guess i found out that i can get the pixel aspect ratio by using g_graphicsContext.GetScalingPixelRatio(); ... but i don't get how to apply it to that diff value. I bet you know :)\n. 1. Github tracker is for internal usage as for now (managing our merge windows) - we can't set it to private so its a bit hard to communicate that\n2. I have seen these errors in user logs before\n3. The dirty audio doesn't touch anything in core audio - os i really doubt that this error is due to the change.\n4. closed because of 1. :)\n. yeah that was exactly what i've ment :) ... hopefully i'll get some time to pull some other fixes out of 1074\n. Could you describe a bit more what this change is supposed to change/improve? I don't get it out of that 2 commits.\nAFAIK we safed the filestate on stop. Since you have to stop the movie for sure - whats the benefit to save the state during pause? (or is this a request due to crashing on resume? ;) ).\n. The more i poke at it the worse it gets. And my brain starts to puke.\n1. I think you mean i should make itemsPerFrame a member and reset it in else\n2. while (itemsPerFrame-- > 0) MoveUp(false); <- will allways result in itemsPerFrame < 0 after the loop (no prob i guess since we accumulate then in the next call)\n3. make the minimum something a little lower than 1/frame <- the minimum? Whatever i do with that \"std:max\" value - if i lower it i get good speed on lists with small number of items, but speed with bigger lists is too slow then and vice versa.\nI just don't get it :(\ntime for bed\n. this would prevent it from getting negative, but would also call the move one time less. I have played with those values alot. The std::max approach cuts the speedup ramp - but i will play with it again. There is even a constellation where it moves 2 times per frame and drops some frames in between ... the overall scroll time fits in that case - but the user feeling is bad of course.\n. Ok i have adapted it a bit and it feels ok now. The problem was that the minimum value has to be scaled to the frameDuration.\nBut i still don't reach the theoretical values of min and max speed. (thats why i have used 4 items/sec as minimum speed now - because that one felt ok - gives around 2 items/frame).\nAny idea whats going on here? (has to be because of frameDuration that its not reaching the theoretically speeds hasn't it?)\n. @vdrfan didn't you notice speedy gonzalez scrolling too? Mind give it a whirl? ^^\n. If you ever find this setting - i will pay you in beer! :D\n. Well it was a try haha. But of course you have that issue. Just hold your downkey in a list and see the delorean beam through time - but nvm. ;)\n. Split as requested.\n. Maybe we could setup a pre-commit hook which removes whitespaces on empty lines and trailing whitspaces? That would be awesome.\n. You mean like this? (should have cleaned the whitespaces too i hope)\n. Fix or feature? ^^\n. btw @jmarshallnz i've found a plugin for xcode which strips trailing whitespaces on each save ^^\nhttp://code.google.com/p/google-toolbox-for-mac/wiki/GTMXcodePlugin\nSo expect clean commits from me in the future ^^\n. The problem is not the green button - its the blue one afterwards ;)\n. thx for the fix.\n. Thx for fixing :)\n. Our forum moderators get a bit bumpy on this. They fear as more and more users are rebuilding there databases this crsh could pop up a lot in the forum.\n@elupus a word?\n. Well i didn't see any upstream fixes for that nor do i know where this patch in ffmpeg would need to be. But i only watch the libav stuff (very seldom though). I will try to dig into the ffmpeg git and find something usefull...\n. This doesn't seem to be fixed in current ffmpeg trunk. Though i have written a little test util which does the same thing which XBMC does, but it doesn't crash.\nThis thing really starts to get annoying. The testtool gives only a \"[swscaler @ 0x801000] Warning: data is not aligned! This can lead to a speedloss\" but it doesn't crash.\nSo what about aligning the texture memory to even width? I'm not really in the mood for digging into it more...\n. http://pastebin.com/a4p5QSdU <- this also fixes it (aligning the texturewidth to a even number of bytes)\n. Well here is the tool. But it doesn't reproduce the crash. Its platform and state specific as it seems.\nhttp://pastebin.com/xrXjtjeR\nIt crashs in xbmc on osx all the time but maybe sometimes really seldom it doesn't. It crashs on iOS 4.3 on atv2 and it doesn't on atv2 with iOS 5.0.1.\nSo its like some memory corruption or something really strange.\n. Yep it doesn't crash ... i just linked in our libswscale.a and libavutil.a from osx (i linked against different versions - hence the commented lines in the makefile - but it never crashed).\n. Pitch is 4 like in xbmc. Also the cpuflags. I've basically stuck in the debugger and copied all parameters over to that test tool.\nWell but its easy to reproduce in xbmc itself aswell.\nJust scrape a fake movie \"Cars\" with TMDB. And after that you have to watch that artist called \"george carlin\".\nThis will pull and rescale the offender hehe http://cf2.imgobject.com/t/p/original/5WSoAFzPlu1ZpKB3O8mqfIGOXB.jpg\nAnd should crash. It won't crash on linux btw as of vdrfan who tested it there.\nBeside that i have updated this pr with (only aligning width to 2 - since this is enough - no need to have an aligned height) - in case nothing better comes up.\n. Ahh the -m32. I had to add this because our ffmpeg is built 32 bit - but my osx compiler defaults to 64bit - so the link would fail. I also did a complete 64bit build of the testtool and our ffmpeg - no change - it doesn't crash sadly.\nI even tried with the data from the offending image (in case swscale would look on the image data itself - which i really doubt). Nothing changed in that case - still no crash.\n. I will merge this in august merge window - no point for leaving it crashing there...\n. yeah even better :)\n. @Karlson2k  Next time you add a file please remember pinging a osx/ios dev for fixing the xcode projects for preventing build breakage. Thx.\n. Tested and it worked for both possible constellations. Thx for fixing @anssih\n. Ok - i have done your comments and also moved the object creation of the GUIKeyboard implementations into the factory where it belongs to (getting rid of the GUIKeyboard.cpp - only have the GUIKeyboard.h in there now).\n. @jmarshallnz do we want this for august merge window?\n. Hey nate  - basically the text which is shown there differs (depends if you hit search or filter). I have pinged JoeTheFox on making the Editbox for the native keyboard a bit more fancy some month ago. (because i don't like the gap between editbox and keyboard). Maybe i can ping him about it again and see if he can make it even more native ;)\n. ae fix confirmed - softae now recovers from draining. Can't say anything about the other change.\n. on my way ...\n. this patch is needed\nhttp://pastebin.com/RERNYy3g\nafter that - signed off for osx and ios - you better get this in fast before someone screws your green button ;)\n. expect patches ...\n. signed-off for osx and ios\n. looks good\n. They check the guisetting... mhhh but as of the feature request i would say we should save it yes.\n. does this look right (last commit)?\n. squashed - will assign to august milestone for now.\n. If you add a proper commit message like \"[fix] Make Gamepad Button Combo dialog work with AppleTV - fixes #12733\" this will automagically clsoe the trac ticket once i pull this (after i gave it a test ...).\nThe current commit message \"Update xbmc/dialogs/GUIDialogGamepad.cpp\" is totally useless ;)\n. yep tested it ... now you also can use the gamepad combo with cursor keys and even with nyxboard (basically everything which uses these actions).\n@jmarshallnz  i though understand the reason for having a somewhat \"cloaked\" ability to enter a lock code...\n. Ok i have adapted osx and ios xcode projects for a quick test. I can confirm that (once the xcode projects are synced) this compiles and works (tested a movie, a picture and a mp3) on osx and ios against my ushare server. Once you are ready to pull this, ping me and i will take care of the xcode sync.\n. Better make sure via IRC that someone is around for fixing the xcode projects - similar like here:\nhttps://github.com/Memphiz/xbmc/commits/upgrade-platinum\n. @elupus any reas on why you added SystemConfiguration.framework to the osx xcode project? Its red on my 10.6.8 installation (means not there) - and doesn't seem to be used.\nBeside that - are you able to sync XBMC-IOS and XBMC-ATV2 xcode projects aswell?\n. mhh nvm already on it...\n. No see XBMC-IOS.xcodeproj and XBMC-ATV2.xcodeproj. IOS done - now ATV2 :)\n. If the typo is fixed i can confirm that xbmc loads my handcrafted calibration. Good work on that one. If FernetMenta gets to fix the compilation (because of the iHight typo) we should consider merging this fix before the alpha5 tag aswell...\n. Well to late - versions already bumped. Assign it to august merge window and merge if you ask me (it will hit nightlies and alpha5 then). Please also track this PR in the August merge thread in the forum.\n. Honestly - imo its more then unlikly that this patch leads to the reported problem. Just look at the code. Its doesn't care where you plug in your tv. If the calibrations are not matching for receiver and vga, then its not XBMCs fault imho.\n. @FernetMenta\nAny idea if this PR could lead to growing guisettings.xml on profile changes? (resolutions get written over and over again and make the file huge like gozilla) Described here:\nhttp://forum.xbmc.org/showthread.php?tid=138804&page=2\nCouldn't reproduce it.\n. If we don't get the review done until the merge window closes - i vote for giving these 2 pull requests a special permit to get pulled whenever its done! Cause that rebasing is a pain in the ass for sure. Nice work on the rebase so far theuni. Will try to do compile/runtime tests for osx/ios asap.\n. Ok - i have compile tested it on osx and ios. it compiles on both once https://github.com/theuni/xbmc/commit/02b7a0c8e0990893dc969bc502f36dd855ff314a gets reverted (davilla suggested the revert ...).\nAlso i tested compile on osx for android which worked like a champ once that sed boo boo is fixed i have mentioned.\nI have done a short runtime test on osx and found the crash on exit because of the unloadall thingy.\nI have done a short runtime test on ios and it looked good so far but obviously the same crash on exit.\nAll in all thumbs up theuni - thats nice :D\n. Looks good as of the changes. I think i will do a compile on osx/ios once more before i might sign-off.\n. signed off for osx/ios/atv2.\nGo go go :D\n. Since xcode doesn't have conditional compilation of files i would think we have to enable it in the osx configure. @Davilla what do you think?\nOr we would need to remove the whole libupnp from the osx project and let xcode_depends build it - then add some HAS_UPNP guards on the filesystem and network bits of UPNP so that those get not compiled.\n. @davilla as extract of your post - enable it in tools/darwin/depends/xbmc/Makefile and leave it in the xcode project. I'm fine with that.\n@alcoheca will shuffle the stuff in xcode and then do a PR to your branch (and hope nobody commits any project changes until you hit the green button).\n. PR sent.\n. thx :)\n. Well i would not like to introduce any new click to play feature (imagine there is a resume point. It first ask if you want to resume and then it asks for the refreshrate).\nAsking for the refreshrate is not needed - XBMC already is able to find the correct refreshrate.\nThis commit is more about stopping unneeded refreshrate switches (which really can last about 5 secs and are totally annoying and destroying the experience).\nThis also will not become a PR with any gui options. I want the refreshrate adjustment to be smart. We don't want to introduce any new settings for this.\nThe only thing which was pointed out by jm. This fix behaves as follows:\n1. Start movie playback\n   a. goto fullscreenvideo? -> refreshrate from the renderer (so the adjusted fps fitting refreshrate).\n   b. no fullscreenvideo (menu in forground)? -> refreshrate from the renderer \n2. Stop movie playback\n   a. stop from fullscreenvideo? -> switch back to res_desktop refreshrate/look&feel res (60hz for example)\n   b. stop from non-fullscreenvideo (menu in forground)? -> refreshrate from the renderer (possible issue...) \n1.b stops the annoying refreshrate switching once a video is playing and the tab key gets pressed for showing the menu\n2.b leads to a regression if you want to call it that way. This means if you play a 24fps movie the refreshrate changes to 24hz. Then hit tab for getting the menu in forground. Then stop playback. This would leave us in the 24hz mode when no video is playing.\nSo if this is an issue. We should switch to res_desktop/look&feel res on playback stop.\nOn my tests i had no issues running the gui with 24hz ...\n@FernetMenta if its about 23.blablah fps movies. We could fire up a toast dialog when the \"wrong\" modlines are detected. But this would be out of scope of this PR imho.\n. Yeah i know of that PR too. Imho it wouldn't change anything to this PR. During video playback the UI would just stay in the renderer resolution aswell. Since the native resolution PR claims that users with super duper external upscalers are getting high quality - they won't really recognize that the menu resolution is low :p.\nI guess the native resolution PR ends up as a menu option. If it hits mainline someday we could just disable this PR here once the native resoltution is switched on (so it would change resolution back to res_desktop/look&feel res once the menu is in foreground). Nothing to think of now imho because the outcome of the native res PR is still unsure as far as i have read.\n. @FernetMenta mhh i have tested PVR with this patch. I'm a bit unsure why. But it behaves same like before on first selection of a tv channel. So it won't switch during the preview playback but when i switch fullscreen. Maybe g_application.IsPlayingVideo() is not set yet when starting in preview mode? Not sure...\n. Mhh not sure. If we would move it to playback start/stop it would switch resolution on starting a live tv channel even in the preview. Thats again a thing which definitly will annoy users.\nSo in that case i would say. Refreshrate should be switched to movie fps whenever the movie goes fullscreen at the first time (this is not the same as playback start!). Then it should only change back when playback is stopped - not when we hit tab and go into the menu.\n. HitcherUK are you using refreshrate adjustment? Don't you get the refreshrate switch when video plays and you go into the menu? \n. Ok we make this an 3way option instead of a bool then. Adjustrefreshrate can be switched to:\n1. Never (maybe rename to Off? not sure?)\n2. Always (this is the former behavement)\n3. On Start/Stop (the new behaviour including switching back to res_desktop/look&feel res on playback stop) - maybe needs a better naming too?\n. Anyone if this is an acceptable thing? Any testers out there? ^^\n. 2b is solved already with these commits (switching back to res desktop on playback stop)\n. Rebased and changed the cptspiff things. If this should go in in this merge window i have to pull the button today (not there tomorrow) or someone else has to do it tomorrow.\n. Mhhh might merge this from work tomorrow if nobody stands on his head in the next 12 hours.\n. @Voyager-xbmc\nIs this on windows? If so you can follow it here:\nhttp://forum.xbmc.org/showthread.php?tid=135660&pid=1168524#pid1168524\nI'm unable to reproduce the problem sadly. I need someone who provides a log.\n. fixed\n. No its.\nAlways: Switch refreshrate always when traversing from menu to fullscreen and vice versa\nStart/Stop: Switch refreshrate when starting the video and going to fullscreen and stopping the video and going back to the menu. DON'T adjust the refreshrate when we got to the menu while movie is playing.\n. on airplay cacheduration is the number of seconds we have already cached from the stream.\n. He is most likly sitting in a plane and flying to vienna where we have our developer conference this weekend. Don't expect much going on here while we are there.\n. Whats the benefit of or difference between \"\" and StringUtils::EmptyString? Beside that i'm always told that CStdString doesn't need initialisation. (at leat if i don't mix this up with std::string somwhow).\nThe fallback fixes are looking good and valid to me.\n. Cool then. :)\n. fixed what? and why montellese? you mean me?\n. that second commit about GetCachePercentage is already in mainline.\n. Still works really nice :) - signed-off for ios...\n. works thx :)\n. I saw something similar on linux.\nmoved .xbmc away - restart - still an issue - moved .xbmc back - restart - all fine. Not sure what was wonky there.\n. same it doesn't switch at all (stays at 60 hz). And now i got the state again where the movie height is wrong...\n. see this screeny https://dl.dropbox.com/u/30371861/wrongheight.png\nsomehow the size info is missing in the osd too isn't it?\n. i only get this on linux as it seems...\n. correction - the wrong height also happens on osx ... its different from start to start...\n. Its not. I have done the conversion only and tested it and get still an exception in AddPackets when it tries to get the buffer from the MS WASAPI Api. (this shouldn't ever happen as of msdn...)\n. Just my opinion. It might not be a good idea to dupe the code because someone has to handle backporting of upstream code fixes. And that could be a time consuming job (i bet the code needs to be adapted heavily for not bringing the whole lib into xbmc but only the parts we need). Compiling that asm foo which is in ffmpeg could also be a problem (atm we compile ffmpeg with mingw on windows but the core with vs).\n. btw this commit will finally fix http://trac.xbmc.org/ticket/13249\nso just move it down into dvdaudio into the create and i will merge it ...\n. I thought more of something like this http://pastebin.com/KF26YYTy ... basically exactly what you did - just a layer deeper...\n. CDVDAudio m_dvdAudio; // audio output device <- lives as long as DVDPlayerAudio lives. What do you mean?\n. Sounds like you are mixing the AudioStream up with the CDVDAudio object?\n. yep thats it ... now squash it down into 1 commit and force push to your repo so we get this in clean :)\n. nice work - thx :)\n. The right trigger would be \"Winter is coming\" :D (lets see if dddamian is watching the right tv shows haha)\n. @DDDamian could you rebase to master please? I have done some fixes there for osx which will be needed here and don't want you to get conflicts when i have these fixes in my OSX PR aswell ;)\n. @davilla @gimli we don't need this ilde / streamsilence thingy on CA do we? Seems the CA thread (which is not in our hand but in the OS hand) doesn't suck blood as much ;)\n. @DDDamian normally we would build alpha5 from the last revision of the month. This time it would be exactly the revision this PR got pulled. If i read it correct in that state the code introduces some bugs you already fixed. Would you mind if i let this PR out of the alpha5 and tag it one revision earlier?\n. docu in the wiki for the  is missing. Would be cool if you could add it dddamian :)\n. Did you experience crashes due to this? Or is it only for safeness?\n. Yep sounds good. Thx\n. you ment me :)\n. All in all its pretty hard to review. You should resquash into logical commits.\n. This can be done in this one. Clean it up locally and then force push it to your repo ace20022/master - this will automatically update this pull request then.\nSquashing can be done be either rebasing locally (git rebase HEAD~2 -i ... then prefix the second commit with \"f\" - this will squash the top most 2 commits into one). Its hard to give a quick howto here - but the github help is pretty good for getting the feeling on what can be done.\n. This fixes compilation for osx:\nhttp://pastebin.com/hsjckz7W\n. This is needed for ios:\nhttp://pastebin.com/6xwPcxip\n. with these both done - i sign off for the apple stuff...\n. Well i'm sitting in a Train atm ;)\n. @amet github test - can you read me?\n. I have looked through it and it looks fine. I'm unsure with:\n58d706d292d7457cded7d77f99ecb441f16ab7cc\nand\ne520fafcac37f5ccfa03e928ec8cd51458ab8d51\nBeside that - great work on finding these.\n. Great work Lars - will fixup the Xcode projects for iOS and atv2 tomorrow in the train :D\n. Beside that we are working here and this information was totally useless to us for this pull request.\n@opdenkamp - with \"D\" spiff means the deleted files in that big commit.\n. Just to confirm. Your changes in removing the PVR JSON stuff from the xcode projects are fine.\n. If i see it right it \"only\" provides the language as a guilabel. So worst thing that could happen when something is wrong here is that it dosn't show the right label for the subtitle right?\nDidn't review the whole regexp stuff and so on, but in general it looks good to me.\n. Wow - looking forward to test this! If this works we could close the bugentry for TVH i guess - right @davilla?\n. Should this also fix the selection of the right refreshrate when using refreshrate adaption?\n. mhh just trying to find a good way to mark the good ones for me ... but these are just to many ... i'll stick with commenting the one i don't get through i guess ;D\n. The question for multiroom is - how is an xbmc instance announced? Is it like a seperate \"player\" for each instance like \"upnp@xbmcinlivingroom\", \"upnp@kitchen\" and so on? Or is the room some sort of parameter to the upnpplayer (like after selecting upnp you need to query a list of found upnp targets?\n. Right - so there needs to be an API call for getting that list definitly.\n. If someone wants to take over my work here feel free to fork it. (i won't work on that because lcd stuff is annoying and i don't need it ;) ).\nhttps://github.com/Memphiz/script.xbmc.lcd/commits/master\nIts basically a port from the core and relies on lcdproc somewhere in the network.\n. Yeah it might not be  feature complete iirc (its long time ago that i worked on that). Just disable the internal LCD support and enable the addon should get you going. It uses the same LCD.xml for configuration iirc.\n. closed - will be so fuckin superseded by the python lcd addon :D\n. This PR fixes all fileoperationjob tests for osx (must be something different on osx then?). Will test your pasty aswell Montelles.\n. With your pastebin @Montellese its still working on osx (doesn't matter with or without). But still having 6 errors in TestCPUInfo.\n[  FAILED  ] TestCPUInfo.getTemperature\n[  FAILED  ] TestCPUInfo.getCPUBogoMips\n[  FAILED  ] TestCPUInfo.getCPUHardware\n[  FAILED  ] TestCPUInfo.getCPURevision\n[  FAILED  ] TestCPUInfo.getCPUSerial\n[  FAILED  ] TestCPUInfo.CoreInfo\nThese are just not implemented for osx. (because we might not be able to fetch those information).\n. move the \"/* Set some default for empty string variables */\" down outside of the platformspecific ifdefs and it will fix 4 of these tests on osx aswell. Beside that apply this patch for fixing the CoreInfo test:\nhttp://pastebin.com/ngLmsa4G\n. mhh just forget my pastebin. I will push it to master. Just move the default \"N/A\" strings down out of the platform scopes.\n. A bonus and maybe a regression. We can do encrypted rars now and some users hosting there  stuff in the cloud will bitch when thats missing. I don't care - i just wanted to mention it ;)\n. Thats cool shit!\n. Looks good to me.\n. Looks good to me.\n. @elupus - changed it to pass down the demuxpacket instead of data, size, pts and duration and calc the pts offset inside the codec.\n. @elupus K as discussed on IRC. Any famous last words? ^^\n. I would like to merge this before next merge window so that the fix hits alpha6. Anything i have to change before this?\n. @elupus updated again\n. Anything else you want me to change here? @elupus\n. I don't have an overlay object in the DVDOverlayCodecFFmpeg because these get created in getoverlay but i do the time calc in  decode. So i leave as is. Thx for working this through with me :)\n. Good work on that. :)\n. Reviewed the code change (which looks like search&replace most of the time) and compile/run tested on osx. Though since i can't estimate the influences because i'm not into that binary addon handling - someone else has to push the button.\n. Looks good to me.\n. Updated with your little helper. Will squash after sign-off\n. Given it a quick shot. This XML:\nhttp://pastebin.com/z6NgmhW4\nleads to this lcdproc output:\nhttps://dl.dropbox.com/u/30371861/lcdproc.jpg\nSo seems that the special chars are not generic?\nGerman umlauts are fine though...\n. Compiles fine ons osx/ios. Runtime fails with\nhttp://pastebin.com/mHnYP0LZ\nI have a \"normal\" 4x27 LCD with following LCDd.conf:\nhttp://pastebin.com/BsPyqUMv\n. It deadlocks there. Already late here will see if i get another compile round...\n. 00:19:06 T:806907904   DEBUG: XLCDproc::Connect - LCDproc data: Columns 27 - Rows 4.\n00:19:06 T:806907904    INFO: XLCDproc::RecognizeAndSetIconDriver - Plain driver name is:\nand deadlock\ngn\n. 21:25:30 T:134877184 WARNING: XLCDproc::RecognizeAndSetIconDriver - No usable reply on 'info' command, no icon support!\nLooks good i would say. Display works again like before :)\n. The biggest interference will be our this year release manager who will not allow this in xbmc core. Thats for sure (99% i would guess). If you really wanna work on LCD improvement. Do it as addon (either take what i have ported from the core - or do it from scratch). Then submit a PR which rips out all the LCD stuff from XBMC. \nThis one would be merged with sugger. I'm really sorry to tell you this cause i know you have put much work into it for sure. But there is no reason holding this info back. (still we leave this pr open in case something magic happens).\n. I would suggest that you bring this addon into the addon forum somewhere so users can start testing it for regressions. Once it looks like it will be a good replacement for the core implementation i will approach on removing the core code and we try to get the addon into the official repo. \nI have looked over your commits quickly and am impressed on how much cool stuff you did. I also gave it a quick test on ios and osx and can say that it works great with the pvr stuff and so on (tested both of your branches with my 4 line display). The only thing i found is that \"$INFO[LCD.TimeWide21]\" should show the clock not the player.time (when screensaver is on there is no player running).\nThx for working on that - nice work :)\n. closed - will be superseded by python lcd addon\n. Looks good. If users load their 500MB guisettings.xml the first time it will get rid of all dupes if i read it correctly. Nice thing :)\n. I would say to loud special effects - to low speech ;)\n. Ohh nvm ... missread the outputs. Better wait for the AE guys.\n. That example is one bad ass abuse of ass subtitles really. \n@elupus well i have no idea howto improve this. They just spam with subtitles in that example and around 19:53. Not really sure if the rendering is causing the cpu peak or the traversing for getting all subs which have to be displayed for one pts (traversing through that single linked list should be fast as hell imho). But on my c2d 2.4ghz i see frames dropping on that scene even if cpu load is around 80% (not maxed out!).\n. and fyi - it drops frames on that scene even without my change for me.\n. works here (tested on osx and atv2 - atv2 won't play this stutterfree but subs are there) - maybe some hi10 media or so)\n. you are only testing on windows?\n. Ok i've tested this.\nOSX with keyboard - fine (was fine for me before too)\nLinux with nyxboard - fine (was fine for me before too)\natv2 with atv2 remote - doesn't feel right. See:\nhttps://www.youtube.com/watch?v=776EW1Ht5aA\nFPS go down to 5 - 10 fps in that list. On list with fanart in the bg even down to 3 fps\nHere another example where you can hear that the key hold is right (sound ramps up).\nhttps://www.youtube.com/watch?v=QEC-5iFFCkg\nAnd here how it should be (linux):\nhttps://www.youtube.com/watch?v=XeKVmRoRkxk\nI think this is just the lack of power of the atv2. Not sure if that frame duration assumptions made in the code (if any) might conflict on those low power boxes and make the behaviour even wonkier than it could be.\n. Not sure if this is better with 100u\nhttp://www.youtube.com/watch?v=FVEdC_ej6HU\nBut nevertheless i would say hit the green button on this PR.\n. Ok - i should get my odroidx in a few days (once that stupid trans-o-flex got it that i have rerouted it to my working adress grr) and then i will test the shit out of it :)\n. With the patches from theuni on both XBMC and pvr-addons side? ^^\nIf you only tried the initial pull request - its likly that it doesn't work ... was more a RFC and for getting things rolling.\n. Its an anti-feature. Based on merge windows this has to be merged outside of a merge window or hell on earth or so :p\n. Strange we use clang 3.1 on osx since \"ages\" without problems...\n. Shitdown gracefully - lol ymmd\n. He seems to hide - did you mixup nicks? Or is there something i need to know? ;)\n. Looks good to me. Does this make https://github.com/Memphiz/xbmc/blob/inertial/xbmc/cores/paplayer/BXAcodec.cpp obsolete?\n. Next time ping an osx dev before merging stuff which needs xcode project addaptions Grrr\n. yep - added the comments. After frodo we should rename BXA too i guess. (this was a leftover from initial pull from boxee code. Seems to mean Boxee Audio Codec or so :D ).\n. ping @huceke - forgot that \"gimli\" won't trigger you here ;)\n. so the ipv6 patch was commented out in yourdeps for openelec only?\n. I know that - but why was this patch excluded from the rbpi depends?\nhttps://github.com/xbmc/xbmc/blob/master/tools/rbp/depends/libshairport/Makefile#L33\n. Well i guess (hope) it behaves the same for darwin and android of course. At least it doesn't behave different on ipv6 enabled env (as far as i have tested it on darwin - no android testbox yet).\n. As said - works same on linux and darwin with ipv6 enabled env.\n. Looks like this one needs osx/ios and makefile adaptions - am i right?\n. Sure once i hit my home later ... :)\n. This one and only time. I have updated the readme.ios yesterday with the supported constellations of xcode, osx and ios sdk. Read it. Your combination won't work - blame apple they fucked up clang there...\n. Yeah thats nice - android is doing something similar once you go to applications for the very first time.\n. Better do it like i did with airtunes. Add a setting to advancedsettings.xml for activating the spew. Users needed to enable this maybe 5 times over the year. Definitly not worth a gui setting.\n. osx:\nmacbook:xbmc-memphiz memphis$ grep HAS_BUILTIN xbmc/config.h\ndefine HAS_BUILTIN_SYNC_ADD_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_SUB_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_VAL_COMPARE_AND_SWAP 1\nios:\nmacbook:xbmc-ios memphis$  grep HAS_BUILTIN xbmc/config.h\ndefine HAS_BUILTIN_SYNC_ADD_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_SUB_AND_FETCH 1\ndefine HAS_BUILTIN_SYNC_VAL_COMPARE_AND_SWAP 1\nand compiles on both\nsigned-off for osx/ios/atv2\n. mrullgard magic is always good for us arm friends :)\n. hit that button it compiles on ios too ...\n. and ios is also affected of that bug - according to http://forum.xbmc.org/showthread.php?tid=142532&pid=1215383#pid1215383\n. Nothing speaks against this. Its just an oversight from when gles support was added. So no need to wait for \"later today\" - push baby push ;)\n. Nope - cite from our mainpage:\nAlso, as we move closer to Frodo, we would like to remind all of our dedicated translators that we\u2019ve now moved to Transifex, which should make the entire process much easier. For a step by step walk through of Transifex, feel free to visit our wiki page on the subject.\nhttp://wiki.xbmc.org/index.php?title=Translation_System\n. Translations are looking good beside that :)\n. Just hack on it and i'll integrate in this pr if you have similar API ;)\n. A restart of what? XBMC? The whole mac?\n. Could you try to add\nhttp://pastebin.com/HFk7zdPB\ninto your advancedsettings.xml (not sure if this will help though).\n. github was eating the tags ... - comment updated ...\n. @vincentfierant i've rebased the PR - now the streamsilence = 0 should work magic and this pr should do what you want (also in osx lion and later). Would be nice if you could give it another shot if you are still interested.\nhttps://dl.dropbox.com/u/30371861/XBMC-allowsuspend2.dmg\n. Yea we need to overthink the default for osx here. Do you have an avr connected? If so - does it loose audio lock when coreaudiod is suspended?\n. Nahh i mean the audio lock of your receiver if you have attached one (e.x. it should show PCM as long as xbmc has the audio device open but after 10 secs idle it might loose the audio lock and shows something like \"no signal\" or so). My avr keeps the audio lock - well it was just out of curiousity - cause with streamsilence = 0 we close the audio device after 10 secs idle and reopen it whenever its needed (on gui sound or when a video/music starts).\n. Ok - thx for verification - i guess any further discussion should be moved to the forum (macosx \"Sleep\" thread) - sometimes i just forget about that comments on github are spread throuout the whole team via e-mail (which will just spam about 100 people) - so shhhh now :D\n. thx\n. Looks good and straight forward.\n. @elupus - if you want that in - push that button...\n. compile and runtime tested on osx\ncompile and runtime tested on ios - i don't get the pvr addon to start:\nhttp://pastebin.com/i2ebUCrx\nno clue if its me, my buildsys or general problem. But what is error 6? Couldn't we show some more meaning full errors there?\ndoesn't compile for android with this error:\nhttp://pastebin.com/NgnS81DK\ncasting the argument of localtime to (const time_t *) fixes the compilation (not sure why this is even needed here).\n. Well we can maybe ignore the ios problem - cause i tried latest nightly from the buildbot and it works there. Just wonder what i do wrong when building it myself :/\n. Runtime check on android was positiv aswell.\nAlso for osx/ios you can add \" --enable-addons-with-dependencies\" to the configure in the Makefile for enabling the mythtv.cmyth addon. Compiles fine on these 2 platforms too.\nDon't add it for droid - this needs some droid love from TheUni if this addon is needed.\n. looks good\n. Is the android build fix in this revision? (can't see it in the repo)\n. thx for spotting @opdenkamp - fixed...\n. fixed and rebased.\n. builds ok on osx.\n. will do in 10 hours\n. Did i already mention that we want this? Are there any more sign-offs by other platforms needed?\n. Have another look - it is built in tree - same for rbpi and android. Thats built with our depends buildsys.\n. Its in \"wtf how loud is that\" units ... ;)\n. due to damned timezones i'm not able to fixup xcode projects for the next 9h - anyone around who could prevent the incoming billy breakage?^^\n. I like the idea but i can't really comment on the code. But it looks like its so cec specific that its not influencing xbmc core really - and hey it lightens up our configure :).\n. We should get it in asap for getting some userbase testing. I had alot of hangs on XBMC exit. (depends on the running addons - i guess in my case it was boblight addon which triggered the deadlock). I at least tested this pr once and it didn't hang. But as said - we need the flood of addon users to test it.\n. @jimfcarroll  could you rebase to master please? I'm trying to sync xcode but it doesn't build because of some pvr stuff (dunno whats the matter here...)\n. I did a pr to your repo already. Just merge that and i'm fine ;)\n. Why is screenmode always 20 chars long in eden? Isn't screenmode the 1920x1080@50 thingy?\n. Thx for the clarification :)\n. Nice work! Sry if my comments came twice. Fuckin IE8 here ;)\nI really like the fact of having a stagefright codec. Also putting the needed sources into the deps is a nice idea imo. \n3 questions out of curiousity:\n1. Does it handle 1080p aswell?\n2. Does it work different/better as the internal ffmpeg impl?\n3. You tried anything else beside h.264? (seems a part of the code is already prepared for mpeg2, mpeg4part2 and vc1)?\n. I would say we should focus on ICS and let gingerbread die in fire - but I guess TheUni would come up with better arguments then my stomac haha.\n. I tried this branch and it just gives me a black screen (tested a 720p mkv h.264) - audio is working without issues - but black screen. Overlay shows stf-h264 usage.\nhttp://pastebin.com/UCycLzdJ\nIn the log i also tried it with software decoding (which worked - but cpu load is to high for making it smooth).\nThis was tested on odroid-x running ICS 4.0.4 (kernel 3.0.41)\n. @huceke ?\n. @davilla this is still an issue and it will stay an issue because of what makestream does in CA. So we could hit that button and annoy users who playback passthrough music (and only passthrough music ...) - or we can save the users which listen to mixed music (passthrough/non-passthrough) - by forcing everything to be decoded.\nThough i don't like this hack - but there is no other possibility to force decoding of streams. When XBMC crashes during paplayer running the settings won't change back ...\n. If nobody comes up with a better way of preventing music passthrough we should get this in sooner then later. AE experience on osx will be revealed as screwed anyways after frodo release. We just don't have enough gpigs/test capacity/time/mood/motivation for preventing that. ;)\n. the more i look at this the less i like the approach. I don't want this hack - so closed.\n. Ahhhhm is this Coke, Cock or Cookie? (hoping for the letter) :p\n. @elupus @jmarshallnz  ping on that.\n. @elupus i'm not a dog - i don't eat bones...\n. Well you threw a bone to me with your first comment. ;) What did you want to tell me with this? ^^\nI know that these options are ment to be used by our curfile implementation. But in the dvdinputstream those urls incl. options get passed as strfilename. DVDInputstream normally doesn't know what to do with those. And now that http urls with m3u8 playlists are handled by DVDInputSreamFFMPEG it just bails out on those options and only gets an 404 error of course.\nMaybe i made the purpose of my fix a bit clearer now?\n. Ahh got it this time - updated ;)\n. Ok we consider this a known design problem for frodo imo (fixing it the way i proposed would introduce a lot of problems and support hassle). closed.\n. Looks good to me.\n@vdrfan ping as you have introduced that code snippet :D\n. You should just use the libnfs which was ment to be used for XBMC. And that is libnfs 1.3.0.\n. Why can't this be done in gentoo? Ebuilds are based on version numbers. 1.3 is a released libnfs version?\nIf you make sure that this won't breaks on windows i might reconsider. But i had a lot support work to do for eden because people kept using the wrong libnfs version with xbmc. I HAVE to make sure that XBMC Frodo is used with libnfs 1.3. I can't garanty this - but making XBMC compatible with a future version of libnfs at this time will make people like u use it and i might get into support trouble again.\n. And of course we will bump to current libnfs after frodo - but i do this on my own when i feel its stable.\n. Option 5 Add a patch to the XBMC ebuild on gentoo?\n. still discussing internally...\n. Verified that it should be a save include (cause its used in platformagnostic code already).\n. Just keep the gentoo users away from me once they get problems with libnfs 10.0 in xbmc frodo ;) just kidding\n. not this w.e. - not in town atm\n. I'm not able to test this today. Maybe tomorrow if noone beats me to it.\n. @jmarshallnz   - why did you close this? the other pr is closed aswell as it seems? So will this bug stay?\n. ahh forget it ... github tricked me ... will try this patch now ... :)\n. mhh this doesn't change anything for me on osx. The french VIDEOS still looks like VIDeOS here.\n. I just added a breakpoint and stepped through ;)\nfor the old approach:\nlocale lcl = locale(strLocale); <- throws ...\n. fr_US.UTF-8 <- looks strange doesn't it?\n. Seems setlocale and friends is totally broken on osx. locale(\"C\") doesn't throw - all others do. Though \"locale -a\" shows fr_FR.UTF-8 as valid locale - we are not able to set it. There are multiple posts about this found via google ... e.x.:\nhttp://stackoverflow.com/questions/1745045/stdlocale-breakage-on-macos-10-6-with-lang-en-us-utf-8\nIf the french stuff worked at some point - it might be unrelated to the locale. Cause this osx issue is there since 10.4 and maybe earlier.\n@davilla you know something about it? \n. Looks valid to me. Good work :)\n. I'm not able to do a pull request to your repo (no clue why - but github doesn't show it as a target repo for pull requests).\nFor getting this to work on osx and ios add this patch (git am )\nhttp://pastebin.com/Y4PcyF9N\nSeems your repo is a bit messy in general. You shouldn't work in the master branch normally.\n. Ohh yeah - sorry. Somehow i mixed up my patches.\nYou need this one too of course:\nhttps://github.com/Memphiz/xbmc/commit/0985c90b85a09cd214af74795a09f547555d3507#diff-3\n. I only tested if it recognized/discovered the macs of my sources/mysql server when i enabled the feature in power management. If i got it right this is the only thing which is platform dependend - everything else should work on all platforms right? I'm not able to test wakeup because my server is a arm-based dockstar which doesn't sleep ;)\n. Yep you got the commit right - though we need to redo the xcode sync when this PR is merged most likly - but thats no problem ...\n. -1 from me for this merge window - i'm not around until monday for this. If @davilla wants to test it for osx/ios then of course this can go in if he made it till close of the merge window. (it needs at least a resync of xcode projects)\n. Is that last connect osx/ios/android save?\n. Yes they are ok - i've ment the new connect ping stuff - i will try to test next week (am out of town atm).\n. Someone should implement a true ping for nix ... calling system is nothing we want to do for sure!\n. nvm - just forget what i said ;)\n. For frodo i would like to leave the other platforms alone when it comes to libnfsversion (that is - frodo will use 1.3). For android i'm happy with this PR :)\n. This looks coding wise. Not sure about the semantics though - but i bet an AE dev might comment.\n. I can reproduce this as follows.\n1. having a test folder on smb or nfs share which contains 3 flac or 3 m4a testfiles (or anything else which is decoded through dvdplayercodec)\n2. Start xbmc\n3. go into music->files->testfolder\n4. start playback of the first testfile\n5. enter fullscreen\n6. pause the stream (enter for bringing up the osd, enter again for pausing the stream)\n7. wait between 5 and 20 secs until the stream autostarts the next track\nWhen i have done this with my testfiles for a while the problem occurs more seldom. But its always there after a fresh restart of XBMC.\n. Can anyone think of negative influences this could have (beside it the fact that it doesn't fill the cache during pause) which would block this from going in? (or should we learn it the hard way maybe? ^^)\n. Maybe some buffer gets overrun in ffmpeg or so? (cause during pause it just keeps decoding)\n. Well i guess it would do. This is a bug somewhere else i suppose. As of my reproduction it was harder to reproduce the longer i tried without restarting XBMC. This is just the quick fix for it for frodo (well as long as nobody else wants to dig into this at this speedy moment).\n. can you jump on irc?\n. We want the same for osx - gimli did a similar patch some weeks ago (i just forgot about it) - we adapted it a bit and it should be fixing crash on ios/osx which was reported and proved by a crashlog 4 weeks ago.\n. @DDDamian @davilla - any subjections on that?\n. lol\n. nice - @davilla - thats what i ment some days ago :D\n. Well your call (or davillas maybe) cause i don't know what else of behaviour that would change. (i would say \"don't listen to the voices\" for frodo if you are not 100 percent sure that it won't add regressions <- now thats impossible i guess haha).\n. Its some sort of race. Start message is fired - player is stopped - start message is processed...\n. I had 2. implemented before but was unsure if it was ok to do the rest of the message handler so i added the return true for that special case. Both approaches fixed the crash of course\n. I decided to pull this in as is (because imo this start message is invalid and should just do nothing).\n. Nice catch - i looked at those yesterday and didn't notice the \"s\" g\n. Its guarded via \"$host_vendor\" != \"apple\" so osx/ios doesn't care ;)\n. damn - i wonder whats up with my rig then - maybe i need to rebuild deps from scratch at on epoint or so ;)\n. Didn't see that one - i tried a similar fix in the d'tor before (didn't help) - will give it another shot (well it worked on my hackbook though - just not on the i7 rig). Would give it another shot for ios too but will be very busy this weekend :(\n. Works fine on ios. As of me (osx/ios) - ignore my i7 rig problem and go for it ;)\n. all fine for ios/atv2/osx\n. just fyi - i did a clean build on my i7 and now it doesn't crash anymore - all fine.\n. Looks good to me. You also added win32 defines there - did you test compile it on windows or any other platforms beside linux?\n. signed-off for osx and ios (buildtested + runtimetest on osx at least didn't break sshfs access ;) ).\n. @huceke - rebased for getting rid of the one commit which was already in master\n. @huceke the bird is the word?\n. @huceke could you please hit the button - fuckin IE8 at work just doesn't work right anymore with github :(\n. +1 from - with this i'm able to fix the sleep button of the nyxboard on osx aswell. (if we get that keymap to load at some point :D )\n. For not loading the nyxboards custom keymap i have found out that the problem for me was a stale per-device-setting file (its located in userdata/peripheral_data or something). I deleted that xml file for my nyxboard (its called vid_pid.xml or so) and reset the nyxboard settings and it then started to load the custom keymap.\n. Sorry - IE8 here at work so i can't comment (because github doesn't work right with this outdated browser).\nLooks good basically but 2 things:\nPlease adapt to use this helper function:\nhttp://pastebin.com/rqNVKG1h\nIt fixes a possible memory leak when you early return on CFStringGetCString and it allocates 1 byte more because we can't be sure if the 0 byte is encoded into multiple bytes too.\nBeside that - does the darwinutils compile on ios aswell? (not sure if you are able to check that - else i will try to check when i'm back home later on).\n. @davilla - yes i know that its used on ios - thats because i asked about a compile test because i see he added an include for TARGET_DARWIN_OSX - just wanted to be sure that alle the cfstring functions are there on ios too without adding further includes - will test later ...\n. Ok i'm fine with this!\n. forum\n. xbmc - we do this on osx with hw volume buttons aswell and should do it for ios too.\n. Nice work - does it still work with the common keyboard dialog on non ios?\nBeside that i'm really looking forward to your change by using the UITextField on ios - i was not able to figure it out and the current approach just looks a bit ugly on ios :D\nThx for working on that front :)\n. Ahh right - i heard of the guy who did this :D - just wanted to make sure that its still working outside of ios with your patches ;)\n. Since this is part of #2105 i have tested this with the youtube addon and it works like a charm (native keyboard is used in addon settings there). Nice :)\n. This has to go in before #2105\n. @jmarshallnz  are you ok with that?\n. @ulion could you rebase and adapt to master please? Factory has the autoclose added now ;) - thx for your patience.\n. nice cleanup - i'm fine with it \n. looks good - but why that bool pointer - instead just call a function setcanceled in the keyboardview which sets a normal bool member\n. @jmarshallnz since i don't see your inline comments - can you confirm that those are fixed? If so i'm fine enough with it to pull the trigger...\n. looks good.\n. definitly yes please :)\n. If all is working like intended we should at least comment out all those LOG calls (i guess those go to the NSLog/syslog?) - will try it out these days and give feedback (though i only can test on ipad 4.3 and ipod 5.1.1 - the iphone has ios6 but isn't jailbroken :/ ).\n. Will have another look at the textChanged method. As of the code the notification should be doing it indeed. :)\n. It looks all good now. Though i have got a question. You seem to be more familiar with ios development then i am. Do you have a hdmi adapter by any means?\nWhen i connect via hdmi and select fullscreen #2 in xbmc - it runs on the external screen showing a touchpad control on the iDevice (for navigation). When i hit the search bar for example now - the native keyboard comes up on the pad (thats nice) - but the textfield shows up on the external screen (not so nice). I wasn't able to figure out how to show the textfield on the ipad aswell instead of the external screen. Your code does exactly the same. Do you have any idea how we could change this behaviour? (it would be much more intuitive to see what you type on the ipad of course ...).\nBut this could go in a seperate PR. For this one i sign off and add it to the next merge window for V13.\nThx for your work - keep it up mate :)\n. Could you rebase this to master now that the other PR got pulled? Ohh and btw - did you get my email some days ago? ^^\n. Ohh and i tested it without gap between keyboard and textfield - and imo this looks fantastic. So if you share that opinion - set the gap to 0 pixels (or i will do it after merging this pull request anyways :p)\n. thx mate :)\n. wow - that sounds promising - what does xbmc release + libarchive release give you? if it slows down to over 100ms then something would be strange ;)\n. The day you will come back too :)\n. You know we normally start inviting people who do some PRs ;)\n. Stop - don't inject yet! There is something wrong ...\n. This patch is needed for getting it compiled for osx/ios (was lost somehow?)\nhttp://pastebin.com/vKeyJ4EE\nThe win32 guard is not sufficient cause WIN32 gets \"force\" defined in\nhttps://github.com/xbmc/xbmc/blob/master/xbmc/cores/dvdplayer/DVDInputStreams/DllDvdNav.h#L29\n. don't use self - its a keyword in objc (like this in c++) and gets highlighted in xcode ... use \"me\" or something. (see my patch)\n. After applying my patch it still plays a dvd iso from my nfs nas - so yay fine i guess :D\n. I'm just saying that \"self\" is highlighted in xcode which looks confusing. (saw it when it bombed out cause of the \"this\"). This is no compile issue of course but thought i mention it for preventing its usage somwhere deeper in our code in the future ;)\n. Now its fine on osx/ios compile wise (and quick runtimetested).\n. No problems playing a dvd iso on linux. (ubuntu 12.10).\nThough from the ticket its not clear if it is dvd, or folder structure...\n. Any idea why preparestream fails? Though this looks good to me.\n@jmarshallnz or whoever has a second opinion?\n. thx\n. Nice work. But i would like you to change 2 things if possible.\n1. All printsignature and elog changes should go into a seperate commit (something like \"improved errorlogging\" or so)\n2. Since this is a real bunch of code - do you think you could split out all the audiocontrolstuff/delegate from XBMCController into a seperate class?\n@davilla what do you think\n@huceke anything you can say about the audioengine changes?\n. http://pastebin.com/NmPrVnxD <- introduces this compiler warning - would be nice if you could catch that.\n. Given it a quick runtest - man this rocks! :D\n. nice split - makes review easier ;o)\n. Looks good to me. But there are some xcode project changes i am not able to look at with Internet Explorer @work. Will have another look at home...\n. Ok its there on linux and android too - you can remove the ifdef - its save for our platforms. After that i hit the green button.\n. Thx ulion :)\n. On rebase i realised that the focus stuff before the touch action is fired is missing (mouse move event ....) ;)\n. nice \n< swipe direction=\"left\" pointers=\"2\" >Back\nworks now on ios :D good work. Only the swipe is left - after that ios gestures are compatible to before again with the new unified handler.\n2 things i realised to:\n1. The zoom gesture now behaves different. When the image is zoomed and i put the fingers there again - the zoom is reset to the factore my fingers are representing at that moment. Wasn't it that the zoom continued were we left of before? Same for rotation.\n2. the snap to 90\u00b0 in the fullscreenpicture is broken somehow (it doesn't snap back for me).\n. Sorry - still on Ski vacation ;)\n. @Montellese - just rebase and leave the conflicts in there. Then ping me and i fix it up.\n. Well done. Everthing fine now on ios (rotation snap back is working too now of course :D). Thx for the commit cleanup. No need to squash it down further imo.\n. Sounds like a good plan to me :)\n. Nice - we allow the same on ios ...\n. You can test it locally by placing the new tarball into /Users/Shared/xbmc-depends/tarballs/ and bump the version in tools/darwin/depends/libmicrohttpd (or how it is called). If it works like intended do a pull rewuest with the versionbump/makefile change and we will handle uploading to darwin-deps.\nThough our goal is to use the same dp versions on all platforms. So it might last a bit for checking it for android and raspberry pi.\n. BTW - i can't confirm that it hangs when stopping XBMC on ios (tested on iOS 4.3 / ipad and iOS 5.1.1 /ipod4). So this is not generally an issue.\nWell we need sign-offs for all platforms.\n@wsoltys - you remember which version you tried that kept crashing?\n. Because theuni is working on unifying the deps - so soon all deps will be same versions for linux, rbpi, android and darwin...\n. @wsoltys did you have a chance to try it on win?\n. Fixes trac ticket http://trac.xbmc.org/ticket/13407\n. i also thought of the close method - not sure why i didn't like it. @ulion i used a nstimer in thenioskeyboard at the first try but somehow it never fired the callback (i already use nstimers e.x in externaltouchcontroller). Thats why i did the poor mans solution for ios.\n@jmarshallnz the setautoclose is a method from the guidialog the generic keyboard is derived from - or i got tricked somehow ;) \nWell i will overthink it - i guess adding a cancel method to the GUIKeyboard interface and handle autoclose in the factory is nicer.\n. PR updated - native keyboards need to implement one additional method \"Cancel()\". AutoClose is realised in the factory/GUIKeyboard base class by using a CTimer object.\nTested for ios nativekeyboard and generic keyboard.\n. Compile tested on osx/ios/atv2 - all fine (hey - we are below 1000 sourcefiles in xcode again with this haha). Looks good!\nThough before injection - make sure your lcd addon hits our addon repo ;)\n. Suspend while playing music? Sorry but shouldn't we focus on use cases which are not totally ****? :D - someone could plug the ethernet cable during suspended state - so if you access files from there during suspend - on wake up you are going to live in hell anyways ... (there are 1000 more stupid scenarios which get us into trouble - we should focus on them for V14).\n. @Montellese iirc you did that code for android and i copied it over to ios. Could you comment on that please? (i bet its relevant for droid too then...)\n. Yeah the merge window was closed yesterday - but no worries. Merge windows are only important for new features. Bugfixes (like this one) can be merged at any time if signed-off ...\n. ulion please cherry-pick this on top of your branch (thas basically the same for android):\nhttps://github.com/Memphiz/xbmc/commit/45d46d78e3c5ed645cf38d194ee31b7f6df2e1d1\nI already had NedScott test this for ios and also have made an android testbuild (trying to find someone with an android touch device).\n. ahh i couldn't do a pull request to your repo (your username just doesn't show up as target repository :( ) - thats why you would need to cherry-pick it - sorry.\n. K tested by montellese and nedscott (ios, droid) ...\n. Just fyi - we already routed m3u8 urls to ffmpeg aswell. In general i'm for doing this when streams are fixed by that - but we have to keep in mind some things here.\n1. When using ffmpeg we are not using our CFile interface -> no caching happens\n2. We are loosing any customised set user-agent http header\n3. Not sure what else curl options we are loosing when doing it via ffmpeg\nSo maybe someone could dig up if those 2 things (caching and setting user-agent) can somehow be set via options to ffmpeg aswell? (i did look at it like a pig at a clock when i tried to dig some month ago).\n. gimme a sec\n. Sounds nice Montellese. Well i think when this gets merged we meet on irc for having the xcode sync right after it ;)\n. fyi - on osx we add the default device at the start of the device list...\n. Nahh its all fine - thx :)\n. Just can't hit the button (only IE8 at work which doesn't work right with github).\n. nice - this will finally make the nyxboard backbutton behave correctly i guess! :D\n. No its because of this:\nhttp://wiki.xbmc.org/index.php?title=XBMC_for_Mac_specific_FAQ#SMB_.28Windows_Sharing.29_isn.27t_working_when_sharing_files\nImho there is no smbclient out there which is able to support the samba 2.0 protocoll (server does it, but not client). So this bump won't fix that issue. Do you know any other benefits of bumping the version?\nFor clarification - basically the problem is that Apple removed Samba 1.0 protocoll support since osx 10.7 in their server and only support Samba 2.0 (libsmbclient doesn't support this).\n. @davilla @theuni - what do you think about version bumps in general (now that unified deps are in the works but not merged yet)? And davilla - +1 on this one when it really fixes the lion regression.\n. Uploaded samba 3.6.12 sources to darwin deps and confirmed working samba access against an osx 10.8.2 samba server - nice catch. Bye bye smbup :)\nVersion bump - tracking thread created in internal...\n. That means if there is a seek to the EOF needed it will download the whole file before even starting playback? Just curious - its the area of @elupus though.\n. Sounds and looks right to me - lets see what @elupus thinks... ;)\n. This (together with the message pump fix) - fixes crashing a lot of ios touch devices users are seeing latly. Tested by NedScott on his ipad4 showed that this one - is a good one ... :)\n. Well if i got it right @ulion - just assign it to the march milestone (upper right button on this pr) and merge on the alpha2 mergewindow (between 1.3. - 10.3. 2013).\n. @jmarshallnz looks fine to me. Next merge window?\n. Looks good to me - does this superseed the #2228 pr? Or are both needed?\n. What do i need to look for when testing this?\n. 1. Compiles - yes\n2. no regressions seen yet (software decoding only at this mashine currently) - not sure if any improvements\n3. @something for davilla ;)\n. Compiled and tested with ios (atv2). No regressions as far as i can see (tested only soft decoding) - might be that when bringing up the overlay it doesn't hickup that much anymore?\nAlso tested hw decode with VTB - its still working - not sure if this PR should even influence it.\n. I'm happy with this - @jmarshallnz ?\n. Read the other pr referenced here - we don't want to process any messages out of order for sure. (e.x. touch messages should be processed before any new messages get added/processed).\n. Yep +1 to elupus opinion. We have the same problem on nfs where no encoding is specified at all in the spec - we just have to assume utf8. There are users which have problems because of using really strange servers which just have other encodings then utf8. We have to draw a line somewhere and i find that this conversion stuff just messes up the clean code in general (we would need to think about something like you did for all our vfs handlers ...).\n. This pr has a cosmetic issue with DR. I guess once the setting is changed the whole screen has to be marked dirty. Else only the controls which are dirty reflect the range change ;) (seeing this on osx when turning the setting on and off)\n. something else...\n. Looks fine - welcome to ios - full of bugs it is :D\n. Is this some new kind of spambot maybe? (serious...)\n. will test on ios in a min.\n. works fine on ios.\n. Good catch wsoltys ... when introducing the autoclosems i forgot to explicitly set the bhiddeninput bool (it defaults to false) - at those 2 places.\n. ace20022 you wanna update your pr or should i just go for it bypassing you?\n. Thx\n. I guess i had a reason not using the taprecognizer. It has something to do with our inertialscrolling implementation. How sure are you, that we got the same gesture behaviour as before now? ^^\n. Tested and signed-off \nCleared to merge. (merge both - this and https://github.com/xbmc/xbmc/pull/2296 please)\n. tested and signed-off\nCleared to merge (please merge both - this and https://github.com/xbmc/xbmc/pull/2292 )\n. \"That seems silly\" - comments on github won't make it better. Stop spamming if you don't have something usefull to say.\n. Yeah - just keep them coming :D - looks good to me. Any idea if that bug is fixed in upstream libcurl?\n. turning on my cores for buildtesting now :)\n. bootstrap is missing +x\n. Ok - there is something i'm not able to figure out. Libplist ist not found and airplay support ends up disabled.\nsee\nhttp://pastebin.com/3cWdGYLX\n. samba needs bump to what we have in master 3.6.12 iirc. Else we will reintroduce the regression that we can't connect to sambaservers running on lion or newer.\n. xbmc-pvr-addons are somehow changed now. They get installed into prefix. But xbmc doesn't load them from there on osx. In master they get installed into our tree in addons afaik. Not sure if this change is by intention or what the final goal on this is.\n. on IOS libiconv is not built because the depends configure thinks it doesn' need libiconv. Though our configure from depends/xbmc complains about not finding iconv. To me it looks like it looks for iconv on the build system instead off the sdk. This needs fixing before merge:\nconfig.log from depends:\nhttp://pastebin.com/Zr6Hn8px\nconfig.log from xbmc:\nhttp://pastebin.com/RHsKwjH4\n. yeah will adapt atv2 when i'm there on my testmatrix (10.6,10.7,10.8 with i386,x86_64,ios,atv2 - 12 builds - 6 to go).\n. @theuni the issue with iconv is xbmcs configure. Its right - libiconv is not needed in our depends because its in the ios sdk. But xbmc configure doesn't find it.\nIf i trick it to go through it xcode builds & links fine using the libiconv.dylib from the sdk.\n. Ok time over for today. Just go from top to down through my comments and fix what you can. Results with my commits and the iconv trickery:\nosx 10.6.8 xcode 3.2.6 macosx sdk 10.6 ios sdk 4.3:\nall builds and runs fine (quick test)\nosx 10.7.5 xcode 4.6 macosx sdk 10.7 ios sdk 6.1:\nall builds & runs fine (no runtime tests for ios cause of signing issues)\nosx 10.8.2 xcode 4.6 macosx sdk 10.8 ios sdk 4.3:\nosx i386/x86_64 builds fine\nios linker error (strange obscure bs - no time to look into it)\natv2 builds & runs fine (quick test)\nHere you see (the)UNIfied depends in action:\nhttps://www.youtube.com/watch?v=sKWhyquC5KE\nAlso i guess the buildslaves needs adaptions cause they need to do something different now for building deps.\nYour shift now ;p\n. I think i'm fine with it now :) - great work (noticed the gplv3 split - nice!). So \"only\" syncing dep versions with mainline (i only stumbled over libcec 2.1.0 vs. 2.1.1 but i think you wanna do it in one commit so i didn't push it) - and whatever needs to be changed on billy for using this new piece of goodness.\n. Nice catch. TBH i never did the script.module.pil thingy. Is this still needed @davilla? Beside that we only adapted the target path to be able to generate from env vars. The native path wasn't (because i just missed the python generation aswell).\n. Better use a CURL object and call GetOption instead of parsing on your own (see https://github.com/xbmc/xbmc/blob/master/xbmc/URL.h)\nBut before spending time on it - wait on a comment from @elupus - if he even wants this in at all ;)\n. What ulion said - please don't log anything if exists failed. We had this and i have removed it some month ago from all our handlers (only smb and nfs had it iirc). It spammed the log a hell when trying to generate the thumbnail directory structure in conjunction with path substitutions. (unlikly to be the case for curl - but we should handle it consistent).\n. k\n. mhhh are you sure this is right? Based on the CFDictionary reference the key and value objects are retained using the callback specified in the CFDictionaryKeyCallBacks struct. We are not providing such callback for retaining the objects. Well i'm not that obj-c save here but for me it looks like releasing those keys would mean that they get destroyed in the dictionary too? Or are they copied?\n. I take your word - thx :D\n. queued for april\n. queued for april\n. @wsnipex - this needs a libshairport bump for linux. You would need to compile it from amejia1 tree with this pr applied.\nhttps://github.com/amejia1/libshairport/pull/4\n@amejia1 - please merge this pr into your tree ;)\n. Fine by me too - hit it\n. @Montellese this pr went gray when i was about to sync xcode projects - did a pr to your branch with the needed changes (compile tested osx/ios/atv2).\n. Looks good to me. Anyone else?\n. Nice one ulion as usual :)\n. looks solid\n. just fyi - nfs doesn't specify encoding - it relys on what the underlaying filesystem does ...\nread comments on http://trac.xbmc.org/ticket/13644\n. That was something i proposed in the first place too. But there was a reason why Montellese didn't want that - lets wait until he is back from vacation.\n. Nah i copied it from your win32 branch montellese :D - that was when i already figured out that ios can recognize both gestures at the same time. :)\n. No worries - we introduced much more major regressions in 12.1 then that one ;) - thats live.\n. Mhhh not sure - but if i get it right in this commit the most of this was changed for not beeing utf8 on purpose - no?\nhttps://github.com/ulion/xbmc/commit/4b4bb2768450367c9aee1066bacf4f428f31fe5a\n. Well that commit fixed real world issues. Unfortunatly i can't remember them. @davilla - do you remember?\n. @tru can you remember the issue - iirc you were in charge of this refactor? IIRC using utf8 really didn't work somewhere did it?\n. Thx for clarification.\n. yes we can ;)\n. @Montellese  sorry github is so badly broken atm that i'm not able to do pr ... but here it is:\nhttps://github.com/Memphiz/xbmc/commits/settings_cleanup_4\ncompile tested for osx/ios/atv2\n. @ulion fyi - for enabling the testframework:\nedit https://github.com/xbmc/xbmc/blob/master/tools/depends/target/xbmc/Makefile\nadd --enable-gtest to the configrue line\nthen make -C tools/depends/target/xbmc\nthen make test will build and run them... (have to add this to the readme)\n. Well - nvm but it doesn't matter if you build via xcode or not ... but if i got you right your disk is full so nothing we can do about that in our buildsystem ;)\n. Could you prefix your commit msg with \"fix:\" or something like that? Like \"Fixed - remove early returns in favour of proper setting of bReturn in CGUIInfoManager::GetMultiInfoBool\" or something like that?\n. hit f5 ...looks good in the pr now :)\n. thx :)\n. Works as before on osx - thx :)\n. missing the ffmpeg patches?\n. please apply http://pastebin.com/H7RTwqUG for fixing compilation on ios\n. Me neither. I'm fine with it. (looks straight forward). But i think the initialisation in sqlitedataset and mysqldataset is doubled by the c'tor of the base class and therefore not needed. (i bet someone will correct me on that me is on coffee!)\n. nope - not yet on osx\noutput\nhttp://pastebin.com/85m2A0dF\nconfig.log\nhttp://pastebin.com/8DQQ25Vk\n. That's the jedi mind trick - i forced my own fame with a gesture of my hand :) - but yeah davilla ftw :D \n. yep needed ;)\n. Nice (didn't compile and try yet - lack of time). But i guess there will be users which will complain like \"the slideshow stops on movies and i have to do something to make them play everytime a movie comes up\" ;)\n. doesn't compile for me:\nPlayBackRet missing and the PLAYBACK_OK stuff isn't found either.\n. nvm - forgot to pull #2244\n. Thats awesome work ulion as usual. I see that the play button for the videos doesn't appear when slideshow is active - so you already took care of my theoretical issue.\nWorks as described on ios. And it looks like it also fixes the direction issue when changing direction (former due to caching it might have loaded the wrong \"next\" image - there is even a trac ticket about that somewhere).\n. didn't realise that those are not seperated PRs. This one is a backport to Frodo branch.\n. didn't realise that those are not seperated PRs. This one is a backport to Frodo branch.\n. I didn't even had time to compile test this for osx/ios/atv2 - busy week. Will try to get to it but yeah i would like to have the xcode changes on top of it when the button is hit. Should be no problem to get it done until next merge window :)\n. Works nice on ios - good work :)\n. Yep that is a fix - it was reported as a bug from users in the forum :)\n. Then next merge window ...\n. Sorry for the maybe dumb question. What exactly is the issue that gets fixed by this? Or is it more of a fix in theory?\n@elupus - i guess we want this?\n. But it gets dyloaded - not statically linked? (or i still don't get something about android ...) - will try to poke at it - though its more of a theoretical thing for android since without zeroconf support airplay won't be hit anyways ...\n. ohhh and thx @wsoltys\n. @wsnipex package works as expected - nice :)\n. @theuni - excluded libshairplay for droid for now (so we can merge it in next merge window anyways).\n. yep ... working on a fix ... \n. i tend to recreate the former behaviour for darwin...\n. ohh and we are talking about static libs here btw ... ;)\n. @davilla - ok with that:\nhttp://pastebin.com/b8uShdp9\n. Just a hint - whenever i have the motivation for moving out the airplay stuff into python - i would benefit from such a builtin too. (no that's not a +1) :D\n. you are welcome - and in this case our benefits are huge enough for bending a finger ;)\n. I was not able to compile a crashfree version of this branch on my local mashine - so i kicked jenkins and see if it builds something more clean. This PR should at least be hold off until i verified ios/atv2 ...\n. @wsoltys try getting rid of the using namespace std and the string include in network.h\nit compiled for me fine - but i got memory leak until crash on runtime...\n. nahh i guess its my buildsystem ... did a clean build with our buildbot and try it now ...\n. try ::bind then\n. network.cpp is in namespace std ... thats might be the problem maybe?\n. airtunes is not involved here ... airplay is - though it works fine on xbmc running ios - but if this introduces a regression on windows i get my head knocked off ...\n. well it works fine for me on osx/ios/atv2 - this is with ipv6 environment on the whole network ...\n. ",
    "blinkseb": "Very nice, maybe I'll be able to switch my htpc keyboard to FR layout instead of US one :)\n. I'll test it out as soon as I'm home.\n. Ok, just tested:\nAdding a new source, I'm able to use my keyboard as I always does (using azerty layout). However, as usual, in the gui, it does not work. The backslash does nothing (Alt Gr + 8):\n\n18:05:42 T:5776 M:1404485632   DEBUG: SDLKeyboard: scancode: 09, sym: 0038, unicode: 005c, modifier: 240\n18:05:42 T:5776 M:1404485632   DEBUG: CApplication::OnKey: ctrl-alt-eight (df038) pressed, action is\n\nI've also tested other keys, like &, \u00e9, \", ' etc. (see here for the complete layout: http://upload.wikimedia.org/wikipedia/commons/b/b9/KB_France.svg )\nAs you can see, '&' is '1' on US layout:\nFor '&', '\u00e9', ' \" ' :\n\n18:06:08 T:5776 M:1427546112   DEBUG: SDLKeyboard: scancode: 02, sym: 0031, unicode: 0026, modifier: 0\n18:06:08 T:5776 M:1427546112   DEBUG: CApplication::OnKey: one (f031) pressed, action is Number1\n18:06:08 T:5776 M:1427607552   DEBUG: SDLKeyboard: scancode: 03, sym: 0032, unicode: 00e9, modifier: 0\n18:06:08 T:5776 M:1427607552   DEBUG: CApplication::OnKey: two (f032) pressed, action is Number2\n18:06:08 T:5776 M:1427640320   DEBUG: SDLKeyboard: scancode: 04, sym: 0033, unicode: 0022, modifier: 0\n18:06:08 T:5776 M:1427640320   DEBUG: CApplication::OnKey: three (f033) pressed, action is Number3\n\nAnd shifted,\n\n18:06:31 T:5776 M:1428279296   DEBUG: SDLKeyboard: scancode: 02, sym: 0031, unicode: 0031, modifier: 1\n18:06:31 T:5776 M:1428279296   DEBUG: CApplication::OnKey: shift-one (2f031) pressed, trying keyboard action 61745\n18:06:31 T:5776 M:1428279296   DEBUG: SDLKeyboard: scancode: 03, sym: 0032, unicode: 0032, modifier: 1\n18:06:31 T:5776 M:1428279296   DEBUG: CApplication::OnKey: shift-two (2f032) pressed, trying keyboard action 61746\n18:06:31 T:5776 M:1428176896   DEBUG: SDLKeyboard: scancode: 04, sym: 0033, unicode: 0033, modifier: 1\n18:06:31 T:5776 M:1428164608   DEBUG: CApplication::OnKey: shift-three (2f033) pressed, trying keyboard action 61747\n\nIf you want me to test anything, just ask :)\n. @jhsrennie : Indeed you're right, pressing <> toggle fullscreen mode.\n\n20:23:24 T:5148 M:1422790656   DEBUG: SDLKeyboard: scancode: 56, sym: 005c, unicode: 003c, modifier: 0\n20:23:24 T:5148 M:1422786560   DEBUG: CApplication::OnKey: backslash (f0ec) pressed, action is ToggleFullScreen\n\n. @jhsrennie : it seems like the whole keyboard layout isn't used. Like i said before, pressing '&' on my keyboard result in xbmc understanding '1' , which is right on US layout.\nNot sure what's the correct solution. In the mean time, I've set my htpc keyboard to us layout, much easier :)\n. I've just tried it, and it works for the backslash key. However, all other keys are still broken.\nI press '&' on my keyboard:\n\nSDLKeyboard: scancode: 02, sym: 0031, unicode: 0026, modifier: 0\nCApplication::OnKey: seven (f037) pressed, action is Number7\n\nPressing '\u00e9' :\n\nSDLKeyboard: scancode: 03, sym: 0032, unicode: 00e9, modifier: 0\nCApplication::OnKey: two (f032) pressed, action is Number2\n\nThat's the correct mapping for US layout, not FR. However, Shift+'\u00e9' is detected as 'Shift + 2', but it should only be '2'.\nDon't we have a way to read key value instead of the physical key pressed ?\n. I have a deadlock with this but not with master when playing a video file (win32). Not sure what you need to debug, but main thread is waiting in RenderManager.h:L56 (GetVideoRect), and lock is already taken by: RenderManager.cpp:L506. No matter how long I wait, it's locked.\n. @jimfcarroll\nHere we go:\nmain thread:\n -> boost::shared_mutex::timed_lock_shared\ncall stack:\nXBMC.exe!boost::shared_mutex::timed_lock_shared(const boost::posix_time::ptime & wait_until)  Ligne 169 + 0x1a octets   C++\nXBMC.exe!boost::shared_mutex::lock_shared()  Ligne 122 + 0x15 octets    C++\nXBMC.exe!CSharedSection::lock_shared()  Ligne 42 + 0x14 octets  C++\nXBMC.exe!boost::shared_lock<CSharedSection>::lock()  Ligne 656  C++\nXBMC.exe!boost::shared_lock<CSharedSection>::shared_lock<CSharedSection>(CSharedSection & m_)  Ligne 539    C++\nXBMC.exe!CSharedLock::CSharedLock(CSharedSection & cs)  Ligne 50 + 0x37 octets  C++\nXBMC.exe!CXBMCRenderManager::GetVideoRect(CRect & source, CRect & dest)  Ligne 56 + 0x3a octets C++\nXBMC.exe!OVERLAY::CRenderer::Render(OVERLAY::COverlay * o)  Ligne 199   C++\nXBMC.exe!OVERLAY::CRenderer::Render()  Ligne 190 + 0xe octets   C++\nXBMC.exe!CXBMCRenderManager::Present()  Ligne 600   C++\nXBMC.exe!CApplication::RenderNoPresent()  Ligne 1824    C++\nXBMC.exe!CApplication::Render()  Ligne 2072 C++\nXBMC.exe!CGUIWindowManager::ProcessRenderLoop(bool renderOnly)  Ligne 630 C++\nCDVDPlayerVideo thread\n  -> boost::shared_mutex::timed_lock\ncall stack\nXBMC.exe!boost::shared_mutex::timed_lock(const boost::posix_time::ptime & wait_until={...})  Ligne 329 + 0x1e octets    C++\nXBMC.exe!boost::shared_mutex::lock()  Ligne 258 + 0x15 octets   C++\nXBMC.exe!CountingLockable<boost::shared_mutex>::lock()  Ligne 62 + 0x14 octets  C++\nXBMC.exe!boost::unique_lock<CSharedSection>::lock()  Ligne 413  C++\nXBMC.exe!boost::unique_lock<CSharedSection>::unique_lock<CSharedSection>(CSharedSection & m_={...})  Ligne 291  C++\nXBMC.exe!CExclusiveLock::CExclusiveLock(CSharedSection & cs={...})  Ligne 61 + 0x37 octets  C++\nXBMC.exe!CRetakeLock<CExclusiveLock>::CRetakeLock<CExclusiveLock>(CSharedSection & section={...}, bool immidiate=true, CCriticalSection & owned={...})  Ligne 68 + 0x26 octets  C++\nXBMC.exe!CXBMCRenderManager::FlipPage(volatile bool & bStop=false, double timestamp=8.9965621170632382, int source=-1, EFIELDSYNC sync=FS_NONE)  Ligne 506 + 0x32 octets    C++\nXBMC.exe!CDVDPlayerVideo::OutputPicture(DVDVideoPicture * pPicture=0x10a7f940, double pts=8091291.6666666446)  Ligne 1234   C++\nXBMC.exe!CDVDPlayerVideo::Process()  Ligne 632 + 0x1b octets    C++\nXBMC.exe!CThread::staticThread(void * * data=0x0c6506c8)  Ligne 178 C++\n. @wsoltys I've got only one video which dead-lock, all others are fine. I suppose I had some luck choosing the right eheh.\n. @jimfcarroll, I'm currently in the train, I'll give it a shot as soon as possible (tonight if everything is ok). If it's still does not work, I'll send you the video file :)\n. I still wasn't able to test, but I think tonight will be possible, sorry for the delay.\n. give me one hour, I need to install DirectX sdk on my laptop and build xbmc. It should be enough :)\n. ok it's working, great job. The Visual Studio project needs to be updated, as Interruptible.cpp/h and Condition.cpp don't seem to exist anymore. What's the easiest way? A PR?\nEDIT: It seems I have write access to your repo, should I push the win changes?\n. Ok nice, I forgot to set email and nick, great ...\n@jimfcarroll before commiting, can you rebase and change my author name to \"S\u00e9bastien Brochet blinkseb@xbmc.org\"\n. Just tried, no errors for me, works like a charm, both release and debug.\n. Oh ok, so that's fine.\n. I guess I prefer the way I did for the shift handling : https://github.com/blinkseb/xbmc/commit/4922720147daa4766d35a3bbc3060ef2fdd91e20\nThis way, we let Windows do the hard work for us.\n. I'm globally happy with this PR (I've made some corrections, but only reviewed the strings which were changed). The french translation needs indeed some rework.\nPlease, please, please, be careful : A space before '?', ':', '!' and '...' is mandatory in french, don't forget it.\n. Freetype on Windows has been updated to 4.2.6 (security fixes), libass needs to be updated to fix a crash with freetype 2.4.6.\n. latest one, 2.8\n. eheh. libass update does not require updated freetype, but it adds some nice new feature for ass subtitles lovers :)\n. I just checked, and it seems libass doesn't even use fopen_utf8. Only fopen is used once, and XBMC does not call that function. I can add it if someone really wants it back, but for me it's useless.\n. So let's merge!\n. I've tried this morning to add your patch, but I can't build: link error \"fopen_utf8\" symbol not found, rather normal as it's defined nowhere. I don't know how you've succeeded that :)\nI'll add a custom implementation of fopen_utf8 inside freetype, unless someone as something better.\n. After more testing, it's not related to libass, but to XBMC and Freetype. All my videos with embedded ass subtitles play fines with subtitles, but all files with external subtitles don't show subtitles. I'll fix that\n. I tried to put it back like it was, but I can't compile because the fopen_utf8 is not found. Maybe it's defined in libass, but the .lib is compiled separately, and, afaik, a .lib must be fully bound, so fopen_utf8 needs to be defined in freetype.\n. Great, but can you tell me how you did to build the .lib with the header change?\n. Nevermind, it worked this time... Thanks for fixing it.\n. eheh, no crash bugs in this one, only new features. I'll wait until Eden is branched, np ;)\n. Same here, testing tonight\n. Have you tested the locale change on Windows and Linux? That's very tricky to get this working, because Windows and Linux does not use the same locale name (ie, on Linux, 2 letter language code is ok, but on Windows, you must use the 3 letters language code). We have a table to convert Linux to Windows locale name (LangCodeExpander.cpp).\nbg was perfectly fine on both platform, but if it's work with bul, it's fine for me.\n. Malheureusement, personne n'a l'habitude de mettre des accents sur les majuscules, m\u00eame \u00e0 l'\u00e9crit, et c'est bien dommage :(\n. Mais merci pour la PR, j'ai toujours d\u00e9tester voir des majuscules partout, mais j'ai toujours eu la flemme de changer tout \u00e7a :)\n. I could look for Linux, but I don't have access to any osx devices ;)\nharfbuzz isn't packaged in any distribs, how should we handle that?\n. Oh, haven't understand that. I'll look at that, would be a nice addition.\n. If no one objects, I'll merge this PR tomorrow. \n. It seems like a simple conversion issue indeed, thanks.\n. Hm, be careful when doing the conversion. You should divide by 1e7, as REFERENCE_TIME is 100 ns unit. I've tested it and it seems to work for me.\n. Please, no translation on PR. See http://wiki.xbmc.org/index.php?title=Translation_System for the new translation system.\n. ",
    "jmarshall": "I am unconcerned about Mac arrow keys, but perhaps @jmarshallnz is.  Sheesh.  You've been spamming a completely unrelated person for a while now.\nOTOH since you asked: do remove those leading underscores as you're not a compiler, but don't use #pragma once.  Ick.\n. The only issue I have is you spammers.  You mean @jmarshallnz.  Sheesh, you would think programmers would have more attention to detail.\n. Extremely, and I have a correspondingly jaundiced view of your project that obviously I share with everyone I meet.\nFortunately github now has the facilities to set everything xbmc-related to be automatically ignored, though I didn't expect to have to use them to protect myself from programmers with insufficient attention to detail (which surely should be a contradiction in terms).\n. ",
    "pieh": "@davilla\nOn windows my current master build is keeping around 55MB when in Home window. Build from my branch, after visiting (in fact storing) Weather, Programs, Photos, Videos, Music, Settings and backing to Home Window have 59MB (give it or take it).\nDeiniting windows still results in freeing textures and other things like these. \nIt can be however tweeked to allow few levels for this feature - f.e. (0 - never keep controls, 1 - keep controls in most popular windows (Home, VideoNav, MusicNav, etc), 2 - keep controls in all windows) or even specify which which window should keep controls in advanced settings\n@cptspiff\nI'll just push commit changing that and later (after more comments and code fixes and hopefully for me accepting this request) I will reset GIT and make clean commits containing fixed code\n\nseriously, this github interface is disturbing\n. pushed commit with fixes pointed by jmarshall\nnow only controls are stored (xml isn't stored) and textures/items in containers are freed on window deinit\n. pushed commit with fixes pointed by jmarshall\nnow only controls are stored (xml isn't stored) and textures/items in containers are freed on window deinit\n. I'd like to push things forward with adjusting this patch,\n\ni think the advancedsetting should be in there, but that we need 3 levels;\n1) keep nothing\n2) keep controls&xml\n3) keep the lot (including textures)\n\nad 2). Do we really need to keep both controls & xml? As I understand xml should be stored in case that some include condition have changed its value and we have to recreate window. For me conditions used to resolve includes are dependend on skin settings or other variables that rarely changes (correct me if I'm wrong here). I don't know if adding another class member in CGUIWindow to store xml that will be rarely used is desired. IMO rare usage of stored xml won't justify additional complexity of logic flow in CGUIWindow - this is fairly easy to add but I have in mind future code maintenance.\nad 3). I'll do some tests with textures (and other stuff that is freed in CGUIControl::FreeResources) kept in memory. Increase of memory usage propably won't justify better performance, but if someone have 2GB memory on dedicated HTPC he doesn't have anything else than XBMC to spend memory on, right? Same worries as above  - will additional complexity of logic flow justify increase in performance?\n. I took a look in texture managers and possible would like to merge them. Current timeout for large textures is 2000ms (+up to 500ms - interval of trigerring releasing of unused textures) after decrementing refcount to 0 - this seems to be reasonable. Also from quick look it seems that loading texture (not large one) blocks context - do You think that creating CJob to load textures is worth consideration? (one thread that loads textures from \"texture queue\")\nThere could be also some mechanism for skins to define GUI textures that shouldn't be released - even if currently not used (i.e. button backgrounds) or to assign custom timeouts/priorities for them.\n. I'll have to delay dealing with texture manager a little. \nThere is one thing I didn't consider earlier - windows don't trigger onWindowLoaded/onWindowUnloaded now and some dialogs (possibly windows too - I'll have to investigate it more) use these methods to init/deinit members - for sure it cause problems with context menu dialog. Question - is it safe to move trigerring of onWindowLoaded to AllocResources and onWindowUnloaded  to FreeResources? Another issue is that currently context menu doesn't destroy buttons (so using context menu second time will show context menu with 2 sets of buttons) - I'll have to check how many other dialogs/windows also could have similliar issue.\n. After some consideration I think that previous logic was correct and what I have to do is review specific windows code (many windows/dialogs expect that onWindowLoaded to be triggered always - f.e. CGUIDialogContextMenu is setting up context buttons in onWindowLoaded - IMO it should be done in onInitWindow)\nWhat I have to do is to review each window derivative to ensure that it follows correct window lifecycle - and that is:\nAnd make sure that windows don't depend on assumption that onWindowLoaded will be always triggered before onInitWindow (because onWindowLoad won't be triggered always)\n. It needs checking (and possibly changing) each CGUIWindow  which I'm slowly doing but current stuff doesn't allow to do it fast, so I'll close it for now and reopen it later when I'm done.\n. > Why is the textbox starting in the middle of a row of text, rather than starting at the exact line? The only case that should happen is if it's in the process of scrolling shouldn't it? (m_offset being an integer).\nideally it would - unfortuntunately this is due to float accuracy problem and I run into it only by accident: this is example why this happend:\nin CGUITextBox::Render:\n  if ((m_scrollSpeed < 0 && m_scrollOffset < m_offset * m_itemHeight) ||\n      (m_scrollSpeed > 0 && m_scrollOffset > m_offset * m_itemHeight))\n  {\n    m_scrollOffset = m_offset * m_itemHeight;\n    m_scrollSpeed = 0;\n  }\n  m_lastRenderTime = m_renderTime;\n\n  int offset = (int)(m_scrollOffset / m_itemHeight);\nnow let's do the (float) math:\nm_offset = 3\nm_itemHeight = 30.183407;\n\nm_scrollOffset = m_offset * m_itemHeight = 90.550217\n\nint offset = (int)(m_scrollOffset / m_itemHeight) = (int)(2,9999998674768557439522980291787) = 2\nso instead of start rendering from line 4th line (offset = 3), it start rendering from 3th line (offset = 2) and we can see clipped part of text\nthis is also why I added ceilf in reporting page number to page control - perhaps we could round up offset if it is reasonably close to next integer ( something like 0.1 or 0.05 range) - for example:\n\nYou'll either want to split this up (probably preferred, as you can then comment on each if statement) or wrap each ANDed clause in () to tell the compiler that you know what you're doing regarding the precedence - some compilers warn if this isn't done.\n\ndone\n. > If it's a float rounding problem then I suggest we just use MathUtils::round_int() rather than ceilf() - that should ensure that the first page gets rounded down if that's an issue.\nit won't solve the problem seen here: http://wojtek.piechowiak.eu/mich/xbmc/screenshot006.png - we can see little part (1 pixel height) of line in top of the textbox. Problem with value reported to page control as just another result of same problem. Problem here is this (from my previous comment) - this line determines text line that rendereing will start with\nI would opt to round it up if reasonably close to next integer:\n\nChange to Move() looks fine, yup. Weird that the Move function is virtual - it shouldn't need to be, right? Mind removing that at the same time?\n\nsure will remove it, visual studio says that scrollbar doesn't have any dervied types\n. ok, will just do it - I just thought that these clipped 1px remnants of text are undesired\n. updated commits\n. Removed angle, added isPassword flag in constructor  (to mask text value). I'll squash it if it will get green light.\n. To get rid of unnecessary conversion we could store seperate CStdString and CStdStringW last values and some flag to indicate what is type of last value ... If this one is better feel free to push merge button\n. @garbear\nthese are seperate things (this PR doesn't require your addition and vice versa) - just request pulling directly on xbmc/xbmc\n. Updated commit\n\nIf SetLocation did the set/fix for range it might simplify things a bit\n\nDoes it still need that fix? Or this was caused by poorly readable code in OnMessage?\n. updated\n. assuming You're referring to Your remember_location2 branch - just close this PR, open new one and You might just add link to this PR in description\n. about 1-indexed/0-indexed: first of all - this should be seperate commit (at least). There's reason why it is like this currently - devs use 0-index and users (skinners?) use 1-index, because it seem more natural to them. I don't know what's best approach: have current \"mess\", confuse devs with 1-indexed or confuse skinners with 0-indexed? In any case: all methods should be documented (doxygen) if param value is ambiguous.\nSaving setting: it wasn't suggestion - I just pointed it in case You just use mighty c&p. IMO value should be saved only if set in settings (but this is just because I don't really understand why we need 3 weather locations in media center, so You can just ignore my comments about it).\n. if You will squash commits into one with proper commit summary in message I think it's ready to get in\n. please extend commit message a little bit (add info about using 1-index, removing unused defines) \nfirst commit line is ok, just do \"git commit --amend\" and add more detailed info in next lines, save it and do forced pushed\n. If I understand it correctly these settings shouldn't be changed a lot - ideally it would be set just once (like xbmc language) so using full lang list is justified.\nThere should be also way to set audio language to \"original\" and/or just disable this feature. If same language is set as preffered for audio and subtitles there should be way to mark subtitles as fallback (not everyone want to hear english audio and read english subtitles simultaneously)\n. @joelmeans\nI'll try to explain fallback  it with scenario: user is from france, he would like to either have french audio or french subtitles but not both at the same time. If french audio is available - just pick french audio stream (no subtitles), if not try to pick french subtitles. \nI don't want to clutter settings even more - but we can't justify adding too few settings (and not being able to fully configure feature) just to keep settings simple. Personally I don't want to use preffered audio language (I want to use default/original audio language) and in current shape I can't do this (except for selecting language that won't likely be used as audio language)\nPS. Seems like something messed up Your commits\n. when You pushed clean master to Your langcodes remote branch, github thought this pull request was merged (see comment above). You will have to open new pull request.\n. Eventually differentating between window and dialog might be done on WindowManager level and then window instances don't need to know/care if they are dialogs or windows if we handle showing/closing/autoclosing etc from WindowManager - swapping GUIDialog with some struct aggregating window and some dialog specific members (autoclose timing, ismodal, etc). Not sure if it's actually worth that extra effort to shuffle this functionality like that.\nI wanted to keep arg order in AppMessanger::Close same like in GUIWindow::Close to avoid silly mistakes in passing params, but I'll change that if You think it will be better.\nI'm not sure what You mean with m_runningModal - m_bRunning is used in both modal and non-modal to avoid executing not needed Close() actions if window isn't actually running. \n. renamed m_bRunning to m_active and swapped param order in CApplicationMessanger::Close()\nfor me it's ready to go in, but I'll wait for Your approval / further comments\n. yup: https://github.com/xbmc/xbmc/commit/5784a40c0b0e6ddb6f8392192d347a720da7ddab#xbmc/guilib/GUIDialog.cpp\n. there are some weird leftovers from my previous attempts I thought I got rid of (propably not pushed changes from my other box), will remove it later to keep comments\n\nYou're now changing these to a new coordinate system where 0, current_time, 1 map to new_start, 0, 1 for some value of new_start. It's a linear transformation so new_t = a+b*old_t, and using the map we know:\n0 = a + b_current_time\n1 = a + b_1\nwhich gives b = 1/(1-current_time), a = -current_time/(1-current_time), and hence:\nnew_start = current_time/(current_time - 1).\nNote that you don't need to worry about what value the tweener returns with this. Combining it with the fact that the tweener can take in start and end values and a total time to do the tween over should allow the code to be simplified somewhat?\n\nclass LinearTweener : public Tweener\n{\npublic:\n  virtual float Tween(float time, float start, float change, float duration)\n  {\n    return change * time / duration + start;\n  }\n};\nI think I still need to care about value return by tween to ensure that my stretched tweener goes from [0,0] to [1,1]? Just do it differently - that is pass (change = 1 - Fs) and (start = -Fs) to tweener (Fs from here http://dl.dropbox.com/u/28792047/xbmc/scroll_tweening.png)? I propably got something wrong tbh, my math is rusty\n. I'm trying to make sure that Fs != 1 so that shouldn't be big issue ( see https://github.com/pieh/xbmc/commit/2fae99749f3c2e8f07c39d00e83818df808c6d5f#L2R766 added line 766 - propably not best way)\nI'll update PR after weekend as I'm going on short holidays today and have no time for more coding\n. This is mainly cleaning update:\nChanges:\n1. made value member private, added public getter and setter\n2. setDelta changed to ScrollTo(float endPos)\n3. added IsScrolling, IsScrollingUp, IsScrollingDown bool methods\nNotes:\n1. Couldn't simply get rid of CStopWatch because it was used by gesture handling aswell\n2. Stretching part is unchanged as for now - I was trying to take proposed approach with transformed timeline but it ended up in more code scattered in different methods (will take another attempt later)\n3. I'll prepare alternative commit for tween splitting based on ease type tomorrow.\n   I think I had something like this in my very first attempt (i was always reseting tween to 0) - it didn't look so good when I triggered new scroll while other was already running - there was really visible transition between old and new one (at least with some tweener I used there)\n. I just did some quick and dirty tests, it looks good and calculation isn't as complex as my current - that transition is visible only if scroll duration is set to ridiculously high value (I doubt sane skinner would want single scroll to last more than 2 seconds)\nSo each Tweener should have method to return point where it has max velocity (in this case I would just make some tests to run tweeners with step set to 0.001 to retrieve point of max velocity - I don't really want to calc derivates for all tweeners) ? Or just generalize it and check easing type (if ease_in assume max_velocity at t=0.5 else at t=0)? I don't want to do another overkill for this.\n. I was tinkering around more cleaning in stretching and whatever I do I end up with more or less same code (one good thing I got better view at it now)\nmax_velocity actually doesn't change calculation - we still need to transform timeline and scale y-axis, so at this point using it feels like unnecessary limitation IMO. I'm thinking now about adding \nand adding static list with proper value candidates for each tweener (local maxima of derivative from tweener formula)\n. You are right, but we still need to do same calcalution, just instead of \"resume point\" from range <0,1> we get \"resume point\" from set {0, 0.5}. \nright, one less tween calculation if we assume that Tween(resumePoint) == resumePoint, but if resumePoint == 0.5 we still need to transform timeline:\nfor resumePoint = 0.5: tween_t = 0.5 * t + 0.5\ngeneral formula:       tween_t = (1 - resumePoint) * t + resumePoint )\nand y-axis value:\nfor resumePointValue = 0.5: stretched_tween_value = (Tween(tween_t) - 0.5) / 0.5\ngeneral formula:            stretched_tween_value = (Tween(tween_t) - resumePointValue) / (1 - resumePointValue)\nI just wanted to say that this idea doesn't change that much as for calculation, but You're right - at least for start this will need to suffice\ncrap, I need cure for chasing overkills :S\n. updated, only 9b87c06 and 0edc651 are different from last update\n. if ':' isn't found in param then old behaviour is used (so it still read param as minutes)\nyeah, I was submiting patch to trac earlier (#10613) mentioned that in PR description\n. ronie, I remember You requested to be able to run at certain time (eg. 18:00 / 6:00pm or something like that), if You think this have any usecase let me know - I'll try to add it, but this will have to wait till monday (going out of town)\nAs for naming I will use whatever You think is better - my naming skills ... well I won't finish it ;)\n. 1st would be propably better handled by python script/service (can be configured, etc)\n2rd and 3rd can be done via AlarmClock with loop/repeat\nI just don't think it has some usecase typicly for skins - I don't really mind adding it\n. Check what Jezz_X came up with in http://forum.xbmc.org/showthread.php?t=77832&page=2 post 14 - I'm not really attached to this PR so if You think that just specyfing  without grouplist will suffice I'll prepare simplier solution.\n. About that 1 new background image that would replace old ones - with this PR central background can already do that. If we stretch grouplist by X pixels then central background will stretch by X pixels too (like edges of grouplist and background are anchored)\nAs for depracation - is there any #define to mark \"depracated code\" so it's easier to keep track of it?\nSecond thought on limiting size - if context menu is too big than problem here is amount of buttons in context menu rather than lack of scrolling - I think I'll drop that (at least for now)\n. removed size limiting\nadded PRE_SKIN_VERSION_11_COMPATIBILITY\ndeprecated top, bottom background images\ndeprecated also old method (lack of grouplist)\ndid skin work on confluence to use single background and grouplist\n. this is just starting point - currently there is no way to pass percentage value to progress control from listitem, next step will be to prepare code, so listitem could provide percentage value - dushmaniac wrote something about it on p8 blog (http://blog.pulse-eight.com/2011/08/01/xbmc-pvr-update/)\n--edit\nalso I must admit I now see point in providing percentage value as string - point taken\n. With 1-100 representation skinner can use few IntegerGreaterThan conditions to provide icons like http://i52.tinypic.com/2nb8vhc.png (image found on google - don't mind text on it). I've used timestring mainly to test it (http://dl.dropbox.com/u/28792047/xbmc/screenshot034.png) - I have no problem with changing it if this won't be used.\nSo candidates here are:\n1. ListItem.ResumePoint (1-100 value as string)\n2. ListItem.ResumePoint (timestring)\n3. ListItem.HasResumePoint (boolean condition)\nDon't want to make mess in infolabels and add more than 1 and - I think nr 1 is best? (SubString(ListItem.ResumePoint,) can be used to check if resumable)\n. yea, topfs2 I know (even posted same link above ;P) - I think it can be made in cleaner way (especially if it seems that there could be more than 1 progress infolabel for item - PercentPlayed and Epg.Progress - tho those might be merged to one as they serve similiar purpose)\n. change: now expose only bool condition ListItem.IsResumable\nsupport for progress control will be added later (when me or dushmaniac will add proper support for progress control and listitem)\n. see comments in original pull request: https://github.com/xbmc/xbmc/pull/140 - general point is item can be bo both already watched and in progress so can't really use ListItem.Overlay here\nTo save creating seperate controls just for this I'm planning to implement skin variables - when I will have time I'll bump topic on forum to gather some info/feedback from skinners\n. Updated PR to allow using percent value in progress controls and in IntegerGreaterThan (we will need tell skinners to update their conditions if they use InregerGreaterThan(Player.Volume,xxx) as instead of range -60 to 0 it will be 0 to 100)\nHere's some proof of concept shot (of course not part of this PR):\nprogress control: http://dl.dropbox.com/u/28792047/xbmc/screenshot037.png\nfew integer greater than + images: http://dl.dropbox.com/u/28792047/xbmc/screenshot038.png\n. Added check ( totalTimeInSeconds > 0) and some doxy.\nI wonder if it's worth changing GetInt (and companion) sygnature to bool GetInt(int &value, [rest of params]) (as seperate PR). Currently this will work as slider and progress control clamp value of getint to 0-100 range but maybe we could getaway without unnecessary validation there?\nAlso what I was wondering if we could change GetInt to GetFloat? We are casting most of values there from float to int anyway and then we cast again int->float in progress control.\n. @jmarshallnz\ndoes it look fine or it need more changes?\n. just added commit with changes You suggested (didn't want to delete comments yet).\nProperly rebased version in https://github.com/pieh/xbmc/branches/conditional_onX_tmp\n. With some more additions this could be used as selector of addons on confluence home screen. Propably this would need ability to retrieve listing into containers (which I think is planned to be added in (far) future?). Apart from this and amet idea I don't think that there are actually any more usecases, but I think amet's addon alone justify adding it. Ability to execute scripts on xbmc events (that user can easily customise via addon settings in GUI) IMO is great addition to xbmc. Fact that we won't need have it in core is big plus IMO.\nDuring coding it I thought about adding ListItem.IsSelected flag (to indicate tick icons here and possibly show \"play\" icon in playlist windows)\nAlso I think that DialogSelect itself might be used to customise library layout in GUI (select what nodes user want to have) in Your library_from_xml branch?\n. forgot to \"annouce\" I updated DialogSelect to make use of CFileItemList \n. dropped checking m_iSelected when DialogSelect is active (it's set on DEINIT) and used CStdStringArray to pass addon IDs\n. @jmarshallnz\ndoes it look fine or it need more changes?\n. I think we can close it and never get back to it as we all feel same way about it.\n. Whatever You want to run You should be able to do it with builtins + infolabels. If there is something missing file a feature request. Mixing .xml and python is bad design, You really should/want to have these seperated.\nAnd for the record - I'm voting on not readding it aswell - PR was done mostly to discuss re-adding it.\n. Right, that wipe of settings is something I can't really track (i can only guess it can be something related to case (in)sensitivity of names of skin.strings). Will try to get more on that.\nThis shouldn't enable addon setting dialog but I guess my hack caused this. Will need different hack then I think.\n. I've missed that CStdString::Equal() by default is case insensitive. But still dharma tend to lower case of setting names when saving to xml while master preserve casing used in skin.\nShould we make addon settings case insenstive or should we change skin.string to be case sensitive?\n. It actually allow using addon settings dialog (after I changed this hack that caused ronie's crashes). I will try to move confluence setting to it to test its functionality soon.\n. There are still things that need to be decided:\n- case sensitive (addon settings keys) vs case insensitive (skin settings keys) - which one do we change?\n- language strings.xml will need to be load from different location than in rest of addons - we would like move it to resources/ aswell?\n- what we need to change in addon setting dialog:\n  - ability to use boolean conditions (currently visible/enable in settings are based just on values of other settings)\n  - ability to set addons (on its way)\n  - ability to display image/multiimage selected in setting (for backdrop selectors)\nThat's what I can think of\n. Updates:\n- Allow setting/getting settings with \"case insensitive\" key\n- Simply disable addon settings dialog for skins (override HasSettings)\n- Marked backward comp code that can be removed after eden\n. Removed superfluous bool settings map and made setting map keys case insensitive.\n. @jmarshallnz \nI rebased and did small fixes. Would appreciate review when You have time and will ;)\n. @nuka1195 \nI have already done some work on allowing boolean conditions in addon settings (just local changes as I didn't have time lately to get my PRs into proper shape). I'll definitely would like to see Your work (with JM comments if possible ;P)\n. I think that our current search handling leaves a lot to be desired (inconsistency between music and video search + having it as method in video/music window), but I don't mind using it till we get better solution.\nIn long term I was thinking about adding Search method to IDirectory and implementing it in valid directory types (f.e. CDirectoryNodeTitleMovies, CDirectoryNodeTitleTvShows). This will allow to hook search functionality fairly simply to anything (f.e. plugins (youtube), playlists, pvr channels) and will provide reasonably sane seperation of concerns - our future-search-util would just handle passing search phrase to vfs and wait for results (no need to know about how search of each directory is done). For better performance it could start searches as jobs (f.e. videodb searches grouped in 1 job, each plugin that implement search as seperate job, etc).\n. Skin.SetAddon accept addon type as second param - skin uses skin.setaddon(skin_string_id,xbmc.addon.video) to chose from list (xbmc.addon.video is virtual addon type - plugin with video content). I would just use xbmc.python.pluginsource, but scripts are seperate group in addon db and aren't fetched when I want to retrieve pluginsources.\n. I propably abused this virtual type too much - I will check what's needed for proposed solution\n. here's alternative solution - allowing browsing multiple addon types\nhttps://github.com/pieh/xbmc/compare/7da80cf8f3f0311feace036fb56c7fdb1ab32cf8...746afe586ddae035dbf67636a669edb023ea4a3d (cosmetics in seperate commit outside of compare range)\n. This may look like overkill now, but I have pending PR that allow setting background control for any control. Background control will get size and position (+ border area if specified) of master control and it will need this aswell (background control will need to be rendered before master control, but it should processed after).\n. d-r related split of processing and rendering did it\n. Direct reason why it's not updating is that ::Render() reset m_invalid (or what its called) flag. I didn't try to fix just this because having possible 1 frame de-sync between 2 controls depending on order of controls definition in .xml seemed bad to me. \nRe: background thingie\nAdding auto-sizing to button will just solve one case - labels, what about background for grouplist or textareas? I will do whatever You think is right. Just making sure that decision is thought through.\n. > Right - that makes sense. Really m_bInvalidated shouldn't be reset at all in Render(), though I fear that may introduce more issues - will need a thorough testing but it's definitely the correct thing to do.\nThis seems like leftover from pre d-r code ( https://github.com/xbmc/xbmc/commit/bc0f832b2a5adf2c0280b01f929e8c335b76bb4c ). Changing Render() to not reset m_bInvalidated will propably do work for now. I will just go this way - but I think it would be good to solve that 1 frame delay at some point in future.\nI think that with our GUI style (controls often overlaping each other) using layouts may become more complicated than just going one level lower and let skinners to operate on direct values of position/size properties. I will however do some research - android layouts framework might be good starting point to get some ideas.\n. pushed \"quick fix\" 636746ba7e1be4146b5618cd10740251b744fb86 and for now I close it - maybe I will re-evaluate idea later if it will be needed\n. it fixes build\n. updated, got rid of all pointers\n. updated with storing viewport and transformation matrices for DX, GL (tested) and untested GL ES\n. as I don't have GL ES hardware:\nI add dirty way to easy test if this is working: https://github.com/pieh/xbmc/commit/ae68cbc3d792e2e5d7fea589036add6807032640.diff (need to turn on true - it will show just subset of dirty region rects - only those controls that have changed render region - like in youtube vids from PR description)\nand diff for this PR: https://github.com/pieh/xbmc/commit/72e25853876010acb0fd84ef1a0ba680ba48bccb.diff\n--edited: updated PR diff\n. @jmarshallnz, @Memphiz, @davilla, @topfs2, @CrystalP\nas a bugfix I think this qualifies to be merged before eden if changes looks good for You?\nI tested it on windows (both dx and gl) and ubuntu, Memphiz tested it some time ago on ios\n. As I already said on irc, I think idea itself is pretty neat if expanded a little (layouts auto-sizing to their visible content for given item).\nWithout much researching - this would need changing all calculations involving pre-calculated amount of items visible per page (m_itemsPerPage) - so amount of pages (scrollbars), scrolling distances. Propably changing mouse event handling.\n@JezzX, @ronie, @jmarshallnz\nWhat do You think about usability of such feature? To get what malard is after: allowing button controls to be auto-sized + using grouplist would work (a lot easier to do).\n. I think we need to unload those includes as we do with localizations and textures after window deinit?\n. @jmarshallnz:\nUpdated PR - now I create skin_var_name->xml map in GUIIncludes and create skin variable objects of it on demand.\n. If we don't want to create yet another global to just store skin variable xml we still will need to have skin->includes->create new skin var.\nIn last commit I did small code shuffling (to hide that little circle I make from infomanager to infomanager - we have to do it anyway with this \"lazy\" skin var creation) and changed that chain to pass skin var object instead of integer. (if this looks better I will clean it as much as possible and rebase it later)\n. I ran some tests with scissors - noticed that this approach reveal another issue - we don't clear areas outside of scissors and when I change overscan in calibration window I can see \"flickering garbage\" left from previous renders - as our scissors is getting smaller - everything that is outside of this rect stays on screen and flickering is caused by multiple buffers used by d-r (??) - http://dl.dropbox.com/u/28792047/xbmc/screenshot050.png. Propably solution is simple but I didn't have time yet to study and understand how d-r exactly works on render level - would welcome any hints here :)\n. I need better approach - closing for now\n. @HitcherUK\nLoading bar as in progress control? From user perspective - hopefully we won't see too much notifications there (database can update only when we install new version of xbmc) so there's not much point in pimping it too much if goal (notifying user about time-consuming operation) is achieved.\n. @davilla\nI know, skin isn't loaded when we show splash but we don't use anything from skin here. Or this is not what You meant?\nI'm not really attached to this - I was asked to prepare something that will allow displaying text notification before xbmc is fully ready to use and this is my first attempt. So we should decide a) if we want to have such functionality b) if yes, how this should be done.\n. changed: pass resolution_info when creating GUIFont\nSplash is created after g_Windowing.InitRenderSystem(), so if renderer isn't ready at this point then we have some issues there I think? Localized strings are also loaded earlier.\nI'll merge it tomorrow if there won't be any comments against it.\n. From what I understand this should set up window and renderer: https://github.com/xbmc/xbmc/blob/master/xbmc/Application.cpp#L702-728 (seems like g_graphicsContext.SetVideoResolution is \"fixing\" that window that is created for APPLE). All splash operations will be done after this (we will display splash notification only if splash object is already created) so if there is problem with this then we should see it already and this patch shouldn't cause any new issues.\n. @jmarshallnz \nI did cleanups You pointed earlier. Couldn't really split last commit into 2 because it would break execution of non-navigation actions in  in intermediate revision.\n. Resurrection of another stalled pr. Is it in good shape to be merged in August? xbmc.gui bump would propably should go in at the end of merge window?\n. Tested with script from amet, seems to be working fine. One thing I think we need to add (once script will be in repo) is changing default weather addon (obviously) and fallback to that default addon if currently selected weather addon is not available so transition from weather.xbmc.builtin to new one will be transparent for users - quick diff here: https://gist.github.com/b54c5df1423d2cc15b74#file_gistfile1.diff\n. it behaves like this because when we enter tv show we pass path \"videodb://2/2/1/\" (say our tvshow has id=1). vfs set items label (our FolderName) as localized name for given path (which will be tv show title now). Now in https://github.com/xbmc/xbmc/blob/master/xbmc/filesystem/VideoDatabaseDirectory/DirectoryNodeSeasons.cpp#L89 we add \"-1\" to path and this is all good because we need path to represent episodes so we can setup sorting, views and what not. Problem is that we use path of our last m_vecItems when we init window (there are other things that can trigger - so that's why we re-enter video nav our strDirectory will be \"videodb://2/2/1/-1/\" (and FolderName will be \"*all seasons\").\nRe-entering window is not only thing that can trigger this - f.e. GUI_MSG_UPDATE will do the same.\n. I understand why it behaves like that. \nI think that this fix probably is unacceptable but direction is right - store requested path (strDirectory) instead of path given (possibly redirected as in flatten tvshows) by vfs (f.e. create dedicated member to store last strDirectory or use path on top/bottom of nav history vector - this way fetch items using same CDirectoreNode type)\nI thought of adding \"/-2\" solution earlier but:\n- it's easy to miss places in code where we handle paths (= replace this bug with different bug)\n- flattened tvshow might not be only node that show this issue\n. Still not entirely sold on -2 idea but slowly getting there. I'll keep this PR open just to have place to discuss it until I will prepare new one (-2 way).\n. if -1 return tvshow name then user would be twice in \"same folder\" (if show wasn't flattened and user manually selected \"all seasons\")\n-2 way: https://github.com/xbmc/xbmc/pull/625\nI'll close this pr as this won't be pulled anyway :)\n. In episode list we can refresh just single episode so that's not the problem. I will be trying to fix it properly soon (I'm abroad for few more days. I should be back on wednesday). I'd rather not merge this fix if I can come up with proper fix before eden. \n. We already do option 2. ( https://github.com/xbmc/xbmc/blob/master/xbmc/guilib/GUIBaseContainer.cpp#L434 and same in Panel container)\nThis has potential of breaking skins, so I'd wait for eden release before pulling it.\n. As I don't have to hurry now with this - I'd like to do it right with proper cleanup in static items code.\n@jmarshallnz: Do You have any thoughts on how this should be done? (I didn't think about it yet, just wanted to ask in case You have idea how to do it before I start working on it)\n. Now that I almost finished my exam session I got back to my overdue PRs ;)\nBeen thinking about m_lastItem. How about making it smart pointer instead of normal pointer - then we wouldn't have to worry if pointer is valid (we derefence it just to get focused subitem in focusedlayout) and we wouldn't have to track it when updating items - one think less to do = cleaner/easier code I think?\nAnd the other one - how smart setting new items for wraplist (containers without extraitems doesn't need anything special) need to be? I can do method that will go through old_items and new_items vector, compare them and reshuffle old_items (swap/ remove/add items) so only not needed extra items are removed/added, and rest are just repositioned. This way we won't break any ongoing animations on extraitems. Just wonder if this isn't overkill and we should just stay with reseting extraitems and re-creating them (this will break on-going animations on extraitems when we add/remove item)\n. @jmarshallnz \nforgot to bump after another update (completely forgot that I had this PR still pending)\nusing share_ptr for lastItem allow us to not track it in ::UpdateVisibility() - it makes sure that lastItem is safe to derefence - even if lastItem won't be part of m_items it's still valid to query it for focused subItem (that's only place when we actually dereference it, other than that we just compare it to know if we need to start focus animation)\n. this is issue only with mysql (sqlite will just backslash if it doesn't have anything to escape)\n. right, proper PR - https://github.com/xbmc/xbmc/pull/804\n. So set path to f.e. \"path_to_file.ext?startOffset=XXX\" and when we start playback strip off additional params and read startOffset? Wasn't yet looking at code at all, just wondering what needs to be done.\n. @cptspiff \nI started doing it this way (https://gist.github.com/c99dfbbc15df4e7456b9) but as I didn't have neither handy cue stuff nor more time to spend on it I don't know if it's actually working or where I would need to make more changes (hints always welcomed). This is yet another postponed work from me waiting for my \"free time and will\"... TBH after pike's complains about cue \"shit\", I'm affraid to dl any samples and play with them ;)\n. This is aproach of setting dedicated \"item_start\" property to differentiate items (well, songs now as we don't support videos) in single file, seems to be working fine (as in no regressions for #840). Tested with \"1 large audio file album + 1 .cue with indexes\" both from file mode and from library.\n. updated commits\nas this was month ago - here are old commits with our comments:\n1. https://github.com/pieh/xbmc/commit/8bf5ca43b763a1f23de7313759fa2e30023de75a\n2. https://github.com/pieh/xbmc/commit/2c2ff0dd64cda7f27bd2228f4e1edb9cc81bcce6\n. Update:\n- fetching resume point for files is done in single query together with playcount for entire listing in LoadVideoInfo as suggested in DB optims PR\n- added fix for weird inconsistency: when we resume video and seek to very beginning of the video and immediately stop playback - then we don't remove/update resume bookmark from database, but we update resumePoint (timeInSeconds == 0.0f) in gui item which will remove IsResumable flag\nTogether with this commit https://github.com/Montellese/xbmc/commit/334ede83fed51f0192a82c8054171ff0a39f11fb we possibly could drop fetching resume point from thumbloader?\n. m_enabledDiffuseColor seems not really needed? Already existing m_diffuseColor can store enabled diffuse color - no need to have 3 members to store 2 values.\nAlso - can't we just do that already using $VAR stuff?\n. what if we could use control.isenabled (without id would mean control where it is used)?\n. yes, please\n. In SystemInfo window we defined that there are 10 labels (ids 2 to 11) that we can set text on (http://wiki.xbmc.org/index.php?title=XBMC_Skinning_Manual#SettingsSystemInfo.xml). It's up to skin to display them properly (making all 10 visible at once or allow scrolling). \nIn \"worst\" case scenario You already have 10 labels filled and there is simply no room for PCM/Analog - we would need to bump label limit or change the way we display info (f.e. switch 10 labels to single (auto)scrollable textbox). Or maybe just join format lines to single line: \"Supported formats: xxx, yyy, zzz\" and avoid hitting that problem :).\n@jmarshallnz, @JezzX, @ronie\nBy adding Audio tab we force skinners to update their skins anyway so nothing stops us from doing something more here. Single TextBox (with backward-compat for 10 labels ofcourse) seems like easiest solution here. What do You think?\n. updated commit with change\n!items.IsPlugin()\n. Could we also add some flags to item lists like \"has already fetched metadata\" and \"has already fetched resume point\" (or single flag after commit that joins bookmark table to movie/episode/musicvideo views)?\nI would certainly use these flags to determine if we can return or need to fetch metadata and playcount here (the \"if clause\" on L364 is to determine if we already queried database): https://github.com/pieh/xbmc/commit/0f63058c5e4d08aa7174f654cc93d366a840393f#L0L364\nI could also make retrieving resume points for files mode smarter (it's not actually working in master - just in my branch). Instead of checking and quering every item as now in thumbloader, i could do single query for files+bookmarks for pathId of directory item list is representing.\nI'll supply patch if that would be ok\n. well, then current solution should be wrong too becouse line i'm replacing is doing exactly the same (what I'm adding is just doing it also when we don't have progressBar set) - see https://github.com/xbmc/xbmc/blob/master/xbmc/dialogs/GUIDialogProgress.cpp#L97\n--edit:\njust as bonus: here's backtrace of deadlock: http://pastebin.com/t889JHQN (in this case it seems I'm editing code that runs through GUI thread - which might not always be the case as You pointed)\n. @nuka1195 \nThis involves adding python bindings which is not something I know much about ... and this wouldn't really fix this problem.\nI believe main problem here is that we should run renderloop just as main application loop. So IMO proper fix would be getting completely rid of CGUIWindowManager::ProcessRenderLoop and instead of current approach - queue background jobs (for time-consuming tasks) / specify callbacks (for dialogs DoModal()) to not block GUI thread (easy to say, heh)\n. Did some more checks and it seems that g_windowManager.ProcessRenderLoop(false); will only do anything if g_application.IsCurrentThread() is true so it seems safe to use in non-gui threads.\nOf course this doesn't look nice so I was just thinking if we could add some kind of callback to IDirectory and then concrete implementations could annouce progress via this callback:\nin CPluginDirectory::GetDirectory (or any other implementation) we could do something like:\n\nm_callback->setProgressInfo(true); // this would cause using progress dialog instead of busy dialog in off-thread getdirectory\nm_callback->setHeading(my_plugin_name); \nm_callback->updateProgress(progress, some_string_info_about_progress);\n\nif (m_callback->abortRequested()) // if user cancels we could smartly stop getting directory (if possible that is)\n\nalso, maybe this could allow plugins to provide their own progress info (with more work on python side I guess)\n. Actually that doesn't fix this issue - we are blocking gui thread while in loop in CPluginDirectory::WaitOnScriptResult() and script can't finish because it need to progress dialog to close (which can't be done because we aren't processing render loop). I will reopen PR when I'll have nicer fix.\n. I don't know what setResolvedURL does so can't answer that.\nThis happens when we run CPluginDirectory::WaitOnScriptResult() in app thread (so when we want to run plugin items marked as playable). Look here: https://github.com/XBMC-Addons/plugin.video.the.trailers/blob/master/addon.py#L243 there is called xbmcgui.DialogProgress, but problem is we aren't really running renderloop now, and because of that pDialog.close() will never return (we need renderloop running for that). xbmc.sleep(500) workarounds this by waiting for progress dialog from CPluginDirectory::WaitOnScriptResult to show up (and we start running renderloop there: progressBar->Progress(); ) and then addon \"takes over\" that dialog and overwrirte dialog labels and progress bar with own data.\nIMO proper way would be:\n1. Get totally rid of progress bar in CPluginDirectory::WaitOnScriptResult and move calling addon to background thread (similliar like off thread GetDirectory is done). \n2. Don't use xbmcgui module in xbmc plugins and provide methods to provide progress feedback, get input from user via xbmcplugin module. This wouldn't be needed after 1. to fix this issue, but if/when we will support serving plugins via UPnP this will be needed, so remote client wouldn't cause showing dialogs on xbmc instance acting as upnp server (this can propably be easy produced now with calling GetDirectory / PlayMedia to plugin path that will use xbmcgui from json rpc).\n. Didn't notice there was need for some GUI love here - I can help with that (I think I would reuse existing windows/dialog to avoid additional work for skinners). IMO if this need MAC address to be manually entered than GUI setting is not right place for it. I think that if we would have MAC autodiscovery (generic interface and implementaiton for at least 1 platform) we could start doing GUI for this (I don't think that many users will know what MAC address is).\n. We need to discuss how gui for this should work. If we are to have it in gui I thnk auto-discovery is must. I already did code for win32 mac discovery (mostly copied from example in http://msdn.microsoft.com/en-us/library/windows/desktop/aa366358(v=vs.85).aspx) and moved wakeup entries from advancedsettings to settings and added saving to xml - will be pushing it my repo when I clean it up.\nWe had small discussion how this should look in gui and more or less figured out that we should autodiscover mac when adding source. There is catch obviously - we don't want this feature enabled for every network share:\n- server could be wifi connected - WoL won't work\n- server might not support WoL (doubtful) or not have WoL enabled\n- user might simply not want this feature\nSo possible way out is adding \"try to wake up server\" toggle to add/edit source dialog (along with short text description when it will actually work). Is this acceptable?\n. Obviously wakeup entry would need to be linked to host and not source - in that dialog we would try path substitution and then get host - so if we have 2 source from same host and change toggle in 1st, it would automaticly \"change\" toggle in 2nd too.\nMysql could have additional entry in av.xml (<trytowakeup [macaddress=\"auto\"]>yes</trytowakeup>). Or just keep it as now - in av.xml since mysql is also av.xml only setting.\nYou can use use WINDOW_DIALOG_PROGRESS with disabled progress bar instead of WINDOW_DIALOG_BUSY - it has slots for heading and 3 lines of text. Search code to see how to use it.\nI don't want to block idea here, but typing mac address, timeout, etc manually in xbmc gui is not the way IMO. Person who know what mac address is will most likely prefer to edit .xml in text editor (where he can actually paste stuff) as bobo1on1 said. Person who doesn't know will only get confused seeing this \"weird\" fields he needs to fill. I can change my mind but I would need some reasons to do it.\nCould You draw/sketch dialog You would see for it? Perhaps I wrongly see what would You like to have.\n. @t4-ravenbird\n\nIs it possible to have it like that and then let the code behind that GUI manipulate the entries in as.xml?\n\nWe don't write to as.xml but I already moved it from there, so we can read from and save to guisettings.xml - given that it doesn't really belong there I think creating seperate .xml (woa_settings.xml) for this alone would be OKish - I will handle that\n\nMy concern is that the settings for WOA should not be scattered with some under sources with GUI and then some under as.xml - that seems messy?\n\nRight, we could just add notice to wiki that one could use WOA feature to wake mysql server and link to WOA speciffic page.\n@da-anda \nPoint is to not need to do it manually at all, let xbmc auto-discover mac and hide all the magic from him (apart from toggle to enable/disable it). For me this is pretty much like discussion about having mysql db settings in gui - here we can say it's easier to do it from gui without editing .xml too but gui settings shouldn't have such advanced stuff IMO.\n. This is how (more or less) I would see this feature in gui:\nhttps://dl.dropbox.com/u/28792047/xbmc/screenshot004.png (local path - toggle greyed out)\nhttps://dl.dropbox.com/u/28792047/xbmc/screenshot005.png (network path, discover mac after enabling toggle)\nhttps://dl.dropbox.com/u/28792047/xbmc/screenshot006.png (network path, disovery failed - i don't have \"lol\" host in my network)\nThoughts?\n. now I wonder if single toggle in add/edit source is good idea given that we can add source that could contain multiple paths:  f.e. smb://host1/share and smb://host2/another_share_from_different_server - that toggle would need to be for each path there and this would be ugly\n. Problem is we need to wait few secs after sending wol. There are scenarios where sending wol it's not gonna get server up and waiting here is waste of time:\n- server could be wifi connected - WoL won't work\n- server might not support WoL (doubtful) or not have WoL enabled\n. > Either way we can't ping the server so does it matter?\nIt's senseless to try to wake up server and wait couple of seconds for server that user know for sure that it can't be woken up. Ping doesn't matter here as server will not go online anyway and we will just wait (with busy dialog spinning) for few secs before \"wait for server to wake up\" time passes.\n. As a user I would prefer not to wait and just get quickest \"can't connect\" message possible. I actually didn't think of it as \"not a problem\" situation. This makes things so much easier.\n. @t4-ravenbird \nNothing is set in stone - we can still throw and evaluate ideas.\nNow I'm thinking about about global toggle to turn feature on/off + dialog with list of all hosts (sources + mysql if set) that each could be enabled/disabled. Wake on lan for all host would automaticly be enabled (if we managed to auto-discover mac). If after X tries we never managed to wake server up it would automaticly disable waking for given host (need to implement ping). \nTimeouts and such could be finetunned by hand in wake_on_access.xml (if that's what we choose to store stuff).\n. @t4-ravenbird \nyou might like to take a look at my wip branch (this is all stuff dumped into 1 commit): https://github.com/pieh/xbmc/commit/61f12230821ed95b4987a083593708015f66d566 it includes mac auto-discover + pinging (windows only now)\nWon't write much - here's preview of result http://www.youtube.com/watch?v=C2JB99mcPFM&feature=youtu.be\nAdded single toggle in settings, that when turned on would try to discover MAC of all hosts from shares + mysql.\nMAC also would be discovered when we add/edit source. Rest is configured via wakeonlan.xml in userdata (it will auto-created/edited when we discover any MAC)\n. @jmarshallnz \nHere https://github.com/xbmc/xbmc/blob/master/xbmc/guilib/GUIListGroup.cpp#L140 we can set focus to not focusable controls (f.e. GUIImage). I could put check there instead but this seemed more futureproof as we could hit same problem elsewhere. \n@theuni\nYeah, this was another issue I wanted to solve - see PR description for my idea of solving it (essentialy same as yours, just adding ability to define more than one \"default\" control)\n. @jmarshallnz: I started to wonder about that just after I commented. I needed that for my actual fix (seconds commit), because I check if control has focus and if it can has it - if it can't then I fallback to default control. And image inside container having focus (which it shouldn't be able to have) would constantly trigger my code. Propably I should exclude controls inside container from this instead - just would need to check if const CGUIListItem *item (passed as arg to CGUIControl::UpdateVisibility) is NULL, right? Will play little more with it.\n. I'm little confused now. I'm checking every control in its CGUIControl::UpdateVisibility() method so it will \"catch\" controls in lists too. There is alternative of getting focused control by its id every frame or storing pointer to focused control on CGUIWindow level and doing proper check only on this control (which, based on comments, I guess You thought I actually do in this PR?). \n. Yea, that's propably better way - didn't use it at first because currently it seems like CGUIControlGroup::GetFocusedControl() isn't really efficent:\n- not trying fast lookup for m_focusedControl\n- HasFocus() used on group could possibly traverse all the way down to focused control just to say that group has focus and then search in that group (even tho we actually already found focused control)\nWill update PR (with some CGUIControlGroup::GetFocusedControl() optims) tomorrow, after coffee ;)\n. Updated.\nOnly first commit is actual fix (for now sticked it in already overriden CGUIWindow::DoProcess to avoid rebuilding half of code - should it sit elsewhere?). Other two are meant to improve CGUIControlGroup::GetFocusedControl() performance.\nI hope You don't mind that I stick not directly related commits here - I just think that github is best/easiest place to comment on code\n. Added seperate commit for unsetting m_focusedControl (and setting it if we find control while traversing and not using lookup) as it touches more places due to need to remove method constness.\nI have next idea to auto-assign ids to all (or at least focusable) controls if skinner doesn't do it, so that we can use lookup instead of traversing in those cases. I would reserve some ids range for this purpose. Worth pursuing? Or just merge as-is and maybe do follow up PR?\n. ok, so just remove last commit (one that remove const-ness) and merge?\n. This code only add Skin.AspectRatio, I only mentioned Window.AspectRatio in case we want to discuss what fits better.\n. What's missing? Here I have only Skin.AspectRatio infolabel. I have Window.AspectRatio in seperate branch: https://github.com/pieh/xbmc/commit/69206669c8de1f59c91601ae70dd33114f6d5317 (if that is missing)\n--edit\nhmm, You're right, something got lost\n. 2nd commit was missing Skin.h/cpp changes - now updated (for once git reflog worked for me ;) )\n. I'm not removing it ;) just try to discourage it's usage in favour of things I added here (in case it will be merged that is)\n. To make it clear: (using just horizontal stuff as example) anchor could have one value of left, center or right. Offset would define how far child's anchor point is from parent's anchor point (children left/right edge or center is \"moved\" by offset of parent left/right edge or center)? Size seems pretty straight forward.\nIf I got it right then propably with it we couldn't anchor both to left and right with some margins on both sides which would be usefull to define container size working well in different aspect ratios (like here http://i46.tinypic.com/2ppar7d.jpg). So maybe add margins too?\nAs for dynamic calculating: storing anchor, offset and size (and maybe margins) in seperate members and calculating m_posX, m_posY, m_width, m_height in CGUIControl::Process should be enough?\n. Also, for skinning I think that allowing to define positioning and sizing like I proposed in PR description should be allowed in .xml and we would translate it internally to anchors and offsets to make it easy to use, but still allow more sophisticated positioning using anchors and friends directly in .xml if needed?\n. @Jezz_X: by parent I mean \"spot\" that control is directly placed in - it could actually mean group, grouplist or window (f.e. for label in \"list\" container, parent would mean item/focusedlayout, for button in grouplist it would mean grouplist, and for fanart image control it would mean window (if it's placed directly in <controls> section of window))\nUsing <posx>$CALC[control(id).posx + control(id).width]</posx> is different approach than what we tried to discuss so far. I guess we went too far with \"how to do this\" before actually discussing \"what to do\". Now, I have no strong preference with what direction we should take (and even if I did, it's not me who will be using it). I just hope we will forge solution that isn't too much complicated and yet allow flexibility we definitely currently missing.\n\nHere's my view on it (not something I want to force here, just what's currently on my mind - possibly it will change as brainstorming will continue :) )\nI think that $CALC approach would allow most flexibility (from all propositions so far) and it actually fit the way we tend to process dynamic stuff in skins (in line with $INFO, $VAR, etc). It will allow \"simulating\" anchors, it will allow anchoring to both left and right, it will allow setting background image auto-sizing for grouplists (f.e. in contextmenudialog we have it hardcoded currently - but it could be nice if skinner could do it himself there and elsewhere: like here (options popup)  http://desmond.imageshack.us/Himg35/scaled.php?server=35&filename=screenshot018w.png&res=landing)\nGiven that $CALC would allow most flexibility, but its syntax for most common stuff might be cumbersome I think it wouldn't be hard to allow easier/faster syntax with anchors, offsets or stuff I proposed in pr description that would be internally translated to $CALC.\n. @jmarshallnz: if You don't mind at this stage I'd like to avoid discussing possible inner workings to keep Jezz_X, da-anda and whoever else might join in here - maybe we should move this discussion to forum until we agree on what we actually want to be able to do and how to do it (from skinner perspective that is).\nAnimations (controls sliding, fluid control resizing and possibly more) is also stuff I was thinking about, but didn't want to go too far, because ideas here change so quickly :)\nAs for control lookup vs just parent pointer, possibly odd behavomg stuff caused by circural dependency, etc. - I have some ideas for that, but don't want to drag it here - will wait for the moment when everyone is happy with direction we are taking (or at least if no-one oppose it, heh)\n. I think that posx examples are way too confusing (it really took me moment to understand them). And for me they miss somekind of offsetting to allow <posx>(100+width)r</posx>. Imo this <posx align=\"right\" offset=\"-100\">right</posx> is starting to look ridiculous. I would actually made it more like this <posx anchor=\"right\" [parentanchor=\"same_value_as_anchor_by_default\"]>-100</posx> (I'd think that most of the times anchor on control and anchor on parent would be actually the same so we could just allow skipping one of it in that case)\nBut this doesn't solve (or I don't see how) problem with auto-sizing that content panel in Your 4x3 vs 16x9 example. To do this we need either to anchor both left and right edges to parent's left and right edges (omitting width which would be automaticly calculated) or we need to allow calculations (which I'd prefer because this would also allow \"anchoring\" to other controls than parents) (sorry that I keep going back to same example in almost all of my comments - I started this PR almost exclusively to allow that and I don't want to end up with not making it possible)\nMargins were meant as way to allow saying \"width=100% but cut 20px from left and 50px from right\" - no other use for them I guess I think, any of above will do better than margins imo.\n. This seems like what's already in commits but in slightly different form + \"center\" attribute added (and should be dynamic not static like i've done it). It works for me.\nThis could be not in scope of our discussion, but how would You see (if at all that is) auto-sizing of background image for grouplists/labels? (this is last place where I see that calculations might be useful)\n. I wonder if we could nuke checking for resume point in thumbloader now? We do check in for playcounts/resume in CGUIWindowVideoNav::LoadVideoInfo for item list that either doesn't have content set or comes from plugin. And movie/episode/musicvideo views in db now contains resume column (was added with Montellese's db optim pr). It seems like there should be no way we reach thumbloader without checking for resume point already?\n. @alcoheca \nserving non-local file has still same problem for me as I commented earlier on irc - https://github.com/alcoheca/xbmc/blob/upgrade-platinum/lib/libUPnP/Neptune/Source/System/Posix/NptPosixFile.cpp#L240 NPT_stat (that essentially will call _wstat64) doesn't understand paths like \"smb://host/share/file\" and return error and so eventually it won't serve file. I workarounded it by doing early success return before doing stat there and it works for me, but surely we should call stat from xbmc's IFile there?\n. and windows pr sent too https://github.com/alcoheca/xbmc/pull/4\nas we have total merge mayhem now, no sense in playing games to keep stuff building in each commit\n. @jmarshallnz\nI updated this old PR\npreviously instead of 2nd and 3rd commit there was: https://github.com/pieh/xbmc/commit/3a3447a4af06d630736b179e5ade6debfa799db9 (just to refresh stuff we commented there)\n. How about something like this https://github.com/pieh/xbmc/commit/247cdd5e8758efef52327604f832d8f916cbeaed ? (messy as this is just draft). It re-adds progress dialog that runs instead of busy dialog in CDirectory::GetDirectory on gui thread. Most important part are changes to IDirectory (did my best to comment them doxy style in IDirectory.h but I defenitely suck at doing that ;P)\nNote: this patch is addition to commits in this PR - not usable in master\nThis doesn't solve plugins trying to spit their own progress dialog, dunno if we need to fix it just here or globaly (active GUIWindow being taken over by something else)\n. Currently we're also displaying script name in heading, \"Loading directory\" in first line and \"Retrieved %i items\" in last line, but I guess we can just drop them as they're not essential.\nThat struct was meant to be used generally with GUIDialogProgress so that's why I stuffed percentage,heading and lines there and placed it in IProgressCallback.h.\nAnd as I said, this was just a draft (now i even see that I forgot to update percentage, but still updating line with items loaded count) - my main idea was to pass progress info from IDirectory to CDirectory::GetDirectory(). What dialog, how much progress info to pass? That's up to You guys.\n. DialogBusy now is also cancalable (if we cancel, IDirectory continue to fetch dir, but we don't wait on it and don't care about items that will eventually be fetched), so I would remove 2. from disadvantages (or rather say it's not directly related to this). /agree with rest.\n. I don't understand what You mean with \"python label parsing\" (or I'm propably totally unaware that we do something like that?). \nI don't think we should change where/when we call existing callbacks (this would propably cause serious regressions which I already faced once and it took me quite a long time to finalize it). But adding new callbacks would be ok I think (and wouldn't hurt). \n. Right, found it - CGUIPythonWindowXML is overriding CGUIWindow::LoadXML. It manipulates directly on xml string (before parsing) to replace SCRIPT### to proper ID - do we want callback that will pass xml as string so it can be manipulated? Doesn't seem nice to me.\n. Added bunch of changes (additional commits will be squashed later). Wanted to keep comment history so we can track what is already taken care of.\n. right, I must have missed it, will fix it\n. hmm, this is weird - what skin are you using?\n. right, it's something with rendering - if you'll hover mouse on it it will refresh\n. this is problem with controls in containers - they refresh only when layout is marked invalid, will fix that\nEDIT: well that's not the problem - will fix layout not being invalidated\n. fixed in 8b796ee9d179df20b5e2d1c65498a6d7eb23c315\n. @Voyager-xbmc \nhere's my proposed fix for that https://github.com/pieh/xbmc/commit/affcec9016903992a3191c90174613572540d240 - it fixes given issue, just not sure it won't cause another. Won't push it yet because i'm going off for the weekend and don't won't to introduce any unknown bug when I'm bit available.\n. @jmarshallnz\nProblem is we clear m_currentTexture string in CGUIImage::FreeTexture\n(which is called by ::FreeResources) but we dont keep m_texture in sync. So\nif infolabel switch value to empty while control is after ::FreeResources\nbut before ::AllocResources we won't update texture and thus will use stale\ntexture info (as btoh m_currentTexture and and new value of infolabel is\nempty, so they're equal, so textureinfo won't be updated).\nI will check it after weekend and do proper PR for it.\nOn Sep 14, 2012 10:29 AM, \"jmarshallnz\" notifications@github.com wrote:\n\nThis seems to suggest some other problem is present to me. If the texture\nis not allocated, we shouldn't be fading one out. Similarly we shouldn't\nhave a current image set? Don't controls become deallocated when the\nwindow\ndisappears? Perhaps m_currentTexture needs to be set empty at that point?\nWith that said, at least the second bit shouldn't be a problem as\nCGUITexture takes care of not doing anything if the path is the same.\nAnother thing I'm not sure about is why the same image path would be used\nfor two different images anyway? What's the actual issue here?\nOn Thursday, September 13, 2012, Voyager-xbmc wrote:\n\n@pieh https://github.com/pieh - thanks for the great work. I was\nclose\nto the same solution (only the 2nd if though) but I think this is it.\nI'll\nplay with it - happy to report experiences after the weekend :-)\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8543793>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8554736.\n. @Voyager-xbmc \nthis line ( https://github.com/xbmc/xbmc/commit/abbacb5d75c639cb1d40c5509ef04e9759f23000 ) was added as part of the fix for http://trac.xbmc.org/ticket/9926 . Not sure if it's ok to remove it completely, so here's my next attempt: https://github.com/pieh/xbmc/commit/13c843bbd25120f9ed223f451852f94c7c666075\n\nthis won't make textures dissapear - problem with disappearing textures is that if texture path is constant (as in no InfoLabels are used, so all confluence textures) we will only update texture once - when we create image control. This won't break it because constant texture path doesn't use m_currentFile (leaving it empty) so when I try to set file name in ::FreeTextures it won't have any effect (as new and old path are both empty)\nit still isn't as nice as I would like it (mostly part that it won't break constant textures \"only by accident\"), but at least better than previous \"fix\"\n. > Additional info: So it seems to work fine with the code I posted above. However, there are now still cases where m_currentTexture is empty while m_texture's filename is not. Apparently m_texture's filename is set in a number of places in CGUIImage, without syncing m_currentTexture, e.g. the contstructors, CGUIImage::Process and CGUIImage::SetInfo. I tried to make sure we sync it in all those places, but then the problem I described with the screenshots reappears. Similarly, I removed m_currentTexture everywhere and replaced it with m_texture.GetFileName() - same issue. I don't know the code enough, but it seems that those two are not really meant to be in sync at all times.\nThere are 2 cases: we use constant texture path: f.e. \"floor.png\" or we use dynamic texture path: f.e. \"$INFO[ListItem.Icon]\". First one will just set texture's filename in CGUI::SetInfo without using m_currentTexture at all (so it will stay empty) - in this case we can't simply reset texture's filename as we won't update texture next time we load window (that's why there are missing textures as texture has empty path). Second one will be evaluated each frame and compared to m_currentTexture and update both m_currentTexture and texture object if it changed - so as long as we keep m_texture and m_currentTexture in sync it will be good.\nSo IMO good solution would be to both clear m_currentTexture and m_texture and set texture path in method that is called when window is inited. There's obviously catch as this method would be ::AllocResources but CGUIImage has DynamicResourceAlloc flag set which means AllocResoures won't be called on window init and image control itself is in charge of allocating resources. I will try to get around this and see what I can come up with.\n. here's another take on it: https://github.com/pieh/xbmc/commit/a5b3b36e05f5a1fb246601570420b451a8d8a46a\n. @jmarshallnz \nhere's pack of fixes for regressions I've introduced (first 3 commits), including one we were discussing + additional \"improvment\" for multiimage to avoid loading directory 2 times on alloc: https://github.com/pieh/xbmc/compare/empty_image_fix\npush them or they need more work?\n. @ace20022 \nIn paralel to your work i'm doing something similiar for external subtitles\nI added method to convert language string (being 2char code \"en\", 3char code \"eng\" or full language name \"english\") to 2char code: https://github.com/pieh/xbmc/commit/4b9cc5daded526d70ec2def1fae4aeedb83bb65f\nAnd helper method to extract language and name from filename: https://github.com/pieh/xbmc/commit/5789502a521d6bfee6897926fb7f7fe9c6ce0a86 (i dropped idea of doing this as part of CUtil::ScanForExternalXX as we can manually point to subtitles or load subitltes from upnp resource and lang extraction would be bypassed)\nWhat I do there is specify few regexpes to match lang and name and try to pick up best from all matches. Fact that we know if string that is recognized as lang part is actual part (testing if we can convert it to 2char code) makes this pretty accurate. I think that I would also add either white list and/or black list for stream names. Regexpes and white/black list name entries would be adjustable via advancedsettings.xml\n. This is still work in progress. For now I would just drop language extraction for external audio and would hook it up when we're both ready.\n. It wouln't act as infolabel only - determined language could be used to select external subtitles with prefered subtitles language feature. I didn't test yet if that actually work (but assuming that we add external subtitles before we select prefered subtitles it should work out of the box as we use stream language there). Was hoping to get some feedback about language/name extraction approach before i do more work on it.\n. We are in feature freeze, this certainly won't be merged before Frodo Final. There wasn't any progress on this since I opened PR, there is still TO-DO entry to code.\n. @da-anda \nI will try to do some work on it, but can't promise anything ... Not sure if this has anything in common with bluray subtitles/audio (this PR will only try to extract language from external subtitle filename, I don't think bluray keep subtitles/audio tracks in seperate files?)\n. noted, will look into it soon\n. I can't test it for few days, but just looking at the code I would suspect in https://github.com/xbmc/xbmc/blob/master/xbmc/pvr/dialogs/GUIDialogPVRGuideInfo.cpp#L188 we should replace break; with return true;\nnow we handle init message (load xml) then we set labels on buttons, (in Update() ) and after break we handle init message again (which propably voids labels we set earlier)\n. @mikkle \nhm, this doesn't seem like a problem here - this would be more acurate imo https://github.com/xbmc/xbmc/commit/274cb4000598a4d404c693fa463e91fcd89bca33\nBecause same CGUIWindowPVR instance (media window) is used to display few very different contents (channels, recordings, epg, etc) we need to explicitly clear item list before we get new item list so we don't display \"stall\" items from 1 PVR content on other PVR tab while we fetch new directory content and process it. And as empty list isn't focusable we switch to default control and hence this bug.\nIMO proper fix would be to get each PVR tab seperate media window, but it's rather late now for such change, so I guess we will need to use some sort of hack to \"fix\" it (f.e. disable checking if current control is still focusable when content list is selected and we're updating that list or add dummy item as in proposed commit - would just need to add same in all CGUIWindowPVRCommon::UpdateDate overrides)\n. @avdleeuw \nShould be fixed in https://github.com/xbmc/xbmc/commit/ae04d9992e796683bd36da18df6974d11160061c - epg grid didn't like dummy item (without channel/epg data)\n. Initial gui work - just poping up dialog to select device instead of spinner: https://github.com/pieh/xbmc/commits/ae_select_device\nlooks like this: https://dl.dropbox.com/u/28792047/xbmc/screenshot006%20%282%29.png\nIf needed I can add \"test audio\" button there, just let me know. Not sure how to mark reliable/unreliable items other than prepending \"[unreliable]\" (or smth like this) to friendly device name.\n. This test button should be located in same dialog as audio devices (in my screenshot) or just in same settings tab? I didn't think much and put it in dialog but now I start to wonder if that even makes sense ...\nAnyway, I updated my branch with what I got and it looks like that now https://dl.dropbox.com/u/28792047/xbmc/screenshot007%20%282%29.png . That topmost \"ok\" dialog is just for testing and should be replaced with real audio testing code :)\n. @FernetMenta given that users should set settings once and forget I would rather push gui part after release - who knows what I could break there ... better working \"unfriendly\" gui than not working one (in worst case scenario)\n. @da-anda, @JezzX:\nadded commit with confluence change\n@jmarshallnz, @opdenkamp \nis it merge material yet?\n. About label name, we have ListItem.PercentPlayed to mark how much of the video was played and this introduce ListItem.Property(PercentWatched) - shouldn't these 2 be unified?\n. Seems good to me. @jmarshallnz, final word?\n. Updated:\n- changed commit message ( ref https://github.com/pieh/xbmc/commit/f06c9d630ff9970efc403fcd1dc7cc7b445ea40a#commitcomment-2989804 )\n- fixed rebasing no-op oopsie - wrong default parameter ( ref https://github.com/pieh/xbmc/commit/7cb94ec7a80a4eb20a375cc8e9b383e470f7b1ba#commitcomment-2989800 )\nRe: fix or feature - I'd say it's new feature. If this was slotted in as a fix I think there might be people with torches and pitchforks going after me :)\n. updated: squashed Process() / Render() split in one commit\n. ",
    "bb10": "Excuse my interference, but I'd rather have a prompt (at least once on first start) asking for permission to get the user's location. I'm sure there are lots of people who don't want to give away their location to a third party however accurate their weather may become.\nAlso see: http://www.w3.org/TR/2008/WD-geolocation-API-20081222/#security\n. ffmpeg 0.11 changelog shows the WMA Lossless decoder got some fixes.\n. ",
    "mkortstiege": "Closing the PR as weather is now handled via add-ons.\n. nice indeed. that way we can serve them via add-ons quite easily i guess.\n. Thanks.\n. Thanks.\n. Thanks.\n. In order to target less techy users % is by far easier than -dB values. I know at least three users that were initially confused by the negative values. If i had to vote, i'd go for the positive percentage values. 2c\n. Thanks.\n. This one is pretty limited to one naming scheme. IMO we should add something similar like we're already doing for cleaning up the file-/foldernames in order to build search strings and add some sane defaults to identify 'known' strings like eg. Directors Commentary. That way the users are able to override it via advancedsettings.xml.\n. Thanks.\n. Thanks\n. Thanks.\n. updated the commit based on jmarshalls comments.\n. Thanks.\n. Thanks.\n. Merged. Thanks.\n. Duplicate - merged the other one. Thanks.\n. The very basic is localhost check was added in order to support local livetv sources (eg. tvheadend on localhost) with no network. Instead of reverting, please fix properly in case you got the time.\n. I am pretty sure the change to URL.cpp will break local livetv sources with no network connected.\n. Ah. So 0b76a1e reverts bf12795. I am a bit scared about it as changing stuff in that code region often raises a lot regressions.\n. Looks good to me. If regressions popup we need to special case it (most likely).\n. Why not remove it completely and announce what's there?\n. I was talking about Zeroconf announces, not the actual services ;)\n. Sure, but the point was to remove the entire zeroconf configuration from gui in order to make room for the actual services we provide. Not sure about all the deps though.\n. Cheers, but there's no such string in the current English translation.\n. Cheers. \n. Cheers. \n. Cheers.\n. Cheers!\n. Please use the advancedsettings.xml to exclude those from listing/scanning.\n. IMO there should be no ! files on sane filesystems. For me (personally) it's a pretty rare case and that's why i suggested to use the advancedsettings.xml.\n. Spiff ok. Merge it if you like. Maybe it's just me and the \"!\" ..\n. Please use the current master strings and pr again.\n. Thanks.\n. Cheers!\n. Thanks.\n. Thanks.\n. Cheers \n. Thanks. Keep 'em coming in case you find others.\n. Right. core + confluence strings are ok. Addons i can handle 'manually' as well.\n. I've handled the typos. Please ping me on irc.freenode.net #xbmc or #xbmc-linux so we can talk about the addon one. Cheers\n. Please do not remove the FirstPage from the global keymap. Adding the home for nyx board is fine as there are no pos1/end keys.\n. @jhsrennie: Last time i checked, the nyx was sending modifiers. Is the home sending one as well? If so we could add it without breaking the existing keymap.\n. Too bad. I just want to make sure we do not break existing keymaps for one device.\n. +1 for eden\n. Thanks.\n. Thanks.\n. Please check again if something is missing or misspelled. I'll glady pull the final translation then.\n. Thanks.\n. +1 even though it is unfortunately not working for my location.\n. Yea, works at work. Will try again at home later today and report back.\n. ronie, the location used on www.wunderground.com is not my actual location but it is pretty near. API reply is 'No cities match your search query'. So, even though it's not working for me +1.\n. Thanks\n. I've merged the Hungarian translations + case insensitive weather strings commits. 851f321 was left out.\n. Cheers!\n. Committed slightly modified in https://github.com/xbmc/xbmc/commit/3404df3c3c36f55a1b7b53d41d65976cc605979c. Closing the PR.\nCheers.\n. Thanks!\n. Yea, i'd say do not add it blindly in L387. Only add for folders.\n. Compiled just fine here. No problems on Linux.\n. +1 for buildsystem as it makes maintaining it a lot easier.\n. IMO we should sort based on parent-/object_id so the users do not have to mess with the as.xml.\n. @jhsrennie: i've only had a brief look at the code but shouldn't it be possible to sort by track if available? forcing one for all feels like a bad idea to me.\n. Hm, not sure if that's better. Ideally we should include the source names in the options as \"Enable Trailers\" is using the youtube url from the TMDb API response and has nothing to do with the hd-trailers one.\n. No, I think we should just include 'Youtube' in 30004 so it is clear where the trailer is scraped from and only allow to choose one of the two trailer sources. That way no further translations are required. Comments?\n. Change is in bc73e42d9a96208e31da3370b74b5c88bdb4972c. I'll push to the addons git in a day or two.\n. @opdenkamp: I've changed the string in order to avoid confusion from where the trailers are streamed.\n. Works for me if it's not causing regressions.\n. I think we will merge it for Eden, yes. Having it hardcoded or falling back to English in case there's no translation does not make a difference. So in any case, translations are welcome :) Thanks for asking.\n. Looks good to me. There's really no reason to group movies to sets in titles node by default (imho). Thanks.\n. Even though VCD .dat is 90s i still think removing it entirely is a bad move. Users can alter the extensions and exclude certain files by regexp via advancedsettings.xml. This is not a 100% no tough :)\n. I still don't like.\n. As long i still can have sets in the sets node only..\nIt's not about turning them on or off. I just don't like the fact, that this feature is 100% used for skin hacks and the likes we will never really get rid off easily. Another fact i don't like about it is, that it is returned in smartplaylists even though only one flick in it might match the rules.\n. 11 comments on a translation issue should make us think about removing it completely ;)\n. Makes sense except the translations for zeroconf, airplay and upnp (imo).\n. Thanks ;)\n. Pull it ;)\n. @ronie: you want me to push the green button?\n. Make a PR if unsure.\n. Looks good. +1 for restoring the dharma default.\n. +1\n. It is already mentioned in README.ubuntu\n. Nope, no issues from what i can see but I'd move this to CApplication::StopPlaying() so the file state is saved on all possible shutdown methods (quit/suspend/hibernate). StopPlaying() is called from the PowerManager.\nThis would require a small re-factor in CApplication::Stop though. It's not yet using the method - just deleting the player.\n. Sounds like a plan ;)\n. +1 (in case it matters) ;)\n. Looks good to me. @opdenkamp any objections?\n. Thanks.\n. Looks good to me.\n. Looks good to me but you should add the single item option there as well now that we're going to support folders.\n. Looks good. Please rebase so we can schedule it for the august merge window.\n. please squash and watch the indentation.\n. +1, this is really a no-brainer. I guess a video-only guy added it ;)\n. Already fixed. Thanks.\n. Looks good. IMO a fix as the functionality is missing at this point.\n. Already possible via as.xml.\nExample:\nxml\n<advancedsettings>\n  <video>\n    <ignorepercentatend>8</ignorepercentatend>\n  </video>\n</adancedsettings>\n. Hm, The fallback was disabled and removed from GUI due to the fact it's 100% not transparent for the users. Other than that the code looks wrong as it will blindly add all available scrapers, not just those which are compatible to the users language settings.\n. Well, that would have been a complete feature change. Before disabling it by default we used to fallback on the language specified in the assigned scraper. The order was: current scraper, scrapers that match by language | multi, default scraper (in case it's not the current one).\nTBH, i am against re-enabling this code by default. I'd like to hear what the others think @cptspiff, @jmarshallnz, @Montellese.\n. This is changing the behavior as you're adding all installed/enabled scrapers with passing the \"override\" bool. AFAIK we never did and I am not sure who published the information in the wiki.\nBefore the gui setting was disabled, we used to fallback on same and multi-language scrapers only.\nThe language based fallback was added by me to ensure that we do not scrape information in a foreign language back in the days we shipped with all scrapers.\nThat said, i feel highly uncomfortable with re-enabling this half-arsed fallback code as-is.\n. Well, if we nuke the language based fallback and go for a try all, do it. Now that the users have to enable the addons, it might work.\n. Then you should drop the entire logic and nuke the AddScrapers function.\n. I still think the default should be on the end of the list. Please nuke at least the extra bool introduced and remove the language checks. They don't make sense any longer now.\nOh, and it's scraper :) not scrapper.\n. Default at end was to ensure we scrape at least some information when the \"community\" scrapers fail. Now that we do not fallback by language anymore, we should try the scrapers enabled by the user before pushing the \"maybe unconfigured\" defaultscraper. That way the chance is high to end up with english meta information instead of none.\n. Looks good to me.\n. Late pong ;) Works as intended.\n. Fixed. Thanks.\n. Will re-do and create a new PR once ready.\n. +1 (no code review)\n. Just had a brief look at the code and commented a few things. No functionality check as i do not have any DAV servers around at the moment.\n. @Memphiz, I don't think i had this issue. Sorry ;)\n. OK, will give it a try later today.\n. There's a problem with the title and icon here. Within the task-switcher (alt-tab) the title is \"unkown\" and no icon is shown. Maybe its a gnome-shell issue, not sure yet.\n. That's odd :)\n. That's odd :)\n. What's the status here? Are we going to drop SDL before frodo?\n. In case other scrapers are enabled you'll still fallback and scrape from the web. You should add a noop check in NfoFile.cpp:104+ to prevent this - in case its the desired behavior?\nMind moving the Scraper.cpp returns after the DEBUG log blocks so we can see what scraper is used in the log?\n. +1. no-brainer?\n. Jep.\n. +1 for asap merge :)\n. @FernetMenta, Not sure if i like it. If it's really needed we should not default to true.\n. Updated.\n. Scheduled for September merge. Waiting for the ticket OPs reply.\n. This is a 3rd party addon. Please contact the addon author.\n. 34014c0 is for sure not related to the texture changes ;)\n. We missed the September window. Scheduled for October.\n. Yea, external subtitle/audio track makes no sense for live TV and the likes.\n. No optical drive here, sorry. If its compile check only let me know and I give it a try the other day ;)\n. No thoughts about it really. Mind explaining why it should be disabled in case of debug enabled?\n. @FernetMenta blocking is a really bad idea as some external players want fullscreen and suspend XBMC. Same applies to various launcher addons (emulator and the likes).\n. @FernetMenta but running --standalone is possible with a window manager as well. Blocking the toggle would cause some serious issues for all the addons on XBMCbuntu and derivates i'd guess.\n. I'll leave that to you guys ,) I just want to avoid silly toggles that end up in a user nightmare.\n. +1. I think it's more user friendly.\n. Makes sense.\n. Looks good to me. Always wondered why there's no ping on playback start.\n. Looks good to me as well. Shove in as a fix or schedule for october?\n. October window then.\n. /me mumbles: die HTTP-API die.\n. Yea, not really a blocker and i clearly see the benefit here. IMO Long term solution is, like jm mentioned, a proper id <-> source mapping.\n. Please move the call to the ApplicationMessenger in order to keep the main application thread clean.\n. updated using uint64_t\n. Looks good to me as well.\n. ",
    "thica": "Hello,\nnot suer, but your comments do not belong to my patch. Is there some confusion here?\n. ",
    "manio": "Thank you :)\n. Split into two commits as you proposed.\n. @anssih \nI did the mixer check according to info i googled out, eg:\nhttp://forums.gentoo.org/viewtopic-t-696866.html\nhttp://mailman.alsa-project.org/pipermail/alsa-devel/2007-May/001019.html\nThe check is based on subdevices count (in my case it is 32). I was also asking on #alsa to confirm it, but no reply, so i leave it as it is.\nI'll wait for your solution, you surely do it better :)\n. @anssih\nbump! any news on this? :)\n. Tested on my SB Audigy. Works as expected! Thank you very much!\n. Sample AC3 test file:\nhttp://otakuland.de/AC3TEST.VOB\n. Ok guys, updated PR to cover this 5.1 case.\n. Oh, stupid me - of course it could be done in the xml, sorry! :)\nClosing\n. ",
    "chrisvarns": "Wow. Looks really nice compared to the standard confluence. Where skins are concerned, would it not be easier to get this as an 'alternative' confluence / just give it a new name, and allow people to stick with the old or pick this one up? Not sure simply changing the default skin so radically would be well received. As you say above, personal preference isn't a reason something shouldn't be done, but I'm wondering if such a radical change shouldn't be released as a stand-alone skin, rather than writing over the old confluence? Perhaps indeed have this as the default, but keep the existing confluence as confluence-old or something.\nNot a criticism of the mod, looks really nice! I'm going to pull it and use it as my default.\n. ",
    "BlueCop": "I think addStreamInfo() really seems to complement setInfo()\nsetInfo uses a dictionary for the infoLabels. Making addStreamInfo() work similarly seems like a good idea to me.\nI don't have a logic beyond consistency though.\n. ",
    "malard": "@all: sorry my bad, this was my first git commit, was a bit over eager with the button pressing!\nwhat do you want me to do? shall i revert, just fix the bug? we rework this? \n@topfs2, can quit? I don't quite follow. the entire point of this patch is to make it so appliance based installs can strip away a function they dont want users to have access to, for example family, friends etc. Having any sort of GUI interaction for this defeats the purpose, and likewise having it as a binary arguement really overcomplicates what should be a simple 'back end setting' I'm thinking what might be best is to drum up an Appliance.xml file and then have a series of boolean options or overloading settings that customise the GUI without making those customising options in the GUI itself (kind of pointless to turn a box into an appliance from the GUI imho)\nI guess a call needs to be made, do we want to have a dialog prompt when shutdown is invoked, each skin probably wants to handle it differently, not all with a popup, some might have a 1 line listbox/combo box (aka alaska) while confluence has an entire dialog devoted to it.\nWhile I agree, we need to standardise the overall way that exiting xbmc/shutting down/rebooting etc is handled. There is a need to give power to the users to revoke settings they explicitly don't want to give access to end users and as such, piling in a series of GUI settings to define all this stuff seems insanely overkill and having them handled via some form of settings file I feel is the more logical and practical way to go about it\n. are we not overcomplicating the system and forcing people to use a system by setting the visibility of a quit button purely based on how the application was first launched? \nI am very tempted by the appliance.xml file because if someone ports their config from one environment to another, then this entire file can be removed or modified, its functionality is expressly defined in its name.\nWhile granted, some people will port their userdata folder across platforms, most users will never even go this far, for those more advanced users, they are the ones setting up this file in the first place and as such should be knowledgeable enough to include or not include it in their new environment\n. I'm building an update now, will put in a pull req later this week with\na proposed solution From: topfs2\nSent: 17 May 2011 18:54\nTo: malard@gmail.com\nSubject: Re: [xbmc] Settings.ShowExitButton for GUIInfoManager and\nadvancedsettings.xml (#145)\nBTW in regards to if this should be reverted or not, I really don't\nthink it needs to be but it cannot be like this in alpha version of\neden. Unless its going to be fixed properly soon I'd say revert, if\nits going to be fixed properly soon it can be skipped to revert. That\nbeing said, a revert is kindof cheap to do so we could just as well do\nit :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/145#issuecomment-1191951\n. one thing that seems to be a bit more favoured on irc, would be to have the options for \"--standalone\" wrapped up inside a config file that gets shipped with xbmc, allowing people to toggle it on off easily, or based on the way xbmc is launched, but still allow for fine grained configuration\nhow about if i move in this direction?\n. So in summary,\nIf i modify this, so that --standalone activates by default\nstandalone.xml unless specified i.e. --standalone=blah.xml\nAll settings that --standalone current does, are moved to\nstandalone.xml which is shipped in the system folder by default.\nThen we review at that point?\nOn Tue, May 24, 2011 at 3:13 PM, topfs2\nreply@reply.github.com\nwrote:\n\nbtw, by where you start xbmc I mean in what context. i.e. from gdm or from gnome\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/151#issuecomment-1228498\n. My intention was to pull the features --standalone does now into the\nnew XML file, so by default it still does the same thing, but in a\nstandardised way across both existing and new implementation From:\ndavilla\nSent: 24 May 2011 18:38\nTo: malard@gmail.com\nSubject: Re: [xbmc] Added Appliance.xml for appliance based installs,\ntaking on board comments from previous work in this area (#151)\nthinkig outside the box here but you can't just change what\n--standalone means and does. Too many already depend on it's behavior\nthat you can't just change it without some warning.\n\n--standalone needs to replicate existing behavior by diddling internals.\nadd some new -- command line setting to handle using some xml file to\nsetup xbmc. I'd prefer that it not be called settings.xml, that's way\ntoo general and it will only become a new dumping ground for things\nthat don't fit into as.xml. Same for standalone.xml, way too specific.\nStandalone means to me that xbmc is the only app running, no window\nmanager, etc. xbmc and it's gui is the only thing a user ever sees.\nplatform.xml, deployment.xml, distro.xml, environment.xml, something like that.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/151#issuecomment-1229930\n. Please re-review and comment\nthanks\n. no, --settings= is explicitly mapped to special://xbmc/system/\n. let's do that, but do it after we have the first implementation in, otherwise we will never get this support in :)\n. i did'nt spot pull req 180, I thought my earlier pull had been shelved, it might be worth just collapsing all the various work in this area into a single unit of work. i'm struggling to handle git to produce a 'clean' merge of all this work\n@topfs2 the point is to move towards a unified and tidy way of accessing settings, the long term plan would be to merge AdvancedSettings and Settings, and potentially even guisettings into a unified set of accessors (how they are actually loaded could still stay the same)\ni can change all the accessors to be const, i'm not used to having to memory manage. i don't understand the safety issue?\n. Okay, I'm really unsure that one extra line of code is a massive problem? The benefit of having compiler checking and making it so that we can encapsulate logic in a single place (I realise right now we are just reading the basic information) outway's the 2 seconds it takes to write { } (which effectively are the extra lines you refer to)\n. I'm also confused about the big deal over adding one extra line of code, given the incredible infrequency that we actually add additional settings, is this really a big deal? if it was a daily occurrence then perhaps I would be more sympathetic\n. exactly, if we don't want an OO application then fine, but we seem to have started to move in that direction in other areas\n. it's what i'm used to in fairness, and from the languages i have used up until now, so i am following that pattern, it makes for easy mocking and abstracting with interfaces etc\n. we dont have setters and getters in c++ as far as i understood, basically all i was trying to do was the first example (in most cases)\n. Okay, It will be a few days before i can come back to this, but I will get karaoke done first, its the easiest to attack\n. any plans to squash a lot of the Always Mark foo for now commits etc?\n. the reason i chose deviceidmapping.xml which contains a deviceid to textual map, is so that different models which might have a different device code can share the same keymap, and equally if linux or mac (i dont know) represent the devices differently then we can just have a many to (one/many) mapping\n. see note above, we need to be able to have a many to one mapping due to different products that could share the same keymap\n. If your finding that the switch is only taking place when the device is connected, then that is bad period. the CWIN32USBScan class is supposed to pick up the devices also on app start and is for me.\nI will have a think, but because we were mashing all the commands together before this was not noticed, perhaps we need to split out mouse and appcommand into their own maps and reference them explicitly\n. it would appear that your VRC-1100 is either emulating a device from microsoft (VID_045E is microsoft) or it's not detecting your device, are you sure thats your entire deviceId list when starting?\nAlso dont use a sub device for the HID,\nHID#VID_05A4&PID_9881&MI_00#7&284d80ab&0&0000# is more likely what you need not the Col02 one\n. http://www.downloadwindowsdrivers.info/usb/vid_045e/pid_0040/ is the device it's detecting at boot\n. Firstly:\nYou've used: HID#VID_05A4&PID_9881&MI_01&Col02#7&47642e9&0&0001# as  your \"key\" for the device, this is fine for when you plug it in, but it doesnt show up when you do a scan for the device at xbmc start, I don't know why but this device is only passed to WM_CHANGEDEVICE when it's plugged in\nThis: HID#VID_05A4&PID_9881&MI_00#7&284d80ab&0&0000# is the common device that should appear both when you plug it in, and when XBMC boots up.\nOne thought as to why this isn't working is that the USB_HID_GUID is excluding it, however I'm using the same GUID for both parts of the code.\nIn windows device manager, does the VRC-1100 appear under \"Human Interface Devices\" or another category? \n. the HID-compliant device, is what you need to get the device id for,\nit's going to be something simple why windows isnt picking up the\ndevice.\nOn Tue, Jun 14, 2011 at 11:21 AM, jhsrennie\nreply@reply.github.com\nwrote:\n\nYou're in the UK aren't you? I can post you the VRC-1100 if you want: I only use it for testing. Altermatively they're widely available on eBay e.g. http://cgi.ebay.co.uk/ws/eBayISAPI.dll?ViewItem&item=280693735317\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/195#issuecomment-1365051\n. It would be good to know what the issue is, but server editions of windows are not our normal target for home theatre pc's right?\n. It would be good to know what the issue is, but server editions of windows are not our normal target for home theatre pc's right?\n. I will move the fix to version into AddonVersion and then pull if everyone is  happy?\n. Hmm I find it perfectly normal to say 2.0 != 2.0.0 what we should be\ndoing is enforcing versioning correctly and invalidating plugins with\nthe wrong version scheme, the way I coded it was to mirror the debian\nnumbering scheme which allows prebeta to me more than beta etc, if we\nadopt your revision then we should document the scheme somewhere. From:\nMontellese\nSent: 29 June 2011 08:32\nTo: malard@gmail.com\nSubject: [xbmc] fix AddonVersion comparison (#233)\nThis commit re-writes the AddonVersion comparison logic. The problem\nwe were running into was that e.g. \"2.0.0\" was not equal to \"2.0\"\nwhich is not very intuitive IMO. This new implementation also uses\nstrtol to read as many numbers as possible and compares them. If it\nruns into a character that is not a number or if there is no character\nanymore it is treated as a 0. So in the above example this is what is\ncompared:\n\n\"2.0\" : \"2.0.0\"\n\"2\" : \"2: => 2 : 2\n\".\" : \".\" => 0 : 0\n\"0\" : \"0\" => 0 : 0\n\"\" : \".\" => 0 : 0\n\"\" : \"0\" => 0 : 0\nI'd be glad if anyone interested could check the logic again. I\ndiscussed with Jonathan whether to explicitly check for \".\" as a\ndelimiter but we concluded that it doesn't really matter and every\naddon uses \".\" as a separator anyway. Furthermore it would be\ndifficult to decide what to do if there was a parsing error (is that\nsmaller, bigger or equal?). So theoretically with this implementation\n\"2x00x1\" is equal to \"2.00.1\" and \"2.0.1\" and \"2.0.1.0.0\" and so on.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/233\n. i am pretty sure, that 1.5 < 1.5.1 in my current implementation\n. according to the rest of the versioning world, yes\n. yes\n. can we close this (sorry montellese) pull request as redundant then?\n. I like this change, xbmc is used in some professional installs who\nprobably welcomes the db value, with that in mind could we keep that\noption as a guisetting? As it is purely a display change? From:\nMontellese\nSent: 29 June 2011 09:45\nTo: malard@gmail.com\nSubject: [xbmc] Decoupling of mute status and volume level (#234)\nWith these changes the mute status and volume level become\nindependant. If audio is muted at 0% volume and then unmuted, volume\nwill be set back to 0% (and not 100% as it was until now).\nFurthermore when \"Volume Up\" or \"Volume Down\" is executed during muted\naudio, it will be unmuted and the action will be applied to the\nrestored volume level.\nI have checked how this is done on TVs from Samsung, Sony, Phillips\nand LG and they all do this the same way as this implementation works\n(so does Win7 and probably any Linux distro and OSX as well but I\nhaven't checked those).\nFurthermore I have changed the format of how the volume is displayed\nfrom a negative dB value to a positive percentage value. IMO this is\nmuch more intuitive for non-geek users. Having your audio at 100% but\nseeing \"0.0 dB\" is a bit odd at a quick glance.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/234\n. Enable multimedia keys is an AS setting, however the nyxboard needs\nthose keys, because some buggy devices send a appcomand and eventcode\nit was set like that some time ago, this is just a forced way to enable\nthose commands when we are confident the device will work properly with\nthem enabled From: topfs2\nSent: 29 June 2011 13:00\nTo: malard@gmail.com\nSubject: Re: [xbmc] added: setting to use multimedia keyboard actions\nin windows from deviceidmappings (#235)\nI don't fully understand why its needed? Also something I noted, if\nDeviceAdded happens before ParseDeviceMappings on DeviceRemoved it\nwill have invalid default, or it won't be the default from before\nDeviceAdded, not sure if this is intended or not but looks a bit\nweird.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/235#issuecomment-1466502\n. Volume up, and volume down etc do not work as their appcommand 9/10\nrespectively are not mapped etc From: jhsrennie\nSent: 29 June 2011 15:20\nTo: malard@gmail.com\nSubject: Re: [xbmc] added: setting to use multimedia keyboard actions\nin windows from deviceidmappings (#235)\n\nI don't fully understand why its needed?\n\nI originally added the setting in\nhttps://github.com/xbmc/xbmc/commit/d1ea087dbb07eb0fa8b6acc7bbc38dfbef6534a2\nIn Windows, pressing a multimedia key generates both a WM_KEYDOWN\nmessage and a WM_APPCOMMAND message. If XBMC responds to both the end\nresult is as if the key was pressed twice. The easiest solution seemed\nto be to ignore the WM_KEYDOWN message and just respond to the\nWM_APPCOMMAND. However it's possible that users might want to handle\nthe keydown messages, so I made it an advanced settings option. I\nhaven't looked at Malard's code in detail, but I assume he is just\ntweaking this to work with his new USB device code.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/235#issuecomment-1467341\n. sorry just to recap all the comments\n@jmarshall the DIB_InitOSKeymap loads the keymappings binding XBMC key's to VK_ keys that windows uses by default\nThe logic inside here dictates if it needs to load the advanced settings\n@jhsrennie in windows I think we should enable multimedia keys by default and ignore APPCOMMAND key presses for multimedia keys.\nVK_VOLUME_UP is a valid key, we should react to it, if XBMC is full screen and I am pushing the volume up and down keys on my remote I want a visual indicator that something is changing! In windows vista and 7 each device has its own mixer and we should perhaps bind to that instead of having our own internal volume management?\nGiven that we can now have more than just one keymap for keyboards, perhaps it would be good to split out each of the keymaps instead of mashing them all together and trying to make a best fit keymap?\n. @jhsrennie I believe you are confusing 2 types of remote control devices, those that behave as a standard keyboard, and those that behave as a multimedia keyboard.\nMost devices are multimedia keyboards, as such we want to listen to their multimedia messages instead of the appcommand.\nI would like to push this in, which allows multimedia keyboard devices to force the use of the multimedia keys such as play pause stop etc which are currently disabled because of the AdvancedSetting. \nIf in the future we can refine this system so that we don't need to explicitly turn on the multimedia keys for specific devices.\nIn theory, if we know that a certain keyboard or device should use the multimedia keyboard, but use the default keymap, there is nothing stopping us from just adding an additional entry into the deviceidmappings.xml saying keymap=\"default\" usemultimediakeys=\"true\" etc\n. me and rennie realised it's not needed\n. i like that you have grabbed the nyxboard remote to create a hybrid remote, i can provide better imagry, email me at martin.ellis@pulse-eight.com and i will send it to you\n. can I suggest you use the new build flag for windows instead of the old one?\n. TARGET_WINDOWS\n. Unless there are any objections to this, I would like to get this pulled in and worked on before eden goes out, as it stands it works well, but the implementation might not be perfect,\nI would like to propose that we add it, so we can get feedback on the feature with eden and we can refine it for the next release. If no-one objects I will merge this tomorrow.\n. from a usability and consistancy point of view, this should exist as a sub section in Network Settings I think, but we do need to go through our settings and clean up the options\n. after just going through and cleaning up the settings code, I agree make a new category\n. can we get this fix (whatever it may be) into mainline as its breaking the experience for any new user of nightlies\n. i understand the situation, that said, lets look at this logically\nusers upgrading from dharma to eden, first thing they experience is half of their addons are invalid or silently upgrade automatically (there is no way all the dharma addons will be eden fixed on the day we release)\nSo in that respect, it's still a positive change in my opinion, instead of bombarding lots and lots of messages to the user\nI also would consider this a setting we could expand on, and create a full settings category for addons, whereby users can just have this sort of error appearing as dialog toast instead of being a model prompt\n@alcoheca I think we need a First Run flag if we had some sort of tutorial explaining addons, or demoing what addons are etc this would be useful in that scenario, or if we did have a settings page, that when the user first visited addons we prompted them to select their options\n. what is your suggestion, I am in favour of removing the prompt entirely, and just putting a check in when you try to run the add-on saying its marked as disabled, do you still want to try and run it?\n. That's fine that we are against this patch, but its good to acknowledge this as a problem and we should overhaul how we inform the user as to the status of a scraper.\nMy suggestions based on feedback are as follows:\nAll addons are automatically disabled when we mark them broken in the repo.\nA new advanced setting (for packagers and installers) whereby users may themselves re-enable the add-on via the add-on manager (regardless of status marked in the repo) [default is true]\nNon scraper addons - Show the item in the relevant place, but disable the item (display item as broken/disabled)\nScraper addons - disable and show as disabled in the list, if this was the active scraper, when updating the library prompt the user that they must select a new scraper\nSkins - Show as disabled, if active, default back to Confluence (We never mark confluence as broken, always fix)\nWeb interfaces - Show as disabled, if active, redirect to an error page saying this add-on is broken and a new add-on must be selected\nPlease let me know thoughts and if i've missed one we should have a special case for?\n. i'm a bit unsure personally about the scripts, my general disfamilarity with some of the add-on types, means I might need more input on them, what kind of background scripts do we have?\nModal dialogs are bad on startup, potentially we should have a error flag in the UI? maybe up by the clock in confluence which users can navigate to, to read what is wrong with background add-ons?\n. we have to ask the question, why a script would be marked as broken, the only reason would be if we modify the API to break it in a new release? In reality I think the only add-ons that we would declare broken would be those with external dependencies outside of our control.\nAt which point do we even bother with a prompt at all that it is broken and potentially just set internal policy to never mark a script as broken?\n. hmm, well, how about this then:\nFor add-ons that we (XBMC) include as a packager we will never mark a 'script' as broken, thereby negating the possibility of a modal window appearing when a user first starts XBMC?\nTo make this a reality we never package a script which has an external dependency, giving us no reason to mark a script as broken?\n. no the problem is an error saying remote share is inaccessible or words to that effect\n. Thanks for the feedback, I will need some help on doing the squashing to avoid destroying the work i've done\nRegarding the change my concern is this:\nSystem -> Settings -> System -> Video Output is confusing, the more logical place to put it is\nSystem -> Settings -> Video -> Output\nremaining settings that are advanced (for instance Debugging!) belong in such a category, so instead of\nSystem -> Settings -> System -> Debugging\nSystem -> Settings -> Advanced -> Debugging\nIf your trying to explain (which I have over the phone many a time) where to find the video output settings, I say go System -> Settings, now go into System (to whcih the response is i'm already there) then I say go Video Output and then inevitatably skip past going into the second System and assume Video == Video Output\n. From feedback thus far, I will remove the category re-shuffling from this pull request and just include code fixes, cleanup etc\nI will then include a seperate pull request so that Options with only 1 setting available (or potentially) in Appearance, namely Theme, Colour and Font are hidden unless the skin defines more than a default value.\nand another pull request, which re-orders and simplifies the overall settings structure\n. Please review for commit now\n. unless anyone has any objections I would like to merge this PR on friday. I've tested this on windows and linux without issue thus far\n. that was my first attempt at all of this, and i did'nt realise how dependant we are on the base mappings for everything, it would be good if each could exist independantly, so you could have a different mapping for our android remote vs your bluetooth remote or your web interface or your nyxboard\n. can we get this merged in tonight for tomorrows build, so it doesnt break the nightlies builds?\n. siarkopol, goto http://packages.pulse-eight.net/ to download builds with it already built in, this is not in due to a feature freeze for Eden, it will go in after as part of the Frodo build\n. why not just 12.1, 12.2 etc, then we don't end up with confusion if people go I want 12.3 and we didn't release in march but we did for every other month that year\n. ",
    "kraqh3d": "I've been away for a bit, but I always keep following the development efforts.  I think what you're looking for is pControl->IsContainer().  Today CApplication::OnKey checks for this && key modifier == SHIFT.  Just remove the shift comparison, no?\n. You could add a check against !IsPlaying(), so that \"p\" would pause, etc.\n. No problem :)\nIs this what you wanted?  To allow unmapped characters to act as \"jump\"?  I thought you wanted to intentionally override any mappings while the container was focused.  Only capturing the unmapped characters is inconsistent.  Anyone who uses a kb will likely use the \"q\", \"i\", and \"c\" actions in lists, so those characters cannot act as jump while most others can. There are a few others but i rarely use the kb.  I'm mostly confined to the original apple.  (It's frankly amazing that xbmc can be controlled quite effectively with so few buttons.)  Ensuring all characters \"jump\" would mean that all the naked character mappings need to change to include a modifier, so users would need to get used to doing Alt-Q or something. But anyone who doesnt like that could apply the old keyboard.xml file as a local user copy, right?\n. An idea for discussion regarding the generic problem with keymapping :\nYes, the current schema has lots \"duplicate\" mappings for different windows.  Why?  Because lots of windows are essentially the same \"type\".  Consider the global section.  It handles global remote (or media keyboard) buttons such as play, pause, stop, ff, rw, etc very well because they should always behave the same regardless of window.  This works because these mappings fall thru the window section and get captured by the global section.  \nExpanding on that, a few window type sections introduced into the action mapping hierarchy could reduce the duplication.  Assuming the action mapping a followed specific window -> window type -> globals path, then one would only need to use the window specific section where one wanted to override the default window type behavior, or if there was something unique to that particular window.   Probably only need the following types: media windows, settings windows, and dialogs.  \nMost of the mappings for the media windows (generically those with list controls) remains the same.  (and its in these windows where special handling of a list control make sense.)  And then what's left is that the files, scripts, and playlist windows just need few extra mappings (highlight, move, rename, shift up, shift down, ).  The settings windows should all be basically the same because they are the just the different settings categories.  And all the dialogs should all have a consistent mapping for Select and Close.  \nThat should pretty much leave the specialty things such as Login, Home, and everything related to playing and/or displaying media -- FullScreenVideo, Visualization, Slideshow, and the various OSD's, and settings dialogs which apply only to them.\n. It should work.  The database fetch should handle getting the thumb from the database and populated the CAlbum class.  The path isn't correct.  RecentlyAddedAlbums is accessed thru musicdb://6/ from the root of the library navigation tree, but 3 will likely work since they are both the same node type.\nAnd btw, the CFileItem constructor that takes the CAlbum as input handles doong the SetPropertiesFromAlbum() bit so you shouldn't need to do it in FillAlbumItem()\n. This should be a straight forward fix.  There's a validity check for the file types but it currently only excludes folders, nfo files, and playlists file types.  It needs to be change to skip folder and anything that's not a video file.  Using !item1->IsVideo() and  !item2->IsVideo() should do it.  (May need to leave in IsPlayList() though.  They may be in the video extension list.)\n. Heh.  I was just about to comment on that.  They shouldn't even be in the list!\n. I have an idea about this.  If this only occurs when you specifically set an extension in the RegExp, I bet it's because you have two different valid video file types for the same movie.  For example:  Movie1.CD1.avi, Movie1.CD1.mp4, Movie1.CD2.avi, Movie2.CD2.mp4.\n. Yes :)  I remember spending a lot of time on that many, many moons ago so the bug caught my eye.   I was curious how much the code had changed since then, and I was surprised to find it's not much.   And I distinctly remember an issue related to multiple copies of a movie, with the same exact name but in different formats, breaking the stack functionality.\n. An srt subtitle file is not the problem.  It's a combination of another valid videofile type extension with the same name as your avi.  The fact that you have the extension listed is irrelevant.  The problem exists with my example earlier even with the default regular expressions which are not extension specific, but both conditions should be corrected.  \nOne way that comes to mind which should mean no changes to the stacking code at all would be to define a new sort method that sorts by filename and by the extension independently so that you get this output order. \nMovie-CD1.avi\nMovie-CD2.avi\nMovie-CD1.mp4\nMovie-CD2.mp4\nThe other option is to change the stack routine not to skip to the next reg expression until encountering an item with a different first character than the one being tested as that ensures that there's no possible match thereafter.  \nThe question is which one will require fewer total iterations of the entire list.\n. ",
    "pietheinstrengholt": "These patches improved the overall performance on my ION2 system. No more stutters noticed and zero framedrops counted when playing 1080p content. That's why I asked FernetMenta to create this patch. I hope we can settle this down, but since I don't have the skills I really rely on you. The patches were mentioned in the following thread.\nhttp://forum.xbmc.org/showthread.php?t=100116\n. Hey FernetMenta,\nI noticed that you made several commits into your own branch: https://github.com/FernetMenta/xbmc\nIs your plan still trying to commit these into mainline xbmc? Perhaps you can make smaller patches instead?\n. I do. The translation looks fine to me. Thanks for your hard work. \n. Awesome!\n. This is so awesome! Thanks for your work Memphiz\n. I've tested these patches on my latest xbmcbuntu build. No issues found.\n. Maybe just an idea.. Can't we ask Alasdair Campbell to have a look at this as well? He's Google Summer project is all about XBMC serving content by UPnP / DLNA. Would be nice to see a headless xbmc server serving content to other (xbmc) clients.\n. ",
    "bossanova808": "Testing with an Openelec build containing these patches showed also zero framedrops - the first time I've ever seen this with ION/2 systems and an absolute blessing after years of consistent stuttering.  I am quite sure there is very strong user support for seeing these changes once properly integrated and tested :)\n. I've collected various MySQL optimisations from the forum, not sure if they are worth integrating in this patch, (and please excuse the butting in of a total non dev).  If they were built in so to speak, there would be less annoying 'MySQL is running slow' posts :)\nFrom my notes:\nIn advancedsettings.xml:\nUse the IP address and NOT the hostname of your MySQL server\nIn my.ini:\n(add to mysqld section)\nskip-name-resolve\nAt dos cmd:\nmysqlcheck -op -u xbmc xbmc_video\nmysqlcheck -op -u xbmc xbmc_music\nIn MySQL command tool:\nuse xbmc_music;\nCREATE INDEX idAlbum_idx ON song(idAlbum);\nCREATE INDEX idArtist_idx ON song(idArtist);\nCREATE INDEX idArtist_idx ON album(idArtist);\nCREATE INDEX idArtist_idx ON exartistsong(idArtist);\nCREATE INDEX idArtist_idx ON exartistalbum(idArtist);\nALTER TABLE xbmc_music.song ADD INDEX idx_idArtist(idArtist);\nALTER TABLE xbmc_music.song ADD INDEX idx_idGenre(idGenre);\nALTER TABLE xbmc_music.song ADD INDEX idx_idAlbum(idAlbum);\nuse xbmc_video;\nALTER TABLE movie ADD INDEX idMovie(idMovie);\nALTER TABLE movie ADD INDEX idFile(idFile); \n. Well, cheers!  Just figure if the indexes in particular cause no harm, they might as well be in there - makes a huge difference with the music database especially, I have a largeish collection of 1500 odd albums etc, and without the indexes its a bit painful.  I'd be happy to chuck MySQL in a way, but sqllite is not great for multi-user so even with Eden's new path substitution etc, seems MySQL is still the way to go.\n. So presumably this will mean the databases move to a standardised name and the name bit in advanced settings will be ignored once the upgrade is done?  Just like sqllite.\n. Does the PR wholly subsume PR251?  I believe this will enable direct play of lossless streams from logitech music server (squeezebox ecosystem) if so, so I am curious as my add on is in this area...\n. Basically Logitech Media Server is a music (I think it does pictures and\nvideo now too) app from Logitech to support the Squeezebox line of network\naudio players.  And apparently LMS supplies streams in this format when\nstreaming lossless files like flac etc.\nA long time ago Squeezeboxes were the most awesome network music players,\nlike a Sonos but a lot cheaper, more flexible, and with open source\nsoftware.  Their star has faded (basically since logitech bought out the\nexcellent small company behind the players, slimdevices) - but a lot of\npeople have these around their house so the idea is to have XBMC integrate\ninto a bunch of these existing players for a whole house audio solution I\nguess.\nMy add on currently includes an external headless software player, but\nideally the stream could be handed direct to XBMC's player for better\nintegration into XBMC (although the sync will almost certainly be less good\nso the idea is to have both options).\nIt's all purely an exercise for me - I just use XBMC's internal music\nsystem myself, for the most part, but others seem keen and nobody else was\ndoing it so I thought I'd extend my python skills a bit.\nOn Tue, Mar 20, 2012 at 6:22 AM, Memphiz <\nreply@reply.github.com\n\nwrote:\nConfirmed, that that test file didn't play before this PR (xbmc just\ncrashed) and played after applying the patch. Tested on OSX and iOS.\nSo basically funk is flowing through my veins now :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4581383\n. Yep I know that, I believe LMS transcodes to PCM16 - the PR251 was all\nabout this....that guy develops a DLNA/UPNP extension to LMS\n. Looks like spiff has worked on the greater issue here, right?\n\nhttps://github.com/xbmc/xbmc/pull/1195\n. Is this related to: http://forum.xbmc.org/showthread.php?tid=131358 - and/or will it fix this??\n. What about for things NOT launched via external player?  That is, if GUI sounds are off, and I manually switch to another process (or have something running in the background of Win32) - will it also cede the device in this case?  \nIt really should - xbmc shouldn't hog the resource if it's not actively using it, right?\n(Apologies for butting in but this behaviour breaks my add on currently).\n. Default should maybe be to follow the show watched/unwatched setting in the appropriate library (movies or TV)...\n. @jbdk @sialivi @ace20022 \nApart from a few European countries where everything is dubbed (the above mentioned corner case), the vast bulk of the rest of the planet (well, at least the many countries I've visited) - MUCH prefer to watch the movie in the original production language with subtitles rather than with dubbing.\n(see http://en.wikipedia.org/wiki/Dubbing_%28filmmaking%29#Countries_that_generally_dub_foreign_programming_into_their_own_language) - and even in those countries, there are often pay TV and DVD etc. options to avoid the dubbing.  \nThus watching dubbed stuff is definitely, from the world perspective, the corner case.\nThat said - Maybe an advanced setting for this to determine which side you fall on?  (favour production language or favour preferred language)\n. Yeah I am interested too - all my ideas for other addons seem to be based of adding functionality to items like this.  Maybe you should make a forum thread to discuss?  Or have I missed one?\n. For my addon (OzWeather) - this pulls live radar images - having it 1 or 2 hours out of date will suck.  Any chance some thought could be put in to making this variable depending on where the data is coming from?  I.e. maybe the addon.xml could specify a frequency or something (that's a daft idea but you get my drift...).\n. It's not plain silly - and not all weather providers are those ones....and radar data is not about 'look outside' - it's about watching what will come in an hour or two, how big an event it is etc.  And people often like to check the weather outside at night when it's not so easy to see....I for one love to know just how big a storm is coming, and looking out my pitch black window doesn't tell me that.\nYou might not have noticed this but weather apps & devices are hugely popular in general.  I don't disagree with reducing bandwidth for those generous free providers, of course, but if you go down this path I think that there needs to be a good way to sub in a whole weather add on (e.g. I could write a full script instead of just a weather add on - but then all the users will complain it doesn't integrate nicely).  \nIf you choose to have weather at all, then it might as well be good weather...which to most means frequently updated IF this can be achieved in a way that doesn't cause issues for upstream providers...and if those upstream providers ARE willing, then why limit it in the general case?\nI am sure with some thought a good balance can be found...\n. \"We are talking about a media center here \" ... so what?  Why should this limit what it can do.  The major sections are Weather, Pictures, Videos (etc) and Music.  For some of us, Weather it an important feature.  'Check their website' - sure - and next time you want to watch a video, go to YouTube in a browser, by the same argument.\nHappy to go to forum - is there a thread yet?\nWhat Voyager said sounds the most sensible...\n. Any chance of click and hold support for touch interfaces?  I had to implement a very clunky volume up down button thing because it only registers one click event as far as I can tell.\n. ",
    "EricV": "I have several atom/ion (not ion2) machine. I see comments on ion2 machines improvement not older ion. Reading the code I thinks part of the change apply (signaling, ttid, ...). Did someone also test on ion?\n. OK. Thanks for the info. I'm not a git expert and I do not see how to retrieve the patch in raw form from this git web frontend. I already have clone of opendenkamp xbmc git that I update several times a week. How can I get a diff or use git to apply this pull request it on my tree for testing purpose?\n. Ok. I checked out the branch removed the installed opdenkamp's xbmc  related files ( rm -rf /usr/local/share/xbmc  /usr/local/lib/xbmc) and installed your binaries and libs. At first I found that the video quality was bad but did spend a quarter to finally find why: the video content is zoomed and represent only a portion of the original tv stream. Its not obvious but as the broadcaster does put a TF1HD logo at the upper right corner, I was only seen TF1. I did play with the video setting (display mode, zoom ratio,pixel ratio) without any luck.\nTo make sure It was not related to something else that changed in the system since last pvr branch build  I did a full rebuild of pvr original branch and reinstalled: the problem vanished. I did a rebuild of you code and it did not recompile a single bit.\nSo I cannot say about performance improvement but for sure for me the display quality did regress (I have a big screen and zoom like that do show up). The change did break something on my setup (atom 330 + ion first gen).\n. This is exactly wherre a splitted patch could help...\n. We discussed with FernetMenta and he managed to reproduce the bug using a 1440x1080 stream and a 720p monitor setup. He already fixed the pb at least on one of my setup (I did not had time to test it on others but i'm confident).\n. I must report that using vdpau bob (I cannot use temporal or temporal spacial) I freeze the box regularly. Using non vdpau bob, I do not experience the freeze.\n. On 13/06/2011 13:35, FernetMenta wrote:\n\nCan you past me a log?\nSure but as the box is dead, I dunno if it will contain anything relevant.\n\nNB: i have scheduled many recordings on the box this afternon so it will \nnot be before around 10 pm GMT +1\n--eric\n. I have a strange scheduling problem that wasn't there the 13 July when I took vacation and that is now there and cause multiples platform on avrious platform (I have it on 4 platform with different GPU, X64 or IA32, ..). See bug 11857\n. I confirm the problem. Its unuseable for me. Problem is that by the time Eden goes out more people will have it.\nI think forking a process is quite heavy to get the RefreshRate3 value.\nReadding nvidia-settings-295.09/samples/nv-control-dvc it is quite easy\nto get this RefreshRate3 directly and it would had the framework to\nget/set any nvidia parameter. Code copyright is fine also to be included.\nI may give it a try to write c code that get this. Does it sound\nreasonnable?\n. How are you sure its a nvidia bug? nvidia setting from command lines works fine and product expected results...\n. How are you sure its a nvidia bug? nvidia setting from command lines works fine and product expected results...\n. I have C code to get acess to the refresh rate using nvidia conrol protocol. Where Can I send it? Our firewall disallow to put in in usual place like dropbox, mediashare, ...).\n. I can even add it fixes #13350\n. On one hand, you use OpenElec 2.0 arrival to promote XBMC and on the other hand you refuse to merge code that is part of its success and as fernetmenta said used by thousand people including anybody wanting decent rendering on AMD...\n. ",
    "TheSwissKnife": "Should improve on all vdpau (nvidia) platforms - but mostly it will be noticed when the video stream is getting close to stretching the capacity of the GPU (say at least 80%).  So for example de-interlacing/high-fps/high-megabit/during-subtitles or possibly just when an intermittent edge case is hit that might give normally give the GPU less time to squeeze the processing in.\n. I am not great with git either...for testing as is I would think you would just want to make a testing branch, add FernetMenta's repo as a remote, checkout to your testing branch,  and then pull the whole tree down into to overwrite this branch\n git reset --hard <remote>/<remote_branch_name>\n. I would suggest you try to sort out why the build is not working, then play it from there.\n. ",
    "FernetMenta": "My master branch is based on pvr (opdenkamp). You don't need to merge.\n. Can you paste me a log?\n. In the meantime I did several fixes. This commit 75eaacf3caac128d8197c78485ced86241022c01 will also require some rework. TheSwissKnife is reworking the dropping mechanism.\nNot sure how easy it is to split it up in smaller patches. Will think about it ...\n. I will close this for now while doing rework.\n. CGUIDialogOK::ShowAndGetInput, Is it wrong to call this method?\n. Thanks. I have changed it to your suggestion.\n. It might be due to the fact that the dialog is launched in an OnInitWindow method. Check out line 119 of\nhttps://github.com/opdenkamp/xbmc/blob/master/xbmc/pvr/windows/GUIWindowPVR.cpp\nThat should lock the PVR window in case of there is no backend. PVR window might be configured as the startup window.\n. Regarding the PVR part, I think it's not nice opening a dialog in OnInitWindow. Is this a proper way using it? If not, how could this be done better?\n. Great, this should fix it.\n. 5784a40c0b0e6ddb6f8392192d347a720da7ddab does not fix it. It does not release references to gfx when calling from the main thread.\n. I'm also thinking about other ways to handle the platform specifics. I'm open to suggestions\nI think the current approach is already quite good. I would get rid of the last defines like TARGET_POSIX and have it controlled by the build process. I used to work a lot with UML modeling tools for real time systems which provided code generation (static + dynamic). The target runtime system could be easily ported to a lot of different target platforms defined by OS, compiler, and processor architecture. The build process looked first in the target specific directories (if existing) then in the generic ones.\n. This fixes a race condition when a thread is stoped. You may want to include in this PR.\nfe206277789ec4799ecc742d224f5df9d7382592\n. You are welcome. Yes, good that we noticed that at this time.\nMerging is always fun :)\n. @jimfcarroll \nI have fixed an issue: https://github.com/FernetMenta/xbmc/commit/4bf8428afb48c6495f8bc1a1f55f82aa5f722021\nYou might want to merge it into this pr.\n. Ok, I have removed it.\n. Thanks isidrogar, I moved it up as you suggested.\n. If player is not stopped while refresh rate change happens, there are decoder resources referenced by the render buffers. The decoders might preempt but the system can't cope the the allocated gl resources. This make the application crash. Display preemption invalidates gl textures which references decoder surfaces. Hence the player has to be stopped and the render buffers flushed while waiting for the refresh rate change to be completed.\n. Of course, you can argue that error recovery should be handled by the drivers. If that worked properly this wouldn't be needed. But that many posts in the forum show us that it does not. So the best strategy I can think of is no navigate around this issue by not letting the decoders being preempted.\n. Do you mean this OnLostDevice in XVBA? vdpau has something similar which does solve this problem. How would this work since the xrandr command is async?\n. Ok, thanks. Will try to follow this approach. \n. Next round. vdpau will still throw the preemption error after the display has been reset but should not harm anymore since renderer won't access any decoder resources during the time the display was lost.\n. I think renderManager.Flush() should also be called before disposing a decoder, right?\n. Ok, I can see the refcount working for vdpau. Is it missing in vaapi? How would this work?\nEDIT: smart pointers :) Is this approach preferred over the refcount?\n. Ok, I have considered all your input in this rework.\n. It feels like the recover variable can be replaces with usage of m_DisplayState now? Can be done as a separate commit.\nMakes sense. Will do.\n. I think the recover variable is still needed. It is set whenever a vdpau error occurs. If m_displayState was set to VDPAU_RESET due to a vdpau error right after the event OnLostDevice(), it would trigger a re-init while waiting for the event OnResetDevice().\n. Now it's the beginning of a state machine and as it gets more complex it might be a good idea to drive state transitions through a single function. I can do this in a future interation when submitting further improvements for vdpau. For now I would leave it this way.\nI have rebased this PR and resolved a merge conflict in ApplicationMessenger.h.\n. I have identified a problem: FFReleaseBuffer does access a structure which has been cleared down.\n@Krautmaster\nWill provide a fix for you to test.\n. krautmaster has two different vdpau.h on his system, one in XBMC's internal tree, one in /usr/include/libavcodec, which are different in the structure of vdpau_render_state. What file is included through the include statement in VDPAU.cpp:\ninclude \"libavcodec/vdpau.h\"\nShould the include not be handled by the interface dllAvCodec.h ?\n@elupus, @bobo1on1\nWhat do you think?\n. next round of fixes and cleanup:\n- check if buffer given from ffmpeg is still valid (like done in DXVA), e.g. vc-1 decoder does not flush\n- don't try to clear down vdpau objects after a display preemption\n- remove useless preemption callback function\n- remove unneeded gl context\nMy TV set feels dizzy from switching to 24Hz :)\n@krautmaster\ncan you test those changes and report back.\n. I think it is a good idea to close and reopen ffmpeg in case a hw decoder returns VC_FLUSHED since ffmpeg does not completely flush. A valid picture buffer might still hold references to invalidated video surfaces. \nEDIT: i had a remote debugging session on krautmasters machine and have seen many segfaults inside nvidia driver.\n. Here is another two fixes.\n- I tracked the crash on closing a video stream down to player calling rendermaner.uninit. I think gl might still have decoder resources in use.\n- If a hw decoder is flushed, ffmpeg decoder will reopen in order to get rid of all zombie pics.\n@krautmaster\ntorture your system :)\n. I was reading the stack trace not properly, player does not call uninit but the problem stays the same. I have put a glFinish into LinuxRenderGL.Uninit\nffmpeg commit shows now less changes.\n. One crash is still one to many. I have factored out change from my repo where the problem is long gone. It changes the sequence of creation and clear down of pixmap and vdpau presentation queue. I remember that I was struggling with this for quite a while.\n. Short update: Yesterday it still crashed on krautmaster's 64bit machine. It seems that it randomly crashes somewhere in the driver due to heap corruption (calloc). Maybe the driver can't handle display preemption properly. In this next round I avoid this error by clearing down vdpau on display lost event.\n. @krautmaster\nThis makes me more than happy :) Thank you very much for assisting in this case!\n. I have built fix for trac 11499 on top of this.\n. @ChrystalP I dropped the commit which reopened ffmpeg because it didn't seem to be a problem.\n. Thanks elupus, I have fixed what you mentioned above.\n. I have been testing this on Nvidia platform using vdpau/software and on Ati using XvBA/software. In addition I have already implemented GL_NV_vdpau_interop which directly maps textures to video surfaces without the need of transfering the frames. In particular this method does not like it if decoder resources are cleared down before the opengl part. The others methods might cope with it or might not. As we have seen in case of vdpau on 64bit the driver was not able to handle a change of refresh rate and associated display preemption. Looking at the Catalyst driver I am pleased if it does not crash if all follows the happy path.\nI agree that there is no need to clear down textures when using e.g. software decoding. I can change LinuxRendererGL::Flush to determine upon the render method if it wants to clear down the textures or not. \n. i had it this way:\nhttps://github.com/FernetMenta/xbmc/commit/c52387ea9dff7ed9083e1f9aee825fb4690a5f35\ncptspiff guided me to this solution as a class would initialize its members.\n. Unfortunately this segfault does not happen all the time and I can't verify. I had a built which crashed on 5 consecutive attempts when having tried to open the video db and DatabaseSettings were copied.\nDatabaseSettings dbSettings = settings;\nMy original patch has fixed this. How to go on here?\n@cptspiff what do you think?\n. What's so bad about the constructor version? At least it did solve the problem.\n. I meant the members of \"settings\" have not been initialized. So in this line of code above a CStdString which has never been (explicitly) given any value is copied from settings to dbSettings.\nDoes CStdString have a standard constructor which initializes the string? If this is the case I think there is something wrong with CStdString. At least on Linux 64bit with current compiler.\n. Ok, then the constructor itself has not fixed anything. The code has just made the original problem not showing up anymore?\nI will observe this further and extract more information next time from the debugger.\nCould you revert this commit?\n. Vdpau mixer does already crop the padded lines and the correct height goes to renderer. This problem has always been around and it it even more noticeable on mpeg2 interlaced where we don't have cropping.\nI have thought about a solution in LinuxRendererGl but the effort is higher.\n. We allocate the video surfaces with coded_width and output surfaces with wanted width. I was able to clip the top/bottom lines of the output surface in the mixer but the resulting surface showed undefined colors outside the clip rect. This is the behavior even if coded height/width equals wanted height/width.\nI tried setting a background color explicitly for the mixer without success. Maybe this works only when using layers.\n. With GL_NV_vdpau_interop the presentation queue won't be used and we will have this problem again.\n. http://dl.dropbox.com/u/47522966/sampleInterlaced.ts\nweird timestamps, pullup correction detects a pattern of lenght 32\n. Regarding the sample I mentioned i see a green line only at the bottom. When watching TV channels and having vdpau advanced de-interlaces engaged I see flickering lines at the top and the bottom.\nThis is very annoying flickering and I have been using this solution for more than a year now. I agree with you and I am not completely happy with it either. This is why I hesitated to submit it but I factored it out because of the complaint in the forum.\nNvidia spec says that a video surface is initialized to black when created. Nevertheless I see colored boarders when trying to clip with the mixer.\nLooking ahead to GL_NV_vdpau_interop. This method allows bypassing the mixer and we would need a mechanism for cropping and clipping in LinuxRendererGL anyway. But I would rather not touch this for Eden.\nWith regard on Eden I would use this solution because I have tested it myself for quite a long time. Then post-Eden do this in renderer.\n. The first log is with deinterlacing off:\nhttp://pastebin.com/VNM8KF8Y\nThis one with de-interlacing on (without the patch), you see negative diffs\nhttp://pastebin.com/ZkyNrSVu\n. That's true. I see timestamps coming from demuxer which are already out of ffmpeg. Before ffmpeg it looks much better but for approx 1 out of 12 frames there is only a single field.\n. @bobo1on1 \nI changed it to use a pixmap. Can you have a look?\n. I was tempted to do it this way but then we won't have the wait in Check(), it would immediately try to recover. While writing this I see that the reset signal is missing in CheckStatus. Either way I have to touch it again. What solution do you prefer?\n. Consider the following case. m_pVideoCodec->Decode is called and reduces convergence count. Then m_pHardware->Decoder returns VC_FLUSHED. Regardless of this return value a packets would be popped off the queue. (I might want to try if a check for VC_FLUSHED does as well in player)\nThe reason for m_iLastKeyframe = m_pCodecContext->has_b_frames + 2;\nTheSwissKnife did investigation on this and finally assumed a ffmpeg bug. With +2 it worked reliable, +1 did not.\nSetting m_iLastKeyframe for ever h264 frame did break the logic.\n. Then I don't know the actual source of the problem. It never has worked correctly on my systems, no matter if I used vdpau, vaapi, or xvba for decoding. Maybe the trick is done by not letting the count go to low.\n. elupus: thanks, always a pleasure learning from you\n. @elupus \nDo you see a reason why this should not go to master?\n. There is a enable(true), only the enable(false) has moved in this patch.\n. I'm thinking it could be that we don't wait for something to complete\nSo do I but I have no idea what this could be. You are right, the log shows that nav sounds are disabled before audio renderer is started. Must be some timing issue. Users reported that this broke withing the last 3-4 weeks but I have seen no change which could have caused this.\n. Good idea, I will try this tomorrow.\n. I have built a loop around retry when busy (30sec). Once busy it won't get ready for some reason. Seems that we have already lost on first attempt when busy.\n. Then I merge this and keep investigating post-Eden.\nbtw:\nStill wondering about this comment in the code:\n// Workaround for bug/quirk in SDL_Mixer on OSX.\n. I have tested this and observed 2 issues:\n1)\nEvery time I started a video the volume control popped up at the upper right and did not disappear until I changed volume\n2)\nMore importantly, it still does not fix the problem. nvidia-settings produced no output at the 10th attempt I started a video. This made the system freeze for the expected 30s.\nI think we should fix this issue for Eden since many users are affected. Refresh rate is a rounded value. Why don't we measure this value in order to proof or override the value we get from xrandr?\n. Is this something we can add to pvr? I think it makes more sense following a single path of integration.\n. When using pvr vnsi client for vdr, recordings are opened by pvr input stream. This does currently not support edl. If we added required functions there I think we could do it in a more generic way and do the vdr specific functions in the addon.\n. I am not that familiar with edl format. Just thought if there was a generic format we could add a ReadEdl method to the PVR api and request edl from the backends like vdr.\n@opdenkamp \nwhat do you think?\n. It calls g_graphicsContext.SetVideoResolution after the mode switch has completed. This calls ResizeWindow and refreshes the gl context. The issue was reported on ATI HD 2000, 4000, 5000 series. I don't have such a model but was told this has fixed the problem.\n. I removed xrandr from the header. The strategy is that if a user decides to change mode while XBMC is running, this mode becomes our new desktop resolution. So the mode is stored there. Do you agree with this?\n. Looks much cleaner now.\n. @elupus \nDo you still see any errors/problems?\n. @elupus \nCould you have another look on this? I changed:\n- SetFullScreen uses the fullscreen flag again\n- fixed RefreshWindow to work correctly in windowd mode\n. I am currently working on a closely related topic: SDL prevents rotating the screen left or right. so I have to ditch SDL for X11 video and window events. I think I'll have something for review after the weekend. I would attach it this PR.\n. I updated this pr, rotating screen with xrandr does work now. This required to get rid of SDL for video and events (SDL joystick is still there)\n- in this iteration sdl video can be disabled by configuring with --disable-sdlvideo\n  EDIT: the switch is now --enable-sdlx11, which is disabled by default\n- multi-screen setup might not work: I don't have such a setup\n- testing on DARWIN and GLES needs to be done\n- 30d38b2dfdc76b9a76334daa140ee199fb791277 is only temporary for testing\n. You are welcome if you want to invest the time. My idea was getting rid of SDL for X11 in a second round, this would make this macro obsolete. I didn't dare in this round but I see no need for SDL (X11) anymore.\n. @davilla \nNot sure what kind of a brain seizure I had yesterday. All your comments turned out to be correct. Check the \"squash me\" commits.\n. \"Can't we just drop the SDL path completely\"\nYes will do, with regard on all the other changes I have not merged into this PR it makes no sense maintaining both versions.\n. I have update the PR with fixes for multi-monitor setups. Considerations:\nOn X11 monitors can be configured to be on separate X-screens or to share the same virtual screen. I needed to introduce a new gui settings parameter: Monitor. \nXrandr allows to dynamically add modes, this happens e.g. when a monitor is connected. This raises the need for dynamic updates of resolutions.\nTODO:\nCalibrations are broken in this branch. The problem is that they are stored with resolutions which may change or even not be available when XBMC is started. Currently all resolutions are saved to guisettings even those which have no calibration changes. This is not ideal. I am looking for a solution which updates a resolution with a stored calibration at the time a relosolution becomes available. Ideas? Should calibrations have their own section in settings and saved instead of resolutions?\n. I think we can't favor a) over b) or vice versa. NVidia currently does not support xrandr 1.3 whereas ATI and Intel do. Secondly I would like to make it most comfortable to the user. In most cases they don't even know what a screen is but they can identify a monitor. Selecting a monitor implicitly identifies the X screen or the output of a virtual screen.\nUsers can't misconfigure this setting. On startup I check whether the monitor is present. If it is not connected, the output goes to the first connected monitor. \n. @davilla \nThe parameter Monitor is only for X11\nYou could do me a favor and have a closer look into 0840d6558d273afe135f880aae89c10535836a9f\n. > i assume you intend to squash some things together in this series. See some squash comments and some fixes on previous commits. Apart from some things i'm liking the look of it.\nCorrect. I expect some more changes from the review, then I will finalize the commits.\n. Great, thanks! I will reset my branch to yours later. \nI just noticed there's dead code in it. HAS_SDL_VIDEO_X11 does not exist anymore which makes WinSystemX11::CheckDisplayEvents() obsolete. It's a left-over from a previous iteration.\n. Right, I started with the SDL code and changed it a bit. The parameters of XGrabPointer are different to allow the mouse leaving fullscreen XBMC. LeaveNotify triggers an ungrab. I agree, this is still ugly and __NET_ACTIVE_WINDOW seems more elegant. Will you do?\nIs the current code broken? I have been testing with Unity (mostly 2D) and did not notice.\n. elupus, I have based this PR to your branch. \n. Ok. There are some issues I noticed but have not implemented yet in this PR:\n1)\nRunning XBMC without a WM results in a X Error message in the log.\nCWinSystemX11::XErrorHandler: BadAtom, type:0, serial:54, error_code:5, request_code:18 minor_code:0\n2)\nKeyrepeat is hard coded to 10ms. I think this value should be increased or made configurable.\nAre you going to have a look at this? Or do you want me to send you PRs to your dropsdl branch?\n. I have split the commits.\n. @elupus \nI have rebased and updated this PR. The first two commits are from another PR\n. This is a complete redesign of vdpau, hence I don't think anything can be cherry picked. It's really a pity, I would rather not using XBMC at all on Linux than without those changes.\n. @dteirney I will do soon. In the meantime can you just try my master?\n. Other decoders can benefit from the buffering but in the PR it is only enabled for vdpau.\n. np, I'll create a separate pr for the buffering when back from business trip next weekend.\n\nNote I want queueing working for non HW accel rendering too, maybe it already does with this pull i'm not sure.\n\nI see no reason why it should not work when being activated. But I have to run some tests to be sure.\n. I think I have identified the problem. Interesting that it did not show earlier. Need to think about a solution.\n. @Fneufneu hmm, I have not identified this problem. According to your backtrace it crashes when releasing a lock in CVdpau::Release. Do you think you can get the line in this method where this happens?\n. Do you think the issue is caused by clang or this pr? Any ideas how to track this further down? I am not familiar with clang.\n. @Fneufneu As mentioned I am not familiar with llvm but at least the name implies that it does or can do some kind of garbage collection. Is it possible to disable this? It looks like the decoder object is released though it is still ref counted. It is ref counted by structures 2 levels below the same object. Maybe the gc, if any, does not see this.\n. Most remotes like mceusb have mapped Channel up/down to pageplus/minus. There might be other buttons be mapped to skipplus/minus. In particular for pvr you would expect to switch channel with channelup/down, right? Users like me wondered why those don't work anymore. Re-mapping the remotes (lircmap.xml) may have other downsides. Many users have created their own mappings. Without this change we force them to reconfigure.\n. @jimfcarroll \nJust to make sure, although I have created this pr your are the owner, right?\n. I am not 100% clear about the comments in the header. GetDelay(): Is it the time it takes for the previously added frame to get audible or the next frame? There is no measure to determine how long it takes to get the next frame into the buffer of the audio device (buffer might be full). I would expect the calculation takes the previous frame into account.\nIs this correct?\nGetDelay() - GetCacheTime() = hw latency\n. I might be wrong but I think there is an additional problem with regard to e.g. CSoftAE::GetDelay\nI don't see the buffers being protected by locks. In particular when transcoding is active I do observe a lot of discontinuity errors caused by audio. What happens when data is taken out of input buffers and GetDealy is called before this data is pushed into another buffer?\n. @jimfcarroll \nAre you ok with this? It fixes a major bug and we should not wait too long.\n. I have debugged this in movie menu. Rendering did never stop because of 2 invisible controls always being dirty. Maybe this should be fixed at a different location but I am no GUI expert.\n. Confluence, movies, files. I had approx 15 items in this view.\n. It says GUICONTROL_IMAGE. It gets tracked because its marked invalidated but not dirty. So an invisible but clean control should not be added to the tracker, right?\n. I have updated the commit.\n. @jmarshallnz \nIs this ok now?\n. There's a couple of things obviously got broken. e.g.\n- toggle full screen, can't size window in horizontal direction\n- XBMC icon broken: caused by a change in CTexture\n- minimize window: alt-tab: XBMC stays in background instead of getting minimized\nA couple of others which I had already fixed:\n- listen to external xrandr events and take action: consider a user who starts XBMC, then turns on an av receiver or projector. This version does not update resolutions and can't switch to the new output\n- gui corruption on AMD is back. The correct sequence is to first change resolution, then refresh window on xrandr event. There was a reason why I re-created the window on this event.\n- It must be distinguished between systems running a window manager and systems which do not. If no WM is present the redirect_override flag has to be set instead of dealing with NET_WM*. Not doing this can decrease performance on NVdias ystems running vdpau.\n- I don't see the patch for the screensaver, If the scrren has switched off due to inactivity XBMC won't be able to activate the screen again.\n\nI'm a bit hesitant to the fix for separate screen's.\n\nThis is the use case which is even more likely than having a single screen. On NVidia systems you get tearing when having two monitors connected to a single screen.\n\nIt get a bit messy with extending resolution structure for this\n\nWhy? No need to load resolutions of a screen where XBMC is not displayed.\n. Don't have time to answer the other points, but this I know for sure as it was tested and proved. Weird but this is like it works in reality. (There are a couple of hundred users tested this already and I collected feedback)\nA tester:\nFinally:\n\"swa.override_redirect = False;\" gives many drops, how describes above.\n\"swa.override_redirect = fullscreen ? True : False;\" gives smooth picture in fullscreen.\nI tested twice.\n. > Right. He is using a windowmanager, which is redirecting even fullscreen windows. (many do). So we might have to go that route for all situation. I was just saying that it would not make sense to only do it for the non windowmanager case. It's the with windowmanager case that is problematic.\nNo, he was no WM (OpenElec). I have solved it by detecting the presents of a WM with this function:\nhttps://github.com/FernetMenta/xbmc/commit/02289bbb1e4cf6231d6dda243b7587fd16b0df91\nBTW: setting the overrive_redirect flag when a WM is present (like KDE), then it kills performance in that case.\n. Testing on Ubuntu 12.04 with Unity and Fluxbox:\n1)\ntoggle full-screen:\nUnity:\nWhen switching to windowed mode XBMC is horizontally stretched, docked at the menu bar and to the right border of the screen. I can resize and move the window only in vertical direction.\nFluxbox:\nThe origin of XBMC is outside the visible area of the screen, somewhere behind the upper left. I can resize the window in both direction but not move because the title bar is outside the screen.\n2)\nalt-tab\nThis is not working when XBMC is full-screen. When hitting alt-tab XBMC becomes the wall paper in the background. Same behavior on Unity and Fluxbox.\n\nBecause that is not how all other arches work. I don't mind changing it, but it must be done for all arches. I don't want a bunch of special cases for X11.\n\nDifferent architectures have different functions and terminology. Why confusing the user with naming an output a screen just for the sake it is called a screen on a different platform. \n. Not sure if the issues mentioned above are supposed to be fixed. alt-tab and toggle fullscreen do still not work.\n. I tested on Ubuntu 12.04 with Unity 2D and Fluxbox. Still the same behavior as described above.\n. Toggle full screen and minimize do not work on my system. Will investigate ...\n. I had to fix a compile error in WinEventsX11: CApplicationMessenger.\nWhen started in windowed mode togglefullscreen works, it does not the other way round. It becomes windowed but with size of full screen. No chance to resize then. \n. > Right.. that would mean that our resolution setup for windowed is getting b0rk some where. it should be respecting that.\nresolution is ok, it just gets not set. SetFullScreen just resets NET_WM_STATE_FULLSCREEN without doing a ResizeWindow.\n. ToggleFullScreen still does not work on my system. Ubuntu 12.04 with Ubuntu 2D. Window width/height is always 1855x1056 when switching from fullscreen to windowed (starting xbmc fullscreen). \nThe window attributes seem to be unreliable. Why not explicitly resize the window when entering windowed mode?\n. MCE remote seems to work fine.\n. I remember I had trouble with that too. Once fullscreen I found no reliable way to get back in windowed mode and ended up in recreating the window. SDL used 3 windows, mapped/unmapped the fullscreen and wm window, and reparented the gl window. I preferred to have a single window.\n. I will ask the ffmpeg devs about this.\n. @elupus \nYou were right, here is the answer from ffmpeg: http://ffmpeg.org/pipermail/ffmpeg-devel/2012-August/129720.html\nI have changed the pr as you suggested. It does a file based seek for input formats that allow discontinuity in timestamps.\n. I have changed it again. Although it does not handle all use cases for discontinuity in timestamps, it does at least handle this very common use case that about 10% of all tv recordings have a pts overflow and won't be able to seek or fast forward.\nThe strategy:\nAfter a seek (current function) it checks if the result is more than 10s off. Can't get worse, right? If so, it does a bisect seek (code taken from ffmpeg) and assumes a pts overflow.\n. > Also, seems weird that you have so many files with pts wraparound. It doesn't wrap very often.\nIt wraps every 26 hours on tv. Hence it is very likely that a recording does not seek.\n. I already tried byte based seek with percentage. Unfortunately the result was not very good, in particular when doing ff or rewind which uses seek as well.\n. @elupus \nI agree that ideally a fix should come from ffmpeg but I don't think we can expect one in the near future. This work around only engages if ffmpeg seek has badly failed.\nI cleaned this up a bit. Now after PVR is in I think this would make many (at least vdr) users happy.\n. Updated\n. @jpsdr \nMake sure your receiver is powered up before you start XBMC.\n. @jpsdr \nWhat is the status? Are you sure this commit breaks your system?\n. @Memphiz \nCheck ticket 13224, the problem is in master. Software rendering on Windows is broken,\n. A resolution is defined by a string like this \"720x480 @ 29.97 - Full Screen\". I would assume that this string changes when they switch profiles. Unfortunately all links in the post are expired.\n. The vector m_calibrations is not cleared in LoadCalibrations(). This can lead to duplicate entries if settings are loaded more than once. I am not aware that this can happen.\nNevertheless, it is a good practice to do so. Will provide a fix tomorrow with a check for duplicate entries. This way users get rid of duplicates without having to manually edit guisettings.\n. We have so many posts in the forum regarding refresh rate. How about giving the user more insight on what's happening behind the scenes? Example:\n- start video will bring up a selection dialog with available refresh rates (+ no change), bast matching preselected. One big advantage would be that on NVidia (Linux) users will see that there is only 23.971 instead of 23.976 as long as they don't have configured a proper modeline.\n- stopping a video will switch back to look-and-feel-resolution\n- refresh rate dialog can be opened by button on video OSD (or hotkey)\n- dialog can be configured to show up or not, default is yes\n. At least bring up a big fat warning window if refresh rate does not match exactly :) \n. > Asking for the refreshrate is not needed - XBMC already is able to find the correct refreshrate.\nOnly if you have a proper setup which is very often not the case. (At least on Linux where you have edit xorg.conf)\nOk, this is off topic here.\nSo if change of refresh rate no longer solely belongs to GUIWindowFullScreen, shouldn't the call to CGraphicContext::SetFullScreenVideo removed from there and hooked into start/stop player? E.g. PVR allows to start videos not fullscreen. Currently you have the switch when entering full-screen.\n. That's because SetFullScreenVideo is called by GUIWindowFullScreen and the minimized PVR view is a separate window. \nI was trying to raise this question: Does switching refresh rate belong solely to GUIWindowFullScreen? This PR suggests no, hence I would remove the call from there and call it whenever player is started/stopped.\n. check out #1231\nThere are (and should) no calibration settings for windowed mode. Your original problem mentioned in the ticket 11861 will be fixed by not grabbing the mouse.\n. > Too bad but until then I got my patch. It seems kind of hard to help in open source, this is not the first time something like this happens to me.\nAny help by the community is appreciated. Sorry that your work kind of overlapped with work being in progress (you can't know about). You always have the chance to get feedback on your ideas in the development section of the forum. \nIn this case I think it is better to fix the original problem instead work around it.\n. BTW: this only my view on this topic. Does not mean that other devs share my view :)\n. Did some investigation. Changes in BaseRenderer seem to be wrong. I always get a wrong refresh rate chosen.\n. This will be fixed in a second step after SDL has been dropped (merge of elupus' branch dropsdl).\n. > Thoughts from the team? Who's right - user or asound.conf? Go with GUI setting or asound setting?\nUsers often have no clue what those settings are all about. Ideally we should only allow reasonable settings in the GUI. asound.conf is system configuration and should not be overruled by a user application.\n. In my opinion this is a very good suggestion and not only for audio. I often thought about checking entire system capabilities at startup and not giving users the chance to activate e.g. vdpau on an Intel system. \nThe time required for this we would get back by not having to answer all those questions in the forum :)\n. I remember a problem with a huge audio offset on a iptv channel. Might be the same issue. I don't think they violated the spec of rts streams (haven't had a chance to look into the spec myself). The recording played fine in VLC.\n. I read the report in the ticket and see no reason why switching back to a lower refresh rate should not work. The problem might be elsewhere.\nA sample would be nice without the need to install malware like vuse.\n. @jpsdr \nThe actual problem of your sample is that time stamps are quite messy. Once refresh rate has switched to 23.976 it takes a while until pullup correction detects long enough periods needed to switch back.\nI won't prevent switching to a lower refresh rate for streams with clean time stamps. A better way of fixing this might be to observe the number of frames which don't fit into current 1/framerate and switch to a higher refreshrate above a given threshold.\n. Maybe we are thinking much too complicated here. We are struggling to determine whether a video is playing or not, dealing with selected streams.\nHow about asking renderer: CXBMCRenderManager::IsConfigured() ?\nAs long as renderer is configured, we bring to display what renderer has to offer.\nbool CDVDPlayer::HasVideo() const\n{\n  return g_renderManager.IsConfigured()\n}\nThat would work during a channel switch and visualization for audio should work as well.\n. I have been testing this for a while: https://github.com/FernetMenta/xbmc/commit/3d95c5ca78ac35dac1f1887197efba171555f9fa\nFrom a logical point of view it makes most sense to fix CDVDPlayer::HasVideo(). It is dvdplayer which calls renderManager.init/uninit. Hence between those two calls it clearly has video.\n. I think this has to be fixed in several places. Even if a change in application may fix this particular problem, player::HasVideo is not correct. It might be called by a skin, right?. Yes, I would fix this method in all players.\n. I think so, it just puts it to the behavior we had before\n. As far as I can see this patch does still sacrifice existing well working behavior for a new one. Note there is plenty of material with variable frame rate which does not show this bad behavior. In this cases you want to have refresh rate switched to a lower rate regardless how often this occurs.\nBTW: We use gnu code style, this is no tabs.\n. > you'll see that after a while (when \"m_iFrameRateLength\" reach 128, so after 8 streps), frame rate is apparently considered stable, and not adjusted again. \nIndeed, IMHO this isn't correct either. Considering your second case and the opening is long enough it won't switch. All I want to say is that we should distinguish between those 2 cases you mentioned and handle both differently. I played your sample and the switches just occur by chance, actually the frame rate is changing all the time like you said. For those cases it might be best to switch to highest available frame rate.\n. Playing your sample you can observe that pullup correction has trouble, it continuously loses the pattern. Don't you think this is sufficient to distinguish those 2 cases? \n. @jpsdr \nThanks for the update. Just to inform you that this is not ignored, people are just busy.\nIn the meantime you can improve your git skills :)\n. Shouldn't ToggleFullScreen be better blocked in graphics context when running standalone?\n. @vdrfan \nWe have just discussed this in the Linux forum. Running XBMC standalone needs special handling for X windows, setting the override redirect flag. Not doing so results in poor rendering performance. That means you can't launch other gui application when running XBMC standalone. For those cases you need a window manager.\n. see #1175\nIt currently checks for standalone in order to determine if override redirect flag should be set. A different approach would be checking for a window manager: https://github.com/FernetMenta/xbmc/commit/b1369f47c363b5ae901f7ae26321d53729870df8\nSome users do weird things, e.g. launching a window manager in a script to bring up a browser. If no WM is present, no other gui applications should be launched nor XBMC minimized or windowed.\n. @elupus ping, do you have time to review this?\n. There's two things it improves when doing a weave:\n1)\nQuality:\nIt renders both fields to the fbo at the same size as source. Then it renders the fbo (holding both fields) and does upscaling.\n2)\nPerformance:\nIt first collects both fields into the fbo, then renders the fbo only once.\n. Ok, then we need to distinguish between weaving/scaling of interlaced fields and fields of a progressive frame. The latter needs scaling after the fields have been combined.\n. Yes. Then I keep the first and 3rd commit in this PR and move the second (progressive weave) to #870?\n. @bobo1on1 \nIt won't go through the fbo it no upscaling is needed. Nevertheless I have written a prototype for this kind of shader (see link above), but then dropped this idea. If you think using a shader is better I have to put the pieces together.\n. @elupus \nI dropped the change on weave and created a struct for the fbo related parameters.\n. At least on Linux, I have not tested on other platforms.\n. > I really think we should adjust video for a residual error.\nThat would be the mode when audio clock is master, right?\nWhen video is master the clock tries to sync to the middle of 2 vblanks. This fineadjustment would work against a discont issued by audio and it won't ever get in sync.\n\nDo I see correctly that this piece of code adds some silence every 2 seconds unless the packet is dropped/duped?\n\nWell, if this happens something is wrong with the setup. On my system it adds silence only at the beginning of a stream. But if you are concerned, what about adding just a fraction of the last packet? This won't harm more than it already does.\nIn addition we can implement a kind of a fail safe mode. If drop/dupe happens too often within a given time, we can switch to audio clock as master (DISCONT)\n\nWhat is it that has 64 ms frames?\n\ne.g. Sintel-Bluray.iso or all my HD channels.\n. I only measured duration, the argument given in HandleSyncError and used for calculation of skipdupecount.\nHow do you think about making skipdupecount a float?\n\nBut only if it error has been stable for a long time and we haven't added silence previously for a even much longer time.\n\nUse that for skip/dupe in general? Users often don't have a matching refresh rate or run e.g. at 60Hz. Should we fall back to DISCONT in case the error gets not stable?\n. I will create and post a log during the day.\n. Here is log playing Sintel, audio is AC3: http://xbmclogs.com/show.php?id=8310\nI logged out duration given in HandleSyncError with is 64ms. Means a/v sync for this material is all but good.\n. I have updated the PR. Now skip/dupe will only happen if the error has stabilized.\n. hmm, then all my HD channels must be out of spec. I don't think so.\n@Albinoman887 \nCan you post a debug log.\n. CAEUtil::DataFormatToBits returns 8 bits for AC3. Is this wrong?\n. was fixed with #1428\n. @Albinoman887 \nThis is a dev space. You are welcome if you can contribute something to development otherwise please stay silent.\n(SoftAE handles entire ALSA)\n. @DDDamian \nI have update this. The lock can't be kept while writing to the sink. Needed an additional method for waiting until AddPackets won't block.\n. I was thinking about maintaining a counter in the audio engine for the delay instead of accumulating delay over all buffers. When player adds a packet to the engine it increments the counter by the duration of the packet (observe resampling speed). Then transcoding can happen or not, when the audio engine puts the packet into the sink, the counter gets decremented.\nGetDelay would return the counter + delay of the sink.\nAs far as I can see, currently resampling speed is not taken into account, right? At the beginning of the queue a packet might have a different duration than at the end.\n. > The resampler will change the number of samples but not the duration \nI thought duration can change as a method of a/v sync. Wrong?\nI am still measuring a variance of average audio sync error up to 20ms. Even with an increased interval of 2 secs for calculating the average error. \n. @DDDamian - This PR fixes DTS-HD to AC-3 on my systems. (HDMI 2.0, only AC3 for pass through).\nI noticed that I have missed the lock in transcoding stage.\nI consider it as absolutely required to have those locks, otherwise GetDelay would always return incorrect values. Do you want me to try your fix on my systems?\n. @DDDamian \nGreat, seems to be almost fixed by your patch. I am still measuring a square-wave signal when looking at the audio sync error in DVDPlayerAudio. It has an amplitude of about 20ms. I don't think this is caused by the missing locks because it loos like a clean square-wave.\nThis causes skipped packets followed by duplicated ones.\nCurrently the average error is calculated every second. Increasing this time to 2 secs smooths the average error and all is fine.\nTesting on Linux (ALSA) HDMI 2.0, only AC3 as pass through. Testmovie: TrueHD.\n. @DDDamian \nI tested with \"adjust refresh rate\" and \"sync playback to display\". Video master, drop/dupe.\nI think I found the reason for the square-wave: Dropped packets were added to the pts output and duplicated packets not. See: 038d1ff3c37b39a5a7fbf5287508bb9c3ca7c316\nThese 2 patches (038d1ff3c37b39a5a7fbf5287508bb9c3ca7c316 + https://github.com/DDDamian/xbmc/commit/55dd5dbd7270158ad1c4b9da46cf16931ca8d92e) fix the problem on my systems.\n. @elupus \nMakes sense to me. Would you do this change or do you want me to update this PR?\n. It's more obvious when looking at the other end of the queue: CPTSOutputQueue::Current()\nIt pops of current entry if absolute time >= timestamp. Consider a case where a packet is duplicated a thousand times, this function returns pts of packet +1001. It should pop off an entry when absolute time passes front+1\nwhile( !m_queue.empty() && CDVDClock::GetAbsoluteClock() >= m_queue.front().timestamp )\n  {\n    m_current = m_queue.front();\n    m_queue.pop();\n  }\nEDIT: disregard this post, too early in the morning.\n. @elupus \nI think your code is correct. I did not consider the case that pts would jump back because I tested with packets of 0.83ms duration.\nThe reason why I still see lots of drops/dupes is the size of the entire audio queue. GetDelay returns values around 1 sec. So if the interval of calculating the average error is 1 sec too, skip/dupe corrections are not considered for the next average error. Increasing the interval to 2 secs makes playback fine.\n. elupus, I have tested your new version. First I was looking only at skip/dupe messages in the log and noticed no difference to your last version.\nBut the a/v error on the codec screen is very jumpy with new changes. I would say it jumps between a range of 70ms, last two digits are not readable. (this test was done with AC3 pass through)\nWithout the last 2 commits the counter is very stable.\n. I get best results with first 3 commits of https://github.com/elupus/xbmc/compare/dvdaudio and increasing interval for average error calculation (DVDPlayerAudio) from 1 sec to at least 2 seconds.\n//check if measured error for 2 second\n  now = CurrentHostCounter();\n  if ((now - m_errortime) >= m_freq * 2)\nIf elupus includes those lines in his change, this PR is obsolete.\n. @elupus \nIn case you are busy and want me to pull your 3 commits into this pr, just let me know.\n. updated and rebased. @elupus please hit the button if you are fine with it.\n. @elupus \ncan we merge this?\n. Unparsed streams go to player now, right? \n@elupus don't you think it is a good idea to ignore streams until they are parsed? In the past we had trouble with e.g. incorrect hints coming from backends and made the system crash.\n. Thanks for explaining this. I was not aware of those constraints.\n. Will test this as soon as I have a chance. From what I can see so far is that either for tvheadend or vdr an immediate re-open will happen. tvheadend reports a height of 1088 on hd channels whereas vnsi reports the cropped height 1080.\n. I have tested this for 2 evenings on my living room box (vnsi). Apart from the log mentioned above no negatives. Although PVR streams don't have profile and level set, the increase of the change counter does not harm when done on the first packet.\nI like this idea of parsing the streams very much. Maybe in a next step only validated streams can be accepted.\n. looks like a duplicate of #1227\n. This looks very similar to what I had in the first approach: http://ffmpeg.org/pipermail/ffmpeg-devel/2012-August/129660.html\nThe change in ff_gen_seach breaks the index (follow discussion on ffmpeg mailing list)\nI don't think we can expect a solution from upstream soon. This is why I have created a fallback method if search fails.\n. A configure in LinuxRenderer invalidates the render targets, also render method might change due to not supported format in hw acceleration. The deletion of the render targets cause that flicker.\n. RenderUpdate just clears the display and does nothing else on first pass. Unfortunately the reason for this is not documented, but certainly there was one.\n```\nbool CLinuxRendererGL::ValidateRenderer()\n...\n// if its first pass, just init textures and return\n  if (ValidateRenderTarget())\n    return false;\n```\n. As far as I can see is that OpenDefaultStreams() triggers general reset of video player. A DMX_SPECIALID_STREAMCHANGE event is fired e.g. when there is a new subtitle stream. I don't think we want to reset video player in this case.\n. @xhaggi \nThis is wrong for several reasons.\n1)\nAs @opdenkamp already pointed out, you can't block in Open\nIt might take some time for the backend to tune to a channel. Normal demuxer read can be aborted but I guess you are stuck in Open if the backend does not manage it to tune the channel.\n2)\nStill no solution for changing streams (e.g. subtitle stream is added during playback)\nThere is no guarantee that all streams are ready on first Read()\n. Those changes seem to slow down navigation in pvr window. I noticed that a lot of remote button pressed were not recognized. Scrolling down the channel list was very slow on my system. \n. @Montellese I noticed some strange behavior when I was testing this. First I thought something is wrong with my remote, then I encountered the dead lock and tracked this down. That's all I know at this time.\n. m_State.canseek is only set for pvr streams. I am wondering why it is needed anyhow. Why not just calling CDVDPlayer::CanSeek()?\n. Just did, it resets to false. Same as canpause.\nShould those default to true?\n. This is ugly. If a variable is desired, shouldn't this be set for all kind of streams in UpdatePlayState?\nbool CDVDPlayer::CanSeek()\n{\n  if (m_pInputStream->IsStreamType(DVDSTREAM_TYPE_PVRMANAGER))\n  {\n    CSingleLock lock(m_StateSection);\n    return m_State.canseek;\n  }\n  else\n    return GetTotalTime() > 0;\n}\n. This would make consitent use of canpause and canseek: https://github.com/FernetMenta/xbmc/commit/62546add37ad3e965cbece6ed77f29714ba352cd\nDo you want me to update the PR with this?\n. @elupus \nI have updated the PR. Can you give it a final check?\n. glFinish kills performance. This would be called during playback when bringing up the video OSD.\n. There is always a texture to delete while video is playing. What's the advantage of glFinish over this solution? It aligns hw textures with what TextureManager is doing anyway.\nNote that this change has already been proven by thousands of users.\n. > Add a glBindTexture(GL_TEXTURE_2D, 0); in End() that likely solves the issue you are seeing.\nI tried this, it does not solve the issue.\n. @elupus I did not try too many things because I had a similar problem with vdpau interop. With interop the vpdau video surface is the texture. E.g. on pvr channel switch I encountered gfx driver freezes when the decoder was released (which also deletes the texture) before all queued surfaces were rendered, means actually processed by the gl.\nSo I searched the code for glDeleteTextures and came to this place. First I put in a glFinish which did the trick as well, then came to this solution.\n. @axmhari \nffmpeg can seek before the point where you got your initial_ts. I struggled with this too. Check #1227. I solved it in player with:\nif (m_bPtsWrap)\n  {\n    if (pts < m_iStartTime && pts < m_iEndTime)\n      pts += m_iMaxTime;\n  }\nI calculated EndTime with 1.5*duration to be save.\n. @elupus now it requests extradata after a stream change.\n. @elupus I have updated the PR according to your comments.\n. afaik iStreamIndex in props.stream is contiguous. At least this is true for vnsi. I am not sure whether the order of streams in props can change, then stm = m_streams[i] would fail.\n@opdenkamp do you know?\n. @elupus\nI dropped unneeded StreamIdx in order to make sure the array of streams has no gaps. \n@opdenkamp \nPR 76 in addon repo corresponds to this one. Can you merge both when you bump API version?\n. You take care of this right? #1690 needs a version bump as well.\n. @opdenkamp fixed, thanks.\n. I am just having another case in the forum where a user got a nightly build of XBMC but not for the pvr-addons. Why making our lives and those of the users hard with this confusion?\nIn case of nightlies I would include the addons in the packages. Could be changed once we have a release.\n. > and let a negative offset do a backwards seek\nI think this is not how it works. Time is actually the time in ms player gets from dvdclock. It does not do a relative seek. ffmpeg demuxer substracs a starttime from the timestamps it gets from the stream. This is currently not done in pvr demuxer.\n. Sorry, talk was about pvr api call. Since we get pts (PCR) from the backends, I would recommend that we use this absolute value for seeking. A relative seek would require to take the buffered packets into account.\n. > but then we don't need the boolean param, do we?\ngood question, but I have no answer yet. I am not sure if we need a new seek function anyway on the pvr api at this time. We already have SeekLiveStream and SeekRecordedStream.\nI see it like adamsutton, it's hard to tell without a a prototype.\n. @adamsutton why do you want to use the realtime stream and control its speed? What's the difference between playing a recording and playing out of a \"timeshift\" buffer? I think it's very similar. Maybe it makes more sense to extend the pvr demuxer by adding functions to ask the backends for packets.\n. @wsoltys I put it on my list.\n. > What backend is this from? \nVDR\nWhen changing channels we dispose/re-create the pvr demux client. So OpenDefaultStreams is actually called twice. The first time is does reset.\n. > no packet in queue is lost.. but they can get consumed to find a new keyframe\nWhat happens with the audio packets already sent to the sink? I don't see the sink being drained on reset.\n. @DDDamian can you help checking on what's happening when audio codec is reset?\n@elupus \nEven if there was an I frame right after the call to reset, I still see those problems:\n1)\nAudio has sync frames as well? Don't we lose packets on audio reset?\n2)\nA single drop of a video packet causes slight disruption, in particular for interlaced material. Vdpau uses a couple of past and future frames for high quality de-interlacing. Hence a reset causes those frames to be lost.\nWhy do you want to reset players for a case where it is not needed? \n. > What audio codec do you see the disturbance with?\nAC3 pass through. Last time I measured on audio I got values of around 1 sec for GetDelay. I noticed those \"ask for new packet but...\" after stream changes so I think there must be packtes get lost.\nAudio often changes from 5.1 to stereo, e.g. during commercial breaks, If this happens I see the sink being drained. A change of number of audio channels might occur at the same time as a stream change (drop of original language). Dropping packets do harm in this case.\n\nI just want to figure out why you see such a big disturbance\n\nvnsi currently does not guarantee that there is an I frame after stream change in general, it only does so when changing channels. vdpau holds a couple of frames for de-interlacing.\n. > So can we guarantee that the stream change event isn't caused by a channel change, or that we were reset before?\nWhen changing channels we release the pvr demux client and any previously parsed data. Hence the first stream change event after a channel change has occurred triggers a re-open of codecs because hints will differ.\nCurrently we even open codecs a second time after having parsed data.\n. stream change event is fired by DVDDemuxPVRClient.cpp and it applies to all backends which use this demuxer (tvh and vnsi). The other addons use different demuxers and I don't think e.g. ffmpeg does set this. That's an additional challenge. can ffmpeg demuxer observe/expose PMT changes?\nMaybe we should distinguish between first and following stream change events by adding DMX_SPECIALIZED_CHANNELCHANGE and set this on first stream change?\n. > The player is making a new audio stream at that point - why delay for a couple of seconds to drain everything?\nThere is no button pressed. The same audio stream changes e.g. from 5.1 so 2.0 or vice versa. That happens on every commercial break. If packets are dropped, audio player might stall and dvdplayer has to go in a special buffering mode for real-time streams.\n. Talk is about real time streams. Flushing buffers causes the player to stall. You don't want to see the picture freeze when you select a different audio track, right?\nWhen a different audio track is selected, audio player already drains the sink. This is not the problem. It looks like that a reset on audio codec does flush buffers. What happens if a stream changes from 5.1 to 2.0 and at the same time audio codec is reset?\n. @elupus I need your input on some thoughts. The current status:\n- only tvh and vdr signal DMX_SPECIALIZED_STEAMCHANGE to player through pvr demux client\n- ffmpeg demuxer seems not to expose a change of PMT. I found a patch from the guys at myth, they register a callback function in ffmpeg in order to get notification\n- I don't like the current implemtation of STREAMCHANGE becuase it requires a separate packet.\nHow do you think about adding a method to DVDInputStream (IChannel interface):\nbool HasStreamChange(uint64_t current_dts, uint64_t previous_dts, bool &reset)\ndvdplayer calls this method after having received a packet.\npvr clients could notify the player through input stream. When using \"timeshift\" you can even navigate back and forth over a PMT change.\n. > But it would nice to get ffmpeg to output a pmt change.\nI will ask the ffmpeg devs for an idea on this.\nWhat do you mean with \"it doesn't fully solve the problem with number of channel change\"\n. I don't like the buffered packet either, this is why I though putting this info somehow in the inputstream and the player queries this before processing the packet.\n\nIt would be much better to output a packet from ffmpeg on a separate data stream containing the stream change\n\nThis indeed would be nice but I have no idea how to do this. The functions inside ffmpeg which detect pat and pmt are callbacks itself. I have no clue how to stop reading after a pmt and put this packet into a separate stream.\n. Thanks for the hint, will look into it.\n. @elupus I am facing the following problem: at the time ffmpeg hits a new pmt, potentially new streams have not been parsed. Firing a DMX_SPECIALIZED_STREAMCHANGE at this time does only work when streams are dropped.\nI think we need to fire the event also after CDVDDemuxFFmpeg::AddStream was called like in this pr. That again raises the problem with the buffered packet.\nI could defer the event until e.g. all stream have reset AVSTREAM_PARSE_FULL but this is going to get ugly in ffmpeg. Wouldn't it be better to fire the stream change on every change: streams added/dropped AND any change of a existing stream?\n. next round. There's an error with the change signal in input stream, player should continue and process packet.\n. @elupus  I have update the pr. Now ffmpeg does not stop after a pmt. Potentially late packets from a previous pmt get filtered out in demuxer. Are you ok with this? It prevents inactivated streams from being activated again.\nAs you suggested ProcessStreamChange adds new streams and inactivates those which are not in the pmt.\nThe concept seems to work though the code needs to get some clean-up. \n- What do you suggest for the stream id of the data channel? Zero or a negative value. \n- How should the coding of pids into the data section of the packet happen? Should we add some preceding characters like 'p' 'm' 't' followed by 16bit values?\n. updated. You are right, looks much cleaner now.\n. > Any stream that is no longer available should then be marked with discard by ffmpeg or similar that they have ended\nThat works for the case when a stream ends but what to for the case when a previously ended stream becomes available again. AV_DISCARD may have been set by the user, hence we can't reset it on a pmt change.\nOf course, the user application can set the flag again as desired after the the pmt change event. This approach makes sense to but it changes (API) behavior slightly. Should we go for this? \n. Having such a flag would be great but requires an API change.\nHow do you think about keeping the stream indices in AVProgram consistent with the internal Program structure in mpegts? Keeping indices of inactive streams in AVProgram looks wrong to me.\n. updated.\n. @elupus is this something you consider for Frodo?\n. Updating AVProgram was accepted upstream: https://github.com/FFmpeg/FFmpeg/commit/4c41fc88df5c507e0f239b4c16f85573f7b49702\nOpening a data stream for pmt changes would break ffmpeg encoding. We could just check AVProgram for a change before reading.\n. This is currently tested by MediaPortal users. Together with https://github.com/FernetMenta/xbmc/commit/bf753ebec5f231bc7d85b6404c0841cf0307422d it enables fast channel switches. So far it looks ok. Needs review by elupus.\n. Both ffmpeg commits are taken from upstream and are obsolete after we got the update. One of them was submitted by us, the other one is a patch for something which got broken by the first one.\n. @elupus I push an update. Please check if I interpreted your comments correctly. It's only compile tested. I will run more tests once you are ok with it in general.\n. I have tested it with a couple of ts files with pmt changes and also a file with an unknown stream. \n. Updated. Now m_streams is a map with ffmpeg idx as key. On a pmt change all streams are disposed and re-created.\n. Pulled your changes, rebased, and tested. I squashed 2 little changes to one of your commits: 58f9472280f78b8be4bc55a9953c7a2bc24a47c6\n- use of GetStreamInternal in Read(), was GetStream\n- typo in comment: breif -> brief\n. see also #1655\n. With this patch bad devices will always show up in the selection menu?\n. I would prefer an advanced or gui setting which can disable this and maybe other unreliable hw checks. \n. I can take the gui part if no one else volunteers.\n. @pieh what about the gui part? IMO it's mandatory to merge this too.\n. hmm, this gui bit is a trivial change and I see no reason why ruin the user experience just in favor to be strict on frozen master. \n. @pieh in case you refer to a perfect solution I agree with you. But I don't think this change would break anything:\nhttps://github.com/FernetMenta/xbmc/commit/9608bdc6491b6b66ebeec8fa453361a76ebb22a1\nIt's not perfect but way better than the current state.\n. @opdenkamp this mainly affects pvr and pvr addons need an update of addongui headers. As far as I can see the code came with merging of pvr. Who should I poke for review?\n. This change makes it possible to add the GUIRenderingControl to skin xml used by an addon. Currently an addon only has access to spin, button, radio, and label.\n. > Are you doing the rendering with DirectX or OpenGL inside the add-on?\nI have both versions and tested with DX on Windows and OpenGL on Linux:\nhttps://github.com/FernetMenta/xbmc-pvr-addons/blob/osd/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp\nI will rework the pr according to your comments.\n. @opdenkamp as discussed on irc, I have added a version string to the lib which is checked by pvr.\n. Please no bug reports on github. btw. you are running not mainline version.\n. Yes, I am sure you fixed it. \n\nI wonder if it's worth trying to fix the root cause as well\n\nI think so but don't have a good idea. \n. I can't find those docs. Here is an example from ffmpeg: http://ffmpeg.org/doxygen/trunk/doc_2examples_2decoding__encoding_8c-example.html\nSee audio_decode_example.\n\nAnd some formats MUST have them.\n\nI am curious, can you name them please.\n. I have updated the PR to just exclude LATM codec and going to prepare a patch for ffmpeg. \n. It's already fixed upstream: http://git.videolan.org/?p=ffmpeg.git;a=commitdiff;h=d039b6074ca68da9b6dc88d8bb40056fee9fecb6\nI will backport this, ok?\n. I am traveling. Will do testing on Saturday. \n. I have been trying to reproduce this issue (without this patch) but no luck so far. After all attempts I have working audio. My logs do show the alsa error as mentioned above but I don't see this:\n\nCSoftAE::Resume - Resuming AE processing\n\nThis happens when the system is suspended by an OS call: TMSG_EXECUTE_OS. So one of the first things the system does when coming out of suspend it to resume AE. Maybe too early.\n. I would be interested what happens when removing CAEFactory::Suspend()/Resume from ApplicationMessanger. Obviously not needed on my system for suspend/resume. Would that cure the issue with OE?\nEDIT: Just for testing.\n. What else calls those on suspend?\nCSoftAE::Suspend - Suspending AE processing\nCSoftAE::Resume - Resuming AE processing\n1326 ...and power saving.\nAll logs olympia posted show this. My system which never fails on suspend/resume does not suspend audio. \n. @davilla this\nxbmc/powermanagement/PowerManager.cpp: CAEFactory::Suspend();\nis added by this pr.\nThis log was taken without this patch:\nhttp://xbmclogs.com/show.php?id=25955\nLeaves one of those for calling CAEFactory::Suspend() on suspend: \nxbmc/ApplicationMessenger.cpp: if (!CAEFactory::Suspend())\nxbmc/cores/ExternalPlayer/ExternalPlayer.cpp: if (!CAEFactory::Suspend())\nxbmc/interfaces/legacy/ModuleXbmc.cpp: CAEFactory::Suspend();\n. Well, currently this options is for tech geeks. As elupus pointed out multi-threaded decoding is error prone and needs to be optional. IMO it's an expert setting and fits perfectly into advanced settings (currently).\n. @elupus it's more than a year back but I think I remember that disabling hw acceleration based on profile information was meant to be an intermediate solution. VDPAU supports chroma type 422. With the current code it won't get a change to decide by itself.\n. Note that SDL on Linux will be history soon and it's already history for OE 3. WinEventsX11.cpp uses codes from X11/XF86keysym.h and does the mapping to XBMC_Keys. I think we don't have a XBMCK_SLEEP, do we?\ndefine XF86XK_Sleep            0x1008FF2F\n. @jhsrennie see #1175 SymMappingsX11[][2] in WinEventsX11.cpp\nI was not aware that you are discussing this for Frodo.\n. @opdenkamp OE has already dropped SDL. I add the mapping to WinEventsX11 once this is merged and XBMCK_SLEEP is available.\n. I would avoid setting default delays as long as we have not fixed other issues like wrong calculation of audio delay. For pass through audio is LATE approx 30-50 ms at 50 Hz on my system. I am quite sure that this is not caused by decoding (DAC) because I lose 1-2 secs of audio when config changes e.g. from 5.1 to 2.0. (commercial breaks)\n. This is SoftAE (ALSA) with AC3 (no transcoding). When using pass through config changes are smooth but audio is way too late (sometimes > 100ms). When using no pass through audio is in sync but on most commercial breaks the last 2 secs of audio are cut off. Seems that draining does not work properly.\n. @elupus I asked someone with almost identical setup than mine for his observations and he does not notice this huge audio lag when using pass through.\nWe both have NVidia GT520M, the difference is that my Samsung TV only reports 2 channel audio and 48khz.\nHis LG is capable of 6 channels and hbr.\n. Yes we do.\n. Sorry, I don't follow. How is display time related. For seeking we need dts. For demuxers time is set to GetClock which already reflects time on screen. \nIMO this is already over-complicated. There's been two fixes for this within the past 2 weeks and its still broken. Why bothering with offsets when all required is simply taking the time on screen. Just like ffmpeg input stream does it.\n. Ok, so for absolute seeking by clicking on the progress bar display time is needed, right? The dilemma for pvr streams is that display time is actual time and not accurately related to dts. \n. now it corrects display time by the timespan in the queue if clock source is not ETIMESOURCE_CLOCK\nUpdateCorrection takes care that we don't have gaps in the queue right? So we don't need to consider this?\n. > so we can actually always get the current display time in sync with what players are displaying.\nhmm, video player actually does not display anything. To make this strategy work properly we would need to tag DVDVideoPicture and render buffer. \ndvdMessageQueue.GetTimeSize is not accurate either, why not asking RenderManager? It knows best what timestamp we have on screen.\n. So the strategy is tagging the packets with display time and read those values back in UpdatePlayState:\nstate.time = m_dvdPlayerXXX.GetDisplayTime()\nDo I get this right?\n. I have updated the pr. Could you have a look?\n. @elupus This works for me on demuxer streams, dvd, and bluray (at least the scenarios I have tested)\nI need this working, otherwise it's useless going ahead with time shift on PVR. \nb979d144950db3714ac387ec1397eb85f0b402ba fixes another long known issue that rewind did go wrong speed. Syncing players on catch-up seeks sets the clock and causes rewind going much too fast.\n. @elupus I have updated the pr according to your comments. I add the time it takes for sending back the structure to display time. Is that what you meant? What can block dvdplayer message processing that this matters?\n. Great, will test it tomorrow.\nThis does also consider m_offset_pts, right? Just encountered a problem while testing without considering it.\n. I have tested with some short 2-3 minutes samples. A small step forward (configured to 10s) brings me to end of file and terminates playback.\n. Normal files. I tried a short mkv and a ts.\n. 1)\nI tested with a keyboard. Hitting key \"period\" sometimes results in StepForward, sometimes in SkipNext. Not clear to me when what action is taken. Sorry for confusion caused by this. \n2)\nsee comment in code.\n. This works for me after a first couple of tests (and looks much better than what I had before)\nAs discussed with @opdenkamp we should revert c1f11e6580f8b9ede2637a6981c6f7e53b60dff1 once you have injected this.\nI am working on time shift for vnsi and will do intensive test with this.\n. Your problem now: \nm_realSuspend; /* this flag is needed to unload a sink without calling OpenInternal again\nThread 1 hangs in CSoftAE::OpenSink() waiting for m_reOpenEvent. This is fired in InternalOpenSink which you have disabled on suspend.\n. @fritsch maximum respect for not giving up. A little work on AE always makes you happy :)\nIf nobody reports any regression I would vote for getting this in.\n. fritch, with AddPackets you digged into one major flaw of SoftAE. One the one hand it should block in AddPackets waiting for the interrupt and feed the buffer of the device. But this blocks the thread from doing all its other duties. Actually we need 2 threads here, one for feeding the buffer, the other (event driven) doing all the other tasks.\nBut this is out of scope of this pr.\n. Blocking in FlipPage is indeed bad. I have solved this in #870 (add buffering) but not yet adopted to OpenMax. Would you have time to do so after I have rebased?\n. Yes, I see the difference but also strong similarities. In case of aml the video buffers are provided by the underlying system (right?), for the other platforms they have to be provided by renderers. Video players should focus on decoding and need to be decoupled from presentation stage. This is the job of RenderManager.\n. I think the majority of users have single tuners and would see regression from this change. You would need to ask the backend for this capability first.\n. Wouldn't make it more sense just to refuse scanning when livetv playback is active?\n. ok, now it updates dts directly.\nI added another fix. I think, now that we send state down to players, we need to update player state with reference to dts as well. Otherwise we no updates when filling the queues e.g. after a seek. \n. elupus, I changed it again to make it work. Are there any down sides when not updating state.dts to NOPTS_VALUE?\n. Currently there should be no difference using BYPASS because this method does not activate buffering. I was wondering if it makes sense letting RenderManager know the \"bypass\" buffer size. I tested on RPi and noticed that the recent changes on OMXPlayer makes the GUI drop to below 10fps while the video is running fine. \n. I have been running this for more than a year with sync playback to display on. Calculation of presenttime is moved from DVDPlayer::OutputPicture to RenderManager.\n. Darwin uses dvdplayer and LinuxRenderer, right?\n1) does it compile?\n2) any regression or improvements for sw decoding\n3) check RENDER_FMT_CVBREF, buffering is disables for this format in DVDPlayerVideo::OutputPicture\nenabling it may require the codec to provide more video surfaces, see 4a6b1aa07e1283915af214e53f46b04acfbc8af3. the number of render buffers can be passed to the codec in open\n. I added a small change to RenderManager and adapted OMXPlayer. It does not block in FlipPage while the GUI is kept alive and responsive.\n. sure, I can split the pr into buffering and lateness but those 2 should not be tested separately because buffering frames brakes the old method for dropping frames. At least you would see regression.\n. For what reason do we need this? I just dropped studio level in my new version of vdpau because it produced nothing but crap. If HDMI only supports limited range for RGB this can be set in the video driver, at least on Linux.\n. Limited range HDMI does not define footroom/headroom space to be used for btb or wtw. Users reported entirely distorted output when when driver was set to full range and other and only supported limited. This may work but does not follow a spec. The options for vdpau did more harm than any good.\n. I searched for the source but couldn't find. Maybe I mixed something up from other articles stating that footroom / headroom became less important with digital equipment.\nAccording to CEA-861-D the source can identify itself and set the color range. In general this is full range for IT like a PC. Converting to limited range when the actual space is full range only works if the other side thinks the format is limited range. If this is the case there must have gone something wrong. I don't think this strategy will work for the most common case that both parties know about the other end.\n. > The problem is that there don't seem to be a way to indicate over hdmi what the source is\nI thought this is what's defined in CEA-861-D. HDMI reference this spec. My guess is that vdpau studio level stopped working with NVidia driver being more compliant to the spec and source and TV agreed on the same color space.\nMaybe the options should be renamed to \"fake limited color space\" to warn users that this may not work.\n. > VDPAU Studio Level ist not what it should be. I tried some test patterns and on my calibrated Plasma it gives me a incorrect image. Without it everything should be normal on a display that can process full RGB like every Panasonic Plasma or Samsung LCD TV... \nI have studied more of those reports. The chance that this method fails is high enough.\nHDMI spec state that limited range \"shall\" be used for almost all formats. Maybe some manufactures interpret this as \"must\" of default.\n. I checked my living room tv on this. If there was a communication between source and tv as the spec suggests, it's not between my box and tv. At least the HDMI black level setting in the menu does not reflect the setting of the gfx.\nNevertheless, wouldn't make it sense to rename the option to something like limited range as this is more common than studio level?\n. @theuni \n\nAlso, though it wasn't there before, we should probably add a quick sanity check to be sure that m_count > 0, since everything else hinges on it.\n\nlike this?\nif (m_texture == 0 || m_count == 0)\n    return;\n. Ok, I have removed the clock from RenderManager, it uses absolute timestamps now.\n. If renderer provides less than 3 render buffers, buffering can't be enabled. I have tested this on Windows before I added more buffers to WinRenderer. Yes it should work identical to old code.\nEven it buffering is supported by renderer and enabled, player can enable/disable it with a call to EnableBuffering. I noticed that buffering is not ideal when e.g. going ff or rw.\n\nConfigure call configure queue length too\n\nThe length of the queue is hard coded to 5 in ResetRenderBuffers which is called by Configure. Do you want the size as an additional parameter to Configure?\n. - very late frames in the buffer are skipped now. I need to test this on the other branch where buffering is enabled\n- enable/disable calls removed from player. buffering is enabled in configure if requested\n- I had m_speed as a parameter in FlipPage. I think it's better to notify renderManager about speed by calling a separate method: SetSpeed\n. @elupus, does this have a chance to get merged in the current window?\n. you need this on top: https://github.com/FernetMenta/xbmc/commit/07e246847eb6d3998d62ec58efc5cf739a5943f1\n. you are talking about performance when subtitles are displayed, right? The \"problem\" that subs are rendered at fps rate. For systems having separate video layers like the pi this is not necessary. We would gain performance if we only rendered subs if they had changed.\n. e.g. pvr addons don't set thread names. They use a different layer: PLATFORM::CThread\n. I have not figured out yet. I think subs are loaded from a file and kept in a collection in that place. Submitting them to OverlayContainer just increases the ref count.\nMaybe a better fix would be to submit a real copy to OverlayContainer?\n. @elupus I just noticed that this change is not thread safe. pOverlay->m_overlay might be accessed by the render thread while video thread calls SAFE_RELEASE on it.\nWith regard on buffering it's not a good idea to release hw resources in that place. The object may still be referenced by OverlayRenderer.\nHow do you think about getting a copy from CDVDSubtitleParserCollection::Parse ?\n. here is an alternative fix: https://github.com/FernetMenta/xbmc/commit/abb9a8c3c53c00a56afb9ef5fdc131c7eb29be3f\n. > Also that proposal breaks the whole idea to not re-upload static overlays each frame.\nyou lost me here. As far as I understand the code, OverlayRenderer uploads the overlay and sets hw resources to m_overlay. Player would submit the same overlay again and OverlayRenderer increases reference. It would not re-upload overlays as long OverlayRenderer has referenced. Once OR releases its last reference it clears hw resources.\nNote that subtitles which are parsed from the input stream are fine, only those provided by a separate file show this issue.\n. I was looking into CDVDSubtitleLineCollection::Get and struggled with the ref count which is provate. Need to make it protected. What do you think is the better approach:\n1)\nswitch case in method get and call copy constructor explicitly\n2)\nadd a pure virtual method \"Clone\" to CDVDOverlay\nwhat other type apart from ssa needs special handling?\n. updated the pr with your code + clone method\n. Once we have #1757 we should be able to skip analyzing mpegts. Without observing pmt changes reducing time may lead to errors if pmt is not found.\n. I am wondering if we ever get this right without a dedicated thread which feeds the output buffer. In case of PA there's another thread/process involved as well.\n. elupus, I have updated the pr. I have set the bool to false in the contructor and close because pvr does not open a file on channel change.\n. @JezzX are you ok with this too?\n. I use the codec screen a lot, not sure what info could be omitted. Due to the fact that currently the info is truncated and no objections I inject it as a fix.\n. How about avoiding double pass if scaling is below 10%? Cropping won't be that much, right?\n. Users like me have set default scaling to Lanczos fast. This gives me best quality for 720p. But I don't want to have double pass rendering for 1080i. Together with high quality deinterlacing it hits the limits of the gxf. \nAn alternative would be making the auto method more flexible. But how without introducing a new advanced setting?\n. I added a gui setting for the user to set the threshold when hq scaling is desired\n. @elupus, are you ok with this?\n. >  i guess there is no way to probe for this..\nI can't think of an easy one. I thought about this many times, making the \"auto\" methods for scaling and deinterlacing real auto by observing system performance and engaging the best methods before the system hits its limits. But this is a project by its own.\n. could someone give this trivial fix a short review? type in commit message is fixed.\n. requested change added to pr\n. @elupus , @opdenkamp ok to merge?\n. I doubt that this design which hijacks the render thread for deinterlacing will cope with more advanced methods than bob. \n1) performance\n2) this was not designed to keep surfaces used for post proc.\nMy new implementations for vdpau and xvba run deinterlacing on a separate thread and deliver ready-to-render textures to renderer. No need to call into the API from the main thread which makes the design more robust.\nAnother approach for Bob could be pulling the decoded surfaces into system memory and let renderer do the deinterlacing. Then no unreleased libva is required. Provided that vaapi does sopport this, I have not checked.\nJust my thoughts on this, I am not against this in general.\n. What part don't you like? I tried to remove this part:\n```\n      else if (m_pInputStream->IsStreamType(DVDSTREAM_TYPE_PVRMANAGER))\n      {\n        CDVDInputStreamPVRManager* pStream = static_cast(m_pInputStream);\n    if (pStream->IsLiveStream())\n    {\n      if (pStream->IsEOF())\n        break;\n\n      Sleep(100);\n      continue;\n    }\n  }\n\n```\nBut I think this breaks channel change for backends using ffmpeg. ReadPacket can return null during channel change. I think this is the reason why this was placed in.\n. I removed the pvr block from dvdplayer and added the EOF check to NextStream. \n. elupus, I added the changes you proposed.\n. I don't think that it has changed desired behavior.\n@opdenkamp @margro can you verify?\n. Done. Please merge if your are fine with it.\n. I am not sure if this is correct. I was chasing ASIC hangs on AMD hw which was related to deleting textures before they actually were rendered. The problem appeared again some time ago. Not sure but I guess it came back with enabling dirty regions. Before deleting a texture you have to make sure it is not in use anymore. You know this after buffers have been swapped: \nhttps://github.com/FernetMenta/xbmc/commit/55935b9687dffa0d11d26c26347b63aa2947a86b\n. I am just a bit scared that this could make the problem even harder to track down. Once every 500ms we have the same sequence as before, right?\nI don't see any obvious problems either, just investigating in this area. There may be an issue with dr but I am far away from being sure. A user reports losing vsync on Linux (Nvidia) once every 30 hours. The last tests with dr disabled have shown a negative (no issue). Not confirmed, needs much more testing.\n. @FlyingRat How much testing does this require on Linux with vdpau and vaapi?\n@sraue You already run external ffmpeg 1.2 with OE, right? Are there any tweaks you have done which should be considered here?\n. I did a couple of tests on Linux with vdpau. Looks good so far.\nTranscoding True HD to AC3 seemed to work as well.\n. here is a quick fix for AE transcoding: https://github.com/FernetMenta/xbmc/commit/ca168271c6dac107b636dde42e166b5e505b6f4c\nI leave it to @fritsch to make this nice :)\n. > The problem is that dts and time are not the same thing\nIt's two different things for streams implementing IDisplayTime but for ETIMESOURCE_CLOCK it should match. Is that wrong?\nThe problem is that ffmpeg demuxer return NOPTS for streams implementing ISeekTime.\n. I am fine if you close this one in favor of yours.\n. thanks, I was close to do this too\n. surgery on an almost dead patient :)\nlibsamplerate can't handle planar audio formats and I am working on an audio engine which uses ffmpeg instead. \nIf this setting is really required, it should only show up if SoftAE is used. Including samplerate.h in GuiSettings is really ugly.\n. ",
    "TinoSM": "I use it because i use profiles as setting-switcher not a \"real person identifier\".\nI mean, for example i have a fullscreen+vsync, then fake-fullscreen+vsync, then fake-fullscreen+novsync. <-- Is there a way to do this without profiles? I tried during almost 2days and only found profiles.\nI have to switch between those modes because at least with ATI and windows 7 x64 i found impossible to get perfect juderless 24hz/50hz reproduction (at least when i want to use 2nd screen for secondary tasks, so i have to use fake-fullscreen modes), not XBMC fault anyways i think, crap aero.... Some films work well with one setting, and others with the other, and of course there is the case that some family member comes and tell me \"let me use the PC\", but i dont want to shutdown film. I guess this also applies to different audio profiles.\nAnd this is gaming PC too, its almost a server for everything, but i need windows for gaming.\nSwitching profiles normal way in the middle of a film for example, it would clean my playlists, make main screen poop (which forces like 3 extra refresh rate switches) so i had to press TAB again.  (which btw creates a \"partial-bug\" i think, because my playlist is empty, but a film its currently playing).\nAnd since i think that one switch profiles from \"X\" to \"Y\", X is the one who selects which way to switch profile, so noway Y will get X information if he couldnt access it before changing profile (i think).\n. I think its a bug with windows/aero more than with XBMC, since there isnt any media player which works perfect, all of them show the same \"problems\".\nReal fix its \"use true fullscreen mode\", but i cant do that 24/7.\nWill look on the tracker and see if i can find a fix.\nClosing request tho, if someone else wants it just contact me.\n. In case of being added, can you select only one of the commits which i asked?\nBecause i've been playing a little with a skin and i screwed this request adding 7 commits more (im still fighting with tortoisegit), so i closed it before because i cant find a way to remove the other ones.\nIll try to fix it anyways, i did i think, but 6 other people commits present .-. maybe a bug on git :S, i think ill remake it since this went out of my control.\n. If you do it via GUI, wouldnt it stopping being quick? i mean, go to profile selection, change it... \nAlter/add keyboard.xml (sub-keymaps xmls for newer versions) its very easy using wiki i think, i did it on my 2nd day using XBMC and was not hard. If they know how to make it \"non-quick\", they'll know how to make it \"quick\", and if they do it via GUI, its gona be slow anyways.\nIts not noticeable quicker on cpu time (i guess it depends of skin), but depending on the situation (playing a video + auto-refresh rate makes screen mode change like 3times if you dont use \"quick\"), saves time for the user, quicksave on games isnt and its called quicksave the same :P (in fact took the \"name\" from that), simply you only have a hotkey.\nAlso KeepWindow + KeepPlayList, long name :P.\nLink X with profile Y would be a big patch i think, and would have to be tested for a long time. When i try to remove everything on guisettings.xml on sub-profiles except the lines i changed, as soon as i start load that profile file gets re-written again, so i guess that would have to change (and possibly break things). Not to add linking logic.\n. actually there are profiles with own settings, own-scrappers and with own sources (for me this is nearest to an USER), and also their shared counterpart, but you can also have only one of those, which makes a semi-user. Wouldnt keeping the same functionality make it a tree of profiles?, i mean, user-profile thing would limit it a little, and keeping same interaction between profiles would make profiles user-ish, which its current status anyway, but with added level of complexity.\nUser and profiles its very organized, but wouldnt it be a little confusing? (specially for new users). Since every other piece of software i know uses only profiles. Also it would be harder to maintain from a user point of view.\nDifferent users = different operating system login i think (altho it can be changed using profiles), after all its the only thing which can encrypt the profile i guess? (i mean, i guess (didnt try) if i wanted to \"hack\" another user of my XBMC, going into his files... and done :P).\nThere are better/more correct ways of course, but i couldnt guess one which gave that functionality without much harder work.\n. Yeah its because of that, mostly two-screens here.\nWith this i disable aero and i have two profiles, one with vsync and other without vsync, that way 99% videos play without vsync and tearing in either one or the other. Altho i think better wait for windows 8..., in windows 8 you cant disable aero, they fixed video playing \"a little\" (instead of video playing bad, the other screen sttuters, i guess adapting to video playing).\nI'm also trying to get this:\nhttps://github.com/xbmc/xbmc/pull/598\nSomeone tried a workaround about this, i'll have to test it. \nI suggest PR747 and this gets ignored until we have windows 8 retail, but in previews i think they addressed this problem (not totally perfect, it makes 2nd screen DESKTOP sttutery instead of video screen, except if 2nd screen is @ videogames, which both work perfect).\n. I tried adding this code to current main build.\nWith AMD 6870 + phenom II x4, 1080 24p TV and 1080p 60hz screen working together (TV as secondary screen and XBMC working @ TV), with this change reproduction becomes very sttutery (much worse than default).\nFor now best approach (apart from using windows 8 previews) looks like disabling aero and then enabling/disabling vsync per film basis (99% of them work fine with one of the settings, vsync or on off)\n. ",
    "chadoe": "I don't see a problem with adding a quick load. In fact this is exactly what I added the original profiles for, load a different set of settings in place. No users, no logins, just a different set of settings. Profiles were intended to be something like \"living room setting\", \"kitchen settings\", \"friends house settings\". Sure they could be used for \"user\" settings but that was not its original purpose.\n. no, did the same thing with the worldweatheronline addon a while ago, but can't hurt to test anyway ;)\n. Absolutely, thought I did most of it during reshuffle to match the filesystem, guess not.\n. For anyone debugging on a low spec machine setting _NO_DEBUG_HEAP=1 in XBMC project Properties - Debugging - Environment also speeds things up tremendously. Of course you're gonna miss some heap debugging functionality in that case. No idea how it compares to these preprocessor changes.\n. Closing this one as it overlaps/conflicts with another regression I'm looking into.\n. @wsoltys well we might as well pull it all, paths cleanup are nice to have, the rest looks pretty harmless to me.\n. so for wasapi that would become:\n```\ndouble CAESinkWASAPI::GetDelay()\n{\n    return GetCacheTime();\n}\ndouble CAESinkWASAPI::GetCacheTime()\n{\n  HRESULT hr;\n  if (!m_initialized)\n    return 0.0;\nunsigned int numPaddingFrames;\n  hr = m_pAudioClient->GetCurrentPadding(&numPaddingFrames);\n  if (FAILED(hr))\n  {\n    #ifdef _DEBUG\n    CLog::Log(LOGERROR, FUNCTION\": GetCurrentPadding Failed : %s\", WASAPIErrToStr(hr));\n    #endif\n    return 0.0;\n  }\n  return (double)numPaddingFrames / (double)m_format.m_sampleRate;\n}\n```\n. I didn't read everything here but for the change @wsoltys is referring to:\nBecause there's the ansi and the wide putenv api function... and special character paths stored in utf8 converted to ansi could result in loss of characters with certain characters that users use in their windows username. Which python would then reading back from the environment (invalid paths).\nBut maybe some of the many later fixes makes using the wide api obsolete, I remember making use of system codepages for converting the paths later on...\n. ",
    "dbrobins": "This has gone horribly wrong. Please, someone kill it in case I can't. For the love of god, kill it with fire.\n. Argh, I thought I checked the coding style forum entry and tabs was it. New pull request coming up in a bit.\n. Closing to resubmit after rebase.\n. Why add libarchive to the source tree (rather than just depending on an external libarchive)?\n. Ah, my mistake for not seeing the later removal and use of the system library. Nice that libarchive allows callbacks for that.\n. Excuse what may seem an ignorant question, but why add NFS support through a library rather than having the user mount the remote share using their mechanism of choice and treat it as local? Permissions and access?\n. I re-pushed the branch (since I had squashed some commits so it didn't show as removing and then re-adding the same change) and lost earlier comments; however, I believe I have addressed all the issues raised. This change has again been tested against internal and a recent external ffmpegs.\n. There are some commented-out refs to hurry_up in cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp - could you remove them too? I should have gotten them as part of commit 75eaacf3caac128d8197c78485ced86241022c01, but it was merged before I got to it. There's one 4-line block beginning with a TODO comment and then another 1-line comment a few lines later.\n. Thank you, appreciate it.\n. The forum thread is http://forum.xbmc.org/showthread.php?p=822016.\n. I could, but it would be hideously redundant.\n. The \"unload sections\" log notice seems specious now, or at least logged at the wrong point.\n. Thanks. It would be great if the shared lib/headless changes finally made make it in in some form. :)\n. Are you actually seeing differences between \"\\n\" and endl? A text stream should convert \"\\n\" to the platform newline; endl just adds a flush (std::cout << std::endl should be identical to std::cout << \"\\n\" << std::flush).\nOf course there's nothing like empirical testing: using the Visual C++ 2010 compiler, both do indeed output the same to an ofstream or cout (CR LF for both). g++ (4.6.3) on Linux outputs only an LF for both.\nUsing endl doesn't change anything except to add the extra flush, which doesn't seem to be the goal.\n. Can you provide more information about this crash?\n- I'm not sure I understand the problem: do you mean that given \"std::string s;\" s.c_str() returned the same value as &s? Is it not possible that this is correct (see: short string optimization - http://stackoverflow.com/questions/1466073/how-is-stdstring-implemented)?\n- What bad things happen? Why?\n- (Insert Microsoft joke here), but it strikes me that something as fundamental as a broken const char * assignment operator would have been caught by now. If you can provide the compiler version and a small repro case I can run it by the MS STL library owner.\n- How about putting appropriate \"#if _MSC_VER\" checks around this hack (or \"#ifdef\" if you don't know which versions might manifest it)?\n. ",
    "danilll": "FYI:\nThis is a backport from the latest ffmpeg revision, I was not sure if there are any plans to upgrade ffmpeg in Eden, to reduce the risk, I only back ported the feature that will allow flv seeking using keyframes/filepositions and changed the calls in use to match XBMC ffmpeg revision.\nI was also been able to upgrade the whole ffmpeg library, but this is a separate topic, if team xbmc is interested I can share the changes I made to use the latest ffmpeg. \n. @elupus\nI am not sure I have access to commit my changes, unless I am missing something\n. ",
    "othrayte": "I'm a little curious why you went with On***, usually I would think of such things as the name of a callback, from the view of someone receiving the notification it seems odd to use the future tense to describe something that has just happened, surely the past or present tense 'updated', 'started' and 'removed' are more appropriate.\nJust my 2c.\n. ",
    "sahlberg": "Why not mount on the underlying host system?\nSeveral reasons, some better than others :-)\n1, On some platforms you cant mount at all.\n2, Sometimes you might want to not expose the NFS share outside of the application and not make it visible to the underlying host. this allows the \"mount\" to be private to the application.\n3, Only root can mount a share on the host. This allows non-root users to access the data on the NFS share.\n4, When/if ported to Win32, this allows win32 users to access nfs shares out-of-the-box without the hassle of dealing with SFU.\n. ",
    "skylex": "done, is it ok ?\n. alright, done ;)\n. ",
    "CrHasher": "Spline36 optimized uses a 4x4 convolution shader (just like Bilinear|Bicubic|Lanczos2|\"Lanczos3 optimized'). Spline36 \"unoptimized\" uses a slower 6x6 convolution shader like Lanczos3.\nI tested Spline36 on a Radeon HD 4650 (equivalent to GeForce 8600 GTS), in some cases FPS dropped around 74.9 if nothing else used the GPU, otherwise some frames were dropped. Minimum spec. would be any computer that can keep rendering above 60FPS when VSYNC is off, and video is paused, with Spline36 selected.\n. @topfs2 & @a11599: Performance test results -> http://trac.xbmc.org/attachment/ticket/11462/Test_HQU.xls\n. @CrystalP - Before I make changes would like to mention Spline36Optim was introduced on request of bobo1on1 but I will remove it if it\u2019s not needed. My original idea was to make this new upscaler with minimal impact to existing code and did not want to touch already existing options in xml. Seeing that you will remove the allowlanczos3 option I will remove allowspline36. By the way saw your pull request, nice job!\nTODO added. Is that ok?\n. @CrystalP: Thanks for clearing that up. Is it ok to rename the allowlanczos3 to enablehighqualityhwscalers? Wiki page should be updated too, I see an option:\n\n<highqualityscaling>\n\nIMO it is not used but is in the docs.\n. @CrystalP & @bobo1on1:\n- Kept Spline36 optimized\n- Renamed allowlanczos3 option to enablehighqualityhwscalers, flag is used only for GL.\n. Hope its ok now :)\n. Corrected conflicts and recommitted changes.\n. Thanks :)\n. TODO: upgrade api to use the just recently made public ffsink filter -> https://github.com/xbmc/xbmc/pull/290\n. @jmarshallnz: Power saving feature does not work in every case. Sometimes I use the laptop to play a TV show, I set the power options, but because of the optical mouse attached to the laptop, cursor moves on itself or jumps and XBMC never idles, happens even on my desktop computer.\n@pieh: Agree that adding a new button to the GUI is overkill, but currently if you set power saving function it will be saved next time you start XBMC as your preferred settings. So if I set Shutdown when idle for 5mins (as default) then if I ALT-TAB to another program or go to the bathroom, XBMC will shut-down the computer after 5mins if a video is not playing, right? I don\u2019t want that setting turned on always and it\u2019s too deep in System settings to always change it.\n. Power saving function works as intended no need to change it. I close this pull request and will open a new one with a better solution.\n. Please change:\nha:a:128:7,va:a:128:7,dr:a -> ha:a:128:7,va:a,dr:a\nSee man-page of mplayer:\n\"The horizontal and vertical deblocking filters share the difference and flatness values so you cannot set different horizontal and vertical thresholds.\"\nAlso do not use name \"Auto\" for the filter:\nhb:a,vb:a,dr:a - this filter should be used only on slow CPU's\nIt's ok to name the filter Auto internally in the source but not as a setting to the user\n. This is the HTML version of the documentation: http://www.mplayerhq.hu/DOCS/man/en/mplayer.1.html\nAbout setting \"ha:255:3,va,dr\" \u2013 I don\u2019t know the upper limit for difference and flatness the documentation says nothing about that. I think we could use ha:128:7,va,dr as the maximum. Other than that, 8 different settings for pp is just too much. And hb:a,vb:a,dr:a is not faster than hb,vb,dr, the difference is that some or all filters are switched of when computer is too slow. On a fast computer they are the same setting.\nI think 3 settings are just fine let\u2019s just take defaults from mplayer:\n- Default: \"ha:a,va:a,dr:a\" (mplayer de/default option)\n- Accurate: \"ha:a:128:7,va:a,dr:a\" (mplayer ac option)\n- Fast: \"h1:a,v1:a,dr:a\" (mplayer fa/fast option)\n. @wmyrda\nDon\u2019t really understand the Highest = \"ha 255:3,va:a,dr:a\"; setting but if you tested and works fine than I see no reason not to add it. About the \"PP settings\"/resolution, video quality is not related to resolution, you can have a 1080p video that was up-scaled from a very bad quality low-res video and then you want to let the user set the PP option for that video. Currently the user sees the video and decides what PP option to use (that's just fine). Personally I keep PP off until I play an SD quality video that looks awful, than I switch PP to an option I like. If you can somehow detect HD quality video (I think we do show icon for SD and HD) then you could add an option to turn off PP for HD and that would be more useful.\n. Sorry for closing pull, my mistake :dancer: \n. @elupus: avfilter_graph_parse() should free inputs and outputs, also I changed some method definitions, and added a new method\n. Saw your branch, nice work. Much better buffersink integration...\n. The 0.41 was just a guess on my computer calculated with an average 0.000114440918MB(120bytes) * 60 * 60 for one USB device.\n. @jmarshallnz - squashed commits\n. I will explain:\n```\nvoid CDVDPlayerVideo::Process()\n{\n  ...\n  if (mDeintMode != VS_DEINTERLACEMODE_OFF)\n  {\n    if (mInt == VS_INTERLACEMETHOD_DEINTERLACE)\n      mFilters = CDVDVideoCodec::FILTER_DEINTERLACE_ANY;\n    else if(mInt == VS_INTERLACEMETHOD_DEINTERLACE_HALF)\n      mFilters = CDVDVideoCodec::FILTER_DEINTERLACE_ANY | CDVDVideoCodec::FILTER_DEINTERLACE_HALFED;\nif (mDeintMode == VS_DEINTERLACEMODE_AUTO && mFilters)\n  mFilters |=  CDVDVideoCodec::FILTER_DEINTERLACE_FLAGGED;\n\n}\n// m_pHardware is not initialized before calling decode for the first time when DXVA2... is enabled\n  mFilters = m_pVideoCodec->SetFilters(mFilters);\n// m_pHardware will be created after calling this for first time so set filter will initialize yadif\n  int iDecoderState = m_pVideoCodec->Decode(pPacket->pData, pPacket->iSize, pPacket->dts, pPacket->pts);\n  ...\n}\n```\nThe extra check in OpenFilter will prevent actual opening of filters even in this case, but it won't solve the original problem. When DXVA2 is enabled and Deint is set to AUTO yadif get's initialized because when we call SetFilters for the first time we don't have m_pHardware initialized, that will hapen on first call to Decode. The extra check is better than calling methods like g_guiSettings.GetBool(\"videoplayer.usedxva2\") before calling SetFilters method. Seams a little unnecessary to call even SetFilters but we don't know if Decode will initialize m_pHardware or not. Also m_filters will be set to empty string on next call to Decode\n. More Detail:\nEINTERLACEMETHOD CWinRenderer::AutoInterlaceMethod()\n{\n    if (m_renderMethod == RENDER_DXVA)\n        return VS_INTERLACEMETHOD_DXVA_BOB;\n    else\n        return VS_INTERLACEMETHOD_DEINTERLACE_HALF;\n}\nThis method returns VS_INTERLACEMETHOD_DEINTERLACE_HALF because when we init CWinRenderer then m_renderMethod is RENDER_PS see the constructor. So this happens only when we play a video for the first time but still it is a bug. Should make AutoInterlaceMethod return the right VS_INTERLACEMETHOD_DXVA_BOB when called the first time but the right flags and render-method are not set until call to CWinRenderer::SelectRenderMethod...\n. This would prevent calling FilterOpen is it ok?\n```\nint CDVDVideoCodecFFmpeg::Decode(BYTE* pData, int iSize, double dts, double pts)\n{\n    ...\n// try to setup new filters\nif (!m_filters.Equals(m_filters_next)) // true only once\n{\n    m_filters = m_filters_next; // sets empty string on second call\n    if ( !m_pHardware && ( FilterOpen(m_filters) < 0 ) ) // never calls FilterOpen with DXVA\n    FilterClose();\n}\n...\n\n}\n```\n. @elupus: Could you merge this pull? Thanks.\n. Happy to see this bug squashed :+1: \n. ",
    "a11599": "Looks good to me. It's somewhere between Lanczos2 and Lanczos3 for both sharpness and ringing. Spline36 works without frame drops with 480i60 SD video upscaled to 1600x900 on Mobility Radeon 5145.\n. I close this now as most of the issues are resolved in master and the auto scaler issue is being investigated by elupus. Unfortunately it is not that straightforward to fix.\n. Removed global processor instance as suggested. Also moved code from CDecoder::Open() back to CDecoder::OpenDecoder() and CDecoder::OpenProcessor() which were there originally before isidrogar's patch.\n. I also had some thoughts about this. Practically for software decoded material it is not an issue to initiate the processor in CWinRenderer since there is only just one video to render, no matter how many decoders are open. For hardware decoded video as long as the surfaces are shared there will be interdependencies which can only be solved with cubersome workarounds. At the end we will just increase code complexity and IMHO it's just not worth the effort as there is no benefit from a user perspective. I suggest to stay with the current way of dual-init (initializing processor from decoder for HW decode, initialize processor from WinRenderer for software decode).\nI just finished detaching the deinterlace patch from the commits above and have created a separate branch here: https://github.com/a11599/xbmc/commit/bf7aa1a0fe36d885154490f4c8aabcdca44bc4cb. This branch now only contains code which provides DXVA rendering for software decoded material. This makes reviewing this change a lot easier.\nCan we discuss it there or shall I submit a pull request?\n. Sorry, I am a git noob, but everyone says force push is a no-no. Do you really want me to do that? Anyways, I made a new commit here: https://github.com/a11599/xbmc/commit/480982bcd495871d69dbafbbc5de6c7a2d433de9. It incorporates comments, removes the still param in CProcessor::ProcessPicture(), and reverts surface/buffer handling in CDecoder. I also attempted to revert all cosmetic and indenting changes so the final pull can be a pure feature pull (cosmetics can come later as a separate if desired). A merged diff to check the changes at a glance can be downloaded from here: http://pastebin.com/ZhEHrwrh.\n. Yep. Imagine when I have seen the \"a11599 merged\" message; my heart stopped for a minute... Sorry about that. Now I know where I made the mistake.\n. Here is the previous pull for reference: https://github.com/xbmc/xbmc/pull/243, I didn't wanted to close that but removing the old commits closed it automatically.\n. Postprocessing options are also effective with DXVA rendering, at least on my HD6570. Don't know about ESVP, but IIRC on 3450 even though the processor enumerates to all deinterlacers, it will internally only do bob for HD, so the algorithm is dumbed down within the video driver.\nDeinterlacing will be a separate patch, but if everyone agrees having intermediate deinterlacer options then I'm fine with it and will add those options as well (this is for Ati anyways). Something like Bob -> Adaptive (Low) -> Adaptive (Medium) -> Adaptive, where low and mid is only available for Ati.\n. Handling auto mode is a tough question. Recently I was thinking about providing a simple three-state option for video card performance like Low -> Medium -> High and to adjust scaling and deinterlacing options accordingly in auto mode depending on video resolution/framerate. We might even preset this value based on (popular) device IDs. Ofcourse we can add advancedsettings entries for users who want to tweak the defaults, but the default options should suit most users pretty well.\n. I rebased to master and incorporated the comments. Reverted all surface changes for now, I think the original approach will work with deinterlacing as well (my deinterlace-only patch did not changed the way surfaces are handled). I also improved DXVA processor init for software decode by initializing more members of the DXVA2_VideoDesc structure.\n. Yes, your solution is definitely simpler. However I am sure there was a reason why surfaces are handled the way they are now. A lot of effort and testing was put into DXVA support during Dharma development and since I don't have the resources to test your solution on the same broad range of source material/display hardware/driver combination like it was tested back then I will try to minimize modifications of the existing code.\nI will definitely keep an eye on the issue mentioned in the forum when adding deinterlace capabilities.\n. So is this considered to be ready for prime time now?\n. Reverted everything which is not strictly related to the renderer feature and incorporated the comments. The only thing I kept from CrystalP's list is the color data to flags conversion. While we could initialize the DXVA processor with unknown values for these, I think we should try to do our best to provide accurate values here especially that we can easily get them from ffmpeg/libmpeg2.\n. Silly me... Fixed. The PR now consists of 5 commits, let me know if you want me to merge them into a single commit or to rebase on current master. I have a diff on all commits so the remaining changes can come later.\n. Rebased and squashed (no other changes); ready for merge.\n. Added a new commit to take care of the crashing issue.\n. Just chiming in to say that the pull is not forgotten, but unfortunately I am swamped with various work/personal related things lately and can't tell when I will have time to move this further. If somebody wants to carry on feel free to do it...\n. Hi isidrogar, if you could do this that would be great. Thanks for your effort.\n. +1 from me for the idea.\n. In case you are wondering on alternative solutions, I just found a thread where the same issue and the workaround is discussed for MediaPortal:\nhttp://forum.team-mediaportal.com/watch-edit-videos-104/stutter-after-refresh-rate-change-71311/\nThe solution starts to form at around page 13. This confirms my suspicion that messing with the DWM API will most probably not lead to a proper fix of the problem (hence the need for such a relatively ugly workaround).\n. My setup is single display and the patch works here as advertised. :) Tested on my notebook and my HTPC, both W7 and discrete Ati cards. I also tried dual monitor with my notebook, but could not get smooth playback on secondary display no matter what I did (except using true fullscreen), but I was not sure if my notebook graphics is powerful enough for that.\nCould you please check with a single display setup? Maybe the patch does no good for dual monitor setups (I can change the behavior so it will not execute when XBMC is on the secondary monitor). Anyways, it only activates in fake fullscreen; CWinSystemWin32::ChangeResolution() is only called in windowed fullscreen mode. I can change the window style, but I am not familiar with this stuff so I just set it to whatever worked (I tried to make the entire window transparent, but when the border is removed the patch does not work).\n. The idea seemed to be promising and seemed to work here, but apparently it does not fix the problem reliably. Closing this pull. If I have other ideas or manage to get around it I will submit a new one.\n. The patch was lurking around for quite a long time but seems there is an increasing interest in it lately. :) I made the changes but cannot test them today. Will test and submit a new PR. Until then you can comment it here if you wish: https://github.com/a11599/xbmc/commit/f0d54889c24f01d349208394c088a63ea741cf46\n. @elupus: What actually happens here is that dvdplayer provides a method to set the global AV delay and graphiccontext will call it when refresh rate is changed during video playback to update the delay. I agree with jmarshall's comments and the lookup on advancedsettings really should not be in dvdplayer and the Resolution.h dependency can also be removed easily. But otherwise the basic approach is the same used to pause video on refresh rate change and I really do not see why make this simple function a lot more complex by involving rendermanager?\n. No need to put this on the info display IMO. But having DEBUG log entries when the delay value is set would be very nice for troubleshooting.\n. Grrr.... No, it was not merged. Stupid me. Pushed the master to tomtor's repo instead of the devel branch... Should get some sleep. New pull here: https://github.com/xbmc/xbmc/pull/713\n. I can rename it. It is now actually really doing video delay. Shall I also adjust all the other stuff to be consistent? Like delay is set for audio in AS.xml, delay is displayed as it would be an audio delay, etc.\n. Ok. Will rework it tonight. Video delay is perhaps even better. Because now users might (wrongly) assume the delay is global (eg. also for visualization). But it is not, it's only for video playback.\n. Updated to be clear that this is video delay. Description and AS.xml syntax also updated.\n. We must not. It's a matter of how you view it. Mine was: if the output is lagging by 125 msec, compensate by -125. But your view is just as logical. So AS.xml specifies the lag that we have to compensate for. Perhaps that would be better from a user perspective. It is very easy to change this. I will think about your suggestion but tend to agree on it.\nThe rest is clear. Will do it sometime during the weekend.\n. Changed to latency, now accepting positive values in AS.xml, DVD_TIME_BASE removed from rendermanager. Commits squashed and rebased.\n. OK. Added latency update also to PreInit() to be on the safe side.\n. @bobo1on1: mind taking a look?\n. The root issue is still valid and I still use this patch in my own personal builds. But since no one really cares I am not pushing this. I leave it up to the team to decide if this will be pulled or not (I have a rebased current version, just let me know and I update the branch if needed).\n. I can reproduce the issue. My HTPC is connected to the TV through an AVR. If I turn the TV off, then back on, I get the device invalidated error. At this point, most of the times (but not always) the dvdplayeraudio thread crashes. Unfortunately the patch does not fix it. Although the patch is necessary I think, maybe something is still trying to mess with the audio buffer and that's why it crashes?\n. Here is a log when the reinit was attempted, but failed due to sink believing the endpoint is already initialized: http://pastebin.com/vW2X2nSM\nIs far as I remember when the thread dies there are no entries from CWin32WASAPI::Initialize in the log, the access violation is straight after \"CWin32WASAPI::AddPackets: GetBuffer failed (-2004287484)\". Unfortunately I have not kept such a log and family occupied the living room at the moment. :)\nWill see what I can do because this is driving me nuts, I cannot turn off the TV even if I am just listening to some radio or music.\n. Unfortunately it does not fix the issue here. What I observed is when I turn the TV back on, the AVR passes the TV EDID for a split second, and then sends a new one with its own data. With some additional code in CWin32WASAPI I managed to work around it and now it can recover and works fine with paplayer (my previous report was wrong, paplayer also crashed). However dvdplayeraudio still crashes before CWin32WASAPI::AddPackets() has a chance to catch the INVALIDATED error.\nHere is the current status (including your commits): http://pastebin.com/VwhJydur. Just ignore the patch quality at the moment, this is just a very rough work in progress version, but showing just to get an idea what I have done. I had to add a lot of checks for m_Initialized in various methods where m_bIsInitialized is checked, and also created m_Recover bool to decide in Initialize() how to handle errors. So for example if m_Recover is true, Initialize() will not fallback to the default device.\nIssue is that I cannot replicate on my notebook (I think the display driver misses out on the TV EDID because it is busy switching to/from the notebook LCD), it only happens with my dedicated HTPC, but I am refusing to install VC++ on it. So I just change the code, compile, copy over the .exe and watch the debug log... A bit time consuming process.\nBut I am not sure if it is worth fixing this now if AE really changes this piece of code.\n. Tried your latest commits. I only had to safeguard UpdateCacheStatus() to make this patch stable with paplayer: http://pastebin.com/wwatUqx9. While not strictly required, I also safeguarded CheckPlayStatus() for completeness sake.\nHowever, dvdplayeraudio still fails, but not always. Sometimes it survives and reinitializes as it should. I am looking into this (although have no idea yet what is causing the access violation).\nI however found a way to reproduce this on my notebook and this might work for you as well: select WASAPI output in XBMC, start playback, then in Control Panel > Hardware and Sound > Sound right click on the audio device and disable/enable until the thread crashes.\nFallback to default device was circumvented for convenience. When I turn the TV back on, the HDMI audio device becomes unavailable for a second and then Initialize() would fallback to the default device which is the onboard audio in my case. Alternatively I could just disable the onboard audio, but I think we should try to recover to the same playback device and not try any fallbacks in these scenarios (fallback is OK on playback start, however).\nThe Sleep's purpose was just to mute the log entries while debugging (my scenario adds 700KB to the debug log). There are other ways around but probably we should limit the time elapsed between reinit attempts (not necessarily with a sleep). Not only for log size, but also because it will likely take some time until the device becomes available again. A few (1-10) reinit attempts per second should suffice I guess.\n. I can confirm with Frodo b2 there are no lockups on my system anymore (audio is still killed but that is just fine, it is happening with all Windows applications, not just XBMC).\n. Might help, but it still should just be an option, so the popup will still make sense - although against a different option, so some slight adjustment will required to this patch.\n. Rebased on master and wrapped \"if\" blocks in { }.\n. Point 1 is a good idea, I will do this.\nI would not exclude the two options entirely. There are a handful of registry tweaks to mitigate the issue and a few people need fake fullscreen for various reasons. Eventually someday MS and/or GPU vendors might come up with a fix. :) I tried a workaround in #598 but it does not work very well. I will also look into that patch, I have some ideas that might improve it.\n. WMA lossless was added in ffmpeg 0.9?\nhttps://github.com/FFmpeg/FFmpeg/blob/release/0.9/libavcodec/wmalosslessdec.c\n. I am not objectioning. :) My comment was just meant as a note, in case someone is interested. I am happy with flac, but I realize there is demand for lossless wma as well. :)\n. Good point. The setting comes from times before CrystalP's scaler speedup, so it is not really needed, so I will remove it. However, I would keep DXVA scaling as a default for automatic for three reasons:\n1. Ati drivers come out of the box with edge enhancement enabled. This was designed to work after scaling. So unless the user explicitly disables EE in CCC, our HQ scalers look worse than even DXVA bilinear (at least to me).\n2. There are some really weak GPUs out there (Intel HD) that have minuscule shader performance and cannot do any of our PS based scalers.\n3. Newer cards actually offer very good DXVA scaling. My HD 6570 does look like spline, it has a very nice sharp scaler with very little ringing. I expect this trend to continue. ;)\nPeople preferring these scalers can just set their preferred one as a default for all videos and that's it. :)\n. Removed the setting. If there are no objections, I would like to merge this in the May window.\n. Rebased, tested and squashed, I think this is ready to go now.\n. It worked originally on the ION and was 100% stutter free with the GPU flush (before the scaler speedup) for 24p/25p. I used it for months. Something must have happened in between that broke this on nVidia. Unfortunately I have no nVidia HW near me that makes it difficult to fix.\nAgree with the rest of the comments, will do them, I need to adjust the patch anyways. If you have some suggestions on what to do to fix the nVidia issue that would be great.\nActually there are more GPUs that do awful scaling, Ati 3450, 3850 and 5145 are three examples (bilinear). So the patch might be beneficial for more people.\n. Do I see correctly that this piece of code adds some silence every 2 seconds unless the packet is dropped/duped?\nAlso I am worried how all the various AV equipment out there reacts when a valid bitstream is interrupted by a zeroed audio frame mid-stream. They can just start switching decoders or do other crazy stuff causing audio dropouts, relays clicking, etc. If memory serves me correct I think we had issues in the past with a similar AddSilence implementation.\n. Ok, it is not adding a silence every 2 seconds, I was just fooled by the diff. But still, adding zeroed frames mid-stream is not very good, with the old AddSilence my Onkyo dropped to PCM and then switched back to the bitstream decoder, causing relay clicks and a ~0.5 second audio dropout. Doing this before the stream is outputted should be OK though.\nI think it would be good to know more about the audio format in this piece of code. I do not want to hijack the PR, but I have another one to fix behavior for variable packet lengths (#726 - although it was not receiving much attention). If we would know more about the audio stream at this point we could do better sync. For example the original code is fine for AC3 and DTS, mine is good for Vorbis and this patch could help for this codec.\n. Very interesting. AFAIK 48 kHz AC3 should always have a 32 ms frame duration.\nhttp://www.rfc-editor.org/rfc/rfc4184.txt\n. Yes, AddSilence mid-stream will never work correctly on all AV equipment. I think it might be worthwhile to check why those AC3 frames are reported to be 64 ms as this clearly seems to be out of spec.\n. No, your channels are probably in-spec. But the calculated frame duration is probably wrong.\n. Yes, it is wrong. (In pre-AE this was a call to m_pAudioCodec->GetBitsPerSample() which always returned 16.)\n. I had an idea before but it did not catch much attention (and I personally took the easier route and use GPUs that have enough power to do everything): http://forum.xbmc.org/showthread.php?tid=106591\n. I guess it is for convenience (although it really looks a bit over-engineered).\n. Yes, but I have not done this before. May I just hit the 'Merge pull request' button below?\n. time is not yet corrected with the number of fwd refs here, that's why I account for m_maxfwdrefs. Anyways I will move back the fwd ref correction (time -= m_caps.NumForwardRefSamples * 2) code back where it was and will find an alternative way around this.\nAre you sure your Ati requires 2 fwd refs? All three Ati cards here need 2 backwards and 0 forward frames.\n. Never crashed here, but the point is valid. I think I will simply move the erase part after VideoProcessBlt().\n. ",
    "hippojay": "Split cache code from checkandcacheimage into new function (although I called it CacheImageFile() - sorry, I missed your suggested name).  So checkandcache now simply calls these two dedicated functions.\nI've tested both the new functions and the modified checkandcache individually and all behave as expected.\n. Guys,\nI know you're busy but I was wondering whether you'd had a chance to look at this?  Just wanted to know whether I need to do any more work on it?\n. Following on from the thread, this patch improves on Spiff's by fixing an initalisation issue for l_mStartOffset.\nIt also adds an extra feature which allows the startOffset property in the listItem passed directly to setResolvedURL to override the startoffset value of the original listItem passed to addDirectoryItem.\nPassed into addDirectoryItem:\n1. If startOffset is not set, it will remain at initalised value of -1.  This will allow the current bookmark resume to work (i.e. no change in functionality)\n2. If startOffset is set to any value >=0 then it will not display the bookmark resume and will start the media from that explict position\nPassed to setResolveURL:\n1. If startOffset is not set (i.e. -1) then the previous value will not be updated (so the value from addDirectoryItem will remain)\n2. if startOffset is >= 0 then this value (i.e. explictly set by plugin) then this will override previous value and media will start from new position.\nSo, by overriding the previous value, we can now more finely control the start position, and plugin users can create there own select dialogs (chapters, jump in points, etc).\nhttps://github.com/hippojay/xbmc/commit/cc6509377add90f30b5fb16ff4cb342bea86534b\n(NOTE: I \"initialise\" the m_lStartOffset in listitem.cpp after the reset() (from fileItem.cpp), which does in fact set m_lStartOffset to 0.  It would obviously be possible to change reset() in fileItem.cpp to reset to -1, but I'm not sure what the knock on effect would be to other parts of xbmc that utilise this setting.  Therefore it seems safer to set within listItem.cpp and only affect python plugins/script. \n. TO avoid confusion:\nliz = listItem created to be fed into addDirectoryItem\nitem = listitem created to be fed into setResolvedURL.\ninternal dialog = XBMC generated dialog box with bookmark db values\ncustom dialog = user created one\nIf the plugin writer makes no changes (does not set \"startoffset\" at all) , then the plugin will function as it does now:\n1. When user clicks on item a look up is performed again database and any value returned\n2. If a vlue is present, this is presented to the user as an internal dialog box allow resume or from beginning.\n3. media starts from this position\nIf the plugin writer wants to control the start location:\n1. for listlist passed to addDirectoryItem, set to 0 to turn off db value - liz.setProperty('startOffset','0')\n2. The plugin writer then creates a custom dialog box with values to be selected\n3. this value is then fed into setResolvedUrl by setting startoff in the new listItem - item.setProperty('startOffset','300')\n4. This new value will be used to start media.\nIf a plugin writer doesn't set the initial itemList (liz) startoffset - the they will get the internal dialog box if a bookmark exists.  If the plugin writer then decides to set item - then this will override this selection and the media could start from a different position to the one selected - but this would be down to poor plugin logic.  \nAlso, if the plugin writer sets liz startoffset >=0 (so no internal dialog) and doesn't set item startoffset, the original value will be used\nconversely if the plugin writer sets liz startoffset and then overrides this in item then the new value is used.\nThe one thing I wanted to avoid was changing any default behaviour, and only if explicitly setting startoffset would anything change.  Currently, if a plugin writer wants to use the internal resume function, they can do so without doing anything.  If they want to exert more control, then can then do this by setting the startoffset values.\nThis only thing that possibly is missing is a internal dialog box which allows resumption prompts at a different point within the plugin (say at setresolvedurl time).  This would retain the same look and feel, but then you would also need to ensure this could be turned off for those needing more control (such as custom jump points, etc).\nI hope I've explained this ok - have two separate listItems at different points doesn't make the explanation concise :-)\n. Certainly using internal dialogs would be better, as it would retain the standard look across plugins.  However, not being able to force a start position would change the default behaviour - although I'm not sure how many plugins actual force a starting position on someone?\nPlus it would allow only a single resume value, not multiple values to choose from - although I'm not sure how common that would be (I don't think I would use it, but it might be useful for multiple chapter marks?)\nNot sure I'll be able to do this though - I can see where the options are made and understand how this flows through to the playFile in Application.cpp, but not sure where to tie setResolvedURL into a resume menu display.\n. I could, but if a user then stops the media and restarts it again without refreshing the listing, the original value is used.   There is no mechanism that allowed an existing displayed item to be modified without reloading the whole screen.\n. I agree that things are getting a bit complex - so perhaps we need to break this down into separate issues that can be addresses one by one so we can make some incremental progress:\n1. listItem.setProperty('startoffset',X) (as set for addDirectoryItem)\n   This is a bug, as setProperty('startoffset') no longer works.  If I set this value, media will not resume from the value specified.  It will always start from 0 or, if a db bookmark exists, it will always prompt for a value.  This means that plugin writers have no control over media start times.\nI believe this issue is cause by onFileAction in GUIWindowVideoBase.cpp always setting m_lStartOffset to 0 - hence resetting the value.\n1. bookmark resume\n   If startOffset is set, then it is done so explicitly by the plugin writer and should be respected.  This can either be via a resume prompt or directly play media without.  If a prompt is needed, then it should be controllable and switched on/off - possibly via a bool property resumeDialog.  This can always be true if required to match current behaviour.\nThis can be checked for in GUIWindowVideoBase.cpp and the appropriate action taken.\nAlternatively we could mark media as not requiring a bookmark to be saved, to reduce the database access and proliferation of uneeded entries.\n1. setResolvedUrl/player.play  resume control\n   Plugin writers should be able to control the start time of the media at the time of playback, and not at the time the user clicks an item.  At the moment we can feed in a listitem with different information, to change the title, url, etc - but not the start time.  Again, this could be by an internal resume dialog box, but this should be plugin selectable.\nI obviously have my own needs, but I can also understand why you would want this intergrated into the standard xbmc look and feel.  However, I also want to make sure that we are not forcing people into behaviours that they may not want.  \nEDIT: As for how i update my DB, this is the plexbmc plugin, so it updates the Plex DB via http.  This resume/startoffset issue wasn't present in Dharma and has been introduced (and startoffset broken) in Eden.\nHowever this is a universal issue and the backend DB could well be an server based XBMC DB which is being updated via JSON, by ultimately disconnected from the local xbmc db capabilities. Or some other backend database \"in the cloud\", etc..\n. I've just been checking the VideoTag \"m_resumePoint\", but to be honest it doesn't look like it's actually used anywhere to determine the playback start position.  A lot of the player resume logic is based around m_lStartOffset and this is used to determine whether to get the data from the database or not.\nThis would tie up with the fact that the value of m_lStartOffset can never be set, as the value is already reset by OnFileAction (GUIWindowVideoBase.cpp 887:959).\nI've followed m_ResumePoint from ListItem.cpp (where is doesn't actually get set, but the tag is created) and finally into Application.cpp (lines 3803:3867) where this value is never retrieved from the videoTag to be used in the player options).\n. Thanks - i'll pull this branch and see about making the required changes for setting via plugins.\n. https://github.com/hippojay/xbmc/commits/cleanup_resume\nI've added the ability to set timeInSeconds and totalTimeInSecond., Feel free to suggest different name s for the property, I've just chosen something I think describes it without being overly wordy.\nThis works and I can get media to use this data for resume and also to start from the beginning without a resume dialog.\nTwo questions/issues:\n1. [FIXED NOW, SEE BELOW] I cannot get the resumePoint to update when passed to setResolvedURL. Looking at the code, GetPluginResults (PluginDirectory.cpp 136:154) should update the fileItem with the new data, so I'm not sure what is happening.  I've tried to set the data explicitly both here and in UpdateInfo (fileitem.cpp 1165:1185), but this hasn't worked either. Checking the values, it's as if the data isn't being set, but I can't understand why that would be as the interface is the same so it definitely updates the fileitem.  I'm not so good with the debugging tools, so I've been checking values with log entries.\nIt might need someone with better skills that I to work this one out.\n1. Not sure if you want to use the listItem.setProperty function or create a new one to set the resume function.  As both values are required to make this work, it might be better as a function, so that the mechanism is easier to follow.  However I'm happy using setproperty, might just need documenting correctly in the wiki.\n. https://github.com/hippojay/xbmc/commits/cleanup_resume\nUpdated with commit for passing m_resumePoint through setResolvedURL.  The only outstanding part of this is getting the resume dialog to display - this is beyond me as it requires calling the GUI component and I don't think the existing functions will fit - so would need some work.  This is a further enhancement and not a requirement for plugin resume functionality.\n. ",
    "bootc": "Granted, that's possible. But why do VLC and QuickTime player both play the file with the correct aspect ratio?\nAlso, why are there two sets of PAR/DAR, one of which is incorrect?\n. Hmm, I wonder what made XBMC choose the opposite one to say VLC. How come XBMC went down the other path? Shouldn't it at least be the same to maintain some sort of consistency between programs? Also, what happens if a container contains several different streams with different aspect ratios? It would make sense for the codec-local AR figures to override the container's one IMO.\n. Speaking to the chaps in #handbrake it appears it's an ffmpeg bug. I'm now trying to build XBMC against ffmpeg-0.7-rc1 but am running into compile problems, hopefully they won't be too difficult to resolve. I'll come back and comment once I've tried that out.\n. OK, I've confirmed now by building against ffmpeg-0.7-rc1 this bug is no longer present. I'll divert my attention to getting ffmpeg updated now :-)\n. I see you just merged #204, sorry that this was sort of a repeat. That doesn't contain a patch to deal with the postprocessing.h data type changes though. Any chance you can grab that one commit that's missing?\n. Yes. It compiles and works fine - the _t type have been deprecated for a while.\n. ",
    "mariokorte": "I'm with Montellese here. We should implement it the way the user expects it. And as already was described nearly all entertainment hardware handles it like presented in this request.\n. @vdrfan: Is there any progress on this topic?\n. ",
    "t-nelson": "-1 setting.  I could care less which units are used. I can't read them from a comfortable viewing distance anyway ;)\n. Please don't +1 on github.  It spams a couple hundred people.  Use the\nforums instead.\n. Couldn't this be added as a plugin? I don't think a feature like this belongs in core at all.  Add the hooks you need to core to do things pre-access of a share then handle all of your crazy advanced user config stuff from the plugin settings.  We can already do things on start up, which is presumably where a mysql server would be woken. This way only users who actually care will be bothered by the settings and you can make the configuration as complicated as you want.\n. At least honor the \"filelists.allowfiledeletion\" guisetting.\n. Actually, you should file your bug reports at trac.xbmc.org.  I agree that forums are garbage for this kind of thing...\n. There really isn't a problem here seeing as you're misusing the punctuation mark...\nhttp://en.wikipedia.org/wiki/Slash_(punctuation)#In_English_text\nvs.\nhttp://en.wikipedia.org/wiki/Backslash\n. Yeah I saw this late last night and couldn't be arsed to hunt it at the\ntime.  The resulting behavior is quite odd, anything from an assertion in\nboost::shared_ptr::operator() to an empty scraper list. I'll try to take a\nlook tonight if pieh doesn't beat me to it.\nOn Wed, Sep 26, 2012 at 3:30 PM, Tristan Fischer\nnotifications@github.comwrote:\n\nThis causes issue #13351 (http://trac.xbmc.org/ticket/13351).\nIn short: \"Choose a Scraper\" and \"Current Scraper\" are empty in\nCGUIDialogContentSettings:\nOn first init m_scrapers are being filled, on deinit they are cleared and\non second open they are not beeing re-filled.\nI would fix that with an PR but I don't know what is the desired way ;-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1283#issuecomment-8902164.\n. May as well fix the indentation while you're in there...\n. I know we don't currently do anything with the \"back\" action on the home screen, but don't you think changing the function of a button so drastically might be a bit unintuitive and cause confusion?\n. Any thoughts on overriding this in the case debug is enabled from GUI settings?\n. Wanna add in another commit removing bGlobal and m_bGlobal since they're now unused?\n. Why not invert the search? List the basedir, test if any subdirs are in the common_sub_dir list. It should be fast since the dir list is likely cached already and it saves us the stats on slow FS.\n. Haha, whoops! Must've been one of those fixed by chance type things. I'll keep digging.\n. Does this become interesting again in light of https://github.com/libarchive/libarchive/commit/864a2c106898e2d5530f185130d13810929b1c09 ?\n. Yes, I was trying to give him a little nudge since there was no noise here in the week since that got merged. ;)\n. Looks good!\n. We don't want to maintain libc.  This might be a case for our second line of java. :( Thoughts @theuni ?\n. For the team... I put a sample dir structure at ATK/Adventure.Time.With.Finn.And.Jake.tar.bz2 on the FTP.\n. @jmarshallnz, yeah I noticed the lack of dependence on CVideoInfoTag after I posted the PR. I'll remove it.  As far as the s1e1.1 goes I don't have a problem adding support.  We'll have to be careful with the regex though...\n\n@Montellese, it's only necessary for the enumeration as far as I need.  The aired order episode number (or whatever they call it) is used after we lookup episode details.  If someone wants to extend this to do further crazy stuff, they can. All I need is the videos properly detected and enumerated, though.\n. Ok, cleaned all of that stuff up and added support for the s01e01.1 naming convention.\n@jmarshallnz, the regex are getting a bit stupid to keep s01e01.1080p enumerated.  Hopefully these are reasonably safe.\n. I've uploaded ATK/Adventure.Time.With.Finn.And.Jake.2.tar.bz2 with s01e01a and be renamed to s01e01.1 and 2 respectively.\n. Silence == acceptance, right?  Should I hold for Oct, or rewrite the commit message to imply a fix? ;)\n. Hrm, no that won't work, but these fancy look-ahead assertions seem to. I dunno if they're anyless scary, but certainly more correct. Will push later.\n. Ok, regexps updated.  I'd like a signoff from @cptspiff on them if possible.\n. @theuni See previous convo.  This is only used to enumerate.\n. Sorry. Found a typo in regex. I was testing them with as.xml...\n. Great, thanks! Squash, rebase, green button, then?\n. Ah, damn.  I knew that stupid struct SEpisode / struct EPISODE nonsense would bite me...\n. 09b055e\n. So apparently you can PR a single commit, interesting... Closing, see #1551.\n. Fine by me.  It should've been that order in the first place.  Go ahead and punch it, @davilla.\n. Please split into two commits, each with a useful and specific commit message. Gotta keep the history pretty after all. \"Remove wrong code and correct logic\" isn't going to pop out at anyone 3yrs down the road. ;)\n. @topfs2 @jmarshallnz I didn't miss some subtlety here, did I?\n. There's no sense dirtying the diff by introducing those temporary variables.  Cosmetic stuff like that should always be in a separate commit.\n. Uninitialized variables are always a bug waiting to happen.\n. Do we need to institute a mandatory 24hr review period for all commits?  You damn kids are making a mess of the history! :)\n. A series of if(!m_instance) would read better.\n. In the future, just rebase and force push to your branch to avoid opening new PRs.\n. Please rebase and drop the extraneous commits.  You can just force push to your branch to avoid opening a new PR.\n. Aside from easy log access, what do we need this feature for?  While it does clean up credentials, there may be URLs/paths you just don't want people having access to (private stuff, porn, etc.).  IMO there are still plenty of security and privacy issues at bay here.\n. @NedScott clearly I'm aware of what it's useful for.  My concern is whether it's useful enough to risk a gaping hole in security.  My comment was mainly ensure this had been considered.\n. I'll more or less shut up if you enable this only when \"enable debugging\"\nis ticked in GUI settings AND a password is set for HTTP access. A dialog\nprobably would not be a bad idea either. Though we should probably have one\nstating the security/privacy implications of debug logging in the first\nplace.\n. How would it defy the usefulness? A non-debug log is useless, so enabling\ndebug is likely a step that will be required anyway.\nBesides, we don't want more GUI settings.\n. Please use pastebin. A couple hundred people get emails every time someone\nposts on github.\nHint: Silence is the best reply!\n. Do hundreds of them over a slow network. Overhead aplenty. \n. Pull requests only on github.  Use the forums for support.\n. I agree with ulion here.  This only seems to hide the real leak.  The commit is probably something we want. But the message doesn't seem accurate.\n. You might need to touch configure.[ac|in] in xbmc/screensavers/rsxs-0.9 to make sure bootstrap gets run on it. If it still throws a fit, trying including errno.h in rsxs-0.9/src/common.cc\n. Thanks to @Memphiz and @cptspiff for fighting darwin with me.\n@davilla is probably the only one who cares about old linux?\n. Should be good. @sraue will this cause you any trouble?\n. @sraue, which version of gnulib is OE using currently?\n. @sraue I'll take a look at the patch later this evening.  I'm a little apprehensive to patch auto-generated sources though.\n@theuni Thoughts on doing the gl_cv_func_gettimeofday_clobber=no in main configure like this?\n. I'll try ubuntu 12.10's gnulib-tool and see what it gives us.\n. ",
    "neoflex": "hi, \nthe empty space is a mistake :/ how can I fix it?\n. thank you. Is it ok like this? I used the reset method.\n. done ;)\n. hi, thanks for your advice. I am kind of new to all this git collaborative development world, sorry. I'll try to do it again, properly...\n. Thx for your comments:\n1. I didn't know that people use also 16/9 thumbs for tvshows. Is that the kind of images marked as TV Thumbs or ClearArt on fanart.tv? (e.g. http://fanart.tv/shows/?id=121361)\n2. Good idea, I'll do it.\n3. That's weird, I also used the last chrome on macos and ubuntu and don't see this problem.\n. 1- & 2- done ;)\n3- couldn't reproduce the problem :(\n. for the 24 problem, could you please have a look at the select form generated and check if each option has a value set?\nit should be fixed for the overlap, and I also reduced the tv show info box. Tell me if you think it's ok like this.\nNo problem for pointing things out, I prefer doing this now than in a hurry after releasing it ;)\n. yep, wasn't sure if it was ok to use the nyxboard image and was ready to change it if needed. I'll send you an email, and will be waiting for my order #423 :p\n. oh yes, you can merge it as Malard is ok with the use or their image. He gave me a nicer image, but it needs some work to use it. As this one is usable, the nicer image can be integrated later on. \nDid someone test this besides me?\n. great ! \n. +1 for this PR. I tried to merge the AudioEngine branch with spotyXBMC2 and it crashed as soon as I tried to play a spotify song. For what I have found (not sure though), it's related to this PR as the crashed occured in paplayer, a division by a null variable.\n. ",
    "isidrogar": "I think it's difficult to overcome the problem of decoupling CProcessor from CDecoder. The discussed approaches only solve the global variable problem but don't solve the problem if we have several different opened decoders.\nIn this situation if we want to reuse CProcessor from any possible instances of CDecoder we need an object for each (different resolutions, different surface arrays) one way to do this is to declare a private member variable inside CDVDVideoCodec abstract class and create/access if needed. Then we pass down the processor object as part of DVDVideoPicture for each decoder as usual.\nTaking into account these I think CProcessor can't be in WinRenderer because it will be limited to only one instance.\nI don't have much time this week but I will try to push some test code in my git for discussion. I only want to make sure we all share ideas, we go in the same direction and don't make the same work twice.\n. I think the postprocessing options you comment are only enabled when EVR or VMR is used (ie. when you use directshow for rendering).\nAnyway could be a good idea to be able to select intermediate deinterlacers.\n. From my point of view I think it's ok the current Auto/Bob/HQ settings in GUI (default Auto). Most users don't know about deinterlacing and so many options only adds confusion.\nAdvanced users can edit advancedsettings and here could be interesting to select a custom deinterlacer based on resolution or framerate with the GUID.\n. Yes, I understand what you say.Of course a \"Auto\" could not have the same behaviour for DXVA, PS or sotfware renderers. So what we have to do here is to define a list of prefered methods in case of \"Auto\", and this list must be able to be defined for each renderer.\n. Thanks a11599. Yes, I think you are right and the original surface handling in Render() also works for deinterlacing with sofware decoding. I changed to my implementation when I was creating first versions of CProcessor surface management and it remained there. But please don't forget it for the future because I think my solution is a simpler approach and is safer in order to avoid fails in VideoProcessBlt (ie. \"valid\" variable can be less than needed samples for blt). As we have seen in forum a fail in this call can lead to a program freeze with some video drivers (specially at begining or end of stream).\n. Hi a11599,\nIf you don't mind and everyone else involved also agree I can follow up this. As I have been involved in recent DXVA renderer changes and did some work with deinterlacing in my patch, based on yours, I can be helpful here.\n. Thanks a11599. I will open a new pull request refering this as soon as recent changes in DXVA renderer are merged upstream. Of course fell free to make any comments or suggestions in the new PR.\n. @Voyager-xbmc:\nYes, I have seen pull request 342. It is for deinterlacing as next step evolution for DXVA2 processor renderer but I can't find any code related with the topic of this pull request. Can you be more specific?\n. The new commit has changes for addressing all the issues commented. The new class CSurfaceContext takes care about surfaces and ref counts. It is passed to CProcessor through DVDVideoPicture so it's compatible with several CDecoder instances. The decoder has no access to globals anymore.\nRegarding the additional surface creation in CDecoder a new parameter is added in Open(). DVDPlayerVideo gets from RenderManager the maximun number of surfaces needed by processor in all render target and sets the value when initializing selected codec.\nThis could be the right way to go.\n. @Voyager-xbmc:\nYes, this code is similar but I do my implementation because other things are done after. My code is not intended to be used with a11599's by now as both are based only on master. Additional work will be needed to be used together but this will be next step. I hope we can see both codes merged upstream soon ;)\n. Thanks! :)\n. I think if we are doing something with hardware decoding and rendering is because we are looking for performance. An extra copy for surfaces may be too much penalty for low end systems. For a 1080p picture we have a lot of bytes to copy and not only need a fast processor but also a high memory bandwidth. I tested this some time ago and the framerate drop was noticeable for my Intel Centrino Duo plus ATI Mobility.\nWe must not lose the focus on first. Now all new implementation is nearly done it would be better to go ahead so we can enjoy the best of our hardware.\n. Yes, you are right and copy should happen on GPU using video memory. I'm thinking now on systems like my desktop AMD 780g where main system memory is shared with video memory. May be tedious for them.\nAs said before I'm now on a trip but when I come back home I will try the copy implementation to compare the penalty against shared. If not too much could be an alternative. I'm not close to this (simpler is always better) but I'm not happy if we lose performance. Think if we want also advanced deinterlacing we will need every GPU cycle.\n@CrystalP:\nYour approach for decoder and processor may not work because as said by Microsoft all the surfaces for hardware decoding must be allocated by CreateSurface() from IDirectXVideoDecoderService. We can't use ones allocated from processor.\n. Ok, let's go step by step. First, the PR is rebased on current upstream and last commit includes commented changes using PreInit() in OpenStream for CSurfaceContext.\nRegarding alternative implementation using a copy for surfaces I have compiled a modification for comparing performance. It is simply done in DXVA.cpp using CreateSurfaces() also for CONF_FLAGS_FORMAT_DXVA and using this code in Add(DVDVideoPicture* picture):\n```\ncase DVDVideoPicture::FMT_DXVA:\n{\n  surface = m_surfaces[m_index];\n  m_index = (m_index + 1) % m_size;\ncontext = m_context;\nif (FAILED(g_Windowing.Get3DDevice()->StretchRect(IDirect3DSurface9*)picture->data[3], NULL, surface, NULL, D3DTEXF_NONE))\n    return 0;   \nbreak;\n}\n```\nAs I wanted to test it for deinterlacing I also hardcoded the m_processor GUID for ATI vector adaptive and added the changes to support it in renderer.\nThe result (deinterlace enabled) is a noticeable loss of performance (lot of frame drops using copy versus only few drops with shared surfaces) for 1080i recorded TV clips in my Intel with Radeon Mobility laptop at 1280x800 60Hz display resolution. My desktop AMD 780g shows less frame drops versus no drops at 1920x1080 60Hz. If I disable deinterlacing results are better as expected but I still have a few frame drops with some videos.\nAs a summary we have these ways to go:\n1) Using shared surfaces with CSurfaceContext implementation as shown in commits. Best performance, all code changes is done and can be used right now, but many diffs.\n2) Use copy surfaces implementation. Simple to be implemented but loss of performace.\n3) Explore new idea solutions like proposed by CrystalP passing surfaces from processor to decoder. I have not tested it but I think the main problem here will be ffmpeg is using surfaces for decoding and we can't suppose anything about its use so it is dangerous to create and mantain surfaces from a class outside CDecoder.\nSorry for the long text. Now we have all the cards on the table what do you think about the best way to go?\n. The last commit is clean rebased on current upstream. All recent changes commented are included. What do you think, is ready to merge?\n. I have tested PS renderer and I don't have problems but I will check more deeply. Anyway as you are checking current code I will not make more commits to wait your latest comments.\n. Sorry for so many brace style issues. I didn't find code guidelines for XBMC and finally realised was in forum few days ago. I will fix it. No problem for code squash+rebasing and splitting in several commits.\n. Modifications+rebase+split done.\n. Rebased and included modifications commented. I have kept the number of commits as before.\n. Yes, ovelaying menu on playback when pressing ESC is what I mean.\nAs it seems low power hardware is having troubles to manage I will add an advanced settings flag to disable the new behaviour if needed.\n. It seems m_presentevent.Set() must be left in place (choppy backgound playback if removed) and also different execution path must be provided for advanced setting flag, so only create Render() function for sharing code between Present() and RenderUpdate().\n. Rebased and modified with last comments.\n. Ok, the main benefit here is we follow exactly Microsoft's guidelines for VideoProcessBlt(). Current implementation rely on video driver can support a reduced number of samples. It also doesn't handle future ref frames in case of required samples are not found in buffer.\nThis is only a simpler (I think simpler is better) implementation proposal than current code and solves the problem but of course is up to you to decide if it's worth to be included.\n. You are right and current code hadles future refs in correct way. There is only an ambiguity if there are future refs requested by the processor (as commented in code) and not enough frames in queue. Then you must rely on video driver supports a VideoProcessBlt() with reduced number of samples (MS specifies you always must provide all the samples count).\nWhat I do in my code is simply to check this first and avoid blt is there is something wrong. Of course we may do a similar check with queue but all stuff of this checking, finding indexes and filling the samples required for blt is simpler when we have a fixed array count to work compared to a variable size queue.\nTake this code only as an alternative proposal for simplicity. I think it's easier to mantain and easier to understand. It's an idea that was rolling in my head and wanted to share. If you think it's not a valuable change we can leave things as now. I will live with it :)\n. m_output.inited was inited to false since 2f6e0fb3ce8f33cbe92e6db17cf41c3bce8be017 because sometimes g_renderManager.PreInit() was never called again after closing videos.\nThis new commit also fixes the problem so it's ok for me.\n. Ok, further testing reveals a problem. We need processor surfaces count information ready before calling g_renderManager.GetProcessorSize() in OpenStream() so g_renderManager.PreInit() must be called before thread of DVDPlayer starts. It's enough to move g_renderManager.PreInit() a few lines above and put before Create() call in OpenFile().\n. Yes I did this way to avoid so many changes. I will fix it.\n. Yes, I thought about multiple CDecoder instances can exist when I wrote the code. This is why I only access RenderManager as read only and the value of processor surfaces is set only one time before any decoder creation. In PreInit() function of RenderManager I query the CProcessor to find the maximun number of surfaces that will be needed among all the supported DXVA2 processors so this size will never change.\nI will think again about these issues mixing your propossed new ideas to avoid any access to RenderManager from CDecoder.\n. Yes, this will be better but the only thing here is we need an already created WinRenderer to check the surfaces needed, and this object is created in RenderManager PreInit(), which is called in CDVDPlayerVideo::OnStartup(), so when we call CodecFactory::CreateVideoCodec() we don't have a valid renderer yet. One option could be moving the call to PreInit() before codec creation in OpenStream(). If this is ok for you I will do this way.\n. Yes, but this is needed for avoiding errors in case we use DXVA decoding and no DXVA processor (software or PS).\n. Ok, as I'm going to add a new commit including commented changes I will rebase on latest.\n. This patch is also intended to overcome this limitation and be able to use any decoding/renderer combination. You can now for example use DXVA decoding and software/PS rendering (if you have enough power for software colorspace conversion). This is why CopyDXVA2Picture() is added in CDVDCodecUtils.\n. For the reasons commented before PreInit() only is needed when render method has a chance to be DXVA. Decoding doesn't matter anymore.\n. Sorry for misunderstanding. Your suggestion is a good point. I will take a look to your branch and keep in mind when making changes for deinterlacing.\n. Yes, I have the same performance penalty. Of course implementation in CopyDXVA2Picture() needs to be optimized in some way as I comment in code. The idea here is DXVA processor can be seen for user as a totally independent renderer in GUI settings and if we force to use it for DXVA decoding \"seems\" linked in some way. I would like to mantain the code as now to be homogeneus and try to optimize this later if you agree (and if this has sense, may be my idea is totally wrong).\n. Thanks for indication.\n. ",
    "wmyrda": "+1 for having this included\n. idea itself seems great to me. any chance this gets implemented? BTW I am using external ffmpeg 1.0 and would like to move to the 1.1 as well. Would it work with them as well?\n. I updated the patch http://pastebin.com/0h5g1UdB with polish translation and added additional post-processing settings which I personally like to use and tested it with external ffmpeg 1.0.3 and seems to work well with that combination.\nOne thing I didn't personally like in the original patch is naming one of the options SLOW_CPU as fast cpus might like this setting too for some videos hence the change to AUTO. BASIC or AUTO_BASIC would probably be more appropriate as well.\n. I read mplayer manual filtering (pp) section http://www8.mplayerhq.hu/DOCS/man/en/mplayer.1.txt back and forward several times and could not find information about thresholds, but then I typed \"mplayer -pphelp\" and it sure mentioned that setting it the same for H & V is required. Still I believe that mine should work too as I set same levels for both. It probably was just redundant, but I could be wrong. In either case definatly extra 128:7 should be removed.\nThat said is is possible to add INSANE/EXTREME/SLOWEST filter with levels od something like 255:3 for example? What is the limit there if any?\nWhat about h1 & v1 filetrs. Are there any better than any of the below combinations or if somebody says so it is just a placebo?\nLocaly I already switch \"Auto\" to \"Basic\", but before I post it I consider changing it a bit to something like this. Please take a look if it makes sense\nHighest = \"ha:255:3,va,dr\";\nHigher = \"ha:128:7,va,dr\";\nHigh = \"ha:a:128:7,va:a,dr:a\";\nNormal [set to default] = \"ha,va,dr\";\nFast =  \"hb:a:128:7,vb:a,dr:a\";\nFaster = \"hb,vb,dr\";\nFastest = \"hb:a,vb:a,dr:a\";\n. I must have missed notification about your post so hence only now the response. I agree having to many choices may not be what one desires, and sticking to those automatic once will be better choice for more users, but I would keep that ha:255:3 in there as I tested it with some very bad quality low res samples and it did in fact not only work but made them look better. With that said it would get it down to only 4.\nHighest = \"ha:a:255:3,va:a,dr:a\";\nHigh = \"ha:a:128:7,va:a,dr:a\";\nDefault = \"ha:a,va:a,dr:a\";\nFast = \"h1:a,v1:a,dr:a\";\nFollowing is what I had used till now http://pastebin.com/pHgXzpSM with FernetMenta tree which worked quite fine for me for the past month until recent changes in the settings directory. Another one http://pastebin.com/EawcXZSk is current WiP reflecting that change however I am not able to find reason why it would not compile for me with errors in MediaSettings.cpp and VideoDatabase.cpp\nOn the side note to further extend on the idea I believe a quite welcomed feature would be to add an ability for an users to pick different postprocessing method for different resolution/s. Once they enable PP if they do not take additional action then the default would be picked. Then they could enter as many resolutions as they want just like with \"adjustrefreshrate\" and then pick among those 4 above PP methods.\nThat way I could for instance set Highest for 576, High for 720, Default for 1080\n. Seems like the time for merging could be now ;)\nhttps://github.com/xbmc/xbmc/commit/cc2cf05f45c5051c034e626fce8e1f708a6a136c\nPlease take a look at this patch as like it have been said here time and again there is plenty of those that would welcome the patch in the official tree :)\n. Guys is there any progress on this one? vaapi is my current way of using hardware acceleration and any way of improving this would be welcome :+1: \nHopefully adding EGL/GLES would also contribute into running XBMC skins at less than 100% cpu power ;) I mean there should be a way of it taking less cpu than 1080p content :)\n. sorry if I got a bit carried away as I did not mean to offend anyone, but rather just wanted to thank those  that wrote the code. I looked at the all pull requests and commented only on 4 of them out of over 160 which IMHO where most important ones and hence giving in them +1 or thumbs up\n. ",
    "andrewfg": "I wanted to stay within the argument template of the base class. So instead of messing with the construcor, I added a new method. Note also that when opening a file, the old argument template must be called with void arguments (because no mime type data is available); whereas when opening an HTTP stream, the mime type data must to be passed in too. I suppose that one could have two constructors; but the alternative way (what I chose) is to have a single constructor plus an additional method to take in the mime type data...\n. > > and have the parsing in codecfactory\n\n\nAnd really I think that is the wrong place to do it. Because the attributes \"rate=mmm\" and \"channels=n\" are attributes wholly specific to the mime type \"audio/L16\", and are not generic for other mime types. So the parsing belongs in PCMCodec and not in CodecFactory...\n. The constructor initializes the properties to the defaults defined for the L16 pcm mime-type ( i.e. 2 channel / 44100Hz ).\nThen SetMimeParams() only overrides the defaults if the mime-type string contains \"rate=48000\" or \"channels=1\" modifiers.\nAnd then Init() is called to open the file / stream itself.\n. I am a newbie on this project, so am not completely sure what you mean by build system changes. I guess you mean explicitly adding the two new files PCMCodec.cpp and PCMCodec.h into the respective .xyzproj or .sln files? \nI used Visual C++ 2010 Add files command, and the IDE justs sticks the added files somewhere any old place in the project definition files, but apparently not in a very orderly manner. Is that Ok, or do you want me to edit the project files manually with a text editor so that the includes are listed nicely alphabetically. Or ??\n. I was working on this a bit more, and I realised that currently there is no point in having a codec for a pcm audio stream delivered via UPnP, because when the music explorer is browsing through a UPnP content directory, it does not even recognise tracks that have this mime type (audio/L16) as being playable, so the app never even gets as far as calling CodecFactory for this type of resource.\nIn other words, (to make it short), before asking you to pull in my new codec, I also have to go and fix the browser so that it considers such pcm streams to be playable.\nI spent a few hours this PM tooling around the source code, but unfortunately could not identify which source files I need to work on. So any tips would be appreciated!\n. I solved the problem.\nActually xbmc is very strict concerning the sequence in which DLNA ProtocolInfo attributes are offered; and it was rejecting the server's offers as being out of sequence . Having re-read the DLNA specs, it seems that xbmc is compliant with the letter of the specification, so I have corrected this \"bug\" on the media server side, (However personally I would have suggested that xbmc should be more lenient).\nHowever, another bigger problem arose in the process: my PCMCodec does not work! => So please put this pull request on hold. \nI think the problem is due to Big/Little Endian issues; the audio/L16 mime-type specifies network byte order, and I think I need to swap the byte order for the xmbc Windows application; and I suppose this would be different for a Unix build. => Question: does xbmc have (fast) utilities for swapping network byte order of whole data streams? (I found the Endian_Swap utils, but these are certainly not fast...)\n. I fixed the endian issue in PCMCodec::ReadPCM() and it plays fine on my Windows/Intel machine. But I don't know if this fix works machine independent ??\n. This is now ready to commit.\n. Ok. The first patch seemed to work. But the second one failed the first time for some unknown reason, and when I tried again it said nothing needed changing. => Did it all arive Ok at your side??\n. I guess you are right. You probably don't want to pull my VC project anyway. Or ??\n. VC explicitly adds new units (like PCMCodec) to its project files; but from examining those project files, it seems the xbmc team practice is not to explicitly add units to the VC project files, but rather to just let VC pull them in implicitly via the include instructions in the various units during the build process. That's why I did not upload the VC project files...\n. Hey I am not at all worried what is happening at my end (I can fix that); I just want to make sure that whatever comes over at your end is Ok with you guys...\n. Hi I seem to have really messed up the VC project patch, so I seem neither able to get the original back, nor to apply the patch; it is probably because I don't really understand git command enough. But I uploaded the other patched file, so would anyway suggest to proceed with that.\n. Just to update you all: I have fixed all the three issues raised by elupus in July.\n. > Looks good\n\n\nThank you.\n\nyou could rebase and squash it to one commit than somebody\n\nSorry, but being a bit of a newbie, I didn't really understand what you mean by this ??\nAndrewFG\n\n-----Original Message-----\nFrom: elupus [mailto:reply+i-1169348-\nbc91b8a9f457c136f21c4879e30ee72dde85aaae@reply.github.com]\nSent: Tuesday, September 06, 2011 9:46 PM\nTo: software@whitebear.ch\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\nLooks good, you could rebase and squash it to one commit than somebody\ncould add the Makefile for linux/osx\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251#issuecomment-2021493\n. Dear Joakim,\n\nThanks for the instructions; I tried them and failed dismally; I am totally confused and I have no idea how this git stuff works...\nI believe I made quite a valuable extension to xbmc, but to be honest I don't have the time to learn all the git voodoo\nSo is there an EASY way to give you guys the code that I wrote?\nIf not then it is probably easier to just abandon the whole thing...\nAndrewFG\n\n-----Original Message-----\nFrom: Joakim Plate [mailto:reply+i-1169348-\nbc91b8a9f457c136f21c4879e30ee72dde85aaae@reply.github.com]\nSent: Tuesday, September 06, 2011 10:35 PM\nTo: andrewfg\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\nsay your github account remote is called andrewfg and xbmc main github\nremote is origin then:\nFirst create a copy of your branch where you make changes:\n\u00b4\u00b4\u00b4\u00b4\ngit branch playground\ngit checkout playground\n\u00b4\u00b4\u00b4\u00b4\nthen:\n\u00b4\u00b4\u00b4\u00b4\ngit rebase -i origin/master\n\u00b4\u00b4\u00b4\u00b4\nThis will open an editor where you can re-organize your commits. What\nyou want to do is keep the first, then change the \"pick\" work of the\nothers to \"squash\" or just \"s\". That way they will be combined into the\nfirst commit.\nWhen done you save and close the editor.\nGit will then try to do what you asked, and if it finds conflicts with\nupstream it will stop letting you edit the files to resolve the\nconflicts. If you had conflicts and have resolved them, then you do git\nrebase --continue to finish the process.\nThen when done you push your new branch to the same branch name you\ninitiated this pull request (git push -f [remote] [source\nbranchname]:[target branchname]. The -f param is needed since you are\nrewriting history of the remote branch. (ie replacing it)\n\u00b4\u00b4\u00b4\u00b4\ngit push -f andrewfg playground:master\n\u00b4\u00b4\u00b4\u00b4\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251#issuecomment-2022004\n. Can anyone please help me? I don't understand GIT. My changes have been ready to be incorporated since September. What do I have to do to get them adopted?\n. Hi Joakim,\nIt needs to be rebased/squashed \nMy problem is that when I try the rebase function, Git says there is nothing to be done. And I am not clever enough to debug Git. Can you help me please?\nand corrected for linux\nCan you please be more specific what you mean by this? \n\nAndrewFG\n\n-----Original Message-----\nFrom: Joakim Plate [mailto:reply+i-1169348-\nbc91b8a9f457c136f21c4879e30ee72dde85aaae@reply.github.com]\nSent: Tuesday, November 08, 2011 10:09 PM\nTo: andrewfg\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\nIt needs to be rebased/squashed and corrected for linux before it can\nbe merged.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251#issuecomment-2673602\n. Ok Joakim, based on your help I did manage to proceed one step further. \nI was able to start the rebase, and then the \"squash\" commands seem to have worked.\nBut it failed on making the initial \"pick\" -- see message below.\nI have no idea what is going on here.\n\nBut look Joakim, all I did was write one lousy new C file, and added some code to one of your existing XBMC files to call my new code. And all I want to do is GIVE you guys this code. It is not a big deal, and I am not really willing to mess about much more with this $\u00a3&* GIT thing. Can't I just E-MAIL the two files in question to somebody, and politely ask them to add those files to the XBMC code base? That's all I ask. Really...\nAndrewFG@AFG2-W7 ~/xbmc (master)\n$ git rebase -i xbmc_remote/master\nerror: could not apply 0e3220b... 2011-07-05 Created audio codec for pcm streams; AndrewFG\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add ' and run 'git rebase --continue'\nCould not apply 0e3220b... 2011-07-05 Created audio codec for pcm streams; AndrewFG\nRegards,\nAndrewFG\n. Hi Joakim,\nThanks. I appreciate your coaching. Following is what I see when doing \u201cgit status\u201d. The PCMCodec.* are my new files, and the CodecFactory.cpp is the one I modified. I have no idea what the lib/../1 files are about..\nAndrewFG\n\n-----Original Message-----\nFrom: Joakim Plate [mailto:reply+i-1169348-\nbc91b8a9f457c136f21c4879e30ee72dde85aaae-893994@reply.github.com]\nSent: Thursday, November 17, 2011 10:52 AM\nTo: andrewfg\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\nI do appreciate your contribution. But adding things to code base\nrequires testing, which I can't do easily but you can. Also since you\nare the person most motivated to get this in, it feels logical that it\nwould be you doing the work. All developers on xbmc are a limited\nresource. And at least when it comes to me, have much less time than\ni'd like to spend on xbmc. Doing review on github is easy (and usually\ndoesn't take much time away from your normal day to day work). Thus I\ntend to want patches to be complete before I merge them in.\n(occupational hazzard from following ffmpeg development for a long\ntime)\nSecondly given that you apparently can code, learning to use git is\nsomething you'd have use for in other projects too. It's starting to\nbecome the dominant VCS out there.\nAnd on your issue. The reason is that somebody have changed code which\nyou have modified after you modified it. Thus there is a conflict.\nWhich have to be resolved. If you do:\n```\ngit status\n```\nIt will list conflicted files. Opening one of those in an editor, you\nshould find conflict markers \"<<<<<<\",  \"=====\", \">>>>>>\" (search).\nThat's where it failed to apply the patch. Usually it's just small\nproblems. Above the == you have your code (I think, could be opposite),\nbelow you have current code. Just remove the conflict markers and\nupdate the code to be correct. If it's the project file, it might be\neasier to redo the change. (git checkout filename, will reset the file\nto before the patch).\nWhen you have resolved conflicts in a file:\n```\ngit add [filename]\n```\nWhen all conflicts have been resolved,\n```\ngit rebase --continue\n```\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251#issuecomment-2774105\n. > Seems your quote got lost.\n\nIt was a screen shot embedded in html formatted mail so probably your mail server dropped it.\nThe screen shot is here http://www.whitebear.ch/downloads/Untitled.png\nAndrewFG\n. Hi elupus,\nI modified the code based on the three comments you made on July 27th\nAndrewFG\n\n-----Original Message-----\nFrom: elupus [mailto:reply+p-76813-\n8916f5a4c52b7aa1e61bf86d0d6e25eed4e71b49@reply.github.com]\nSent: Thursday, July 28, 2011 8:52 PM\nTo: software@whitebear.ch\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\n\n\nreturn READ_ERROR;\n  +}\n  +\n  +bool PCMCodec::CanInit()\n  +{\nreturn true;\n  +}\n  +\n  +void PCMCodec::SetMimeParams(const CStdString& strMimeParams)\n  +{\nif (strMimeParams.Find(\"rate=48000\") > 0)\nm_SampleRate = 48000;\n  +\nif (strMimeParams.Find(\"channels=1\") > 0)\nm_Channels = 1;\n  +\n\n\nParse the mimeparameters properly with a proper setup for all rates\nallowed. I assume the mimeparams are separated with semicolon or comma.\nSo use StringUtils::SplitString() to split it into parts and iterate\nthe options.\nYou can look at CFileCurl. It does something similar for ftp param\nparsing.\nIf you fail to setup any param, set them to some default or zero and\nfail init when they are missing.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251/files#r76813\n. Ok done.\n. Done.\n\nAndrewFG\n\n-----Original Message-----\nFrom: elupus [mailto:reply+p-113241-\n9535a373487a7971e5531c4f07e32cd62ab744d7@reply.github.com]\nSent: Monday, September 05, 2011 5:20 PM\nTo: software@whitebear.ch\nSubject: Re: [xbmc] New audio codec for pcm streams (#251)\n\n\nCStdStringArray mimeParams;\n  +\n// if there are no parameters, the default is 2 channels, 44100\n  samples/sec\nm_Channels = 2;\nm_SampleRate = 44100;\n  +\nint paramCount = StringUtils::SplitString(strMimeParams, \";\",\n  mimeParams);\nif (paramCount)\n{\nfor (int i = 0; i < paramCount; i++)\n{\nif (mimeParams[i].Find(\"rate=\") >= 0)\n{\nCStdStringArray rate;\n  +\nint strCount =\n  StringUtils::SplitString(mimeParams[i], \"=\", rate, 2);\n\n\nAlways do the split string on \"=\". Then check rate[0] == \"rate\"\ninstead. Your current code would grab myweirdoptionrate=1000 not only\nrate=\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/251/files#r113241\n. \n",
    "natethomas": "Hi all. Just to toss in my fairly miss-guided two cents, it appears to me that an step toward making XBMC run on only a single back button is a good thing. As this does that, and, if enough complaining happens, as it can be altered so that it can accomodate custom keymappers who hate change for a generation or two, I feel pretty good about it.\n. In messing around with the keyboard, I have a small suggestion. It seems to me that \"Enter value\" is somewhat dry and unnecessary in the text entry box. I would think if the box was simply left empty altogether, users would still pretty much get the point of what it's there for, particularly as they start typing.\n. Just adding a note for myself about the first time run string change. \nhttps://github.com/xbmc/xbmc/commit/e00a098e07b9f2513cda375cbec0c736288b1666\n. Needless to say, I'm in favor of this PR. The changes are relatively minor. Mostly they just add support for a few more controllers that we didn't know about before. But it's Davilla's call.\n. ",
    "joelmeans": "@dteirney:  I will look into the UI stuff and look for the ISO language mapping.  Thanks for taking some time to look at it.\n. The ISO language mapping appears to be in xbmc/utils/LangCodeExpander.{cpp,h}.  There are methods to convert iso639_1 to iso639_2 (two char to three char codes) and for code lookup.\n. Closing.  See previous post.\n. I am still working on the UI stuff for language selection, but for now, how about adding a switch to disable this auto-selection?  Some folks might not want it.  I did this in the older pull request (https://github.com/xbmc/xbmc/pull/255).  I can add that after this gets merged if you like.  Just a thought.\n. I am also on Linux, but it looks like if you go to the file xbmc/project/VS2010Express/XBMC.vcxproj, you just need to add lines for StreamUtils.{cpp,h} like this line:\n\nand this line:\n\nJoel\n. Sorry, apparently I needed to escape some brackets.  Just search for StreamDetails and copy the two lines (in different places) and paste a copy, changing StreamDetails to StreamUtils.\n. And do the same for the XBMC.vcxproj.filters file.\n. Let me rephrase what I said above.  The way the current patch is, I am setting the UI label to be the full language name because I think it looks better and is more user-friendly than the language code.  But, to make the setting (\"preferedlanguage.audio\" and \"preferedlanguage.subtitle\") useful, it needs to be set to the language code.  So, is it possible to set the setting to the language code while still displaying the full name?  Looking at AddLabel(), it doesn't appear so.\n. Yes, this only displays languages from the database.  Since this is selecting a global preference, I think that most people would have most of their videos in the preferred language.  The complete list is rather long and would be a pain to scroll through.  I guess we could have it failover to a complete list in the case of no database existing.  I will do the changes you suggested when I get a few minutes.  Some of that is just me forgetting to clean things up before pushing.\n. Okay, I have changed this to populate the UI with the full list of iso639-1 or iso639-2 language codes.  The code is there either, but I have the iso639-1 in effect with the -2 commented out.  This is because the list size goes from 143 to 536 entries (these are based on what is found in xbmc/utils/LangCodeExpansion.cpp).  I haven't cleaned out the old code for getting languages from the database until it is clear that the full list is what is necessary.\n@pieh - In the pull request on auto-selection of audio tracks (https://github.com/xbmc/xbmc/pull/265), it was pointed out that the devs didn't want another UI preference to disable the auto-selection.  As far as a fallback, I don't know if I understand what you mean.  There are separate settings for audio and subtitles.  If you don't want English for both, you can set them to be different.\n. I tried yesterday to do a rebase and push, but couldn't get it done.  That just made a mess of things.  I could do the rebase, but when I tried to push, I was getting non-fast-forward errors.  Can someone walk me through the correct steps for doing a rebase and push back to my fork?\n. Okay, now I've really done it.  I accidentally got this pull request closed.  I have updated my branch to have a single, all-inclusive commit, but my \"Pull Request\" button has disappeared and I don't know how to re-open this request.  Any suggestions?\n. Okay, my \"Pull Request\" button showed back up, so I submitted a new pull request here: https://github.com/xbmc/xbmc/pull/274.\n. ",
    "lemonboy999": "OK understand the merge thing - just inexperienced, will try but can't guarantee to never do this again.\nFinally understand the dirty region issue. Can keep this seperate by not changing the colordiffuse variable.\nThe priority I was going for was that if you set the colordiffuse attribute, it overrides the colordiffuse member, this seems appropriate for a new feature, a color multiply seems far too complicated.  So if you dont use a colordiffuse attribute, the colordiffuse for the control is used - if you do then the colordiffuse for the texture is used - seems straightforward.\nThe borderdiffuse is key for me - bordered texture cannot be applied to all textures which is partly the point of this change in the first place\n. Now you have some time, you should look at a couple of extra things. Since I put the original PR in, the code base has moved on. The change as submitted does not allow for skin variables to be used in the texture colordiffuse attribute, whereas the control diffusecolor allows this. Also I don't think the original point with one diffuse overriding the other was the real issue, I thought it was about merging the two. The reason the borderdiffuse was rejected was because you could use a bordertexture, however this cannot be applied as an attribute - maybe you could look at this as well.\n. Sorry, I meant that although you can put a $VAR as the colordiffuse attribute, it will only use the value when the control is created and wont update as the $VAR changes. You need to put an extra check in the TextureBase::SetDiffuseColor routine.\n. ",
    "krixon": "I based it on the naming convention specified here:\nhttp://wiki.xbmc.org/index.php?title=Videos#Using_Multi_Language_Subtitles\nwhich only mentions this format, but I definitely take your point that it's not ideal should more subtitle naming schemes be supported at any point.\nI'll take your suggestions on board and try to use the method you suggest.\n. ",
    "otzy007": "hope now the identation is good\n. Yes, you can verify the file /sys/class/hwmon/hwmon0/temp1_label if the label is \"CPU Temperature\". \nI don't find any reference on google that another temperature is stored in that file.\nI've tested my change on my laptop and 2 other computers with intel and amd cpu.\n. Ok. If there are any bugs I'll try to fix them.\n. Done :D\n. I get this error too if unistd.h is missing.\n. Duplicate\n. On Slackware Linux also XBMC doesn't quit after this PR\n. I've submitted to you a PR with fixes for 2 errors I encountered during the compilation on Linux\n. No. My laptop doesn't have an ODD.\nI will test it in a few days when I'm home if no one else can do it.\n. ",
    "Dak0ta": "I think that's something that could be added - but it would almost need to be some type of \"share\" id and features implemented based off of that - this is specifically a unique Identifier to simulate a database auto_increment field and should not be edited by the user.\nThe only reason to manually edit these would be for something like syncing up multiple XBMC boxes and know what they want to do with the ID's. (ie... setup the same 3 profiles on 3 XBMC instances with mysql and ensure the ID's are all in sync) - and even then the ID's need to be unique within the same profiles XML.\n. Done!\n. Ready a little earlier than anticipated. :)\n. ",
    "doozan": "@ronie: MUSICPLAYER_USER_RATING was added to retrieve music ratings on a 0-10 scale instead of the 0-5 scale used by MUSICPLAYER_RATING.\n@JM: Your changes look good to me; I've tested them on my build and everything seems to be working properly.  Since you'll have to pull this in from your branch now, I'm closing this pull request.\n. Hi,\nThis is my code and it's a bit stale right now.  At a minimum, the DB revision needs to be bumped up -- I think we're at revision 58 right now.  If any xbmc maintainer is willing to pull this into the tree when it's ready, I would be more than happy to update the patches.\n. ",
    "arfoll": "I don't understand why you can't pass the user provded CFLAGS to sub libs...\n. Yes but why the specified flags being prefixed and suffixed?\nPeople should be setting their own CFLAGS. we can't just assume everyone compiling for ARM is going to be using \"-mfloat-abi=softfp -mno-apcs-stack-check\"\n. Then the cflags for these libs that need the changes need to be set before configure as well. Maybe a little script with predefined values or a simply explained in the README files would be good, but they don't belong in the configure.\n. and you plan on adding specific cflags for every architecture/platform support?\nI was thinking something like this\n./getcflags.sh --arch-tegra --enable-this-option\nthe getcflags.sh script can contain the defaults and people can still set what they want if they want to do that. Then the script can call ./configure without the --arch option.\n. might as well fix it properly ;-)\nIt is an unsigned int in yajl 1.x\nhttp://lloyd.github.com/yajl/yajl-1.0.9/yajl__gen_8h.html#ae59a572028ef98b3aff11802b1583712\n. Thanks for the quick and clean instructions :-)\nI did a fixup.\n. I figured this was the best way since libcec uses that method to disable itself...\n. @jmarshallnz sorry I don't have the time.\n. This is great, swscale needs to go too, as @theuni said no need for it when using HW decoders.\n. ",
    "vguerci": "Was guessing why a backup was big&slow, just figured addons/packages grew to 830MB over the time...\nI'll give it a try and hope it will be merged some day :)\nEDIT: Works perfectly, dropped to 166MB as expected, thanks @cptspiff\n. ",
    "jester-xbmc": "Maybe an ifdef for certain platforms? look at ATV2, lots of questions on the forum about having no space and us pointing out to clean up (it's on the wiki but still) (same goes for higher database revs on upgrade, the old ones stay behind and fill up fast on big databases, but thats off-topic) \n. @jpsdr as you seem to have a working patch, can you (if you don't have one already) do a fork from XBMC on github, do the change and then do a PR (Pull Request) so it's easier for the dev's to pull it in (as this is a closed PR)\n@elupus Also I remember there was a PR with backports from Eden, i'm not sure this one made it\n. post-frodo love sprinkle? :)\n. while you are re-vamping the info part for Rpi, maybe you can add the output of vcgencmd codec_enabled WVC1 and vcgencmd codec_enabled MPG2 (enabled/disabled) so the users can easily check that the bought licenses are correctly entered in config.txt (saves us from typo's and tickets/questions about DVD/streams not working)\n. reason for change: http://trac.xbmc.org/ticket/14224 \n(12.1 breaks flash streams / official nasa add-on)\nthe difference is that in 12.0, curl did a CURLOPT_RESUME_FROM_LARGE on the live stream, which failed with error 33 after which the live stream worked fine.\nwith 12.1, due to this patch https://github.com/xbmc/xbmc/commit/169d21d99a3be2091625b874792cb93734a763f0\ncurl does a CURLOPT_RANGE which doesn't crash curl any longer, but creats a sort of loop/timeout at which FFMPEG never got the stream details and the stream failed to work.\n. indeed ;) I'm just glad this one is fixed, thanks again guys\n. as this will be handy for a number of add-on (official NASA add-on is one of them) can this also be implemented for use in .strm files ? \n. ",
    "NedScott": "We NEED this for Frodo. Even if it defaults to off and is turned on in advancedsettings.xml\n. We have had people request a GUI-less (and thus no OpenGL requirement) XBMC for music, as well as for library updating. \n. fap fap fap fap\n. v12 Alpha 1, v12 Alpha 2, etc ?\nSince all these lead up to a final (more stable) version that will be called v12. \nI think we should avoid calling them v11.whatever if there are going to be semi-stable releases of any kind, since people have it in their heads that v11 will still support things like Mac OS 10.4, etc.\n. For the sake of simplifying our settings, would it be possible to have this in\nSettings -> Videos -> File lists -> \"Default select action\"\n?\n. Would really like to see this get added for Frodo. I will see if I can find which XBMC dev to ping about this.\n. Candidate for Frodo maybes?\n. @mtisza At this point it might be best to make a new PR.\nAlso, I suggest we make a thread on the forums for keeping track of those of you who have been testing this, to get some nice feedback collected in one place. Every time we comment on here it sends e-mails out to just about all of XBMC's devs and more, so using the forum and leaving a link on the PR would be good for the devs' sanity :) (and their e-mail boxes).\nLooking forward to hopefully getting this in soon!\n. Stop scanning might be good to leave in regardless of where someone is. If you're on an ARM device, like an R-Pi or an ATV2, one might want to stop a library scan since these devices will really struggle to do anything while updating the library, including video add-ons.\n. @dersphere Yeah, that would make sense.\n. I just noticed the last two comments. This is a glaring omission for Frodo and cripples the tags feature for TV shows. If this can't make it into a Frodo bug fix release, then what is the point of having Frodo bug fix releases?\n. It's part of the functionality that we've specifically telling people about ever since tags were announced as also being added for TV shows. It's part of what makes custom video nodes and separating libraries a killer Frodo feature. It was excluded in an oops moment, and now everyone has to wait a year for it to be included in a stable build.\nI have nothing more to say about this on github, and sorry for the e-mail flooding everyone. Someone at github really needs to fix that (or maybe we'll just wait a year).\n. The fact that github mails a ton of people each time a comment to a PR is posted is github's fault. It's also not something that most people know about, so please stop biting peoples heads off about it.\n. @t-nelson From what I can see, there are multiple troubleshooting situations where accessing files (and more than just xbmc.log) could be useful in this case. More and more, we have situations where it's not entirely clear where users can look at and check these files (android seems to have a few variations for the userdata folder, for example). In that sense, I would say this would be a troubleshooting \"mode\" for many. I love the idea of being able to do this, and can see it making a lot of situations easier to troubleshoot.\n@wsnipex Forgive me, as I'm not a programmer and am not able to tell from the commits, but I assume there's a way to turn special protocol access on or off? One that defaults to off? I also know everyone cringes at GUI settings additions, but if there is a setting for this, I think it should be in the GUI (if you can't find xbmc.log, then you probably can't find advancedsettings.xml).\n. I believe the security concern is valid. This needs a switch, and it needs to be off by default.\n. Off the top of my head, addon_data. Some add-ons store plain text passwords for log-ins in various ways. The log file itself tells everyone on the network what you're watching and when, which is more a privacy concern than a computer security concern, but still an issue for some users.\nI think this would be a bad idea if there was no way to turn it off.\n. I could provide specific examples of add-ons storing passwords in different ways, but we can't predict them all. Password protecting the webserver is a valid point, but I'm still unsure why file access can't be disabled separately. I doubt most people would think to use a password on the webserver, or would be aware of what they are exposing on their local network. I'm certainly no network expert, so maybe it's nothing to be worried about.\n. Instead of a setting, why not remove the 1GB hard limit? The PR already has an advancedsetting for percentage of free RAM, which I think would cover most cases where someone would want to tweak how much RAM can be used for cache (such as, if you only had 2 GB of RAM, and the default is already 50%, even in some impossible situation where nothing else used ram, you could prevent more than 1GB being used ). I agree with the idea that, if you have more, why not use it. Video files are often larger than 1GB, and it would be nice to cache a whole file without having to use the HDD.\nBut yeah, we can worry about that later and just focus on getting this PR in as-is. If we could get this pulled into the next merge window, that would be fantastic.\nThe questions now are:\nWho needs to sign off on this?\nand\nAre there even any objections by any of the Team devs, or concerns from others? I didn't really see any in the last PR.\n. Outside of fixing/splitting the commit messages, are these other requests blocking the PR or just \"nice to have\"s (for a lack of better wording)? We currently live without those two requests for internet buffering, and this PR has been waiting a long time and has changed hands at least three times. In my humble opionion, this is one of those situations where we risk alienating good contributions/developers because the situation becomes more and more frusterating for them.\n. I tested four versions of XBMC. The debug logs all use the same movie file, but this can be reproduced with any h.264 video:\nMac OS X 10.8.3\n2009 MacBook Pro 15inch\n2.8 GHz Intel Core 2 Duo\n8GB RAM\nNvidia GeForce 9600M GT 512 MB\nViewed on internal laptop screen.\nXBMC and userdata folders were reset for these tests, so they only contain default settings and add-ons (except for disabling RSS feed on home screen).\n---XBMC v12.0:\nhttp://xbmclogs.com/show.php?id=14978\nLine is barely noticeable, only on the bottom for a tiny portion of the line, but flickers. Line disappears 100% when hardware decoding is disabled. This behavior is consistent across multiple attempts.\n---XBMC v12.1:\nhttp://xbmclogs.com/show.php?id=14979\nLine is more noticeable, but not much, only on the bottom, but at a longer length and in a different area on that bottom row of pixels, flickers. Line disappears 100% when hardware decoding is disabled. This behavior is consistent across multiple attempts. \n---XBMC v12.2pre (April 28th 2013):\nhttp://xbmclogs.com/show.php?id=14980\nSame as v12.1.\n---XBMC v13a3 (nightly) (April 29th 2013):\nhttp://xbmclogs.com/show.php?id=14981\nLine is very noticeable and on both bottom and left edge, flickers. Line disappears 100% when hardware decoding is disabled. This behavior is consistent across multiple attempts.\n. ",
    "BigNoid": "Sure, no problem. I've put you on cc:\nhttp://trac.xbmc.org/ticket/11806\n. ",
    "idoru17": "My bad, some must have gone unnoticed and i'll take another look as I discovered some misses, like the .(dots) at the end of the second headings in parameters. \n----- Mail Original ----- \nDe: \"blinkseb\" reply@reply.github.com \n\u00c0: parisienne17@free.fr \nEnvoy\u00e9: Jeudi 4 Ao\u00fbt 2011 21h55:43 GMT +01:00 Amsterdam / Berlin / Berne / Rome / Stockholm / Vienne \nObjet: Re: [xbmc] I did the necessary changes to build an homogeneous string file, correcti (#331) \nI'm globally happy with this PR (I've made some corrections, but only reviewed the strings which were changed). The french translation need indeed some rework. \nPlease, please, please, be careful : A space before '?', ':', '!' and '...' is mandatory in french, don't forget it. \n\nReply to this email directly or view it on GitHub: \nhttps://github.com/xbmc/xbmc/pull/331#issuecomment-1730165 \n. ",
    "HitcherUK": "Can I chime in here and ask if this can also be added to ListItem.Overlay so skinners can simply use one icon (ie OverlayPartlyWatched.png) to indicate that a video is partly watched?\nThanks.\n. Didn't think of that.\n. @ CrystalP\nFunny you should mention the strange pauses when sometimes while browsing the library because I've also noticed that but just put it down to my non-HTPC getting on a bit. I 'think' it only happened when displaying fanart but I can't be certain now.\n. So this why I've been seeing the splash screen for so long lately - I thought my PC was on the blink.\nAlso any reason you didn't just use a loading bar?\n. The startup delay I was encountering was due to XBMC taking forever to access my SMB shares - changing to a mounted Windows drive fixed it.\n. It's also worth noting that putting them in a grouplist and letting that handle the action doesn't work either.\nThanks.\n. No more thoughts anyone?\n. Hi, not trying to be be pushy here but I would like to know whether this will be fixed for Eden so I can make the relevant changes to XeeBo (Eden)?\nThanks.\n. But what if all the controls were inside a grouplist? Shouldn't the grouplist's onright ACTION  be performed in the above scenario?\n. A little background -\nThe skin in question is XeeBo and it has a global side menu (which is actually a custom window) that is accessed by moving to the left of any window in the skin. From this menu you can select to go any where you please or, if say you changed your mind or simply wanted to see the little weather panel at the top of the menu, by pressing right return to the window you were in.This is achieved by closing the custom window so control is returned to the last focused control.\nNow I've made a skin layout for the TV Next Aired script and obviously want to keep the global menu available via an action - ActivateWindow(51) - but because the script is made up of 7 lists for each day of the week and sometimes there might not be anything airing on one or more of the days I need to be able to open the custom window when they're hidden, and this is where I found my problem.\nI've had to use a button for this particular case but it goes against the rest of the skin's navigational feel because it gets focus when returning to the script and not the lists.\nHope that explains things better.\nThanks.\n. Awesome, thanks JM.\n. Don't know if this helps but I had multiples because I was previously using NFOs for my sets and as the scraper now makes them as well they appeared twice. Deleting the NFOs, removing from the library and rescanning fixed the problem for me.\n. The day after I send a pull request for XeeBo Eden, typical. ;)\nBetter get to work asap.\n. No problem, already done.\nJust have to hope I'm quick enough.\n. @Uxorious rllmuk?\n. Just my two cents but until XBMC pulls international rating info from TMDB shouldn't this remain outside the main skin (ie a mod)?\nI also foresee requests for other countries ratings if this goes mainstream.\n. I guess because initially IMDB was the only source available.\nI had the same situation when first took over Alaska from djh - he'd designed it using grey MPAA rating images - and I added a few different countries own symbols but they never right to me bring coloured. Eventually I dropped them altogether in favour of labels.\n. JM - \"we instead repeatedly double the items in the list until we have the number we need\"\nThat gave me the idea for fixing the current issue: I just repeated the content list a couple of times (with different IDs of course) and voil\u00e0 the animations work.\nThanks.\n. Using today's Windows build instead of listing by the date added to the library it is in fact listing by the date the file was created.\n. So if sorting by Date Added actually sorts by Date Created why isn't it labelled as such?\n. Is this platform dependant because it works on Windows but not openelec for me?\nWindows - https://dl.dropbox.com/u/19745842/Images/screenshot000.jpg\nOE - https://dl.dropbox.com/u/19745842/Images/screenshot001.jpg\n. @jmarshallnz Can you confirm platform dependency please?\nThanks.\n. @jmarshallnz just curious as to whether there will be a fix for Frodo as this is currently only works on Windows platforms, and Confluence uses it for the home screen so you might get reports about it.\nWindows -\n\nOpenELEC -\n\n. @jmarshallnz friendly bump as I'd just like to know whether to revert back to using a separate caps only font set.\nThanks.\n. Thanks, missed that one.\n. Another solution would be to use a caps only font for the home items but I'm not sure how easy that will be.\n. Just checked Eden and you're correct but for Frodo the style of font has changed as well.\n. @nuka1195 The removal of musicplayer and videoplayer is actually planned at some point.\n. Haha, you're probably going to regret adding this now because it's reminded me of something that's been asked for many times in the past - Colour Diffuse per Texture.\neg\n<texture colordiffuse=\"AARRGGBB\">texture.png</texture>\nThis way we can give image controls that contain multiple textures (togglebuttons, sliders, borders, etc) their own colour diffuse thus allowing use of less textures and easier modding via color.xml.\n. For consistency purposes with the other 'Thumb' labels (FolderThumb, SeasonThumb, ArtistThumb) wouldn't it be a good idea to drop the underscore?\neg Player.Property(TVShowThumb) instead of Player.Property(TVShow_Thumb)\n. Well we already use it for Container.TvshowThumb and ListItem.Property(TVShowThumb) so adding TVShow_Thumb could possibly lead to confusion down the line but certainly don't just leave it up to me. ;)\n. You added it for dialogvideoinfo.xml - https://github.com/jmarshallnz/xbmc/tree/tvshowthumb_in_videoinfo\n. Awesome, many thanks.\n. I've used the GUI at 24Hz and it's horrible (I can even see a difference at 50Hz) so I'd want it to be used at 60Hz whether a video is playing in the background or not.\n. Yes but it's less than a second and it's much, much less annoying than a flickering GUI in my opinion.\n. The wording of these options has me confused.\n'Adjust display refresh rate to match video - Always' to me means if the video is 24Hz then the display will be ALWAYS be 24Hz whether the video is fullscreen or not and this isn't the case. Shouldn't it be 'Fullscreen only'?\nWhereas 'Adjust display refresh rate to match video - On start/stop' to me this means if the video is 24Hz then the display will change to 24Hz when the video starts and wont change back until the video is stopped whether fullscreen or not. Isn't this 'Always' then?\n. I'm for an all-in-one solution to save on real estate.\n. Not too sure about the main label jumping between 'Downloading movie information', 'Scanning for new content', 'Downloading TV show information', 'Scanning for new content', etc.\nEDIT: Maybe change the labels altogether as a lot of users have local NFO files and 'downloading' implies XBMC is getting the info from the internet?\nie using existing strings - Library Update - Movies, Library Update - Music, etc\n. Actually I can see what's going wrong here -\n'Scanning for new content' should be used on the second line when no specific item is being scanned.\n. @jmarshallnz Thoughts?\n. Previous examples\nLine 1 - Downloading TV show information\nLine 2 - Scanning for new content - Alphas - 1x11 - Original Sin - Scanning for new content etc\nLine 1 - Downloading movie information\nLine 2 - Scanning for new content - Avatar - Scanning for new content  etc\nCurrent examples\nLine 1 - Downloading TV show information - Scanning for new content - Downloading TV show information - Scanning for new content etc\nLine 2 - Q:/tvshows/alphas/ - Alphas - 1x11 - Original Sin - Q:/movies/alphas/ - Alphas - 2x01 - Wake-up Call etc\nLine 1 - Downloading movie information - Scanning for new content - Downloading movie information - Scanning for new content etc\nLine 2 - Q:/movies/alien/ - Alien - Q:/movies/avatar/ - Avatar etc\nSo to keep it like it was the first line needs to drop the 'Scanning for...' label which then needs moving to the second line and that needs to drop the path.\n@JezzX @ronie @jmarshallnz \n. Looks much nicer, thanks.\n. @ronie want to do the honours and add this to the forum post?\n. @da-anda MyVideoNav - label (id18) - Warning to the user to turn off library mode when no scanned media is found\nNo longer used now that Files & Library are merged.\n. @jmarshallnz As well as making all my centrally aligned labels 1 pixel off it's really messed up my textboxes (anything from 6 to 30 pixels off depending on font size).\n. On further inspection all the textbox fonts are using <linespacing>...</linespacing>\nCould this be the issue?\n. Sounds like a feature request for <numberlines>nn</numberlines> in textboxes is needed.\n. It works on Windows but not Linux and OSX.\nOriginal commit - https://github.com/xbmc/xbmc/pull/966\n. @Montellese \n\"Choose Art\" by default will only display \"banner\", \"poster\", or \"fanart\" unless you've run Artwork Downloader and it's added other types to the database, in which case they'll then appear in the \"Choose Art\" list.\n. Out of curiosity, is the update on every hour and half hour or just 30 minutes from when it was started?\n. @amet Surely removing one altogether would increase the load on the remaining one?\nSplitting current and full forecasts sounds like a good compromise to me.\n. Bear in mind I have no idea how this all works but couldn't the data be fetched and then stored on mirrors; then couldn't the script could fetch the info from these mirrors?\n. @jmarshallnz  I take it as long there are objections this will get added to a nightly build in the future ready for Gotham and not any version of Frodo?\nThanks.\n. ",
    "Zeron": "Instead of the hard-coded 25fps why not just stay at the current refresh rate when a still frame is first.\nThis will likely be the refresh rate of the GUI as you will have just started playing  the file.\n. ",
    "PatFrost": "lol one day and already closed :)\nThe benefits were minimal, but simplified the code.\nAdvantage 2 -> from jmarshallnz (Other than less files floating around)\nAdvantage 3 -> a bit faster than runscript()\nAdvantage 4 -> no mini freezing or sleeping. with runscript, xbmc sleep approx. (\"100ms to 1000ms\") depends on the code inside. py\netc....\n[quote=JezzX]\nI would imagine it would be handy for doing so regex on things like file names for flagging\n[/quote]\n:) \nIt's a good reason, and that's what I was doing in my new version of this add-on http://forum.xbmc.org/showthread.php?t=89163\n[quote=ronie]\nthe end-user should not have to worry some malicious code could be running\nin the background when using a skin.\n[/quote]\n@ronie, it's the same with runscript(), the user does not know if the code is malicious\nAnyway, I never created such things... I am not a beginner ;)\nLook at my add-ons in my signature http://forum.xbmc.org/member.php?u=14138 and here http://passion-xbmc.org/addons/\n@pieh, I thank you for having trying, re-added this feature.\nSorry for my English, I am French Canadian.\nThanks\nFrost (passion-xbmc.org)\n. hi guys,\n:) + 0.5 for me + garbear point >= 1 people ;)\nI'm really interested by this fixed\nIt's been a really long time I expect this...\n@garbear, I re-tested this morning, with git mainline and not work, is same thing https://github.com/xbmc/xbmc/commit/371c73be51f3e5620ecd35c42115829d0ba29abb\nBut, I just added skinInfo.LoadIncludes(); before g_SkinInfo->AddIncludes(skinInfo); in files winxml.cpp and winxmldialog.cpp and result very good. But I not sure, it's ok or bad...\nplease not  deferred until 12.0 frodo-pre\nFrost\n. hi,\nTested under windows work fine. \nThis PR fix my add-on MovieSets, if other add-on is called.\nBecause actually MovieSets run in background in MyVideoNav.xml and if other add-on is called, I have auto-crash.\nBut now it's OK with this PR + https://github.com/xbmc/xbmc/pull/790 :)\nSorry for my English\nFrost \n. hi,\nvery cool, I tested under window work fine, but no accents uppercase in french eg: Quebec :)\nbut with this subText.ToUpper(std::locale(\"\")); at line 407 and 427 in GUITextLayout.cpp it's ok\nsorry for french quote\n[quote]\ntoupper() retourne la version en masjuscules du caract\u00e8re pass\u00e9 en param\u00e8tre.\nLe second param\u00e8tre de la fonction, locale(\"\"), permet de prendre en charge les caract\u00e8res sp\u00e9ciaux comme les accents.\nAucun param\u00e8tre signifie l'anglais. Une cha\u00eene vide correspondra \u00e0 la localit\u00e9 utilis\u00e9e sur la machine,\net vous pouvez forcer l'utilisation d'une localit\u00e9 en entrant le nom de celle-ci.\n[quote/]\nscreenshot: http://imageshack.us/photo/my-images/26/screenshot007w.png/\n. ah ok :)\nbut this https://github.com/xbmc/xbmc/commit/44c1ac41e7b4ac842160b2f9ca3ea1afee8b7427\nfixe uppercase accent. yes !\n. wow good extend :)\n@amet , Possible to create super-mkdir function. same as os.makedirs\n\"\"\"makedirs(path)\nSuper-mkdir; create a leaf directory and all intermediate ones.\nWorks like mkdir, except that any intermediate path segment (not\njust the rightmost) will be created if it does not exist.  This is\nrecursive.\n\"\"\"\n. great :) \nbut not work, error is start with / and not sure but don't check and create root folder G:\n\"\"\"\n20:23:25 T:6624   ERROR: XFILE::CDirectory::Create - Error creating /G:\n20:23:25 T:6624   ERROR: XFILE::CDirectory::Create - Error creating /G:/pydocs\n20:23:25 T:6624   ERROR: XFILE::CDirectory::Create - Error creating /G:/pydocs/xbmc\n20:23:25 T:6624   ERROR: An error occurred saving xbmcvfs! ([Errno 2] No such file or directory: 'G:\\pydocs\\xbmc\\xbmcvfs.html')\n\"\"\"\nsame with ftp or smb\n\"\"\"\n20:35:40 T:7856 WARNING: XFILE::CDirectoryFactory::Create - Unsupported protocol(/smb) in /smb://---/\n20:35:40 T:7856   ERROR: XFILE::CDirectory::Exists - Error checking for /smb://---/\n20:35:40 T:7856 WARNING: XFILE::CDirectoryFactory::Create - Unsupported protocol(/smb) in /smb://----/Medias/pydocs\n20:35:40 T:7856   ERROR: XFILE::CDirectory::Create - Error creating /smb://----//Medias/pydocs\n20:27:18 T:7392 WARNING: XFILE::CDirectoryFactory::Create - Unsupported protocol(/ftp) in /ftp://xbox:xbox@192.168.0.2:21/\n20:27:18 T:7392   ERROR: XFILE::CDirectory::Exists - Error checking for /ftp://xbox:xbox@192.168.0.2:21/\n20:27:18 T:7392 WARNING: XFILE::CDirectoryFactory::Create - Unsupported protocol(/ftp) in /ftp://xbox:xbox@192.168.0.2:21/G/WebDownload/pydocs\n20:27:18 T:7392   ERROR: XFILE::CDirectory::Exists - Error checking for /ftp://xbox:xbox@192.168.0.2:21/G/WebDownload/pydocs\n\"\"\"\n. hi amet,\nyes it's ok with smb and local location. tested mkdirs, listdir, and File(...).read()\nNot work with FTP, others functions work with FTP copy, delete, exists etc...\nFTP mkdirs\n09:16:35 T:6876   ERROR: CUtil::CreateDirectoryExA called with an unsupported path: ftp://xbox:xbox@192.168.0.2:21/G/WebDownload/pydocs/xbmc\nFTP listdir\n09:16:35 T:6876   ERROR: XFILE::CDirectory::GetDirectory - Error getting ftp://xbox:xbox@192.168.0.2:21/G/WebDownload/pydocs/xbmc\n09:16:35 T:6876  NOTICE: ([], [])\n\nOthers request :) possible to add write file\nf = xbmcvfs.File(_path)\nf.write( \"foo\" )\nf.close()\ngood job amet\nfrost\n. FTP is read only! ok but xbmcvfs.delete(...) deleted a dummy file on my xbox :D I retest tomorrow\n\n:) it's ok for write on smb share\npython\nf = xbmcvfs.File( _path, \"w\" )\nprint f.write( doc.document( eval( module ) ) )\nf.close()\nresult :  http://passion-xbmc.org/gros_fichiers/frost/xbmcvfs.html\nThanks amet\nI will back tomorrow for more test...\nFrost\n. ",
    "alcoheca": "Great to see this, also agree about moving to not updating the user settings.xml on every modification. Would be nice to see more homogenization of the addon settings over time.\n. I'm getting confused, Skin.SetAddon doesn't even consider content type currently, is there something missing from this PR?\n. Sorry then it's my confusion, I have missed the fact there's virtual types which encompass both pluginsources and scripts.\nPerhaps another way to tackle this would be allow Skin.SetAddon to support browsing multiple addon types.\neg Sking.SetAddon(string_id, \"xbmc.python.pluginsource,xbmc.python.script\")\nthis depends on how the virtual types are handled, I don't have source in front of me, and maybe no one else thinks this is an important point worth making...\n. Hi,\nI don't have much weight in this discussion, but this is far preferable to me, as it doesn't involve tainting the addon.type.id namespace any further.\n. hi, I'm working on UPnP improvements in XBMC as part of GSoC. I'm about to look at the sorting issues. I think we should keep things as simple as possible, so in that case\n- if sort_criteria is specified, apply that\n- else, sort by the default method for that particular media type.\nIm not sure applying profile/user specific choice of sorting method to the server is a good idea whatsoever. If the client wants to apply a different sort method then that's all well and good, it can either request it or re-sort on receipt of item list using metadata.\nyou can follow progress in my fork of xbmc here\nNB: on my testing of a few different UPnP clients (including XBMC), none of them specify a sort criteria.\n. What I mean if sort criteria is not specified by the control point, we sort according to the GUIViewState defaults - NOT according to what a particular xbmc profile has set. That way, the behaviour is deterministic.\n. Ah I forgot about this one, no its done and committed.\n. +1 on permissions and user's being informed on this. Without a permissions orientated API inplace, you could simulate this using modification to the addon.xml schema (only addons which explicitly require this portion of the xbmc api are allowed access), and a little bit of glue code in addons installer (notifications) and in the vfs module (check against addons db for permission?).\nit might seem like work now, but it's beneficial in the long run\n. I'd go for notifications rather than a busy wait dialog, the user should be able to do other things while the server is being woken up..\n//begin rant\nI totally agree that a new place in settings to manage 'auto discovered' shares - be they samba servers in WORKGROUP, UPnP, iTunes - should be the focus.\nIn this 'share management' area of settings, you could view all auto discovered shares and then choose to ignore particular ones, chose to have certain UPnP/iTunes/whatever libraries included in your libraries, chose which simple file servers are scanned to library etc etc. WOL could then be integrated properly into that new system rather than it being retrofitted onto what is already a confusing and pretty long winded way of adding a share.\nThe reason I'm mentioning this is once something is added, it's very hard to find the energy to replace working code... a lot of the code already exists, it just needs sticking it all in one place, with a better GUI.\n//end rant\nI'm likely to get round to doing this a part of the UPnP work - which also uses WOL, and has the notion of devices in low power states.\n. Thanks for doing this. In terms of your question, I'll modify SaveFileStateJob so tha resume points are passed back to the upnp server rather than the local db if supported. Not the best place in the long run, but at least the implementation would be hidden for now.\n. Yep PlayCount is next on the list.. I'll have a look at it this morning, maybe move all playcount increments to the SavefileStateJob too. The trick is how to specify that a playcount is known even if it's zero, hopefully I can avoid something like STARTOFFSET_RESUME ;)\n. Great. Will do\nOn Aug 26, 2012 4:23 AM, \"jmarshallnz\" notifications@github.com wrote:\n\nFeel free to merge in the September window.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1229#issuecomment-8029827.\n. second attempt - all the build changes/class changes are squashed into 458dd72. I've tried to take all comments into consideration. Have ditched the changes to stack handling, and allowing non-MS clients to search.\n. hi yeah if you could fix the win build that would be great - it should just\nbe a matter of including the correct files.\n\nOn 26 August 2012 21:02, wsoltys notifications@github.com wrote:\n\nDo you still need help on the win side or did you receive the vs project\nfiles already?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1230#issuecomment-8036469.\n. @pieh have fixed the issue in d0c8f88 - thanks for spotting it.\n. What's the feelings on getting this merged then? Any show-stoppers?\n. fixed after doing stats via NPT_XbmcFile\n\nOn 5 September 2012 13:22, Arne Morten Kvarving notifications@github.comwrote:\n\nis the no serving from remote a regression?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1230#issuecomment-8296134.\n. I had merged @elupus 's xcode changes, but they need resynced to drop lib/libUPnP/Neptune/Source/System/Posix/NptPosixFile.cpp\n\nalso need xcode changes for code-shuffle branch presuming that can go in - it's fairly benign\nWIN32 needs another round of changes for both branches and a pull request if possible. @wsoltys \n. Actually I've got the Xcode and Visual studio changes in fine, including the ones after the VFS fix. Focus on code-shuffle instead please.. :)\nthis is good to go in, so hitting green after holding my breath for 10 seconds\n. thanks @memphiz\nOn 5 September 2012 19:17, Memphiz notifications@github.com wrote:\n\nNo see XBMC-IOS.xcodeproj and XBMC-ATV2.xcodeproj. IOS done - now ATV2 :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1230#issuecomment-8308332.\n. only c640c4b & 49348d1 are relevant, rest is from platinum-upgrade pull request\n. @elupus i squashed the first two commits of upgrade-platinum. forced pushed, then rebased onto code-shuffle. Hopefully that's it sorted?\n. I don't know why the ordering is weird here, it's correct in my git logs for both branches\n. hello hello, any chance of getting this in too?\n\nneeds platform fixes for 02f566d, 9f3e4a6 & 410cda4. hopefully the last time I touch configure.in ... think @pieh is willing to do win32 so it's just the 3 osx builds which need coaxed into submission\n. upnp patches are: 6b2ce7352b, 038e436f87, 05e7dcb6eb & 0b307a7bef\nOn 7 September 2012 15:32, davilla notifications@github.com wrote:\n\nWhat patches are we carrying for upnp ?\nCurrently libUpnp is made as a static lib (libupnp.a) that we hard link.\nAlso, think of darwin builds as embedded, we choose what to enable/disable\nand we only support building under our depends build system. If someone is\ndoing configure outside of tool/darwin/depends/xbmc/Makefile, that's their\nproblem, not ours.\nWe could also move upnp into xcode_depends but I'd rather that get less\nusage than more.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1238#issuecomment-8366971.\n. if this is a massive pain in the arse, we could forgo making UPnP optional - I just felt it was a half way done job, seeing as there was IFDEF UPnP's all over the shop..\n\nThe most important change is splitting the classes out of UPnP.cpp - it's a nightmare to spend anytime in there right now.\n. Can we punt this in?\nChanges since the last push, was a couple of typos (using . instead of : in sort_criteria) and also enabling Platinum to support res@ criterias  - needed for bitrate, duration, size sorting.\n. @jmarshallnz Platinum caches all server results, and waits for a containerupdate event - which we do not send currently.\nI have a branch I'm about to PR, where we send updates for containers when items are updated. It works well, though obviously a lot more data is flying across. But this is definitely needed, as currently you need to restart the client to see the updates. \nUPNP's ContentDirectory:3 (we currently implement ContentDirectory:1) fixes the constant resending of metadata, by introducing a list of what has changed, rather than just which container. If this inefficient (but standards compliant) approach could go in for frodo, then I can then move onto implementing ContentDirectory:3 properly. (We need to be backwards compliant so it makes sense to do it this way).\n. @Montellese cheers, for now I'll try using the Thumbloaders. I think if you're working on improving this side of xbmc, then it should handle all cases, ie fanart for seasons/episodes, otherwise we'd still need to code weird segments like this all over the place.\n. Going in with the shared pointer fixes\n. I was just following rpc and advice. I noticed it too, will change it.\nOn Nov 3, 2012 3:37 PM, \"Joakim Plate\" notifications@github.com wrote:\n\nWhy did we use FillLibraryArt here and not LoadItem in the thumbloader? It\nseems art doesn't show up until we have touched the item in gui currently.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1569#issuecomment-10040506.\n. @elupus happy with this going in?\n. @elupus what do you think about this going in?\n. There's no support for this type of statevariable which must clear after being evented. Another way of doing it would be to clear while adding another container_id/update_id pair after it had been evented, but there's no way to determine when that has happened either.\n. about the BuildSafeResouceURI bug, NPT_Map::Put() only ever returns NPT_SUCCESS so I can just remove that check.\n. updated according to your comments\n. amazing\n. @elupus ^\n. yeah I agree, bumping\n. Yeah this is a good change\n. They're both updated. The show level always worked , just not the season level.\n. thanks!\n. agree with pieh,\n\nwhat about a function of CVIdeoInfoTag::PercentageWatched(), which calculates on the fly the percentage watched, be it a tv show(watched/totalepisodes), season (season watched / season episodes) or episode/film/musicvideo (from resume point)\nremembering to update all these properties by hand each time is tricky\nEDIT: wouldn't work of course as properties are unavailable to VideoInfoTags... moving on\n. @garbear  no trouble :)\n. hi - are you suggesting doing it a different way then?\n. looking for the better way\n. @elupus The check is in the skin. Skin has this info dependent on infolabel HasAudio or HasVideo\nThis translates to g_application.IsPlayingAudio/Video()\nwhich checks m_pPlayer->HasAudio/Video()\nI'm not following why IPlayer::HasAudio/Video() should return false for remote players, does it have a special meaning other than 'im playing an audio / video file'?\n. I don't see any other way for skins to determine what type of file is currently being played (along with VideoPlayer.Content[..] )\nConfusingly there's no actual correlation between the infomanager's Player.HasAudio/Video & IPlayer::HasAudo/Video(), it relates to CApplication::IsPlayingAudo/Video() instead.\nAlso IPlayer::HasVideo/Audio is only ever called from CApplication::IsPlayingVideo/Audio.\nIs it not saner to just look at the switch to fullscreen video if a problem exists, rather than modify the semantics of these info labels?\n. eh sorry about the current weird list of commits, I just broke github\n. @Pulfer I'm going to look at all playlist handling over the next few days and get it in line with the ContentDirectory:1 specs\n. Ditched the assert, allowing the crash\n. Looks like #2182 has possibly caused some weird behaviour, the path handling in UPnPServer is pretty fragile\n. I don't know what common playlist feature is exactly\n. I don't understand what manually selecting means in the context of playlists. If a playlist or smartplaylist can achieve this then they should be shared fine over UPnP.\n. Can you create a trac ticket with logs then and post the link in here?\n. pushed the brackets fix, this builds on latest Frodo\n. About the flattened views I'd forgotten about that, it should be easy enough able to handle that variable.\nHow the updates work right now is a bit of a cludge put in to avoid clearing the entire client cache on each update while keeping the remote view relatively up to date. I chose the recently added and title nodes as places that people would go looking for a newly added item.\nWe're only compliant with ContentDirectory:1 specs so we can only announce updates to containers. To provide 100% accurate information then, we'd need to figure out the complete change to the 'tree' from every operation on a database item. And then we'd need to map these 'physical' paths (ie videodb://movies/titles/2) to the parent container in the user's custom paths. This is the particularly tricky bit in my mind. I'd love to hear suggestions on how this could be achieved in a sane way!\nIn the long run I aim on adding per item tracking as per ContentDirectory:3 spec hopefully over the summer, this would be reliant on a much tighter integration with all DB operations, but I think is only worth tackling once the major database improvements are made (presuming the API will be upgraded significantly?).\n. spoke to @Montellese and the consensus is to add this as for 95% of uses this fixes the problem. I will work up another PR which further enhances the paths to be announced (possibly updating the right genre paths for instance) and takes account of the flattened views\n. Un-seekable Rygel playback is still broken with this\n. @arnova It works prior to 169d21d\n. No the problem still exists & there's no URL to provide as this is an issue with DLNA servers as mentioned here: http://trac.xbmc.org/ticket/14204 & here https://github.com/xbmc/xbmc/commit/372a14d33a1f3325ffec09d38dbf2bf77f1afaa7#commitcomment-2973229\nBasically, you can't set a Range-header and expect to stream from these servers when requesting unseekable content. They will refuse the connection. Either you need to retry with range unset or just revert to the previous behaviour.\n. @arnova I'm afraid Rygel returns CURLE_HTTP_RETURNED_ERROR, can't tell what HDHomeRuns return, but it looks like you can't rely on CURLE_HTTP_RANGE_ERROR\n. @arnova no it doesn't fix it. i stuck print statements in and SetResume is only called once, and when it is, it is called with m_bRangeAllowed == true. So the range header is applied and rygel refuses the connection. I can't tell if your retry logic is actually working as I don't know the code.\n. http://xbmclogs.com/show.php?id=12919 I'm off out for the night now. if you need more debugging maybe just grab rygel enable zdf plugin and get some printf's on the go..\n. @arnova yeah it's working now, I see the first refusal from rygel then the retry works\n. If you get a PR up against frodo I'll happily test it\n. do I not need arnova's rebased PR too? This patch alone does not fix UPnP streaming.\nApparently the window is closing in 10 hours? if someone can tell me what to do to test the suggested fix I can do this tonight\n. @ulion ive just noticed I can't now confirm if this fixes this or not. the ZDF plugin I was using for Rygel is giving me a different error. That's the only way I'm able to test, as it's invalid now I suppose we can just assume this fixes the problem (!)\nEDIT: note that I did confim arnova's patch to be a working fix\n. The error is in Rygel. A log is unnecessary. The streams are no longer available to Rygel. I've tested other clients.\nLike I say - If this is similar to aronvas fix then it should go in, as that has already proved to fix the problem I'm interested in.\nOn 1 May 2013 01:17, ulion notifications@github.com wrote:\n\n@alcoheca any error, log is necessary to judge.\n\u2014\nReply to this email directly or view it on GitHub.\n. I've asked people on the trac ticket http://trac.xbmc.org/ticket/14204\n. \n",
    "nuka1195": "I have a trac ticket where I modified settings to use natural skinning visibility conditions. It would go well for skinners to be able to skin their setting as they would skins. Jmarshall had an issue with it that I didn't fully understand how to remedy it. If you're interested either you could have a look and update it or I just forked xbmc and am going to get back into some coding. (a lot seems to have changed) so when I have my development environment set up I can update it.\n. http://trac.xbmc.org/ticket/9918\nThe ticket was for improving settings so there are other changes some were already accepted.  IIRC. \n. I notice I have an updated patch if I can find it. Otherwise the xbmc4xbox trac has its version. I know I made a change to the slider control to format for max, min and normal. \nIt's here. https://sourceforge.net/apps/trac/xbmc4xbox/ticket/106\nNot sure if you can make use of these. I'm not sure when I'll have a computer I can develop on. \n. I see you already have added evaluatebool() to settings. :) now I have added it to the categories section. The other thing needed for settings is a way to use evaluatebool() to compare settings with each other. Eg. Control.Isvisible(12). But make use of I'd names since the I'd is unknown to author and won't work between categories anyways. This is where I added addon.setting(). But I think this was the issue jmarshall had with the way I did it. \nThe few other changes I have could be a separate ticket. \n. @pieh I have the patch ready. I don't have access to Internet other than my phone. Which I'm unable to upload patches. I can email it to you if you are interested. It adds a few features like formatting the slider control. The main change is it allows full use of info labels as enable/visible conditions. You can also reference the current value of a setting by enable=\"integergreaterthan(Addon.Setting(limit_extrafanart_max),20) + IsTrue(Addon.Setting(limit_artwork))\". Since the way I do it is with window properties. Addon.Setting is case sensitive. So maybe it's better to Change it to $SETTING or force all lowercase. I don't think using tolower() is advisable.  I think it resolves the issue @jmarshallnz had with it. \nLet me know. \nEdit: I appologize to the other jm. \n. @pieh I'm going to try and do a PR are you still working on this. \n. C1fac67. I don't see a modulexbmcaddon.cpp/h in the list of files. maybe not necessary?\n. i'm going to resubmit the pr better if you would like to close this.\n. i'm going to reset my fork and start over, branching each of these. then i'll close this or if you want to. i don't want to screw anything else up.\n. sorry i reforked.\n. How about adding idmovie also. I requested that a while ago. \n. @jmarshallnz, i'll leave the cosmetic stuff for another time to make sure this is ok.\n. I'm getting all kinds of conflicts trying to rebase. I'll work on it, is that normal. Once I do a pull request should I not update from master?\n. i'm sure this is butchered now. if so i'll delete this pr and start over. it's small enough patches.\n. I did, then pushed it to the branch. Is it workable?\n. I thought I rebadged on upstream. Which is xbmc/xbmc. I'll try again or start a new branch. Might be easier. \n. i changed getAddonInfo to return unicode, waiting to commit to see if you want xbmcaddon.getSetting() to return the proper value for the type of setting.\nreturning xbmcaddon.getSetting() in the proper type is a little tricky as we don't know what type of setting it is. @Montellese did you have a patch for that. i'm not sure how to handle it. hate to parse the settings for setting type. maybe ADDON.getSetting() deeper in needs changing?\n. i know amet, hence the smiley. but i took it out and probably broke a clean merge of #996.\n. @amet, when you close my pull requests saying until an addon needs it, i need it that's why i submitted the PR.\n. I need every pr I submit. I don't do it for no reason. \n. Some script writers use default.py, some use addon.py. There were times when you would want to import the .py file instead of running.\nYour addon system has changed, I'm sure there is another way. My comment was more for other pr that were closed, that I've used for more than seven months and can't work around it. \nEg music player. Filenameandpath. For the offset(). \n. so i didn't have to change a line further in that limited the labels that worked with .offset() MUSICPLAYER_ALBUM_ARTIST\nok will make the change\n. i was considering making player.* work offset and just factor out the need for musicplayer.* and videoplayer.*. what do you think?\n. Good, I think it makes more sense. \n. these are need by me, can you open and reconsider.\nPlayer.Filenameandpath doesn't support offset() does it?\n. the value of the setting. which for a radio button is \"true\", that's what is stored in the settings.xml file. i'm not sure why stringcompare doesn't work, but this is also a nice convienience so no multiple checks in skins.\n. i thought hassetting was just a bool. the addon.setting is used in script settings and may be changed to $SETTING[] as its just a way to set visible/enable conditions rather than eq(-5,foo)\n. All this patch does is allows a comparison to \"true\" since stringcompare fails to compare, I believe because \"true\" is being converted to a bool before the comparison. Maybe you can test in a skin. Give a label the value of true and try to compare it. \n. Sounds good. How would one compare if a setting is true? With what existing infobool. Addon.HasSetting() as Ronnie said?\n. Shortly\n. shall we leave the other changes for another time and close #994\n. thanks for your effort and thanks for the code snippets you supplied.\n. My Internet is flaking, so I'm on my phone, but what is squashing. I get a not valid Git command and nothing in help. \n. Ok I think I have it rebased correctly, but no Internet on the computer will try in the next day or so. \n. well i don't know. i think i messed it up again.\n. hint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n. well i think i lost all the other commits. will have to do this later, but i think the function is correct now.\n. 65a2b34  and 0ea2bdc  is what you want.\n. +1 for this feature however it is handled. Just want to get updates. \n. GetDatabaseId() returns a long not an integer. \n. I know if you format certain types wrong you get weird results. I wouldn't have expected -1 though. But thought it may be with the \"i\". \n. nice, can they be stored as JSON which is basically a python dict()\n. these are need by me, can you open and reconsider.\n. @jimfcarroll \nThis is the PR for ControlSpinEx\n. well obviously ignore 63eff61. still getting use to git.\n. weather is slightly different.\neasier for translators if theyre in xbmc's langauge file.\nbut i really don't care as i speak english. if you want to rip them out of xbmc, that's ok. but if you don't most of these are missing and should be included.\n. If you do move them to the addon. It would be good incentive to remove all the weather localization. I also recommend the icons be separate as the ones you include are really for weather.com.\nI added a setting so the user can set the path to them eg a skinner includes custom ones. \n. Thats what these strings are. I'm quite certain the wunderground weather provides all the info and more that weather.com does. \nAs far as silly to remove icons. Not silly at all. The icons are weather.com specific. Wunderground had to adjust for those codes. You should be offering the ones for the default weather addon. \nAs for a new addon type. Sounds good. But the addon still has to be aware of it since it sets the path to the icons so a setting for which image addon is probably still necessary. \n. A copytree(old, new) would also be useful or maybe just enhance the copy() to support that. \n. Would you consider adding the ability for a plugin to override this progress dialog and create their own as part of this fix. \nReason being is I want to give more feedback to the user for an initial setup which can take a considerable amount of time. \nOr at least the ability to set the percentage and lines for the current dialog. \n. Quote:\n10:33:21 T:1152 NOTICE: Unknown exception thrown from the call \"read\"\nI still get this error when using xbmcvfs.read() on a file I used xbmcvfs.write()\n. heres a test script. this just gives access violation errors. but it doesn't matter if xbmc creates the file or not.\n. http://trac.xbmc.org/ticket/14183\nincludes test script and log\n. http://trac.xbmc.org/ticket/14183\nincludes test script and log\n. I'm sure it can. It might be better to change the regular progress dialog to have a text box instead of three lines. I saw talk about that in the forums. Then it would be a better match. \n. Not if it was written properly. It could still take 3 args. Just concatenation them. \n. Yes, they would. But it's more flexible and has been asked for for awhile. \nEither way it can still be combined without that change.\n. Yes, they are quite different, I kind of like how this is from a scripting stand point. If you don't have a preference I would like it shared. But if you think the code is cleaner the original way. I'll revert it. \n. i went ahead and reverted. the merged version could/would break some scripts by allowing update() to take the heading arg. i did not give DialogProgress() the ability to change heading, though it could be added it could/would break scripts.\n. I could have changed it so it didn't, by making the heading just the I'd for the bg dialog, and left message as line1 in case someone used keywords. But this works fine. \n. @jimfcarroll If I can revert to the shared method, but change it to not break scripts, would that be ok?\nit would be easier to change scripts to use background dialogs that way. I prefer it that way.\nor do you think it's cleaner to keep it this way?\n. Not the way it's currently written as the BG dialog updates the heading which i could change to keywords, line1 and line2, then just use the heading as the id of the dialog. then change keywords in update also to just line1 and line2.\n. so for BG dialog:\ncreate(heading, line1, line2) with a note that heading is just the dialogs id.\nupdate(line1, line2)\n. ok, that makes sense. i'll squash and commit.\n. i have to close this and open a new one, i messed up the rebase somehow.\n. yes, it builds and works fine.\ni did a rebase and couldn't push it, something about the tip of something. it was easier to do this, hope it's not too inconvenient.\n. http://trac.xbmc.org/ticket/14230\nthat ticket can be closed if this fixes it.\n. I thought so. The only constructor that took auto close, only took int for args iirc. I can check tomorrow if I missed something. \n. yes, autoclose returns False (0) if it times out.\nas far as i can tell changes are needed to CGUIDialogYesNo. the only other change which may be better, would be to pass an iDummy for autoclose from the one function and from the python function pass a dummy value for bCanceled or add it as an option. this would eliminate one constructor change.\n. looking at it further, i'm not really sure how python could use canceled. you only get one return value which is already False if you hit no.\nI'm also not sure how you would tell swig to include it, if it's not in the python constructor. Isn't that how swig determines how to create the call to the C function.\n. Yup, just speaking out loud, wondering how to add an item without adding it as an optional parameter.\ni wanted to add autoclose, without adding canceled in python's yesno dialog (unless there is a need for it?), to make only one constructor change in CGUIDialogYesNo(), but i didn't think you could.\n. error: prototype for 'bool XBMCAddon::xbmcgui::Dialog::yesno(const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, int)' does not match any in class 'XBMCAddon::xbmcgui::Dialog'\nerror: candidate is: bool XBMCAddon::xbmcgui::Dialog::yesno(const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&, const XBMCAddon::String&)\nthe issue when adding autoclose to pythons yesno dialog is the generated AddonModuleXbmcgui.cpp that calls the C function.\napiResult = (bool )((XBMCAddon::xbmcgui::Dialog*)retrieveApiInstance((PyObject*)self,&PyXBMCAddon_xbmcgui_Dialog_Type,\"yesno\",\"XBMCAddon::xbmcgui::Dialog\"))-> yesno(  heading,  line1,  line2,  line3,  nolabel,  yeslabel,  autoclose  );\n. i'm on osx\n. i started from untouched master, but didn't clean or anything will try that. i sure thought the auto generated file was the issue.\n. ok, you are correct the changes aren't necessary in CGUIDialog.YesNo.cpp/.h\nwill fix and update PR.\n. would you like me to add autoclose to all the dialogs, that are missing it?\nit's a small change now. :)\n. https://github.com/nuka1195/xbmc/commit/e0181fff9045ef4a2d4ac50f0efe1b3ad76f354b\nshould be correct pull\n. Thank you for the clear consise instructions. trying to do this with Sourcetree GUI was not productive.\n. The background progress dialog, Martijn got in.\nThanks for your help. would adding the autoclose to all the dialogs be good. I'm sure the ok dialog could benefit. if so would a separate PR for each one be better?\n. OT: While you're here I'm trying to add a constant string to xbmcgui module\nI see this: PyModule_AddStringConstant(module, (char_)\"author\", (char_)\"Team XBMC \");\nbeing generated in AddonModuleXbmc.cpp. I can't find where this is in the project. I've searched for author and the string and nothing except in the generated files.\nHow do I add a string constant? The following creates it incorrectly as a PyModule_AddIntConstant()\nSWIG_CONSTANT2(CStdString, NOTIFICATION_ERROR, \"DefaultIconError.png\");\n. thank you, i just wanted to handle it the same as the author tag, but just can't find where that is.\n. http://forum.xbmc.org/showthread.php?tid=159451&page=2\ni posted on the forum, i can't get it to work.\n. @MartijnKaijser, is this what you had in mind?\n. @MartijnKaijser, yes it allows a user image. also notice my comment in the latest commit.\n@jimfcarroll thanks for the fix, if this patch is acceptable, i'll squash it.\n. also Network.cpp still uses hard coded \"DefaultIconWarning.cpp\". that's the only file i saw that did.\n. how about the standard keyboard? the numeric keyboard is in Dialog.cpp.\n. ",
    "da-anda": "any plans on merging this in the next commit window?\n. what's the status of this? Just reading through the PRs and check what might be nice for Frodo. Thus this bump.\n. @elupus - what's your status on this? Did you have time to dig into it some more? Would be nice to get it in sometime in the next merge windows, so that there is enough time to test.\n. I can only say that flip-action search dialog is bothersome, for exactly the reasons JezzX mentioned. That was the first thing I disabled. The biggest issue is, that the search dialog even opened up when the onscreen keyboard was opened and I flipped the remote to type in some text. So this should really be taken care of.\nIt also doesn't make sense to show a video search when in the music library. So if fixes for this won't make it for Eden, please just disable the flip action by default.\n. when \"home/pos1\" is now mapped to the home window, does it make sense to keep the mapping for \"end\" to go to the bottom of the list? I vote to use SHIFT+UP and SHIFT+DOWN for top/bottom of a list now.\nAlso, wouldn't it be better to keep the nyxboard specific configuration file but only let it contain special keys for it and have XBMC fall back to the regular keymap for all other keys (isn't it supposed to work like that)? Same for MCE remote, no? Or are those key combos shared accross different remotes?\n. I haven't evaluated the code in detail, but do you make use of a local cache (in memory/a class variable), so that the keymaps don't have to be parsed over and over again on each keypress of a specific device?\n. @jhsrennie: ok, but you wrote on the forum that it can handle multiple devices (like if one has the Nyxboard and f.e. a PS3 controller attached), so you have to figure out which keymap to use for the currently used device and can't use a \"global\" keymap parsed once at startup. Or did I get the \"multiple devices\" part wrong?\n. > So, checking driveletter is win only. Is there a way to check if a path refers to a file stored on a cd/dvd/blueray on the other os's?\nI'm no C++ dev, but from browsing the source I think the MediaManager is the best choice to detect this stuff plattform independent. @jmarshallnz ?\n\n\n@Thumbnails Why not support both? If subfile containes a file path, check if the file path can be accessed during indexing and read thumbs from there (if available or can be extracted). If there is no path defined or it can't be accessed or has no thumbs, get them from the stub folder.\n\nThe only thing I changed here was the extraction of the thumbs for the media flags. They can only be extracted from a real video file. Do you mean fanart thumbs etc?\n\nyes, mixed them up. Frame extraction ofc has to be performed on the real file.\n. what's the status of this? Just reading through the PRs and check what might be nice for Frodo. Thus this bump.\n. Memphiz - Frodo is out ;)\n. as for the select options\n\"Prefered audio language:\"\n- Movie default\n- same as user interface\n- custom\nIf \"custom\" is selected, display a second dropDown with the language selector.\n. do we need a checkbox \"prefer language over quality\" like other software has it?\n. Uxorious - all you have to do is to select \"German\" as prefered audio language and you will always get the \"best\" german audio track by default.\n@Montellese \nwould it be hard to add a checkbox to enable/disable the \"quality\" detection, or is this something for a separate PR?\nWhile I think the quality detection is nice to have for movies, it's not at all f.e. for liveTV (slower zapping, and many times it's just 2c-AC3 so no real improvement with the downside of not beeing able to change the volume). So there might be a certain demand for beeing able to disable it in some setups.\n. so you like to watch the movie in it's native language by default, while the audio track with the native language might not be the first/default one? So language detection should consider the video streams language flag? Or would it be ok to just use the first audio track if no \"default\" is set? The later could be achived by setting the language mode to \"original\" and making the \"quality check\" optional, which won't be part of this PR as Montellese said. So that would be a separate feature/pull request.\n. Montellese, would it be an option to detect and use the language of the first audio-stream found in the file when no specific language was specified in the GUI settings? So that when the setting is \"original\" that it checks for the stream in the best quality but limited to the language of the first stream (if defined)? It actually doesn't make sense to pick just any stream quality not taking the language into account. Or should this also go into a separate PR in your eyes?\n. This PR can be closed, right? @DDDamian\n. IMO the buttons are bad. Way to much button overhead already. And next thing to come would be a additional mute button. If we go for buttons (f.e. for touch devices without hw volume buttons) we would need to find some other solution.\n. as for 1) the with/height parameters\nI think we need to support any of those - so cropping, scaling on the largest dimension and forcing into a certain dimension. This could look like this:\nwidth=123&height=123       =>  forced into dimensions, squeezed\nwidth=123c&height=123c   =>  all dimension is scaled to 123px preserving aspect ratio and the larger one is cropped centered\nwidth=123a&height=123a   => scale largest dimension to 123px and preserve aspect ratio\nwidth=123a&height=100c     => width is forced to 123px while preserving aspect ratio and height is cropped to 100px if larger\nThe format parameter could have those options:\n- web\n- jpg\n- png\n- original\nIf nothing is defined, we default to \"web\", which will only convert anything else then jpg/png/gif to jpg.\n. well, the main reason for me why XBMC should handle image scaling and not just pass the raw data are web clients and remote access from smartphones etc. Bandwith and RAM are valueable there. You also can't crop images centric in webbrowsers when you don't know the exact dimensions on beforehand - at least not with CSS only. And only because XBMC might run on a low power machine shouldn't stop us from implementing features - we're also not removing resource hungry skins.\nThe only downside I see is that the cache could grow quite large - so we might need cleanup tasks that delete old thumbs that haven't been accessed for a certain amount of time.\n. @Montellese and \"movie\" in the url. Well, it could also be http://< ip >:< port >/image/< video|music|tv|photo|addon|system >/< name  or ID of category >/< item id >/poster&width=123&height=456 or something like that. So a little like REST interfaces.\nWe could also use named ID uri sections to ease up parsing and be more flexible for things to come. This could look like: http://< ip >:< port >/videos/category-123/item-12/image?type=fanart\nBut actually we don't need a category in the URI with a global DB layout. If all things like TV-shows, movies, music etc are stored in the same DB table, the item-ID is enough to get the image. Having such a db layout would actually be possible, because all items share certain meta data like title, last access (played,viewed), rating, description, thumb (poster/cover/extracted frame) etc. and any specific data could be JOINED from a media type specific table (video, music, tv-recording, photos). This would also ease a global search and more easily allow for a shared media-item interface to access/render data because you could use the same getter methods on all media types for most views (lists, icon views, ...). But that's a different story.\n. @jmarshallnz - sorry, noticed your PM after I posted:\nabout nearest match:\nin the end it's a question of file size. Mobile connections might care about every byte. Also, on clients you actually assume to get the desired size back when asking for a specific width/height. But if you have concerns on those, why not simply change the API to only allow certain steps and not any combination. So instead of a width/height parameter use a size=50/100/200/400/800 parameter and send the raw image if no size is specified. In this case all clients know they have to deal with correct image fitting. I'd be fine with this.\nabout formats:\nPlease don't convert anything not having a alpha channel to JPG. There are good reasons for non-alpha PNGs - especially for icons and logos. So if a image is a GIF/PNG keep the file format and also preserve the bit-depth (8-bit png stay 8-bit, 24-bit png without alpha also stay like this). Anything else then GIF/PNG/JPG/SVG can be converted to JPG though. BMP-support doesn't make much sense for me.\nabout image quality\na default quality of 90% is by far to high for mobile clients. I usually use a quality of 55-65% for websites. So a parameter for this is sane. But I'd probably also limit the options to \"low/medium/high\" - so image?size=100&quality=m. Having the \"low\" option with a quality of ~30% might be nice to have for mobile apps having low bandwith and only display very small thumbs.\nSo if this is ok for you, I'd vote for the following defaults for JsonRPC if no parameter is set:\n- quality: medium / m (~60)\n- size: 200 (width)\n. @ JPG/PNG:\nPlease consider to preserve the PNG filetype even if the image is opaque. Images in skins that are PNG are most likely graphics and not fotos, and graphics look way better as PNG then as JPG - also filesize is most times smaller. So if we really care about image quality we should keep opaque PNGs as such!\n@ compression:\nI know that the cache is for both, XBMC and clients, but can't we have multiple quality levels in the cache? It doesn't make sense to use a lower quality for XBMC itself, but it also doesn't make sense to send ultra-high quality images over the internet to client apps and waste bandwidth. So if we'd like to support remote webclients this is in my eyes a must have to please everybody.\n@ sizes\nIf we go the way for fixed sizes (powers of 2 and such), then we at least have to provide strict sizes (so always 50/100/200/400/800 and not based on the source dimensions) and also don't allow to request any arbitrary size. Returning best/nearest matches is nonsense IMO. So clients HAVE TO request one of our predefined/available sizes, like size=200 and get a 200px wide image back. If they ask for a not allowed size, throw an error. Either strict API guidelines or nothing.\nBut as Elupus I also don't see a big deal with allowing arbitrary sizes in general and creating them on demand - because it's not like users will install 20 apps all requesting different file sizes. So just store a md5 hash based on [filepath,modification date,size,quality] along with some tags (used for cache pruning) and the image itself in the DB and it's easy to keep track on caching. I don't see a reason to precalculate anything.\n. @jmarshallnz JSONrpc is for communication with remote machines, and there bandwith matters - so we for sure will need a better compression for files transfered via the webserver/JSONrpc. But given that the TV is most likely the client that displays the images in the biggest way, images should be of better quality for \"local\" use. Which quality level is sent should be requested by the client, because only the client knows about it's connection and/or memory. So I'm at least for two quality levels 85/90% for local use, 55/60% as default for remote requests (filesize is ~40% smaller on 55% compared to 90%, but ofc. has less details and slightly visible artifacts).\n@ png vs jpg\na example for pngs that might be sent via JSONrpc might be studio flags, tv-series banners/logos etc - and for those 8bit-PNGs should be preserved - so no 24-bit-PNG conversion and NO JPG conversion. Image quality is in most cases by far better for this kind of graphics while having a far smaller file-size in general (depend on the image though). Also f.e. the Netflix addon logo looks much better als 8bit-PNG then as JPG (JPG has horrible artifacts in larger red areas unless quality is very high). So if PNGs are 8bit, please keep them - they are most likely already optimized anyway. 24bit-PNGs not using their alpha channel otoh could be converted to JPG.\n. what's the status of this? Might it be something for the June merge window, or won't the thumb caching stuff be ready until then?\nAnd for which sizes/dimensions did you decide now @jmarshallnz ? As said earlier, I'd use fixed dimensions (widths) and don't calculate them based on the ones of the origin. That way skins and apps could choose/use sizes that don't require any GUI scaling anymore etc.\n. so now that music thumbs are in - what's next? :)\nMy suggestion now:\n- 4 choosable sizes: small, medium, large, original (pixel values to be defined)\n- fixed image sizes based on a predefined with and not based on the sources dimensions. The sizes chould be based on power of two (based on the \"large\" size)\n- 2 choosable quality levels: high quality (quality level ~90), mid quality (quality level ~55)\nare you guys fine with it?\n. for me the location returned by our server is more accurate but still 70km away\n. what's the status of this? Just reading through the PRs and check what might be nice for Frodo. Thus this bump.\n. any love left for this PR? Having PVR now some HQ scalers (and deinterlacers) would really be nice to have.\n. worth having a look on it for Frodo @cptspiff ?\n. haven't tested it yet, and although I really welcome a way to select the BD stream, I don't think this should be done as VFS structure, because it's none and IMO needs different treatment/presentation. We should think of alternatives here for a better user experience - something like a popup/dialog and/or a overlay menu during playback.\n. what's the status of this? Just reading through the PRs and check what might be nice for Frodo. Thus this bump.\n. @cptspiff I know you're around and can't resist the XBMC sirens ;)\nMind bringing this baby in shape now that Frodo is out the door? (and porbably also some other older PRs of yours)\n. I'm advanced enough to mess with as.xml but don't really want to mess with it. I'd rather enter the mac address in the GUI from my couch then grabbing keyboard and mouse, searching the wiki for the correct xml tags and write that crap from a distance to the TV where that stuff is too hard to read in a texteditor. Entering the IP would be easier though if mac can be determined from that. Maybe we can discuss it on DevCon?\n. @jmarshallnz how do we define the \"N\" seconds to wait until abort? Server do have different startup times. My NAS f.e. takes up to 1 minute to boot up.\nAs for the GUI side when trying to wake a not yet available server, I'd like to see a dialog that tells me what's going on like \"Please wait, trying to connect to remote host for playback\" and most importantly has a button to cancel the process. This way we can circumvent the different startup timeouts and can just wait for a returning ping or timeout after rather high default max timeout (like 3 mins) that can be configured in as.xml.\n@managing the WOL devices\nHow about a new section within settings. Like \"shares\" and let it have subsections to manage all the shares and important for this PR WOL devices.\n. bump - do we want this for Frodo now or not? @cptspiff \n. Yes, some sort of \"centered with fixed width\" might come in handy as well. In CSS you usually do it with <width>300px</width><left>50%</left><margin-left>-150px</margin-left>, but I think there is no such thing then a negative offset/margin in our skinning engine. Thus some sort of \"align middle\" would also be of use like @jmarshallnz mentioned.\nThanks for your work on this pieh.\n. may I propose to have a look at how HTML/CSS is working? There, by default each blockelement/container not having anything defined is rendered relative to it's parent and uses same width (minus a padding that might be defined on the container). All sizes defined (like width:60%) are calculated based on the parent container.\nThe only exception are elements with the property \"position:absolute\" defined, which means that they are not bound to the parent containers dimensions, but to the nearest container in the node hirarchy that is defined to act as positioning reference (this is again defined by the position attribute and a value of either \"relative\" or \"absolute\"). By default this falls back to the browser window itself.\nMaybe we could also have two different positioning modes - a relative one (based on the parents dimension) and a absolute (base on window or closest \"positioning reference\").\n. Ofc XBMC is not beeing scaled all the time - but I think that the flexibility from HTML/CSS would help in creating skins that can better adapt to different screen resolutions without having to provide XML files for every apsect ratio or getting stretched/squeezed controls and images.\n. @pieh - you think you find some time to prepare this for the upcoming merge window? And could changes in this PR probably be used to fix audio and subtitle selection for blurays @Montellese ? This is currently not working.\n. @pieh I talked with @Montellese about it in IRC a couple days ago and without looking at the reason for the bug in detail he said he could imagine that blurays use different language strings/labels and that this might be the reason for the auto-selection he implemented to fail. So with your CLangCodeExpander::ConvertToTwoCharCode this issue probably could be fixed (if it's the actual cause). That's why I pinged Montellese.\n. +1 -> see http://forum.xbmc.org/showthread.php?tid=151774&pid=1308555#pid1308555\nWe also have to deny disabling/uninstalling of addons that are part of a dependency and also show active dependencies in the addon info-dialog (both ways; \"this addon depends on Foo, Bar, Baz;\" \"required by addons Foo, Bar\"). But these features should be added in another PR.\nAlso I'd probably hide all notifications (e.g. \"marked as broken\") if a addon was installed as part of a dependency. I don't want to know if common.plugin.cache was updated or not - hell, I don't even know what it does. In doubt, let's add a history/log system and show performed actions in there for those that care, or add an advanced setting to enable the notification spam.\n. as mentioned on IRC I gave the navigation/handling of sliders a thought and have another proposal on how navigating them could work. It's just a proposal and I'm also fine with the \"press select to switch between controls\" thingy.\nIdea 1:\nThis one will only work if we would add checkboxes to enable/disable filters. Disabled filters could be greyed out and their options probably also hidden until they are enabled. Given this, up/down will by default scroll through the list as they always do. Once a slider filter is enabled, left/right can be used to move between checkbox and the two slider handles. When focused on a slider handle, up/down can be used to indrease/decrease the value (move the slider). To scroll up/down in the list again one has to focus the checkbox (unfocus the slider handles).\nIdea 2:\nThis also works without the additional checkboxes. up/down always navigate the list. When focusing a slider item, the first handle is focused. Switching between the handles can be done with left/right, just as expected. To move a handle it has to be \"activated\" by pressing enter (status needs to be visually indicated) . Once \"activated\" left/right can be used to move the slider - up/down will still navigate the list. To \"deactivate\" and switch to the other handle one has to either press select or back and can then switch between the handles with left/right again. The benefit of this behavior would be that it's almost like draging with the mouse - so click'n'drag (select = mouse-down, left/right = drag, second select/back = mouse up).\nAre just proposals/ideas - nothing more. Don't want to block this PR.\n. @cptspiff is this something for Frodo?\n. +1 for this change - the current behavior is really annoying and I'd even call it a bug.\n. heh, not really, or well, maybe a little (but I'm not using PVR in XBMC atm, so no personal use atm). No, it's mostly because I consider this misbehavior a bug - no selection done, no change should occur.\n. If I understand this correctly, this should ease handling of SD <-> HD switches in streams, so that addons dont have to report those switches. Will this also work on buffers like timeshift (backend side for now, like the 4tr and MP support) and especially when seeking in mixed ones?\n----- Reply message -----\nVon: \"Joakim Plate\" notifications@github.com\nAn: \"xbmc/xbmc\" xbmc@noreply.github.com\nBetreff: [xbmc] Pvrparse (#1464)\nDatum: Sa., Sep. 22, 2012 21:29\nThis will continuously parse input streams from PVR manager for changes in codec parameters. This \nshould reduce the burden on addons to provide data we need to init codecs.\nThis suffers same behaviour as the extradata parsing. On startup we will attempt to open a stream, without full knowledge of it's internals. This mean we will potentially re-open it again after first packet.\nYou can merge this Pull Request by running:\ngit pull https://github.com/elupus/xbmc pvrparse\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1464\nCommit Summary\ndvdplayer: make level available for audio as well\ndvdplayer: parse pvr streams for stream changes\nFile Changes\nM xbmc/cores/dvdplayer/DVDDemuxers/DVDDemux.h (8)\nM xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxFFmpeg.cpp (4)\nM xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp (81)\nM xbmc/cores/dvdplayer/DVDStreamInfo.cpp (4)\nPatch Links\nhttps://github.com/xbmc/xbmc/pull/1464.patch\nhttps://github.com/xbmc/xbmc/pull/1464.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. bump - something for Frodo? @cptspiff \n. my receiver also shows 5.1 \"rear speakers\" as \"rear side speakers\" and only uses the real rear speakers for 7.1. That's at least what I noticed if this helps.\n. Nice work, thanks. Fine now from my side :) The mentioned typo above can be fixed when squashing I think.\n. Argh, sorry for closing, damn small smartphone, was actually just scrolling :(\n. same opinion. If current font has rendering issues, replace it - no need for a gui setting.\n. is there a difference between the wired and wireless controller? If not \"wired\" should be dropped in \"joystick.Microsoft.Xbox.360.Wired.Controller.xml\". Or is the wireless one also detected as wired?\nedit: nvm - should have read the trac ticket first :)\n. so pushing the green button now @opdenkamp ?\n@Red-F - just had a look a the curl code. Can you use/set \"m_postdataset\" somehow? Seems if this variable is set CURL will configure itself for POST. Also there are header and write callbacks - can those be used? I'm no C++ dev, so I'm just asking/guessing.\nedit: or wouldn't it make sense to adjust the existing get/post methods with callbacks and additional headers/mimetype?\n. @jmarshallnz - here is my local file structure\nmovies --\nUsually all my movie folders (regardless of stacked files, VIDEO_TS/BDMV subfolders or just a single movie file) have these files: folder.jpg, fanart.jpg, movie.nfo\nIn case of VIDEO_TS and BDMV I duplicated those files to according folders (was needed in Dharma I guess) and am more then happy if I can keep those folders clean (which also requires that the nfo is fetched from the root if not currently done)\ntv-shows --\nroot folder of the show: fanart.jpg, folder.jpg, season-all.jpg, seasonXX.tbn, tvshow.nfo\nseason-folder: folder.jpg, [episode-filename].jpg, [episode-filename].nfo\nmusic --\nIn general I have the cover in the albums folder as \"folder.jpg\" or \"cover.jpg\" only for the purpose to see the cover when browsing in file mode. All/most files have embedded covers as well\nSo if I understood your summary correctly, my local art should still be fine.\nMost media managers have the ability to create the file structure I use (using EmberMM btw), but IIRC it's not their default setting. Default is I guess to export both, jpg and tbn and use \"[moviename].suffix\" for the posters.\nI really welcome dropping tbn from the export and use the \"native\" file suffix. Anything else you need to know?\n. @jmarshallnz shall I compile master with your PR and scan my library just to be sure?\n. thanks a lot for AJAX the cleanup. Wanted to do this for a long time. And as @Montellese said, I planned to do a complete rewrite of the webinterface this winter and make it a) more usable, b) look much better, c) localized and d) add support for mobile devices. My plan was to make it some sort of basic web-based remote \"app\" and probably also make use of all the nice HTML5 features like websocket, local storage/cache, db etc. And if it works nicely even use it as basis for a phonegap app in order to get a basic official remote out for currently unsupported mobile platforms like windows phones, blackberry etc.\nSo if you like we could teamup.\n. I don't think we need a channel scan via JSONrpc atm - but beeing able to trigger a recording would be great (even if only instant recording for now)\n. nice Idea. After reading the PRs comment my first thought was \"if we need such a dialog, then there is something wrong with the usability of the skin\". But then I've seen the screenshot and just love it. Might also be nice to have it for other things like \"Your video library is currently empty, to add items to your library create a share in file mode and scan it your library. [add share now] [abort]\" (needs rephrasing, but you get the idea).\n. is there a way to see the \"name\" and language of the subtitle? Doesn't have to be the select list from the audio settings OSD, but I think the skin should somewhere say \"current: german [forced]\" or \"current: directors comment [en]\" - can even be just a fading out \"overlay\".\nI'm also not sure if we need the \"enabled\" trigger. Can't \"next\" just loop through all subtitles + \"none\"? This will also fix the issue with the \"next\" button showing up even if there is only one sub, which seems to be the case now (according to the code - not tested). Also this would be nice to cycle through subs with a dedicated remote button.\nAnother thought:  Shouldn't we manage the items of those popups by the core or at least provide a separate window/panel/howeverYouCallit for it and encourage to use those + remove subtitle settings from the audio settings? Or is this kind of GUI refactoring (like discussed at devcon) out of scope for Frodo @cptspiff ?\n. @JezzX \n1) why the heck do you have 16 subs? My intention behind this suggestion was to simplify UI by using a quite common approach to toggle subs\n2) aren't languages already shown in the subtitle select box in audio settings? This select box shows all the info I'd like to see (language and/or name of the sub), so the mentioned PR is not needed just to show this information. If the language label is nicely parsed like the PR seems to do is just candy IMO\n3) well, we should aim for usability for endusers, not for skinners ;) My idea was that skins don't have to catch up with core features/changes and would just define a dummy that's filled with UI options by the core (like in settings AFAIK), which would have the benefit that users would have/can expect the same features in every skin. (if skins make use this kind of dialog is a different thing though - but if they decide, they'd have an easy way to do it)\nBtw - we had some discussion @devcon about changing the video/audio settings dialog and probably merge it into a tabbed one and extend it with a \"subtitles\" tab. Should remove at least 1 XML file ;)\n. dee9786 has it's own PR (sink reopen) - so I guess it's wrong in this one, isn't it?\n. @jmarshallnz updated the PR according to your comments. I'm currently trying to implement dedicated actions for the channel up/down keymap (ACTION_CHANNEL_UP/DOWN). Will add those in a second commit and update this PR (if I manage to get this working). If you think the PR is fine as it is now, feel free to merge (and @cptspiff has no objections)\n. Updated the PR and added the dedicated channel up/down actions.\nBy adding a global keymap for channel up/down I was able to switch the channels even with the video playing in the background or minified in any PVR window. No kaitoast or other overlay will show up when performing a channel switch outside of fullscreen mode, but I think this is not needed (and probably out of the scope of this PR).\n@jmarshallnz and @opdenkamp, mind having a look again?\n. updated again and removed the actions from Builtins. If we happen to need it some day, it's quickly added.\n. sorry, found some issues on testing - will reopen once fixed (might be related to the api change and a incompatible addon though)\n. mentioned issue was related to a broken compile. PR is working like intended.\n. just noticed that also some other keymap files seem to need updates, like the gamepad.xml one (dpadleft/right/up/down)? Mind having a look? Sorry I forgot about those.\n. had hoped you might do the others as well ;)\nThe new PR will all keymaps updated is #1773\n. sorry for git mail spam, but could someone have a look / proof read / test that the suggested bindings are fine? I don't have any of those input devices (at least not connected with a XBMC setup) We should at least get the remote.xml in for BETA in order to make all the CEC users ( @opdenkamp, @n37 ) happy\n. as stated in the forum thread, the aim of this PR is to bring back the already known and previously hardcoded behavior before 108c19c - so it's more a bugfix for functionality loss. While I agree that current/old mapping is not the best idea now that most PVR backends have timeshift support (which I already expressed earlier on the forum), it's not the aim of this PR to add changed behavior nor implement still missing keymaps for other PVR sections that are currently only mapped in keyboard.xml. So changing default behavior is IMO a task for a different PR.\n. so what to do now? We should find a solution for beta2. \nAnother thing that bothers me is that a user posted on the forum that the >FullscreenLiveTV< tag/mapping is not working for his AppleRemote when he adds it manually. But I don't see what's missing in my FullscreenLiveTV window implementation that might be causing this :(\n. I could test on my phone having a real SD card (running Android 2.3.5 or so) - but I would need an apk as I can't build for Android.\n. WASAPI requires enabled exclusive mode for the audio device. If it's disabled, playback is choppy at low framerate. But IIRC DirectSound has also some disadvantages @DDDamian ?\n. argh, right - I missed TranslateJoystickString() which I thought also uses GetAction in the end :/ Will add.\nedit: just noticed that I also missed something in mouse handling (windowID retrieval) - so wait with the review until I updated the PR.\n. updated the PR. Hope I got this stuff right. It at least compiled for me and thumb sticks of my 360 controller still worked, so I hope it's correct.\n. so whom to ping? because I don't think we'll find volunteers here ;)\n. @jmarshallnz, it compiled for me on windows. And yes b465b85 and c63dc51 could be dropped for Frodo - but I'd still like them to go in after Frodo to clean this stuff up. The rest of the commits is needed to fix the issues.\n@Montellese, keyboard and nyxboard won't help in testing - those are already working as they are using the onKey method of cApplication which already worked fine. What needs testing are input devices that are treated as \"joystick\" or \"gamepad\" input - such as the Xbox360 Controller and f.e. swipe gestures on the white AppleRemote (as I've been told). Also guys with IR remotes and using some event server to send inputs should test.\nWhat has to be tested is if overriding some bindings in <FullscreenLiveTV> is working and also if special key bindings in <FullscreenVideo> are working in liveTV mode (unless not overridden ofc)\n. XBMC runs pretty well on my GB phone, and it's capable of playing 720p (tested with VLC I think) - so IMO we should support it if it doesn't add to much overhead\n. I kinda miss the removal of the code duplication from 3749a9664e. If not done now it has to be done right after Frodo as it will for sure lead again to incomplete implementation of new features / fallback window mappings. All places should use the fallback map added by e13ca08 and the cApp::GetActiveWindowID method - and this is not the case for key input which is still cooking it's own soup :(\n. I also had the feeling that new PVR addons are automatically enabled when added (f.e. via the OS) to the addons folder. That at least happened to me when I added the ArgusTV one.\n. tested your v5 build with the latest crystax changes and it worked fine on 2.3.x and 4.2\n. Afaik whitespaces and unallowed characters are replaced with an underscore \"\" by the used method. So it should be TLC___Animal_Planet.png (not exactly sure about the white spaces though and I'm not on my PC to have a look at the code)\n. I said I'm not sure about the white spaces ;) Unallowed characters are for sure replaced by \"\". So give \"TLC _ Animal Planet.png\" a try - this should work then (I was just reusing a already existing function for this fix, that's why I wasn't sure what happens in the background).\n. white spaces are preserved - so my last suggestion should work, regardless if original case or lower case (the code is checking for both). If it doesn't I have no idea, try original case then.\nedit: let's move further discussion/questions to the forum please, because the discussion here will mail spam every team member (git will notify everybody on changes/updates to PRs)\n. just gave this a try. Working nice in general, but I have some issues with it:\n- I don't want my NAS to be woken unless I want to play a movies, but something seems to wake it always (maybe a script from the skin that's checking for a file)\n- I got several KaiToasts that the device is already awake - do we really need those?\n- I'm not sure if it was related to this feature enabled (will test again), but starting playback of a video with device already awake took very long\n- My NAS needs a long time to do a cold boot and the timeout the WOL action was waiting for it was to short. IIRC there is some advanced setting to change it, but IMO it should be possible to change it in GUI as WOL is really nothing \"advanced\" anymore these days.\n. @t4-ravenbird \n- in my case it also wakes the NAS when checking for thumbnails/fanart it seems although they already are cached (need to check log with a new build)\n- I noticed that this patch queues WOL messages even if the device is already running. Why is that needed? To prevent it from going to sleep again? Shouldn't active file access prevent this?\n. is this one ready for prime time now? If so, please rebase.\nXBMC devs please check and give green light so it can go in this merge window.\n. this PR causes some issues in my test build. If I try to access one of the liveTV windows but PVR addon is not yet completely loaded (IIRC channels are not yet fully imported) I sometimes only get a black screen and the only possibility to \"close\" it is by pressing \"h\" or \"home\" to get to the home screen.\n. Why not use Eden setting? If I didn't want to see those items in Eden I most likely also dont want them in Frodo.\n. Ah, right. Been on my phone and couldnt easily check the ticket.\n. 10:23:48 T:1584   DEBUG: Keyboard: scancode: 3e, sym: 011d, unicode: 0000, modifier: 0\n10:23:48 T:1584   DEBUG: CApplication::OnKey: f4 (f093) pressed, action is\n10:23:48 T:1584   DEBUG: Keyboard: scancode: 3d, sym: 011c, unicode: 0000, modifier: 0\n10:23:48 T:1584   DEBUG: CApplication::OnKey: f3 (f092) pressed, action is\n10:23:52 T:1584   DEBUG: Keyboard: scancode: 41, sym: 0120, unicode: 0000, modifier: 0\n10:23:52 T:1584   DEBUG: CApplication::OnKey: f7 (f096) pressed, action is\n...\n10:24:22 T:1584   DEBUG: WM_POWERBROADCAST: PBT_APMSUSPEND event was sent\nSomehow the nyxboard keymap is ignored for me. Might it be due to \"remote sends keyboard presses\" setting? Also the power button didn't trigger any keypress detection in XBMC but directly the WM_POWERBROADCAST above. Same line shows up when I press the power button on the mainboard. Windows 7x64 that is.\n. @Voyager1 <f4> is the [user] button on the Nyxboard and the f4 mapping only applies for it (or at least should)\n. I think I have some issues with this commit. My Nyxboard is showing the shutdown menu now when I try to change the volume or play/pause the media. Will test with a nightly tomorrow, just to be sure. Windows this is.\n. nvm, seems it was a broken build. Nightly is working fine. Sorry for wrong alert.\n. not sure if the app has to deal with it itself, but IIRC Android has several volumes and we should only change the \"media volume\" - so not ringtone or whatever else there is.\n. If we already change only media volume and not an overall \"global\" one, great, that's all I wanted to be considerd. \"ringtone\" was just an example of some other volume control - no idea how many of them there are.\n. I have mixed feelings about it. For mobile/touch devices I'd prefer android volume for the reason Montellese gave. For tv-boxes like pivos I'd probably prefer XBMC volume bar. So if it's possible and doesn't add too much clutter, I'd check if we run on a touch device and use native there, and in any other case XBMCs volume bar. If it's not possible, XBMC volume as our main target is TV.\n. @jmarshallnz Only because I played the PR monkey for the 360 keymap I'm not really an expert on this ;) But I think it would be much cleaner to move all this altname stuff to a separate \"device-aliases.xml\" file (or however we name it). There we define our custom names (like \"XBMC - Microsoft-360-Controller\") that are used in the keymaps then and map all the aliases out there to those custom names. So our keymap logic first resolves the correct custom device name by checking our alias map and then parses the keymaps for device specific mappings.\n(That's what came to my mind right away, might have to think about it some more though)\n. @jmarshallnz, well, right, that would work, still don't like it somehow when I think of custom keymaps and such.\nAnother idea would be to change the keymap structure in general. I mean we already split the keymaps per device, so I really don't see the need for the current markup and group each keymap in device specific subsections again. We could change it to this instead (again, just quick a random thought)\ndevice mapping xml\nXML\n<devices>\n  <device identifier=\"PS3-Controller\" type=\"joystick\">\n    <alias>Sony PLAYSTATION(R)3 Controller</alias>\n    <alias>Sony Computer Entertainment Wireless Controller</alias>\n    ...\n  </device>\n  <device identifier=\"remote\" type=\"remote\" />\n</devices>\nkeymap\nXML\n<keymap device=\"PS3-Controller\">\n  <global>\n    <button id=\"15\">Select</button>\n    ...\n   </global>\n</keymap>\n. @black screen on resume. I also noticed this today, but I think it could be skin related and not related to this PR (I don't have it applied). IIRC it worked with confluence a few days ago, but didn't debug it any further today. XBMC was at least responding (heard nav sounds) with the black screen.\n. uppercase function should be fixed - it's silly to have uppercase language strings, especially once we define/control/manage the home menu items in core\n. FYI, I'm working on such a feature (I at least try)\n. IMO full weather data should only be fetched when in one of the weather windows or explicitly requested. It doesn't make sense to grab the full forecast when skins only display a little icon. So how about doing light requests by default and trigger full requests when entering the weather window and the info is older then X minutes? This could be combined with a \"updateInterval\" variable provided by the addons for both, light and full requests.\n. I guess some sort of push updates are technically not possible?\n. can't we add the needed repo logic to 12.1 in case a tiny bit is missing in order to not list incompatible addons instead of marking them broken?\n. I'm not much into the technical side in XBMC, but would it be an option to solve the issue not in the client but on the server? So instead of having one static repo xml for all platforms, have a repo server in the background instead that's dynamically creating a repo.xml file for the clients platform and version (extracted from the http request header)? From XBMCs POV it would still just read a xml file from the web, only that this xml is automatically specific for the platform and version.\nWe would need a repository backend (webinterface) where we can manage the addons then, but this is a long term plan anyways I guess (at least from zag and me).\n. the xml will be cached of course and automatically recreated when addons get added/updated in the repo. We might even be able to do this with a simple apache redirect rule.\n. how about adding according keymap rules to keep current behavior? If not mapped to left/right then maybe at least to prev/next while in the OSD. Channel/Page up/down while in PVRChannelsOSD could just cycle \"pages\" on larger channel lists while prev/next could switch the groups.\n. @JezzX, can you add the according confluence changes to this PR so that it won't break group changing in nightlies as it would now?\n. Did basic test on Windows, seems to work. Tested DXVA. The only thing I noticed is, that although the black of the video is brighter, the black background color of the video plane is still deep black, which looks weird (see http://images.elements-net.de/misc/xbmc-studio-level.png). With studio levels turned off it's the same black.\nAnother thing I noticed is that poster reflections in Confluence don't seem to work in this build - probably unrelated though.\n. how about enabling vsync and use 1080p@24 resolution - then the pi will only render with 24fps. That's what I do and it's working really well. So no need for the additional setting or a ifdef. Lowering the default in general to ~60fps would be an option though IMO.\n. @Montellese, could you add the according code to have that feature available via JsonRPC?\n. question - does it make sense to have the logic where I put it or would cApplicationMessenger or something else be better suited? But keymap shouldn't change to some ugly \"Builtins(...)\" construct.\nAlso, would you guys be fine with changing Confluence to start LiveTV when pressing the according home menu button? Would at least make more sense to me, as channel list etc can be accessed via submenu anyways (maybe make it configurable in skin settings?)\nAnd a third point that @JezzX brought up is the name of the action. He suggested to have PVR in it - so probably \"playpvrtv\" so that we in future could also have a \"playpvrradio\" or something (I could add playpvrradio as well if you want)\n. ok, I rewrote the whole thing to be a bit more flexible and it now also allows to specify which kind of playback to start (any, tv, radio). So there are 3 actions now that can be used in keymaps and skins. The current update is more of a RFC, needs some more tests before it can be merged.\n. updated. Moved the cAction handling completely to the PVRmanager now, added feedback on playback errors and added some inline documentation as requested.\nEdit: also changed the reused error messages slightly to be a bit more generic and make a bit more sense in the new usecase (\"This channel\" was missleading as user didn't specify a channel)\n. updated again - using %s to inject the context for the error messages now. Hope everything is fine now.\n. you have a typo in the commit message: \"provice\"\n. I'm in favor of a textbox instead of 3 lines. Depending on translation it looks totally silly if all the three lines scroll at the same time as they don't fit in the dialog (happened several times in german translation and message was almost unreadable due to all that scrolling mess). And as skins will most likely have to adopt for Gotham anyways I don't see a reason to not improve this. Was about to suggest that as UI improvement anyways.\n. so instead of bugging a hand full of skin devs keep annoying thousands of users with unreadable dialog messages? I mean I understand your point, but this 3 line dialog is a usability mess for endusers. I doesn't have to be fixed with this PR, but as it was on topic I just wanted to mention that we should consider changing it. We can discuss it further on the forums if you like to not spam everybody.\n. I don't get the sense of \"most recent\". Is it the \"most recent\" created profile or the \"last used/active\" one? In the later case, I'd rename it - \"most recent\" IMO is not obvious enough. And from the screenshots I don't see a way to disable autologin again.\nedit: I know it's already merged\n. ah, now I get it. Right. Login screen ofc disables autologin - but I don't think it's very userfriendly this way as it's not very obvious (at least it wasn't to me). As you can only have either login screen or autologin I'd combine them somehow, but I don't have a good solution for it yet.\nOn a quick thought though:\n\nhave two items in the left menu\none to manage/list accounts\none to config \"login mode\" (not sure how to name it)\nmanage screen will be as is\nin the \"config\" screen have these options\nlogin mode: (select box or something)\nlogin screen\nautologin last used profile\nautologin selected profile\n\n\nprofile for autologin: foo\n\nBut as said - just a quick thought. Maybe we should discuss it on the forum?\nedit: a little off topic, but how about moving the profiles to \"settings\"? It's a bit odd that they are separate.\n. I never get the need for the flattened view - hell, I even never can remember what it's for although I asked like 3 or 4 times already.\n. ",
    "vitalogy": "please merge this request\n. ",
    "avjui": "+1 would be realy nice feature. \n. ",
    "dsoms": "Ups! What I can do to fix it? I'm a newbie of git and github.\nThanks.\n. It works! The commit is fixed.\nThanks.\n. ",
    "phi2039": "This makes sense to me and the code looks clean...\n. ",
    "mrohnstock": "missing header unistd.h\nsee: https://github.com/xbmc/xbmc/commit/f6199bc5c37dd391f0432a56f3254f78716ba6c8#commitcomment-1282439\n. on compiling master without the commit:\nCPP     xbmc/cores/dvdplayer/DVDFileInfo.o\nCPP     xbmc/cores/dvdplayer/DVDMessage.o\nCPP     xbmc/cores/dvdplayer/DVDMessageQueue.o\nCPP     xbmc/cores/dvdplayer/DVDMessageTracker.o\nCPP     xbmc/cores/dvdplayer/DVDOverlayContainer.o\nCPP     xbmc/cores/dvdplayer/DVDOverlayRenderer.o\nCPP     xbmc/cores/dvdplayer/DVDPerformanceCounter.o\nCPP     xbmc/cores/dvdplayer/DVDPlayer.o\nCPP     xbmc/cores/dvdplayer/DVDPlayerAudio.o\nIn file included from /xbmc/xbmc/threads/platform/ThreadImpl.h:25:0,\n                 from /xbmc/xbmc/threads/ThreadImpl.h:24,\n                 from /xbmc/xbmc/threads/Thread.h:31,\n                 from DVDPlayerAudio.h:23,\n                 from DVDPlayerAudio.cpp:23:\n/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.h: In member function \u00bbvoid XbmcThreads::ThreadSleep(unsigned int)\u00ab:\n/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.h:37:75: error: \u00bbusleep\u00ab was not declared in this scope\nmake[1]: *** [DVDPlayerAudio.o] Error 1\nmake: *** [xbmc/cores/dvdplayer/DVDPlayer.a] Error 2\n. +1 for this - works for archlinux\n. ",
    "Petermo": "Under Linux 64bit while running the latest xbmc I noticed a steady increase in memory usage (into GB's) which I tracked back to PerformDeviceScan in PeripheralBusUSBLibUdev.cpp. Since I have no idea on the inner workings of udev I simply disabled the endless while loop that waits and executes the ScanForDevices. The result is that I no longer have the memory increase.\nI ran xbmc through valgrind and have a massiff.out file which can be found at http://redblur.nl/massif.out.5864 \nTo me, it seems that the approach implemented in code included in this PR is causing this behaviour so I'm wondering if anyone related to this one has a clue on why the memory usage is increasing so much.\n. Ah, very nice... seem to have just missed that one :)\n. Although it does seem that there is somewhat less leakage, I'm still measuring a lot of memory usage by udev. http://redblur.nl/massif.out.1656\nI think the udev functions udev_device_new_from_syspath and the already mentioned udev_device_get_parent still leak somehow even when they don't return a valid device. As also mentioned in PR 383 I have no experience with udev, but I do wonder if the same occurs in 32 bit systems or when using other udev library versions.\n. I modified it a bit and the leaks seem to have disappeared. http://redblur.nl/PeripheralBusUSBLibUdev.diff\nSince I'm not sure about the original idea and intended behaviour (and in what cases) of the PerformDeviceScan (and the reason of the continues polling) I'm letting someone else judge if this won't break that behaviour.\n. True, it does wait indeed. But (at least on my system) those updates seem to come on a regular and quite rapid basis. Maybe there is simply something wrong with my setup though. How often is the PerformDeviceScan triggered on your test system(s)? \n. ",
    "Sky-git": "@theuni : It used to be in most of the linux distro until recently. It's still present in Fedora but I assume they will remove it sooner or later\n. ",
    "mmbabel": "i use airplay without zeroconf, please don't make it depending on zeroconf.\nYou can also create your avahi services manual!\n. since a few weeks zeroconf does not appear in gui on arm linux and cannot be enabled.\nAlso i use avahi to announce not xbmc related features (AirPrint, VNC, XMPP, ...), it does not matter for me if i announce one or two services more.\n. ",
    "cbxbiker61": "OK, a fix for item 3 has just been committed, so cross that one off the list.\n. ",
    "CEbbesen": "I meant string 196, I was reading the lines.\n. ",
    "Albinoman887": "Since the latest changes it no longer runs on even vista/7\n. Ill try and rebuild from scratch but I just keep getting force closes/program not responding msgs\n. Yeah just Reyes completely from scratch it wont run maybe your right and u didn't push your last changes\n. Oh I see you were doing a debug build, makes sense let me know...\nOn Sep 27, 2011 3:30 AM, \"jimfcarroll\" \nreply@reply.github.com\nwrote:\n\nNevermind. I see. The release build seems to be having a problem.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2209358\n. I just built it like I do the xbmc master I use the portable data folder for\nuser data is the only thing non defauld I'm doing o really don't know why\nit's not working how do u define xbmc_home\nOn Sep 27, 2011 3:28 AM, \"jimfcarroll\" \nreply@reply.github.com\nwrote:\nIt looks fine. I don't have any problems on Windows 7. Did you define\nXBMC_HOME?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2209343\n. Tested, seems solid do you still need an XP test I'm typing on my smart\nphone that's why I'm short w/ words but no issues at all it seems on win7 I\ncan test on a xp machine if its even fast enough to run xbmc lol\nOn Sep 27, 2011 4:39 AM, \"jimfcarroll\" \nreply@reply.github.com\nwrote:\n@Albinoman887, ok fixed. Idiosyncratic Windows BS. You'll need to re-pull\nit as I did a forced push.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2209784\n. Tested it on XP sp3 works fine and all my stutter problems are gone on 7 so\nif your satisfied I think the patch is ready to be merged once you feel\ncomfortable\nOn Sep 27, 2011 6:03 PM, \"jimfcarroll\" \nreply@reply.github.com\nwrote:\nCool. I don't think anyone has tried it there. I tested the XP code path\non Windows 7 but I don't have an XP machine that I can test it on. If you\nwant to give it a shot, let me know how it looks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2218383\n. @crystalp so what are you saying? This wasn't addressing the problem?\nOn Sep 27, 2011 11:05 PM, \"CrystalP\" \nreply@reply.github.com\nwrote:\n@jimfcarroll, I was asking you about removing the #if\ndefined(TARGET_VISTAPLUS) and #if defined(TARGET_XP) sections because they\nwon't be used in the official builds, complicate things a bit and will have\nto be maintained until we drop XP support, which is pretty far away.\nIn addition I'd be surprised if the performance problem in the previous XP\nimplementation was because of one \"if\" or function pointers too many. After\nall to miss a vsync, it's a question of tens of ms wasted, not ns. So maybe\nthreads were not woken, something was keeping the CPU busy, ...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2221454\n. So is this gonna be merged soon then?\nOn Sep 28, 2011 3:46 AM, \"jimfcarroll\" \nreply@reply.github.com\nwrote:\nNo. He just doesn't like the way the code is currently structured. I'll\nchange it when I get some time.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/444#issuecomment-2223561\n. Yeah that would be cool\n. i completely agree this is not a good idea at all coming from an end user who CAN edit the as.xml i would not want this in the GUI if you cant edit a as.xml you shouldnt be messing my SQL anyways\n. same issue as above poster using mysql. havent tryed sqlite is this what the local dbs are based on? anyways back on tpic have the same loop as above poster after this commit\n. i tryed reverting this commit but it still didnt fix the issue although i  might not have reverted correctly i simply did git reset \n. ok, i completely get the consept of what you just explained but not the gritty details. but makes sense Keep Things Simple Stupid :), anyways a15599 actually wrote the patch so i'll get his attention to this PR asap but until then, arent you able to make changes to the PR (i thought that was the point of it but completely new to github) but if thats the case i'm sure a11599 wont have any hurt feelings if you amended his patch, i'm just new to github and coding in general\n. jmarshall after re reading your post it sounds pretty simple anyway we could chat in irc or something i really want to learn as much as i can, ive been using xbmc snice like 2004 gradually getting more and more advanced as a user, codings the final step so.....\n\nso when you say all you'd need to do is call this\nfloat delay = g_advancedSettings.GetGlobalAVDelay(g_settings.m_ResInfo[currentRes].fRefreshRate);\nif (delay)\nplayer.SetGlobalAVDelay(delay, apply_or_not);\nwhere is that being \"called\" from i understand the float delay = basically says float delay equals whatever the advancedsettings.xml says against the current refresh rate, but where would this snippit of code be put in if you dont want ot use IPlayer or DVDPlayer to be in charge of looking in advancedsettings? all in advancedsettings.h?\nEDIT: are you refering to this ?\n+void CDVDPlayer::SetGlobalAVDelay(RESOLUTION res, bool apply)\n     2490\n+{\n     2491 \n-  m_GlobalAVDelay = g_advancedSettings.m_videoAVDefaultDelay / 1000.0f;\n   2492\n-  for (int i = 0; i < (int)g_advancedSettings.m_videoRefreshAVDelay.size(); i++)\n   2493\n-  {\n   2494\n-    RefreshAVDelay& avdelay = g_advancedSettings.m_videoRefreshAVDelay[i];\n   2495\n-    if (g_settings.m_ResInfo[res].fRefreshRate >= avdelay.refreshmin && g_settings.m_ResInfo[res].fRefreshRate <= avdelay.refreshmax)\n   2496\n-      m_GlobalAVDelay = avdelay.delay / 1000.0f;\n   2497\n-  }\n   2498\n-  if (apply)\n   2499\n-    SetAVDelay(m_dvdPlayerVideo.GetDelay() / (float)DVD_TIME_BASE);\n   2500\n-  CLog::Log(LOGDEBUG, \"CDVDPlayer::SetGlobalAVDelay: Global AV delay %s to %.0f msec\", apply ? \"applied and set\" : \"set\", m_GlobalAVDelay * 1000);\n   2501\n  +}\n   2502\n  +\n. ok i'll get a11599 in here to help thanks a lot man.\n. Ok I need to interject, it is not post prosessing play the same video in vlc. Its fine, its xbmc and I also think a1599 has a point why make this so much more complex, also, the post processing delay comment, there's no delay or we wouldn't be setting it to 250ms which is the main reported oos. Measurements \n. Yes, too early and as to what you said if there's no delay fix the problem....you kind of answer your own question in the next sentence.  Some peoples delays are different, this leaves the door open for that. I.e. a11599 has a 80ms delay for 60htz matierial, I don't I set it to 0, and anyone who is using refresh rate switching and notices the delay can edit an xml\n. Basically, no delays should be hard coded anywhere it should all be adjustable especially with audioengine coming the delays might change a bit\n. Ok I got ya, I don't think HDMI is the answer thouggh. And as for the GUI setting, I think its a great idea but out of the scope for Eden \n. ok back home now, sorry for short responses earlyer i was on a smartphone re reading my comments i seemed short and a bit rude, heh. so could you propose a roadmap of what needs to be done i'm a infant when it comes to this stuff\n. Ok thanks I'm gonna get a11599 back in here he write the original patch\n. so are the settings in as.xml the same tags or has the formatting changed? i cant seem to get it to recoginize my settings\n. Hmmm I can't get it to see my settings what platform u testing on mine i s\nLinux and I'm also using the audio engine branch I'll re compile in a min\nbut in the mean time can u e.ail the advanced settings ur using I'll\ncompile and test if I have probs u can try my branch cuz we want it working\nwith are as it was when. I submitted it and AE is to be merged soon so\nmight as well make sure it with. And I use that branch but want to use the\npatch too\nOn Feb 18, 2012 11:08 PM, \"Tom Vijlbrief\" \nreply@reply.github.com\nwrote:\n\nThe settings have the same tags. It will accept globalaudiodelay AND\nglobalavdelay\n-    TiXmlElement* pAdjustAudioDelay =\n  pElement->FirstChildElement(\"globalaudiodelay\");\n-    if (!pAdjustAudioDelay) // backward compatibility\n-      pAdjustAudioDelay = pElement->FirstChildElement(\"globalavdelay\");\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4040373\n. sorry got the email on the go. so the xml is suppose to be the same? and it should display the delay in the ad: section of the stream output info? because i cant get it to change the delay for 24htz matierial. albiet i'm using my own fork based on AE with this patch applied so that could be why. but the original patch worked wtih AE so i'm confused and would like to try and narrow it it down. i'm going to recompile and will post results \n. still nothing. it compiles file and in the string output there is the ad: string but its 0.000 instead of -250 which is my setting i think if it wasnt gonna working that setting wouldnt show up but maybe i'm wrong. compiling just your branch directly no AE to se the diff\n. so in the XML I set based on fps? Any particular prefix? Or can I just do min 23 Max 24\n. OK gonna give it a test right now will report back asap\nOn Feb 19, 2012 11:31 AM, \"Tom Vijlbrief\" \nreply@reply.github.com\nwrote:\nYou don't need to change the syntax...\n2012/2/19 Albinoman887\nreply@reply.github.com:\n\nso in the XML I set based on fps? Any particular prefix? Or can I just\ndo min 23 Max 24\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4043830\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4044426\n. preliminary tests arent good. it is still keeping the counter at 0 here is what my xml looks like\n[code]\nadvancedsettings>\nvideo>\nglobalaudiodelay>\nrefresh>\nmin>23\nmax>24\ndelay>-250\n/refresh>\n/globalaudiodelay>\n/video>\n/advancedsettings>\n[/code]\nis that correct? (ok i know they are all missing this < charicter but if i tryed to just copy and paste my xml in there it was doing a bunch of werid parsing to the post )\n. yeah this needs some bug bashing bad it still isnt functioning at all\n. if you press o on the keyboard there is a banner on the top of the screen, look for the string ad: it will say 0.000 its suppose to say whatever your delay is set for that particular res. its not working for specific resulstions i set it to 250 but the ad string still displays 0\n. it was with the old patch, I'll mess with it some more and report back,\nwhat is that ad represent then\nOn Feb 20, 2012 3:59 AM, \"Tom Vijlbrief\" \nreply@reply.github.com\nwrote:\nI see,  I was afraid that you were referring to that. The effective global\ndelay is NOT shown in that display. You will have to listen and watch the\nmovie to see the effect...\nOp 20 feb. 2012 11:25 schreef \"Albinoman887\" \nreply@reply.github.com\nhet volgende:\n\nif you press o on the keyboard there is a banner on the top of the\nscreen,\nlook for the string ad: it will say 0.000 its suppose to say whatever\nyour\ndelay is set for that particular res. its not working for specific\nresulstions i set it to 250 but the ad string still displays 0\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4051275\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4052460\n. gave it a go. nice to have that on the screen for testing. works good now. settled at about 200ms for 24p playback. i really dont see the need to do it  based on refreshrate.... as if you arent using refresh rate switching you wont be using this advancedsetting and with refreshrate switching on it works exactly the same\n. That is not true, its a bug in xvmc play a video in vlc no lag, xbmc lag\nand I dont delay 60 ftps/Hertz material at all so that setting would not\nwork for me leave it the way it is xbmc plays videos so fps is fine because\nyour either using one global refresh rate or refresh rate switching BASED\nON ffps so it should make no difference\nOn Feb 21, 2012 4:34 AM, \"Joakim Plate\" \nreply@reply.github.com\nwrote:\nIt should be based on refresh rate. We are working around delays in the tv\nthat differ based on refreshrate.\nI think the reason it differs is that the delay in the tv is in number of\nframes not time.\nThus maybe it would have worked better with a global setting for number of\nframes delay.\n200ms at 24hz is about 5 frames\nAt 60hz, 5 frames would be about 80 ms.\nSo a setting of 5 might accommodate all resolutions.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4073878\n. lol from video to audio to video. watching development is fun :) vidooutputlatency sounds better imo by the way\n\nps. you guys think this will make it into eden? not that it matters as i havfe my own frankienbuild of xbmc with Audioengine merged with current master plus this PR but would just be cool for it to make it to eden a lot of people will benefit from it\n. wow its great to see this ive been lurking and compiling my and merging my own builds of AE+upstream for awhile now its great to see it almost merged to master\n. this hasent been fixed i cant compile on xbmcbuntu anymore with this error checking for main in -ltinyxml... no\n. i dont know if this PR is related to my problem but as of recently i had to redo my entire media server to had to rescan my libraries (what a pain) anyways i noticed xbmc no longer grabs the codec info of the movies or tv shows automaticily anymore you have to actually play the file. I remember a bug like this a long time ago before 10.1 will this PR fix that?\n. Yeah that's what I mean, its not doing that anymore as of fit from the\n21st. Only way to populate is if I play the video\nOn Jun 23, 2012 5:10 AM, \"Sascha Montellese\" \nreply@reply.github.com\nwrote:\n\nAFAIK you don't have to play a video file you just have to view a GUI\nlisting which contains the file and then XBMC will automatically read the\nstreamdetails (codec, resolution, ...) of the video. AFAIK it has never\nbeen the way that XBMC grabs this information during the scanning process\n(don't know why though).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1085#issuecomment-6524544\n. This won't work when GUI is 60 htz and u play a 24hrtz:its going to set 60 according to above p9st\n. ill give this a go see if i can help\n. Nexus 7 is 213 I have one\n. ive been testing this and ive noticed with my onkyo tx nr609 i will sometimes with AC3 matierial get a werid click click clicking through my speakers after about 5 secs of video playing and it wont go away i have to stop the video and play it again. just letting you guys know\n. So I gave your newest update and its better but still poops our one ac3\nvideo I teyed craps out at the same spot every time in the .mkv file about\na min and a half to 2 mims the other one plagued for about 10 mins then I\ngot the static again. Also if I skip through the video its pretty much\ngarranteed to do the static thing. I'm using a mvidia gti550 HDMI out to a\nonkyo tax.NR609 to a lg 47inch 1080p 23//24/60htz and it supposts all the\nmode lines I've thrown at it\nOn Sep 13, 2012 10:48 AM, \"Rainer Hochecker\" notifications@github.com\nwrote:\nI have updated the PR. Now skip/dupe will only happen if the error has\nstabilized.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1411#issuecomment-8536749.\n. hey guys just for reference I'm Hack_kid on the forums Albinoman887 everywhere else. just so you dont get confused\n. I will test right away. Can you give me a brief rundown o what softAE is/means? Does it just handle pcm or something\n. Gave this a try. If I'm right and its for pcm (softAE) I for sure she a difference I think you got it! If so this is huge this bug as been plaguing me for about a year even before the AE merge. Amy plans up updating the rest of are?\n. I'm surprised how little attention this PR is getting its a major bug fix.\n. Guys im not an idiot I have helped in development before I guess my my filter of what's OK to post here is skewed but I'm no idiot. I won't post again unless I have a log anymore\n. Do you have a PR for the transcoding issue? Or is it in your master branch\nOn Sep 24, 2012 3:43 PM, \"Damian Huckle\" notifications@github.com wrote:\n@FernetMenta https://github.com/FernetMenta - I have a fix for the\ntranscoding issue. It is not currently addressed in this PR, but it fixes\nthe variance you are seeing (specifically with transcoding).\nNot sure if this PR further tightens sync - doesn't on my set-up as noted\nabove, but I have no objections to this PR if you are seeing further\nimprovement on your set-up. As noted the transcoding issue/fix is different\nto what this PR addresses.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1422#issuecomment-8837802.\n. I'm not requesting anything um trying to learn so I can be a dev one day\nOn Sep 24, 2012 8:24 PM, \"Damian Huckle\" notifications@github.com wrote:\n@Albinoman887 https://github.com/Albinoman887 - neither, I'm just\nformatting it a bit for clarity and will post it in good time. It will be\navailable once we determine if it supplements, replaces or is completely\nindependent from this PR, which we are trying to discuss. Pushing it to\nmaster will conflict with this PR and vice-versa.\nThis is not a forum for requests etc. You have been asked by three team\nmembers to stop - make that four.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1422#issuecomment-8842424.\n. so my script utilizing wget to update my video library will no longer fonction? So what is the alternative JSON?\n. \n",
    "abultman": "Happy to report it works on linux ;) Finally!\n. ",
    "bradvido": "As a heavy mysql user, I agree that for those of us setting up a distributed system, editing the XML and configuring the thumb paths is something we can handle.\nThis probably shouldn't be in the GUI yet because (as mentioned) it requires configuring things that are outside of XBMC.\nWhat I'd love to see XBMC do is to prompt the user when installing --> Will this be a single instance or a distributed XBMC system? If distributed, ask them what type of database they will be using and configure at that point.\nThis still leaves the issue of thumbs, but that's a different topic. (I think they should be in the DB and cleaned automatically: http://forum.xbmc.org/showthread.php?t=96097)\n. I have tested this and it works perfectly.\n. ",
    "smidley": "I agree with @bradvido There should be an option during installation.  \"Enable SQL Database Features\" - Don't check this if you're a new user.\n. ",
    "jdembski": "Can someone tell me what \"jdembski referenced this pull request from a commit\" means? I didn't do that?!\n. Hi,\nI'm not sure whether these linker errors are related to this PR: http://pastebin.com/6myJMX9E\nI've used the 1.8. taglib-version from github.\n. Just to make sure I get this correctly: When setting pCapabilities->bSupportsLastPlayedPosition = false then the last played position will be stored into / fetched from the database - so there is no need to store this information within the add-on if the backend itself does not support it?\n. ",
    "koying": "If what is read has mime-type text/html, it is assumed to be a directory.\nIt is explicit at FileCurl.cpp:1149\n. As for the 2nd, don't know what is the purpose, either. I assumed the purpose was to keep paths with content purposively set (and the hash), in case the path was only transiently empty...\n. IMHO, that should be the way to go, btw. If you carefully set a category on a path and run a cleaning when, at that moment, the directory is empty, you loose your setting without warning. If thereafter you put back some file in that dir, the category you set on it will have disappeared without you knowing.\nMay suppressing 6648:6667 is the way to go, as indeed proper path cleanup is done later...\nUpdate: Nevermind. The path won't be deleted if it exists. Updating the patch....\n. Mmm... Is there a way to update a pull request? Or should I create another?\n. Thanks. Patch updated.\n. Ah Cool. \nAre you keeping \"filetype\" for backward compatibility? Otherwise, with a proper mimetype returned for directories, it duplicates the mimetype, imho.\nI don't see how you actually manage the mimetypes in this specific commit.\nI'm especially interested on what mimetype is returned for directories and how you manage it for local files.\nCould you point me to the proper one, please\nThanks \n. Anyway... I realize that I added the mimetype to \"GetDirectory\" when I need it in \"PrepareDownloads\" ?!\n. Unless you patched it somewhere else, note that I had issues with \"CFileItem::GetMimeType()\":\n1) Nothing is returned for local files\n2) For http sources, \"text/plain\" is returned for directories, notably because m_bIsFolder does not mean that the file is a folder but something like a node in XBMC's virtual filesystem\nYou might still find it useful to check my patch to see how I solved it.\n. Yeah, seems I'm one of the few using http sources, so I already debunked a few bugs regrding them ;)\nYou say you got correct mimetypes for local files? Strange. Running on \"master\", I didn't get any, and indeed, in the code, I see no provision for them either...\nBut you maybe have a patch of your own for them?\n. Yes. Problem is that, ATM, \"Recent\" is basically broken for most non-lan network based sources because ctime/mtime is not returned from \"Stat\" and, worse, the database becomes increasingly invalid because all new items are added with a \"1970-01-01\" dateAdded which will only, AFAIK, be recoverable with a full rescan.\n. Updated.\n. Updated\n. Updated.Once this is merged, I propose to implement write support for all \"standard\" libcurl protocols (FTP, SFTP, ...)\n. Would you prefer a big pull request with all, or this one first and another one for the other protocols?\n. @elupus As far as I know, Write is used for exports and in the file manager.\nIn both case, my tests shows that writes are done in chunk of 128k.\nI'd suggest to first find a case when one byte writes would be done rather than write code for no practical purpose. To cope both with 1 byte and 2Gb writes would be quite complicated...\nEven if such a case exists, however inefficient, the code works, and it would maybe be best to fix the inefficient original write ;)\n. Rebased.\n. @elupus :\n1) There might be code duplication, but as only DAV is now tested as write-enabled, and I have been asked to write-enable the other protocols in another patch, it doesn't belong to CurlFile, IMHO. \n2) What exactly is the PAUSE supposed to achieve? As I understand it, that would just make the curl async interface synchronized to cope with the synchronized input. Are there specific benefits of the multi interface I'm not aware of?\n@all:\nCode reviews are fine and necessary, but has anyone actually done a functional test?\nOver-engineering/optimizing for non-existing issues might be fun, but I'd rather receive feedback for actual functional problems...\n. I understand that, but what's the point if the file adaptor still has to wait for input?\nOr it has to buffer the writes, which are already sent in chunks of 128k... How large should the buffer be, considering at least part of the usage will be to copy video files of 2Gb+?\nAre you certain libcurl doesn't have it's own buffering?\nBottom line: what is the benefit?\n. Ok. Will do.\n. Well, I spent hours trying to make this multi interface work to no avail.\nHow hard I try, the read (for writing) callback is only called once (if even)\nHelp welcome...\nA thing I learned, though, is that, even in easy mode, connections are cached, so I don't think you'll actually get  1 connection by chunk\n. @elupus Finally succeeded to have multi working ;)\nI've also moved everything not DAV-specific to CurlFile.cpp\n. Sorry guys, I f... up with git and github automatically closed this PR, so I had to re-create it here: https://github.com/xbmc/xbmc/pull/1567\n. Good.\nBTW, I'd like to add an optional parameter to the various \"Remove\" JSON\nmethods allowing to physically delete the file, the same way the UI does.\nAny objections to that?\n- Chris -\nOn 17 July 2012 13:30, Sascha Montellese <\nreply@reply.github.com\n\nwrote:\nLooks valid. Thanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1172#issuecomment-7032702\n. Well, IMHO:\n\n1) the trend was started by allowing to modify the database\n2) there is already a setting to limit access from remote computers\n3) XBMC is not secure enough to allow access outside of a trusted network\nanyway\nSo, basically, XBMC needs security improvements anyway for untrusted\naccess. Should that prevent functionalities for the 95% usage of JSON, i.e.\nremote control on the LAN?\nOn 18 July 2012 00:34, Cory Fields <\nreply@reply.github.com\n\nwrote:\nYikes. If we're going to do this, imo we need an \"allow remote computers\nto alter my files\" setting.\nI'm sure this wouldn't be the only offender, but seems like a good time to\nstart a trend.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1177#issuecomment-7051624\n. Right. The clients should obviously do that, but they cannot be trusted.\n\nAny suggestion on how this could be done without relying on the clients?\nA confirmation could be shown on the main XBMC screen, but isn't that\ncumbersome?\nOn 18 July 2012 01:14, Martijn Kaijser <\nreply@reply.github.com\n\nwrote:\nModifying a database is something else than physical removing files.\nUser should give explicit approval before this could happen\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1177#issuecomment-7052376\n. Thanks for the review.\n\nWhat about the discussion regarding security.\nShould I add a \"Allow remote file operations\" setting?\nThen there should be a way to inform the clients whether they are allowed to delete or not...\n. Ok. I'll close this one until then.\n. Thanks. Updated.\n. That was my first idea, but won't that break the skins (or require updating tall of hem)? I'm not familiar on how UI stuff works in XBMC.\n. Not quite, unless I'm mistaken.\nCGUIDialogContentSettings defines:\n\n#define CONTROL_CONTENT_TYPE        3\n#define CONTROL_SCRAPER_LIST        4\n#define CONTROL_SCRAPER_SETTINGS    6\n\nIf we want it to do the proper way, \"CONTROL_SCRAPER_LIST\" & \"CONTROL_SCRAPER_SETTINGS\" should be under another container which would also contain the \"Use local info only\" checkbox.\nThe CONTROL_SCRAPER_... should be disabled if the checkbox is ticked.\nSo, IMHO, that would require skin rework.\nAnother solution would be to put the checkbox under CONTROL_SCRAPER_SETTINGS. That would prevent skin issues and make the code prettier, but would be a usability nonsense ;)\n. Nevermind. \nScrapers are assumed everywhere so, besides butchering the skins, implementing a \"no-scraper\" checkbox would take a lot of time, be error-prone and butcher the code for zero functional advantage over my \"butchered scraper\".\nI'd suggest to leave the pull request open so that if some need the functionality, they can use this easily mergeable patch.\n. Sure. Would the patch be deemed acceptable without the \"noop\" attribute, even withe the \"butchered\" scrapper?\nIf so, I'll dig into it.\n. @jmarshallnz I might be wrong, but seeing:\nCAddon::CAddon(const AddonProps &props)\n  : m_props(props)\n  , m_parent(AddonPtr())\n{\n  if (props.libname.IsEmpty()) BuildLibName();\n  else m_strLibName = props.libname;\n... I understand that, if the library name is blank, it means use the default name (\"default.xml\"?), so this couldn't be used to detect an \"noop\" addon.\n@cptspiff \nWould\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<scraper framework=\"1.1\">\n</scraper>\nbe acceptable?\nIMO, in this instance, an empty scrapper is not \"butchered useless\". It is just a scrapper doing nothing, which is what we seek and a valid case.\nThe surrounding code is just a mean to handle this case of empty scrapper.\n. @jmarshallnz @cptspiff Is it ok for merge in the current state?\n. IIRC, without the noop(), the import fails and nothing is imported, which is logical.\nThere was a loophole at one point, because a badly written scrapper I used added \"empty\" items even if it was not found in its database. \nWould you prefer something like that? Seems even dirtier to me ;) \n. Actually, looks like all CGUIWindowManager functions are already locking the graphic context, so I wonder if it is even necessary to recurse lock it in the windows.cpp functions... Will test...\n. I checked as far as possible that called functions were not calling python.\nBut my problem is actually related to the graphic context lock, not the GIL. As far as my problem is concerned, the functions can have the GIL as long as the UI is not locked while we are waiting to obtain it, as was done with GilSafeSingleLock.\nSo, if someone could confirm the \"CSingleLock lock(g_graphicsContext);\"'s are not needed because the locking is properly done in the xbmc window functions, that would solve the original problem, the windows.cpp could keep the GIL and no \"CPyThreadState\" would even be necessary.\n. The point seems obvious.\nThere is no other way to export folder.jpg (rather than proprietary *.tbn) and fanart.jpg, and enabling \"search on folder\" just to export movie.nfo is nonsense.\nOr am I missing something?\n. The VideoInfoScanner.cpp patch forces to scan for movie.nfo first.\nThe FileItem.cpp patch forces a scan on folder.jpg\nThe fanart.jpg is scanned anyway. I should patch in FileItem.cpp:2708 to have it searched first, though...\n\"Movies in separate folders...\" influences the scrapping. As I said, it seems dubious to enable the setting only to get exports with a specific naming as it could mess up the scraping of new files.\n. Ok, il will split the patch between what is likely to be accepted (export movie.nfo et al on \"1 movie per folder\") and the rest.\n. Mmm... When exporting, I see no way to know whether the movie was scraped using \"1 movie per folder\", so it would be movie.nfo et al for all movies if alone within a folder or nothing...\n. Updated as requested... but is not good, IMHO. Now, you cannot reimport you library unless you have exactly the same \"1 movie per folder\" setting as at the time of the export...\n. Re aversion, I obviously have a communication problem because I cannot make you understand that I don't want online scraping based upon the folder name after the initial local import, which the main functionality of \"1 movie per folder\". My tree is not made up like this so I DON'T WANT IT, IT WON'T WORK FOR ME, but I want movie.nfo et al rather than .nfo et al. \nOr I'm very thick or there is no way today to have one without the other. \nFurthermore, I'm surprised that you would accept that export + scratch db + import just wouldn't work unless you go to each source/folder to enable \"1 movie per folder\" \n. Thanks for the tip regarding GetScraperForPath, but I don't understand what you mean by \"comparing base path with video path\"\n. 2 problems with \"1 movie per folder\":\n1) If the folder containing my movie is named \"1 - MOV0001\", initial automatic online scraping will be done on \"1 - MOV0001\" which will obviously never return a valid result. I'd thus systematically have to force manual scraping\n2) My (admittedly lazy) source folder contains both movies inside the root and movies inside folders. Thus, I would have to set \"1 movie per folder\" on each individual folder (and not forget to enable it for each new folder). You'll admit it's not very friendly\n. Martijn, you're welcome to call me stupid if you like, but I tend to think that, as much as possible, a piece of software should try to adapt to its users rather than the contrary.\nIn the current matter, the original patch (with the advanced setting) would allow the stupid lazy fews to setup their source the way they want while not impacting the smart manys.\n. @MartijnKaijser no hard feelings\n@jmarshallnz \n1) Good point re add a movie afterwards...\n2) There is indeed no issue with XBMC scraping my collection right now\n3) That is basically what I tried to achieve with the original patch, just that I used an advanced setting rather than an UI switch (which would probably confuse the 95% who doesn't care about this...). It effectively decoupled scraping and nfo export/import, giving priority to movie.nfo et al whatever the \"1 movie per folder\" setting, no more, no less...\n. 1) I agree it isn't perfectly safe. This is also why it is meant to be an advanced setting, for people knowing what they're doing and the risks (although I don't see risks of data loss, just manual renames and/or deletes in specific cases)\n2) Actually, it's not that much movie.nfo which interests me (although, as a matter of personal taste, I prefer it whenever possible) but folder.jpg, which is quite universally supported while .tbn is universally not ;)\n. I'll check that out. Are those changes already merged?\nLe 2 oct. 2012 08:38, \"jmarshallnz\" notifications@github.com a \u00e9crit :\n\nNote that my changes for supporting banner.jpg/poster.jpg will mean that\nwe'll be exporting things such as movie-poster.jpg or similar, which I\nthink will take care of your .tbn issue?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1218#issuecomment-9060399.\n. I've not yet tested your patch but I assume it'll be what I need.\nAnyway, this is crap ;)\n. @Montellese Updated as requested\n. ;) Working great, btw...\n. @Montellese Not sure you got a github notif, so to inform you that I implemented the playlist notif for images\n. @Montellese You're welcome.\n. Sorry about that. I'll remember to look after those in the future.\n\nOn 4 October 2012 23:09, Sascha Montellese notifications@github.com wrote:\n\nI just realized that you did not apply your changes in the JSON schema\nfiles to xbmc/interfaces/json-rpc/ServiceDescription.h. Please remember to\ndo that next time.\nFurthermore there is an error in types.json. I'll fix it ASAP.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1248#issuecomment-9157260.\n. Sorry. Done (http://trac.xbmc.org/ticket/13235)\n. Arbitrary Dirs from the skin? I don't think I understand you... You mean the skin would decide which items to show rather than the user?\n. Ok. Great.\nLe 13 oct. 2012 04:47, \"jmarshallnz\" notifications@github.com a \u00e9crit :\nWe're going to do this properly after Frodo, and allow the skin to call up\narbitrary folders.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1392#issuecomment-9400207.\n. However, when you will design it, please leave a backdoor open so that\nusers can somehow influence what is shown without having to hack the skin...\nLe 13 oct. 2012 11:35, \"Chris Browet\" koying@semperpax.com a \u00e9crit :\nOk. Great.\nLe 13 oct. 2012 04:47, \"jmarshallnz\" notifications@github.com a \u00e9crit :\n\nWe're going to do this properly after Frodo, and allow the skin to call\nup arbitrary folders.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1392#issuecomment-9400207.\n. @jmarshallnz \nVery old stuff, but is there something like \"allow the skin to call up arbitrary folders\" planned / committed?\nStill wants it my way and not the skinner's, (i.e. I want only specific series to appear there) but just for info... \n. What about the official android remote?\nThe https://github.com/tombriden/android-xbmcremote/ fork does a great job in using JSON, but the official repo is still pure http-api...\nAnd then, there is the thumbnail thingy ;)\n. Ok, nice to hear the android remote will receive some love :)\n\n\nOn 28 September 2012 13:35, Sascha Montellese notifications@github.comwrote:\n\nWe've discussed this internally. The official android remote is already\npartly broken because of database layout changes in xbmc itself e.g. tvshow\nsection doesn't work anymore. freezy said he'll try to get it fully\nconverted to JSON-RPC ASAP.\nAnd the thumbnail thingy has nothing to do with the HTTP-API.\nI've asked @cptspiff https://github.com/cptspiff and he said to rip it\nout so I made this PR.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1475#issuecomment-8973851.\n. My 2 cents,  but I also agree the way it is now is better.\nBefore this,  I thought about a \"key-by-key\" remote control keyboard for my\nown remote,  but abandoned as being far too impractical.\nLe 10 oct. 2012 08:24, \"Sascha Montellese\" notifications@github.com a\n\u00e9crit :\nI agree with @jmarshallnz https://github.com/jmarshallnz IMO it's\neasier to type on your phone and also look at your phone to see what you\nare typing than typing a character on the phone, then looking up at the tv\nscreen to check if I made a typo and then look back down at the phone and\ntype the next character. Just showing the typed character on the phone\nscreen and being able to see and fix any typos there sounds a lot easier to\nme.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1475#issuecomment-9291313.\n. Sorry,  but most of the points you mention depends on how you code\nclient-side.\n\nXbmc sends a notification when a text box is opened for editing, so the\nusers shouldn't have to do something to open the client edit box.\n Le 10 oct. 2012 08:34, \"Tolriq\" notifications@github.com a \u00e9crit :\n\nThere's always an edit that shows up in Xbmc interface for many case like\nfilter or addons question, so no way to avoid this part :)\nOn remote side :\n- If the user have and physical keyboard he needs to open an editbox\n  then fill then send, not natural. (And with same problems as non physical\n  one)\n- if the user don't have one :\n- Current solution : a button shows a virtual keyboard like the one on\n  screen and the box does fills has he type, the arrows / backspace and enter\n  buttons have attended effects. With en edit box : The user write things\n  then send and then auto commit on Xbmc. If mistakes lots of actions to\n  start again. If don't auto commit then need 2 buttons a send and a commit\n  less intuitive.\nIf send and no auto commit but dismiss on client side, on edit then the\nuser needs to either rewrite the whole text he have written or if we always\nkeep beetween session clear the text when a new dialog is shown.\nTo answer to Montellese : I can assure you now with SMS addicts & such\nthis is really no more true users do look where the text should appears and\nabsolutely not the keyboard. Do you still watch your keyboard when coding ?\n:)\nAnd BTW since there's a eventserver command that does fill this needs and\nsurely only needs a little fix/\nTo answer Koying : I don't say the new way is bad I just say the way I use\neventserver is the way my users and I loves and prefer and would like to\nnot loose :)\nOn a side note, removing http will also limits some remotes to get access\nto video actors, and removing vfs will kills constellation PVR functions :)\nTo finish on a good note Xbmc is really a cool app with lots of opening\nfor remotes that contribute to it's success so would be cool to not kill\nsome function assuming that best is better than good.\nPS : My english is as usual far from good so no aggression or attacks in\nmy text :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1475#issuecomment-9291455.\n. And,  btw, yes, even after 30 years at typing on a keyboard,  I still look\nat it :-)\nLe 10 oct. 2012 08:34, \"Tolriq\" notifications@github.com a \u00e9crit :\nThere's always an edit that shows up in Xbmc interface for many case like\nfilter or addons question, so no way to avoid this part :)\nOn remote side :\n- If the user have and physical keyboard he needs to open an editbox\n  then fill then send, not natural. (And with same problems as non physical\n  one)\n- if the user don't have one :\n- Current solution : a button shows a virtual keyboard like the one on\n  screen and the box does fills has he type, the arrows / backspace and enter\n  buttons have attended effects. With en edit box : The user write things\n  then send and then auto commit on Xbmc. If mistakes lots of actions to\n  start again. If don't auto commit then need 2 buttons a send and a commit\n  less intuitive.\nIf send and no auto commit but dismiss on client side, on edit then the\nuser needs to either rewrite the whole text he have written or if we always\nkeep beetween session clear the text when a new dialog is shown.\nTo answer to Montellese : I can assure you now with SMS addicts & such\nthis is really no more true users do look where the text should appears and\nabsolutely not the keyboard. Do you still watch your keyboard when coding ?\n:)\nAnd BTW since there's a eventserver command that does fill this needs and\nsurely only needs a little fix/\nTo answer Koying : I don't say the new way is bad I just say the way I use\neventserver is the way my users and I loves and prefer and would like to\nnot loose :)\nOn a side note, removing http will also limits some remotes to get access\nto video actors, and removing vfs will kills constellation PVR functions :)\nTo finish on a good note Xbmc is really a cool app with lots of opening\nfor remotes that contribute to it's success so would be cool to not kill\nsome function assuming that best is better than good.\nPS : My english is as usual far from good so no aggression or attacks in\nmy text :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1475#issuecomment-9291455.\n. Sorry, my mistake...\n. For artists, you mean? Well, Loaded (I think) is supposed to mean that info\nhas been extracted from the files.\n\nThis doesn't make sense sense for artists.\nLe 1 oct. 2012 19:09, \"Arne Morten Kvarving\" notifications@github.com a\n\u00e9crit :\n\nhmm, i ponder if not setting Loaded in the first place is sane or not..\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1517#issuecomment-9041337.\n. I don't understand either :)\nI tried both VC10 + taglib from xbmc and Mingw + self-compiled taglib trunk and the results were similar in that the data pointer was invalid.\n\nI'll try to dig out the root cause...\n. I think it is due to this, in taglib:\nByteVector AttachedPictureFrame::picture() const\n{\n  return d->data;\n}\nIMO, It should return a ByteVector&. The returned ByteVector is a shallow copy allocated on stack and gets deleted after the assignation to \"data\". OTOH, due to the \"detach()\" in \"data()\", the embedded ByteVectorPrivate is a deep copy with a refcount of 1, which gets deleted by the \"deref()\" in its parent dtor, leading to an invalid pointer.\nI assume it works on unixes due to different allocation strategies, leading to the memory block being still untouched for the \"art->set()\". I tested this on MinGW, so it cannot be due to a different compiler.\n. I cannot test right now but it seems ok (besides the uint8_t* data). Will test tomorrow to be sure. \nI don't think it's worth the hassle, though, as \"data\" is only used once and my way won't necessitate to reverse code when upstream is corrected.\nAnother way would be to somehow force the use of the const version of \"data()\", which wouldn't detach and thus the block wouldn't be freed.\n. I guess the best way (legal-wise) is for me (or you) to convert your mp3 test files to OGG. Where can I find those?\n. :)\nCan I find your email somewhere or a way to MP you?\n. Here you are: https://www.dropbox.com/sh/mijnlouyul06gkz/AbDnItm8y5\n. @night199uk In case you didn't notice, I solved the pointer leak. \nAnd it seems the last merge window before frodo is today...\n. @jmarshallnz Looks like embedded art is no longer requested/shown when browsing by source (i.e. not library).\nIt was when I created this PR. Regression or on-purpose?\nGIT from yesterday\n. Ok.  Will make sure to check your comments in detail tomorrow. I'm CET btw. \n. Re breaking, I don't think I actually touch anything existing, i.e. CURL reading, so IMO no risks.\nAnyway, having ~80% of my files on a webdav share, I'd be the first to notice ;)\n. rebased\n. @elupus Still ok with this?\n. Hehe.. Better late than never ;)\n. Sorry. Will remember that...\n. For the record, I confirm #1567 implements PUT and not POST. \nIf we need both PUT & POST for different purposes, then OpenForWrite & Write should be in different CurlFile descendants, and we should leave CurlFile read-only.\nOr maybe have generic CurlFilePut & CurlFilePost descendants?\nFurthermore, based off #1567, write-enabled sftp, ftp, ... is trivial and use CURL_UPLOAD, too. So, IMO, CURL_UPLOAD is really the standard CURL write interface, and POST a http specific sub-protocol.\n. I understand the concern re less code change is better, but indeed, IMO, the cleanest solution would be to leave CurlFile with CURL_UPLOAD and have a HTTPFile (or HTTPFormFile?) which would implement POST. @elupus ?\nBesides, this way, the clash with #1567 could be averted, would it deemed mergeable for frodo\n. Why so? The \"read\" of libcurl (i.e. the default action) is always translated as a http GET...\n. P.S. Please note that for the moment XBMC is inconsistent as it is showing the \"Copy\" option in the context menu of a \"videodb://\" item while it is not implemented.\n. Yep, will do\n. Would SupportsRead.. and SupportsWrite... be better?\n. @cptspiff Done\n. Oh yeah,  baby :-D \nSay goodbye to any need for a remote (on android,  at least) \n. I've applied the patch and here is my 2 cents:\n1) Works great from windows :)\n2) On android (nexus 7), renderer detection is hit-and-miss, while perfect on windows. \nI have permanently 2 renderers, my TV and xbmc on rpi. Mostly none are detected, sometimes one or the other, both are never detected at the same time.\nFurthermore, situation doesn't seem to change over time, i.e. no more renderers are detected further on.\n3) IMO, there should be some kind of fullscreen display, with the fanart or something, when playing remotely (\u00e0 la music)\n4) There should be a way to save the renderers to playercorefactory.xml or equivalent. Otherwise (unless mistaken), there is no way to manage a \"remote\" playlist, like adding all the episodes of a serie\n. Re 2), I'm also using bubbleupnp and all renderers are detected fine,\nalthough it takes some time...\nRe 4), is there provision for server-side playlists in upnp? Or is it\nmanaged on the controller side?\nLe 22 oct. 2012 21:19, \"Joakim Plate\" notifications@github.com a \u00e9crit :\n\n2) strange, could be anything really. but it's probably not getting the\nmulticast's from the renderers properly\n3) agree. think it's mostly a skin issue. there are a few things that rely\non IsPlayerAudio() and IsPlayingVideo(). If they got changed to IsPlaying()\nit would work better i think.\n4) that is luckily not too hard to add. we could just provide the server\nwith a playlist containing all things to play, then it will continue\nplaying everything.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1597#issuecomment-9676775.\n. Re 4), I'm working on a patch to allow player selection in the \"Now playing\" screens and to force the same player for the duration of the playlist.\nIs that the way to go?\n. Pretty sure it doesn't.  I tested in trunk and the forced player is\nresetted after the first play + there is anyway no way to select the player\nfrom the \"now playing\" screen...\nLe 26 oct. 2012 08:29, \"Joakim Plate\" notifications@github.com a \u00e9crit :\nPlayer will stay for entire play list already now. But a way to transfer\ncurrently playing to other device would be very nice to have.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1597#issuecomment-9803934.\n. Looks to me as the udf/iso stuff is pretty much unrelated...\n. Is it?\nBecause that caused my iso 's to be duplicated as udf and the udf to be\nunscrapable due to searching on video.vob...\nLe 23 nov. 2012 08:23, \"Joakim Plate\" notifications@github.com a \u00e9crit :\nYeah it accidentally snuck in. Most of it is merged already.\nOn Nov 23, 2012 12:20 AM, \"Chris Browet\" notifications@github.com\nwrote:\n\nLooks to me as the udf/iso stuff is pretty much unrelated...\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/xbmc/xbmc/pull/1597#issuecomment-10646987>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1597#issuecomment-10651158.\n. As this one has already been merged and been closed, you have to create a new PR, IMO\n. Ok, will adjust.\n. Should I add a node type for TV Shows Directors?\nI don't quite understand what \"GetTvShowsDirectorsByName\" is trying to achieve, actually... Have directors node with actors children ?!\n. Ok. I just remove the setPath, then...\n\nOn 24 October 2012 11:07, Sascha Montellese notifications@github.comwrote:\n\nI think GetTvShowsDirectorsByName is only used by the search functionality.\nNo, don't add a TV Shows Directors node as that would be a feature and not\na fix and we are in feature freeze. Furthermore I'm not even sure if the\nTVDB scraper provides directors on a tvshow level or only on an episode\nlevel. At least in my database there are no directors linked with a tvshow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1659#issuecomment-9732583.\n. Nevermind. I really have no idea of what to do with GetTvShowsDirectorsByName other than just remove it altogether. This looks like pointless copy-paste from GetMovieDirectorsByName to me...\n\nI'll just correct the original issue, here...\n. @jmarshallnz Could you have a look, please. \nI don't think adding this sort option to movies makes a lot of sense...\n. Re cases, I don't see a use case for movies or episodes. Might be interesting for artists/albums, maybe?\nRe updated, lastplayed is based on playcount, IIRC.\n@Montellese could probably tell when a file is considered as \"played\".\n. It's the other way around, I think. lastplayed is based upon playcount. JM's question is when is the playcount updated...\n. My mistake. I mixed up things.\nAm I right assuming the lastplayed field is updated at the same time as playcount is set to 1?\n. OK. So answer to @jmarshallnz is: It is updated as soon as playback starts ;)\n. Ok. Might be a good idea to extract that one and apply asap. TV shows + season + ESC + TV shows is guaranteed loop for now...\n. Great. Thanks :)\nOn 25 October 2012 12:15, Sascha Montellese notifications@github.comwrote:\n\nDone in 659590dhttps://github.com/xbmc/xbmc/commit/659590d7dfbf41d5079ece4e9e0041800447a476\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1667#issuecomment-9772418.\n. Well, one could argue that if \"Queue current item\" and \"Play from here\"\nexists, \"Queue from here\" should have been there, too...\n\nOn 27 October 2012 16:41, Joakim Plate notifications@github.com wrote:\n\nThe play with addition to playlists are quite nice and can be considered a\nfix for a lack of this from the start. The queue from here is more\nquestionable if it's a fix.\nIt could potentially be usefull.. but it's nothing I can ack.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1679#issuecomment-9836000.\n. Np. Will create a separate \"fix\" for the \"play using\".\nLe 28 oct. 2012 10:31, \"Sascha Montellese\" notifications@github.com a\n\u00e9crit :\nI kind of agree with elupus that the \"play with\" is IMO more crucial (I\nnever use it but I can see the need for it) than the \"Queue from here\". In\ngeneral the argument you are bringing forth would apply to any new feature\nbecause otherwise the feature wouldn't be included if it wasn't missing in\nthe first place. I'd say spliting the two functionalities into two seperate\nPRs is the best way to go.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1679#issuecomment-9844059.\n. Removed the commit re \"Play using\" to PR #1689\n. @Montellese @elupus Clear to go?\n. As said above, it is directly linked to @elupus PR which make XBMC a control point for other upnp renderers.\n\"Play from here\" does not allow to specify the player, so that would be the only way to have a playlist sent to a remote renderer, selecting the distant player from the playlist viewer.\n. Let's get @elupus one in first, then we'll see if this is needed...\n. The logcat is in the ticket.  You'll see that android destroys the window\non losing the focus and recreates a new one on getting the focus back.\n\nThe current android implementation gets the native window on the fake\ncreate and, from what I could see, never updates it thereafter,  so xbmc\ncrashes on me if the native window changes.\nLe 2 nov. 2012 21:55, \"Cory Fields\" notifications@github.com a \u00e9crit :\n\nThis is not in fitting with the abstraction, GetNativeWindow() is only\nsupposed to return what the implementation thinks the nativewindow is,\nCreateNativeWindow() hooks up a new one.\nThis sounds like an implementation bug with your device. The native window\nis destroyed (fake for android) and recreated (re-queried for android) when\nwe get focus back, this works fine on the devices I've tested, and is\nin-line with the sparse documentation.\nCould you please give a logcat and stacktrace to go with the crash? Maybe\nthat'll give us an idea of what's different for you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1715#issuecomment-10029979.\n. Re driver, not sure what which one you speak about. It is on a stock Nexus 7, JB 4.1.\nRe gist, i'll try it tomorrow.\n. Yep. I confirm your patch is working.\n. Np. I know zip in EGL, so I didn't know CreateSurface was supposed to\ngracefully fail if the native window was invalid.\n\nOn 4 November 2012 20:33, Cory Fields notifications@github.com wrote:\n\nGreat, thanks. I'll submit a new PR to replace this one.\nThanks for doing the hard work tracking it down.\nAnd just so it doesn't seem like a case of NIH or me being pedantic, I'll\nexplain why I prefer to do it that way:\nThe implementations were designed to be dumb, they simply fill in the\nmissing bits. With your change, the higher-levels are unaware that the\nnativewindow has changed, so they're likely to do other bad things as well.\nWith the new change, we invalidate the nativewindow whenever the surface is\nkilled, that way WinSystemEGL never has to worry about one of the\nunderlying structures being invalid without its knowledge.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1715#issuecomment-10054315.\n. You have to use \"git rebase\" and not \"git merge\" to synchronize with master. See, e.g., http://git-scm.com/book/en/Git-Branching-Rebasing\n. Might be that the commit in reference (now in CVideoThumbLoader::OnJobComplete) has an issue, then, because I definitely have \"special://masterprofile/Thumbnails/...\" uri's in the art db for generated thumbs...\n. @jmarshallnz Do you green light this one?\n. 55sec?! Ok, I understand now your concern re speed. On My Nexus7, the first run takes ~15sec and ~5 sec for the subsequent ones.\nI hope the 55 secs are for the first run? How long thereafter, i.e. when checking the mtime?\n\nRe the subsequent runs, wouldn't it be far more efficient to only test the apk mtime rather than every single file?\nIf the apk mtime changed, we unzip, otherwise we do nothing, which would reduce start time to near zero...\n. BTW, I nearly have finished the neon check, by analyzing the /proc/cpuinfo output.\nDoes cat /proc/cpuinfo works ok (via an adb shell) on the pivos, too?\n. Ok, so if time goes up to 45sec from 35 only the first run, I tend to think it is acceptable.\nGoing into jni sh..t for one time 10sec seems overkill...\nAnd to answer your question, I think it would be an additional jni lib, due to libxbmc being an activity on its own.\n. No, it isn't\n. Updated to include neon check, reduced cache timestamp checking and 4096 bytes zip input buffer\n. The yellow is the standard color, at least on an android-9 api. If we decide to put ICS as the min req, it would probably be \"holoed\". I might however set it to \"confluence blue\"?\n. @theuni  Yep, sorry, should have pinged, I guess. Not clear what github notifies and what it does not...\n. Oups...  No,  it was there (needed to find out if xbmc is not already\nrunning) .  Probably got lost in rebase/cherry-pick...\nLe 28 nov. 2012 22:15, \"Sascha Montellese\" notifications@github.com a\n\u00e9crit :\n\nI just gave it a try and the progress bar looks much nicer.\nBUT it doesn't work out of the box anymore. When I built your PR and\nstarted it on my SGS2 I got http://pastebin.com/40JQTL8k. I had to add\nthe GET_TASKS permission to the APK to get it to work. I don't know if it\nwas there before you force pushed and just lost it or if you added some\ncode that requires this permission.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1767#issuecomment-10821941.\n. Did you try this on mysql?  I know,  I know... \nOtherwise,  mind holding this until I could test it? \n. Was pretty sure you didn't ;-)\nLe 16 nov. 2012 09:08, \"Sascha Montellese\" notifications@github.com a\n\u00e9crit :\nI don't have a mysql setup and I don't plan on setting one up ;-)\nI wasn't gonna merge this till tomorrow or sunday anyway.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1776#issuecomment-10439353.\n. Actually all CREATE TRIGGER BEGIN END will fail on mysql due to \nmysqldataset.cpp:1370: \"// sqlite3 requires the BEGIN and END pragmas when creating triggers. mysql does not.\"\n\nwhich is simply false if you have multiple statements: https://dev.mysql.com/doc/refman/5.0/en/create-trigger.html\n. While testing the new Video triggers, I noticed the Music ones were not created either, so I recreated them manually, with the BEGIN/END, and those are mono-statement.\n. Yep, in all cases, the tree of dirs and files must be kept\n. Yeah, should probably be tested on a device with a \"real\" sdcard (on Nexus7 is just a link to another flash partition).\nOTOH, \"degrading\"  (as in x writes before bad sector) the internal flash to write some log/temp files is something I'm not at ease with... AFAIK, it is not what the droid cache is made for.\n. I had an issue with smb with this PR on. Don't know why but it isn't worth spending time on this\n. Ah, ok. Thanks.\nWe should still find something regarding logs because, on JB, even an adb pull is not permitted if you are not root.\nSo the one and only way to get logs there is via the uploader.\n. IIRC, the blue-greenish ugly image is what you get when libstagefright (the sys so) is software rendering...\n. Note that will checking other players (e.g. vplayer, where hw decoding can be switched), I came to realize most are actually able to render my test file (a 720p) in software flawlessly, so there might be more than HW decoding at stake...\n. Moved the libstagefright stuff out of ffmpeg and inside dvdplayer as an hardware codec. That allows proper fallback to ffmpeg software decoding if a stagefright hw codec is not available.\nWorking great in 720p on my nexus 7\n. @Memphiz \n1) Not yet properly. I suspect scaling issues. Working on it...\n2) This one works seamlessly while the ffmpeg one didn't. Plus I can now specify that I want hw codecs only and fallback to ffmpeg otherwise\n3) Not yet. 1080p h264 is my primary focus for now...\n. Note that this is ICS+ only. If we want to support both 2.3 and 4.0 with the same package, we'll have to go the DllImpl path...\n. Yeah. Anyway, I somewhat doubt a device still having GB is a good candidate to run XBMC...\n. Ok. I'll first focus on hw I have, i.e. tegra3 Nexus 7. If I get expected results, i.e. smooth h264 1080p, we'll see how we can build from there to support more devices...\n. ack\n. Please hold on. I'm currently trying to avoid buffer copying thru textures. \nI'll remove the [WIP] when the \"final\" PR will be ready for actual review/patching.\n. Quite happy with the current state, so opened for review / patches. Still an issue with FF/Rewind.\nICS+ only.\nI'll put up test builds in the forum as soon as they're built.\n. Re --enable-codec, did you already commit yours? I planned to rebase upon it..\n. Updated for build issues\n. Has been removed in latest push, hasn't it?\n. Fragmentation, fragmentation :-(\nCould you share the full log, please. There might be messages earlier indicating the root cause..\n. Right. I think I remember this codec (and probably others) only allocate 2 output buffers, and both are locked by the renderer...\n. Coming... I think I found the best compromise: FBO's\n. Cleaned up and squashed in #2504 .\nClosing this one\n. Sure, but could any of you give me a test case, please?\n. Good question. Actually, now that we store the autogen thumbs in the db, the whole block starting at line 264 shouldn't be hit, because we shouldn't have a thumb cached but not in the art table.\nFact, however, is that I had a bunch of autogen thumbs not in the db (actually, they were but with a blank url) \nDon't know the root cause. Corrupted db? Upgrade issue?\n. Oups, sorry, slipped through...\nUnfortunately, mysql uses \"rand()\", not \"random()\": http://dev.mysql.com/doc/refman/5.0/en/mathematical-functions.html#function_rand\n. Ok, so:\n-  Initial party mode is ok (default number of songs)\n- Doing first \"next\" brings an error message and I get this in the log:\n11:17:55 T:8092   DEBUG: CMusicDatabase::GetRandomSong query = select * from songview  WHERE songview.idSong not in (6788,9063,9224,6602,9159,7857,7281,8978,7909,9602) ORDER BY RANDOM() LIMIT 1\n11:17:55 T:8092   ERROR: SQL: Undefined MySQL error: Code (1305)\n                                            Query: select * from songview  WHERE songview.idSong not in (6788,9063,9224,6602,9159,7857,7281,8978,7909,9602) ORDER BY RANDOM() LIMIT 1\n11:17:55 T:8092   ERROR: CMusicDatabase::GetRandomSong(songview.idSong not in (6788,9063,9224,6602,9159,7857,7281,8978,7909,9602)) failed\nbut still works without noticeable delay\n- Further \"next\" works ok.\n. Exactly ;) I didn't dig further, but I can if you want...\n. Yep. working fine and no slowdowns :)\n. NC from me\n. Arg...\n. /cc @theuni \n. @theuni Added a separate header for stuff missing from the NDK\n. Probably, yes. Running as GB under ICS, you get those keys, but I never\ntested under GB.\n. Isn't there a flaw in that we are bypassing initial caching/checking in \"Splash\"? \nI.e. everything we might do in CAndroidIntents::ReceiveIntent is not guaranteed to happen on an initialized nor checked  XBMC...\n. Sorry if I wasn't clear. \nI meant we could receive a broadcast intent before having been thru the Splash at least once, so the caching wouldn't have happened. Or is it not a problem?\n. Heh, I just wondered why my DAV sources weren't scrapped anymore ;)\n. Android has a \"push\", event oriented approach, where events are generated when the axis values changes.\nThis one keeps a \"poll\" approach only, right?\n. k. Would you mind rebasing so that I can start building android support on top of this one?\n. @theuni Obviously your call ;)\nWill your fix also be valid for 12.1?\n. Ping @theuni . So, what do we do?\n. whitespace issue, going from tabs to blanks. You can use https://github.com/xbmc/xbmc/pull/2381/files?w=1 to ignore them,  or I can revert, if you prefer\n. Re Main vs. Splash, it indeed makes sense to put the caching stuff there...\n. Oh,  sure. Needs rework...\nLe 10 mars 2013 22:32, \"Cory Fields\" notifications@github.com a \u00e9crit :\n\nok to push this to next month?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2381#issuecomment-14689806\n.\n. Seems fine. Did you make sure to implement on CurlFile descendant (e.g. DAXxxx), too, if needed? \n. Yep\n\nOn 16 March 2013 11:43, arnova notifications@github.com wrote:\n\n@koying https://github.com/koying: What do you main by descendant? The\nwebdav/ftp stuff?\n@ulion https://github.com/ulion: I think the logging I added should\nonly occur when things go wrong, as far as I can tell. I think it's inline\nwith eg. our smb filesystem now. Please correct me if I'm wrong.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2428#issuecomment-15002796\n.\n. Indeed. But I'm not sure how @theuni wants to merge the \"depends/README\" and the \"docs/README.android\" \n. Don't know if this fixes a functionality. I was trying to get \"2-fingers-left-swipe=back\" working and saw that one before noticing generic multi-touch swipe wasn't supported ;)\n\nObvious Technical fix, as we are mixing apple & pears between the pointer indexes in the event and the pointer id.\nI agree the gesture recognition would probably need rework. IMO, it is flawed because it works on pointer indexes only valid within a specific event. \nIt is actually working on Android (only platform it is actually used, right?) because the pointer indexes happen to be the same as pointer id in most cases...\n. Thinking about it, we should probably just have an array of pointer id's and passing indexes to this table further down.\nThat would prevent gesture recognition refactoring. I bit silly for Android as indexes will be = id's but that would be generic.\nWhat do you think?\n. Re ID vs. index, not sure we actually have a choice. The index we receive in the events are really just indexes in that specific event. I don't think there is a proper way to make those global other than making wild assumptions...\nI'll dig further re Move event. There must be a way to get the postion of individual pointers...\n. Re\n Another problem on android is that touch move events are always sent for the pointer with index 0,\nthis is, I think, a non issue.\nIf I understand the MotionEvent doc correctly:\nMotion events contain information about all of the pointers that are currently active even if some of them have not moved since the last event was delivered.,\nyou always have the latest position of all pointers in all motion events via AMotionEvent_getX/getY\n. Yeah, very crude and only works on Android because of the index/id confusion/relation exposed in #2482.\nOn another platform with random id's, this won't work\nThis one will probably be obsoleted by a gesture rework, but works for me on Android for the moment.\n. Sure. Mine was really quick and dirty ;-)\nLe 29 mars 2013 14:57, \"Sascha Montellese\" notifications@github.com a\n\u00e9crit :\n\n21cee17https://github.com/xbmc/xbmc/commit/21cee17c493ef75be5e5a521d694cd76c3a3d05dworks for me and also takes care of the two points I mentioned before i.e.\nwith that code it's not possible to detect a two-finger swipe gesture if\nthe two fingers/pointers move in different directions. Should I queue that\none up as a PR and close this one?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2483#issuecomment-15641661\n.\n. Oki. Just close this one if it is obsoleted by your new code.\n. \n",
    "mad-max": "Ok...i\u00b4ll close this one and get a good one up and running...\ncheers,\nmm\n. thx machine sanctum...as I said before: just getting started with GIT...long time SVN user ;-)\n. Seems as github has problems with \"umlaute\" on my machine they are displayed correctly...\n. Hey Jezz, no problem I will do it later on for skin.touched, no problem\n. close...as Jezz suggested I made a pull request in xbmc/skin.touched\n. will do,\ncheers\n. Being picky is not a problem for me as I know that the job will be done with 110% passion ;-)\nI'm glad I could help out a bit and prepare this for you...\nAnd I have to agree about the translation. Picking a new string would have been a better solution here...\nBTW: The changes beside the recently added albums are looking really good, especially the blue with the focused entry in home\n. closed in favor of https://github.com/xbmc/xbmc/pull/857\n. @vdrfan : German translation is ready...thought I could take a task off from you :-)\njust struggling with my GIT again\nWill send an PR if I'm done with my GIT\nmad-max\n. Hey jmarshall,\nwow, fast answer...and yes, sounds reasonable...\nWill change this accordingly\nmad-max\n. Think the visible statement should be sufficient...\nAlright now?\n. The placement was orientated on my typical usage behaviour...\nSo recently added, and genres are more in use than sets...\nFor me, it's no problem to close this and submit another PR with the new placement...\nLeave it up to the team guys ;-) \n. Hey Martijn,\nclosing and resubmitting makes the history cleaner I think...\nWill prepare it...\ncheers\nMax\nGesendet mit meinem HTC\n----- Reply message -----\nVon: \"Martijn Kaijser\" reply@reply.github.com\nAn: \"Max Auer\" M_Auer1@gmx.de\nBetreff: [xbmc] added MovieSets to Movie submenu (#719)\nDatum: Mo., Feb. 27, 2012 14:11\nBetween years and genre isn't that obvious. Think like JezzX suggested is a good way.\n(note: No need to close PR I think. Just do a PR update)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/719#issuecomment-4193153\n. Ok, just updated the commit range...Hope it's fine, now...\n. damn...this seems to be the wrong way to rebase...\nWill get this sorted\n. I won't get rid of the old commits...\nLog shows me only my commit that I rebased...after pushing there are 28 more in history...\nBTW: Thanks for your patience:-)\n. Hah...\ngit pull --rebase \"upstream\" master\nThat did the trick...\n. Ok, cool...\nWe keep my fingers off this branch until pulled grin\n. Hey Jezz,\nthat is quite strange as there is a library node for sets and the visible condition worked fine when I tested it. \nMight there something be broken?\nOf course I will take a look again why the hell it worked out...maybe some strange coincidence.\nBut sorry for this issue.  Hopefully we get this sorted soon\ncheers,\nMax\n. Hmm..ok. This is reasonable.\nCurrenty I'm trying to reproduce the fact, that the movie sets had this working visible condition.\nIs there a good way to have a new bool in GUIInfoManager.cpp to have a Library.HasContent(Sets) or any other workaround? I know always enabling the button is possible, but this is something jmarshall tried to avoid?!\nCan we use the option for \"group movies in sets\" as a visible condition?\nI know this also needs to be prepared...\n. As I said before, it must have been some coincidence why this had worked out before.\nCan't get it to work again, for the obvious reason :)\nReally really sorry man! \nNow I have to shutdown my machine, as I'm going to marry in 4 hours and if my future wife sees my sitting at the table doing some XBMC stuff, I'm sure she will not be very amused :grin:\n. hey guys,\nbased on the disussion above, I think I need to follow up a bit...\njmarshall has commited Library.HasContent(Movie_Sets) here:\nhttps://github.com/xbmc/xbmc/commit/d38a14c395de3a77803200b696f99f517283ef4f\nThen it's possible to make a visible condition for the sets submenu...\nWill take care of it later on...\ncheers,\nmad-max\n. Yeah...came from a personal need, as my music-db changed completely from mp3 to flac\n. Hey jmarshall,\nthanks for the notes...\nWill get the whtie spaces sorted...\nAnd the typo :-)\nAs I said, first submission for core...\nThanks for your patience...\nmad-max\n. First part of cosmetics commited\n. Yes, xbmcfanboy made the appropriate changes here:\nhttps://github.com/xbmc/xbmc/pull/855\n. @trustin yes, you are right...was a bit confused...\nSo it seemed nothing has been pulled in, yet...\nI know that Daniela was talking in the forums about coding this again...\nMight be worth to dig out this thread...\nSorry for the confusion\n. Would be interested in it, yeah...\nHad problems with the build process of this and didn't get the loop jm suggested...\nWill play a bit with the code and see what happens...\nMaybe you can assist if I have questions?\ncheers,\nMax\n. No problem...AE was huge and I knew, you're working on it...\nWill try to get my hands on it this weekend...\ncheers\n. OK, seems soembody else did the job:\nhttps://github.com/xbmc/xbmc/pull/982\nNo need to work on this and/or reopen...\nBut thanks for your offer Damian!\n. Hey Memphiz,\nright, syncing is quite a good idea...\nWill update the trac tickets accordingly...\ncheers,\nmad-max\nEDIT: DONE :)\n. Accepted :-)\nJust trying to help where possible...\nand will check things first, before making a PR, I promise ;-)\ncheers\n. WOW...that was fast :-)\nCan you also close trac ticket?\nhttp://trac.xbmc.org/ticket/10623\n. No problem...\ncheers\n. As Jezz changed the way how the backdrop is set after Dharma, this is sufficient...\nOnly label2 is neccesary here...rest is done in the single/multi image control below\nI have tested this fix and it was alright\n. @jmarshallnz \nI wouldn't have a problem to include it as slider...I thought about buttons because I don't own an ATV and I'm not familiar with the apple remote...So I was unsure if this would really increase the usability...\nButtons always work...\n@JezzX \nAs I said before, I'm not familiar with the Apple remote and it seemed a good way to more usability/user friendlyness...\nIMHO this is also not needed for me, but I saw more than a dozen requests in skin specific and confluence forums...\nmad-max\n. That's a good point...didn't know that...so it won't be more userfriendly...\nAt least for iOS, what was my intention...\nThe more I think about jmarshall's suggestion with the slider the more I like it...\nI think this is the way to go...will redo the stuff with a slider and see how it behaves...\nMaybe it's the better attempt...\n. Sorry Memphiz, but this comment confused my a bit...\nThe PR you mention is for repeated keypress from the Apple Remote which would make this PR obsolete\nOR\nThe PR you mention give the general ability for repeated keypress from the Apple Remote which would lead to the fact that the buttons are fine and no slider is needed?\nOR\nMaybe I'm too dumb to read :-D\nmad-max\n. Ah ok, so the first option...from point of usability my PR is obsolete, at least for ATV.\nAs the intention was to have this for the ATV I leave the decisions to the Devs whether this PR will get closed, pulled or shall be modified to have a slider...\n. @CutSickAss  The diff looks a bit odd, as it shows 409 deletions and 409 added...\nIs this correct?\n. Thanks for the comments jmarshall.\nI also commented the line note you made :-)\nLet's see what happens...maybe somebody else wants to share his opinion...\n. IMO getting rid of some settings is a good way to improve the usability, especially for new users, but regarding the forums the majority that asked for this feature were new users. \nAlso having certain settings banned from the GUI into the as.xml in order to not clutter the interface isn't the best idea, I think...\nHave you ever thought about a new entry in the settings, where the user can change settings that are currently in as.xml. Of course combined with a bool for visibility like \"master settings mode\". Just an idea that came up while writing this answer...\n. Closing this as it is obsolete and does not need to be here around any longer ;)\n. Yes it is...\nI have built this to see if it compiles and I tested it...everything working...\nIf you are interested, I can upload my build later on...\n. Good morning...\nthe single item check should be no problem from coding side\nLet's see when I find some time during the holidays ;-)\nHappy Easter!\n. single item check is included\nI squashed it to have one commit, so I hope everything is fine now\nAny opinion?\n. waiting for the final ok...then will squash to one commit for a clean history\n. Hey Jezz,\nreally nice additions...\nI will close the other PR in favor your \"monster\" :D\nUnfortunately I can't see if there are string changes as my browser always crashes by attempting to view the diff...\nIf there are string changes I can take care of...\ncheers,\nmad-max\n. @alanwww1 \nIs two commits ok for you or shall I nail them down to one?\n. Ah right...I knew I missed something...\nSorry already read this some time ago...before the wedding dementia ;)\ncheers\n. To have a clear history you can either squash your commits (bring them in one commit with several commit messages) or you can use fixup (one commit and choose which messages shall be included).\nTry \ngit rebase -i HEAD~X\nYou have to subsitute X for the amount of the commits you want to merge...\ne.g. git rebase -i HEAD~3 for the last three commits....\nHope this helps...\nEDIT: Hah, jmarshall was a few seconds faster :P\ncheers\n. I checked the German parts in there...seems to be fine so far...made some line-notes so that somebody else from German team can check and confirm...\n. @alanwww1  Will this PR be the one that will include also the changes from PVR stuff?\nIf so, any ETA when these strings will be available on Transifex?\n. WOW! That was fast!\nThanks for clarifying the situation\nmad-max\n. Thanks for the comment spiff...\nAlthough I checked the dependency, I'll change it and squash later on...\ncheers\n. Ok, changed and squashed...should be fine\nmad-max\n. Sure, will take care of it later on\nGesendet mit meinem HTC\n----- Reply message -----\nVon: \"Sascha Montellese\" notifications@github.com\nAn: \"xbmc/xbmc\" xbmc@noreply.github.com\nCc: \"Max Auer\" M_Auer1@gmx.de\nBetreff: [xbmc] updated Win32BuildSetup/readme.txt to show VS2010 (#1625)\nDatum: Mo., Okt. 15, 2012 12:47\nYup that would be great. Just copy the descriptions from the wiki article.\n\u2014\nReply to this email directly or view it on GitHub.\n. Alright so far?\n. Doesn't latest JRE add to PATH by default?\n. Ok, will be updated!\nGive me a few minutes...\n. Ok, added and squashed!\n. I'm having the same issue running 1080p\nIt's not that cut off but still visible...\n. Will doublecheck this later on...\nMy machine is always running roboto...\nI'll close for now and reopen if needed\nThanks for your comments, ronie\nmad-max\n. ",
    "tsombrero": "Garbear, thanks for fixing that, I added you as a collaborator in my repo.  I made it OSX specific because I wasn't sure how things would behave on other platforms (the audio device settings look like they might be different for osx).  A generic way to script settings would be great but is more than I have time to tackle... meanwhile my setup kinda requires this feature so I kept it simple. \n. By the way, I am really impressed. I figured this PR would sit for a few days before anyone bothered to look at it, but you guys are on top of it!  So thanks for a great experience and I hope I can contribute more soon. \n. ok, obviously still getting the hang of github... pardon the chatter\n. ",
    "Zxurian": "I'm thinking that this commit is what has my mysql install not working. Just upgraded to Oct 19th nightly, and xmbc goes into a crash loop when using mysql settings under advancsettings.xml (xmbc-live install)\nlog here: http://pastebin.com/mCkH4six - this log was generated after I tried a blank install of the Oct19th nightly, was working, then went back and added the mysql settings into advancedsettings.xml, upon reboot, that log is the result\n. ",
    "Krautmaster": "Pastebin containing these commits which did not fix it.\nhttp://pastebin.com/FUKQ698S\nOpened a few movies successfully, last one killed xbmc. \nHardware:\ni3 2100 + GT430 + 4 Gb Mem + SSD + 10.04 + LG 55LX9500\n. wow thanks, cant wait for to test ;) \ni'll report today afternoon ~6 pm if it works. \n. http://pastebin.com/2X2gFA2R\n. http://pastebin.com/ZNeHSFnR\nlike this?\n. sry think u are looking for this:\nhttp://pastebin.com/iXvYBujb\nhad to google 4 ;) sorry\n. additional Information:\nToo less VRam causes this problem, to much too. \nWith 256MB fixed in BIOS it runs perfect, @ max and min i'll get these \nERROR:  (VDPAU) Error: The display was pre-empted, or a fatal error occurred.\nerrors...\nIf i can help in any way, please let me know. \n. thx =) seems to be fixed for now. With 1024MB VRam @ the latest patch 20x 24p movies started up fine so far.\nI will test for several days and report. Thanks a lot.\n. Edit:\nokay, had a crash once more but i think far much less often than before:\nhttp://pastebin.com/6X26eWKq\n. http://pastebin.com/fAtZGTkb\nhttp://pastebin.com/rYfazx84\nsry for cutting before.\nWhy worked it fpr 20 times after rebuilding and installing xbmc and then... 5 crashes at once...\nStrange thing\nEdit: are the pastebins fine or will i have to use gdb?\n. http://pastebin.com/kyUkgisA\nhttp://pastebin.com/bHnehckm\nfirst i played a 24p movie successfully, then i started an 720p two times, first i had sound but only black movie picture, OSD worked fine, second try it worked  but crashes on movie stop.\n. okay, testet ~30 minutes and started ~25 24p movies, + stopped them... could not produce another crash so far\ni'll go on\n. http://pastebin.com/Lu15W8Ni\nbased on ur last comit\n. http://pastebin.com/Wx5mh4U6 & http://pastebin.com/HW63UnBL\nat playback stop.\n. now it crashed during playback.\nhttp://pastebin.com/rcnv9fBF\nhttp://pastebin.com/zUd9F79m\nEdit: i rollback one commit and now i added the last new one again - testing.\n. seems to be fine now, 60 24p movies with no problem so far.\n. works for me so far. I Was not able to produce a crash yesterday and today - started and stopped ~100 times so far\n. no prob, hope u found a real solution and not just an unclean workaround :D \nI have to thank!!\n. nice job, thanks a lot.\n. editing the /lib/dev/ruled.d/60-cdrom_id.rules does the trick:\nchanged\nIMPORT{program}=\"cdrom_id --lock-media $tempnode\"\nto \nIMPORT{program}=\"cdrom_id  $tempnode\"\n. Hm attached a log from my side:\nhttp://pastebin.com/mxvfMsRA\nAudio worked fine on first channels, second and following my audio was dead till reboot.\n. ",
    "cadriel": "I'm seeing this issue on an openelec system. Great to see some progress on getting it resolved. Looking forward to testing it!\n. ",
    "hoppel118": "I had this issue while starting 24p movies, too. Great, I am waiting for this fix. YEHAAA!!!\n. ",
    "fritsch": "Did not get better with the http://ffmpeg.org/trac/ffmpeg/ticket/88 together with your patchset.\nSo hurry_up code definitely does something bad at the \"new position\".\n. There is a reason that OpenElec v2.0 shipped with the complete vdpau rewrite. This will also be our basis when going for the OpenElec 3.0 release. If you find some time, read the forum - a huge amount of people is upgrading their default xbmc(buntu) installation to the version with the @FernetMenta patches. That brings btw. other goods, like a XVBA implementation, that bases on the same changes and is therefore strongly coupled ...\n. Erm. ATI does not work at all with mainline xbmc - the xvba-va-driver that is used here is not developed since ages. You get huge artefacts with specific H264 files and some VC1 files don't run at all. Stability is unbelievable bad - also there is to my knowledge no deinterlacing at all, which makes AMD useless for every PVR setup.  Nothing can be done about this.\nCause of this @FernetMenta and I started writing XVBA, which replaces the buggy support for AMD via VAAPI. This is also integrated in OpenELEC 2.0 - here some mergendising: http://www.youtube.com/watch?v=jc10em9qQBI\n. Erm, I don't think this is him - it was me: https://github.com/xbmc/xbmc/pull/2289\n. Okay, then it was not me - hehe. \n. @jmarshallnz:\nCould you rebase it on the latest master code. We want to test it within our xvba ppa. Disappearing plugin dialogs is a great issue there.\n. To reply to myself. The real problem is that SoftAE does not handle the channels error correctly. We know this error from the Alsa Sink, as it is explicitely checked - but afterwards not communicated to SoftAE. It tries to open a new sink with \"newformat\" as parameters - but this newformat does not take the number of channels that the device can do into account nor the error. So it would fail again ...\nPerhaps this \"newformat\" is to be changed in order to be more failsafe? I can't really say this as I did not look into AE for very long. Happy for input.\n. @cptspiff:\nnp at all. I wish you a great time in Vienna.\n. Hi DDDamian,\nthx for your comment. The (Alsa) sink  at least does not overwrite it, cause the function terminates too early, see the patched out \"return false\". I will upload a xbmc.log when I come home.\n. As requested a xbmc.log: http://xbmclogs.com/show.php?id=7617\nAlso see Line 426 that seems highly critical.\nChannel Count does not get reduced. \n. @DDDamian:\nhttp://xbmclogs.com/show.php?id=7619 <- new xbmc log with the patch applied. Playback is working fine and also the NULL device is not openened anymore, but - SoftAE still thinks that it has to put out 5.1 Speakers.\nEdit: See Line 1157.\n. @DDDamian:\nMy thoughts:\nConcerning the stuttering that 6 channels output produce on a wrongly opened device, i see no point in keeping the user values. But AC3 / DTS should be cared as those output \"5.1\" over just 2 channels and this should be possible also for remixing stuff (DTS-HD to AC3) and the like.\n. Here is such a stream, dumped via alice iptv: https://dl.dropbox.com/u/55728161/arte_hd.asf\nI kept it around, so cannot get new dumps - as i changed cable provider. The patch \"makes the guy dancing more nicely\" - so it hugely improves playback quality.\n. Can we please include at least the second commit: \"proper cleanup\"?\nYesterday there was somebody on IRC, that saw the scene from the played video before in his \"black screensaver\" - cause of the Renderer is not cleaned up properly ...\nAfaik today (10th) the merge window is ending, right?\n. Could we use solutions that have proven to work instead of things that \"likely\" fix an issue at this part of the release cycle?\n. Some info can be found here:\nhttps://github.com/FernetMenta/xbmc/issues/59\nSome pastebins are not available anymore, cause it has been a long time since, sorry.\n. For now, the bad devices detection only somewhat worked for nvidia devices and intel devices. AMD was whitelisted some time ago in: https://github.com/xbmc/xbmc/commit/fa81a7670d5cef4eef0b9225986c5db76b660da1 anyways.\nI found at least one user for nvidia in #xbmc, that did not get HDMI Audio with nvidia and one openelec user (with pre frodo) where it did not work directly connected to his TV. ELD parsing does not seem to work with all the \"broken\" hardware out there. Both tried the above patch to make it work.\nSo to answer your original question: Yes.\n. I agree, this would be a better solution.\nIf it was only a advancedsettings.xml solution many users won't be able to make those changes, as editing xml files is not somewhat userfriendly.\nIf it was a GUI solution: \"disable failsafe hw detection\" or \"enable all audio devices\" it would introduce translation work and probably GUI skin changes. Also we have to discuss the position in the settings.\nAlso we have to consider that there must be a \"reload mechanism\" that does the device enumeration again to activate closed sinks.\n@anssih @DDDamian what do you think is the best solution to this from the AE side?\nI remember we discussed an approach that somehow was: \"Don't disable a specific device if no other was detected\". In this case: \nOnly disable HDMI if there is a valid spdif connection.\nKeep Spdif and HDMI enabled if there was no connection at all.\n. @DDDamian:\nI disagree with the advancedsettings.xml, with the point I mentioned in my second post. I would make it the other way round: By default show all devices, give the possibility to add an advancedsettings.xml entry to not show bad ones.\nI also would prefer showing bad devices instead of manually entering a String. If the user needs to write a string into there - this is much more error prone than selecting the devices from a list.\n. @pieh:\nThank you very much for jumping in and getting this in a real cool working and improving state, nice :-)\n. As talked via irc: \n- What happens when user forces the passthrough device and menu sounds are played?\n- What happens if user pauses movie and menu sounds have to be mixed in?\nI think we need more logic somewhere, as best in a separate PA Sink, that just handles all that stuff for us.\n. I cannot keep the \"sense\" point, as the code clearly sets m_bSoftware=true, when hi10p stuff is decoded.\nif (hints.codec == CODEC_ID_H264)\n  {\n    switch(hints.profile)\n    {\n      case FF_PROFILE_H264_HIGH_10:\n      case FF_PROFILE_H264_HIGH_10_INTRA:\n      case FF_PROFILE_H264_HIGH_422:\n      case FF_PROFILE_H264_HIGH_422_INTRA:\n      case FF_PROFILE_H264_HIGH_444_PREDICTIVE:\n      case FF_PROFILE_H264_HIGH_444_INTRA:\n      case FF_PROFILE_H264_CAVLC_444:\n      m_bSoftware = true;\n      break;\n    }\n  }\nSo - I know for sure, that the above will work when HI10P is decoded.\nWith the other point you say, I did not come into contact (meaning no problems so far). I also think that new ffmpeg version will make this behaviour a lot better.\nIf you like I can integrate a \"m_hi10p_is_decoded\" and set this to true and rather check that flag?\n. Update: \nAs you said: \"It's always false otherwise.\" That is really nice for me and the patch then. As it does exactly what it shall do: Enable multi threading, when hi10p is decoded.\nCool thx for the tipp.\n. I updated the PR to really only enable it for hi10p content.\nAs far as I know (TM), there is no dedicated GPU that can do hi10p content, furthermore it is not enabled by default, but can be set via advancedsettings.xml\nI am also interested in a GUI Setting to ease this in the future for other codecs. \n. @elupus:\nThx for your input. I updated the PR to rename the flag to disablehi10pmultithreading. I also let the ffmpeg default be logged when debugging - this will help us to find regressions, when users have problems with this new default.\nI kept the SLICE decoding - in deed thread_type = FF_THREAD_SLICE | FF_THREAD_THREAD by default.\nIf you like the Logging or flagnames changed, please let me know.\n. @davilla:\nYeah, you are totally right concerning the long term, this will be getting a mess, if we continue to add such stuff in the future. As you have seen in the code - we actually especially ask for Hi10p to disable HW decoding, as this format is not decoded on any GPU outside I know of. \nIf this check is already there, I thought it would be a good idea to use it, to make xbmc able to cope with this format in a multithreaded way. The new setting was thought as a backup - when there will be problems for some users.\nThis patch adresses \"short term\" improvement, as hi10p (sadly) is something people want now and want it working now. With this infrastructure already in place, it was easy to add.\nI can remove the advancedsettings.xml changes - with the problem, that it cannot be disabled.\nTo summarize: \nShort Term: solution to make (perhaps even frodo users happy) - think of a celeron or Atom (2.13ghz System) that would not be able to decode that stuff in frodo.\nLong Term: Choose a whitelist or blacklist approach. \n. @thoj: This is not all that must be considered for a common multi processor approach. Think of the Windows / Mac hw decoders and so on. \nIn this specific case, the Hi10p check was introduced to disable hw accel at all - therefore it is safe by design. We are currently only discussing the advanced setting I think.\n. What are we doing about this? Any input on the Whitelist / Blacklist approach?\nShould we rather track the hw accelerators?\nOpen for input. H265 is stable since some days - so in the future there will be one format that can be done by newer graphic cards and not by older ones - so we need an infrastructure here anyways? This infrastructure could also solve the hi10p check, that i implemented in this patch.\n. Those are the two parts:\n``` c++\ndefine ENUMERATE_SINK(SINK, force) { \\\nAESinkInfo info; \\\n  info.m_sinkName = #SINK; \\\n  CAESink ##SINK::EnumerateDevicesEx(info.m_deviceInfoList, force); \\\n  if(!info.m_deviceInfoList.empty()) \\\n    list.push_back(info); \\\n}\nvoid CAESinkFactory::EnumerateEx(AESinkInfoList &list, bool force)\n{\nif defined(TARGET_WINDOWS)\nENUMERATE_SINK(DirectSound);\n  if (g_sysinfo.IsVistaOrHigher() && !g_advancedSettings.m_audioForceDirectSound)\n    ENUMERATE_SINK(WASAPI);\nelif defined(TARGET_ANDROID)\nENUMERATE_SINK(AUDIOTRACK);\n\nelif defined(TARGET_LINUX) || defined(TARGET_FREEBSD)\n#if defined(HAS_ALSA)\n    ENUMERATE_SINK(ALSA, force);\n  #endif\nENUMERATE_SINK(OSS, force);\n\nendif\n}\n```\nThe second is run and it is checked which API we are currently running on. After this the real \"Enumerate\" is puzzled together - which is not needed at all. From what I see and as it is checked anyways, you can run the appropriate functions directly - no need the construct them via this text replacement system call preprocessor.\nI don't know the AE code that good, so have no knowledge if other functions also call this Method. But as the factory should know which TargetWeAreOn, it could just delegate those calls, like it currently does anyways: Something like:\n``` c++\nvoid CAESinkFactory::EnumerateEx(AESinkInfoList &list, bool force)\n{\nif defined(TARGET_WINDOWS)\nCallDirectSoundEnumerator();\n  if (g_sysinfo.IsVistaOrHigher() && !g_advancedSettings.m_audioForceDirectSound)\n    CallWasapiEnumerator();\nelif defined(TARGET_ANDROID)\n CallAndroidEnumerator();\n\nelif defined(TARGET_LINUX) || defined(TARGET_FREEBSD)\n#if defined(HAS_ALSA)\n    CallAlsa();\n  #endif\nCallOSS(); //why is this always done?\n\nendif\n}\n```\ncould be enough.\nSecond, probably better Idea: \nAs we are a factory, we could remember the engines we are loading ... iterate through this list and just call EnumerateEx ... probably better.\n. Rebased, squashed and split to separate interface change from actual Alsa (workaround) implementation.\n. On resume it is a bit more problematic, but yeah this should work in principal\nCause xbmc already has some of the sinks in its list. We must clear this list, locked, and reenumerate. There might be race conditions, e.g. buffers still in sink, xbmc accessing the audio device directly via menu sounds and so on.\nBut in general this API change is a non intrusive way to tell the underlying system (Alsa, pulse, windows stuff, ..) -> please recheck what devices we have and enumerate them. \nsuspend():\nget buffers out of sink bring them in a clean state\nresume():\ndelete all sinks we have, lock(); call m_Sinklist.empty(); reenumerate(); unlock(); resume other threads and make sure they access nothing that has \"gone\" (usb devices or such, that user might have unplugged)\n. @MartijnKaijser:\nCould you test those three patches? IIRC - you had problem with no Audio after resume, right?\n. Retry with the correct build :-)\n. @MartijnKaijser \nPlease retry with this latest patch (you only need this one ontop of OE). The general problem is, that the sink is not closed on suspend, so afterwards the first \"normal\" open just fails. \nIf somebody knows the code of this SoftAE, please have a look - it is quite mess down there.\n. @MartijnKaijser:\nI made a new build with the above patch for you to test\nOpenELEC-Generic.i386-devel-20130203124550-r13143.tar.bz2\n(linke removed - outdated)\n@wsnipex:\nThanks for testing and input\n. @MartijnKaijser:\nThx for testing. @wsnipex had the same feedback and he provided a backtrace. For what I see, something calls us from external which results in something unpredictable: http://paste.ubuntu.com/1604864/\n@Memphiz, @davilla: \nMake a shot with your eagle eyes - it is a threading thing. Sadly i cannot reproduce here, so fixing is not that easy.\n. @davilla:\nNo - I want it fixed properly. If you look at the two threads 20 and thread 1. You see that i already destructed the Sink - but it still wants to add pakets. This i have to lock before.\n. There are other race conditions in there. AE is designed to open anything that is not really shot dead before .... \n@wsnipex: Could you give it a try with the squash?\n. The relevant change is:\nc++\n- if (m_sink && !sinkIsSuspended)\n+ if (!m_realSuspend && m_sink && !sinkIsSuspended)\nProcessSuspend caused a deadlock when wanting to acquire the sinkLock.\n. @wsnipex:\nthx again! great:\n```\n0  CAEConvert::Float_S16LE (data=0x2b3adc0, samples=1024, dest=) at Utils/AEConvert.cpp:587\n1  0x0000000000b47da2 in CSoftAE::RunOutputStage (this=0x2a921a0, hasAudio=true) at Engines/SoftAE/SoftAE.cpp:1201\n2  0x0000000000b4d363 in CSoftAE::Run (this=0x2a921a0) at Engines/SoftAE/SoftAE.cpp:1039\n```\n. Now I start getting the logic.\nThe \"stream silence\" by default on linux just bites me in the a**. Cause the sink is not kept in the ProcessSuspend() routine, where it should idle, while the sink is suspended or m_realSuspended.\nThis cries for a cleanup, I want it to get working and then let's see.\n. @FernetMenta:\nThis hanging is quite fine for me at the moment. I just want it to be somewhere, where it does not write packages or anything else. In fact AE is hanging somewhere all the time - but guessing where with all those flags is not really nice.\n. And opening a sink, when i have removed all sinks and cleaned the m_sinkList I highly want to avoid:\nThey idea is:\n::Suspend();\nm_realSuspend = true;\nstopAllAudio();\ndeconstruct the m_sink and all other devices();\nmake sure AE idles in ProcessSuspend();\n::Resume();\nreenumerateDevices();\nm_realSuspend = true;\nAE will go out of ProcessSuspend(); and does something else with m_sink = NULL so it should reinit.\n. I tried to fix the constant waiting. Waiting for feedback.\nBtw. i found this (anti) pattern: http://en.wikipedia.org/wiki/Golden_hammer :-)\n. @MartijnKaijser: \nOpenELEC build for you: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130203231638-r13143.tar.bz2\n. @FernetMenta:\nCould you have a short look at the ProcessSuspend() now https://github.com/fritsch/xbmc/commit/ad87ee9562f6a5b2a213f2aa0ae3717efd2a28cd - I know it is a huge mess, but would be nice to have a short time fix without introducing other regressions. \n. Okay proof of concept. Currently at work (break): https://github.com/fritsch/xbmc/commit/8601459484c1054b8a9f293c7afd1ce69746b943\n. PR Updated with the input of @FernetMenta. Highly appreciated! \nI think it is better to implement the SoftAE completely from scratch. We need a statemachine as a basis and not 4 bools that are mixed together and nobody really knows where to start.\nThe main principle of AE, the Run thread is fine - but then the leafs got taller and taller ...\n. @FernetMenta pointed out, that there is more success in implementing an active object pattern. This has some advantages \n- We have a statemachine (or call it scheduler):\n  This is the worst problem with current AE implementation in my eyes (just look at the softsuspend mess) m_softSuspend m_Suspend m_reinit reOpen, m_whatDoIKnow and so on. There are so many of them, that i needed a new one :-)  m_realSuspend to concatenate it with || in order to keep the old behaviour and just making my bounds clear and block the others, cause I dont understand them in every case....\n- Callbacks for results (no need for blocking), this can optimize performance\n  AE is currently blocking, when called external (OpenSink()) or the mess to have Run constantly polling values ... to check if something happened.\n- you get thread safety for free, despite something like (amd does not implement xvba threadsafe ;-)) happens\n  My above patch will introduce regressions, but I cannot say which for now :-)\nSuch a state machine based pattern is btw. used in @FernetMenta vdpau and xvba (re)write on what to 99.9 per cent him and sometimes me and @wsnipex in a helping and testing manner were working on for the last 1.5 years.\nPersonally I dont have a problem with a constantly (sleeping) thread - but it must be obviously clear, that this thread must sleep whenever possible.\n. @MartijnKaijser: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130204182616-r13143.tar.bz2\n@FernetMenta: Thx for all the input!\nI have some reports from other OpenELEC testers that it now starts to work\n. @MartijnKaijser: Does suspend / resume work?\n. I know where it happens (changed something in FreeStream) and did not reopen if it was the mainstream - could you give me a log file - this should be visible.\n. Okay - with this version it worked fine for @MartijnKaijser \n@wsnipex had no problem with all of that\nThis is btw. the problem we had with softSuspend. Some, especially s/pdif devices, don't like it when you move the stream away from them.\nIt is not the job of FreeStream to care for s/pdif - but what do you think?\n. If there are some other testers:\nBuild A: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130204182616-r13143.tar.bz2\nBuild B: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130204213737-r13143.tar.bz2\nDifference: A does close and nothing else. B reopens when freed the masterstream.\n. Okay, squashed, pushed and reworded. Please everyone that has a computer that can suspend give this a try. And suspend / resume several times. \n. Here is an additional OpenELEC build with the squashed, reworded version: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130204232047-r13143.tar.bz2\nGood night.\n. @ronie:\nThx. AE is currently in the ::Run method (hehe, where should it be different) and puts out stuff nicely onto our sink - without locks and everything of course.\nDuring this call we get a Suspend Command and shutdown the sink - and move it right away from the writer -> butz and crash.\nThis happens while playing audio or always?\n. @ronie:\nhttp://paste.ubuntu.com/1610647/ <- What happens with this one applied on top? \nThx for your help.\n. @ronie:\nAlso make sure to reset --hard on my remote tree, it is fast forward cause of this merge here.\n. @ronie:\nYou need all the patches mentioned in this PR.  If you have two USB sticks handy give the OpenELEC version a try (http://wiki.openelec.tv/index.php?title=Installation). Best is you add my git tree as a remote, within your xbmc tree do:\nbash\ngit remote add fritsch https://github.com/fritsch/xbmc.git\ngit fetch fritsch\ngit branch ae-fix-testing\ngit checkout ae-fix-testing (just to be sure)\ngit reset --hard fritsch/ae-fix-proposal\nmake distclean\ngit clean -xfd\n./bootstrap \n./configure --disable-pulse --enable-debug --enable-vdpau\nmake -j 25\nand retry.\n. Try with and without the paste.ubuntu.com patch please.\n. The problem is within our nice OutputStage, which is called via two function pointers out of ::Run()\nThis one writes packages onto the raw sink and does not care about locks at all:\n/* Output frames to sink */\n  if (m_sink)\n    wroteFrames = m_sink->AddPackets((uint8_t*)data, m_sinkFormat.m_frames, hasAudio);\nThis should not be permitted by design - perhaps let`s wait a maximum time of the biggest data packages in buffer :-) like 100 ms ....\n. @FernetMenta:\nSo - you suggest merging as is right now? I could still imagine to introduce a suspendEvent, that is set in ProcessSuspending(); when we can make sure that we are kind of idleing. Do you think this is worth trying or should we concentrate of eliminating this design flaw and merge as is?\n. @ronie, @wsnipex, @MartijnKaijser:\nStill one idea left. Could you try the PR with the following, the new patch I added. Currently the Alsasink does not care if we have Audio at all, it always writes something onto the sink... (this does not fix the design flaw, but could workaround the bug).\n. @MartijnKaijser: OE build for you https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130205083524-r13143.tar.bz2\n. @DDDamian:\nYeah - same oppinion here. So what do we do?\nWe have three + n possibilites:\na) Merge it and break suspend when hitting this race condition for some (as it is racy, it can hit everyone) @ronie won't like it\nb) Don't do anything: No Audio for a whole lot of people after resume (as is)\nc) Lock the AddPackets and hope we are fast enough out again and merge -> suspend for all, but we are blocking very often.\nd) Don't do anything but start a rewrite, which should incororate everything we found out during this process?\n. @DDDamian:\nWhat do you mean with \"I don't use it\"? You have some code, so we don't have to use this?\n. Yeah, did not understand a single word, that went beyond the technical stuff, that I understood quite well. To just complete this off topic discussion. I am not a member of the xbmc team, so i don't know what you discuss internally - and i am not interested as it only seems to give objective thinking a slight defocus ... Most of my time i work with @fernetmenta. We don't have white rabbits, but it is also fun ...\nThere are other things to fix, that I have to cope with every day in multiple channels / forums, when directly speaking with (linux) users.\nAs you seem to like rabbits: Follow the white rabbit, when decoding 96khz flac on a sink that only can do 48000, run into reinit and see how the default codecformat is loaded and afterwards the resample is just forgotten :-)\n. @davilla: Does it work for you?\nLet's wait on the feedback of the testers above.\n. @ronie: As well in the sense of \"and\"? the first one does not have the sink locks - so it should crash for you :-)\n. @MartijnKaijser:\nHehe, nice, expected this - I already reverted it, cause it was a shot in the oven :-).\n. Sorry for the last commit, this was for OpenELEC. Don't to introduce more trouble. http://paste.ubuntu.com/1613970/\n. Good. This is what we currently have. I am ready when the Race condition is fixed. As I was spammed by a whole lot of people after posting the SoftSuspend patch, I keep it there and will later push it to some other PR.\nWe have working suspend / resume for at least 10 people, where it did not work before. We have found a race condition, that is not yet solved. Here we need a strategy, cause I want it fix now - if the code is in, probably nobody will care for it. So let's do it now. I gather ideas and will implement them afterwards - the least intrusive wins.\nI have some minor AE bugs left - that I will adress separately or when this bug here is going on my nerves too heavily.\n. @fernetMenta: If you have time check the last idea. The idea works i am sure - but \"big Picture and so on\", you know :-)\nofc i have tested this on my setup and it works (but it did never not work before).\n. Okay - if it still works for all testers. The non menu sound issue of @MartijnKaijser has cost some nerves. ProcessSuspending() can come out without ever calling SoftResume(). This is no problem for the Windows Implementation because of the SoftResume() here does only do: return false; so nothing is really done there.\nAs we detach from alsa during the SoftSuspend() call, we must make sure to call SoftResume() again before the Bus (::Run) enters OpenInternalSink() .... the stream checks or sound checks are worseless, as they don't give us a guarantee, that we are not reopened. \nIf the while head gets the reOpen before us - we are doomed in any way -> so we check if something has been left (m_softSuspend == true) after the ProcessSuspend().\n. @wsnipex: \nShould be the other way round (edited above) - but, yeah - now we actually know, that we in deed do(!) restart it in any case. As we make all our checks without locks in there, the flag switches to true after the check in ProcessSuspend() so the loop exits when coming down again, without doing something ...\n. On my way. Give the train some mins will think it over. Was a busy 5 min\npush sorry.\nAm 07.02.2013 20:51 schrieb \"wsnipex\" notifications@github.com:\n\nrevert that, its totally broken for me. Audio doesn't even play normal\nanymore, crashes..\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2152#issuecomment-13255909.\n. Okay, sorry for the trouble again. I had a real brain drain after work today. Thanks very much for review. I have squashed the last commits into the last commit, I kept SoftSuspend separately, so i can get reverted when a whole lot users run into trouble. The outer check in the last commit was missing before, so we must keep it in anyway.\n\nI am out of action for approx two days now (cannot test, nor compile), but will read mail.\n. @wsnipex: Thanks for testing. I currently don't know what happens with the new code when you pause during a video and the sink goes to suspend then - just thought about this during last hours. \nAs my \"softResume\" opens the last output it had before, this could be in this - if improperly done - the wrong one. So if you can give passthrough and playback pause i chance. In this case the resume function must be a bit more intelligent - we will see.\nOfc - as said, i currently cannot test.\n. Thx @ace20022 for spotting out and thx @Voyager1 for the correct fix.\n. For the last change:\nPlayer calls FreeBuffers\nPowerManager calls Suspend\nAE is jailed into ProcessSuspend()\nI think we don't want to care about async device opening here. I rather handle it after resume.\n. Some Background of the (invasive) changes:\nThe player calls FreeStream() while the PowerManager calls Suspend() and AE is finding its way into ProcessSuspend();\nIf the Suspend() call comes first, Player will do wait(1) because Factory::IsSuspended() is already true. So AE is put into standby, AE Process is nailed in ProcessSuspend. Really shortly before Suspend() is finished the isSuspended gets false again and the Player comes into FreeStream() and cleans Streams and after this sets m_closeSink.Wait() - yeah but nobody will answer it :-( and that way Suspend() with audio playing fails.\nIt is again an evil race condition as we cannot guarante that CompleFreeAllstreams() from Player gets done before the Sink is in Suspend. As we shutdown the sink in Suspend() already, we don't need to wait for that closing in FreeStream (if m_isSuspended) - we will reOpen with Resume() after suspend.\n. I would need someone on windows, who can test Suspend / Resume if this would be possible\n. Did you test it on Windows? Logfile please.\n. As I am currently in the process of fixing some other design flaws (synchronious open including blocking) the players and running through the AE thread from outside, i will rebase those commits. Incoming ...\n. Squashed and changed some whitespace issues. @sraue will provide new testing build (already there: https://github.com/xbmc/xbmc/pull/2218#issuecomment-13516046). For all that test, please report your results not on this github here. \nUse the now known thread in the forum: http://forum.xbmc.org/showthread.php?tid=147709&pid=1334890#pid1334890\nWhat needs testing:\nWithout menu sounds:\nPlay some music, pause, wait 20 seconds, resume. Switch some tracks.\nJump between a movie with passthrough and the mp3 as fast as you can. Make it crash.\nDo Suspend / Resume without Audio playing.\nDo Suspend / Resume with audio / video playing.\nDo everything at least 3 times.\nWith menu sounds:\nThe same as above.\nI expect crashes, because I changed the way AE handles OpenSink, it is now non blocking.\nThank you for making xbmc better.\n. @davilla: Could you have a look? especially at the async stuff. Let's say it this way: I made it working - but I don't have the big picture concerning how the different players poll AE. (rest of the text got lost). So if you see any dangerous things, don't hesitate to point out.\n. Yeah - get it in. I won't fly away. So we can fix any regressions afterwards.\n. +1 from me. Pulse is currently not in a real good state - so this will improve situation.\n. Hehe - i am pretty new to this stuff. I have some things on my todo list for AE. The last patch series enables Sleep Possibility on Alsa - so you should see really improved idle power usage. When the sink gets unloaded, it basically stays in SoftSuspend, e.g. ProcessSuspend(); and sleeps quite long naps.\nCan you be more concrete on your mentioned issue and how to reproduce? As I did not realize increased CPU usage.\n. An OpenELEC build with the patch applied is here: https://dl.dropbox.com/u/55728161/OpenELEC-Generic.i386-devel-20130223172218-r13361.tar.bz2\n. @elupus: \nI think I cannot follow here directly. Basically we choose what the Sink wants to give us and have an upper maximum of 256K in order to not get too far away. Basically, we can change the line as follows:\nbufferSize  = std::min(bufferSize, (snd_pcm_uframes_t) 64 * 1024);\nDid I miss the point?\n. I missed the point. You are right, it is a good idea to buffer 1 second, which corresponds to the sample rate value. Will add a patch tonight.\nbufferSize  = std::min(bufferSize, (snd_pcm_uframes_t) sampleRate * channelCount );`\n. Now I think, if we don't need to calc at all, cause our sink is ready set up at this position, so we just could use:\nsnd_pcm_hw_params_set_buffer_time((m_pcm, hw_params, 1000 * 1000, NULL);\nWill test it at home\n. @elupus:\nI recalced the values and came to similar results as you did above. Though setting it to buffer a whole second cannot be done by all hw I think. I set it to double the period Size.\n. Oki 2 is 200ms, 4 is 400 ms, 5 looks ugly, so let's try 8?\nBtw. if you calc that values by hand on think of a 192khz source. that is a whole lot of data we are getting here...\n. Squashed and rebased.\n. @gnif: Thx for jumping in. So back to the roots or can we change something here, that increases period size to at least 1024 (fixes @davilla issue) e.g. the original patch, that started with period_size = 1024 and let the hw decide to use a buffer? Also see, that all hw access functions use snd_pcm_hw_params_set_buffer_size_near so I expected that at least something gets set.\n. I think I found a way, that does what the old logic does, but a bit more transparent, as we know which one failed and have to try only once for buffer_size.\n. The last commit was done with the kind help of @anssih - highly appreciated. Thx.\n. @elupus @davilla @gnif \nOkay for you all so far? \n. Let's wait on @elupus as it is also important for his dvdplayer, so we don't have to change stuff afterwards, is this okay for you?\n. @elupus: We want to get 8 times period size, which is (the period size) always 100ms. If we see we can only get 8192 frames buffer, we reduce the period size to half the buffer in order not to run into underruns, to have enough data whenever a period ends.\n. @ronie:\nPlease try that one on top: https://github.com/xbmc/xbmc/pull/2382 You have USB soundcard, right? Same issue I have seen with some OE testers.\n. Yeah - no usb soundcard, but everything done in userspace via the pulseaudio default device.\n. @sjongele: Please retry with 2382 (just got merged) - this should fix that stuff. Buffer was way too large.\n. Oki - so I need logfiles. Best is before and after those patches.\n. @sjongele:\nhttps://github.com/fritsch/xbmc/commit/4c8fe02821835921d994bb725742840a525d1944\nPlease try this one on top of everything - let's discuss it further on my github, to not bomb too much people. I have underestimated the calculation of \"sane\" values. It rather looks, that we have to go back to what we had before.\n. @sjongele:\nYes, please check the patches made by @anssih - it is too early to give up yet - and as xbmc currently is in dev phase - it is okay to break and work on better dynamic defaults. When you start testing with https://github.com/anssih/xbmc/commit/95ea48d4353516c59e70c962c4970da0bd511aac you can just cherry-pick the other https://github.com/anssih/xbmc/commit/39f2487881b6fa2d52c58f7b2452420efc711cd5 on top.\nThanks for your help.\n. @Giftie: Thx for your answer. This is also my experience: https://github.com/xbmc/xbmc/pull/2421 @anssih has PRd both and we need both. The important part is here that the bufferSize must be 4 times the periodSize -> so perhaps the second patch is enough alone - but applying a potential bufferSize without the influence of a first periodSize makes it more fail proof.\nBoth of those patches are in OpenELEC rc5 and for now - it looks good.\n. Example of such a bogus log: http://sprunge.us/VYHj\n. Will investigate with this specific user a bit more ... those buffer Values are not bad per se -  perhaps there is another AE bug, that leads to this issue.\n. Jep, we buffer directly in SoftAEStream, roughly 0.75 seconds there.\n. @davilla: Short ping before the merge window ends. If it is still okay on your Pivos than it should go in - if not we need a even more failsafe default.\n. @sjongele: Please give those a try, as you found the issue.\n@vicbitter: Also do so, please.\nIt works for me and I am feeling quite confident, that we get our goal done: Larger periodSize, adapted to the sampleRate and enough buffer to not run into underruns, while keeping menu sounds working.\n. I am not so sure, there exists a correct calculation for all hardware, that works perfectly. If we calc sampleRate by 40 - it is already pretty low, perhaps lower than the minimal periodSize of some cards. Really low periodSize causes interrupts quite often, which does not scale on some hw. The pivos for example had a problem with the periodSize too low ...\nThe original implementation had periods of 16, used a max of 8192 frames buffer and calced the periodSize by buffer / 16 which is 512 (in the max case). For 48khz content, this is approximately 10 ms which is quite low - as said too low for the Pivos.\nI think lowering the periodSize will fix it again for @gnif, but will break it for @davilla.\n@FernetMenta:\nIt is not so easy for this thread to go - as the whole concept of the - i call it \"main running\" thread also has to be changed, cause it is considered non blocking, while called from outside ... the implementation is quite hybrid, so non blocking in theory, but blocked by self started events and so on ...\n. @anssih:\nI though a bit over the night and I would go another approach. For now we just have a linear model with two fixed parameters concerning buffer and periodSize. We limit the buffer because of the menu sounds, which is bad itself - cause of sacrificing \"perfect\" playback only because of some stupid menu sounds.\nBut - as menu sounds are played with 44100 or 48000 hz, we could use this and incoroporate a hz depending factor, e.g.\nbufferSize = periodSize * 4 * std::max((sampleRate / 44000), 1);\nThat way we can have more buffer for the bitstream formats, but keep it \"quite low\" for the normal stuff. Perhaps - if your latest patch still works for all - a combination could be useful.\nIf this does not improve the situation, we have to say goodbye to the linear model and think of something polyonmical after we have identified the constraints. I see a advancedsettings coming up :-)\n. Thanks again for doing this PR. It is a great start in order to support more vaapi features in the future, when this VA/PP work is getting into the \"normal\" libva. As I already read the code before, there is one minor thing, that could be considered. Perhaps vaapi can manage the pp stuff alone, so that other code parts don't have to know about it at all. But thinking of long term and that PP is able to do scaling, rotating and so on - it would be okay as it is. let' see what the others think of it.\n. Okay, as they don't come in again - we must also really free them.\n. The reason  for delete here is, that I don't want to loose them, as they come out of the m_isplaying list - i did not see where they are properly destructed and thought you original comment:\nit just removes their buffers from the playing list, they still reside in memory.\nwanted to beware us from a memleak, therefore I added the delete. So please clarify.\n. Thanks - I read the code, while waiting for your answer - the delete here even harms. Your explanation makes this clear. I will restore the original Code with just the StopAllSounds() - if somebody else reads this: use FreeSound(ss->owner) would really remove them and all references on them in the other relevant structures.\nSo I won't freesound then and keep it. Thanks again.\n. Worth the spamming: The issue was found by IRC user Captnoord - I only forwarded it. Captnoord continue with reading source code :-)\n. @FernetMenta:\nWe don't have that many options, as AE internally works completely on AE_FMT_FLOAT as a basis for encoding. Changing the internal format would be the other option :-)\nSo we have to die one cpy death. PR it if you please.\n. The patch looks good to me - but this terrain is not an easy one. In order to not run in a discussion like here: https://github.com/xbmc/xbmc/pull/1490 I would also match if num of input channels match num of output channels.\nI personally see no point in mixing 6 channels, when there are matching number of capable speakers, but the audiophiles would perhaps not like my pragmatic thinking.\n. Yes. Same for me. It fixes real user problems, so +1 from me.\n. @fabio81:\nThanks for doing that PR after requested via trac. Please remove the comment as it is self explaining.\n. Now please squash, please.\n. I am not totally against such a change, but make sure in the default method, that the hardcoded 1 will always be something valid, e.g. MEDIUM_QUALITY whatever which can change when the header changes.\nBtw. for all resampling enthusiasts: http://src.infinitewave.ca/ <- have a look here.\n. ",
    "Jalle19": "I know I can do that, but as the purpose of the default options is to exclude sample files this should be considered as a bug.\n. Thanks for merging! Like cptspiff said, it's very common on some sources (I have at least 50 movies with this naming scheme).\n. ",
    "energy6": "I have set the nav sounds to 20 percent of master volume. Typically this leads to about 5 to 10 percent absolute volume.\nWhat do you mean with \"set a better default\"? How do you want to change the nav sound volume? Or do you want to fix the nav sound volume at the default level?\n. Done in 35824a0ca4 by using an advancedsetting instead of a gui setting. New pull request follows.\n. ",
    "jkominek": "I added a wrapper function so a null is always put in.\nThis code was exploding after I triggered rescans of my video directory, but not consistently, even with the same set of files in place. The debug log didn't indicate the last file opened or anything, and I could only narrow it down to this by looking at the core dump. Sorry. If it ever starts up again, then my wife will demand I fix it again, so I'll make another attempt to track down the root cause at that point.\n. ",
    "mikkle": "Hit it as in push? Dunno if I have push rights anywho... :-?\nSafe enough for Eden? it is an API change (albeit slight and only a deprecation).\nFor the record, I did test that Confluence still works, and that I can get both labels from JSONRPC.\n. Automatically getting a MAC address from an IP address is not at all trivial if the IP address in question is on a different subnet.\nYou may chose to ignore this, seing as the CNetwork::WakeOnLan always send the magic cookie to the broadcast address. :]\nSome people have routers, you know! ;-)\n. Confirmed working with commit 93d4d70\n. The problem was introduced in c36ffcbee53314a39a9f338a70a9698a00f1969c\n. On my test machine (linux) disabling IPv6 does not change behaviour; this still works:\n=====SNIP - xbmc started with IPv6enabled=====\nroot@MT-T420s ~ # cat /proc/net/if_inet6 \n2a0107e8001f0024f2def1fffe729a6e 02 40 00 00     eth0\nfe80000000000000f2def1fffe729a6e 02 40 20 80     eth0\n2a0107e8001f0024dca43fccf3d2712b 02 40 00 01     eth0\nfe80000000000000025056fffec00001 05 40 20 80   vmnet1\nfe80000000000000025056fffec00008 06 40 20 80   vmnet8\n00000000000000000000000000000001 01 80 10 80       lo\nroot@MT-T420s ~ # netstat -anu |grep 9777\nudp6       0      0 :::9777                 :::*\nroot@MT-T420s ~ # \n=====SNAP - stopped xbmc, then disabled IPv6, then started xbmc again =====\nroot@MT-T420s ~ # sysctl net.ipv6.conf.all.disable_ipv6=1\nnet.ipv6.conf.all.disable_ipv6 = 1\nroot@MT-T420s ~ # cat /proc/net/if_inet6 \nroot@MT-T420s ~ # netstat -anu |grep 9777\nudp6       0      0 :::9777                 :::*\nroot@MT-T420s ~ # \n=====SNUP=====\nLinux (and other OSs with IPv6 support) will typically use IPv4 mapped IPv6 addresses for V4-only connections (e.g. ::ffff:192.0.2.128) specifically in order to support V4-only peers.\nAlso tested with no IPv6 enabled on the lan segment at all.\nThe biggest potential issue I see is OSs with no IPv6 support at all...\nThat being said, any idea on how to safe-guard against V6-less OSs would be very welcome! :)\n. Closing this in favour of #2668 from @simonvetter \n. ",
    "ulion": "playoffset= not work for Buildin function PlayMedia if media is a dir (playlist will work, but dir not work):\nthe playlistplayer does not use playlist_starting_track property, nor set Play(offset)\n\u00b7\u00b7\u00b7python\nif (item.m_bIsFolder)\n    {\n      CFileItemList items;\n      CDirectory::GetDirectory(item.GetPath(),items,g_settings.m_videoExtensions);\n      int playlist = PLAYLIST_MUSIC;\n      for (int i = 0; i < items.Size(); i++)\n      {\n        if (items[i]->IsVideo())\n        { \n          playlist = PLAYLIST_VIDEO;\n          break;\n        }\n      }\n      g_playlistPlayer.ClearPlaylist(playlist);\n      g_playlistPlayer.Add(playlist, items);\n      g_playlistPlayer.SetCurrentPlaylist(playlist);\n      g_playlistPlayer.Play();\n    }\n\u00b7\u00b7\u00b7\nin PlayListPlayer::Play():\n```\nbool CPlayListPlayer::Play()\n{\n  if (m_iCurrentPlayList == PLAYLIST_NONE)\n    return false;\nCPlayList& playlist = GetPlaylist(m_iCurrentPlayList);\n  if (playlist.size() <= 0)\n    return false;\nreturn Play(0);\n}\n```\nHere's patch:\n``` patch\ndiff --git a/xbmc/interfaces/Builtins.cpp b/xbmc/interfaces/Builtins.cpp\nindex 406e8c6..58f2495 100644\n--- a/xbmc/interfaces/Builtins.cpp\n+++ b/xbmc/interfaces/Builtins.cpp\n@@ -568,6 +568,7 @@ int CBuiltins::Execute(const CStdString& execString)\n // ask if we need to check guisettings to resume\n bool askToResume = true;\n\n\nint playOffset = 0\n     for (unsigned int i = 1 ; i < params.size() ; i++)\n     {\n       if (params[i].Equals(\"isdir\"))\n@@ -585,8 +586,10 @@ int CBuiltins::Execute(const CStdString& execString)\n         // force the item to start at the beginning (m_lStartOffset is initialized to 0)\n         askToResume = false;\n       }\nelse if (params[i].Left(11).Equals(\"playoffset=\"))\nitem.SetProperty(\"playlist_starting_track\", atoi(params[i].Mid(11)) - 1);\nelse if (params[i].Left(11).Equals(\"playoffset=\")) {\nplayOffset = atoi(params[i].Mid(11)) - 1;\nitem.SetProperty(\"playlist_starting_track\", playOffset);\n\n}\n     }\nif (!item.m_bIsFolder && item.IsPlugin())\n@@ -613,7 +616,7 @@ int CBuiltins::Execute(const CStdString& execString)\n   g_playlistPlayer.ClearPlaylist(playlist);\n   g_playlistPlayer.Add(playlist, items);\n   g_playlistPlayer.SetCurrentPlaylist(playlist);\n-      g_playlistPlayer.Play();\n+      g_playlistPlayer.Play(playOffset);\n }\n else\n {\n```\n. now the fix already inited a pull request: https://github.com/xbmc/xbmc/pull/1981\n. ok, I'm new here, but anyway, the code commited at my fork branch and set up a pull request: https://github.com/xbmc/xbmc/pull/1981\n. thanks for reply, I had to close this pull req and using another one since this branch name is used by my previous request with a typo in the code, the issue still listing the old typo one since they share the same branch name.\nI will reply your comment in the new issue\n. thanks the suggesting, now I know how to do next time.\n. and I still didn't figure out why pull 2019 not showed in the issue list. I already changed branch name but it's still only in the pull request list while not in the issue list.\nany way, this issue and pull request was closed, please goto https://github.com/xbmc/xbmc/pull/2019 to continue.\n. this is the squashed commit here, finally I learned how to do that.\n. done, it's a good practice~\n. linux console without X, test xbmc on ipad\n\n\nthe problem is not occur quite frequently, I just see the bug and it indeed could happen, so before next release, I think xbmc should fix it, so I wrote the patch here. test build is not urgent for me, thanks.\n. it will override the eden I installed on ipad?\nsince I'm writing addons, it normally targets eden, although the less-bug new build is good, but not my main test target, thanks anyway.\n. why not json-rpc construct the full pluginurl and then RunAddon(fullpluginurl) ?\n. then we may need keep the ExecuteAddon's interface but add ability to parse the addonid in the format 'plugin://foo.bar/some/directory/structure/some_file', it's easy by using a CURL object. and finally construct the full plugin url call RunAddon(fullpluginurl). but for the param list style params which finally be called with RunScript in RunAddon execution code, I'm not sure how to distinguish it.\n. bounds? if you mean textbox it self, it ensure that. but this is a python api exposed to addon author, the addon author currently has no way to known the 'bounds', only one method related with scroll is scroll(), which take a line number indeed but we do not known the max line number because textbox will wrap text in it. and also we do not known how many lines in the textbox visible region. when addon user view some text it can call scroll(), but don't known it reached the text end because the api currently exposed has no way to get it. this commit is just add the missed api to let addon author write correctly scrollable textbox code.\n. well, since the api exposed textboxcontrol, addon then possible use the control to display some text, if the text is longer the the textbox can displayed, it can be scrolled if addon author call scroll by user's actions. api exposed the scroll() method, but it is not enough to implement a well scrollable textbox for addon author, since addon author not known the scroll is over the text end, the text locked seems, even if user scroll back, it may take some times scroll back actions to let the text unlock.\nI'm working on some work like netstorage, there is media files, also sometime the subtitle, nfo, txt file etc, it's be good if user can take a look of these files.\n. I do not known skin code, never see source addon use it. I'm just an source addon developer, have no idea with it.\ntextbox certainly user can control it, it only need addon author wrapper the textbox and response to the actions, here's some code you can see how it be used: http://code.google.com/p/seppius-xbmc-repo/source/browse/trunk/addons/plugin.video.xbmc.rus/resources/lib/xbmcrussia.py?spec=svn289&r=289\n```\nclass TextReader(xbmcgui.Window):\n        def init(self, txt_data):\n                self.bgread = xbmc.translatePath(os.path.join(os.getcwd().replace(';', ''), 'resources', 'img', 'background.png'))\n                self.setCoordinateResolution(1) # 0 for 1080\n                self.addControl(xbmcgui.ControlImage(0, 0, 1280, 720, self.bgread))\n                self.NewsTextBox = xbmcgui.ControlTextBox(10,10,1260,700)\n                self.addControl(self.NewsTextBox)\n                self.NewsTextBox.setText(txt_data)\n                self.scroll_pos = 0\n        def onAction(self, action):\n                aID = action.getId()\n                if aID in [1,3,5]:\n                        self.scroll_pos -= 5\n                        self.NewsTextBox.scroll(self.scroll_pos)\n                elif aID in [2,4,6]:\n                        self.scroll_pos += 5\n                        self.NewsTextBox.scroll(self.scroll_pos)\n                elif aID in [9,10]: self.close()\ndef directshowtext(params):\n        TextReader(txt_data = params['text']).doModal()\n```\n. well, then how can a python plugin or script display the text content like you said? the text is from an url, currently addon first fetch it and then guess the encoding and decode it to unicode, then display it by the TextReader, how this work be done by the skin function you said and can be inited from python script or plugin?\n. relative scroll is indeed a better idea. and I will check how to use the xml window doing the work later.\n. well, splited, and I also have another non-finished commit I'm working on it for use ios native UITextField control to input, which can input any language chars supported by ios native input method, and support clipboard copy and paste, also will include tap non-input region to cancel feature just like the generic keyboard does.\n. the original great work is from https://github.com/xbmc/xbmc/issues/1194, the ios native keyboard will be used for most cases on ios, except for the python addons. on other platforms it still showing the original generic keyboard.\n. it's still working on non-ios, certainly, ios keyboard only used on ios, else generic keyboard window instance is used.\nthis can be checked in KeyboardFactory::ShowAndGetInput method, where is the only place IOSKeyboard instance is created.\n. factory not support autoclose, yet.\n. rebased, and last 3 commits were changed from the first request.\n. so far so good, but I found we have to handle the Cancel() from the timer thread at any time, which makes it not so easy to write strong code. I will handle the Cancel() in more thread-safe way, if I can figure it out.\n. finally, I got the Cancel() call thread-safe.\n. when Cancel() get called, we really don't known whether keyboardView pointer is valid and where the keyboard thread  is running to, there could be some race-conditions. so finally I let the Cancel() just set a flag, and let the keyboard thread do the check cancel flag work.\nshare one common cancel flag make the Cancel() code really simple, and the whole keyboard thread and logic also simple to understand. if we got two cancel flag, it will be more hard to understand how can it safely works.\n. currently the UITextField by default set first input char to upper if user not clear the shift button on many input language, do you guys think we should change the behavior to no-capitalization?\n. ok, updated with squashing.\n. LOG is defined to NSLog with '[DEBUG]' prefix when compile debug, but it defined to empty when compile release.\nI think they can be left there since it won't affect release package.\n. updated, now with bluetooth keyboard, the UITextField input function works properly.\nand the clear button of the UITextField also displayed correctly now, which need ui to do a layout in the ios main thread.\n. I do not have the output adapter, so currently have no idea about this. maybe got time to give a research on it.\ncurrently I'm working on ios background playing and control like ipod does. maybe push up the half working code later for some help about coreaudio playing status.\n. now first 6 commits is from https://github.com/xbmc/xbmc/issues/2101, last 2 is for use UITextField.\nthe code is more thread-safe than the initial commit.\n. ok, done.\n. gap removed, non-important log entry removed, all left log entry is important for the keyboard function flow, since there is non-tested platform such as ios6 (user with developer account can resign and install it), if there is bug related to the keyboard function, we can see what user did and what happened, what system responded from the console log (debug build only) by let user install xcode or http://support.apple.com/kb/DL1465 or http://support.apple.com/kb/DL1466 and paste the log.\n. this stream hit NULL normally not happens, but when the auido engine is suspended.\nwhen I testing my ios code, my code sometimes didn't resume audio engine before play an item, which will wake up this crash, fix it is harmless and prevent unhappy crash anyway.\nthe log message updated.\n. the compile warning is harmless it will be ok in xcode4, but if you are using xcode3, the result code works same way. if you surely want to remove it, I can call performSelector to do that work\nabout the logging, these magic logging macro is only used for osx/ios/xcode debug with console nslog output, do not related to xbmc logging system and xbmc logging system can not print object-c content either..., and no-op when compile in release mode, since currently the commit is in testing stage, I'd left them until ready to merge, when we can clean them if it is surely needed.\nabout split class, it's a little hard to do, I will think about it.\n. commit splited\n. updated:\n1. handle interrupt when xbmc app inactive or background playing correctly, suspend audio engine and resume do the work without pausing.\n2. prevent from ios auto-suspend network after screen dark.\n. rebased on current master and little updated the nowPlaying item commit, added an AutoPool for the announce bridge.\nI found not all Announce calls come from xbmc main thread, the OnStop comes from dvdplayer in my test, which need an auto-release pool for object-c code.\n. rebased, I'd like to merge this within this merge window, any objection? @Memphiz @davilla \n. I think no, the only code changed which also used by other platform is in https://github.com/ulion/xbmc/commit/1297e2007cbd1c87ebe366dcbb65a6665b4f9d94\nthe last place, adjust Resume() before an audio stream operation, I think it's good, how about it? @huceke \n. the TODO is resolved. and also added seek forward and rewind support (hold the next/prev button of ios media control bar to trigger), use 4X speed works well with music seeking.\n. changed back. \nalthough it passed on other platform, I still didn't consider other platforms, your consideration is necessary and thanks.\n. this problem may existed since eden, lock screen for a while and reopen will active it, cost cpu and generate large log (which is at error level).\n. GUI_MSG_UNFOCUS_ALL may need be added for OnTap or other similar handler, the code in CWinEventsIOS always send this for XBMC_MOUSEBUTTONUP event on ios. current code will leave the button in focused state without unfocus it correctly on ios.\n. as long as it resolve the binary write problem, it should be ok.\nI'm just wondering, why xbmc did not use swig generate cpp code directly?\n. @jimfcarroll when will your one be merged in? how about use this one before yours is in?\n. I saw https://github.com/xbmc/xbmc/issues/2137 and then I'd like to fix this in 12.1, that means either #2359 or this pr should be pushed in @jimfcarroll \n. how about this one go in first and backport to 12.1, and your one after this but not backport?\n. well #2359 replaced this one and has been merged.\n. ape seems has same problem, fixed and put here together.\n. finally I found why the old 0.9.17 bump failed:\nhttps://gnunet.org/bugs/view.php?id=2803\nso if I'm right, we need wait libmicrohttpd fix this issue or use my patch for it, or change thread pool mode to one connection per thread mode.\nmy patch in github: https://github.com/ulion/libmicrohttpd/compare/thread_pool_mutex_crash_fix\n. the mutex was added in https://github.com/ulion/libmicrohttpd/commit/53671bc2db9d4cfcea3e1c7636c02eef6642219d \nthe problem should existed since then (2 years ago, just before 0.9.12), but only on certain platform, which has a pthread_mutex_t struct not copy & sharable, now on my platform xcode4 compiled run on ios5 will crash when stop web server.\nif on a certain platform, pthread_mutex_t can be copied and still separated used by different threads without problem, it will be ok for this.\nor we can just add MHD_USE_THREAD_PER_CONNECTION flag and comment out thread pool code\n. Yes, since 0.9.12 the problem is already in libmicrohttpd. copy and share use different copy of pthread_mutex_t is not a good idea anyway. so if possible, we should switch to one thread per connection mode before libmicrohttpd fix it?\n. what patches? the thread pool bug on certain platform exists in\nlibmicrohttpd from 0.9.12 to 0.9.25, and until they release 0.9.26.\n. then shall we bump the one in the unified deps to 0.9.26 ?\n. I was considering give GUIKeyboard a common method CloseKeyboard(), then the autoclose code can only implement once in factory and do it by delayedThreadMessage or some other method, which need can be canceled after keyboard closed before the timeout.\nBut, implement SetAutoClose on each native keyboard isn't so hard, so it's ok.\n. the combined change set is not large, it looks there some code in next commit is for fixing problem introduced in your previous commit. so would you please squash these commits first to remove such changes and re-split it to make it simpler?\n. original code is supposed to support video, so I don't think it's re-enabling video playback, we are fixing the video playback in pictures.\nI'm starting working on the pr I submitted to make it works as iDevice, although currently I do not have a big play button on the snapshot of video, and also can not switch to next or previous item in slideshow from an playing video item. other functions seems already works as it should be.\n. yes, there is 3 mouse event pushed into the event queue, the first called App::OnEvent, in it inited another message loop, which then called back the PumpEvents, and the left 2 events not get processed until the deeper message loop exit and OnEvent returned, but when they got processed, it cause un-expected behavior.\n. The first event is mouse move, then mouse left down, then mouse up, the mouse move will trigger the playing movie show the osd and control bar, which seems inited another message loop, then called deeper pump message to handle user action, such as click stop button, after the deeper message loop exit, the events ( mouse down and up ) on the stack finally be called, cause un-expected behavior. As why the osd init another message loop, I didn't check it so no idea whether it's expected behavior.\n. this fix is important for ios platform normal usage, should be in 12.1, is this ok to merge and add into 12.1 Backports? @Memphiz @Montellese @theuni\n. updated as @theuni suggested on irc process only one event per MessagePump call. @Montellese @Memphiz \nis there some merge window will close? I won't want miss this one..\n. well, I tested with touch move and kinds of gestures, and checked current ios touch event code, it won't produce many events when touch move, it only produce event when touch begin and ends, so it's ok to produce only event per MessagePump call on IOS.\n. a simulation may help to understand what happened:\nulion: let's simulate, now, there's 5 events pushed in the event list, then MessagePump called\n[1:14pm] ulion: double buffer copy events to local vector, cleared the original event list\n[1:14pm] ulion: then loop on the local vector\n[1:15pm] ulion: assume the 3th event called OnEvent which inited an modal dialog inited another message loop\n[1:15pm] ulion: then the 4th, 5th events left on the stack. and the new message loop called another MessagePump\n[1:15pm] ulion: but the MessagePump will found no events since the list already be cleared by the double-buffer\n[1:16pm] ulion: user inited new events, MessagePump handle new events, after a long time, the modal dialog exited\n[1:16pm] ulion: the OnEvent of 3th event final returned here, then it loop continue for 4th, 5th event, which cause problem\n. @jmarshallnz as you suggested on irc, now the loop count is retrieved before the loop, code is more clear.\nthe loop version commit will be more fit if the ui produce lots events. so we come back to the loop version fix finally.\n. Range was set by request client, Content-Range is the server response.\nI will try play the file.\n. @arnova can you give me an url like the one in your pastebin log current can play, the one in log seems expired.\n. they can be played on my working build, with some patches related to mp4\nstream cache, but the un-cached part is un-seekable, seek will result\ndecode error, what's the problem and result expected?\n. current xbmc code indeed seek on the stream, but the result data in\ndvdplayer produce decode error, I will keep dig on this.\nwireshark captured:\n```\nGET\n/62f99efca3b88ba7110b4b37aa2f9883/512c0656/s01/ceresodi/h264/1/vara/rest/2013/VARA_101310416/std.20130225.m4v?odiredirecturl=/video/embedplayer/h264_std/7f36002ed5a8afeff4109e669d4b5ceb/512c0652/VARA_101310416/%3Ftype%3Dhttp%26amp%3B\nHTTP/1.1\nRange: bytes=28281220-\nUser-Agent: XBMC/13.0-ALPHA1 Git:20130221-4b35908 (iOS; ;\nhttp://www.xbmc.org)\nHost: content50c3a.omroep.nl\nAccept: /\nConnection: keep-alive\nHTTP/1.1 206 Partial Content\nContent-Type: video/mp4\nAccept-Ranges: bytes\nETag: \"533582880\"\nLast-Modified: Mon, 25 Feb 2013 21:41:49 GMT\nContent-Range: bytes 28281220-93448902/93448903\nContent-Length: 65167683\nConnection: close\nDate: Tue, 26 Feb 2013 00:48:40 GMT\nServer: lighttpd/1.4.28\n```\n. Problem confirmed, it's the server problem, it send out video file with different content-length with or without Range request, that's why the patch in this pr can workaround the problem, but it's really a server related case, should not be considered as a common situation:\nresponse without Range:\n```\ncurl -o xx.m4v -v \"http://content2c4a.omroep.nl/4d3905ae1858854d1ea47e53af26f184/512d320a/ceresodi/h264/1/ncrv/rest/2013/NCRV_1585845/std.20130226.m4v?odiredirecturl=/video/embedplayer/h264_std/078a2967a3ba84e0c72bada2715e5389/512d3206/NCRV_1585845/%3Ftype%3Dhttp%26amp%3B\"\n About to connect() to content2c4a.omroep.nl port 80 (#0)\n   Trying 145.58.50.138...   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0connected\n* Connected to content2c4a.omroep.nl (145.58.50.138) port 80 (#0)\n\nGET /4d3905ae1858854d1ea47e53af26f184/512d320a/ceresodi/h264/1/ncrv/rest/2013/NCRV_1585845/std.20130226.m4v?odiredirecturl=/video/embedplayer/h264_std/078a2967a3ba84e0c72bada2715e5389/512d3206/NCRV_1585845/%3Ftype%3Dhttp%26amp%3B HTTP/1.1\nUser-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8r zlib/1.2.5\nHost: content2c4a.omroep.nl\nAccept: /\n< HTTP/1.1 200 OK\n< X-Mod-H264-Streaming: version=2.2.9\n< Content-Type: video/mp4\n< ETag: \"1619160542\"\n< Last-Modified: Tue, 26 Feb 2013 18:26:20 GMT\n< Content-Length: 189176442\n< Connection: close\n< Date: Tue, 26 Feb 2013 22:09:48 GMT\n< Server: lighttpd/1.4.28\n< \n{ [data not shown]\n\n```\nresponse with Range: \n```\ncurl -o xx.m4v -v \"http://content2c4a.omroep.nl/4d3905ae1858854d1ea47e53af26f184/512d320a/ceresodi/h264/1/ncrv/rest/2013/NCRV_1585845/std.20130226.m4v?odiredirecturl=/video/embedplayer/h264_std/078a2967a3ba84e0c72bada2715e5389/512d3206/NCRV_1585845/%3Ftype%3Dhttp%26amp%3B\" -r \"0-\"\n About to connect() to content2c4a.omroep.nl port 80 (#0)\n   Trying 145.58.50.138...   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0connected\n* Connected to content2c4a.omroep.nl (145.58.50.138) port 80 (#0)\n\nGET /4d3905ae1858854d1ea47e53af26f184/512d320a/ceresodi/h264/1/ncrv/rest/2013/NCRV_1585845/std.20130226.m4v?odiredirecturl=/video/embedplayer/h264_std/078a2967a3ba84e0c72bada2715e5389/512d3206/NCRV_1585845/%3Ftype%3Dhttp%26amp%3B HTTP/1.1\nRange: bytes=0-\nUser-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8r zlib/1.2.5\nHost: content2c4a.omroep.nl\nAccept: /\n< HTTP/1.1 206 Partial Content\n< Content-Type: video/mp4\n< Accept-Ranges: bytes\n< ETag: \"1561464652\"\n< Last-Modified: Tue, 26 Feb 2013 18:26:20 GMT\n< Content-Range: bytes 0-189442425/189442426\n< Content-Length: 189442426\n< Connection: close\n< Date: Tue, 26 Feb 2013 22:10:54 GMT\n< Server: lighttpd/1.4.28\n< \n{ [data not shown]\n```\n. But from my sight, there's no way the addon can do to workaround it, since the server return different video file according whether the request include Range request, and I tested force add \"Range: bytes=0\" header will break the play, then we have to workaround it in CurlFile.\nwe can just add this before each set RESUME line, or change to use RANGE for all request.\n\nif (m_filePos == 0)\n  g_curlInterface.easy_setopt(m_easyHandle, CURLOPT_RANGE, \"0-\");\n. oh, ftp, then RESUME_FROM_LARGE should always be set, and RANGE is only needed when m_filePos == 0 with a comment about why it is needed: we need always send Range header since RESUME_FROM_LARGE will not send Range request header when it set to 0, but some server, e.g. xxx.xxx.xx rely on this else will return different file content which will cause seek failure.\nthe commit message also need be updated to show the real problem we found: not related to redirection, it's the server return different file contents with or without the Range request header.\n. oh~, I checked the curl code, it did revert it from range string back to off_t, then only use RANGE is ok.\nthen updated the comment and commit message, finish this.\n. badly, I encounter some http servers will response 502 when request with 'Range: bytes=0-' header, but if request once without the Range header, it will then can accept request with Range header on the same url.\nit looks like some image cache servers, when the url first requested, it generate some thumb file, after that, all request direct access the thumb file, but if we send Range header at the begin, it will fails with 502 error and the thumb file never generated.\ngood news is addon can add 'Range=' protocol option to such urls, then curl will not send Range header for these image urls.\n. this may be server specific problem, and maybe not a common way to do that, at least currently we have a workaround for that.\n. you are right, temp list is better then the ++iterator plan I said on this, but:\nif in the callback, the moniter/player add another moniter or player, it won't be callbacked since you used the temp list, but this could be ok if we mark it as a rule, when a callback loop is running, new added callback won't be called in the loop.\nif in the callback, the monitor/player remove other monitor/player, after the current one in the list, it still get called, it seems not good still, you may need to check whether the iterator one is still in the original list?\nmaybe a bool flag to tag each pointer whether is was called in the current loop, you can keep the tag in the stack like your temp list, it can be an (type pointer)->bool map or type-pointer set or the temp list currently you use, we need still looping on the original list, but need multiple loops, in each loop, skip all pointer called, only callback on one pointer, tag it, then loop from begin to find another un-callbacked pointer \nbut if the destructed object's address is reused for new object... it should not be considered, maybe\nor, for each callbackable object, give it an id, which is auto-growing for new object, then the pointer address problem will be overcomed. then the list or map should ordered by the id, still looping on the original one, but each time callback on one pointer and reloop to find the next id/pointer.\nor in each remove callback function, use a vector or set keep the removed one's pointer, the in looping code, before callback, check whether the current pointer in the temp list is removed duration the previous callbacks.\nthe new added callback pointers can also be recorded like this, into an temp vector.\nwill the callback function trigger another callback function in the same thread? I mean the recursion\uff1f\n. as long as do not callback on an unregistered callback pointer, it should be ok, even if it's a smart pointer, should not callback on it if it was removed.\n. no matter where it is called from for unregister, should not callback on it if it was unregistered, right? as the difference between deconstruct and dealloc, I'm not really known it.\n. you got what I mean. even if not unregister in destructor, it's still unexpected for the object to get a callback after it already unregistered, then the code will hard be solid.\n. I made a PR for the proxy type gui setting. close this.\n. I did that, I think, and python only support http proxy as I see in urllib.py and urllib2.py, so I added a condition proxytype==0 for set the http[s]_proxy env in xbmc/cores/DllLoader/exports/emu_msvcrt.cpp, any place I was missing?\nas the enum, I put them in guisetting at first, but then I thought it is not a good place to hold a network related enum in guisetting, any suggestion?\n. @arnova how about this? I see you in the team member list related with curl stuff.\n. but after the bump, my ios build indeed can play smb shared file by my macbook 10.7, it did work...\nafter see the changelog of samba, it indeed has many SMB2 update in these versions, and also announce:\nSMB2 support in 3.6.0 is fully functional (with one omission),\n. here's my sample mp4 file's seek log:\nit seems mainly dvdplayer seek between 2 streams, cache strategy just do not support this.\nhttp://pastebin.ubuntu.com/1636198/\n. yes, @Memphiz it will download then play, just like mplayer does, this commit make the unplable mp4 on http playable by xbmc.\nif someone can do a better cache strategy support multi-session like this type, it can then replace this commit, before that this one will at least let the file play.\n. by my guess, the 2 streams is video and audio, if so, can dvdplayer just open them separately to overcome this? \n. ok, updated.\n. @elupus I already made another PR for double session cache https://github.com/xbmc/xbmc/pull/2229\nAt the cache level no knowledge of how many sessions upper level needed, so how about in player level open new session for read standalone session? \n. oh, for test purpose.\nso, rebased now.\n. The checking flag was in stop/end callback, before starting play new item, the flag is set, then stop/end callback will be ignored in current code already, so it won't send out stop/end message after the flag set. so, the only chance got stop/end message with flag set is that the message was sent by previous stopped video, the current starting video won't notify stop by pass the flag check in the front of each stop/end callback. In current code it already did that. The stop/end message only sent from stop/end callback, right?\n. And after the start flag reset, existed code will check whether current is playing, then call start or stop callback, the condition you said will call stop callback and finally send and process the stop message, no signal will be missed, right? @elupus \n. here's existed code after the starting playing block, it looks the IsPlaying() check did make up the play end signal.\n```\n  m_bPlaybackStarting = false;\nif (bResult)\n  {\n    // we must have started, otherwise player might send this later\n    if(IsPlaying())\n      OnPlayBackStarted();\n    else\n      OnPlayBackEnded();\n  }\n  else\n  {\n    // we send this if it isn't playlistplayer that is doing this\n    int next = g_playlistPlayer.GetNextSong();\n    int size = g_playlistPlayer.GetPlaylist(g_playlistPlayer.GetCurrentPlaylist()).size();\n    if(next < 0\n    || next >= size)\n      OnPlayBackStopped();\n  }\nreturn bResult;\n```\n. there indeed is other race condition there, not related with this commit.\nI will check the whole start playing code to see whether can find a way to remove all these race conditions there. but again, it's not related to this commit. this commit fixed a crash possibility, not introducing new problem or race condition here. existed race condition will be fixed in new commit if I can figure it out. \n. @elupus I fixed the race condition in https://github.com/xbmc/xbmc/issues/2244 , is that what you mentioned race condition? if so, it existed for years and not introduced by this PR, this PR is necessary and not introducing new race condition.\n. this currently is a temp fix, after a look though, I found that the previous item's STOP event still could be processed after PlayFile if in player::OpenFile no message loop inited (no busy dialog), which will STOP the new playing item.\ncurrently, with the message pump fix, this crash does not happen so often, we can leave it here, and I already figure out a better way to fix the previous playing item's delay messages affect new started play item, will in the callback race kill PR.\nOr maybe I can split it out here if needed.\n. thank you for your review!\nthis time it works with circular-cache.\nI had little fixup for the commit just pushed, here, not squashed yet.\nbtw, is the class MemBufferCache used by anywhere? it looks no one use it so I didn't update it for the base class update.\n. updated to fix a seek problem in previous commit. and curl seek on double session better.\n. oh, done, thx.\n. avi will not trigger the multiple-session cache, current pr switch to double session cache by the mime type of video file, if avi file need this, you can add the mimetype of avi file to the xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamFile.cpp line 56 to test it.\n. updated to fix wrong read pos in CSimpleFileCache::Reset\n. 1) it's better has crash log/stack to locate problem.\n2) does you using newest commit set in this pr? it updated 7 days ago. does you set cachememsize to 0 then use file cache or non-zero/unset to use memory cache?\n3) I will check that.\n. 3) not happens on my test mp4, maybe file related, you can give me file link to test.\n. then need the debug log to judge.\n. rebased.\nthat crash seems either related to /usr/lib/i386-linux-gnu/libcurl-gnutls.so.4, or 'CWinSystemX11::XErrorHandler: BadDrawable'. but from stack dump, can not judge why it crash.\nbut it really looks like a libcurl problem, so could you upgrade it or compile libcurl from source with debug enabled and retry?\n. since the backtrace does not supply any symbol, and the version of it maybe quite old, so first try upgrade it to system supplied newest version, and debug symbol if possible. if still crash, try compile the libcurl and then see.\n. what's your libcurl version? I didn't get this from the unified deps which using curl 7.21.6.\n. I tried on osx with killall and killall -9 to the httpd but no crash.\nso since I can not reproduce it and the information currently we have is not enough to locate the problem from my side.\nbut for you, you can reproduce it, so hope you can locate the problem detail location, by add some logs, e.g. print handles when acquire/release/perform, etc.\n. No linux with gui.\n. Found the bug, will be fixed soon. 2 state shared the same curl http header list struct, the new one will invalid the previous' list, and will cause problem when re-request.\n. it also happened on my osx, so I catch it and from the stack guess what happened is related to the header list.\nhere's updated PR with this crash fixed.\n. that's strange the old commit list last in this pr, does github revert the commit order? maybe related my rebase re-order?\n. fixed.\n. cache size is limited when the cache strategy created, so don't worry about it, only one thing there's 2 cache buffers created with the size limit, it cost double amount of memory than single cache buffer.\nas the displayed cache bar, it jump from here to there frequently because the audio and video stream is located in the different range of the mp4 file, and dvdplayer seeks between them from time to time. \n. I choose to update the commit message, the codes modified in this commit are all definitely both for  the same thing --> m_hDataAvailEvent related wait data available method.\nthe original commit message 'wrong code and correct the logic' was to descrip the old code has something wrong and logic is incorrect, it didn't mean it's two fix \n. @t-nelson I updated the commit message and the description of the PR, please review it and tell what you think. thank you for comment, now the commit message and PR description is more clear then initial.\n. If no objection, I will merge this after 2days, will this be ok? @t-nelson @jimfcarroll @elupus \n. Ok, then wait, so code is ok?\n. Thx, then I known how to do if code is ok.\nThen if no objection, I will add this to next merge win, after 2days.\n. well, then this is indeed a fix, thx\n. @JezzX this is done, then you can add the Clear button when you feel appropriate.\n. updated, includes https://github.com/xbmc/xbmc/pull/2253 .\nthe main change is add a method to removed thread message already in the queue by message ids, which let us can remove all playpack related delay messages of previous playing item, since we are start playing a item, previous item's playback callback and thread messages will confuse our code, and also not useful, since we will stop the previous playing item anyway, and start current item from clean.\n. current reply to previous @elupus 's 5 questions:\n- Previous playing item:\n  previous playing item caused thread messages in the queue is removed from message queue in current PR, and new callbacks from previous playing item also blocked by the lock and starting flag, and we will set play state to STARTING after we called player::CloseFile() which will make sure the previous playing item is stopped.\n- Application::PlayFile is called: not handled yet, maybe in standalone PR, or additional commit here.\n- OnPlaybackStopped() is called to abort old item: ignored, we record ignored callback after CloseFile() was called, when OnPlaybackStopped() for abort old item was already called.\n- IPlayer::OpenFile return true: nothing different with dvdplayer/paplayer in current PR.\n- OnPlaybackStarted() is later on called to finish the start of the new item: no problem, it can be called during starting state, after starting state, if it was not be called when we finish starting state, we do nothing, just return true and let the player's callback do its work when it start playing.\nby current PR. no special rule other current need be stated to player.\n. added a commit to prevent player be deleted during OpenFile, use a shared pointer holder.\nso the current reply to previous @elupus 's 5 questions (second is updated):\n1. Previous playing item: previous playing item caused thread messages in the queue is removed from message queue in current PR, and new callbacks from previous playing item also blocked by the lock and starting flag, and we will set play state to STARTING after we called player::CloseFile() which will make sure the previous playing item is stopped.\n2. Application::PlayFile is called: handled in second commit, prevent crash if the first PlayFile running to OpenFile with a busy dialog process messages, which may trigger another PlayFile call (e.g. user use remote to play other file or sent double play action), the second call will close the previous starting play item, but not delete the player (if it need change player), just reset the shared ptr to the new player, then set the starting flag, and call OpenFile on the new player, just like normal. but after the second PlayFile finished, the messages processed finished, the first OpenFile returned, it found it's the only reference of the player, then it will return fail, this may affect the caller of PlayFile which may do action when PlayFile failed, which could be un-expected at this situation, it need be fixed in additional commit.\n3. OnPlaybackStopped() is called to abort old item: ignored, we record ignored callback after CloseFile() was called, at that time OnPlaybackStopped() for abort old item was already called.\n4. IPlayer::OpenFile return true: nothing different with dvdplayer/paplayer in current PR.\n5. OnPlaybackStarted() is later on called to finish the start of the new item: no problem, it can be called during starting state, after starting state, if it was not be called when we finish starting state, we do nothing, just return true and let the player's callback do its work when it start playing.\n   by current PR. no special rule other than current need be stated to player.\n. Updated, change PlayFile/PlayStack's return value to detect playback canceled conditions.\nSo when canceled, no need to produce gui notification.\nNow when the second PlayFile is called during busy dialog of first PlayFile starting stage, it will cancel the first playback, and when finally the first OpenFile returned, it can detected it was canceled by compare the player operation sequence number, then it finally return PLAYBACK_CANCELED for it. \nNow all questions @elupus asked have answers, how about this?\n. The main problem make it looks complex is that: \n1. in playlist player and other places, it check the return value of PlayFile, if fail, it mark item as unplayable or show error dialog, but for the second PlayFile happens in first's busy loop condition(this is quite offen when user use remote to send double or different play item request), the final return value of first PlayFile is also false(if player be deleted) or true (if the same player be reused and the second PlayFile return true), they are both not we want. There should be a return value for such canceled condition and caller should do nothing for that. And I found in player internal, it's hard to distinguish between canceled and failed, so I had the cancel detection code outside the player.\n2. we have 2 ways for the PlayFile response: one check return value, one rely on the callbacks, need keep them both fine with the PR.\n3. The shared ptr for player prevent crash if the first player be deleted while it's in the busy loop.\nGive open call a seq make the callback traceable, Indeed should give each play item a seq, but I'm not sure, it transfers the complex into each player, and not resolve above 3 problems. \n. how about this one in this window?\n. that sounds reasonable, although not easy, it will be a big refactor work.\nbefore that, this pr make thing under control.\n. rebased.\n. @elupus forget this?\n. it's similar bug with the fixed one of ios/android event list in https://github.com/xbmc/xbmc/issues/2167 , copy and loop on temp vector is not clean, it introduce wrong order message process and delay process if the message process method inited another message loop (modal dialog, or something like this).\nthe only safe way to handle this is to pop up one message per time with lock protect and leave left messages in the message vector/list.\na simulation may help to understand what happened:\nulion: let's simulate, now, there's 5 messages pushed in the thread message list, then DispatchThreadMessages() called\n[1:14pm] ulion: messages in the message vector are copied to local vector, cleared the original message list\n[1:14pm] ulion: then loop on the local vector\n[1:15pm] ulion: assume the 3th message called SendMessage which inited an modal dialog inited another message loop\n[1:15pm] ulion: then the 4th, 5th messages left on the stack. and the new message loop called another DispatchThreadMessages()\n[1:15pm] ulion: but the DispatchThreadMessages will found no messages since the list already be cleared after the copy to temp vector.\n[1:16pm] ulion: new messages produced by user or xbmc or player, DispatchThreadMessages handle new messages, after a long time, the modal dialog exited\n[1:16pm] ulion: the SendMessage of 3th message final returned here, then it loop continue for 4th, 5th message, which cause problem\n. @elupus I made a simulation to present what happens with the old code on upstair, please check it.\n. first call GetThreadMessageQueueSize() to get the size is for limiting the max count of messages this DispatchThreadMessages() call will processed.\nelse if in SendMessage() call it keep pushing new thread message or during the loop and dispatch other thread keep pushing new messages, the loop will forever and DispatchThreadMessages not exits, that's not we want, so limit the max count of message to process, it's a little like the old code copy and process code, it will limit the process count to the initial count of the message queue.\n. the loop may cost too much time, if we loop for process all incoming messages until the queue empty, you have no idea how many message pushed there during one DispatchThreadMessages call, and if it keep pushing, you keep processing, the other part of message loop, such as Render(), will be delayed, that's not we want.\nand I'm try to fix the problem in most minor difference way with the old code, both this pr and old code process the initial count of messages in the queue, I just keep it same with the old code, to avoid jump too high.\n. well, I known it won't endless loop in current code, since no one currently keep pushing message into the list, but as a most basic component of xbmc's program framework -- message queue, it should as solid as it can, so I also think limit message count processed per processing call is a better strategy then loop until empty, that's my point, I also got yours :) \n. ok, add this PR link into the comment.\n. done.\n. Are you talking about the difference of loop until no message and process initial count of queued message?\nthere is difference between them, depends the speed of the message flood and message processing speed.\nassume the message flood speed is 50/sec, 100/sec, 200/sec and message processing speed is 100/sec,\nthen look what will happen, assume initial queued message is messages flooded in 1 second, delay between 2 DispatchThreadMessages calls is 0.04 second, 25fps.\nloop until no message:\n200 : 100 : flood speed greater than processing speed, the loop will forever and DispatchThreadMessages not exit, gui freeze.\n100 : 100 : flood speed same with processing speed, loop still forever and same with above.\n50 : 100 : it took 0.5 sec to finish process the initial queued 50 messages, but then another 25 messages queued, finally, it took 1 sec to process finish until no message queued. next time the initial queued message count depends on time costs before next time run DispatchThreadMessages, assume it's 0.04 second, then 2 new message queued.\nprocessing initial queued messages only:\n200 : 100 : initial 200 messages be processed took 2 seconds, then DispatchThreadMessages finished, next time it need to process at least 400 messages, which cost 4 seconds, and then 800, 1600, ... xbmc also be killed.\n100 : 100 : initial 100 messages be processed took 1 seconds, and next time 1.04 seconds, it increase each time by * 1.04 (I guess)\n50 : 100 : initial 50 messages be processed took 0.5 sec, and next time the initial queued message count is 25 + time costs before next time run DispatchThreadMessages, assume it's 0.04 second, then 27 message initial queued next time. and will took 0.27 second be processed, then next time 15.5 message next time cost 0.15-0.16 second, etc.\nAND, if there is code processing certain message which will generate new message push into the queue, the loop strategy will loop forever, while the limit strategy will be ok. it's not a flood, and old code support this type of usage.\nProcessWindowMessages is for another message queue, managed by CApplicationMessenger, which looks like a public interface of xbmc, while DispatchThreadMessages message queue is mainly used by xbmc internal, I guess.\n. @stupid-boy there is preempt loop, check this stack backtrace although it's not there: http://pastebin.ubuntu.com/1641207\nbut it shows that CGUIWindowManager::ProcessRenderLoop(bool) also calls CApplication::Process(), and CGUIWindowManager::ProcessRenderLoop(bool) be called by in multiple place include dialog DoModal code.\ne.g. CApplication::PlayFile can call dvdplayer::OpenFile, in it there is a busy dialog, and OpenFile calls CGUIWindowManager::ProcessRenderLoop(bool), which will call our CGUIWindowManager::DispatchThreadMessages() method (there are also other places init deeper message loop, normally, call CGUIWindowManager::ProcessRenderLoop(bool) with a while loop and wait some event). If in the SendMessage process code, e.g. in CApplication::OnMessage(), handle some GUIMessage dispatched by our CGUIWindowManager::DispatchThreadMessages() method, it has possibility call up another method or some code which init another deeper message loop, e.g. when handle GUI_MSG_PLAYBACK_ENDED message, it call up another PlayFile, such complex situations indeed happened.\n. the message loop and message loop in deeper level make things complex, I also have to handle the complex situation e.g. calling PlayFile within PlayFile (dvdplayer::OpenFile) in https://github.com/xbmc/xbmc/pull/2244 , I'm still working on it.\n. I mean message loop and deeper message loop already existed and we have to handle it carefully and correctly, for message pumping/dispatch, https://github.com/xbmc/xbmc/issues/2167 and the one are both for similar problem and should be ok. https://github.com/xbmc/xbmc/issues/2244 is for playback related callback/message handling, double message loop caused problem is one of the race conditions need be carefully handled. but not directly related to this PR.\n. yes, the dispatch loop could process messages initial not in the queue in some situations, such as the one you listed, or in my approach feature to remove certain type of messages from the queue in the other pr.\nconsider the message is just in the queue and will be processed sooner or later (it does not matter sooner or later), the more important is to keep the order, and same important, keep from deadlock. and yes, we can not declare 'only handle initial queued messages', and can only declare 'max handle initial queued size messages' for current pr, it's less important, as long as the processing message count is limited in someway, it will protect us from deadlock anyway.\n. so, beside 'loop true' or 'loop limit' is not decided, all other part of this pr is ok to all of us?\nshould we vote for it? I vote both, it's indeed both ok for me currently, the GUIMessage queued by SendThreadMessage seems not like the mouse event, it not likely keeps flooding, and if there is a message send it self back to the queue by itself or it related thread, it will loop lock, then let it lock, then we can found what it is and maybe fix it or change our loop method. but since it leave a chance of deadlock, this won't be put into 12.1, while the loop limit version can be, I think.\n. clearly, current pr is the safe plan currently we have. a little hard to understand should not be an excuse to not fix the obvious delay message wrong order bug, and now we all understand it, right?\nother safe plan is also acceptable, but it should support remove certain queued message, and this is needed for another pr related with playback, current temp vector can not support it.\n. @jmarshallnz 2 can also be ensured by add a dispatching seq counting, so we can detect whether deeper call happened after call SendMessage, if so, exit loop, would you like this ensurement be added? Or by make the left message count for processing a member var so it will be 0 after a SendMessage call if deeper loop happened. I prefer the later plan it will well support remove certain queued message feature also.\n. As a thread message queue service, it should fulfill:\n- Must: Thread safe, message can be pushed into queue in arbitrary thread context.\n- Must: Messages be processed in dispatch message thread context with the same order as they be pushed into the queue.\n- Must: Dispatch function support call itself during message process procedure, and do not break other rules listed here.\n- Should: Message will be processed in next dispatch message call after it be pushed into the queue, then no deadlock.\n- If possible: Queued messages can be removed by certain filter condition.\nif we both agree above, then how to implement it should has free space as long as it's bug free, although it could be a little complex and not easy to understand.\n. if no objection, I will merge this after 1 days.\njust kidding. I wrote a refactor version and with a long comment like here to announce what rules this thread message queue server should following. it has been put here for days, what's your opinions about this? @elupus @stupid-boy @jmarshallnz \n. only xbmc main thread call this function.\ncool~ static variable, then we can reduce a class member variable.\ncurrently we do not need the level count variable, only need the multiple level function share the same message count variable, which make sure the upper level function continue exit after deeper level function exited.\nI will try the static variable plan, although it just works same as the class member variable plan.\nThe last rule is needed for further PRs, when PlayFile, the previous items may caused some message already in the queue, but since we are open a new file, the previous one's callback produced all messages are all not needed by us and will cause problem if we do not ignore them, but we can not distinguish them from messages the new opened file produced since we can only process messages until next message dispatch call, so a method to remove certain pending messages is what I needed in the PlayFile callback PR, and this is only way I can figure out to resolve the crash caused by pending message and logic correct, the crash detail: https://github.com/xbmc/xbmc/pull/2228\n. oh, no, I can not get the remove work with static variable, my remove function currently:\nint CGUIWindowManager::RemoveThreadMessageByMessageIds(int *pMessageIDList)\n{\n  CSingleLock lock(m_critSection);\n  int removedMsgCount = 0;\n  for (std::list < std::pair<CGUIMessage*,int> >::iterator it = m_vecThreadMessages.begin();\n       it != m_vecThreadMessages.end();)\n  {\n    CGUIMessage *pMsg = it->first;\n    int *pMsgID;\n    for(pMsgID = pMessageIDList; *pMsgID != 0; ++pMsgID)\n      if (pMsg->GetMessage() == *pMsgID)\n        break;\n    if (*pMsgID)\n    {\n      it = m_vecThreadMessages.erase(it);\n      delete pMsg;\n      ++removedMsgCount;\n    }\n    else\n    {\n      ++it;\n    }\n  }\n  m_iLeftMessageCountToProcess = std::max(0, m_iLeftMessageCountToProcess - removedMsgCount);\n  return removedMsgCount;\n}\n. rule 4, if a message be pushed during one dispatch call, it should be\nprocessed by next dispatch call, e.g. in SendMessage, deeper message loop,\nthe next dispatch call be called, in it should re-count the initial message\ncount, so the count should be assigned with the message size in the begin\nof each dispatch call.\n2013/2/25 stupid-boy notifications@github.com\n\nas i already say, try without remove at all.\nof course, you can do remove with static class members. when you remove\nsome message, you have to decrement message count as if it was processed.\nthis can be dangerous!\nfor now, let concentrate on message dispatch, and look for remove only\nwhen dispatch is fully done, accepted, merged, and remove is really only\nway to go.\nkeep things simple.\njust see last commit. local firstTime var is true for every function\nentry! do it static ( or class member ) and counter, not bool. with bool\nyou can't reset it correctly! also, try to reorg code. currently it is not\nclear. something like following pseudo code ( will type directly here,\nexpect problems ):\nstatic int nEntry = 0;\nstatic int nCount = 0;\nif ( 1 == ++nEntry )\n{\nnCount = queue. size();\n}\nwhile ( 0 < nCount )\n{\nProcess...\n--nCount;\n}\n--nEntry ;\nsimply enough?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-14042348.\n. there is deeper message loop, which may took a very long time, so the\nmessage pushed during frame can be processed by next dispatch call, no\nmatter where it is called from. so each dispatch call should only count\nitself. the share of count only is for after a deeper message loop in\nSendMessage did called a dispatch call, it will reset the count to 0 before\nexit, so when SendMessage come back, the upper level dispatch function also\ncontinue exit loop. that's the only usage of the shared message count in my\nimplement.\nand no deadlock, since the new pushed message was not processed in current\ndispatch loop, it will be processed by next dispatch call, no matter it's\nsame level or in deeper level.\n\n2013/2/25 stupid-boy notifications@github.com\n\nwrong interpretation!\nmessage, pushed during this frame, must be processed during next frame.\nthis mean no infinite loop ( deadlock ). breaking this rule you definitely\nenter endless loop. that is major problem of your initial implementations!\nas i already say, i do not know if currently we have such self triggering\nmessages.we must be prepared for them.\npreviously i was seeing actual need of such pattern for some programs in\nmacromedia action script. they are loop based, not event based, exactly as\nXBMC is. with addition macromedia can stop current script when it decide,\nyou don't have any control or notification in such case. just unexpected\ndeath in middle of your work. only workaround was to use self triggering.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-14044632.\n. problem is that in xbmc it indeed cause nest, and the deeper message loop\ncould keep running for long time until user exit the modal dialog. I didn't\nget what's the self trigger message, but on current work, it must support\nnest call dispatch and in the deeper level, (in SendMessage) could has a\nwhile loop (message loop) which loop calling dispatch function, it is not only called once\nin the nest deeper message loop and will keep be called until the deeper xbmc loop exited.(sorry, all 'message loop' I previous said mean the xbmc main thread loop, not the dispatch message loop in the dispatch function)\n. here's a misunderstanding, let me use a real example display what happens:\nIn CApplication::OnMessage, when processing\nGUI_MSG_PLAYBACK_ENDED message, which is sent previous by\nCApplication::OnPlayBackEnded()\nand currently dispatched by CGUIWindowManager::DispatchThreadMessages()\nwhich then calling CGUIWindowManager::SendMessage which then call\nCApplication::OnMessage().\nok, now the GUI_MSG_PLAYBACK_ENDED is being processing, lets assume it's an\nstack play, the code will call PlayFile for start playing next file in the\nstack, just inside our first level CGUIWindowManager::DispatchThreadMessages()\ncall, right? then inside the PlayFile, it call\nCDVDPlayer::OpenFile, in it it wait the m_ready flag, and loop calling the\ng_windowManager.ProcessRenderLoop(), in the ProcessRenderLoop() certainly\nhas Render function, so it's a real 'xbmc main loop' here, in nest level,\nand it could last for any longer time. so here, in the g_windowManager.\nProcessRenderLoop(), it calling CGUIWindowManager::DispatchThreadMessages(),\nwe should do what we should just like we are in the top level, the job is\nsame for any level call of DispatchThreadMessages(), tag the current\nmessage count and processing. maybe now you can get what I try to explain?\n\n2013/2/26 stupid-boy notifications@github.com\n\nsorry for second consecutive comment here.\nif you enter somehow in CApplication::Process(), which is main application\nloop, from nested level, in CGUIWindowManager::DispatchThreadMessages() you\nstill have to process exact number of queued messages during this frame.\nall of them and nothing more, in correct order. in next loop you will\nprocess next ones. as i provided only idea by showing some pseudo code, if\nsuch condition is mandatory, you can proceed with this pseudo code and\nimplement it in correct for such conditions way. right now i can't suggest\ncorrect way for doing this, as it is concrete implementation related\ndetail.\nof course, you can do this in other way, not as in pseudo code above. if\nyou keep all rules, any way is possible, with preferences for simpler and\neasy readable one.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-14053754.\n. problem is, g_windowManager.ProcessRenderLoop() indeed is used in many\nplace with loop around it, it indeed is the nest 'main loop' of xbmc, also\nis used in CGUIDialog::DoModal_Internal(), that's what designed to be like\nthis. so we have to accept the fact that the xbmc main loop could running\nin deeper level (e.g. Dialog doModal), so the DispatchThreadMessage()\nfunction.\n\nthe double level main loop did happens when switch to next file during\nplaying stack files. if checked the code I mentioned, you can confirm that.\n. great idea, the code now much clear.\n. the overflow fixed as @jmarshallnz commented in the previous commit.\n@stupid-boy the state automata is beyond my scope, It's not on my list.\n. here's a stack, when switch to play next file in playlist, this always\nhappens for non-local file.\n0 0x004f45ca in CGUIWindowManager::DispatchThreadMessages() at\n/Users/ulion/Develop/xbmc/xbmc/guilib/GUIWindowManager.cpp:803\n1 0x009b5f20 in CApplication::Process() at\n/Users/ulion/Develop/xbmc/xbmc/Application.cpp:5148\n2 0x004f33b2 in CGUIWindowManager::ProcessRenderLoop(bool) at\n/Users/ulion/Develop/xbmc/xbmc/guilib/GUIWindowManager.cpp:668\n3 0x00248b46 in CDVDPlayer::OpenFile(CFileItem const&, CPlayerOptions\nconst&) at /Users/ulion/Develop/xbmc/xbmc/cores/dvdplayer/DVDPlayer.cpp:477\n4 0x009a861c in CApplication::PlayFile(CFileItem const&, bool) at\n/Users/ulion/Develop/xbmc/xbmc/Application.cpp:4128\n5 0x00a4d66c in PLAYLIST::CPlayListPlayer::Play(int, bool, bool) at\n/Users/ulion/Develop/xbmc/xbmc/PlayListPlayer.cpp:261\n6 0x00a4d3f8 in PLAYLIST::CPlayListPlayer::PlayNext(int, bool) at\n/Users/ulion/Develop/xbmc/xbmc/PlayListPlayer.cpp:177\n7 0x009b4ce2 in CApplication::OnMessage(CGUIMessage&) at\n/Users/ulion/Develop/xbmc/xbmc/Application.cpp:5026\n8 0x009b5f04 in non-virtual thunk to CApplication::OnMessage(CGUIMessage&)\nat /Users/ulion/Develop/xbmc/xbmc/Application.cpp:5109\n9 0x004ef444 in CGUIWindowManager::SendMessage(CGUIMessage&) at\n/Users/ulion/Develop/xbmc/xbmc/guilib/GUIWindowManager.cpp:78\n10 0x004f46fc in CGUIWindowManager::DispatchThreadMessages() at\n/Users/ulion/Develop/xbmc/xbmc/guilib/GUIWindowManager.cpp:823\n11 0x009b5f20 in CApplication::Process() at\n/Users/ulion/Develop/xbmc/xbmc/Application.cpp:5148\n12 0x00a7762c in CXBApplicationEx::Run() at\n/Users/ulion/Develop/xbmc/xbmc/XBApplicationEx.cpp:108\n13 0x00c4f6cc in -[IOSEAGLView runAnimation:] at\n/Users/ulion/Develop/xbmc/xbmc/osx/IOSEAGLView.mm:413\n14 0x37dc9a80 in -NSThread main\n. in the stack # 2 ProcessRenderLoop() is called by a while loop, and the while loop could last for any longer time. not because there's queued messages, it is because the modal dialog, not related to the dispatch message service, it is by design, nested xbmc main loop.\nunder such framework, there's no difference no matter the  DispatchThreadMessages() is called in which level 'xbmc main loop', it's just part of the 'xbmc main loop', do the same work when each time it is called, just there has chance it drop into deeper 'xbmc main loop' in SendMessage during process message, if so, it indeed already finished its work and will exit the for(;;) loop of itself after the deeper 'xbmc main loop' finished SendMassage returned.\nthat's what current pr does. as stated in rule No.4, current pr fulfill the rule so it will not deadlock for self triggering message, that's it.\nthe 'frame' is not as what you thought, if the top level dispatch message function is frame 1, then in the deeper 'xbmc main loop', there could be continue more frames, as long as the deeper 'xbmc main loop' not exit, there will be frame 2, frame 3 ... each time the dispatch function is called, it's a new 'frame'.\nso forget using the seq in the top level dispatch message, there's not top, lower, deeper level of dispatch function, the top dispatch function is already finished since it dropped in the deeper 'xbmc main loop', we should trade the 'top' one as a finished one, and make sure when SendMessage returned, the 'top' one also finished without processing next message in the queue if there is.\n. well, got it, that means what I declared message will be processed in next dispatching message call is not fulfilled.\neven while(true) can not change that, since we has to leave it to the deeper dispatch function to process, and maybe in deeper dispatch function it's still not be processed because we dropped into more deeper 'xbmc main loop'.\nsince we must ensure the message process order, then no way to prevent a message process procedure init a deeper 'xbmc main loop', then we can only make sure the message will be processed in order, one by one, in next dispatch call, but if there is message in the queue be pushed earlier than the message which cause the dispatch function drop in deeper one, the message has to be processed in the deeper dispatch function.\nIt's not as good as previous I stated, but seems has to accept this since the drop into deeper 'xbmc main loop' is the design, we can not break them at thread message dispatch level.\n. as we discussed earlier, the while(true) plan will work, but it has risk\nto deployment since the old xbmc code always worked in the mode similar\nwith current pr (limited message process count), the risk is un-predictive\nwhile current pr is a safe plan.\n. what's the 'bug' you referred, I'm confused, by now I can not see current\npr is any 'bug', yes I known in which level the message be processed is not\ncertain, current or deeper, but the uncertain is not a bug, and it need not\nbe certain, what is need be certain is the 'in order', we should trade the\nwhole dispatching function and the deeper ones as part of a whole 'message\ndispatch service', which ensure the message will be processed in queue\norder, no matter in which level of 'xbmc main loop' which is pushed ( codes\npush a message into the thread message queue do not care it, it only looks\nthe SendThreadMessage() call as a message queue service interface, and do\nnot need the message be processed in current frame level, or deeper one, it\njust need the message be processed by the order which be pushed into the\nqueue)\nin your suggestion code, you give each new pushed message a tag, tell\nbetween which 'xbmc main loop round' the push happens, it's almost same\nwith current sequence method, except the 'frame id' can be share used by\nother similar message queue. but 'frame id' do not mean anything more than\nthe message sequence to the thread message, there was requirement to\nprocess message in next 'frame' but the requirement is less important (the\nkeyword is should) and override by the 'in order' rule (the keyword is\nmust) if conflict each other and we have no way to ensure it since there\ncould be any previous pushed message drop us to the deeper xbmc main loop\nand to the new frame, then who can process the left message in the queue of\nprevious frame id? it has to be processed in the dispatch function of\ncurrent newest frame, because no matter which deeper frame it is, it's all\npart of the dispatch message service, which make sure message is processed\nby pushed order. if you mean the message left in the queue with old frame\nid should be processed in that unfinished frame/loop (interrupted by drop\ninto deeper xbmc main loop), it should not, that break the 'in order' rule,\nis here any misunderstanding about this?\n. ok, I got it, if I'm right difference between this example and current pr\nis:\nthe example process the message D in the second DispatchThreadMessage call\nof the deeper 'xbmc main loop', while current pr will process it in the\nfirst DispatchThreadMessage call of the deeper 'xbmc main loop', because\nthe example use a frame id tag mark the first DispatchThreadMessage call in\ndeeper 'xbmc main loop' still with same frame id tag with the upper level\none. if the example mark each CApplication::Process() call a new frame id,\nit then will be same with current pr?\n. so I don't see the benefit from using frameID than current pr, there's no 'bug' in current, I think. and current one is more standalone, all logic is already here. the frameID plan introduce an external depend variable frameID and which is not tight related to the dispatch function, indeed it can be the DispatchThreadMessage() sequence number which self-increased at beginning of DispatchThreadMessage() call, and it is almost same with current lastMessageSequence plan. and I still don't see the necessary to switch plan.\n. it was like this, but there's a discuss from here changed this:\nhttps://github.com/xbmc/xbmc/pull/2253#issuecomment-13801983\n. Updated to the proposal code, shall we go now? @elupus \n. I will merge this in 24 hours. everybody?\n. added temp variable and comment as @t-nelson suggested.\n. if no objection, I will merge this after 2 days.\n. In current code, ftp/ftps use url options, and http/https use protocol options, I followed the original code.\nas the reason not use utf8 by default, it could be a long story and I don't known it either.\nbut since xbmc was already using non-utf8 charset for ftp for such a long time, there must exist many ftp servers configured to not use utf8 for using with xbmc like the one in the forum thread http://forum.xbmc.org/showthread.php?tid=121478\n. I can add 'OPTS UTF-8' command to the ftp server and ignore failure, but it's not related how xbmc handle the returned filename in the dir listing result, e.g. server do not support opts. and also, by now we can not check the opts command response in xbmc, since it's handled by libcurl, currently only we can do is to tell libcurl send opts command and ignore the failure response  \nin the other hand, consider all file name/path send to ftp server was comes from ftp server's response (expect initial path inputed by user but user can add option), we should send back the same file name/path as the server sent to us, that's what this commit does, it try to process the filename by utf-8, if it works, it keep the utf8 option, else reset the option. then according the option, CurlFile send out the file name/path in utf-8 or convert to xbmc gui charset.\nso no mater whether ftp server support opts, we should do above work anyway. and I will try to send opts for ftp in additional commit in this PR.\n. updated, now utf8 is default, and will auto switch to non-utf8 (try using gui charset) for non-utf8 file name/path.\nopts utf-8 command is waiting https://github.com/xbmc/xbmc/pull/2263 then can be added.\n. found that using url options has little issue with directory cache, maybe we should switch whole ftp part of code change to use protocol options(|a=b&c=d) instead of url options(?a=b&c=d) just as http[s] did?\n. I still has an issue related to ftp dir and dir cache, I need to confirm that problem not affect this, then I can merge this.\n. Confirmed, the ftp url option (query param) not work with directory cache for video file it can only be played once, user need re-enter the dir where the file located to play the file again.\nThis is mainly caused by: a url with options, when get parent dir, will lost options, then if incase there is a directory cache with the parent url without options set, when open file again, will check that dir cache first, cache not hit cause open file failed.\nfor video file, when starting play, it will scan subtitle dirs, include the video file's parent dir, here could produce the mentioned directory cache it then cause the video file can only be played once unless user re-enter the current directory.\nNow I let the ftp file item's path try to not contain utf8 option if possible, reduce the unplayable opportunity.\nFinally we may need switch to use protocol options to overcome this problem.\nThe problem only happens when the ftp parent dir item has 'utf8=0' options.\n. added a workaround before ftp options switch to protocol options is to change URIUtils::GetDirectory to keep url options when getting the parent directory.\n. last commit updated. I found there's other places using the url options, such as zip, rar, filter, etc (search SetOption).\nit's a little hard for GetDirectory method to decide for which url/protocol, the url options should be reserved and for which not. for compatibility, I only keep url options for ftp/ftps by now, as long as it did not break others.\n. I don't think so, as the protocol seems be only used by http/https, while other protocol all use url options do the work, since by the rfc (if has), http/https based protocol has url options, so it can not use that for additional usage, so we have protocol options.\nso currently the protocol options is used only when url options is not usable, once we fixed the GetDirectory method, there's no need to use protocol options, they works similar and no enough reason to switch.\n. I found URIUtils::GetParentPath does the similar work with URIUtils::GetDirectory, any idea of this?\n. I didn't refactor it, I change URIUtils::GetDirectory to call URIUtils::GetParentPath directly. the URIUtils::GetParentPath is stronger.\n. then the additional logic should be listed and documented why it's not\ngeting parent path but put in getparentpath() ? or it indeed is geting\nparent path, then it can be directly used by getdirectory.\n. @cptspiff I found some code in https://github.com/xbmc/xbmc/blame/master/xbmc/FileItem.cpp line 3163, both use GetParentDir and GetDirectory, it seems was from you, would you please explain what's that for?\n. is there different between call GetDirectory twice for it, and first GetDirectory then GetParentDir ?\nI still didn't get it, you just need the parent of parent dir and set the original filename there to get a new filepath, I don't care why need this, but I do care the difference between call GetDIrectory and GetParentDir, what makes the code call one of it first, and then call another one second?\n. after talk in irc, I got that GetDirectory will return the directory itself if the input is a directory with slash at the ends. so I will check whether all places calling GetDirectory expect the behaviour.\n. Updated, respect the old behavior and comment it, return dir itself if input is a dir with slash ends. but for non-dir input, return the parent dir get by GetParentDir().\n. oh, GetParentDir() will keep urloptions and protocol options, which is not same with old GetDirectory, when should we keep the urloptions for get parent dir?\n. I made a https://github.com/xbmc/xbmc/pull/2401 for switch ftp to use protocol options, so when it merged, we do not need to change the GetDirectory anymore, current pr now updated to use ftp protocol option.\n. yes, the plan to fixing GetDirectory is more complex than expected, so I now switched plan to use protocol options, #2401 will do that, and then this one can go in.\n. with this pr we are now use utf8 as default encoding, and keep certain way by protocol option to support it working with gui charset.\nnow the ftp switch to use protocol options pr is in the next merge win, this one should after that ( #2401 ).\ncan I assign this to next merge win? @elupus \n. comment updated.\n. libmicrohttpd need be tested on each platform, when using thread pool mode, it directly copy pthread mutex struct and share using it in multiple worker threads, it cause crash on some platform if the mutex struct is not copy and sharable. marked and some links in https://github.com/xbmc/xbmc/pull/2143\n. copy and share use different copy of pthread_mutex_t is not a good idea anyway. I suggest we should switch to one thread per connection mode before libmicrohttpd fix it. if no one do that, I will make a pr for it later.\n. I closed the one because we switched to the unified deps. but currently we have unified deps, we are still stuck on bumping things because some other platforms not using unified deps have a mainline lower version of some package because of that we do not bump the one in unified deps?\nhow about make every platform to use the unified deps to end this?\n. global search in xcode project indicate that m_curlAliasList is only used in CurlFile, and it's a protected var, no other place used it, so I added the check.\n. well, then I had to wrapper the slist to make it clear, that let me feel better, how about this?\n. thx, I known the xcode search is limited, and can not be relied 100%, is there some shell grep command recommend for doing this?\nin this case, unless CurlFile was inherited by other class, the member var will not be referred out of the class, and we all known that. now I already removed the member var and change it into a local static var, it will make it clear. oh, a bug found in my commit, re-pushed.\n. If no objection, I will merge this after 2 days, will this be ok? @elupus @davilla \n. will merge after 2 days, if no objection.\n. @elupus this one also, going to merge, already updated as you suggested.\n. git rebase -i commit_id\nwill let you squash/fixup/reorder all commits after the commit_id.\ngit push yourgitusername branchname --force\nwill force push your local git to update the commits in the pr, so you can reuse the same pr and add additional commit or change existed.\n. If no objection, this will be merged after 2 days.\n. It's not unrelated, it just need to free the curl slists anyway, Exists/Stat only use the slist and not call Open, but slist need be free, so the Close() can be safely used here. Yes, I checked the Close() code, it's ok if no Open() get called before, mainly the m_state->Disconnect() is need to look into, and it's also clean.\n. @elupus I'm going to merge, ok with this?\n. I tried the scroll, still works with single tap recognizer, do you remember what's the issue with it before?\n. as discussed in irc, the problem with scroll is long press gesture, I fixed it in another PR. this one is good.\n. I checked ListItem.cpp, in it:\nelse\n          {\n            const CStdString& exifkey = key;\n            if (!exifkey.Left(5).Equals(\"exif:\") || exifkey.length() < 6) continue;\n            int info = CPictureInfoTag::TranslateString(exifkey.Mid(5));\n            item->GetPictureInfoTag()->SetInfo(info, value);\n            pictureTagLoaded = true;\n          }\n        }\n        if (pictureTagLoaded)\n          item->GetPictureInfoTag()->SetLoaded(true);\nyou see, the SetLoaded(true) is called, so finally if the pictureinfotag was set by here, it still will not call Load() in SetCurrentSlide().\n. then just only put code for fixing problem 1 & 2 here, others keep in your repo, let's clean it up and merge it.\ntwo more question:\n1. does the Load() function set picture width and height to the info tag if the file contains no exif / iptc ?\n2. it seems only jpeg file has exif? at least for png file it has not, then will it's info is empty after Load() if previous set by others.\n. the code in libexif looks like not support picture format other than jpeg.\nare you sure the png/gif/bmp files is good with current pr?\n. @jmarshallnz , we seems reverted your old commit, please help here.\n. I think we still has png/gif/bmp file no info issue, but it should fix the Load() method to load these info from picture file anyway, currently it's jpeg only.\ncurrent pr is also ok to me.\n. No, maybe I should make a PR to curl.\nok, I also made a PR to curl: https://github.com/bagder/curl/pull/59\n. this is related a known bug of curl which was fixed in curl-7.26.0 one year ago.\nI fixed this in xbmc by a workaround to ignore the wrong length got from lib curl.\nwe should bump our old 7.21.6 which is too old, current newest release of curl is 7.29.0\n. at least we can bump for platforms using the unified deps.\n. platforms should try to use the unified deps if possible, that's meaning of the deps existence, try to keep builds on different platforms the same behavior. if some platform still do not use our deps, should consider build the deps on that.\n. I suggest temp deny thread pool until libmicrohttpd fixed, since it has issue after 0.9.12, we can not trust it's solid before 0.9.12 also. thread pool is complex than thread per connection anyway, so the safe way is to use one thread per connection in my opinion.\n. well, since we will pump the libmicrohttpd version to newer ones and without thread pool, I agree with it.\n. yes, it's good. and a good news the patch I commit to the up stream is already be accepted and in the svn.\n. if no objection, will be merged in 12hours, there's a ftp switch from url options to protocol options code is waiting for this.\n. Ding Ding\n. timeout, I do that.\n. as the other part of code, I can just read, no suggestion currently~\n. I thought the api should like python read() does, does it return string or bytearray? what's the different to cause addon failure?\n. I think current PictureInfoTag implement only support jpeg file. so don't\nworry about it.\n. on osx, for build with ios, the clean installed old toolchain dir finally is empty, should the xcode project be updated to use new toolchain dir from\nPATH=$PATH:/Users/Shared/xbmc-depends/toolchain/bin\nto\nPATH=$PATH:/Users/Shared/xbmc-depends/x86_64-darwin11.4.2-native/bin\nor make some symbol link/path define for that?\n. the python-interface script used it\n. I deleted the toolchain dir and made a symbol link to the final path to make it work. is this desired action? \n. another problem: on osx, build for ios, seems no setuptools installed in our toolchain python (the symbol linked one just now).\nmake -C lib/addons/script.module.pil\nrm -rf /Users/ulion/Develop/xbmc/addons/script.module.pil/lib/PIL\npushd Imaging-1.1.7 && /Users/Shared/xbmc-depends/toolchain/bin/python setup.py build --cross-compile --build-lib /Users/ulion/Develop/xbmc/addons/script.module.pil/lib/PIL; popd\n~/Develop/xbmc/lib/addons/script.module.pil/Imaging-1.1.7 ~/Develop/xbmc/lib/addons/script.module.pil\nTraceback (most recent call last):\n  File \"setup.py\", line 86, in <module>\n    from setuptools import Extension, setup\nImportError: No module named setuptools\n~/Develop/xbmc/lib/addons/script.module.pil\n. above error is caused by missing 'tools/darwin/depends/distribute' in the unify deps, which is used in PIL to crosscompile for ios host.\n. and the package distutilscross, also missing.\n. @elupus this one is good?\n. ok, will be in next merge win.\n. Updated to fix it in correct place, where the crash happens if image is nil.\n. and also the initWithImage method of MPMediaItemArtwork, which is new added in ios5+, so it also has to be added into the version check protect scope.\n. if no objection, I will push this in 2 days. @jmarshallnz @arnova \n. so, how about this? @elupus @vdrfan\n. @jimfcarroll check this.\n. @nuka1195 need more info, the python code you used to write & read\n@jimfcarroll the BufferException looks not be handled by any code.\n. be careful the new added logs, consider the Stat/Exists is not expect it must exists, it should be not in warning level.\n. a http/ftp file fail to stat or exists doesn't mean an error or something wrong, e.g. when you delete a file, first check it exists, if not, nothing would produce warning or error.\nso, do not log stat/exists error in warning/error loglevel.\n. what @elupus think?\n. looks clean.\n. CPictureThumbLoader, CMusicThumbLoader and CVideoThumbLoader both use one worker; \nCMusicInfoLoader use one worker; but CPictureInfoLoader still use default 5 workers according to the adv setting.\nwhat you mean 'run at least 2 loops over items' ? \n. got what you mean, but that's another topic. this pr is mainly to improve not let xbmc main thread block and wait all workers stop between nav win switch dir.\n. as a common base class, the CBackgroundInfoLoader class support\nmultiple workers, drop down to single worker doesn't change the fact\nboth xbmc main thread and worker thread could call OnLoaderFinish(),\nso if the xbmc main thread call OnLoaderFinish() and a worker thread\nstill working on some work may use resources not available after\nOnLoaderFinish() is called. that's the\nSINGLE_LOCK_CHECK_THREAD_STOP_AND_RETURN does, prevent such failure\naccess. although not all subclass loaders has such design. I think\nthis is the most complex part of this PR, and I had to take care of\neach such shared resources to prevent the abandon worker use them.\nas the autodelete, I tried it at first, but I found the difficult part\nis not how the thread be stopped and deleted, it's what the worker\nstill running and what the worker could doing may conflict with the\nnew work or operate on deallocated resources by OnLoaderFinish(), or\ndoing some work but finally has no way to save it (since\nOnLoaderFinish already be called for that Load round, for this we'd\nbetter return asap.)\n. updated to mutex protect the m_database, it could be use both by xbmc main thread and worker thread when StopAsync(true)\n. I think so, I crashed without mutex protect, one thread is calling the m_database->Open, and it crashed at some point in it, found the handle is closed, and 'db' pointer seems be null, so there must be some Close call during the Open call caused this, at least there's no lock protect in Open/Close, confirmed.\n. great, then we are fine to go.\nbesides, QuerySupportedGestures currently only support be called in xbmc main thread, need be careful if used in other places.\n. Added an additional commit, which fix the video fullscreen and audio visualisation osd with tap problem.\nSince we want a mouse motion to cause gui control focused and render and then do the real action in previous commits, but we do not want the mouse motion before that tap action for video fullscreen and audio visualisation, else the mouse motion will trigger the osd modal dialog and the the tap action may miss click button on the osd while user didn't see the button when doing the tap.\n. unfocus is fine as long as we take care of the final execution order between the tap and the unfocus.\ntap is tap, it should auto-unfocused after handle tap event, I think this make sense, rather than introduce another new unfocus event.\n. nonono, what I mean is that: 'tap is tap, it should auto-focus and auto-unfocus before and after handle tap event', there's no any touch focus and touch unfocus event at all, what hell is it? how it make sense? tap is a single event, what control accept the tap translated event, should consider the translated event only, normally we translate tap into mouse click, the mouse click is a side mouseover effect before the click handle, but xbmc can not render the mouseover caused focus before the mouse click handle. so we did the trick to pre-post a mouse motion event before a render to let the ui display focus (if there is a focus). so there's no touch focus at all, it's the way we used to workaround the focus render issue.\nas the unfocus, it is a post-effect of tap event, we tap a button, it should be translated into a click + unfocus event, so when we handle tap event (that's the exactly place I fix the problem), we should generate the unfocus after the tap translated event since we can not translate tap into 2 events by the xml :)\n. make some sense. we should continue discuss on it:\nwe have the big picture of xbmc like this:\n1. input system: CWinEvent::PumpMessage() is called, send each input event into app by g_application.OnEvent()\n2. input event handle: CApplication::OnEvent(), translate input event by type: key event then call OnKey, mouse event send to g_mouse then process mouse message, as touch events, we translate them by xml.\nso this is the big picture, the input event from input system be handled in OnEvent. now the input system already do what they need do, as the tap event, send the single tap event into OnEvent, that's why I don't like the touch focus, touch unfocus events, they do not exist in the input system.\nthe problem is at how we handle the touch event. that depends what action it is translated to, e.g. if we translate the tap into action rotate in slideshow win, then no focus is needed.\nnow the default translation of tap event is mouse left click, as long as we do this, we consider how a click should be handled, e.g. on an item/button, it should first render the control in pressed state, then handle the action it triggered, after that, final restore the control to normal state. but how current xbmc do for that? currently it first call OnMouseOver on the control, then handle the triggered action (maybe has pressed state set but still also not rendered before the action process, if so, the focus is just a workaround for the pressed state render issue). this problem is very hard to fix imo, so we had to always use a workaround to send a mouse motion before the posted click action, we already did these for years. then why need the render between pressed and click? because when we handle click, some code is slow and may block there for a few seconds. currently, on other platform, mouse motion is sent from time to time, so the focus is rendered in the most of time, but for touch screen, it not. and for all platform, seems no pressed state be rendered before click be handled.\nthen let's talk the unfocus again, because our ui control has focused state, and user can use remote to nav between ui controls, mouse over also can focus the ui control under the mouse point to notify user it's a clickable button or item. it also makes sense to not unfocus (maybe it should not be focused at all, it just need be pressed rendered), but it's a little strange on touch screen with focused control, so we had code to do the unfocus work for years. \nso, since we has the prefixed mouse motion event and posted unfocus event for years, why need this pr? that's because the new introduced generic touch code, they took the place of old code, but now introduce correct code to restore the old behavior, that's why I try to fix it here, there's no tap focus/unfocus, it maybe need not focus at all, but we are totally workaround the pressed->render->click problem.\n. yes, we'd better go though all of them.\nconsider the focus, why and when an ui item is focused? when mouse over, and maybe before it is clicked, after click, it should keep in focused state for mouse click? maybe not, but for remote nav&click it should, but for tap, it seems need to unfocus? I'm not sure about it, consider the container items, it seems should keep focused even after tap? but for button, it should unfocus after tap.\nthe long press is translated to mouse right click, it should has same need to workaround with tap, but because it may already sent a mouse motion event when the first press happens (by the generic touch input code), it is normally already be focused. and we normally do not has action of right mouse click on a button action, so we didn't realize the need to unfocus the long press of a button (for item as I said it may need not unfocus), so we can leave long press here as the issue is not obvious? \n. sounds reasonable. problem is that, all control code not known the up/down stuff, they just known the 'click' event. and event handling code translate the up/down into the 'click' and send to controls.\nthat's still a big change and we are far away to that, so I can not do that, hope someone will in future.\nso we all known what we are talking here and why, so currently all I can do is this 'workaround', before some one implement the perfect event handling up/down stuff in controls? or just let the control remember to render before the action handling, that's also hard.\n. rebased.\n. tried and works. it reduced the hardcoded check for fullscreen and visualization windows id, updated the last commit to using jmarshallnz's plan.\n. maybe we should keep the result of 'std::find(preDeps.begin(), preDeps.end(), dep->ID()) == preDeps.end()' to push_back only when it's true.\n. I mean, dep could already in the preDeps vector, so it's better not push it in again, so to reuse the std::find result only push when dep not in preDeps will be better :)\n. I did an additional commit for the 'better': https://github.com/xbmc/xbmc/commit/cc39b66b38657787e99bf6369a77c993cd601c23\n. No, CDirectory::GetDirectory report error is correct behavior. but here we should only call CDirectory::GetDirectory when the dir exists.\n. we need wait the reporter to try out, maybe his smb is readonly so the actors never saved there or be deleted?\n. exists is a stat, listing is an open. we are not in python to try...expect which can ignore the error output, and stat has cache there's no much overhead as you thought. besides, we can add cache support to the CDirectory::Exists to use directory cache to speed up.\n. I don't think the .actors dir exists on 'slow network', it should not\nhappen. we are talking smb which is in LAN.\nbesides, we should consider use directory cache for the dir existence check.\n. Or I should change the pr title to state it only point to a certain\nusage place not generic cases.\n. sorry for the old generic title misleading, this is a specific fix for a specific place which calling GetDirectory on .actors subdir without check Exists first.\n. rebased.\n. did you notice the different side of screen the swipe result different\nrotation direction? at first I already tried the plan you showed, but the\nbehavior is strange. I have no idea whether the xml support conditions\naccording the swipe location, but I will have a look.\n. I checked, CButtonTranslator::TranslateTouchAction does not support\nposition check. so since the swipe up/down is the default translate result\nof the swipe up/down in default key-mapping, I still want to add the\nrotation action by screen side for the 2 actions, that's simple and make\nsense, if you try it on a touch screen :)\n. good question, it may not, the pan event and swipe events are both send to\nhere, so I need to limit the action only when zoom level == 1, thank you\nfor point it out.\n. updated to not affect pan/scroll operations.\n. does this make any difference than current always Range plan? I can not see the difference, could you explain it or make an example to explain why this change is needed and how it is different than the current plan?\n. well, I traced and got the reason: libcurl does not check the content-range response with the range request header, but with the RESUME point, so the streams we break, they does not support range request, also does not support resume, in old code it will fail when try to seek on it by libcurl because the requested resume point not found or match, after we change to use RANGE opt, we lost the resume check feature from lib curl, the returned stream is not what we requested range, we did not found it.\nso current pr restore to use the RESUME opt which let curl check whether seek is succeed.\nI'm sorry to include that commit in 12.1 and we have no way to fix it in the addon side imo, nasa addon user can not watch these videos until 13.0 or 12.2 if we have. It's shame introducing this problem into the official release, my fault.\n. oh~, so, it's http/https only protocol option. nothing changed to ftp, check the code, it only make difference when seekable=false set in http/https protocol options.\n. the only problem is that what the value of the option we preferred, 'seekable=false' or 'seekable=0' ?\nI wrote false just because the noshout using 'true'. but maybe 'seekable=0' is better?\n. ok, then we go.\n. oh, it maybe not, in ftp protocol we are using 0/1 value, wait me merge the ftp stuff first and then see.\n. updated, finally we choose to use seekable=0, it simpler, and all other bool protocol options use 0/1, except the noshout one, but which is used by xbmc itself only.\n. they are handled by manually compare, not by bool type, and it's new added, addons will known how to add and use it. one usage is good and make things unify.\n. updated so we can have highlight, selection, cursor at the same time.\n. updated to order color block head/tail with correct order.\n. that's for preparation of supporting system input method, on osx, e.g., press down option+e, will got an highlight '\u00b4', then press e or a will got '\u00e9' or '\u00e1' on osx. that related to a certain api of osx sdk, which need client to implement a mark region (in xmbc, highlight), and maybe a selection region in the mark region, and also the cursor. so I made this pr to prepare supporting the system input method.\nhttp://developer.apple.com/library/mac/#documentation/TextFonts/Conceptual/CocoaTextArchitecture/TextEditing/TextEditing.html\n```\nManaging Marked Text\nOne of the primary things that a text view must do to cooperate with an input context is to maintain a (possibly empty) range of marked text within its text storage. The text view should highlight text in this range in a distinctive way, and it should allow selection within the marked text. A text view must also maintain an insertion point, which is usually at the end of the marked text, but the user can place it within the marked text. The text view also maintains a (possibly empty) selection range within its text storage, and if there is any marked text, the selection must be entirely within the marked text.\nA common example of marked text appears when a user enters a character with multiple keystrokes, such as \u201c\u00e9\u201d, in an NSTextView object. To enter this character, the user needs to type Option-E followed by the E key. After pressing Option-E, the accent mark appears in a highlighted box, indicating that the text is marked (not final). After the final E is pressed, the \u201c\u00e9\u201d character appears and the highlight disappears.\n```\n. yes, it's union, but the motion event and button event has different offset of x/y member in the struct currently.\n```\n/ Mouse motion event structure /\ntypedef struct XBMC_MouseMotionEvent {\n    unsigned char type; / XBMC_MOUSEMOTION /\n    unsigned char which;    / The mouse device index /\n    unsigned char state;    / The current button state /\n    uint16_t x, y;  / The X/Y coordinates of the mouse /\n    int16_t xrel;   / The relative motion in the X direction /\n    int16_t yrel;   / The relative motion in the Y direction /\n} XBMC_MouseMotionEvent;\n/ Mouse button event structure /\ntypedef struct XBMC_MouseButtonEvent {\n    unsigned char type; / XBMC_MOUSEBUTTONDOWN or XBMC_MOUSEBUTTONUP /\n    unsigned char which;    / The mouse device index /\n    unsigned char button;   / The mouse button index /\n    unsigned char state;    / XBMC_PRESSED or XBMC_RELEASED /\n    uint16_t x, y;  / The X/Y coordinates of the mouse at press time /\n} XBMC_MouseButtonEvent;\n```\n. see this in CApplication::OnEvent():\ncase XBMC_MOUSEBUTTONDOWN:\n    case XBMC_MOUSEBUTTONUP:\n    case XBMC_MOUSEMOTION:\n      g_Mouse.HandleEvent(newEvent);\n      g_application.ProcessMouse();\n      break;\n. as the reason it not trigger problem, maybe because some struct auto align, the 3 bytes before the int16 x maybe auto aligned to 4 bytes?\nas the event type, I'd like to assert, but no assert in xbmc seems, so how about abort()?\n. well, I just return, updated.\n. then zoom/pinch should be first considered, since we can do the rotate by swipe any way.\n. got it. if windows decide then nothing we can do :)\n. Z: is very win32 problem, and people need to known for xbmc it only consider a path is dir when it suffix with slash, so.\n. docs updated, declare folder must end with slash or backslash.\n. xbmc judge folder only by the ends slash, that's the current rule, so what need to do is just declare it clear:\nfor using Xbmcvfs.exists, folder must end with slash or backslash.\nI did that in docs, so we should be good?\n. I can see in that commit, several utf8 convertion be wrong replaced to use system encoding.\none ascii encoding be replaced to use system encoding.\nand one place was using system encoding\nanyway, all these places should convert to utf8 string imo.\n. that commit unified code, but using wrong encoding.\n. CFString is unicode, I don't think it is not convertable to utf8.\nthe problem must be other where else when using the utf8 string, if it has problem, in coreaudio.\n. oh~~, finally we got the real reason, CFStringGetCStringPtr is not promise to return the expected string if it need more buffer (see the reference), that's the DarwinCFStringRefToString function later did.\nso we change to use DarwinCFStringRefToUTF8String will not cause the NULL result. now we can go?\n. current pr implement: \nfor ascii starting filter, match the filter to the space separated word beginning, until filter is fully consumed, matched.\nfor non-ascii starting filter, doing a strstr search to the target label.\nyes, there's no simple way to determine the beginning of a word, but keep the word match for ascii is still necessary, imo.\n. test case added. \nbut I didn't figure out how to enable gtest on osx, so not tested.\n. that's another question to whether remove word match for ascii word, and I just to fix it for non-ascii filter match.\nif you really care, I can limit the strstr match only for utf8 char with at least 3 bytes length (latin is 2 bytes utf8 chars) , then your case has unified behavior like before.\n. maybe we can limit the first char match point to:\n1. first char of an ascii or latin alpha word\n2. first char of a number\n3. any other characters\nthat means, the match point is not:\n1. an ascii or latin alpha char after an ascii or latin alpha char\n2. [0-9] after any of [0-9]\n. I tried that it compile xbmc and full my disk. I'm using xcode for build xbmc, so I can not do the gtest work currently.\n. updated to skip current latin word or number.\n. test cases added for word/number mixed label.\n. who eat the memory? why not stop it from source?\n. fixed and updated. now we support name=\"escaped_value\" style param in builtin functions.\n. I tried using SetRenderGUI on ios to replace SetInBackground, but has problems.\nbecause on ios we have play background feature, it may trigger some active window change on certain conditions, and the ActiveWindow code has some code in running in CGUIWindowManager::CloseWindowSync, which calling ProcessRenderLoop then there is some callback finally called to CApplication::Render(), that cause crash because of using gui functions.\nbesides, SetRenderGUI doesn't stop the screen saver, that may cause above window switch.\n. I try to guard CApplication::CheckScreenSaverAndDPMS() and CApplication::Render() with the render gui flag, then it seems works for music background play.\nthere is another risk is on iOS, the ui is in different thread than xbmc main thread, so the SetRenderGUI(true) call maybe not thread safe for iOS to use.\n. how about add condition guard by rendergui flag in CApplication::CheckScreenSaverAndDPMS() and CApplication::Render()? then it will work on all platform?\n. that maybe can be done by a dirty flag be handled before next render call? or add a method in ApplicationMessenger to do that.\n. then when user click a picture in the picture nav win, it will show a picture in fullscreen, and announce OnPause? I still think OnPlay make more sense for picture, they are playing, and we did announce them as OnPlay with speed 1.\n. we share the Announce with both picture standalone show and slideshow, currently OnPlay for both of them with speed==1. they are indeed same in these way:\nstandalone picture is a pausing slideshow without transaction, when user swipe/nav between pictures/slideshow, they are totally same (with my further pr). the only exception is when a slideshow is playing, user pause it, it will be a middle state of slideshow playing, not all of the region of picture are displayed in the screen, that's indeed an OnPause state, but when user switch to next picture/slideshow, the picture will fully displayed, then we should announce OnPlay with speed==0, when user click play button, the slideshow continue/start to play, announce OnPlay with speed==1, maybe you got what I mean from these. currently it always announce speed==1 when OnPlay so others won't known the real state of the slideshow after pause then swipe.\n. ah, it slipped in with an enhanced slideshow pr from me.\n. updated.\n. I just learned from the mess what it intent to do and do it in more proper code.\n2573 is standalone with the whole change set, but as a super set of slideshow fix branch, it is included here.\n. the reload on zoom code seems not be used for some time, I'd like to remove them.\n. do nothing in SetResume is not a good idea if it indeed need set the resume point, even if it does not support seek, should fail before that, rather than do nothing.\nremove the Range line will fix most problem. add some protocol option such as 'require_range=1' to fix the original problem server from addon side.\n. we are not depend on what addons do, that's totally because the stupid buggy server, we made a mistake try to fit the stupid bug server but broke other good servers, that's not correct. now it's time to revert, do things good server expects, and give buggy server an protocol option to let the addon fix it by itself.\n. the revert and require_range protocol option workaround version: https://github.com/xbmc/xbmc/pull/2640\n. maybe we should keep the pointer of CCurlFile in read state, then we can make it simpler.\n. thanks, fixed in https://github.com/xbmc/xbmc/pull/2644\nthe noseek is useless, should just set the seekable flag.\n. and when we have double read state (in double buffer pr), the seekable should be a common property of the requesting url, so I will change it back to the father class anyway in that pr and share the father class pointer in the state.\n. m_filepos may diff between 2 read state, m_filesize could be different if target file is self-increasing, m_seekable should always same, rather than keep them same, I will share them by put it back as CCurlFile's member and share the CCurlFile pointer in 2 read buffer PR.\nso you can also keep the m_seekable where it was and save the code changeset.\n. or, you can modify this PR to access the m_seekable from read state by\nm_pCurlFile->m_seekable then maybe we need not move the m_seekable into\nstate and then move it out?\n. but when we have double read session, not reason to maintain 2 seekable\nproperty in 2 read states. the seekable property is totally a property of\nthe target url, not the read state, from this point, it is exactly where it\nshould be currently.\n. why back reference is not good? read state is the inner class of the\nCCurlFile, which record the 'read state', but it has need to known some\nproperties of CCurlFile when it needs, e.g. m_seekable, and all other\nproperties is readonly and pre-set into the read state so we did not need\nto maintain them to keep the same value, but for this one it can change\nduring the 'read', we had to set it back to CCurlFile, a reference to the\nparent CCurlFile is not more ugly than copy the seekable value back to\nparent or another read state (when we have 2 read state).\n. I didn't implement the parent reference version, just implemented a no seekable set back version: #2675 how about it?\n. what's the 'ready-to-use methods' for the purpose? the RunSlideShow() method support dir only, not support single picture. the CGUIWindowPictures::ShowPicture() method support only the item index, not support show picture by the picture file path. did I missed something?\n. the first is json api, not easy to use by python script. the second is almost same with builtin function SlideShow().\nShowPicture is something different, it does not has display effect like the slideshow which may float/move/zoom the picture during display. show picture just show it and maybe for a certain duration and then switch to next if has next or exit if no next and no repeat, or just show it forever until user change or quit.\n. got it, we can reuse the RunSlideShow(). commits updated.\n. wait, not finished, it can pass gcc -c compile only mode, but not pass the link, need more fix, working on it...\n. updated, fixed now.\n. @alcoheca if this pr alone is not work, please post the log to somewhere let me see.\nthe only difference between this one and the @arnova 's one is that this one does not set seekable flag to false when retry without Range header, which should work so need log to make it clear.\n. @alcoheca any error, log is necessary to judge.\n. then we currently have no tester can confirm this pr do work?\n. ",
    "rsommer": "I'm building xbmc on gentoo/amd64 using gcc 4.5.3.\n. ",
    "flyser": "Well, first of all, the xbmc startup script (https://github.com/xbmc/xbmc/blob/master/tools/Linux/xbmc.sh.in) respects prefix, too.\nIt is also handy if one has a (stable) xbmc installation in /usr and a development version in /home/myuser/xbmc. You can not expect the xbmc script to be in PATH for the latter case.\nI don't see any disadvantages of this patch compared to the previous version?\nRegards,\nFabian Henze\n. Why dump them? It's too small to justify a seperate pull request.\n. I see, thanks for the explanation :)\nShould I (or rather: Can I) dump the change or will someone else do that? Should I file another pull request for the string change?\n. ",
    "s7mx1": "When xbmc do a pass-through device probe it should go through the available profile first and do a switch to a best matched profile according to the speakers setup.\nHere is the \"pactl list cards\" command output\n    Profiles:\n        output:analog-stereo: Analog Stereo Output (sinks: 1, sources: 0, priority. 6000)\n        output:iec958-stereo: Digital Stereo (IEC958) Output (sinks: 1, sources: 0, priority. 5500)\n        off: Off (sinks: 0, sources: 0, priority. 0)\n    Active Profile: output:iec958-stereo\n    Ports:\n        analog-output-speaker: Speakers (priority: 10000)\n            Part of profile(s): output:analog-stereo\n        iec958-stereo-output: Digital Output (S/PDIF) (priority: 0)\n            Part of profile(s): output:iec958-stereo\nIf output:iec958-stereo is not set as the default profile xbmc will have trouble finding the pass-through device.\n. ```\n--- a/xbmc/Application.cpp.orig 2012-05-25 12:10:36.000000000 +0100\n+++ b/xbmc/Application.cpp  2012-05-25 12:16:12.000000000 +0100\n@@ -1321,13 +1321,6 @@\n   {\n     int webPort = atoi(g_guiSettings.GetString(\"services.webserverport\"));\n     CLog::Log(LOGNOTICE, \"Webserver: Starting...\");\n-#ifdef _LINUX\n-    if (webPort < 1024 && geteuid() != 0)\n-    {\n-        CLog::Log(LOGERROR, \"Cannot start Web Server as port is smaller than 1024 and user is not root\");\n-        return false;\n-    }\n-#endif\n bool started = false;\n if (m_WebServer.Start(webPort, g_guiSettings.GetString(\"services.webserverusername\"), g_guiSettings.GetString(\"services.webserverpassword\")))\n\n@@ -1345,6 +1338,16 @@\n       CZeroconf::GetInstance()->PublishService(\"servers.jsonrpc-http\", \"_xbmc-jsonrpc-h._tcp\", g_infoManager.GetLabel(SYSTEM_FRIENDLY_NAME), webPort, txt);\n #endif\n     }\n+    else\n+    {\n+      #ifdef _LINUX\n+      if (webPort < 1024 && geteuid() != 0)\n+      {\n+        CLog::Log(LOGERROR, \"Cannot start Web Server as port is smaller than 1024 and user is not root\");\n+        started = false;\n+      }\n+      #endif\n+    }\n #ifdef HAS_HTTPAPI\n     if (g_settings.m_HttpApiBroadcastLevel >= 1)\n       getApplicationMessenger().HttpApi(\"broadcastlevel; StartUp;1\");\n```\n. Tested it against with the latest xbmc-rbp\n. bobo,\nThanks for your great work.\nOn May 31, 2012 11:46 PM, \"bobo1on1\" \nreply@reply.github.com\nwrote:\n\nFixed\nhttps://github.com/xbmc/xbmc/commit/ccb09baddf100f055360fe4a8918559f78314c25\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/1012#issuecomment-6049584\n. There is no issue sub menu on xbmc-rbp branch. Where should I submit issues for raspberry pi branch?\n. I have updated the patch so it will only set the latency if its defined by  palatency under audio section in advancedsettings.xml. The unit is ms and the range is from 1 to 10000.\n\nI am not here to say that everyone should adjust audio latency for their pulse system however it clearly works better for my system if I do set the latency (latency reduced in half). Here are some test results:\nSystem without user adjusted latency\n```\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c: Created input 71 \"audio stream\" on alsa_output.usb-ACTIONS_USB_Audio-00-Audio.analog-stereo wi>\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     media.name = \"audio stream\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.name = \"XBMC\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     native-protocol.peer = \"UNIX socket client\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     native-protocol.version = \"26\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.id = \"4326\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.user = \"pi\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.host = \"raspbmc\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.binary = \"threaded-ml\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.language = \"C\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.machine_id = \"ce5fa3bfaca6284a88c9c7955074a31a\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.session_id = \"ce5fa3bfaca6284a88c9c7955074a31a-1353682846.779461-19100>\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     module-stream-restore.id = \"sink-input-by-application-name:XBMC\"\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] protocol-native.c: Requested tlength=272.11 ms, minreq=20.00 ms\nNov 23 15:01:13 raspbmc pulseaudio[1852]: [pulseaudio] protocol-native.c: Final latency 504.22 ms = 232.11 ms + 2*20.00 ms + 232.11 ms\nSink Input #71\n    Driver: protocol-native.c\n    Owner Module: 4\n    Client: 34\n    Sink: 1\n    Sample Specification: s16le 2ch 44100Hz\n    Channel Map: front-left,front-right\n    Format: pcm, format.rate = \"44100\"  format.channels = \"2\"  format.channel_map = \"\\\"front-left,front-right\\\"\"  format.sample_format = \"\\\"s16le\\\"\"\n    Mute: no\n    Volume: 0:  13% 1:  13%\n            0: -53.33 dB 1: -53.33 dB\n            balance 0.00\n    Buffer Latency: 120136 usec\n    Sink Latency: 225664 usec\n    Resample method: ffmpeg\n    Properties:\n        media.name = \"audio stream\"\n        application.name = \"XBMC\"\n        native-protocol.peer = \"UNIX socket client\"\n        native-protocol.version = \"26\"\n        application.process.id = \"4326\"\n        application.process.user = \"pi\"\n        application.process.host = \"raspbmc\"\n        application.process.binary = \"threaded-ml\"\n        application.language = \"C\"\n        application.process.machine_id = \"ce5fa3bfaca6284a88c9c7955074a31a\"\n        application.process.session_id = \"ce5fa3bfaca6284a88c9c7955074a31a-1353682846.779461-1910050262\"\n        module-stream-restore.id = \"sink-input-by-application-name:XBMC\"\n```\nSystem with user adjusted 100ms latency\n```\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c: Created input 75 \"audio stream\" on alsa_output.usb-ACTIONS_USB_Audio-00-Audio.analog-stereo with sample spec s16le 2ch 44100Hz and channel map front-left,front-right\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     media.name = \"audio stream\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.name = \"XBMC\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     native-protocol.peer = \"UNIX socket client\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     native-protocol.version = \"26\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.id = \"4476\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.user = \"pi\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.host = \"raspbmc\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.binary = \"threaded-ml\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.language = \"C\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.machine_id = \"ce5fa3bfaca6284a88c9c7955074a31a\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     application.process.session_id = \"ce5fa3bfaca6284a88c9c7955074a31a-1353683035.543632-1375288675\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] sink-input.c:     module-stream-restore.id = \"sink-input-by-application-name:XBMC\"\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] protocol-native.c: Requested tlength=272.11 ms, minreq=20.00 ms\nNov 23 15:04:24 raspbmc pulseaudio[1852]: [pulseaudio] protocol-native.c: Final latency 272.11 ms = 116.05 ms + 2*20.00 ms + 116.05 ms\nSink Input #75\n    Driver: protocol-native.c\n    Owner Module: 4\n    Client: 38\n    Sink: 1\n    Sample Specification: s16le 2ch 44100Hz\n    Channel Map: front-left,front-right\n    Format: pcm, format.rate = \"44100\"  format.channels = \"2\"  format.channel_map = \"\\\"front-left,front-right\\\"\"  format.sample_format = \"\\\"s16le\\\"\"\n    Mute: no\n    Volume: 0:  13% 1:  13%\n            0: -53.33 dB 1: -53.33 dB\n            balance 0.00\n    Buffer Latency: 156054 usec\n    Sink Latency: 82084 usec\n    Resample method: ffmpeg\n    Properties:\n        media.name = \"audio stream\"\n        application.name = \"XBMC\"\n        native-protocol.peer = \"UNIX socket client\"\n        native-protocol.version = \"26\"\n        application.process.id = \"4476\"\n        application.process.user = \"pi\"\n        application.process.host = \"raspbmc\"\n        application.process.binary = \"threaded-ml\"\n        application.language = \"C\"\n        application.process.machine_id = \"ce5fa3bfaca6284a88c9c7955074a31a\"\n        application.process.session_id = \"ce5fa3bfaca6284a88c9c7955074a31a-1353683035.543632-1375288675\"\n        module-stream-restore.id = \"sink-input-by-application-name:XBMC\"\n```\n. \"Set PA_STREAM_ADJUST_LATENCY if you want to control the overall playback latency for your stream\"\nReference is here http://apidocs.meego.com/1.0/platform/pulseaudio-0.9.21/streams.html. \nThis patch will be very useful if your audio device has high latency (usb audio devices for example) and you would like to reduce the overall playback latency. See the discussion on vlc here http://mailman.videolan.org/pipermail/vlc-commits/2012-March/013835.html\nI am able to half the sink-input latency from 226ms to 82ms so a big improvement for me.\n. Let me stress that this patch is now optional in the sense that latency will only be adjusted if the end user put an entry in advancedsettings.xml. So if people like you are happy with how xbmc handles its audio latency then this patch will not affect you in any way. \nXBMC is used by all sorts of people in all sorts of way and on all sorts of devices. For a lot people they are fine if there is a delay between the play button being hit till the sound actually heard, but there will always be some that want minimal delay and that's why ASIO or similar low latency audio subsystem exists. This patch gives these people a way to be in control of the overall latency to their like due to their setup or requirements.\nReducing the latency/wait is always an improvement in my book as it improves the user experience (read more responsive). You or others may or may not see it due to difference in hardware setup or expectations.\n. @bobo1on1 \nThat buffer does not take hardware latency into consideration. If your hardware has low latency I would say there is absolute no need to adjust latency but unfortunately that's not always the case be it interface latency or buffer inside hardware.\npulseaudio utitles like pacat/paplay gives you the exact option to adjust the overall latency \n```\npacat --help\n--latency-msec=MSEC               Request the specified latency in msec.\n```\n. To clarify: AE's volume range is [-60,0]dB and PulseAudio's volume range is (-inf,0]dB.\n. The latest file is here\nhttp://freedesktop.org/software/pulseaudio/doxygen/volume_8h_source.html\nLooks like its been removed in the latest header file. I am running pulseaudio 2.1 and if I set the sink volume to 0% I do get the db value to be -inf.\n. The  (hardware) volume range from 0 to 1 is fine.  The problem lies in\nCApplication::SetHardwareVolume\nwhere hardware volume is converted to db using CAEUtil::PercentToGain then converted to liner value using CAEUtil::GainToScale(dB). 60dB are hardcoded in these two functions.\n. Will do tomorrow. Its midnight here.\n. Had to revert the 2 patches and did a rebase to clean it up. Will add back the other 2 patches shortly. The above patch added CAEUtil::PercentToPulseVolume to do the conversion which should work for any pulseaudio version that has PA_VOLUME_NORM defined.\n. @bobo1on1 @topfs2 \nPlease review the code.\n. @arnova\nI have updated CPulseAE::GetAudioDevice to use if-else instead of switch. \n@bobo1on1 \nAre you ok with these patches?\n@CurlyMoo\nThis is to fix AE/PA bugs and has nothing to do with omxplayer at all. Ask @huceke nicely or code it yourself if you want AE on raspberry pi.\n. Did a rebase\n. @arnova \nFixed.\n. @fritsch\nCould you have a look at this pull request?\n. ",
    "fetzerch": "First of all: Thanks for pulling my first (even so very small) contribution to xbmc :-)\nWhen I noticed that the IPTC parser wasn't working with newer jpegs, i had a look into the sources and saw that the code was taken from http://www.sentex.net/~mwandel/jhead/. I updated only the IPTC code according to the latest version and roughly verified the changes with http://www.codeproject.com/KB/graphics/iptc.aspx?msg=614530 \nThe relevant (but hard to read) spec would be the Photoshop File Format which references IPTC IIM:\nhttp://www.adobe.com/devnet-apps/photoshop/fileformatashtml/PhotoshopFileFormats.htm#50577409_pgfId-1037504\nhttp://www.iptc.org/std/IIM/4.1/specification/IIMV4.1.pdf\nMy pictures are working fine of course but indeed this should be tested by a few other users. So it's probably better to merge it after the feature freeze.\n. done\n. Thanks for reviewing :-)\nI just updated the code according to your comments\n. In my opinion it's correct to apply the same bookmarking rules also for the backend resume point.\nOne can still modify the advanced settings (ignoresecondsatstart, default 3min) to change the behavior.\nIt's then kind of the same behavior that you get for normal movies when using a distributed setup with mysql.\nHowever, if there is a reason to treat recordings differently, it might be modified better here: CApplication::UpdateFileState (https://github.com/xbmc/xbmc/blob/master/xbmc/Application.cpp#L4663)\n. Done. The bookmark read from the backend was also lacking the duration.\n. Thanks, the files are updated according to your comments. \nSplitting SaveFileStateJob into h/cpp shouldn't be done in this PR, I guess?\nI also squashed down the cleanup commits.\n. I'm happy with the proposed solution and will add the required changes to the mythtv addon.\nIf you're going to read the exact value again when opening the context menu, wouldn't it be better to use a bool bHasLastPlayedPosition for the resume indicators?\nFor myth, I can get the information if there is a bookmark quite easily when querying the list of recordings.\nBut the exact values would still require expensive database calls. (Thus it could be speeded up in single query where as currently it uses one query for each recording)\n. Sure, done. Due to the change in PVR_RECORDING, addons need to be recompiled. I guess that means we need to bump the version?\n. Moved the skin change to a separate PR. However it's somewhat related. Without that the fanarts aren't shown.\n. done\n. @elupus Nope, this just affects recordings (respectively objects where HasVideoInfoTag() returns false). Then it calls g_application.m_pPlayer->GetPlayingTitle() where dvdplayer gets the title from teletext.\n. Thanks so far! I've splitted the vxcproj changes and corrected the return type of XBMC_get_file_chunk_size (according to CFile and CAddonCallbacksAddon it should be int instead of int64_t)\n. @opdenkamp I'd like to add a few more API functions that are needed for the mythtv addon (FileExists, FileDelete, FileStat, CreateDirectory, DirectoryExists and DirectoryDelete). Is it okay to add them here as a separate commit? Cause they also depend on this rework here.\n. Enabling debug info for libXBMC is also part of my addon rework code in #1472. I'd suggest removing it here.\n. Sry, didn't look closely enough and thought it was forgotten after the big pvr merge.\nCould you help me getting the fanarts shown for recordings? I think there are just a few lines missing in MyPVR.xml.\n. @JezzX Thanks, I've updated this PR after testing your propsal with #1455. Works fine!\n. @opdenkamp since this is now closely related to the recording images support in #1455, any chance we get this in too for october? (its not assigned yet to the milestone)\n. Works fine for me and also shows the recording fanart correctly.\n. I have tested this with my recordings (MythTV is also suffering from this).\nThe PR fixes jumping and fast forwarding. Unfortunately it breaks the length/endtime of the video.\n(a show that is 1:15h shows up as 27:15h for me)\n. Your right, sorry it shows 27:45, so its also 26:30 off.\nSurprisingly it shows this for almost all videos. And actually most of them were playing/jumping fine even without your patch.\nThanks for checking. Let me know if you have something to test.\n. @axmhari I tried it with 8261ee095436ebed26c38ed85d4742deadbd6e5c, but unfortunately, that doesn't work at all.\nThe length is still 27:45, recordings stutter and skipping always plays the recording from the beginning.\n. @axmhari While preparing a file for you, I cleaned my repo and rebuilt everything... You're right, 8261ee0 works perfectly fine. Did as well test it on my second box, works for both win & linux.\nThanks for fixing it. Will this go in directly to xbmc or later as upstream patch?\n. @axmhari @FernetMenta \nAny chance that an updated PR including 8261ee0 could make it into Frodo?\nWith having PVR integrated I'd expect more people to run into this issue with non seekable mpeg-ts files.\nSince there's no reference here to trac, yet: The issue is also reported in those 3 tickets:\nhttp://trac.xbmc.org/ticket/6614\nhttp://trac.xbmc.org/ticket/12267\nhttp://trac.xbmc.org/ticket/13133\nAs FernetMenta stated in #1227 PCR wraps happen quite regulary (every 26h on TV).\n. This PR somehow broke showing the watched overlays for recordings in the recordings view. At least when using a pvr backend that supports this. Haven't fully investigated yet. Any hint what could be causing this? Do we have to adapt PVRRecordings::GetContents(...)?\n. Thanks for the explanation.\nHow about something like https://github.com/fetzerch/xbmc/commit/20c2ad51b09e9a8f17a9a0d1475e5c2f66eab75d\nBut you know the database/ui code better than me. If you have something, I'd be happy to test it.\nNot sure why, but I think the last played position which displays the resume indicators is not affected.\n. @dteirney Thanks I fixed the logging. For the scene and the logging in PVRClients.cpp I added inline comments here:\nhttps://github.com/fetzerch/xbmc/commit/18c9e425e919b0b21859ac0025a948b0b306570f\n. @opdenkamp: sorry, you're right. now the database is used if it's not supported to read the play position from the addon.\n. I'm not convinced anymore that this is a good solution.\n1. Do we still improve performance after the recent changes? The values seem to be cached in the db now.\n2. Having 2 different methods for the same thing is not really a nice API.\nImo, we could also remove GetRecordingLastPlayedPosition and only use the field in PVR_RECORDING?\nI don't know if this works for all addons. For MythTV, we get notifications as soon as a recording has been changed (for example another frontend plays the recording). We cache all recordings in the addon and don't have to query the backend any more. We would then call TriggerRecordingsUpdate so that the value in xbmc gets updated.\nThat way, the API would be more consistent as it would match the API for the play count.\nAny thoughts? I will try to rebase it at the weekend so that we can see if it makes a difference performance wise.\n. Ok. As long as there are addons that don't get notified about such changes, it is needed.\nI've rebased it and tested it with MythTV.\n. ",
    "peprasetya": "Is there any sample implementation to the websocket at the javascript side?\nAs I try to connect to ws://(ipaddress):9090/ the websocket is not connected.\nThere is indication that the TCP connection was created, but no more handshake between XBMC and the browser\nNoting, I Use nigthlies xbmc-20111210-410c947 on OSX\nAnd Browser that I used is Chrome 16, Firefox 9, iOS 5.0.1\n. Ohh ok, I was not sure about the status and thinked that it's already on nigthlies.\nI'm just updating my add ons and trying some new posibilities.\nI'm already used it in my other 2 projects, but it's against Jetty WebServer.\nSo I was wondered about the url of the websocket that should to be. \nNow, I'll wait for next year. for Eden I will strict to Ajax.\n. May i know whatare the minors?\nOn Mar 19, 2012, at 10:25 AM, jmarshallnzreply@reply.github.com wrote:\n\nBy no means a thorough review, but looks good on the whole, just some minors.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/511#issuecomment-4567296\n. \n",
    "thezoggy": "running latest nightly windows build, when sending: {\"id\":1,\"jsonrpc\":\"2.0\",\"method\":\"JSONRPC.Version\"}\nI see it hangs on responding with xbmc's logs showing:\n22:19:57 T:3860   DEBUG: JSONRPC Server: New connection detected\n22:19:57 T:3860    INFO: JSONRPC Server: New connection added\n22:19:57 T:3860    INFO: WebSocket: missing Sec-WebSocket-Version\n. would this by any chance also make it so that someone could mark something as watched/unwatched while the library update process is going on? (or as a compromise allow it to be queued?) \n. @GabrielL well what about queuing the requests then? if you watch a show while the library update is going and you finish the show.. it doesn't get marked as watch. you'd think that it would mark it when its done.....  I understand locking the db when the library update is actually updating/adding new info.. but just when its scanning its locked.\n. @GabrielL rebase please?\n. ",
    "AdamLaurie": "Yep, I can confirm that it compiles with the whole thing commented out instead of only dropping it when using external ffmpeg libs so that would seem to make sense...\n. ",
    "dominikh": "Okay, in rare cases the filter won't be reset properly and I cannot figure out why :/\n. ",
    "blades": "i suspect that this will need tweaking a bit to make it do both of those, as i've not been able to work out how to test it properly yet (i can start it, stop it, and query the library via mediafrontpage quite happily, but beyond that i'm not really sure how to test it fully) but if nothing else, it'll probably make a decent starting point.\n. @theuni going down the lib route is definitely the preferred long-term solution to this.  however, that's a long-term solution as opposed to something available right now, and on top of that there wasn't much interest in making that happen right at this moment in time.  the original pull request i created was a quick hack to get something available with the bare minimum of changes such that we could have a working server mode available here and now that wasn't going to need a massive re-architecting of the mainline codebase.  i fully agree that it's not the ideal solution, but it works, and it's available now with only a few minor changes to the mainline codebase that don't impact anything else.\nultimately, so long as there's a server mode, that's the important thing.  people have been begging for this for a very, very long time, and i saw a simple and quick way of getting it working.  personally, i don't particularly care how it's done, just that it is done.  this was within my abilities; shared libraries and building an entirely new server application to use them isn't.\n. @theuni the only downside is that you've now got a separate application: it's not a server-mode within xbmc, but instead an entirely new application using a shared library.  to be honest, that's not even remotely a problem, but it's not something that i had the temerity to suggest with my changes :p\nmy only intention with this was to provide a quick-win that could be in use, and indeed it's been in use for the last few months with a hardcore bunch who were happy to compile it for themselves on the original thread here: http://forum.xbmc.org/showthread.php?tid=114612\nnow that there's a better solution that does this properly, i'd much rather see this brought up to a usable state instead.  yeah, i'm a little gutted that i don't end up actually contributing to the project, but i can console myself with the thought that i've poked and prodded it enough to get an xbmc server onto the radar!\nto be honest, it'll be nice not to have to be constantly defending the approach i took with this, too.  all i wanted was a quick win to give the dev team space to do it properly while giving those who wanted a server mode something usable to play with.  \nanyway.  what needs to be done from here to get your new branch into a state whereby i can give the thread something to use?  how would i go about running your headless version?\n. well, i've got an ego somewhere around here if there's one missing :p\ni have to admit, i know very, very little about C++.  however, there's never a bad time to learn some new skills!  i may need a little help to get things moving, though - is there a better way to communicate with you than via here?  i'm happy to pass over my email address to you to take this off here, for example...\nas to gui reliance, we did find a few bits for database updates (http://forum.xbmc.org/showthread.php?tid=114612&pid=985613#pid985613):\n\"You have to allow creation of two windows in Application.cpp:\n- g_windowManager.Add(new CGUIDialogMusicScan); \n- g_windowManager.Add(new CGUIDialogVideoScan);\"\ni also disabled some functionality in the builtins class when running as a server, just to be on the safe side, too.\n. ",
    "alanwww1": "Sorry I just realized that it is already commited.\nThanks.\n. Thanks Spiff !\nSorry, by first commit you mean the one which makes the token search case insensitive ?\nSo can you pull that in to master and Eden ? And also can you pull the second one in for master and leave it out from the Eden branch ?\nI know it is late. Sorry.\nThx\nCheers, Alan\n. Thanks, Cheers !\n. @ronie \nIt is great news. I was trying to checkout the API documentation, but no luck yet, to get a localized result. Maybe the database is not prepared yet. Have you had luck with it ? Do you know where can we make the translations fro the English strings for the Wunderground ? Or do they already have everything translated ?\nLet me know if you have any news or if I can help you in any way.\n. @ronie \nEdit: Sorry I was checking without an API code. Now I made an API request in Hungarian and it works perfectly ! All translations are there !\nThis would be great to use it. In this case we won't need any translated strings in strings.xml\n. Made the missing weather string translatable c670e7556420ee2763c23719b2c7e5277fecc6fb\n. I've pulled in the part which is tested ok. Please open up a new PR if the langcode tests ok. Thanks, Cheers\n. Thank you, Cheers !\n. Commited.\nThanks. Please next time write \"updated: Greek translations for core strings\" if possible.\nCheers\n. Thanks, cheers !\n. Cheers !\n. Thanks, Cheers !\n. Thanks, Cheers !\n. Thanks Martijn and of course Tom for the translation.\nCheers !\n. Hi, I think I will pull this in, with only one commit not in three. I'll merge them at my local git repo and push it as one.\nJust to keep the history as clean as possible.\nThanks for the translation,\nCheers, Attila\n. No problem. I'll handle it. :-)\n. Commited, thanks,\ncheers, Attila\n. Thanks, Cheers\n. Hi !\nPlease reopen this pull request to xbmc MASTER not EDEN. All commits go to master first. After that we will backport to the Eden branch.\nThanks, cheers\n. Added to master with a separated PR, so I am closing this one.\n. Thanks, cheers\n. Thanks, cheers\n. Thank, cheers !\n. Thanks, cheers\n. Thanks Martijn !\nCheers!\n. Thanks, cheers !\n. Thanks, cheers !\n. Hi Danny3 !\nYes you've understand correctly. If you have the pull request from a branch. You can still work on other things while the pull request is actually getting merged. here is how I do it. It is plain simple.\ngit checkout -b yourbranchname master\ngit push origin -u yourbranchname\nTo switch between branches, just\ngit checkout master\ngit checkout yourbranchname\nTo delete the branch:\ngit branch -D yourbranchname\ngit push origin --delete yourbranchname\nAlso here is a simple guide which could help:\nhttp://rogerdudler.github.com/git-guide/\nhere is a more deeper one:\nhttp://help.github.com/remotes/\nCheers, Attila\n. Hi Danny3 !\nThe branching of your fork is now really perfect. :-)\nUnfortunatelly there are some files in your PR which has an upstream repository, where they are getting into xbmc using the addon download system. http://xbmc.git.sourceforge.net/git/gitweb-index.cgi\nSo all these files have to be updated upstream, so they don't get overwritten with the very firs addon update. These files have to be send over the mail-list of xbmc addons. The rest of the files are commited here:  8b19ec1a7d4e4ce7958cc0f4e677537f4ce31f82\nWe know this is a bit complicated for the translators, therefore we are working on a completely new system where ALL translations will be collected to one place and multiple translators and groups can work on them. But this will be implemented after Eden is going out.\nI'd suggest waiting for the new translation system with the left out files and the other addon's translations.\nThank you for your work, cheers, Attila\nClosing this PR\n. Hello !\nSorry but the changes are except for Confluence should go into the addon repository not master.\nI will post them there and make the change for Confluence in master, but I am closing this PR now as I can not pull it the way it is.\nThanks, cheers, Attila\n. That is no problem. We will introduce a completely new way of translation handling pretty soon.\n. Thanks Ronie !\n. Yes, looks strange. Did you actually change 409 strings ?\n. Pulled in. Thanks, cheers !\n. Thanks, but please with the next update wait for the new translation system we are introducing.\nCheers, Attila\n. Hi !\nThanks for the update.\nIf you want to backport some changes to the Eden branch for the service release, could you please separate the changes intended to Eden and the completely new changes for GIT ?\nOr just let me know if nothing should go into the Eden service release, than I'll just pull this in.\nThanks,\nCheers\n. I cherry picked the ones for Eden: https://github.com/xbmc/xbmc/compare/14feb09...30a8c71\nPlease check if it is Ok like this.\nYou can make every pull req for master. I will cherry pick the ones which should be going into Eden.\nThanks.\n. Hi !\nThanks for the translation, but please exclude the metadata changes as they should go into the addon repo posting them onto the xbmc addon mailing list. Also please read this:\nhttp://forum.xbmc.org/showthread.php?tid=126925\nThanks, cheers !\n. I cherry picked the ones belong to master and Eden branch and commited.\nThanks, cheers !\n. No problem :-)\npulled and backported. Cheers\n1d27a2960838a802f1dbbe6710793c69e9de6103\n. Please note this:\nhttp://forum.xbmc.org/showthread.php?tid=126925\n. Hi,\nCould you please re-open this PR against master ?\nThanks, cheers !\nClosing this now.\n. If your PR for master included the corrections for Eden I will backport it.\nThe normal process is to have the commit in master and the ones which are also for Eden, we cherry pick and backport to Eden Branch. So the best is if you separate the commits in the PR for MASTER, the changes for just master and the changes for Eden. This way I can cherry pick the commit intended to Eden.\nThis time I will cherry pick the whole commit you had for master.\n. It is OK. Thanks for the translation, but please take a look at this: http://forum.xbmc.org/showthread.php?tid=126925\nThanks, Cheers\n. @anssih: Thanks :-)\n. Big thanks for the review and comments Jonathan !\nI am a little inexperienced, but I am getting into it :-)\nYou found some really good points for improvements, so I'll modify this accordingly. Thanks for the help.\nJust a few questions (sorry if they are noob ones :-) )\n- Can someone help win the OSX project file additions ? Or is there just an easy pattern how I should include the header and cpp files ?\n- If I make some modifications, this will appear as a new commit when we merge this. If I do some more modifications, with more commits, the main history would look a little ugly compared to one or a few well separated combined commits. Should I than open up a new PR with some clean commits ? Or is there a way to \"combine\" these commits in the PR so when we merge into master they appear as one ?\n- The conversion tool and other helper scripts and of course all current and updated translations, I would like to keep in a translation github repo within the main xbmc github project (if possible)\n- I'll make some further question next to your comments if you could also check them.\n- Is the strings.po file format look ok this for you ? I can still modify that if you want. The converter tool I made in a way that ALL info from the xml file is preserved. Even the comments between lines and even the comments for a particular id entry. I'll make some screenshots how it looks in Transifex. I'll put it up to the thread I made.\n- I made some speed tests with the TinyXML parser and the new PO parser. It turns out that this new parser is twice faster that the TinyXML one generally and 4 times faster for the Weather tokens :-) I think it is a good \"side effect\"\n- Isn't the function commenting in the POUtils.h file sufficient ? Or should I make it in another form ?\nThanks for the help again,\nAttila\n. @mad-max: Thanks, i'll fool around.\n. @Jonathan\nIf I can change things today, can this go in in this merge window ?\nWould be really good, so users could start testing.\nOf course I would need help for the OSX project file. Next time I'll set up aon OSX build environment in a virtual machine (if it is working)\nThanks\n. @Memphiz: Thanks for the help.\n. Guys I am reworking things to use standard string functions instead of custom char manipulation.\nHope it won't degrade performance much. I will make measurements.\nSomething else:\nDoes my function/variable naming scheme look OK, or are there any names that need changing ?\nThanks, cheers\n. I am closing this because I have a reworked version here:\nhttps://github.com/xbmc/xbmc/pull/910\n. Sorry, but I just noticed this :-(\nStrings look good in the PO file. Just please delete the strings.xml file as it is deleted in master already.\n. Thanks for all things. Most of them I figured out myself already. I changed all things and rebased it for the latest commits. Now push is rejected because of my local rebase. Should I make a new branch and make a new PR or just force push to this branch ?  But what happens with the comments and all after that ?\nThanks\n. I created a new PR. Closing this.\nhttps://github.com/xbmc/xbmc/pull/917\nThanks for all the suggestions. Performance even got better and readability is a lot better now.\n. Thank you guys for all the help ! I'll be a lot wiser next time.\nNow I've done a force push with the new and rebased code.\nHope everything is ok now.\nLet me know,\nCheers !\n. Thanks :-)\nI make a final check on WIndows (if all the last corrections compile OK)\nAlso I make a new thread about the new format for all Devs to know how to use it etc.\nThank you for the help again !\n. @elupus:  I'd test it on Linux, just tell me what to look at or what to pay attention for.\nThanks\n. Well I guess you missed this one :-)\nhttp://forum.xbmc.org/showthread.php?tid=126925\nNevertheless I'll try to handle this convert it to the new format and commit later.\nThanks,\nCheers\n. No problem. I solve it.\nThanks for the translation.\n. Converted and commited here: 2cd1b7c99802e74d0647965623888cacdfa8498f\nNex time, please use the web based tool we'll introduce soon.\nThanks, cheers, Attila\n. It is a change in Confluence skin. You can test it with running it with an old xml file. Same thing happens.\n. OK. Sorry.\n I thought it was pretty safe stuff with no necesarry to review.\nHope it is not a problem.\n. @JezzX \nThanks for the comments. I was also thinking about these two points before:\n1. The whole gettext system relies on a unique msgid which is ALWAYS the source string. This is what it connects things together. Using a number here would totally screw things up, at the translation system in a way that translators would only see a number at the translatable field. Also using the source string at the msgid field ensures that in the future we'll be able to use non numeric-id based gettext calls, pluralized gettext calls and so on. So there is no real possibility to use the old xml id in the msgid field (at least we would loose the whole point of the system). The msgctxt field tuns to be an ideal place for it I think.\n2. Using a \"#\" character in the msgctxt fields befiore the numeric id, would be good, so that in the future, when we'll have non-numeric-id based calls possible, we could write an msgctxt message starting with any number. Maybe it is not so important, but this way the devs don't have to pay attention to this all the time.\n. Thanks for the understanding in the format change.\nAbout the text based gettext calls:\nI'll make a big discussion period for that, when all things are working for translations.\nWe can find the best way to do things, which will be good for everyone.\nWhatever we do, will be optional. So everyone will be able to use the numeric IDs if he prefers.\nMy first thought here, was to leave the numeric ID based calls for skins at least. But if we can find a good solution AND it makes skinners' life easier we can implement anything we found out.\nBut as I said I really plan to make a BIG discussion with the team on that. :-)\nThanks!\n. Can I pull this in, or should I wait for it until the merge window ?\nMy idea is to pull it in and I can help all other PRs to check and correct if the language files are ok in them, so that they get finalized until the new merge window is open.\nFor example I saw that Lars has an open PR with still XML files in them (LibCEC).\nThanks !\n. Hi, commited here: 61bfddc87c547063025805299f4556634e93d740\nPlease do NOT edit this file directly. Okease use transifex.net online web based tool to make translations. The project will start in one week.\nThanks, cheers, Attila\n. Hi !\nYou can force update your branch when you are finished. That will also update this pull request.\nThanks for the work !\n. Just one question: So do we leave the strings in the core strings.po file ?\nWouldn't it be better to just pull them out to the addon ?\nIt is also interesting if it is a common situation, that we are having a lot of strings in the core strings.po file which belong to addons or skins AND not used at all by xbmc core ? There is a thread ( http://forum.xbmc.org/showthread.php?tid=132639&pid=1119545#pid1119545 )  going on about removing unused strings if possible. This was already done for Confluence( 8913d21fc50cc8d409427abc63eafb4ef2a97 ), but there, it was safe to do. \nThanks for the help !\n. Ok. Thanks for the info.\nAnd how is the general situation ? Do you think we have a lot of strings in core used by addons ? Should we leave them in there, or move them out to the addons ?\n. What we could do is prepare a PR with the strings intended to be removed, along with an announcement to addon developers to ask their help to review their addons if they have some strings to add to their own addon strings which will be removed. After a month than we can pull in that PR to actually delete the strings.\nThere is surely 500+ or even much more unused strings out of 2200. That is really too much.\nOppinions @cptspiff , @JezzX, anyone else ? \n. @jmarshallnz \nWhat we can still do is to expand the search for used strings to all official addons and skins and come up with a list like that. After that we can still narrow this list to really just kill the ones which are obviously some leftovers from old code.\nWhat do you think ?\nps.: sorry for hijacking this PR with this :-)\n. @ronie thanks for the info. Also the translations got moved ? If not, I can help out with that.\n. I really support the idea of moving wheather strings to the addons. the only problem at the moment is they are used as tokens which is we search to find an id to get the localized strings.\nIt is in https://github.com/xbmc/xbmc/blob/master/xbmc/utils/Weather.cpp and currently hardcoded to use the main strings.po file. This is a problem, because strings are so mixed up and IDs are limited, it is divided into several blocks:\nif (PODoc.LoadFile(\"special://xbmc/language/English/strings.po\"))\n```\ndefine LOCALIZED_TOKEN_FIRSTID    370\ndefine LOCALIZED_TOKEN_LASTID     395\ndefine LOCALIZED_TOKEN_FIRSTID2  1396\ndefine LOCALIZED_TOKEN_LASTID2   1450\ndefine LOCALIZED_TOKEN_FIRSTID3    11\ndefine LOCALIZED_TOKEN_LASTID3     17\ndefine LOCALIZED_TOKEN_FIRSTID4    71\ndefine LOCALIZED_TOKEN_LASTID4     89\n```\nSo all in all it would be nice to clean up this mess somehow.\nIt would also be good because different weather addons would need different tokens to search for.\nAlso as I sidenote, as I know weather underground now supports results localized. @ronie could know a lot more on how this is standing.\nIf we decide to move the strings (at least the tokenized ones) out to the addon strings, just let me know, becaause I think I can find a solution to that.\nAnother sidenote is that we still have a lot of other untranslatable strings for weather underground. For example \"chance of\" which is really horrible to look at translated to something like \"chance of es\u0151\" in Hunfarian :-)\n. Unfortunately the problem does exist on motherboards equipped with Intel GPUs. Even with newest kernels.\nI started debugging the problem and it seems that in certain timing situations with full screen mode change the crash is sure.\nIt is also a problem on Unity and KDE in case the user turns on full screen desktop redirecting.\nThe crash occurs when the full screen change xrandr call is issued in xbmc/windowing/X11/WinSystemX11.cpp\nI realized that putting some timing waits around the function call RefreshGLXContect() helps.\nI used timings like:\nglFinish();\nglxSwapBuffers(m_dpy, m_glWindow)\nI hope someone can pick this up to solve it. I'll be glad to do it, but still no time. I am working on the translation system at the moment.\n@r-gaia-cs please do open up a ticket so we can start discussions and solutions there. Thanks.\nCheers, Attila\n. Hi !\nThanks for noting. Please join the Russian translation group at https://www.transifex.com/projects/p/XBMC-Main-Frodo/\nYou can correct the problems there and they will be pulled here soon.\nThanks, Cheers,\nAttila\n. @mad-max Thanks for the review. Your corrections on Transifex will be pulled soon. Cheers !\n. @NEOhidra The occurence- and other comments are only in the English file and of course in Transifex database. Every comments are cleaned from the freshly pulled non-English language files.\n. @mad-max This PR has to be re-merged, as the PVR strings interfere with these PO files. I'll try to do it as soon as possible.Probably this week. Also with the new strings I'll update Transifex.\n. @MartijnKaijser \nThanks for the note. I need to both update Transifex and xbmc master. It is happening this weekend.\nI will update this PR.\n. @MartijnKaijser \nWould be really great. It would be a big help for me.\n. It took some time, but now I have a working sync update utility which I used to create these commits.\nI would make language files updates every month, right  after the merge window closes (to not interfere with other PRs)\nIf there are no objections, I'd like to push this in so users can start testing their translations along with my update method :-)\n. @MartijnKaijser Would it be ok, if I get rid of the email addresses in a new commit ? I mean to update ALL files without the email address, I have to modify the utility first to make some kind of text extraction. After that to put together a new PR separating all files and commits would take hours.\nBut I can promise I get rid of the addresses with a new commit (probably today already)\n. @MartijnKaijser @cptspiff \nWould be really great if users could actually start testing the translations as soon as possible.\nThis PR includes months of work from them delayed due to my update utility got written slowly.\nLast time I delayed it because of the PVR merge to not screw out with Lars with all conflicts.\nSo please..\n. @cptspiff \nI was also thinking of having them at the end of the month. I am just afraid that I might interfere with some bigger PR which also has some language file additions. In that case the author of that PR would have to rebase his PR and would be really mad at me :-) This is why I thought it would be better to have the lang update right at the end of the merge window, so I can include all langfile changes which came with the PRs merged in the window.\n. @cptspiff \nThanks for confirm. I'll do the langfiles updates at the end of the months as you suggested.\nCheers!\n. Seems like I accidentally removed the subproject link to skin.touched with this update.\nI have this at commit history:\naddons/skin.touched\n@@ -1 +0,0 @@\n1 - Subproject commit 1d03746646111f97e28b807a290bd762c7db547c\nSorry about this.\nCan someone help to get it back ? I don't want to bork master.\nThanks!\n. @elupus , @opdenkamp \nIt is not a problem for me to handle the translations. This is why a held back my bulk language file update PR, so that it wouldn't interfere with this PR. If this is merged, I can update Transifex with the new English strings and also the non-English translations as well. Translation groups can than review, or change the as they decide.\nSo from my side, they can stay in, if there is no other reason to separate.\n. @opdenkamp For me, it would be better to have them all in, so I can merge back the new translations right after it, if that's ok for everyone.\n. Thanks for the help, but please do this on the official XBMC translation project on Transifex.net.\nBut please wait until the merge window is closed and I can update Transifex with the new translatable strings.\nCheck out this thread: http://forum.xbmc.org/showthread.php?tid=132639\nThanks, Attila\n. It is ALL upadte now. Both xbmc master and Transifex.\nFrom now I will update Transifex weekly, xbmc master monthly.\n@Partugal \nI'll put you new translations up to transifex this time, but next time PLEASE use Transifex and only that.\nThanks for the translations anyway.\nCheers, Attila\n. @Partugal \nDone. I uploaded you translations to Transifex. Would be good if RomanV the Russian tranlation team leader can review the strings.\nThanks. Cheers\n. Not sure I am the right one for this task :-) , but what I think we could do is do a couple of tests with the channel identification tests files I collected together and see how they are downmixed in major commercial or opensource players.\nHere are my test files (hope the links work)\nhttps://rapidshare.com/files/28912283/Audio_channel_ID_files.zip?bin=1\nhttps://rapidshare.com/files/3894124765/Video_channelID_files.zip?bin=1\nI'll only have time in the weekend to make some tests.\n@Karlson2k could you please make tests with these files, how are they downmixed in major players ?\n. We make regular sync procedures from XBMC-master to Transifex weekly and from Transifex to XBMC-master monthly at the last week of the month. I added this info to the wiki as well: http://wiki.xbmc.org/index.php?title=Translation_System\nCheers, Attila\n. Please use Transifex to make these corrections.\nJust sign up for the German translation group and I add you ASAP.\nThanks,\nCheers\nAttila\n. Hi!\nThanks for the PR. It looks really interesting.\nI am sure other devs will take time to review, but now it is time for us to get Frodo 12.0 out, so no we concentrate more on that. So a little later everyone will have more time.\nFor me, at first sight (as I am responsible for translation handling) my only question is that do we have to get translations to another place in the addon.xml file ? It is already hard for me to handle the description and stuff, keeping them in sync with translations up on Transifex.\nOf course if it is the ONLY way to do, I will try to manage. Just I think the addon xml files might grow too big. Just like they already are with the 30+ languages we have for 3 translatable strings.\nSo if there is any other solution, where we could put these strings into the strings.po files, I'de much happier :-)\nThanks\n. @ronie \nPlease let me know when you have an upstream repo already available for the Python version, to let me include the new strings at Transifex. Currently I am holding the strings there, in case we can re-use some, or most of them with the python version. Thanks!\nCheers,\nAttila\n. @davilla \nIt is ok from me. Just updates the langinfo.xml.\nCan I pull this in ?\n. @xbmcspain \nThanks for the patch! Cheers, Attila\n. @davilla \nIt is ok for me. Can I pull this in ?\n. @ramiro \nThanks for the patch, cheers, Attila\n. @jmarshallnz \nThat's no problem. I can handle this :-)\n. @MartijnKaijser \nRemoved from Transifex as well.\nThanks for the note !\n. Thanks, Cheers!\n. @phil65 \nJust FYI\nPlease note that if you change the id number of the string, it will appear as a new translatable string in Transifex. That is because the id is treated as a context for the string. This is how we ensure that we can have the same English string in different contexts.\nJust a note.\n. @davilla , @opdenkamp \nGuys, does this mean, that if I push new translations to the PVR addons, they won't get into Frodo 12.0 ?\nI think we will need at least one more language file update for the pvr-addons. Ideally two, to have some time to test.\nThanks, Attila\n. @opdenkamp \nJust a matter of minutes now...\nThanks\n. @opdenkamp \nDone!\nI even bumped the version numbers and made the changelog entries. I'll do it in future updates as well.\nThanks for the patience !\nCheers,\nAttila\n. @opdenkamp @davilla \nDone!\nSomeone just push the green button :-)\n. @takoi\nThanks for looking into this, but surely changing the language files this stage is not possible. We had one string changed days ago and still has not been translated on Transifex for a of languages. So it would cause more problems to have a lot of untranslated main menu entries for a lot of languages than the way it is now. So  this must be a post-Frodo change in my opinion.\nOne question: what if the translated string is already upper cased, or these strings are re-used elsewhere ?\n. @ronie \nIt is OK from my side. I have not actually tested it, but it is ok from translators point of view.\n. @takoi \nThanks for the original PR!\n@ronie\nThanks for the rebase!\nCheers!\n. @maysl\nThanks for the work.\nI'll convert the strings file to po format and put it up to Transifex for translation, later after merge.\nCheers, Attila\n. I volunteer to test it on Windows, if it is supported.\nFrom the addon.xml, I only see Linux and OSX. @maysl can you confirm ?\nThanks\n. Ok. So no test for Win at the moment.\nSo after the squash I think it can go in.\n. Seems ok, to me.\nI am just not sure about all languages if the skipping of the \"icon\" part changes anything in the meaning of the \"wide\" translation part. Probably not. At least not in Hungarian.\n. This is great! Nice job!\nIt is a great help for translators and also Devs.\nI am thinking if we could remove the unknown located strings from the file. Maybe after a public announce on forums so addon devs can also review them if the use any of them. I think we have a horde of unused strings.\nMany thanks for this :-)\n. Yes for now it is safer.\n. @biocoder-frodo\nUnfortunately there are really several ways the localize function gets called.\nThe worst is when the string is identified with its index number which is passed to a function which might manipulate it and only than it calls the localize function with a size_t variable.\nThis way of calling can only be traced down by evaluating the code and make manual entries in the automatically generated list. So pretty a hard job to collect out ALL the calls. of course it is not impossible. I was intending to look at it when I have plurals support implemented in xbmc.\nOf course any help is much appreciated. C++ is my favourite to keep things cross platform.\nCheers\n. @ronie \nIf it is not a problem, please do not add this to the backport list.\nI am just afraid that it won't get re-translated for all languages and than we would be in a worse situation for 12.1.\nBTW Are skins using the uparcase function at all ?\n- if not, we could remove it from the code ( I mean it is broken for several languages)\n- if yes, we should fix it. If this is the case, I can try to write our own unicode upercase function.\nThanks!\n. @HitcherUK\nThanks for the info!\nWhat we really need to find out what is handled differently with different locale sets and platforms.\nFor example in projectm in the past the problematic function was atof() becasue it was using '.' or ',' when parsing the float text depending on the locale set.\nMaybe this time it is an iconv function. Needs to be investigated.\nAt the worst case I can write a function which uses a table to tell which UTF8 character gets translated into which othe uppercased one and which stays the same. Of course that would need a lot of digging into the UTF8 codetable.\n. @jmarshallnz \nSorry for the noob question: are we already using ICU for uper case function?\nWouldn't a built in uppercase function be a solution in case we don't find a better one ?\n. Thanks for the info.\nI'll take a look if I can find a simpler solution.\n. @taxigps \nThey certainly are not, because they only exist in the master branch. \nhttps://github.com/xbmc/xbmc/blob/master/addons/skin.confluence/language/English/strings.po vs.\nhttps://github.com/xbmc/xbmc/blob/Frodo/addons/skin.confluence/language/English/strings.po\nOn transifex we are tracking the Frodo branch to refine the translations for Frodo service releases.\nI will open up a new project for master (Gotham) later.\n. This would be a great new feature for Intel owners! I am more than happy to test it!\nOne question: is BOB the only method supported with VPP or there are already other more advanced ways supported ?\n. Just a precise info on the various methods I just got from Gwenole:\n\"Bob deinterlacing is the only deinterlacing method supported in the VA intel-driver for now.\nThis does not provide any visual quality improvement since this is only bob deinterlacing. It might look better than using VA_TOP_FIELD|VA_BOTTOM_FIELD flags to vaPutSurface()/vaCopySurfaceGLX() but this is collateral.\nThere is work-in-progress to support Motion-Adaptive method, but no ETA yet as this is not a technical problem. Motion-Compensated method is currently out-of-scope.\nRegards,\nGwenole.\"\nSo we can expect Motion Adaptive sometime in the future. That is good news.\n. Just a note that the XBMC internal version includes a fix for the preset parser causing black screen due to impropper handling of decimal point. See this commit:\nhttps://github.com/xbmc/xbmc/commit/ec8ed98ba51ef9b73975cdf0ac47214ffd00810a#xbmc/visualizations/XBMCProjectM/libprojectM/Parser.cpp\n. Great job. Ok from me.\n. ",
    "waven": "This is a answer to the post of da-anda on trac:\n\nHey, although I see the possible use of it, I think the way you try to implement it is somewhat wrong. Like jmarshall I also don't see the need for a new stub type - all features could be added to the current stub system.\n\nHey! I can try to add this to the disc stub. I made a new type because a stub file with a path in it is not a disc stub. But maybe I'm just hair-splitting ;-)\n\n@Eject button If the stubfile is empty (0byte / no file path), assume it's a disc and show the Eject button. If a path is given, check if the driveletter of the path is a disc drive, and if so, also show the eject button. This f.e. would also show the correct button for subfiles beeing a shortcut for files on DVDs.\n\nSo, checking driveletter is win only. Is there a way to check if a path refers to a file stored on a cd/dvd/blueray on the other os's?\n\n@Thumbnails Why not support both? If subfile containes a file path, check if the file path can be accessed during indexing and read thumbs from there (if available or can be extracted). If there is no path defined or it can't be accessed or has no thumbs, get them from the stub folder.\n\nThe only thing I changed here was the extraction of the thumbs for the media flags. They can only be extracted from a real video file. Do you mean fanart thumbs etc?\n\n@Bookmarks I don't know the technical backgrounds, but shouldn't it just work to assign them to the stub file? Never used bookmarks, so I have no experience if they work for my Bluray stubs or not.\n\nYes, thats exactly what my code does.\n\n@strings (\"Please attache the following harddrive\") I think the name should be more generic - it could also be a SD card or USB stick. So probably better use \"storage device\" in the strings. Just my personal taste though.\n\nAgreed :-)\n. Ok, I put the whole thing into disc stubs now and discarded the new stub type.\n. Ok, I reworked the whole thing again. The efilestub tag ist back ;-)\ndiscstub and efilestub share extensions (default: .disc and .efile) (maybe m_discStubExtensions and the AS tag discstubextensions should be renamed to m_stubExtensions and stubextensions).\nNow we can check IsStub(), IsDiskStub() and IsEfileStub(). Imho it's much cleaner this way.\nWhat do you think?\n. How about adding a variable e.g. m_strPlayablePath which gets set when the item is created and implementing a GetPlayablePath method? Then we could change item.GetPath() to item.GetPlayablePath() in the players OpenFile() method.\n. I changed a lot of things in this PR. Maybe @jmarshallnz should look over it.\nI implemented a mechanism where it isn't needed anymore to alter the fileitems path for plugins, upnp files and efiles.\n. Thanks for the hint! I updated the pull request to cover the case you mentoined too. Is there a better way to detect if there's any optical disc drive?\n. Seems like m_bhasoptical is Windows only. Although I added a HasOpticalDrive method to CMediaManager.\nIt's working on Linux and Windows. Can someone test on OSX?\n. - removed !\n- rebased\n. - added strings to .po\n- rebased\n. Thanks, removed strings.xml\n. This is the old one: https://github.com/xbmc/xbmc/pull/896\n. done\n. ",
    "phate89": "So no news about this even in frodo? I think this is the best solution...\n. ",
    "ElmoOxygen": "I'm also quite excited about this feature, would love to hear what state it's at. I guess since frodo is in feature freeze we won't be seeing this implemented into it, but am still looking forward to getting this in a nightly build, or doing a custom build from a patch. Thanks for the hard work, waven!\n. ",
    "CutSickAss": "I have nothing else to add or remove, thanks. Keep up the good work!\n. @mad-max & @alanwww1\nYes, trust me, I worked on it for 2 days. I went through all the strings, making small, and not so small, edits. The original file was created by user \"ydatografida\", and he gave me the OK to optimize the text.\n. If the service release of Eden contains the language files that are in the Eden branch, then yes, I want to update that (it was last updated on March 13th, I have 416 edits for it!). Would you like me to make a pull request in the Eden branch with the changes in the Greek translation only for Eden, not for GIT?\nUPDATE: I just made a PR in the Eden branch as I mentioned above, here: https://github.com/xbmc/xbmc/pull/833.\nIt contains changes that are ment for the Eden service release (none of the recent GIT edits). If that was a mistake, please close it (or tell me and I'll do it).\nThank you all for the hard work you've put in making XBMC, and sorry if I've bothered you with my PRs!\n. OK, the Greek translation you've chosen is from 23/03/2012, so that is fine. I'm going to close the PR I made in the Eden branch. Thanks!\n. ",
    "newphreak": "I have not been able to recreate a single crash with normal usage so far. I have tested this for a few days now.\n. I have stress tested this for 1, almost 2 hours of constant stopping/starting movies now, and rebooted every 30 movies. I have not had any crashes yet. So this seems to solve the issue indeed.\n. Oh my, guess I rushed into this. You are of course correct. I need to look at why the button ends up as pageplus/pageminus in OpenELEC. Thanks\n. ",
    "siarkopol": "Hi,\nPlease forgive me, if it's wrong place to ask (it's my first post here), but maybe the reason why this request waits over 3 months is caused due nobody can compile this with success? From few hours I'm trying to merge your commits to FernetMenta's xbmc-xvba and still I got same error:\nPeripherals.cpp: In member function \u2018PERIPHERALS::CPeripheral* PERIPHERALS::CPeripherals::CreatePeripheral(PERIPHERALS::CPeripheralBus&, PERIPHERALS::PeripheralType, const CStdString&, int, int)\u2019:\nPeripherals.cpp:272:22: error: expected type-specifier before \u2018CPeripheralCecAdapter\u2019\nPeripherals.cpp:272:22: error: cannot convert \u2018int_\u2019 to \u2018PERIPHERALS::CPeripheral_\u2019 in assignment\nPeripherals.cpp:272:22: error: expected \u2018;\u2019 before \u2018CPeripheralCecAdapter\u2019\nmake[1]: * [Peripherals.o] Error 1\nmake: * [xbmc/peripherals/peripherals.a] Error 2\nSome infos:\ngcc: v4.6.1 (tried v4.4 but same errors)\nsys: ubuntu oneiric minimal, Linux stolarnia 3.0.0-16-generic #28-Ubuntu SMP Fri Jan 27 17:44:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\nlibcec: 1.5.0 from repo (also tried with compiled from git - still errors)\nxbmc: latest version from https://github.com/FernetMenta/xbmc.git, branch xvba\nI'm really interested those commits due I've Yamaha AV and cannot use remote controller because xbmc-xvba supports only libcec 1.2 which is obsolete and doesn't work well with AVs between TV and XBMC PC (problem with assigning physical address, in my case 0x1400 - from cec-client commands p 0 1 and p 1 4 do the job but xbmc overrides changes).\nHope it will be helpful and you have some tips how to do that - you're last hope ;)\nCheers from Poland,\nsiarkopol\n. Thank you guys for fast answer, I was really in hopeless state, but I see this issue can be solved. So, the facts are:\n@malard: I already tried builds from pulse8 repo (I bought 2 adapters from pulse8 already) but I had some problems with hardware acceleration through xvba (fusion board, asrock e350m1), all CEC related stuff works fine but without HW ACC for 1080p (I've also TBS6922 SAT-TV card). I even compiled xbmc from pulse8 repo, but still no HW ACC for 1080p (720p takes ~50% of CPU, enable vaapi causes xbmc to crash). So I switched back to Fernet's branch (tried also wsnipex's builds from launchpad). ATM I got working 1080p HW ACC but with libcec v1.2 which drives me crazy ;) So, this is the reason why I want to recompile it to get working libcec v1.5 under Fernet's xbmc-xvba.\n@opdenkamp: yeah, I've already installed libcec and libcec-dev, also successfully compiled this lib from sources. I can also successfully compile xbmc from pulse8 sources and from Fernet's sources, but without your patches... Maybe you know solution how to get fully working 1080p HW ACC (xvba) for 1080p on fusion? I know that profile level v5.1 isn't supported ATM, but it's not a big problem for me, most of satellite dvb sources use level v4.0.\n. You are GREAT opdenkamp and FernetMenta :) All your patches work with latest xvba just fine :) Finally I've working 1080p (dvb, mkv, youtube, ~35% CPU) with one AV remote controller - it can controls AV, TV, XBMC and even PS3 at the same time :) There is still some problems with small rectangles during decoding dvb streams, but it's xvba related and I hope it will be fixed in next versions. So, thank you so much for help (btw, proper order of applying patches should be same like in commits section). You are really doing good work. Keep cool!\n. ",
    "gyunaev": "All that git stuff makes me want to switch back to CVS :(\nHow do you rebase it?\n. Disregard that, I'll redo it.\n. I can confirm that applying this merge fixes the playback on my machine which has both the analog output (which I use) and the HDMI output (which I do not use). Without it the current master doesn't play any sound at all nor it allows selecting the analog playback. \n. Sure I can do it. FFMPegPlayer?\n. thx for the Windows fix.\n. Hey guys, could you please take a look:\nclass FFmpegVideoDecoder\n{\npublic:\n  FFmpegVideoPlayer();\n  ~FFmpegVideoPlayer();\nbool open( const CStdString& filename );\nunsigned int getTotalFrames() const;\n  unsigned int getFpsDen() const;\n  unsigned int getFpsNum() const;\n  unsigned int getWidth() const;\n  unsigned int getHeight() const;\nconst AVFormatContext * getAVFormatContext() const;\n  const AVCodecContext * getAVCodecContext() const;\n  const AVCodec * getAVCodec() const;\nCStdString getErrorMsg() const;\nbool renderFrame( unsigned int frame, CBaseTexture * texture );\n  bool renderTime( int64_t time, CBaseTexture * texture );\nvoid close();\n}\nDo you think anything else would be necessary to expose?\n. Will resubmit in an hour in another pull request.\n. I don't want to deal with the rebases which I cannot figure out. Easier to fork it again and patch the new fork.\n. Any feedback?\n. What does \"alpha\" mean? :)\nIs the ffmpeg library VFS-patched, i.e. its open() goes through the VFS already? At least DVDPlayer calls avformat_open_input() directly, see xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxFFmpeg.cpp\n. Everything should be fixed by now.\n. Will do this week once I'm finally back in CA.\n\nrebase and inject. elupus indirectly signed off on devcon.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/xbmc/xbmc/pull/1137#issuecomment-8297421.\n\n\nWith best regards, George.\nhttp://www.ulduzsoft.com\n. ",
    "ScudLee": "Because RunDisc calls itself, though, if you had a disc with mp3 files in multiple folders, wouldn't this restart the playlist for each folder it found?\n...I did have my own fix, which I wasn't too sure about either, should I open a \"rival\" pull request?\n. Current behaviour (at least if you have audiocds.autorun set to true) would be for the all audio files to be added to the playlist, with subfolders being checked recursively.  If you set bPlaying to true, then only the first folder with music will be playlisted.\n. With PlayDisc calling RunMedia, the only bit of PR579 that would need merging is the move of the call to RunCdda from ExecuteAutoRun into RunDisc.  In fact, you could probably now move it to RunMedia instead, since it just needs to be where both PlayDisc and ExecuteAutoRun can see it.\n. Or...  (as I suggested above)  you could move the call to RunCdda to PlayDisc (ne\u00e9 RunMedia) since it no longer needs to be in RunDisc.  Have the check for audio CD happen first.\n. Yeah, the only difference would be that RunCdda clears the music playlist and starts afresh, whereas going through RunDisc the tracks would get added to the existing playlist and then started at the point they were added.  I can't see how that would be an issue though.\n. Done.\n. I think if it said \"Insert disc for:\", you'd have a point, because then it would be clear that the title that followed was representing the item you clicked (and it would make more sense to have the episode number involved using GetLabel).\nHowever, since it says \"Insert disc:\", the expectation is that the title shown is that of the disc to be inserted, not the item clicked, in which case I feel my point stands, the episode title, even with numbering, is never going to be the name of the disc.  The most accurate guess you can make is that the disc has the name of the show on it.\n. Updated to use GetLabel, although I haven't changed the string (429) \"Please insert the following disc:\". \nI still, however, disagree that it makes more sense to use the episode label than the series name.\nPlease insert the following disc:\n1x01. Winter is Coming\njust seems less meaningful than\nPlease insert the following disc:\nGame of Thrones\nEven without using the <message> tag to add something like \"Season 1, Disc 1\" underneath.\nChanging the string to something like \"Please insert the disc for:\" also seems wrong to me, since I feel the dialog should be telling you what disc to insert, not what the item you just clicked was (like you say, that should be pretty obvious). It would also make the addition of the <title> tag in the stub file somewhat redundant.  Anyway, if you do want me to change the string, let me know the right way to do it (wrt existing translations).\n. I still disagree... but otherwise, done.\n. My rationale for having it as a separate setting was so that the default select action could still be applied to the first item selected.  The current behavior of the context menu \"Play from here\" is to ignore any resume point and always start from the beginning, and I've seen at least one person complain about that.  While it's probably trivial to get the resume point, you'd likely then have someone complaining about it always resuming, or, if presented with the resume/play from the beginning option, asking whether there was a way to just always resume.  There's probably even weirdos out there who use \"Show information\" as their select action but who still want continuous play.  You'd never win.\nSo short of adding a whole bunch of different \"Play from here\" options (which seems silly to me), it just seemed simpler to have the two settings act independently.\n. Rebased after a85cf75013d2f46d87f5da66655c6eeefd85320d.\n. Rebased after 4e9cb43928abbddd5d683cb5d9d66c72b3bbf88e\n. Cool.\nI've considered instead of just removing the 'Play from here' option when this is setting is on, replacing it with a 'Play only this' option, so that either way you'd have access to the alternate behavior.  Do you think it's worth adding, or should I just keep it simple?\n. Okay, think I got your meaning (I hope).  \nThat way does also make it easier to allow for more finesse in deciding when autoplay should be used... Not that I've bothered here - it's still either on everywhere or off everywhere, but the possibility does exist.\n. Done.\n. That doesn't go back far enough, the music videos having the dashes removed was part of the initial scraper abstraction:\n5a0d0ecc4b03e49c936dd7578a39677973571666  Scraper abstraction: provide an encapsulation. \n. Found it: 5499661c7ac515f3aae85271b88a52f2de625c49\n. Based on the trac ticket and the forum thread, I'd say this was only added to solve a very specific problem (possibly connected to the MTV scraper?), and has just been carried forward ever since.\nSince there's only currently the TheAudioDb.com scraper now, and it would definitely benefit from the fix...\n. I'd want to do a minor backwards-compatibility commit to the scraper (basically replace %20%20%20 with %20(?:%20|-)%20 ) first, before this is pulled.\nAlthough we can probably drop that if it's suitable for backporting to 12.2 (olympia's suggestion).\n. I've pushed the change to the scraper, so feel free to pull this whenever.\n. ",
    "pableu": "An error, along those lines:\nerror: possibly undefined macro: AC_MSG_RESULT\nIf this token and others are legitimate, please use m4_pattern_allow.\nChanging the bootstrap-file as in the pull request helped me. \n. Sorry it took so long to get back to you, I wasn't at home and had no access to my HTPC. The version is 2.68.\n[root@player ~]# autoreconf --version\nautoreconf (GNU Autoconf) 2.68\n. ",
    "ericmiao": "This doesn't seem to solve my error here. I'm using Oneiric, with autoreconf version 2.68 as well.\n. Found that if all dependent packages (in README.linux) were installed, there will be no longer such error. So it doesn't look like caused by autoreconf flags.\n. ",
    "0wing": "Rebased with tiben's latest commits:\nInternal filters removed\nFffmpeg change reverted\nFixed subtitles in gui settings tab\n. @wsoltys Debugging on x64 systems should be working now.\n. ",
    "fiveisalive": "I'm the downstream maintainer of the Fedora/RPM Fusion package.  I patched our version of Eden beta1 with the patch and compiled against external libpng-1.2.46 on f16, haven't seen any problems thus far.  Our development version of Fedora rawhide/f17 has libpng 1.5 and works OK there according to reports (I don't have a rawhide box to test myself, however). Is there anyway I could test my Eden beta1 build with this patch when building against libpng 1.2.46?\n. It's a bit out of date now, but topfs2 created a patch to use ImageMagick in place of cximage, but there's not been much recent activity on that ticket:\nhttp://trac.xbmc.org/ticket/8992\n. Looks like changes in master in SmartPlaylist.cpp means that this patch will fail to apply completely. Can you update it so it cleanly applies against master?\n. Also changes to music database don't apply cleanly:\ntext\ngit apply --check ../1040.patch\nerror: patch failed: xbmc/music/MusicDatabase.cpp:1114\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:1106\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:991\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:222\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:236\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:100\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\nerror: patch failed: xbmc/music/MusicDatabase.cpp:221\nerror: xbmc/music/MusicDatabase.cpp: patch does not apply\n. This used to be in the October milestone, I guess it's been removed?  Does this mean we'll have to wait until the next major release to get this full MusicBrainz support in XBMC?\n. So could \"next release\" be a point release 12.1, or would it have to wait until the next \"major\" release like 13.0?\n. I was afraid of that.  Bummer that it didn't make it in to Frodo and won't be in any 12.x releases.  Hopefully @night199uk  will be willing to backport this patch to 12.x so I people will to build their own version can test out the MusicBrainz support on the same Frodo release.\n. @night199uk thanks for keeping this alive!  it will be very useful when it gets in.  looking forward ultimately to true disambiguation of identically named artists\n. I assume that the newer PR is #2626 ?\n. I like @opdenkamp 's last suggestion: remember last selected position if there was a group previously suggested, but default to position one if group was never previously selected\n. So, how exactly are maintainers of packages supposed to add the \"--enable-pvraddons-with-dependencies\" switch to the configure for in-tree builds, this is exactly what we are doing for our RPM Fusion/Fedora package:\nhttp://fedorapeople.org/cgit/alexlan/public_git/xbmc-rpm.git/\nbut because we can't pass the option from the top-level configure to the pvr-addons directory, it won't build the cmyth PVR add-on.  Do we have to apply this PR to our sources or otherwise hack the sources?  Is there something I'm missing here?\n. They will be separately installable (sub-)packages, but for various reasons (such as each of them will be required to have separate package reviews which is time-consuming and cumbersome) it's easier to build them in-tree as part of the main xbmc for the moment.  Eventually we'll create separate pacakges but users will want these pvr-addons ASAP and waiting for separate packages isn't an option.\nOf course we could just \"emulate\" a separate build by running configure twice, it's just that it's nice that the main configure gets us (almost) all the way there by just by untarring in \"pvr-addons\" in the tree.\n. Is http://trac.xbmc.org/ also OK to report bugs?  Is there a policy on what sort of issues should be in the forum vs. on trac?\n. ",
    "Zenkibou": "@theuni: I could do a new patch which would not change code for libpng<1.5.\n@bobo1on1: The ifdef are here to avoid changing too much code for libpng<1.5 users.\nI agree that cximage should be changed, what is the plan about that? Has this been discussed somewhere?\nUsing another generic image library (which one), or directly using the png/jpeg/bmp/whatever libraries?\n. Good find !\nI belive the pointer is not initialized to NULL, which can cause a segfault with non-paletted PNGs.\nCan you try this fix:\nhttps://github.com/Zenkibou/xbmc/commit/bc230b725652e3f406195954f697b34ba0dd757f\n. So this is fixed. Thanks lzoubek for testing !\n. To make things more easy to merge (comment by theuni), I made a reworked patch which adds libpng 1.5 support without changing the existing libpng 1.3/1.4 code path.\nhttps://github.com/Zenkibou/xbmc/commit/99d1031476f8ec74d42a54667023746ca4153931\n(this includes the original libpng 1.5 patch, the first fix for uninitialized pointers and the second fix for png encoding reported by lzoubek)\n. ",
    "lzoubek": "I've compiled on gentoo against libpng-1.5.6 and I get segfaults everytime I visit image gallery and XBMC attempts to create thumbnails http://pastebin.com/RCn1KRNg\n. ",
    "ssuominengentoo": "Can we get this merged? Otherwise XMBC won't build for Gentoo, Fedora (rawhide), or Debian (experimental)\n. ",
    "tarka": "The remote appears as \"USB HID v1.11 Keyboard [pcasl PCASL Remot Control]\". I've never been able to find out more about it, which is annoying as some of the buttons don't register in Linux and I'd like to get the specs.  I seem remember someone saying that the remote is not general-purpose MCE remote and is specific to the receiver in the Giada machines; I can't find the reference now though.\nI'm not really in a position to install Windows ATM.  However it's possible it acts in the same manner as an MCE remote under Windows and this is just a Linux-specific quirk?  In the meantime I've sent an email to someone who commented on my blog that they run Win7 on the N20 to see if they can test.\nA possible short-term solution would be not add these keys in keyboard.xml and let Linux users add it in themselves; getting XBMC fully working on the N20 requires some tuning (see http://haltcondition.net/?p=2455) so one more step is not too much to ask.  Does this sound reasonable?\nCheers,\nSteve\n. I managed to get Win7 installed onto an external esata disk, and I can confirm that the Giada remote works out of the box; the relevant log lines are:\n11:16:05 T:1852   DEBUG: CDVDPlayerAudio:: Discontinuity - was:1051791.936794, should be:1017948.477781, error:-33843.459013\n11:16:06 T:1852   DEBUG: CDVDPlayerAudio:: Discontinuity - was:2047964.201874, should be:1992791.853086, error:-55172.348788\n11:16:07 T:2924   DEBUG: WinEventsWin32.cpp: APPCOMMAND 49\n11:16:07 T:2924   DEBUG: CApplication::OnAppCommand: appcommand 49, trying action FastForward\n11:16:07 T:288   DEBUG: CAnnouncementManager - Announcement: OnSpeedChanged from xbmc\n11:16:07 T:288   DEBUG: GOT ANNOUNCEMENT, type: 1, from xbmc, message OnSpeedChanged\n11:16:07 T:2924   DEBUG: ------ Window Init (DialogSeekBar.xml) ------\n11:16:10 T:2924   DEBUG: WinEventsWin32.cpp: APPCOMMAND 46\n11:16:10 T:2924   DEBUG: CApplication::OnAppCommand: appcommand 46, trying action Play\n11:16:11 T:288   DEBUG: CAnnouncementManager - Announcement: OnSpeedChanged from xbmc\n11:16:11 T:288   DEBUG: GOT ANNOUNCEMENT, type: 1, from xbmc, message OnSpeedChanged\n11:16:11 T:1852   DEBUG: CDVDPlayerAudio:: Discontinuity - was:10576101.103450, should be:11512017.357563, error:935916.254113\n11:16:11 T:1852   DEBUG: CWin32DirectSound::CheckPlayStatus: Resuming Playback\n11:16:11 T:2924    INFO: XCURL::DllLibCurlGlobal::CheckIdle - Closing session to http://feeds.feedburner.com (easy=01171408, multi=01179B60)\n11:16:12 T:2924   DEBUG: WinEventsWin32.cpp: APPCOMMAND 50\n11:16:12 T:2924   DEBUG: CApplication::OnAppCommand: appcommand 50, trying action Rewind\n11:16:12 T:288   DEBUG: CAnnouncementManager - Announcement: OnSpeedChanged from xbmc\n11:16:12 T:288   DEBUG: GOT ANNOUNCEMENT, type: 1, from xbmc, message OnSpeedChanged\nThis removes the need for the equivalent changes to the Windows mappings AFAICS.  \nWould it be possible to exclude the keyboard.xml and merge the rest? This would at least avoid the 'hardy' mangling of the keycodes and give users the ability to define these keys themselves.\nCheers,\nSteve\n. Re. the \"Enabling more keys on the remote\" section; yep, that's a bit of a simplification, but the effect of enabling that option was to make the 'back' key work in Dharma.\n. This appears to be a general problem with multimedia keyboard/remotes with FF/RW:\nhttp://forum.xbmc.org/showthread.php?p=990563#post990563\nhttp://trac.xbmc.org/ticket/12387\nCheers,\nSteve\n. Thanks John, I'll try this on Linux and Windows ASAP (probably the weekend). I assume this fix supersedes my patch?\nCheers,\nSteve\n. Confirmed working from master, I'll wait for beta2 to test windows.\n. ",
    "ktdreyer": "This is working for my remote in beta2.\n. Incidentally I have two other users in RPM Fusion who were seeing audio bugs on Fedora 18, and these patches fixed the bugs for them. It would be nice to see this pull request merged.\n. ",
    "kempniu": "Sounds interesting! My thumbnail directory is already over 2 GB in size, so any prospect of disabling thumbnails for local images sounds tempting. Any plans on when your code will be merged into master? Will it be before Eden final is released?\n. Sure thing, I'm looking forward to it then. As for this pull request, I'm trusting your judgement. I understand it may be pointless, though I think fellow Intel Atom owners may feel otherwise :)\n. I'll be happy to help with testing. I'm curious how the new method will cope with thumbnailing 12 Mpix photos on an Atom (it's the very reason I wrote my patch). Is my understanding correct that I should be able to test the new method once your jpeg-scale-as-needed branch is merged into XBMC's master?\n. If you meant there is a huge boost between Dharma and Eden, then I should have probably noticed it before as ever since Dharma was released I'm updating to the most recent GIT version roughly every 2 months. And since I can remember, my pictures (stored locally) were slow as hell to thumbnail and they are until today (without my patch applied). Thus I'm really looking forward to take a look at the work you've done.\n. I've cloned your repo, switched to the jpeg-optim branch and when building, I get the following error:\n\nCPP     xbmc/guilib/JpegIO.o\nJpegIO.cpp: In member function \u2018bool CJpegIO::CreateThumbnailFromSurface(unsigned char*, unsigned int, unsigned int, unsigned int, const CStdString&)\u2019:\nJpegIO.cpp:479:46: error: \u2018x_jpeg_mem_dest\u2019 was not declared in this scope\nmake[1]: * [JpegIO.o] Error 1\nmake: * [xbmc/guilib/guilib.a] Error 2\n\nWrapping x_jpeg_mem_dest in an ifdef similar to the one on line 305 helps, though:\n``` c\nif JPEG_LIB_VERSION < 80\nx_jpeg_mem_dest(&cinfo, &dst, &outBufSize);\nelse\njpeg_mem_dest(&cinfo, &dst, &outBufSize);\nendif\n```\nTo be honest, I can't see any visible speed difference here. Can there be something wrong with my system? I don't know what exactly, some library, some setting, some compile flag, anything (it's a Gentoo box)? To be clear, I didn't do a make install, I just copied the resulting xbmc.bin executable from your build over my current one. I've cleared the XBMC home directory before launching your build. Here's a Youtube video demonstrating the speed of thumbnail generation with your build running on my Atom box:\nhttp://www.youtube.com/watch?v=thuaxQS9ASc\nAll images are stored locally. Also, I've paste2'd my ./configure switches and \"ldd xbmc.bin\" output:\nhttp://paste2.org/p/1853867\n. Forum thread created:\nhttp://forum.xbmc.org/showthread.php?t=118967\n. Point taken. I guess it all comes down to the way the user organizes his/her files. In my case every movie is in a separate folder, so the overhead introduced is undetectable. I agree with your argumentation, though. I've initially pictured this issue as a bug due to the fact that even when I had set the stacking regexps properly, my movies weren't stacked unless the video files were the only files in a movie's folder.\nI'll report back if I come up with something more brilliant ;)\n. Thank you all for your input. Maybe I should take a step back here to explain further how I came across this, maybe I am barking up the wrong tree.\nI keep my movies in separate folders. The way I add them to the library is I go to the Files view, browse to the folder containing the movie, open the context menu for a folder and pick Movie information. XBMC should then stack the files and, provided the movie is not yet in the library, scrape movie information. With the default stacking regexps and the naming convention I'm using, movies were frequently (not in all cases) stacked incorrectly (XBMC looked up information for Movie.CD1.avi instead of stacked Movie.avi). Yet, what I failed to mention before is that when I entered the folder itself, movies were always stacked correctly. But when I open the context menu for a stacked item, there is no Movie information item and I cannot add it to the library.\nWhen I added some debug code to the StackFiles() routine, it turned out that:\n- when I open the context menu for a folder, StackFiles() is called for a CFileItemList containing all files in that folder,\n- when I browse to the folder, StackFiles() is called for a CFileItemList containing only the video files (which is why it works flawlessly).\nSo then I tried creating a custom regexp to cover the first case as I thought the default regexps don't work with my naming convention. It still didn't work, so I thought \"whoa, this is a bug\" and here we are.\nOf course I believe the discussion up until now has been productive, yet maybe there is something else that should be fixed that wouldn't require changing the stacking routine.\n. Here is a debug log from an unpatched XBMC 11.0-BETA3 session during which I performed the following steps:\n1. Open Video > Files.\n2. Browse to the folder containing the movie folder.\n3. Pick Movie information from the context menu for a movie folder - movie stacked incorrectly.\n4. Browse inside the folder - movie stacked correctly.\nhttp://paste2.org/p/1903611\nEven though the debug log was taken with a custom stacking regexp in advancedsettings.xml, XBMC behaves identically without it.\n. I'd be happy to. Though please excuse any possible delay, right now I think I should be able to prepare a new patch by tomorrow, but that might change depending on a variety of factors ;)\n. ",
    "master-lincoln": "This would be awesome!\n. Please consider merging this! Reorganizing my files always screws up the recently added and all similar filters...\nModification date seems to be perfect for this.\nIMHO this should also be added to the nfo...\n. ",
    "Pivosgroup": "osx/ios sign-off revoked again :)\n. ",
    "DDDamian": "Had a few fixes to make in vcxproj.filters, then it loaded okay. Did a git clean and reloaded the dependencies, cleaned solution in MS VC++ and tried to build. Linker has an issue with TiXmlBase::GetEntity being defined twice.\n1>------ Build started: Project: XBMC, Configuration: Debug (DirectX) Win32 ------\n1>tinyxmlSTLd.lib(tinyxmlparser.obj) : error LNK2005: \"protected: static char const * __cdecl TiXmlBase::GetEntity(char const ,char ,int *,enum TiXmlEncoding)\" (?GetEntity@TiXmlBase@@KAPBDPBDPADPAHW4TiXmlEncoding@@@Z) already defined in XBMCTinyXML.obj\n1>     Creating library XBMC\\Debug (DirectX)\\XBMC.lib and object XBMC\\Debug (DirectX)\\XBMC.exp\n1>XBMC\\Debug (DirectX)\\XBMC.exe : fatal error LNK1169: one or more multiply defined symbols found\n========== Build: 0 succeeded, 1 failed, 35 up-to-date, 0 skipped ==========\nCode in TinyXML.h and perhaps elsewhere is formatted with tabs as well.\n. Well, the /Force:Multiple allows the build with warnings, but the Test() failed.\nSee pic for local vars: http://i40.tinypic.com/2me616s.jpg\n. http://i42.tinypic.com/wksqjl.jpg\n. Odd behaviour indeed.\nif (root && root->ValueStr() == \"details\")\n  {\n    TiXmlElement *url = doc.FirstChildElement(\"url\");\n    if (url && url->FirstChild())\n    {\n      return (url->FirstChild()->ValueStr() == \"http://api.themoviedb.org/3/movie/12244?api_key=57983e31fb435df4df77afb854740ea9&language=en\");\n    }\n  }\n  return false;\nFirst if fails even though root is not null and \"details\" is present. If I force that if to true, url is still undefined and next if fails.\n. My conclusion is the /Force led to dubious behaviour and is asking for more. The project file was easy to remedy, but I'm uncomfortable with /Force as wsoltys mentions. I've left this in my local branch for further testing if a workaround to /Forcing is applied...\n. A worthwhile addition :)\n. Many are following the same route - myself included. Good work :)\n\nDate: Thu, 23 Feb 2012 07:53:50 -0800\nFrom: reply@reply.github.com\nTo: damianhuckle@hotmail.com\nSubject: Re: [xbmc] added support for embedded cuesheets (FLAC) (#720)\nYeah...came from a personal need, as my music-db changed completely from mp3 to flac\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/720#issuecomment-4138785\n. IIRC it was closed, then a new one opened with some changes. Pretty sure the fix has been merged.\n. Hmmm yes, I confused the two as well - mad-max do you want to re-visit?\n. Sorry for the late reply - the merge of AE damn near killed me and inbox was overflowing :) Sure, would be glad to review as you go. Cheers,Damian\nDate: Tue, 8 May 2012 00:51:57 -0700\nFrom: reply@reply.github.com\nTo: damianhuckle@hotmail.com\nSubject: Re: [xbmc] added support for embedded cuesheets (FLAC) (#720)\nWould be interested in it, yeah...\nHad problems with the build process of this and didn't get the loop jm suggested...\nWill play a bit with the code and see what happens...\nMaybe you can assist if I have questions?\ncheers,\nMax\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/720#issuecomment-5569525\n. Hi CrystalP - I have followed the conversation and it will need to be done in AE as well. Things like an unplugged cable I guess we just need to fail gracefully (after all, we don't look for a second TV if you unplug the first), but the long pause disconnect I will try reproduce and report back. Chnaces are good that on some hardware or other a connection will eventually be lost on pause, so dealing with it on resume makes sense.\n. CrystalP, this has been on the back of my mind since you submitted. Can I suggest we let some good feedback come in now that AE is in nightlies and then see where to go from there?\n\nObviously much has changed in the code, and I think a good deal of the work here has probably been duplicated but I'm not naive enough to think we're \"done\".\n. I'm pretty sure I fixed this in July - HDMI devices can now be shut-off / switched mid-stream without crashing and a new device can then be selected. By forum reports it worked after the fix. Post-Frodo I have added a fallback to the \"Default\" device which will help further.\n. Yes, it's obsolete now.\n. Haven't tested but all in favor of adding capabilities. Can I suggest this be looked at in the context of the AE branch and compatibility with it?\n. That's correct, or ideal at any rate. Either is acceptable but they'll be converted to float in AE before further processing, so all good. We can easily add the calls to your decoder from AE. Nice addition :)\n. Finally got a chance to pull this, after applying the ffmpeg bump. Looks like ffmpeg is still trying to decode, not your patch. Same using DVDPlayer or PAPlayer. Used the 24bit wma sample from FTP.\nDidn't dig any deeper, but here's a log: http://pastebin.com/TTWXz2Rn\n. No ATV here, but can confirm this is currently not user-friendly for ATV / Apple Remote users if you guys can agree on best methods.\n. +1 to this\n. Maybe just drop the GUI setting and leave the advancedsettings? As long as they're reasonable defaults for minimal memory platforms then no user interaction is required, but for those with more memory available they can make use of it. The default max of 512mb may be a bit high for some platforms, but for users with other people (kids) sharing their networks it makes sense to grab what you can while you can.\n. Agree with Arnova - makes sense for all net streams, and there's a good argument for all caching. If it's not on the machine the purpose is to get it to the machine as quickly as possible without a usability penalty. You could get as fancy as using the CPU usage as one of the factors in setting the read rate.if you want it to scale better to it's environment while still being \"transparent\".\n. Bump for comments/suggestions. At idle on my machine XBMC is using 82mb out of (being 32bit) the 4GB available to it. Playing a 1080p with TrueHD @ ~8mb/sec it's using 145mb of ram.\nI think this has value if implementation can be agreed on. I see no reason to limit it to any connection type either.\n. np - just think it's a step in the right direction and didn't want to see it dropped :)\n. Is there a forum thread where others have tested this? Just want to see if it's working well for several testers. Once you're sure please submit a PR (this one needs rebasing anyways), but make sure it's had testing on several platforms / protocols.\n. Bobo1on1 has agreed to assist with DRC implentation, and gnif will sketch a framework for DSP classes as discussed on IRC. IMO compression is a feature many users request, and it belongs in.\nPersonally I think the mute icon should be present when volume is zero.\n. +1 to keeping to filesystem layout\n. Will scramble again pretty good with AE ;)\n. I've been involved almost daily with this project for several months, working mostly at Win32 and filters development, but also general troubleshooting and arranging test builds and gathering bug reports. For Linux/Win I'm probably the second most familiar with the code.\nIMO the code is ready for this merge window. It won't be perfect for months (if ever) as there's much planned for addition and we're at the blue-moon bug level for most testers now. It does what it says on the can - quite well.\n+1 for this merge window.\n. Great news.\n@jmarshallnz - I would give it one last pr from gnif's branch before you do final rebase - there were three notable fixes that went in during the last 24hr scramble. Gnif will likely be awake again in a few hours.  Cheers.\n. thx ronie - just got new of that too - it's the DTS-MA string - woohoo the first patch is coming :)\n. @alanwww1 - string 407 should be \"- DTS-MA capable receiver\"\n. Hmmm I don't recall \"insisting that it isn't it's responsibility\" but I did state that I felt it was the players responsibility to ensure it had valid data. In the specific conversation you were trying to play a stream that reported 41 channels, for which a sanity check is made when trying to convert that to a channel layout, as it should be.\nI'm not sure how something downstream of that, e.g. MakeStream() can fail as gracefully as the player can, although it can return null and throw it back.\nI have a similar issue when a receiver is turned off: AddPackets() in the sink is called continuously with no way to flag that the output device is no longer valid. I can try ten times, and then what? To fail gracefully at that level is just not possible. Passing the failed status to a higher level is the right answer, as then another device can be selected or the stream halted.\nIt's a similar situation here, where the player should know that a lower-level error has occured, and either skip the stream or present a dialog.\n. I'm guessing here by @gnif 's comment that \"this function should never fail\" that either the player was expected to provide a valid fomat or that the ultimately defining format (that of the sink) would define the up/downmixing or up/downsampling by the engine to produce a valid final output stream.\nIf neither of those is going to happen, then yes, a sanity check against the engine's capabilites should be made (not against the sink's) and null returned on failure. And seeing as we have multiple engines then yes, that code must be added for each engine, as they may have different maximum channel layouts for example.\n. It seems that we can satisfy both to a large extent with very basic sanity checks added to MakeStream() for the few engines then, and satisfy everyone - there's really no harm and only gain.  Just a spectrum check to ensure we're within the engine's capabilities, e.g. channels > 0 && channels < AE_CH_MAX, sampleRate > 8000 && sampleRate < 384000 etc will catch the flagrant errors.\nBetter than the dire warnings in the code, or a 41-channel fail ;)\n. I agree that's a better way - we can always ifdef if the CA engine has different constraints from the SoftAE or other engines - have at it ;)\n. concur\n. +1 to DirectInput here - clearly it's the preferred interface\n. Merge window is approaching - if you want this to be added please rebase per elupus's comment above\n. I'm all for it staying - significant improvements in debugging speed. Until the downside becomes unbearable the benefits are outweighing the side-effects.\n. Excellent suggestion - will incorporate check for NULL sink or lack of extended info.\n. @pieh - thanks! Exactly what I'm hoping for there - just don't have the GUI experience. Appreciate the insight as the pre-defined 10 labels don't allow the level of information required to show both Passthrough and PCM devices.\nJoining the formats is one option (and I'd like to add a 16-bit, 24bit or float tag too) but will still be tight for two devices, passthrough and analog.\n. Thx all for the comments - agree with all - just hoping now to hear from our OSX friends on what's possible here or if I should restrict to SoftAE for now. I have no idea how to change the labels over to a textbox, so any guidance from Grajen/Jezz_X would be great.\n. @jmarshallnz - the list of supported formats can get quite long, now and in future - see device 3 from my log http://pastebin.com/raw.php?i=gQZpytFe. Technically my device supports DSD or single-bit audio as well, which is not shown but certainly requested for support and SACD playback is something I'd very much like to add to XBMC.\nWould like to show the important ones (encoded formats, multchannel LPCM, and perhaps whether max format is Float, 32bit, 24bit or 16 bit)\n. Using the event-driven mode of WASAPI (as we do) the delay until the sound hits the amp is (2x) the return value of GetStreamLatency()'s return value retrieved with:\nREFERENCE_TIME hnsLatency;\nHRESULT hr = m_pAudioClient->GetStreamLatency(&hnsLatency);\nIf the buffer duration on initialization of the audio client is 100ms the actual delay is 200ms. This is because there are two buffers used in this mode and sound starts when the second one fills. The return value for GetDelay should be:\nreturn 2.0 * (hnsLatency * 0.0000001); 'two buffers times latency in 100ns units\nAlternately you can use (2 * frames / samplerate) which is the method originally used.  Note that in event-driven mode the use of GetCurrentPadding() is useless - it always returns 0. This is not clear in MSDN and is only of value in shared mode.  Much more involved methods are required to access the hardware buffer pointer and added overhead without perceivable impact on sync.\n. Or just fixed properly ;)  Was fixed somewhere in my last PR iirc, but that was pretty big and would be impossible to cleanly merge now. Much of the MSDN literature for event-driven mode is sketchy at best, and the true latency was determined using largely undocumented calls to track the hardware device buffer's pointer, which promptly contradicted M$'s documentation.....\nAnyways, starting to feel sorry for ya's even though there were many fixes & features already submitted - might snuffle around in the current state of AE and do some obvious fixes like the above - just gotta digest how your/Memphiz's changes play with my current code.\nFrankly I kept going with it but it's highly divergent from whats in master now.....\n. Leave it with me - this is a new issue not present after the initial AE merge, so if I can repro or get a crashdump it'll be obvious. Frankly GetCurrentPadding() is useless as mentioned. It's a relic of the initial sink code where we allowed either shared or exclusive WASAPI modes. That said some change made after the merge is causing this, and that's what i need to review.\n. @gnif - nice to see you around ;)\nMaybe I'm naive here on the ffmpeg / libav issues but does it make sense to just import the swr code into xbmc with acknowledgements? It would seem to solve the issues of AE staying as self-contained as possible while avoiding the ffmpeg / libav distro and / or patent issues without reinventing the wheel?\n. Understand your points - as to the additional code surely the resulting binary size hit would be no more than a few kb. Symbol collision would be a real issue although namespaces and \"replace all\" are handy ;)\n. @davilla - agreed. Part of my reasoning for bringing libswresample code directly into xbmc would be to avoid having two resamplers (one for gui wav's and one for streams) so the net effect would be a reduction in overall package size, reduced dependancies on external libs and simplicity in the overall resampler calling code.\nIt also helps with the goal of AE being the sole audio handler.  Kinda like how we don't use external codecs for video decoding and rendering such a the k-lite packs. Seems thats been a core philosophy from the start.\n. Hey Memphiz - devil's in the details lol. Regarding backports swr has been around for ages and works just fine, but I agree that patches upstream would be an issue to adapt, and ofc we all love deciphering ffmpeg :P\n@gnif - further thoughts?\n. Heh - sure. I'll bow to those still worried about the ffmpeg/libav issues with Linux distros...\n. I would prefer to not see either of these values hard-coded. Do you have any sample files or examples of where this gets tripped-up?\n. We can still use <3 channels - that reference is only used as part of the device capabilities enumeration to indicate and report devices capable of multichannel LPCM (e.g. HDMI but not SPDIF).\nThe layoutsByChCount is derived from MSDN literature for standard layouts.  It might be better to add addition layouts such as 9.1 / 9.2 to the enum's rather than fix the maximum number of channels at 8.  Far more future-proof and it is better to populate the enum's than hard-code a limiting value as this PR does.\n. https://github.com/xbmc/xbmc/commit/4342769 doesn't address the concern above. Adding configurations > 7.1 is the better method as mentioned. Also, we generate the speaker mask for a reason, simply setting it to SPEAKER_ALL doesn't help us determine if that configuration is acceptable.\n. That's exactly why that code was added ;)\n. That's why better populating of the possible channel layouts would be preferable than limiting to 7.1, which I'll admit was one of those \"fix me later\" issues.\nWhen layouts > 7.1 things get messy in terms of channel mapping e.g. 9.1 - are the extra channels wide-fronts or top-fronts, etc. We're getting into rare territory here, but already 9.1 amps are becoming more common as are the DSP's required to make use of those channels, as you'll never see 9.1 audio recordings.\nOne of the features planned for AE is user channel-mapping and level adjustment, which is why I don't want to see hard-limits here.\nAnd no, mask was used as noted previously - some drivers insisted on correct mapping or would not report OK to that layout. There was a long discussion on it in the Windows AE support thread, and if you check the history for the sink you'll find it was patched to account for this.\n. Which is based in turn on the Windows system channel layout..i.e. dependent on number of channels available.\nI'm not sure I want to debate this: the direction it needs to head towards has been clearly indicated in my comments above. The end-goal is to support >7.1 and to support user-defined channel mapping and level control. The reason for the first is obvious, the second is to allow for direct feed to \"dumb\" amplifiers and to give user's control over the all-important center-channel or dialogue levels.\n. Re: your last comment: yes we do that - just with options to upmix and downmix as well.\nRead my comment about the future features, but as far as this \"fix\" please stick with the design intent mentioned several times now about populating > 7.1.  If not we're not really fixing anything with this patch - leave it until the channel-mapper code is implemented.\n. DWORD mask = 0;\nfor (int c = 0; c < WASAPI_SPEAKER_COUNT; c++)\n{\n  if (uiChannelMask & WASAPIChannelOrder[c])\n    mask |= WASAPIChannelOrder[c];\n}\nis equals to simple\nDWORD mask = uiChannelMask;\numm...no\nwill review your new commits shortly - 3994146 is more along the lines of what I was suggesting :)\n. Of course, but see my previous comments about the channel mapping code coming. There's a reason why it's looping there which will become apparent.\nAs to how to deal with this PR: Some of the cosmetics I see no value in or just plain disagree with (see specific comments).  For functional changes keep them seperated by intent: if you intend to fix a bug where channel iteration can exceed the limits of the defined layouts that's great. Just squash those commits down to a single one specifically addressing that bug, and name it accordingly.\nFor now please leave all cosmetics out of this PR.\n. Please keep the UTF-8 translation and all functional commits for review. Just squash them down to logical chunks so all commits specific to a fix are combined, but inidividual fixes are seperated. Makes review much easier.\nThese discussions go to all team members, so to limit the email spam I'll wait until that's done and review for you. Please limit this PR to what you have now (don't add more if you're happy with your changes so far).\nCheers\n. Well done - will review over next couple of days. Good work on the cleanup.\n Date: Thu, 23 Aug 2012 09:26:21 -0700\nFrom: notifications@github.com\nTo: xbmc@noreply.github.com\nCC: damianhuckle@hotmail.com\nSubject: Re: [xbmc] AE: win32 fixes (#1310)\n@DDDamian All done.\nCosmetics removed, all changes combined into separate commits. Each commit is itself complete. \n```\n          \u2014\n      Reply to this email directly or view it on GitHub.\n\n```\n. lolz - oh I'm watching :)\n. @Karlson2k - I have not forgotten don't worry. This PR does include some useful changes but it's been a lower priority because:\n- inclusion is not limited to a merge window (being fixes not features and being generally platform-specific)\n- I have not seen any user reports, Trac tickets or logs indicating issues which the above addresses\nI would like to discuss with you a few areas where I think your efforts would have some immediate impact and where I could use your help - and which would move this one up the list a bit. They are issues which would benefit both AE and the team effort as a whole.\nIf you are interested you can contact me via my handle @xbmc.org or via a forum PM.\n. Play nice Amet - think of what you can do with that extra byte on your smartphone :P\n. We're just messing with ya ;)\n. @jmarshallnz - thx - corrected so CSoftAE::Run() handles everything not called functions\n@davilla - found issue preventing sinklock - interlocks in GetDelay() etc removed - much better thx\nSorry original comments from you were lost after a squash and force-push, but both were addressed.\n. heh heh - how dare a core dev like you use external players lol\n. Me too - this will stop it for anything launched via externalplayer.cpp, and currently for win32 only. I see Linux is enabled for external players: will scan that thread for issues there.\nCA/OSX currently has no external player capabilities from my look-see, but added framework for it anyways.\n. @bossanova808 - not a problem, and I expect Suspend()/Resume() will be called from elsewhere such as the launching routines for add-ons. We could alter the basic behaviour (and Davilla has done this for Android platforms) so it halts output if no sounds and no streams, but this would be optional for the user. There are benefits either way and disadvantages either way.\nI'd like to hear more opinions from the team on making this optional via as.xml.\nA workaround in the meantime is to use DirectSound as the pcm/analog device on win32 platforms as this is by nature a shared API which automatically mixes streams. WASAPI must be used for nearly all passthrough formats (excepting AC3 if setup properly). Can't speak for OSx/CA.\n. @jmarshallnz - in Eden we had a UI setting for exclusive mode - I could add that back and re-purpose it for this, but I think it's one of those initial setup things that would never (or seldom) be changed, so as.xml seems more appropriate as I doubt many users will experience receiver dropouts. Sounds like there's consensus on defaulting to Eden behavior here and that should work fine for the vast majority. Please let me know which way you prefer - my personal opinion is as.xml.\nRegarding 5.1>2.0 current behaviour in to start with 2.0 PCM, but maintain the last sink parameters until a new masterstream with different parameters comes along. This was to reduce receiver switching. Will take a look - would be a simple matter to return to 2.0 PCM when streams are finished. I believe the majority of receiver drop-outs are with optical setups regardless of ac3/pcm, but there's no absolute answer given the number of different receivers out there.\n@memphiz - sure thing - thx :)\n. @Memphiz - rebased\nAdded Eden-style behaviour where silence is no longer streamed if there are no playing steams or sounds. This releases the audio device for other apps and addons. Unfortunately it restores another Eden \"feature\" where some audio can be lost as the sink re-opens and receiver possibly switches, but that's another issue.\nThe as.xml setting  has been added. By default it is false and emulates Eden behaviour, setting it to true restores AE's behaviour. If using AE's method to avoid sink re-inits, receiver switching and initial audio loss it is still valid and necessary to use the Suspend() and Resume() functions when using an Exclusive sink, and these have been maintained in ExternalPlayer.cpp.\nIf anyone knows of other places where external players or viewers are called from (addons?) please let me know or simply add the AE::Suspend() call prior to starting playback and AE::Resume() on completion and before returning to XBMC's players.\n. Thx WiSo - figured there were other places - cheers.\n. Ouch, yeah that's an issue alright - but will only now affect those who enable . Default behaviour now is to dump sink when nothing playing. Not sure how to fix if we can't tell when externalplayer is done. In win32 we can check if we have focus, but that's about it.\n. @huceke - last commit allows for platform-dependant wait duration - can draw a balance between CPU usage while idle and responsiveness to new streams starting.\n. @wsoltys - added Suspend/Resume for emulator launch - thx\n. Cheers - sounds green-lighted enough but we're close enough to merge window to leave until then - thx for the review\n. If a Pulse/Alsa dev has a chance to review would be great - not sure if either of those hog audio device but either way the reduced load on silence will apply.\n. Thx cptspiff - as long as alsa sink's Deinitialize() functions release the context we should be safe here. Pulse I can look at but can't test :(\n. Great - my read of alsa sink is that it properly shuts down / nulls context before we dump it so I believe we're good there too.\n. Rebased and squashed to logical commits. Memphiz - I've added the IsSuspended() functionality to CA. Tested with external players and using Python addon to externally Suspend/Resume audio, with and without streams playing.\nNormal AE processing occurs if as.xml  enabled, otherwise engine waits if there's no streams or sounds for low-power platforms. CEvent wait time is platform-dependent defines.\nPlayers now handle suspend state gracefully: DVDPlayer drops audio packets while maintaining fluid video, PAPlayer simply pauses. Resumes handled cleanly in both.\nGood to go here.\n. @voyager-xbmc - i've found an issue with WASAPI that appears in release builds and not in debug builds where the audio client calls back before the deinitialize is complete. Patch coming.\nWhat OS are you using?\n. Patch pushed to master - found a deadlock appearing only in release builds - debug builds run slower and didn't show it.\n@Voyager-xbmc - tested on Win\n@mcsmart - feedback/log appreciated for Linux\n. Glad to hear it guys - thx for the quick feedback. Note to self - always test release builds as much as debug builds :)\n@Strangenoises - it was a given (and mentioned in commit) that restoring Eden-style behaviour would bring back some of those issues. This PR represented a complete reversal of how AE was designed to run, so I do expect a few issues to hammer out both Eden-style and AE-style, and appreciate the log. I'll be working on refining both now.\n. @Memphiz - but of course! ;)\n. Will do Memphiz ;) FYI karlson2k has offered to do a review of advancedsettings.cpp to weed out dead or undocumented settings so we can have a fresh slate for Frodo. Once he's done we'll try pass along to NedScott for some wiki lovin' :)\nThere's a few AE projects I've asked him to look at as well.\n. Not sure what platform you're using for dev ace20022, but if on Windows let me know - fairly easy there.\n. Bump for review - @pieh, @elupus?\n. Hi fritsch - is there a log posted somewhere? I can check into handling correctly in SoftAE if that situation arises.\n. FYI - the sink is supposed to override the requested format with what its actual capabilites are and the engine is supposed to adjust accordingly. If the engine requests 5.1 based on the stream content and the sink returns 2.0 the via newformat the engine should automatically downmix.\n. Thx fritsch - yes, that's definitely the problem - sink should return what it can handle (not necessarily what was requested based on the stream). In this case the error is entirely within the sink code, not SoftAE. If the sink overwrites the channel count with 2 the engine will adjust accordingly.\nIf that is occuring after this patch you should be successful.\nFYI the enumeration code we added (and that dumps the info at the start of the log) was meant to be expanded upon so the user selects the device and we default to its capabilities unless overridden by the user. In this case the channel count would be automatically set to 2.0 as reported during enumeration. That was/is the plan going forward, but haven't got there yet.\nCan you confirm your patch does indeed pass 2.0 back to SoftAE? If so lets merge this asap.\n. Ah yes - I see where in the code. It's written to allow the user to override the reported information via the GUI setting (the user is always right lol). So it's using CStdLayout from the GUI settings which is 5.1 - so your initial statement about incorrect user settings is true.\nQuestion is do we allow user to override what the device reports? It's an easy change if we instead assume the user has setup incorrectly and that the reported channel count is correct. Although I guess they can still screw up in their asound.conf setup.\nThoughts from the team? Who's right - user or asound.conf? Go with GUI setting or asound setting?\n. @wsnipex  @fernetMenta - very popular suggestion with me - that's why we put all the effort into the enumeration code ;)  We just didn't get to the next point yet which was to auto-set the defaults based on that. It was still intended to be subject to user overrride but....\nIMHO we should use the sink's return value in the meantime instead of m_stdChLayout (user setting) and pop up a KaiToast as wsnipex suggests if there's a mismatch.\nI'll doctor SoftAE accordingly and pull this in so at least we get the return value from the Alsa sink.\nThx fritsch :)\n. Guess the comment comes a little late but a quick review of any AE-related commits are all good, and despite the force-push this has been a worthwhile effort Kyle. The odd blip (readily fixed) was worth it :)\n. @wsoltys - no TV tuner card here (thx to opdenkamp & others I now have an incentive) so not much help in testing. For nav sounds enable <streamsilence under <audio heading in as.xml so engine doesn't sleep. Since adding suspend / resume I'm adding some other functionality to restore nav sounds without re-opening sink from suspend mode with every GUI beep ;)\n. Sorry tags lost to parser lol - tag is streamsilence under audio heading.\n@opdenkamp - then test I shall! Congrats btw.\n. Hi jpsdr - without commenting on the code (@elupus is a key dev in DVDPlayer review) the merge commit has to go - must be rebased so only your actual code change is part of this PR.\n. @jpsdr:\n1) spiff is simply pointing out that you should edit the PR description itself rather than referring to the ticket - just hit the edit on it. Really just a courtesy that the PR itself be descriptive as to it's intent and solutions. He's not questioning the need or legitimacy in his comment, only the description or lack thereof.\n2) your fork is a branch of master. What's important is that you rebase your commits. This essentially puts them on top of the master branch. In TortoiseGit you should add a remote branch pointing to git@github.com:xbmc/xbmc.git - the XBMC repo.\nWhenever you add commits to you local repo (on your hdd) you should always rebase. You can do this using Fetch and Rebase. Right-clicking in the TortoiseGit log on one of the master commits should bring up a context menu with the option to \"Fetch\". What this does is retrieves the latest head reference from the selected repo - in this case XBMC master.\nIn the Fetch dialog you would select the remote XBMC repo to fetch from (xbmc/master) and check the \"Launch rebase after fetch\" check box.\nOnce TortoiseGit fetches any new commits in master and launches rebase your local commits are placed on top, and can be force-pushed to your fork on git.\n* never force-push to XBMC master *\nOnce you force-push to your repo any pull requests are automatically updated, The whole goal here is to avoid that dreaded merge as spiff notes.\n. The important thing is this: if you have any changes/commits and afterwards pull updates from somewhere else (pull or fetch) you must rebase.\nWork thru the steps i mentioned above, and once your commit is on top and the merge is no longer there you can force-push to your github repo. Then check this PR and you should see only your commit, not the merge.\nAs these comments go to many developers please contact me via my handle @xbmc.org if you absolutely get stuck.\n. Yes - now you're good. Wait for and respond to any dev comments now ;)\n. You can revert a commit, but that only places it's reversed changes in your \"working tree\". You need to select the commit you want to go back to, right-click, select Reset -branch- to this, and select Hard Reset. Once you refresh you'll see any commits above that are gone.\nIf there's ones you want to keep mixed in above that point you'll need to play with a soft or mixed reset and some stash saves/pops first.\n. Thx both of you - with gnif away I appreciate the support rolling changes across Linux/alsa/pulse as I do my dev on win32. Memphiz/davilla have been troopers supporting OSx/CA, so it's the linux side we've been hurting on.\n. I noticed this early on (AC3/DTS being listed as 8bit) and pointed out to @gnif but he responded with a reason for doing so - unfortunately I don't recall the explanation - will try contact him or look for a PR I might have sent to his repo at the time, but it may just have been an IRC discussion. I do clearly recall he had a reason for it - will try to get clarification.\n. Thx - Pulse didn't get any attention during that implementation. This is a fix, so merging now\n. @FernetMenta - excellent find. Not seeing fluctuations on win32 of more than ~+/-5ms but there have been repeated bug reports of discontinuities while transcoding to AC3 and I'd assumed without getting into it that there were buffering issues in the transcoding code.\nWill test this asap - win32 and will force trancoding over HDMI - and comment.\n. @FernetMenta - great - at first glance that was the only obvious issue was the lock. Pulling in now for a walkthru.\n. @FernetMenta - I've played with this on win32 and not seen a difference in the stability of the sync error either trancoding or not. There is something very wrong in the trancoding code - among other things ffmpeg returns zero consistently in it's delay value referenced in AEEncoderFFmpeg::GetDelay() so we're getting some very bad fluctuations from that function, leading to the discontinuities when trancoding to AC3 when the total delay goes negative.\nDigging into that issue. When not trancoding I get rock-solid numbers with or without these changes. When transcoding I get frequent glitches, so digging into that.\n. That makes good logical sense. The resampler will change the number of samples but not the duration as the samplerate should always be factored in - this would be one downside of not tracking it per buffer. Resampling is the obvious case where a packet in / packet out counter would fail - a ratio would be required and could be messy\nIn the case of transcoding with ffmpeg not playing ball reporting its delay we may have to use an alternate arrangement such as simply calculating based on samples sent for transcoding, but I do need to dig deeper there.\nThe frequency of all these calcs (especially doubles) certainly adds processing overhead as they're performed every ~2ms or so by my tests.\n. Hmmm..repacking into MLP/MAT frames would be another case where packet-in/packet-out would be cumbersome.\n. @FernetMenta - I have a fix for the transcoding issue. It is not currently addressed in this PR, but it fixes the variance you are seeing (specifically with transcoding).\nNot sure if this PR further tightens sync - doesn't on my set-up as noted above, but I have no objections to this PR if you are seeing further improvement on your set-up. As noted the transcoding issue/fix is different to what this PR addresses.\n. @Albinoman887 - neither, I'm just formatting it a bit for clarity and will post it in good time. It will be available once we determine if it supplements, replaces or is completely independent from this PR, which we are trying to discuss. Pushing it to master will conflict with this PR and vice-versa. \nThis is not a forum for requests etc. You have been asked by three team members to stop - make that four.\n. @FernetMenta - that would be great, especially as the scenario you describe would involve DTS>PCM>AC3 with transcoding. My fix at present does not include locking the transcoder stage but has a night-and-day effect. You'll laugh when you see the error. I'm at work right now but will push to my repo tonight with or without the transcoder locking (which should be added regardless, but you'll see the results as-is - will add locking if time allows tonight) and leave you a link here.\nCheers!\n. @FernetMenta - transcoding delay calcs fixed in https://github.com/DDDamian/xbmc/commit/55dd5dbd7270158ad1c4b9da46cf16931ca8d92e\nMain issue found was that in SoftAE::GetDelay() we calculate the duration/delay of m_buffer based on an erroneous frame size - that of the encoded frames of 2ch * 2bytes = 4, when the actual buffer data may be 6ch * 4bytes = 24. This creates an artificial and much longer delay value than what is really stored, in turn leading to discontinuities when PTS/DTS values are calculated by DVDPlayerAudio.cpp.\nIn SoftAE.cpp lines 235-237 I store the framesize and sample rate of the pre-encoded PCM stream to use in the later calcs.\nThere are a few other math issues corrected which lead to bad calcs of the duration stored in the actual encoder buffer, but that's minor compared to the above.\nNote that I have not added locking of the transcoder stage at this point.\nTesting on a 5.1 AAC to 5.1 AC3 over HDMI the audio lag as reported in the OSD dropped from -0.020 - 0.100secs range to a nearly rock-steady 39ms +/- 2ms on my setup, which matches the non-transcoding values I typically see. So in terms of actual variance I'm seeing +/-2ms on a steady-state buffer duration of 39ms. The 39ms is the sum of the stream, engine, transcoder and sink buffers.\nI was not able to test on a 2-ch TV - tests were done on Win 7 x64, quad-core AMD 1.8ghz, ATI 6450 to a Denon receiver over HDMI with transcoding forced by disabling AAC passthrough.\nLocking the transcoder stage may improve this but I'm doubtful as the result is near identical now with straight passthrough, and the actual duration of the transcoder buffer is small compared to the stream and sink buffers.\nAll in all +/- 2ms is pretty good without more extensive locking which can actually hurt more than help.\nThis removes the extensive discontinuities or glitches when transcoding.\n. @FernetMenta - glad to hear it - thx for the fast testing! Just curious if you have any sync options enabled when you tested this or if you were going straight of audioclock without any sync/frequency modifying  settings.\nThe second test would be whether our combined fixes further improves matters.  Will try test both together tonight (if possible to reasonably merge).\n. @FernetMenta - that explains a lot - my tests were done with no sync monkeying and I have nigh-perfect sync, and never drop/dupe as I use passthrough formats and am an audio nut lol.\nFix confirmed per http://forum.xbmc.org/showthread.php?tid=131237&pid=1200031#pid1200031\n@elupus - you make my head explode ;)\nCan I propose then:\n- we do these fixes independently as they really are solving different issues\n- I'll push the transcoder fix as it's a straightforward bug fix, elupus and FernetMenta agree to the skip/dupe fix and then we re-visit this PR?\n. @elupus - am I reading it wrong or in CDVDPlayerAudio::OutputPacket() does it not still add the packet when it is supposed to drop it? I see the duplicate, and the normal packet add, but in the skip condition it still writes the packet and just alters the m_skipdupcount?\nI haven't followed further, just struck me as odd.\n. Combine with elupus's work and rebase?\n. @FernetMenta - from gnif:\n\"I do recall rejecting it, and I believe it was due to the way that data \nwas copied around and channel counts... It may not be valid anymore due \nto the buffer class that I hacked in, but to be honest I can not recall \nexactly what it was.\"\nIf this isn't causing any issues to change to 16bit (hard to imagine things run at all if currently wrong!) then ofc I'd prefer to see the correct bitdepth used!\nHaven't looked further than that yet - will do.\n. +1 - even if internals to AE needed some re-write to accomodate the change it's best to have these values logically correct everywhere.\n. I think this is why custom channel maps was on the list lol, along with level adjustments (mostly for boosting center channels).\nIt really should be a user preference for those that have 7.1 systems (I do). I want/expect 5.1 to play to my fronts and sides, and the receiver does its PLIIx processing for the backs.\n. @jmarshallnz - my thoughts exactly. If you take a 7.1 speaker test file (DTS-MA) it's all very clear. If there's any doubt it should be esotoric 7.1 wide or 9.1/2 setups, for which there is precious little hardware support let alone recordings.\nThe definitions are out there and defined, and we should allow for them in enums just cause. The writers of the FLAC standard intentionally avoided clear channel definitions for a reason: there was no prior accepted definition nor much chance of an agreed standard beyond 5.1. M$ took it a step further and defined them with the option to remap them at will, because it was all out in the fringe. Not many people in the foreseeable future will have >7.1/2 nor will recordings. What one does with >7.1 hardware is a crapshoot because you have to extrapolate existing recording channels.\nIn win they use the speaker mask parameter to direct tracks to whichever channel you want, and mappable software channels just mirrors that. The levels of actual audio data mapped to a given channel are more the issue here.\n5.1 audio doesn't care whether they're \"sides\" or \"backs\" - that's more of a physical speaker positioning argument. For 7.1 the standard is defined by the only true 7.1 mixes which are DTS-HD/TrueHD - no FLAC definition exists for that speaker layout.\n. @Karlson2k - agree with all but your last comment - no GUI setting for this one. It's just unnecessary and confusing.\n. FYI a concise article summarizing the standards can be found here: http://www.jensign.com/bdp95/7dot1voiced/index.html\nInterestingly for the 7.1 wav file linked on that page MediaInfo shows an incorrect channel mapping. Audacity maps it correctly.\nUsing the 7,1 FLAC from @alanwww1's zip XBMC is mapping correctly:\n11:54:14 T:4076    INFO:   Sample Rate   : 48000\n11:54:14 T:4076    INFO:   Sample Format : AE_FMT_S24NE4\n11:54:14 T:4076    INFO:   Channel Count : 8\n11:54:14 T:4076    INFO:   Channel Layout: FL,FR,FC,BL,BR,SL,SR,LFE\n11:54:14 T:4076    INFO:   Frames        : 2400\n11:54:14 T:4076    INFO:   Frame Samples : 19200\n11:54:14 T:4076    INFO:   Frame Size    : 32\n11:54:15 T:4076    INFO: CSoftAE::InternalOpenSink - keeping old sink with : AE_FMT_FLOAT, FL,FR,FC,BL,BR,SL,SR,LFE, 48000hz\n11:54:15 T:4076   DEBUG: CSoftAE::InternalOpenSink - Using speaker layout: 7.1\nalthough it exposes us hitting this several hundred times:\n11:54:16 T:248 WARNING: CAEUtil::GuessChLayout - This method should really never be used, please fix the code that called this\nbecause FLAC does not define the channel layout - although at least we \"guess\" it right.\nDitto with the .wav file from my link where dwChannelMask is defined.\n. Downmixed to 2.0 the center channel is completely arsed....\n. Formats like FLAC do not encode any position info, e.g. it does not describe whether 5.1 audio contains BR/BL info or SR/SL info. Most of this conversation will apply only to PCM data and FLAC will be the most common of those for input streams.\nWe really just need to follow the standards:\n5.1 in -> 5.1 out = 1:1 with a map of FL FR C LFE BL BR\n7.1 in -> 7.1 out = 1:1 with a map of FL FR C LFE BL BR SL SR\n5.1 in -> 6.1 out = 1:1 let avr mix BC\n5.1 in -> 7.1 out = 1:1 let avr mix BL BR <- most avr's will send the surround channels to SL SR and matrix BL BR\nAll of the above are just 1:1 or upmixes - downmixes are a different animal and where I see an issue with C\nIMHO the issue is more with quad (4.0), 5.0 (crashes), AAC and Vorbis (only AAC really matters) and USB or other audio cards with 8ch analog outputs. These really need custom channel maps as they won't auto-interpret PCM data the way most avr's will....\n. \"But in case of 6.1 and 7.1 system we should set output to configuration, specified in file.\"\nYep - that's kinda where I was going with the channel mapping thing. A good example (albeit done in GUI) would be AC3Filter, although there's many others. It solves everything including quad and 5.0, we would need to provide a default mapping file as part of the build to make it invisible/seamless upon install.\nCheck back to the original list I had sent you ;)\n. Not until:\n- we check the downmix code (it's amiss in the matrix you quote and in center-channel mixing, and\n- we hear from other platform devs as it's a core change and I'm unsure of the affect on ALSA\n. I also note LFE position is moved for 5.1 and not 7.1? Regardless, I'm not comfortable with some other ramifications yet (e.g. ALSA).\n. Gnif and Gimli got quite animated about AE_FMT_LPCM. Gnif did not want it in - Gimli wanted it for the hog-mode issue.\nI was the honest broker between them for my own selfish reasons: to hijack it for an all-integer mode for 24bit and 32bit integer passthrough (no float conversions). Unless we create two new formats (one for the all-integer mode mentioned and one for CA hog-mode or a fix for that) please do NOT take it out.\nWASAPI enumerates it for a reason: on HDMI or USB we can send multichannel PCM, especially for TrueHD decoding and multichannel FLAC. That's just another reason it's in there!\n. @anssih - quite correct in that it was only piggy-backing on the CA usage, and I know gnif would love to see that out of there.\nThe whole point of the enumeration code was not so much for the log (although it's been damn useful) but as a means to auto-set capabilites and setup, including a requested mode to upsample/upchannel eveything to the max supported. Without pointing fingers at who requested it's being bandied about as PikeMode(tm)  ;)\nThe no-float-conversion thing is something I can shoe-horn in without this, but for the above it's good to know the device is multichannel PCM capable.\nI guess the question is: we can use it in several useful ways - is it hurting anything?\n. Wow - turn my back for a few hours...... ;)\nI cannot speak to the CA side (except to wish it was not a seperate engine if at all possible without ifdef'ing to death) but clearly Davilla, Memphiz and Gimli can so I leave that side to them.\nI'm good with a seperate flag for squeaking thru integer audio as it must go thru the passthrough path regardless (we don't want to litter the code with tests for it when doing any processing like DSP's, volume control, etc). It would be much easier to add though by using an AEFormat by whatever name. \nThis was the opportunity I saw with AE_FMT_LPCM. For my purposes that just becomes a passthrough format of 32bits which go thru the chain untouched except for perhaps an endian swap where required.\nI don't mind if it becomes AE_FMT_NATIVE or AE_FMT_WHATEVER. It doesn't prevent integer passthrough to remove it, but it does mean more test points littered thru the code.\n. @gnif - sure, I'm good with that - encapsulation there makes good sense. I'll defer based on that and the fact that it's post-Frodo regardless given the release schedule.\nI withdraw the objection :) \n. missed this - quite right it's valid - thx for finding.\n. Looking good.\n. Seconded on that. It sounds like you have a further purpose in mind for this, but I think we often miss seeing where these are going (future feature, bug-fix?).\nThere's some juicy ones in that list I sent you ;)\n. \"Shitdown gracefully - lol ymmd\"\nLmfao - intentional??\n. @TheUni - thx for the review. I agree with where you're going on the above, especially about it getting complicated in the engine code thus the inlining for that logic.\nSleeping for the exact wait time is ideal (as long as Resume is immediate).\nIf I have a concern it would be the narrow window we're in. Not sure I can get the above done (nor allow time for other platforms to comply), and I'm doubtful the above would meet the \"bug-fix\" criteria in feature-freeze.\nIf it would be acceptable post-merge-window we can skip this and I can put something together more in line with the above. If not this would be the stop-gap to correct the issues you're seeing with ALSA where the engine does not allow the sink to pre-process that state.\n. In which case the returns in the virtual functions are correct - should not need any ALSA sink modification.\nI have not tested on an ALSA platform - let alone one showing issues. Gnif reports none on his setup, but clearly some platforms do not allow sink teardown.\n. From win32 perspective yes, but it was never aimed at that. Absolutely requires sign-off from ALSA tester - especially see line note in AESink.h\n. @theuni - are you stable with just your fixes in https://github.com/xbmc/xbmc/pull/1820? There's no way I'd recommend pushing this unless that's the case. This is solely for ALSA, except it reduces latency on a re-awake with navsounds after sleep on all platforms.\nNAK without ALSA signoff. Gnif says he can't repro on Linux. From my win32 perspective I dont need this minus the slight latency issue mentioned above when a navsound awakes engine.\nReally all we're trying to do here is pause ALSA output and restart later. But if we can't pause ALSA and restart I'm not sure where to go with this. Maybe when that Pivos box arrives.\n. @davilla - I see none of the above on win32. As this stands now with the change in the default values of the virtual functions the sink must override the SoftSuspend() function and return true to gain the benefits of the idle time. If this isn't done your CPU usage will rise as only AddPackets() can block. See the line note in AESink.h.\n. @theuni - thx for all the efforts here. We're both flying a little blind. Hoping this provides some resolution or at least a bridge until some further ALSA work addresses those issues.\n. Thx Spiff - nice to see you're still around :)\n. doh! sorry more caffeine (and less git-spam) lol\n. The opening statement concerns me ;) \nThis is a total re-write, without actually mentioning a feature or a bug being fixed. For some of it I like what you've done, some just adds complexity and in a few places out-right unnecessary code. Simple is good.\nI'll go thru in detail and add line comments or general comments, but the first one is that neither advancedsetting seems to be actually required, nor does the 64bit audio at this point. I think it's good to add, but we don't need another setting just to determine whether we consider it. Ditto for the maxsample rate.\nWhile I go thru this can you give me a brief synopsis on what bugs you are trying to fix or what feature(s) you add with this?\n. And yes, I know it is meant to fix the 5.0 FLAC issue ;)\n. Agreed with gnif's comment above - that's a great standalone in the meantime :)\nI've pulled locally for a thorough review and some testing for the wasapi code.\n. Thx karlson2k - it's certainly complete in terms of the range of parameters it checks. Short of the reported 5.0 flac issue I had seen no issues with finding the appropriate format previously.\nI've been reviewing in general terms, but will have to \"force\" a few formats to test the extremities.\nOne other general impression: we already have enumerated all the device formats prior to doing the device initialization. It reports every supported data format, sample rate and channel count. Shouldn't we just use that?\nThis initialization needs to happen quite quickly when we switch tracks in the player. We already know what the device is capable of. A lot of unnecessary system calls for IsFormatSupported will add to that delay on format switching. This is why we enumerate the device capabilities on start-up, whereas this will happen with each hit of the skip button......\n. The plan is for the engine to store the max pcm bitdepth and sample rate returned by sink/device to prevent calling Initialization twice if float is rejected (as well as for an all-integer path).  This still needs implementing in the engine though.\nWith the exception of the 64khz frequency noted above all those scenarios would have already worked with the current code. The difference would be that the current code would downsample rather than upsample if an exact match was not found for the sample rate, as you iterate upwards.\nAgain, these are just observations as well as some insight into other changes. With the exception of some complexity I'm liking what I see so far.\n. @Karlson2k - yep - that's what I was referring to in my previous comment (CAEDeviceInfo).\nI'm perfectly fine with extending that class - we've barely touched on its original intent. Nice work!\n. @Karlson2k - check your email\n. @nickehallgren - In this case XBMC's Trac would be ideal. You can create a ticket and assign it to myself and gimli.\nPlease c/p the file link there as well as a clean debuglog when trying to play that file. Thx.\n. heh heh - tried this months ago......https://github.com/xbmc/xbmc/pull/1045\n. @karlson2k - see my direct email about coordinating this - it's one we certainly want to bring in but don't want lots of conflicts while we wait for Frodo.\n. +1\n. In a nutshell there's calls to FreeStream() and MakeStream(). If the new stream is incompatible with old (diff channel layout, codec, sample rate...) the sink is reinitialized and any buffered data in the sink dropped. Ditto for buffered codec data as the decoder is created and destroyed with the stream.\n. \"Well if it changes from 5.1 to stereo and AE doesn't drain output but drops\nit, that will be bad indeed. That need to be fixed.\"\nThat would just add to the effect noted here. There may be a few seconds of audio data that need to be played out, then the sink / audio driver / device re-initialized and finally the receiver must lock on new data and switch. Better it happens \"immediately\", e.g. drop the buffered data as soon as the button is pressed to switch tracks.\nThe player is making a new audio stream at that point - why delay for a couple of seconds to drain everything?\n. Ahhh I assumed this was due to user-initiated track switching. If it's just an AC3 5.1 > AC3 2.0 midstream then it depends on upstream handling at the player:\n- if a new stream is created as it should be then old stream will play out to finish (drain) and new stream will start thereafter, after a sink re-init as required. So this would be the desired behaviour.\n- if immediate response is required e.g. user selects new audio track, then the old stream should be freed and the new one created using FreeStream() and MakeStream() as noted earlier.\n. Codec is tied to stream, created and destroyed with. This closes out any buffers as stream ends.\nTBH I haven't tried a channel-layout switch in the same stream - I could see that being messy if transcoding. But would think it would go terribly wrong and stay wrong, not just mildly hiccup.\n. From the audio perspective as long as a new stream is created with the correct parameters, switching them should work fine as described i.e. they drain normally and delays are updated correctly while that occurs, right up to and including the switch to the next stream.\n. @fritsch - the list should re-populate any time the Settings>System>Audio Output window is opened, via GUIWindowSettingsCatagory.cpp ln:2876\nIMO the only platform affected here is Linux, and there's been many complaints that a user can no longer select Custom devices. Because it seems to be just that platform I'd recommend an as.xml setting to show the full list as well as an as.xml string for a Custom device setting which would take precedence.\n. @fritsch - trust me I'd love to see more of the audio settings in the GUI for current and future parameters. That said, Elupus' idea seems to cover all the bases..\n. @grajen was just volunteering in IRC :)\n+1 for this though - better a long list and functional audio than a short list without....\n. @pieh - nice! A test button would be perfect - even if just to trigger a navsound. Code could be added to play a multichannel wav file almost as a speaker test too. It'll get downmixed accordingly anyways, so a 7.1 wav is perfect. The navsounds are IIRC skin-dependent though.\nCurious what this would look like on a Linux/ALSA rig.\n. Easily done regardless of navsound settings, and has to disregard that setting to be useful...\n. Addressed this properly back in June but it was rejected. Yes, better to change name imo\n. Check for m_sounds.empty() was removed in https://github.com/xbmc/xbmc/pull/1548#L0R1417\nAs to the pre-fill of the ALSA buffer it makes sense from the ALSA docs as well as the clear buffer underrun errors being generated. Will ping gnif directly with link here, but I suspect Cory's solution is the correct one.\nTBH I suspect the correct implementation is PR #1548 + the fixes here - there is a slight latency issue also addressed in #1548 and the overall suspend/resume logic gets isolated out of the main run loop.\n. @theuni - pinged gnif for review but IMO merge this. If you do get a chance to test #1548 pls do. Post-Frodo we can re-\"vamp\" (lol) to use messages to trigger states, but for now it addresses navsound latency and streamlines the code. I suspect the CPU usage will drop from what your profiling the other night shows as well.\nJust needs to default to false per Spiff's last comments there if it's a go.\n. @theuni @davilla will combine per Cory's suggestions above tmo night (late here) under #1548 and await any comments. At least between the three of us we'll have win32/linux/pivos-android covered. CA is not directly affected.\n. @davilla @huceke @theuni - just sitting down to play. Will combine all the above into #1548 tonight including gimli's rather logical patch. Test-wise I've run with #1548 in my builds for quite a while and actually used navsounds for a change, but the truest test will obviously be with ALSA/Pivos/embedded if you guys can oblige. Cheers\n. @theuni @davilla - I've cherry-picked Cory's ALSA fix into #1548. If testing on Pivos and Android devices shows we hit buffer underruns in general running conditions then gimli's patch can always go in as a standalone, but left it out so we don't confuse issues. This is primarily about resolving ALSA issues specifically with suspend/resume functions, not as a general case.\nAgain, I can't replicate issues here, so hoping you guys can confirm - this one has gone past it's sell-by date lol\n. @da-anda @Montellese - WASAPI does require exclusive mode to be enabled. If it is not enabled in the windows audio panel we pop a kaitoast stating we could not initialize the audio device. Any time video is played without a valid audio device playback is slow and choppy as Da-anda states. Unfortunately there is no programmatic way to change the exclusive-mode setting - it must be user-initiated.\nDS devices are always enumerated. WASAPI only on Vista SP1 and higher as thats the earliest version supporting it. XP/2000/ME/Server support only DS\nDS has many disadvantages audio-wise (forced resampling, negligible passthrough support, performance). That said, until we inject better logic further into the code, the choice between an unplayable initial setup or better features is a clear one.\nI have a branch re-instating the \"Default\" audio device which in Win is almost fool-proof, but that's for post-Frodo.\nGreen light from me.\n. FYI - I haven't checked the thread yet, but I suspect the issue described stems from the fact that Eden used the device friendly-name when saving the device string. The \"proper\" method now used uses the GUID of the device - preferred by MS as it is always unique. Someone transitioning will need to select their device once.\nThat plus the growing use of removable USB audio devices is what prompted a Default fallback device as mentioned above, but like most of our work since merge it's in another repo which would be very hard to back-port from :(\n. @Montellese - heh, that also explains why some users were seeing a bug in Eden code where crossfade was greyed out using \"wasapi:xxx\" and I wasn't using \"WASAPI:_xxx\"\n. See my last comment on your PR #1826 re the audiooutput.audiodevice and the upgrade - wrote it just before I saw this.\nAll the other functions in AEFactory are defined at the engine level, just curious why not here. Ofc it eliminates the need to define in each engine which is a big plus, and there's nothing engine/platform dependent about the VerifyOutputDevice function, but not sure we can't always guarentee that.\nOtherwise good catch on the channellayout redefinition.\n. @Montellese - I hear ya - there should only be one engine and smarter sinks ;)\nGreen light here.\n. @bobo1on1 @topfs2 - you guys use Pulse?\n. Thx topfs2 - didn't quite get this either but no Pulse setup here\n. @anssi - from my perspective of course and thank you.\n. IIRC the CThread::Sleep was recommended by davilla in an IRC conversation a long time ago specifically for PAPlayer, but can't recall why.\nIs the big negative number returned consistent?\nIf this fix helps iOS no concerns merging (although we obviously don't fill the queues as fast) but I haven't been able to reproduce here on Win.\n. There is a potential deadlock in master as well where a draining stream is fading in PAPlayer::SoftStop and it can hang when PAPlayer exits - may be related.\n. +1 Memphiz - this code has been revamped a bit in our stuff too. Basically to allow rapid filling of the buffers when a stream starts without locking up the thread once buffers pass watermark. With multiple streams they can be in different states. But for Frodo this is a big plus.\n. @huceke - basically answered that in internal forum. We were hoping you were still working on AE/CA too.\n. Lol - no wonder it worked better ;) Not sure how I got into this - all my devices have ponies and my OS doesn't mind suspending, so I'm blind on the effects.\nBut yes, curSystemClock must be updated to fall into the loop after 10 seconds. It seems the code designed to reduce load (the wait) is actually increasing it somehow...\n. @davilla - once it drops into the While{..} loop it should only wake every 100msec on Droid or 50msec to check things out (unless a navsound is played to trigger m_wake.Set), so usage should be minimal unless event waits are borked on those platforms.\nIf the need is to reduce the load in the 10sec until we drop into the event wait I did a test using a yielding Sleep(0) based on the bool hasAudio in SoftAE::Run().\nWhen profiling here in idle and with the event wait active SoftAE was ~5.5% of the load, with the GUI being the main load. Some 10% of the CPU time was in that event wait.\n. With or without this patch it's functional on Win7/Win8, with or without navsounds enabled. Tested with video and music. Basically status quo for Win.\nThat said.....the patch is good on several counts:\n1) suspend/resume of AE are now incorporated in PowerManager.cpp\n2) AESinkALSA now has functions (virtual functions currently assume sink can't suspend so no gain from this nor use of external players without explicit override)\n3) Sleep in ProcessSuspend() as suggested in IRC incorporated\nThere has been a potential cause for misbehaviour in ALSA discussed in IRC (using snd_pcm_pause() and snd_pcm_prepare() instead of drop() and close()) which may be the root cause here.\nDavilla's hunting gpigs for that one ;)\nOverall +1 for incorporation but only if root-cause fix suggested above pans out.....\n. @davilla - I don't disagree. That's both the only platform it works fine on, the most likely platform for external players (for which this is necessary and what started it) and the only platform I can currently test.\nWhatever mystery lies in ALSA (or the sink) can wait - it shouldn't block Frodo.\n. Although on (semi)sober-second-thought does that actually change your blocker? No audio after suspend on ALSA?\n. @MartijnKaijser - from your log:\n02:07:46 T:3015682880    INFO: CAESinkALSA::HandleError(snd_pcm_writei(1)) - Resuming after suspend\n02:07:46 T:3015682880    INFO: CAESinkALSA - ALSA: pcm_hw.c:709:(snd_pcm_hw_resume) SNDRV_PCM_IOCTL_RESUME failed (-38): Function not implemented\nand the movie reset to passthrough which forces re-init of ALSA correcting issue. It's a pretty widely-reported ALSA bug,\n. But prevents CEvent in Windows?\n. Sorry - quite right - looked at last commit in isolation....\n. no issues with or without this patch including last commit on three machines.\nWin 7/8\nWASAPI/DirectSound\nAudio devices: AMD 4650 / 6530, ATI 3200\nall fine...\n. None here. Linux/Droid blessings needed.\n. @Albinoman887 - it does still appear to be an issue with some ALSA implementations and is largely disabled there in favour of Sleeps.\n@Karlson2k - I did consider that when initially writing it, but by my logic the downside is that if during that 10sec window every 49 days of running nothing is playing it will sleep during that 10sec instead of the wait CEvent, after which it will resume using the wait.\n. @Karlson2k - yes, it would be preferable in form if not in function.\n. Much better. So if this works it appears ALSA can be started/stopped okay, just not quickly as it sometimes was with the softSuspend followed by a navsound...\n. [Quote = FernetMenta]\n\nOne the one hand it should block in AddPackets waiting for the interrupt and feed the buffer of the device. But this blocks the thread from doing all its other duties. Actually we need 2 threads here, one for feeding the buffer, the other (event driven) doing all the other tasks.[/Quote]\n\n@FernetMenta nailed it there. While the sink blocks nothing is getting pulled through the stream handlers and decoders. Everything else is shadow-boxing with ALSA to properly shut it down.\n. @fritsch - not really my place to say ;)\nThere are two very good things here:\n1) waiting for an audio device to become available and,\n2) waiting for ALSA to de-init properly\nFor 1) it could be expanded upon to re-enable the \"default\" device as Memphiz has done (and yeah, I did for Win). This is good for plug-pullers, TV-switcher-off'ers and headphone-pluggers.\nFor 2) that was the better solution: all previous \"fixes\" here just side-stepped that by avoiding suspending on ALSA/Droid.\nBe very careful with locking AddPackets - on Win we use a WaitforSingleObject event. In Wasapi the audio loop is supposed to run in a seperate thread from the decoding/buffering code.\nAside from that I've seen little harm here. Haven't tested but no objections. Release a build in the forum thread to get a wider test base and go for it. Adding a thread for the output stage can wait.\nFYI the whole concept of the masterStream is a bit dodgy - I don't use it.\n. You must have missed some discussion lol.\nPlay any 2.0 mp3 and queue a 5.1 high-bitrate FLAC. Listen for the glitch 5 seconds before the first track ends. Follow the rabbit as the code re-inits all streams, dumping previously decoded and mapped data and refills the buffers remapping the 2.0 to 5.1 and glitching in the process. And you've already run into the FreeStream issue. But it's all way outside the scope of this PR - just a heads-up.\n. @davilla - even cell phones are quad-core now http://gigaom.com/2013/01/09/samsung-scoffs-at-quad-core-dials-it-up-to-8-cores/. \nBy design wasapi's best mode is event-driven and the thread is meant to be high-priority (Windows highest thread priority of all is termed \"Pro Audio\"). We just stifle things by blocking in AddPackets when the engine should be pulling the stream data from the file, decoding it, processing it (format conversions, DSP, limiting/clamping).\n. @fritsch - stick with previous comment ;)\n. That's why I pointed those things out - the team needs someone to carry on with audio, especially on Linux.\nAll other comments were entirely objective.\n. +1\n. Looks good for all Windows-related changes, and no objections to the constructor inits either - always easy to miss manually :)\n. @wysoltys - yep default device is something to be restored, and yes I will PR :) Purpose of AEDeviceType there is related to some hot-swapping code, logging and DSP's.\nIMO add constructor inits and go.\n. +1 - looks good for squash and merge.\n. @ace20022 - this is pretty safe to squash to one commit (appropriately named) - perhaps \"[AE] [AESinks] Cleanup/init vars and check for null pointers / return values\" or some such.\n. Davilla's call on when/how/what/who. IMO should be merged.\n. @WiSo - for this and your other volume PR up to you - mine is always 100% :)\n. I'm all in favour - many use volume scaling and I agree the system and XBMC volumes should be locked together. All the more relevent for non-HTPC situations e.g. tablets, laptops, phones etc.\n. @Wiso - sure. DS and bitstreaming aren't usually friends as much depends on the shared format set by Windows and other programs, which may force resampling etc, so didn't even try to incorporate (sorry XP folks), but will review/test.\n. @wiso - sorry :) small world!\n. @wsoltys - actually it didn't (kinda as expected) and we had a discussion about it, but it's buried in that thread somewhere. Will play around this evening and report back, but the issue has always been getting data thru DS untouched - simple in WASAPI, but a house of cards in DS.\n. @wsoltys - I played around with DS a little further but the basic issues keep rearing their ugly heads (mostly that you can't really enforce what gets out the other side of DS). Here's some of the previous chat on attempting it (goes on for a few pages): http://forum.xbmc.org/showthread.php?tid=121877&pid=1043015#pid1043015\n. @wsoltys - not so much an exclusive mode thing (DS treats DSSCL_EXLUSIVE the same as DSSCL_PRIORITY since DX8) as keeping the Kernal Mixer out of the equation.\nI've got this to work on Win8 (has some improvements over Win7/Vista in the Kernal Mixer that messed about by dithering the audio even when volume is 1.0f), but you'll want to remove:\n- line 371\n- lines 376-378 inclusive\n- line 365 change \" const u_int numTests        = 6;\" to \"const u_int numTests        = 5;\"\nMy ATI cards & receiver didn't balk at the channel counts, but some might. Probably safer to set them.\nHaven't tested on Win7 yet, but will in a day or so with the above changes.\nCan throw together a patch with the above if you like.\n. FWIW the WASAPI sink runs at 50ms by default and on a P4 here, and I've run as low as 15ms on a decent AMD A6, so GUI sound latency is not much of an issue if the final output buffer can be kept to a minimum. That's basically total output buffer, not multiplied by some further factor like periods * period size. ALSA's async and WASAPI's IRQ-driven, so obviously different methodology, but @gnif is right - the sounds are mixed at the last possible moment, so unless it's possible to let ALSA mix them or can drive the ALSA buffer size down you're in a damned-if-you do position with those....\n. @arnova - is it 5 seconds before the song ends? And is it especially noticeable when changing sample rates / channel count (e.g. mp3 to 24/96 FLAC)? That's a different issue if so (meaning outside of the sink level and external buffering).\n. @arnova - yep - try as above with a change of sample rate etc it's double-whammy as a lot of pre-buffered stuff gets dumped as the masterstream gets changed and the sink re-inited. It's not a quick-fix - much of the engine needs a re-write to counter that. But what you describe (mp3 > mp3) is largely processor speed / buffer size dependent atm. Things get locked up badly as the file / stream buffers fill and the decoder works. Output buffer size is a countermeasure but not the full solution.\nSorry for the off-topic.\n. ",
    "JasonBSteele": "How would this new setting work? Is it applied to all items or can you specify how to sort each media type?\nI'm assuming that it is applied to all - so if I set a sort of \"none\" then as long as the files on the server are in the right order, so will the music tracks displayed on my connecting device.\nSo for music I will probably need to add the track number to the front of the file name:\n01-foo.mp3\n02-bar.mp3\nand unfortunately videos that start with \"The\" will be listed under T.\n. ",
    "steino": "As far as I know all VDPAU cards does not support the high 10 profile and as such would need a patch.\nI know this patch would require a upgrade of the internal FFmpeg to work, but it does currently work on a newer external FFmpeg and can be used.\nEdit: I've added an updated version of the patch written by the original author.\n. Some quick research shows that dxva and vaapi suffers from the same problems vdpau does, I have no way to confirm/test this for myself tho.\n. It's been rebase'd and squashed.\n. @elupus Does this look good?\n. Oh lol, I must be going blind. I think this should be correct.\n. ",
    "theeternalsw0rd": "The reason I did it outside of vdpau only is because no hardware currently supports the hi10p profile.  I went with using the supported profiles instead at the recommendation of CrystalP.  The associated ticket is http://trac.xbmc.org/ticket/12046.\n. I only applied the check to the HAVE_LIBVDPAU portion because I don't have other hardware to test or confirm, though based on what I've read, the other acceleration methods would need to apply this check as well.  For this reason I put the switch outside the lib check with a separate boolean to make it easy to add to the others, without overriding anything if I was wrong.  setting m_bSoftware is the ultimate solution, but what needs to be determined is if the switch is hardware-specific or not.\n. Apologies for not knowing the proper netiquette.  And thanks.  For gentoo, the issue is the \"stable\" version builds with stl support but doesn't enable it without adding the environment variable TINYXML_USE_STL=YES.  The \"unstable\" version contains a patch for tinyxml.h that allows building without needing the environment variable, so the solution is to either use the unstable version, or apply the TIXML_USE_STL=YES variable when building xbmc.\n. ",
    "NEOhidra": "When i find a way to test it will make a new pull request, if it does work.\n. I was not aware that the addons have different repo. It is hosted by sourceforge (git://xbmc.git.sourceforge.net/gitroot/xbmc/scrapers) isnt it?\nWill have it in mind next time.\n. Some comments like occurence of strings are missing. I suppose that they will exist only in transifex.\n. @MartijnKaijser cant you add some fake email? I would like to keep them - its a hell sometimes to find a way to reach translators. I know transifex is there but everyone have email and why force users register there.\n. @MartijnKaijser i just mean that forcing users to use a translators tool isnt making sense. Also the user has to be aware that XBMC uses transifex. Having an email in there is a plus, at least for the users who have some remarks but the spam hazard is there indeed (but is there someone with public address who who doesnt receive any spam in his inbox).\n. ",
    "GabrielL": "I don't know anything about xbmc code, I just find this bit a little annoying when updating lots of watched statuses. I will check about GUI_MSG_UPDATE, it seems more appropriate.\nThe Callback is never deleted, it is a mistake.\nYes it is video specific, but the code seemed a bit silly with CGUIWindowMusicNav using it. Perhaps inside CGUIMediaWindow is not the good solution either.\nI will send new patches which take into account theses remarks.\nThanks.\n. Here it is, like you asked.\nGUI_MSG_UPDATE is quite better than the thing I was doing, thanks for the advice.\n@thezoggy : there was a check in order to avoid that, I have keep it in CMarkWatchedJob::DoWork(). So it is not possible to mark as watched something when updating.\n. Done. All squashed.\nLike always, comments are welcome\n. Hi,\nThere is some problems with this patch, I need to see a little more about it, It is not ready as it is actually.\n. This feature is now a little more tested, and is working as expected with both db engines.\nLast time, there was a problem with a MySQL Database, but it seems to have disappear with other code updates.\n. see pull request #866 for the correct patches, properly squashed\n. Here is the code, updated with your suggestion, I have not squashed it down already, in order for you to easily see the changes\n. It is now rebased, sorry for the delay\n. ",
    "Quentangle": "Damn it, I forgot to branch before I sent the pull request. That's what happens when you don't sleep.\n. I thought about that, but I figured that passing negative seasons might give some odd results both in the scrapers, and in XBMC itself. If you think it is safe, then I'll change it.\nI'm also implementing the first two suggestions now.\n. Done. I also took your suggestion and made defaultSeason default to 1 in the declaration of TVShowRegexp. I couldn't see any evidence of seasons being unsigned, so this will now allow negative seasons to be the default.\n. I realised that these commits and my repo are pretty damn messy, plus I don't really want to rebase now that it has been pushed to github. Instead, I have discarded these changes and made a new branch from the master, and re-done it all in there properly.\nSo I'm going to close this pull request and open a new one for this new branch Quentangle:default_season_attribute.\nThanks.\n. The replacement pull request can be found here.\n. I changed the constructor because it seemed far more logical, but I suppose that it would just cause unnecessary problems. I've fixed it now though.\n. ",
    "tomtor": "Refactored as requested by elupus:\nhttps://github.com/xbmc/xbmc/pull/697\n. The settings have the same tags. It will accept globalaudiodelay AND globalavdelay\n-    TiXmlElement* pAdjustAudioDelay = pElement->FirstChildElement(\"globalaudiodelay\");\n-    if (!pAdjustAudioDelay) // backward compatibility\n-      pAdjustAudioDelay = pElement->FirstChildElement(\"globalavdelay\");\n. I tested with just the global delay and not the min/max.\nThe fps code in renderer was wrong and always was set to 0. Latest commit should fix this, although\nfps is not the screen refresh rate but the source rate. Not sure how to get the refresh rate, although in practice this should not matter I think.\n. Note that if we ARE using the source fps the as.xml should really replace the tag refresh with fps.\nI rather use the refresh rate if available in renderer \n. You don't need to change the syntax...\n2012/2/19 Albinoman887\nreply@reply.github.com:\n\nso in the XML I set based on fps? Any particular prefix? Or can I just do min 23 Max 24\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4043830\n. XML looks ok.\n\nWhat do you mean with:\n\"and in the string output there is the ad: string but its 0.000 instead of -250 which is my setting\" and \"the counter at 0\".\nHow do you test? I tested by using 500 as the delay and watching a fragment of a 23.976fps movie.\n. My as.xml\n\n\n Settings to configure global AV (audio) delay. Some displays have\ncomplex video processing \n and can introduce a noticeable delay in video. \n\n```\n  Default global AV delay. If not specified, default is 0. \n0\n AV delay may depend on display refresh rate (not movie fps!). \n\n23  Define a range between 23-24 Hz \n24\n500       <!-- Workaround for the infamous 24p 250\n```\nmsec audio delay bug -->\n     \n<!--\n\n60\n80\n\n     -->\n\n\n\n2012/2/19 Albinoman887 <\nreply@reply.github.com\n\n:\npreliminary tests arent good. it is still keeping the counter at 0 here\nis what my xml looks like\n\n\ntrue\n\n\n\n\n23\n24\n-250\n\n\n\n\nis that correct?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4044689\n. I see,  I was afraid that you were referring to that. The effective global\ndelay is NOT shown in that display. You will have to listen and watch the\nmovie to see the effect...\nOp 20 feb. 2012 11:25 schreef \"Albinoman887\" \nreply@reply.github.com\nhet volgende:\nif you press o on the keyboard there is a banner on the top of the screen,\nlook for the string ad: it will say 0.000 its suppose to say whatever your\ndelay is set for that particular res. its not working for specific\nresulstions i set it to 250 but the ad string still displays 0\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4051275\n. I assume it is the delay which you specify in the GUI. I will check if I\ncan add the global delay to the \"o\" view as a separate entry.\n Op 20 feb. 2012 13:24 schreef \"Albinoman887\" \nreply@reply.github.com\nhet volgende:\nit was with the old patch, I'll mess with it some more and report back,\nwhat is that ad represent then\nOn Feb 20, 2012 3:59 AM, \"Tom Vijlbrief\" \nreply@reply.github.com\nwrote:\n\nI see,  I was afraid that you were referring to that. The effective\nglobal\ndelay is NOT shown in that display. You will have to listen and watch the\nmovie to see the effect...\nOp 20 feb. 2012 11:25 schreef \"Albinoman887\" \nreply@reply.github.com\nhet volgende:\n\nif you press o on the keyboard there is a banner on the top of the\nscreen,\nlook for the string ad: it will say 0.000 its suppose to say whatever\nyour\ndelay is set for that particular res. its not working for specific\nresulstions i set it to 250 but the ad string still displays 0\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4051275\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4052460\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4052739\n. Added GAD to \"o\" view\n. @elupus Can you tip us how to access the refresh rate from the renderer code?\n\nNote that the theory of a constant number of frames is probably not correct because 24 needs eg 200ms\nand 50/60 need 0ms\n. It should but it does not. Refresh is always zero. See the change in HEAD-1.\nAnd yes it is an xbmc bug. It manifests itself on my two screens and three\ncomputers (windows and Linux). It effects everyone trying to use 24p on\ntheir screens.\nIt is also present on the xvba branch.\nNote that adaptive audio delay is more than just a workaround because some\nscreens DO have a variable delay.\nOp 21 feb. 2012 17:10 schreef \"Joakim Plate\" \nreply@reply.github.com\nhet volgende:\n\nIf it's a bug, then fix the bug don't add workarounds......\nGetResolution on renderer after configure should give you what you need.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4077768\n. xrandr -r 24\nmplayer -vo gl movie.mkv\n\nSync is ok...\n2012/2/21 Joakim Plate <\nreply@reply.github.com\n\nEveryone except me.... On Intel gfx. But again could you check mplayer with\n-vo gl. It could be opengl/d3d related.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/697#issuecomment-4083500\n. \n",
    "jetskijoe": "if you now add modification date to the database could that value be used for rescanning nfos so if the modified date is newer then the nfo needs rescanned?\n. ",
    "Monkeysweat": "I'm running openelec on the Raspberry Pi which is built off the nightlies, it is doing the same thing my PC did when it was on the April release, some movies and tv shows stayed as the most recently added videos no matter how many videos I added,, I took my PC back to the latest stable release and it fixed itself, however the Pi has not current stable release is stuck with this issue,, is this going to be fixed or has it been reported or has it been fixed and the build of my Pi needs to be redone?\n. it seems to have been the issue and it does appear to be fixed, no issues since I updated to the June release,, been running it for at least 3 weeks now.\nThanks!\n. ",
    "Tolriq": "As a simple comment but httpapi is deprecated and eventclient currently does not support F0/F1 keys :)\nSo handling it better after eden won't kill so much soft.\nCurrently we can't send F0NN or F1NN we need to send NN and pass a flag VKEY that the eventserver convert and add the F0 flag.\nSo this patch makes us send NN or 1NN with the flag. As suggested to montellesse , adding a new flag ASCII should perhaps be the way to be more logical and durable.\n. So what's the point of the BT_VKEY flag  (0x40) that add the 0xF0 flag when received from the event server ?\nFor me the \"KB\" means you'll pass through the keymap, and so we should use a packet without map_name.\n. Whatever solution will be good :)\nJust don't kill the possible use of the keymap since this is the way it is used now by everybody :)\n. Yes and for example \"l\" to rotate subtitles, all those little things that are not yet in Json-RPC.\nAnd i think i saw the ipad constellation app, that give more complete keymap to add more remote functions in their editor.\n. Well i'm not sure about what you says about the flag.\nIn EventClient line 397 :\nif(flags & PTB_USE_NAME)\n    keycode = 0;\n  else if(flags & PTB_VKEY)\n    keycode = bcode|KEY_VKEY;\n  else\n    keycode = bcode;\nand just before :\nif (flags & PTB_USE_NAME)\n  {\n    if (!ParseString(payload, psize, button))\n      return false;\n  }\nThat is the root cause of all our problems :)\nIf we send a packet with a map we must send an string of the button name that will be parsed.\nIf we want raw key to be send we need to send no flags.\nIf we want to send Vkeys we need the vkey flag since if we do put the flag directly in the code, it won't be removed after during treatment.\nBut since there's no ASCII flag we have no way to send keys for dialogs.\nFrom what i understand of the code this PR does not allow  the use of KB to send vkeys, but raw buttons packet with the vkey flag and a value of 0x1NN.\nOr this set the fromservice only when received with a map_name and it won't work at all.\n. Would be cool for after eden :)\nThe only doubt i have with the PR is that the commit 65069ac the fromservice flag is set also when not sending the BTN_USE_NAME since the part of the code passing from eventserver to Capplication::onkey is a little obscur to my understanding.\nMaybe @Montellese i can build you a Yatse Widget that send the vkey flag and the 0x1NN so you can test ?\n. Any chance to have http://trac.xbmc.org/ticket/12678 investigate / corrected before Frodo ? \nSince this is the last bit that make me use http api.\n. Because in Yatse I use a full virtual keyboard that fill Xbmc dialogs as users write, and this was one of the most requested / welcomed function from users.\nThis is easier for them to write and correct with backspace than having an edit box that send full text and needs to do it again when mistakes and so on.\nAnd also because I do direct physical keyboard to Xbmc.\nI also have a direct to keymap mode but this one works ok.\n. There's always an edit that shows up in Xbmc interface for many case like filter or addons question, so no way to avoid this part :)\nOn remote side :\n- If the user have and physical keyboard he needs to open an editbox then fill then send, not natural. (And with same problems as non physical one)\n- if the user don't have one :\n- Current solution : a button shows a virtual keyboard like the one on screen and the box does fills has he type, the arrows / backspace and enter buttons have attended effects.\n  With en edit box :\n  The user write things then send and then auto commit on Xbmc. If mistakes lots of actions to start again.\n  If don't auto commit then need 2 buttons a send and a commit less intuitive.\nIf send and no auto commit but dismiss on client side, on edit then the user needs to either rewrite the whole text he have written or if we always keep beetween session clear the text when a new dialog is shown.\nTo answer to Montellese : I can assure you now with SMS addicts & such this is really no more true users do look where the text should appears and absolutely not the keyboard. Do you still watch your keyboard when coding ? :)\nAnd BTW since there's a eventserver command that does fill this needs and surely only needs a little fix/\nTo answer Koying : I don't say the new way is bad I just say the way I use eventserver is the way my users and I loves and prefer and would like to not loose :)\nOn a side note, removing http will also limits some remotes to get access to video actors, and removing vfs will kills constellation PVR functions :)\nTo finish on a good note Xbmc is really a cool app with lots of opening for remotes that contribute to it's success so would be cool to not kill some function assuming that best is better than good.\nPS : My english is as usual far from good so no aggression or attacks in my text :)\n. I'm not arguing about the removal, but just for a fix in EventServer that will allow some things to continue to work.\nBTW EventServer is here to serve as an input service and should allow to input unicode chars.\nBut no problem I'll switch to what you all think is better for users and send them complaining here :)\nAnd to finish with regarding the phone screen just try things like swipe keyboard and you'll understand how / why users don't look the phone.\nAll users wants gesture mode & such to have phone acting like a real remote, when I switch TV channel on my tv I don't have to watch where the numbers are because I know.\n. Ok so I'll make the PR for that :) Was already proposed a long time ago during discussions with Montellese :\nhttp://forum.xbmc.org/showthread.php?tid=68263&pid=1012660#pid1012660\nAnd the rest of the discussion  : \nhttps://github.com/xbmc/xbmc/pull/675\nSorry for the last mail here but don't want to work on PR that will be dropped since this is a longggggg and oldd discussion that have trends to get forgotten :)\n. Well it does have 0 impact on existing clients :) and does reproduce the old httpapi way of functioning.\nI tried to open a discussion on this many many times. The last answer from @jhsrennie at http://trac.xbmc.org/ticket/12678 was drop EventServer.\nSince this have been around for 9 month anticipating http api drop and we are in feature freeze I choose the simplest path to have a chance to not lose something Yatse use and that have no reason to not continue working for Frodo.\n. No not possible :)\nI only change things that can only comes from EventClient, no change to anything that can have impact when not coming from EventServer.\nFurthermore since EventServer packet parsing can't get more than a ushort there's also no possible way to generate a false VKEY flag for existing clients.\nI really choose the simplest path for no impact so normally no reason to refuse this simple correction even if not the best rewrite the eventserver may need for future.\n. Well as I said there's multiple way to correct this but since I can't have any discussion before submitting a patch I checked how it works and submitted the simplest possible patch. (And I must admit that this is a .... maze )\nTo send direct keypress we need to send a eventclient packet of type PacketButton.\nTo have it processed correctly in Application::onKey we need to pass the FromKeyboard that check that m_ButtonCode is > KEY_VKEY. (And will then use the m_unicode.\nRemark 1 : the onKey check if the fromService flag is set and handle special case for those.\nThe onKey is called from Application::ProcessEventServer for EventServer.\nThis one fetch ButtonCode from que ES queue then create the correct CKey.\nSince this comes from a service the cKey::SetFromService is called this is the one that check the 0xF100 flag and set the m_unicode. (It set it from the m_Button code - the flag).\nThe ES queue is filled with CEventButtonState that does not handle unicode or such so only the bcode with the flag set or not.\nThe queue is filled by OnPacketBUTTON that can have a special flag PTB_VKEY that will then generate the buttoncode by adding the flag.\nThis is more or less how EventServer works for key-presses. (I just changed the | flag to a + flag to not loose data since it's the way it was working for old HTTPApi).\nThe only drawback is that of course unicode value added to 0xF000 is bigger than a unsigned short so needs to change to uint.\nThe solution you propose is the way I proposed 10 month ago, just adding a new flag for Button Packet then adding a flag to CEventStateButton and finally call the correct CKey constructor.\nBut this include new feature and since I fight for long time for this I was pretty sure that it would have been postponed to after Frodo killing one feature of Yatse.\nEdit : If you agree to possibly add the better way to Frodo I can update this PR to this correct way without any problems :)\n. i ve just change  the | to a + not the rules :(\nthe 0x100 is set from the client since there's no flag to set it in eventserver actually.\n. Updated to PR to the solution I suggested long ago, I added a new flag instead of using the existing PTB_VKEY to not break compatibility with old clients that adds the 0x100 on their side.\nI hope this won't be considered a new feature and can still be merged for Frodo :)\n. Update PR.\nNo other choice than moving the if apart since the SetFromService would kill the value and I can't remove totally the call to this to avoid break of old clients.\n. Hum sorry new to git no idea what you mean about 2 :)\nEdit : and forgot but I named it like because KEY_UNICODE is already defined :(\ndefine KEY_UNICODE         0xF200\nSince in the final it's only a flag why not FLAG_UNICODE ?\n. Hope I did good :)\nDid not prefix since the FLAG is defined in EventClient Namespace.\n. This one I know :p\nGit is not very easy for basic SVN users :p but really powerful :)\n. Since getting data from JSON is slower than via HTTP, more and more remotes will do offline caching to support rpi / atv and such and still have good performance.\ngenreid is quite useful.\nAbout artist : while for songs it does makes sense to have one concatened string, for compilation albums with tons of artists, an array seems more logical. So keeping an array to keep consistency sound better no ?\n. For my use and normal Windows use expected by users since this is the Windows way, a non focused window or minimized one should not stop the screensaver from starting or at least be configurable for the user since this will break normal Windows behavior.\nUser might want to listen music video or concert and be minimized and still want the screen saver to pop to not kill their old screen or Plasma with still images since Xbmc is behind for example.\n. Don't know if the update of the commit did trigger a mail :)\nI just saw your last PR also bump the version to 6.0.2 how will this be handled ?\nSince I'll soon start another PR should I keep 6.0.2 since it will be merged in the same milestone or do we need to track this version for each PR ?\n. Well according to my tests directories still does appear first at least on windows should perhaps be tested on other OS.\nBut the main question would be does the GUI force folders first or use underlying OS settings ?\nWhat is the impact of having the filetype field set ?\nThe problem I see with setting the filetype in ::GetDirectory is with the FillFileItem() that seems to change the m_bIsFolder in some case, that would lead to code duplication that I don't like :)\n. After reading the full sort code the flag is taken in account in current implementation since we use the CFileItemList::Sort to sort the results and this one handle the m_sortIgnoreFolders.\nSo there's no difference from GUI.\nI'll change the way to add to filetype field, code duplication is not so bad if it's for better performance.\n. Ok updated the commit, you already have a check in HandleFileItem for the specific case of GetDirectory, I just move the field to there.\nSo we have now same feature as GUI, support for Limits and better performance, this one should be OK now.\n. Commit updated.\nGood to now the param by position thing for future PR :)\n. Changes done.\n. Bumped the JSON version to 6.2.0\n. Not the Player.Open since it had never worked on opening directory I guess it can't correctly choose the correct playlist / player.\nDid not checked on correct that yet.\nBut the internals of Player.Open does call FillFileItemList in the same way as the others so when it will open directory it will work the same :)\n. Well I had doubt before adding the check but I don't know what is better when the user makes a voluntary mistakes \n- Auto correct the error leading to command from user resulting in action different from what is asked\n- Let the user does the error and let it fails (in this case not fails but queue things that won't be played).\nTo me I think auto correction may be disturbing and complicate developer debugging a lot.\nSo the last solution would be to send back an error when forcing wrong type for a specific playlist like wrong params.\nYour choice on this :)\n. Updated commit : \nForcing a wrong type for a specific playlist return an invalid params.\nNow also authorize to queue videos to pictures playlists\n. PR updated\n. PR updated with remarks\n. Pr updated :)\nNow if as discussed in PM you have time to find me what to do next ;)\n. Updated PR thanks @jmarshallnz for the tips.\nHandle correctly more manual cases.\nNot sure if my change to the makefile is enough.\nDuring voluntary bad data tests I discovered that unescaped strings \nsmb:\\\\toto\\tata\\\nwill be escaped by JSON to \nsmb:\\\\toto\\\\tata\\\\ (note the first \\\\ that are not changed to \\\\\\\\)\nnot sure if this is a potential real case problem.\n. Since this one was still not set as accepted for May merge window I updated it for the AddFavourite.\n. No Git expert but should be ok :)\nWe are in the problem I was talking about with the JSON version numbers that by being changed for each users will always be in conflict since starting from master only the first increment will work without problem.\n. ",
    "tidalf": "Ok (i've not really seen what are the other implications, it works quite well). \nI don't really catch what can be your alternate fix, my plugin can't directly set the real url because it expire so it's better to resolve it at play time.\n. you mean 2 commits, one with only plugin:// and a second one with musicdb://->plugin:// ?\n. thx to cptspiff i know some rebase magic now, hope it fit :)\n. I've looked at a way to add plugin resolv in musicdatabase instead but\nthere is a pb with CreateCodecDemux when using a plugin item we don't know yet if it will be mp3 or flac or something else... (the standard items use the extention at the end of the musicdb:// url) we could store it too, but its nicer to let the plugin choose.\n. Hello there...\nlooks like a dead request... :) should i update the patch for the current master and try a new request ?\n. even this simple one : https://github.com/tidalf/xbmc/commit/9ff3ec29b1cc1531110d7c3d55ee0a2695bfc816 ? it's more a bugfix than anything else ? :)\n. I've fix the comment on the old https://github.com/tidalf/xbmc/commit/9ff3ec29b1cc1531110d7c3d55ee0a2695bfc816 but it will not apply without conflicts on the current master. This one is up to date :\nhttps://github.com/tidalf/xbmc/commit/be1a8ff19811adf457917a3c5afe4ecf9a72b768\nThanks !\n. I have updated the fix for resolving the musicdb items, its here : \nhttps://github.com/tidalf/xbmc/commit/5c1439a0da722f7d12e2a2247b54b827faf84a9c\nWhat do you mean by generically (i'd love to help on that one) ? \n. ",
    "dersphere": "Independently from airplay, is there any chance to have the PipesManager available in Python?\n. I am working on a video/sound/picture calibrating helper addon. For the audio part I need a way to play a within python created PCM stream live in xbmc. This way I could implement some kind of live sinus test tone generator.\n. Should I include these .dmp files to be uploaded by the \"XBMC Log Uploader\"-Add-on? Crashlogs for OSX/IOS/Linux are already included.\n. At the moment the add-on looks for matching files (would be .dmp in that case) and asks the user if he want the most recent (sorted by mtime) to be uploaded.\n. FYI: freegeoip.net has a request limit of 1000/h (which is ~1.1 request every 4 seconds). If this limit is reached property won't be set and never retried.\nEDIT: sry. I re-read the source, limit is per IP, forget my comment.\n. Firstly, thanks for your comments.\nRegarding your question: If you uninstall the last remaining add-on from the list you will see an (addon empty) list plus the \"Get more...\" (path=add) entry. I guess this is the expected and wanted behavior, not?\n. done\n. Does this have a chance to be merged in May?\n. All previous comments were code-related - what about the addition itself? Is that something you want or want not in?\n. I can't see if this needs to be rebased - please tell me then.\n. Thanks for merging :)\n. Not sure that I got it right but I don't need to change something in the \"XBMC Log Uploader\" Addon, right?\nhttps://github.com/dersphere/script.xbmc.debug.log/blob/master/addon.py#L117 L117-L126\nSorry, I have no OSX device to test with.\n. What about returning bool (subclass of int) on bool-settings?\nSame with settings of type enum, it should return the index as int.\n. At the moment it returns strings \"true\"/\"false\". Integers 0/1 would match Pythons bool-checking.\n. Fine, now I can delete \"figure out how my GF sometimes accidentally shuts down my htpc\" from my todo list :)\n. I see the problem only on favourites, yes. If I didn't overlook something the builtins.cpp:PlayMedia() Method is also only used there.\nI don't think that all of the examples would work with a removed trailing slash - it depends on the remote source. I know some rtmp sources which definitely require a trailing slash at the end of the playpath. And like I said, xbmcswift based Addons (Radio, Khan Academy, Al jazeera, Khan Academy, MyVideo.de, overall >10 in official repo ...) definitly require the slash if its set in the plugin.route decorator (which is atm in all xbmcswift based plugins) - it does not work if the slash becomes removed by xbmc while adding a fav entry.\nPersonally I would prioritize the possible solutions in that order (best first):\n- Me and the other (xbmcswift-) addon authors should alter the plugin urls to not end with a slash (and close this) if its not a folder.\n- This patch got's accepted\n- XBMC get's altered to remove the slash, me and the other addon authors have to alter the plugins to match both urls (with and without trailing slash - new entries without).\nBut I'm still wondering why it is needed to detect if an entry points to a folder or a playable entry at this place. This can be 100% sure detected while adding (listitems.isFolder) something to the favs or while calling the plugin (returns one or more listitems) to open the fav entry.\n. If I would add such a method we would have three relevant methods which would be used for fav entries:\n- ActivateWindow() (for showing a list of items)\n- PlayMedia() (for playing a playable item AND showing a list of items - depending on trailing slash or isDir param, ignoring isFolder-bool)\n- PlayItem() (for playing a playable item) (NEW)\nIn theory I would prefer exactly one method for listing and one method for playing ;)\nIMO adding another method would be overkill ;)\nBest and easiest would be closing this and change all addons to not have trailing slash in playable item url...\n. Thanks for your comments - I will do the changes spiff requested.\nOff Topic: Are the HAS_PYTHON-ifdef's still needed?\n. @cptspiff Thanks, just wanted to know. Will respect them.\n@garbear I would not recommend calling g_pythonParser.StopScript() (at least not so early): It would take several seconds to get them killed. Even my demo screensaver which is able to exit itself after receiving the announcement will hang for a few seconds after StopScript() is called.\nI'm also wondering about your other comment about the single extension point limitation: Addons can have multiple extension point and it also works in that case here (For a demonstration see https://github.com/dersphere/script.screensaver.test branch:multiple_extension_points).\nI updated this PR and my demo screensaver to reuse the xbmc.ui.screensaver extension point.\n. @garbear \n\nThe test screensaver has problems running on top of other addons. \n\nThis affects all screensavers - if any modal window is open (or a script-addon which uses windowxml.doModal() is running), m_screensaver is changed to \"screensaver.xbmc.builtin.dim\" - independently what screensaver was set in the settings, see:\nhttps://github.com/dersphere/xbmc/blob/1bf884017651df89f8a5608924f3e63c574d3a3c/xbmc/Application.cpp#L4597\nMay I change that behavior?\n@cptspiff Aye sir - I will (try to) move it :)\n. @jmarshallnz thanks for your comment (btw. willy-nilly is actually in my dictionary :D).\nRegarding the modal-problem:\nChanging so much logic/structure in other code parts clearly exceeds my c++ skills - I don't care about commit authorship, so if anyone is willing to do the needed changes: You're welcome :)\n. I planned on doing the changes requested by @cptspiff but got out of time. I won't have time for the next weeks.\nSo if you want to wait, if anyone wants to open another pull request and close this one or if you want to merge the actual version - feel free.\n. closed in favor of #1127 (...carry the torch... ;-))\n. Is there no way to avoid having a black window behind python based screensavers while using WINDOW_SCREENSAVER?\n. Yes :)\n. This causes issue #13351 (http://trac.xbmc.org/ticket/13351).\nIn short: \"Choose a Scraper\" and \"Current Scraper\" are empty on second enter of CGUIDialogContentSettings:\nOn first init m_scrapers are being filled, on deinit they are cleared and on second open they are not beeing re-filled.\nI would fix that with an PR but I don't know what is the desired way ;-)\n. Not sure if this is a surprise but builds (and works so far) fine on ubuntu 12.04 ;-)\n. -1. A dependency can be another (visible) plugin. And a user could wonder why the required video plugin was installed. If he then disables/uninstalls the required plugin the original plugin stops working.\n. @MartijnKaijser: This is going to be offtopic but of course you can uninstall a via dependency installed addon. You can easy reproduce (with eden or master): install \"TheHollywoodreporter\" which installs \"youtube\". uninstall \"youtube\".\n@Montellese: You are right. But at least it should be shown on required plugins to have any kind of notification on visible addons.\n. @NedScott: What about showing \"stop scanning\" if database is scanning but not showing \"update library\" when no scan is in progress?\n. I squashed the changes into one commit with all requested changes.\nReady for next round :)\n. @MartijnKaijser:\nButton \"Scan for new content\" while on a source which contains TV-Shows was already correct. (\"Scan for new Content\" or \"Stop Scanning\" depending on IsVideoScanning)\nWhich button on which item do you exactly mean?\n. @MartijnKaijser: Could you please recheck?\n. @cptspiff: Is that something you consider merging in this (final) window?\n. Just ping me if you want something to be changed.\n. @MartijnKaijser: Should be rebased now.\n. If you are interested in a user opinion: I would like it even more if it would copy or move files one after another with any kind of queue and not parallel.\n. Oh, looks like I was not precise enough - sorry.\nWhen I start copying file A and then start copying file B, both copy-jobs are done at the same time (and the progress window switches between the jobs).\n. Maybe you can fix the space/tab mixture ;)\n. @jmarshallnz: I did the changes you requested (changing to !empty() instead if length() >1)\n. I just want to note that it worked like expected \"a few months ago\" while the python-screensaver-PR was merged (#1127).\n\"Something\" (tm) has changed since than. Maybe @garbear can have a look?\n. Example for AVI with same issue (reported by me 16 months ago): http://trac.xbmc.org/ticket/12107 g\n. ",
    "Uxorious": "There really should be a UI option to pick the preferred behavior.\nWith so many users/nationalities/preferences, there is no way to pick a system behavior that will satisfy everybody.\nThe one thing I agree with in the discussion above is that if the user changed the audio track for the file, it should pick that track again on subsequent plays.\nI would love to see a new option in the UI ... lets call it \"Intelligent track picking\".\nFor choices in it, I could see:\n1) OFF (XBMC <= v10 behavior I think).\n2) \"Best track\" (XBMC v11 behavior ... except why is AAC a worse codec than AC3 currently).\n3) Original language (Match audio language to video language ... some of us hate dubbing).\n4) User language (Match audio to GUI language ... some of us prefer dubbing).\nThere could also be an argument for having a \"Preferred language order\" (some of us know more than one language and would be fine with those).\nAt any rate, I'm looking forward to having any way to improve the current (v11) situation. Thanks!\n. > elupus: AAC is probably worse since it can't be passed through.\nActually it can ... but no amplifiers seem to support it :-)\nAt any rate, if that is the reasoning, then the selection should really also take a look at the HW configuration.\nIn my case, it's hooked up with HDMI (supporting 7.1 PCM), so passthrough is a non-issue.\n. I guess I will find out if it will work for my files or not ... the \"look for the best quality stream\" scares me.\nWill there be an option to just do what v10 did ... always play the first/default track?\n. I did read through it, but its not obvious what the behavior will be.\nFor example, lets say I have an MP4 file:\n    Video = German\n    Audio 1 = German, AAC, 5.1\n    Audio 2 = English, AC3, 5.1\nUI is set to English.\nIn XBMC v10, it plays Track 1.\nIn XBMC v11, it plays Track 2.\nWith your 3 options what will it play?\n    1) Original language (whatever is the default/first audio stream in the video container).\n        Will it play German?\n    2) User Interface language\n        Will it play English?\n    3) Any specific language\n        No idea what this will do - but I probably wouldn't use it anyways.\n. That's exactly what I feared ... it will not work for me :-(\n\n1) The option is called \"Original stream\" and ignores the streams language completely.\n\nSo there are no options that actually looks at the language WITHOUT forcing anything?\n\nSo it will look if there is a stream marked with the DEFAULT flag.\nThe problem is that MP4 does not have any way to mark a \"default\" stream ... the first track is the default.\nIf none have the default flag it will use the \"best\" audio stream (based on channels and codec).\nHow about making a change so that MP4 treats the first track as the DEFAULT one?\n\nOr how about making the track selection consider the language as welI ... so if the first track is marked as German, then only consider other German tracks for replacement?\n. > Montellese: Sorry but I still don't understand your problem (apart from that you think AAC is better than AC3).\n\nIf you leave the new options at their default value \"Original stream\" everything will work exactly the same as\nit does in Eden.\n\nYeah but if you read my comments, you would realize that Eden broke the behavior from Dharma.\nAnd yes, AAC is arguably a better quality codec than AC3.\n\nMontellese: What would be the use of looking at the language without forcing anything?\nWhy would I want to look at the language in the first place if I don't use it in the decision process?\n\nThe problem is that right now Eden ignores the language in its decision process!\n\nThat's why I use the MKV container. It has the best support for all those flags like FORCED, DEFAULT etc.\n\nMKV is a lovely format, but I have devices that don't support it.\n\nI don't know how MP4 is handled. But just adding a special handling for MP4 just for you does not sound like\na valid option to me (and even if it is I won't be the one to code it because I don't have any MP4s).\n\nI am not proposing special handling for MP4s.\nI am proposing an improvement to your pull request.\n\nWhy do you have \"secondary\" streams encoded with AC3 (whereas the \"primary\" stream uses AAC)\nif you prefer AAC anyway? Doesn't really make sense to me.\n\nWho says I made the files?\n\nIf you don't like how the current code (in Eden and in master) works you already have this problem now and it\nwon't get worse. You also should consider that I was/am the person who took the time to write this code so\nobviously I coded it so that it works the way I want it to. If one user (out of many many) has requirements that\ncompletely conflict with my needs I can't do much about it.\n\nThe sole reason I am here is because I really appreciate that you are working in improving the situation.\nUnfortunately you seem to believe that what I am talking about completely conflicts with what you are doing, when likely it would have zero impact on you and your needs.\nThe way Eden works right now (your Original stream mode), language is completely ignored, and XBMC attempts to pick the \"best quality\" track - ignoring language.\nThe reason you don't mind that mode is that all your files have the DEFAULT track set ... something MP4 doesn't support.\nWhat I am proposing is to make \"Original track\" do the following:\n1) If a different track was previously selected, then use that.\n2) If a DEFAULT is set, then use that.\n3) Search for the \"best quality\" track amongst all the tracks in the file *but restrict it to either the language of the video, or of the first audio track\".\n\nda-anda: Uxorious - all you have to do is to select \"German\" as prefered audio language and you will always get\nthe \"best\" german audio track by default.\n\nI guess my example was too specific.\nThe usecase was meant to illustrate people who like to watch a movie in its \"original language\".\nIf I watch a French movie, I want the French audio. Watch a German one, and I want the German audio.\nIf I am lucky, I understand the language ... if not, I have the subtitles.\nSure I can go change the UI to force the language every time I want to watch something else, but thats hardly convenient.\n. > so you like to watch the movie in it's native language by default, while the audio track with the native language\n\nmight not be the first/default one?\n\nAlmost.\nYes I like watching a movie in the original language.\nAnd that language IS the first track!\nThe problem is that since MP4 does not support a DEFAULT language, everything gets ignored.\nSay I have a file:\n   Video:German.\n   Audio 1: German, AAC 5.1\n   Audio 2: Chinese (dub), AC3 5.1\nIn this case, it will currently play the Chinese track since AC3 is \"better\" than AAC.\nAny human (who doesn't happen to speak Chinese) looking at the tracklist would probably not consider the 2nd track inherently better than the first one.\n\nSo language detection should consider the video streams language flag?\n\nI would say any attempt to make \"clever\" selection should not ignore the language.\n\nOr would it be ok to just use the first audio track if no \"default\" is set?\nThe later could be achived by setting the language mode to \"original\" and making the \"quality check\"\noptional, which won't be part of this PR as Montellese said. So that would be a separate feature/pull request.\n\nYes that could work too - but the \"clever\" selection being done in Montellese's change would just not be terribly clever.\nAlso, the name \"Original stream\" would be a bit misleading ... \"Highest quality stream\" would be more apt.\n. > Montellese, would it be an option to detect and use the language of the first audio-stream found in the file when\n\nno specific language was specified in the GUI settings? So that when the setting is \"original\" that it checks for\nthe stream in the best quality but limited to the language of the first stream (if defined)?\n\nUnless one of you guys volunteer to make the change, I guess I will sync the code and work on this change request...\nI'm not terribly familiar with the codebase, but hopefully the change won't be too involved.\n. > Remembering the language of the first stream will be a bit difficult because the sorting of all the available\n\nstreams is done in a stateless way.\n\nDo you mean the sorting done in \"SelectionStreams Get\" ?\nWith just a cursory look at the code, it seems we could get the language out of \"m_SelectionStreams\" at the beginning of \"CDVDPlayer::OpenDefaultStreams\" ... or is that already too late?\n(Sorry if I'm asking stupid questions ... I've literally only looked at the code for 5 minutes)\n\nAn easier approach would be (as already described by someone before) a toggle setting to disable the\n\"best quality\" selection and just go for the DEFAULT or the first stream.\n\nI would prefer doing a proper fix rather than just working around the \"Best codec\" issue.\nWhile I personally disagree with the \"Best codec\" list, somebody put it there for a reason, so they would presumably like a proper fix better.\n. Quick question ... was this tested in Windows or in Linux (or both).\nLooking at improving the language detection, and GetAudioLanguage is returning a 2-character code ... meaning it doesn't work.\n[Edit: Fix language code function name]\n. I'm running the XBMCbuntu build, and I tried forcing the audio language to \"French\" in the UI.\nWhen this was done, GetAudioLanguage returned \"fr\".\n. Yes I looked at all that.\nSince the full string is passed in, ConvertToThreeCharCode is passed \"French\".\nThis means it drops down to the last section (size > 3).\nThis results in the load of the French XML file.\nAnd finally it returns the language code from that file directly.\nThe file only lists \"fr\".\n. I'm getting this on Linux:\nLD      xbmc.bin\nxbmc/cores/DllLoader/dllloader.a(DllLoader.o):(.data.rel.ro.ZTIN11XbmcCommons18UncheckedExceptionE[typeinfo for XbmcCommons::UncheckedException]+0x8): undefined reference to typeinfo for XbmcCommons::Exception'\nxbmc/xbmc.a(XbmcContext.o): In functionXbmcCommons::Exception::SetLogger(XbmcCommons::ILogger)':\n/home/Uxorious/Development/xbmc/xbmc/commons/Exception.h:93: undefined reference to XbmcCommons::Exception::logger'\nxbmc/threads/threads.a(Thread.o): In functionCThread::Create(bool, unsigned int)':\n/home/Uxorious/Development/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.cpp:58: undefined reference to XbmcCommons::ILogger::Log(int, char const_, ...)'\n/home/Uxorious/Development/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.cpp:39: undefined reference toXbmcCommons::ILogger::Log(int, char const, ...)'\nxbmc/threads/threads.a(Thread.o): In functionCThread::SetThreadInfo()':\n/home/Uxorious/Development/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.cpp:85: undefined reference toXbmcCommons::ILogger::Log(int, char const, ...)'\nxbmc/threads/threads.a(Thread.o): In functionCThread::SetPriority(int)':\n/home/Uxorious/Development/xbmc/xbmc/threads/platform/pthreads/ThreadImpl.cpp:160: undefined reference toXbmcCommons::ILogger::Log(int, char const, ...)'\nxbmc/threads/threads.a(Thread.o): In functionCThread::staticThread(void_)':\n/home/Uxorious/Development/xbmc/xbmc/threads/Thread.cpp:102: undefined reference toXbmcCommons::ILogger::Log(int, char const_, ...)'\nxbmc/threads/threads.a(Thread.o):/home/Uxorious/Development/xbmc/xbmc/threads/Thread.cpp:125: more undefined references to `XbmcCommons::ILogger::Log(int, char const_, ...)' follow\ncollect2: ld returned 1 exit status\nmake: _* [xbmc.bin] Error 1\n. It at least compiles now.\nThanks!\n. ",
    "linusyang": "Oh, thanks Memphiz! \n[I nearly forget the fact that iPhone/iPad need iOS 4.1 and above but ATV 2 can run under iOS 4. So the property [[UIScreen mainScree] scale] should run after checking.]  -> Ignore this. :)\nEdit: Oh, wait a minute. I was wrong again. Everything is running above iOS 4, so this property is always available. No need to check.\nAnd these changes in two files are all needed. As I was editing the file online with the web editor of github.com, I could only submit two commits.\nSo, how to change these codes 'isRetina' -> 'RetinaScale'? Remove this pull request and start another one?\nThanks again!\n. Thanks again! I was intend to submit a new commit, and now I will try force push. \n. Hi, Memphiz! I have done some changes to my commit. First, I merge two into one commit. Also, 'isRetina' variable is removed and replaced by some 'if' conditions for backward compatibility.\nAnd using \"[[UIScreen mainScreen] scale] == 2.0\" to check Retina is appropriate since iPad iOS 3.2.x isn't supported. Hope this fix will even be useful to the future iPad 3 Retina screen :D\nAny advice? Thanks! :)\n. Thanks a lot for your patience and good advice. :)\nI am going to improve it at once.\n. Thanks for testing! I have already tested on my iPad 2 and iPhone 4 and both got nice display and correct touch area. Hope Davilla will get the same result as mine. :)\n. @Memphiz Good news for all iOS/ATV2 users!\n. ",
    "twinther": "okay, I'll talk with upstream.\nffmpeg in xbmc looks to be pretty outdated compared to ffmpeg master though, but the problem is also present there.\n. Hi elupus,\nI have talked with the ffmpeg guys and a patch has been made. I don't know if it was commit'ed yet to ffmpeg git, but it got the go-ahead on the mailing list:\nhttp://lists.libav.org/pipermail/libav-devel/2012-February/022622.html\nI have updated this pull request to include this patch (and reverted the previous changes I made):\nhttp://lists.libav.org/pipermail/libav-devel/2012-February/022485.html\nBr.\nTommy\n. Hey, the patch is now included in ffmpeg git with commit e3822886ebb3ae97bdae9be264d891f1d35c960b\n. bummer, my YouSee web-tv addon is completely useless without this fix.\nIt's no fun watching live tv 1 minute at a time :)\n. I applied the patch posted on the mailing list in this pull request. It is my understanding that it was applied as-is in ffmpeg git - and it looks that way as well. I did change one occurrence of ffurl_write() to url_write() though.\nI have tested it in xbmc on linux multiple times without any side effects. I actually think the picture quality is better in XBMC (than ffmpeg), but it may just have been the different streams I tested.\nI don't think it will affect other streams, because previously the keep-alive request from the server would incorrectly be parsed as a response and thus overwriting values such a seq and session_id and effectively stop the stream.\n. Hi elupus, with Eden out the door, do you have an ETA on when this will get pulled?\n. Hi elupus, I see Frodo alpha 1 was tagged - any news on getting this merged?\n. hey, please consider this one for inclusion in June merge window\n. Hi @elupus please consider this one for the next merge window.\nalso please let me know if I need to provide further info/updates.\nthanks\nTommy\n. Hi @elupus are you getting these comments I'm posting?\n. Sounds great. I see the August milestone is open now, how about just adding it to the list now ;)\n. @elupus 1st of the month and a friendly reminder from me :)\n. Hi @amet \nI know you already pulled this, but it would be really great to have stat() included as well.\nThis would solve some problems for me in my TV Guide addon.\nAlso this feature request in trac can be closed.. http://trac.xbmc.org/ticket/12849\nBr.\nTommy\n. indent is fixed now.\n. ",
    "abrasive": "This closes http://trac.xbmc.org/ticket/12369.\n. ",
    "trustin": "Was this pull request ever merged?\n. @mad-max His pull request only fixes the issue with external cue sheets, no?  I thought this pull request was rather about embedded cue sheets.  My XBMC installation (11.0 on Ubuntu) doesn't seem to detect FLACs with embedded cue sheets at all.\n. ",
    "kylhill": "Done.\nThanks for turning that into a PR, I totally forgot about it.\nOn Fri, Feb 24, 2012 at 8:33 AM, Max Auer <\nreply@reply.github.com\n\nwrote:\nWOW...that was fast :-)\nCan you also close trac ticket?\nhttp://trac.xbmc.org/ticket/10623\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/724#issuecomment-4157722\n. Thanks for the code review @elupus.  There's still quite a few items that Coverity pointed out that I'd like to address, but I welcome getting this batch of changes merged into mainline.\n. Do you want me to squash my fixup commits back to their originals now, or is this PR ok as-is?\n. @elupus, I think I got it this time.  Let me know if you have other feedback.  Thanks.\n. I've remove the unused member now.  Sorry about these new commits slipping in.  I've been working away on this branch and don't want to lose these changes when I rebase.\n. @Montellese, we could replace GetReplaceString and I agree that it would be more fool-proof, but I'd rather do that in a separate pull request.\n. I tested this for a few hours this evening doing typical usage scenarios:  video playback, scanning for new data, viewing weather info, playing with settings and I didn't notice any issues.\n\nI can't cover all of the possible code paths this PR hits, but I don't think any major functionality has regressed due to these changes.\n. So... I was attempting to upload a new changeset to this PR and I pushed to \"upstream\" instead of \"origin\" in my repo.  Since I have push privileges, these changes are now in mainline.\nI'm really sorry that my mistake has resulted in this possibly premature merge.  I will close this PR and follow up immediately on any feedback given on the changes that are already in mainline.\nAgain, sorry any headaches this may cause. \n. Please see my comments on the commit in mainline.  It looks like a merge conflict that git didn't tell me about.\n. No.  I had just rebased from upstream/master, which is probably why upstream was still fresh in my mind.\n. That's a good idea.  I'll make my upstream repo read-only\n. @opdenkamp I would highly recommend taking a look at the following items:\n1. A pointer to a stack-allocated temporary is returned from libXBMC_addon.cpp XBMC_get_dvd_menu_language() (line 125).  This pointer is invalid after this function returns.  I'd fix the issue, but it would probably require an interface change.\n2. Again, A pointer to a stack-allocated temporary is returned from CAddonCallbacksGUI::Window_GetProperty (line 626).  I'd fix the issue, but it would probably require an interface change.\n. Yeah, that's what I thought.  Do we actually have API documentation for these calls anywhere?\nDo we need to update any existing code to make sure these strings are properly freed?\n. Yes, I have the comments saved in my inbox.  As I recall, there were only two:  The early return if tag is NULL and restoring the function where the hooks parameter is assigned.\n. I believe my latest push should take care of all of your previous review comments.  Please let me know if there's any other changes you'd like me to make.\n. If I rebase this changeset, do you guys see any problem with merging it in this window?\n. Rebase done.  I've tested this pretty extensively on my Linux setup at home and have not noticed any ill-effects.\n. @jmarshallnz I hate to keep bugging about this PR, but are there other items you feel I should address?  I'd like to get this merged into mainline, if possible.  Again, I've been running with this for nearly a month now without noticeable ill-effects.\n. Abandoning PR.  Newer, less-risky PR will be forthcoming.\n. Not a problem, thanks for fixing my mistake.\n. I'm fine with cherry-picking the changes you feel are appropriate.  Would you like me to resubmit a new PR with just the changes you referenced?\n. Alright.  I removed the Random changeset.\n. Does anyone have objections to me merging this PR?\n. ",
    "Rififi77": "Sorry, is my first pull request\n. ",
    "jonathanmt": "Not sure if it's bad etiquette to ask here but was something similar to this ever implemented? (Python JSON Notifications) Couldn't find anything on the forum/wiki & couldn't trace the code all the way through from jimfcarroll's commit last month to check.\nThanks,\nJonathan\n. ",
    "dez-dk": "Are there any more comments or should I squash the commits?\n. Rebased and squashed the commits. Made the regexes that match HTML tags case-insensitive (like in a74d5c).\n. I guess you're right about the CD-subdirs.\nI'm not in the know here but why are CD-subdirs scanned? I would think the movie is still the same and that it has the same information even if CD2 has changed.\nEDIT:\nI should probably point out that the focus of this PR is the RESCANNING of movies. Movies that have not yet been scanned are still scanned in the same way. CD-subdirs are still scanned initially. However, they are not RESCANNED if the user has enabled the \"Movies are in separate folders\" and disabled recursive scanning.\n. Can you point me towards the work that needs to be done? Any plans?\n. I disagree. With these changes I can rescan about 18 movies/second from a remote location. Before these changes I couldn't even rescan 0.5 movies/second (I stopped the scan before it finished because it simple took too long, so that's perhaps even a bit optimistic.)\nThe thing that makes all the difference is not the stack() call that is saved but the fact that fast hashing is used more extensively. I will revert the stack() change because it obviously makes no sense because of the DVD stacking you mentioned but I urge you to reconsider the rest of the PR.\nEDIT: Please note these estimates are based on the rescanning of an entire movie directory and hence they include time spent rescanning movies that are not scannable. In a given second XBMC is rescanning 160 directories/second.\n. No, the files are not rarred.\n. I am using an HTTP source and stat() doesn't retrieve a modification time for HTTP directories. Nginx doesn't send a Last-Modified header because the \"directory\" is just a generated HTML page (IIRC).\nEDIT: Which means XBMC has to do a full path hash on each directory.\n(I need to stop abusing the edit feature)\n. It was what prompted me to take a look at the VideoInfoScanner.\nI have only tested with single file directories. They also have subdirs that match exclude regexps (eg. a subs-dir) and as far as I can tell that means the dirs are fully path hashed.\nI also have multi-CD movies but I haven't yet tested those. I would like to fasthash multi-CD movies as well. As I have previously stated I don't think the directory will suddenly contain a different movie because one of the CD-subdirs has changed.\n. Right you are :)\nI must have stared myself blind at the problem when I was stepping through the code. Do you have any suggestions about the missing stat() feature for HTTP?\n. In a previous PR I made I added some regexps to HTTPDirectory that made it possible to extract the date from a directory listing.\nI believe I would have to retrieve the parent directory and use it to get the date information of the dir I'm looking for ... Seems like a lot of work though.\n. @Karlson2k\nThe PR has already been debunked.\nWhat difference does it make whether something is \"temporarily placed\" in the root? Care to clarify?\nThis PR changes nothing about the naming scheme mechanisms. The naming scheme were just illustrative examples. I do not use this naming scheme myself.\nI need to use a protocol that works across WAN. NFS and SMB need to be tunneled through a VPN for that to work IIRC.\n. @classicspam \nYes, but it timed out a lot when listing large directories and sometimes it would fail to stream videos the first couple of tries.\nHTTP was a much smoother experience so that was why I made the switch.\n. @jmarshallnz I have been busy with other things. What parts is that you want? And I'm not sure how I split the changes up now that I have shared them on Github.\n. I haven't looked at the code for a couple of months but it seems some of the changes depend on each other. I don't have the time to abstract these dependencies away and test it.\nIt seems the only change you are interested in is the change that excludes subdirs when fast-hashing. I'd rather just do another PR with that change and nothing else--when I have some free time.\n. ",
    "ipimpat": "I lol'd\n. ",
    "nils-werner": "Oh how stupid. I didn't see that file, sorry.\n. This patch doesn't seem to fix it on my Ubuntu 11.04 install, ./configure still fails.\n. Edit: No, it's not fine. ./configure runs fine the first time I run it but after make complaining about the config being stale it fails with \nchecking for main in -ltinyxml... no\nconfigure: error: Could not find a required library. Please see the README for your platform.\nThe two files you requested: https://gist.github.com/2596098\n. ",
    "babca": "\"Please reopen this pull request to xbmc MASTER not EDEN\"\nSorry! :-) I've tried to find what's the difference between Eden and master but couldn't find any information regarding this.\n. XBMC Frodo looks pretty ugly after this merge, the uppercase feature doesn't work well at least with French, Czech, Slovak, Hungarian...\nhttp://imageshack.us/a/img834/8011/screenshot000m.png\nhttp://imageshack.us/a/img585/6621/screenshot20120924at221.png\nhttp://imageshack.us/a/img802/6621/screenshot20120924at221.png\nI hope there is an easy fix for this :-)\n. Apparently, it is. I'm using Raspberry Pi (OpenELEC ARM), OpenELEC @ i386, OS X and iPad, the same issue across devices. It handles accents fine only on Windows.\n\"Its just the font\" - I don't understand, the default font does contain \u00c1\u00cd\u00c9\u011a\u0160\u010c\u0158\u017d\u00dd\u00c1\u00cd\u00c9\u00da\u016e characters... There is an issue in a function converting strings to caps.\nIf any fix is not planned, thank you for a workaround \u2013 \"Default no caps\" is better than nothing :-)\n. Yes it applies to OS X too.\n. ",
    "Danny3": "Hi spiff, thank you for your input.\nSo, I should create a branch (translate_ro for example), change files, commit changes in that branch and then ask for a pull from that branch (translate_ro) to your master branch. Then if I want to work on something else, I should create a new branch, change files, commit, pull request from there, and so on. Did I understand correctly?\nIt didn't crossed my mind to make a branch since I forked the project just for translating, but it looks like it's good practice so next time I will create a branch and do a pull request from there, maybe someday I will be able help you in some other areas and branching will look really nice to me. :)\n. Hi Attila, thank you for taking the time to help me, I appreciate it.\n. Hi Attila,\nThanks for the explanation.\nI understand all that you are saying and you're right, it seems a little bit complicated for me, so I will wait for the new system. Cheers!\nHi ronie,\nAs I understand, you will take care of the changes for weather.wunderground, it's nice. Thank you!\n. ",
    "c0diq": "http://tools.ietf.org/html/rfc2586\naudio/L16 L16 denotes uncompressed audio data, using 16-bit signed representation in twos-complement notation and network byte order.\n. is it possible that we should be using Endian_SwapLE16 instead of Endian_Swap?\n. I think we should be using ntohs instead of Endian_Swap to make sure it works on all system. Input is expected to be BigEndian (network byte order).\n. To test find a raw pcm in BigEndian format.\n. I think it should use ntohs instead of EndianzSwap otherwise it might not work on Linux system right?\n-s\nOn Mar 18, 2012, at 4:43 AM, Joakim Plate reply@reply.github.com wrote:\n\nFine by me.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4560662\n. ntohs is used in many places in xbmc.\nI don't have a Linux env to try. Both osx and win are little Endian, so I don't know why you think EndianSwapBE16 be better?\n\n-s\nOn Mar 18, 2012, at 5:27 PM, jmarshallnz reply@reply.github.com wrote:\n\nEndianSwap16() definitely isn't right - it'll swap it to LE regardless of host.  We want the equivalent of EndianSwapBE16 instead (currently non-existent), which won't swap on a BE host.\nI personally don't mind if ntohs is used if it's universally available, but given it's not currently used in the XBMC codebase, perhaps using EndianSwapBE16() is better - will append a patch.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4565878\n. You are right. I created a EndianSwapBE16 function. I also fixed an issue where wav file were playing noise now. That's because wav somehow end up with audio/l16 mimetype which triggered the PCMCodec incorrectly. Now why wav have this mimetype I don't get it. I have the fixes, should I close this request and pull a new one?\n. ok I see you did the same thing ;-)\n. Added a sample .l16 file for testing http://cl.ly/F8Da\n. Excellent. Then we're good.\n\n-s\nSent from my iPad\nOn Mar 18, 2012, at 10:11 PM, jmarshallnz reply@reply.github.com wrote:\n\nwave files seem to work fine for me.  Have checked the .l16 file you linked to - works fine.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4567967\n. yes it does. What's lossless streams from logitech?\n. Flax and L16 are different. \n\n-s\nOn Mar 19, 2012, at 3:55 PM, bossanova808 reply@reply.github.com wrote:\n\nBasically Logitech Media Server is a music (I think it does pictures and\nvideo now too) app from Logitech to support the Squeezebox line of network\naudio players.  And apparently LMS supplies streams in this format when\nstreaming lossless files like flac etc.\nA long time ago Squeezeboxes were the most awesome network music players,\nlike a Sonos but a lot cheaper, more flexible, and with open source\nsoftware.  Their star has faded (basically since logitech bought out the\nexcellent small company behind the players, slimdevices) - but a lot of\npeople have these around their house so the idea is to have XBMC integrate\ninto a bunch of these existing players for a whole house audio solution I\nguess.\nMy add on currently includes an external headless software player, but\nideally the stream could be handed direct to XBMC's player for better\nintegration into XBMC (although the sync will almost certainly be less good\nso the idea is to have both options).\nIt's all purely an exercise for me - I just use XBMC's internal music\nsystem myself, for the most part, but others seem keen and nobody else was\ndoing it so I thought I'd extend my python skills a bit.\nOn Tue, Mar 20, 2012 at 6:22 AM, Memphiz <\nreply@reply.github.com\n\nwrote:\nConfirmed, that that test file didn't play before this PR (xbmc just\ncrashed) and played after applying the patch. Tested on OSX and iOS.\nSo basically funk is flowing through my veins now :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4581383\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/777#issuecomment-4585683\n. \n",
    "DeMoB": "Worked out how to include the images as part of the pull request, and updated the strings to use the \"UK:XX\" format as per Ronie's suggestion.\nNew pull request here: https://github.com/xbmc/xbmc/pull/788\n. Hi JezzX, I've had a look and Media Companion lets you format the ratings as UK:XX as well in the NFO files, so I don't see why it shouldn't be in the UK:XX format so that other skins can use the field too.\nI'd really like it if you kept the ratings, especially if you choose to merge my pull. It's a little feature, but I think it's worthwhile to have.\nYes the request was supposed to include images, but I wasn't really sure what to do to add them to it, so I closed it and started a new one. I've since discovered the GitHub mac app, and I now see I could have kept this one open and amended them, but I guess that's part of learning through making mistakes!\nAs per my last comment, the new pull request (with amended string format and images) is here: https://github.com/xbmc/xbmc/pull/788\n. I think I'm getting the hang of this GitHub thing. :)\nShame I don't really know how to do some proper coding to help out the project in anything meaningful! :P\n. haha, thanks garbear, do I get a forum badge now? :P\njmarshallnz, thanks for the pointer about rebasing. Made a mess of it a minute ago, but was able to work out how to roll back to a previous commit and do it properly the second time. :D\n. So now that Jezz has been assigned, how long is it going to take for the merge to be pulled?\n. Didn't mean to come across as being impatient, just figured with it being such a simple extension of existing functionality it wouldn't have taken more than a few minutes to look over, and it's been nearly a week :P\nThe real reason I wanted some sort of clarification on timescales was due to Jezz's comment on my botched pull request ( https://github.com/xbmc/xbmc/pull/787#issuecomment-4584508 ) where it didn't sound like he really thought this was a worthwhile change. Which would be a shame as I had already gone to the effort of learning how to work github and making the new request by that point.\n. It's still reliant on IMDB. But as XBMC doesn't give you the option to choose which country's certificate you want to scrape, you need to use a third party media manager to scrape for the UK certificate (which returns the UK:XX format) and save it in the nfo's  tag.\n. They're the actual BBFC rating symbols, as used by every film in the UK and as such are instantly recognisable to anyone from the UK (See http://www.bbfc.co.uk/classification/guidelines/the-categories/ ). Their differing shapes, text and colour is part of what makes them discernible from a glance.\nThe MPAA rating system doesn't really have a comparison as all their classification certificates are text based so 'theming' them doesn't really make a difference to their recognisability, but messing with the colours and shapes of the BBFC ones alters makes it pointless to have them there in the first place.\nThis, does not look out of place to someone from the UK (if you know anyone else from the UK, ask them too): http://db.tt/aqQdi2jO\n. I don't take issue with wanting the certificates to the fit the skins monochrome theme, I take issue as converting them loses the intentional colour differences between them. You're asking for 6 vastly different colours to be represented through black and white images.\nTake for example the difference between the  and  certificates. The UK:15 has red text and a white background, and the UK:18 has white text and a red background. To convert the UK:18 to monochrome the main colour white is kept and the red background just goes to black (like so:  ). Now we move down to the UK:15 certificate, which pretty much inverted from the UK:18, but we can't just invert the monochrome certificate as then the \"15\" text would be black which clashes with the drop shadow, and removing the drop shadow introduces style inconsistencies across the certificates. We can't have the background of either certificate white instead as it would lose all contrast/definition from the certificate's text. So that means we have to have the UK:15 certificate identical in all but text to the UK:18 certificate (like so:  ), but in doing so you've just lost the main feature of the BBFC certificates, their distinctive colour differences.\nI've also tried putting the certificates in the little black boxes confluence uses:\n\n\nBut honestly, I think seeing the black gradient around the certificates looks out of place, everywhere they're used in the UK, they're not enclosed in something, they're just on it. So much so that even though I've made the images, when in use I ended up looking at the certificates in use and thinking \"what is that around it?\". It looks much more natural to me as just the logos:\n\n\nI urge you to get some second opinions from people who are actually in the UK and might use this feature. You're coming from it purely from an aesthetical point of view without any of the culture behind the use of the certificates, so as such it looks completely foreign to you where it doesn't to someone that has grown up with them.\n. Jezz, The only feedback I've had from you so far hasn't been very favourable towards this pull request, and not having any prior experience of how long it takes you to think about accepting a request (I have waited nearly a week between double posting and anywhere else on the net that's a long time!), I thought I'd make one last post showing my reasoning for why I submitted the pull request in the unstyled logos. At least I'd be able to leave the thread knowing I explained myself fully rather than that I was ignoring your suggestion of matching the UI.\nHitcher, if other people want their logos, then they can do like me and learn git and submit their own pull request. :-p\nBut if that isn't acceptable, why is it we have MPAA ratings on the skin at all, why favour the US over everywhere else, movies and XBMC are international products after all.\n. Way to totally squash the enthusiasm I had for contributing to XBMC.\nIt does not take 2 months to decide if you wanted this included or not, and the best part is you didn't even have the decency to make a decision against it and close the request.\n. ",
    "askuhn": "I like it... :)\n. ",
    "macmenot": "@wsoltys are there any plans to rebase this against master?\n. well as 99% of Linux users will likely be installing from debian/ubuntu repositories/PPAs, and maybe some Archlinux PKGBUILD, is it worth talking to @amejia1 (e.g.,) about submitting this as a clean debian/patches/vdpau.patch on top of the 12.0 release build, for inclusion in the debian/ubuntu unstable / development repos (where the stable/testing repos would hold 12.0 release) ?\n. @Fneufneu what compiler flags / optimization level did you use? I could build XBMC 12.0 + this PR using clang on debian, but if the issue is due to clang optimization flags (e.g.,) I wouldn't see it.\n. Interestingly I notice that Eden wasn't previously able to compile successfully on clang at all?\nhttp://buildd-clang.debian.net/package.php?p=xbmc&suite=sid\n. is it possible to get this rebased and re-evaluated for a coming merge window?\n. ",
    "Tocinillo2": "Yes, this fixed the sopcast problem in my machine.\n. ",
    "xbmcfanboy": "Been testing this for about an hour with no problems.  I'm a Windows user with mysql library centrallized on NAS.  It appears to work fine for both SQLite and mysql. Example of the queries it produced for me. I hope this helps.\nSQLite\n\"select * from view where window = 10501 and path='?/' and skin='skin.confluence'\"\nmysql (sanitized)\n\"select idPath from path where strPath='smb://myusername:mypassword@ipaddress/Multimedia/Movies/'\"\n. Added source U:, opened the source, right-clicked, chose a scraper and type, then clicked OK.  Then re-opened set content to verify it saved the scraper settings. I also ran the mysql queries manually in phpMyAdmin to see if any had syntax errors.\n\nSQLite results\n\"select * from view where window = 10501 and path='U:\\Movies\\The Addams Family (1991)\\' and skin='skin.confluence'\"\n\"select * from view where window = 10501 and path='U:\\Movies\\The Addams Family (1991)\\'\"\n\nMySQL results\n\"select idPath from path where strPath='U:\\\\Movies\\\\The Addams Family (1991)\\\\'\"\n\"SELECT idPath,strPath FROM path WHERE SUBSTR(strPath,1,35)='U:\\\\Movies\\\\The Addams Family (1991)\\\\'\"\n\"select files.strFilename from files join movie on movie.idFile=files.idFile where files.idPath=594\"\n\"select files.strFilename from files join musicvideo on musicvideo.idFile=files.idFile where files.idPath=594\"\n\"update path set strContent='', strScraper='', strHash='',strSettings='',useFolderNames=0,scanRecursive=0 where idPath=594\"\n\"select strHash from path where strPath='U:\\\\Movies\\\\The Addams Family (1991)\\\\'\"\n\"select idPath from path where strPath='U:\\\\Movies\\\\The Addams Family (1991)\\\\.actors\\\\'\"\n. Go easy on the new guy.  I hope I did everything correctly.\nedit: I updated the code per jmarshall's suggestions.\nSummary: This improves flac album with external cuesheet support. Exact steps to reproduce the problems are in the bug report.\n1) Three functions which previously compared path1==path2 now call CFileItem::IsSamePath() for the comparison. IsSamePath() is unchanged.  IsSamePath() compares m_lStartOffset as well as the path. This extra criteria is needed to differentiate among tracks in a flac album.\n2) CFileItemList::UpdateItem() has been rewritten to match jmarshall's description of what it is supposed to do. I don't believe the function worked properly to begin with.  See the discussion here: http://forum.xbmc.org/showthread.php?tid=127408\n3) The 2nd commit is just housekeeping. When the SongInfo dialog is canceled, SetRating() always fired an event regardless of whether or not the Rating had been changed.\nps. Let me know if I can run any specific tests or code changes to satisfy your commit requirements. I'm trying to implement a URI scheme for cue per jmarshall's guidance, but I consider that to be an independent endeavor. Cheers!\n. I made the changes locally but I'm not sure what to do next to update this pull request.\n. I haven't noticed any negative side-effects of these changes.  I tested resuming a movie that I stopped watching when I had Eden RC1 installed a few weeks ago.  Clicked on the movie, was asked if I wanted to play or resume, and the movie resumed without any issue.\n. Seems like I should update my code to use CFileItem::IsSamePath() since it already properly handles the startOffset. Do you concur?\nI'm interested in trying to implement a URI scheme for cue as you mentioned before.  Any pointers where I should start looking to get familiar with other uri implementations in xbmc?\n. For the URI scheme, do you think researching how xbmc handles zip || rar files is an appropriate route for me to take?\n. Just to make sure I'm understanding correctly as I get started.  I might add this function to CSpecialProtocol.cpp\nvoid CSpecialProtocol::SetCuePath(const CStdString &dir)\n{\n  SetPath(\"cue\", dir);\n}\nand add this to CSpecialProtocol.h\nstatic void SetCuePath(const CStdString &path);\n. In regard to the URI scheme, I've made surprisingly good progress and most likely missing something important. What is the preferred place to continue this topic without polluting this pull request? And when the time comes, how can I show you my code without making a pull request?\n. Bare with me. I'm new to git so I'm hitting 2 or 3 learning curves at once. I have found and fixed several unrelated and benign things like spacing and unnecessary reset calls, but all my branches insist they belong in this pull. I'm sure I'll get the proper workflow down soon enough, but I'm walking on eggshells right now trying to make sure I get this patch done.\n. For example, in this pull, I have 2 commits that probably are best to be in separate pull requests. I'm trying to figure out how to separate them. Additionally, the uri scheme for cue seems like a feature-add considering the bug report is resolved without it being implemented.\nYou mentioned introducing a potential bug that would prevent changing StartOffset in the future and I see it too.  But that doesn't happen yet. In the meantime, 3 functions are now calling the same code instead of each doing their own factoring. I think that will make for easier transition once uri is implemented.\n. I have master, 12724, and uricue branches locally. I'm pretty sure I linked my local master to upstream following a stackoverflow post. I made these changes in 12724 branch. Cue scheme changes are in uricue branch. Last night when I updated this pull I did git reset HEAD~1,push -f, etc. Should I do a pull request for SongInfo before I do the push -f for the rest to separate the 2 commits?\n. Does that mean I would have one fork of xbmc master on github as well as multiple branches of the fork also on github? And then locally each of my branches point to the respective remote branches? Then I make pull requests to xbmc from each github branch? Did I get that right? Sorry for all the questions, you have been super helpful.\n. I'll look into IsStack as well as other items in uriutils to get an idea what I'm up against. So far I'm only testing a single flac+cue.  What is considered to be a stacked directory? Also, should I update the copyright and disclaimer in the new CueFile.cpp/h files?\n. If I recall correctly, existing code in IsCueSheet() explicitly disallows a cue to describe tracks spread over more than one flac. Perhaps that would negate potential IsStack() complications?\nI might end up closing this pull so I can figure git out properly on my end.\n. Even if we don't pursue the uri scheme for cue, it's been a great c++ learning experience for me. I'm going to close this pull, backup all my files and start over with my git repo. I will be back. :)\n. What might go in m_matchPath? Perhaps a GUID?\n. Any thoughts on my code questions?\n. Whoops! Fixing this.\n. I'm looking for simple fixes so I can practice my git workflow. :)\n. I screwed up the other pull request pretty badly so decided to reset the pull. jmarshall's recommendations are in.\n. For future reference, how do I know if code I'm looking at is an imported external library? is the copyright title the clue?\n. I understand. Thank you. Since you used the word \"basically\", I presume there could be files in lib/ that are not external libraries but it should be the exception for xbmc. With the xbmc project, am I safe to assume all files in lib/ are references to external libraries?\n. Thank you both for the comments. I will package these together into one pull. I respectfully disagree with garbear. I assume that small, incremental and measurable changes are preferred.  These changes for example only affect the debug log output in specific ways.\n. I am a Win7 + smb/mysql user and am willing to test. I have some movies with nfo and some without nfo. Let me know if I can be of assistance.\n. Sorry took me so long to reply. Been busy rendering videos for a deadline. Let me know if I misunderstood the testing needed to help with this PR. I created a new smart playlist called \"montellese\" of type \"Movies\" and orderBy \"Title\".\nLooks like the first query grabs any movie sets.\n\n11 items returned\nSELECT sets.idSet,sets.strSet,COUNT(1) AS c,count(files.playCount) FROM sets JOIN setlinkmovie ON sets.idSet=setlinkmovie.idSet JOIN movie ON setlinkmovie.idMovie=movie.idMovie JOIN files ON files.idFile=movie.idFile  where movie.idMovie in (select movieview.idMovie from movieview WHERE ('1')) GROUP BY sets.idSet HAVING c>1\n\nSecond query gets the movies\n\n263 items returned\nselect * from movieview WHERE ('1') and movieview.idMovie NOT IN (SELECT idMovie FROM setlinkmovie s1 JOIN(SELECT idSet, COUNT(1) AS c FROM setlinkmovie GROUP BY idSet HAVING c>1) s2 ON s2.idSet=s1.idSet) ORDER BY CASE WHEN length(c10) > 0 THEN c10 ELSE c00 END\n\nThe playlist displays in xbmc with the 11 movie sets first, followed by the 263 movies not in movie sets.\nBelow examples are in CSV format. Notice that \"Three Kings\" doesn't have a value in column c10.\n\n\"idSet\";\"strSet\";\"c\";\"count(files.playCount)\"\n\"1\";\"Alien Collection\";\"3\";\"0\"\n\"2\";\"Are We There Yet\";\"2\";\"0\"\n\"3\";\"Austin Powers\";\"2\";\"1\"\n\"4\";\"Barbershop\";\"2\";\"0\"\n\"6\";\"Children of Dune (2003)\";\"2\";\"0\"\n\"7\";\"Darkman Trilogy\";\"3\";\"0\"\n\"9\";\"The Street Fighter\";\"2\";\"0\"\n\"10\";\"Scream\";\"2\";\"0\"\n\"11\";\"Star Wars\";\"5\";\"0\"\n\"13\";\"Tremors\";\"4\";\"0\"\n\"14\";\"X-Men\";\"4\";\"0\"\n\n\n\"idMovie\";\"c00\";\"c10\"\n\"261\";\"The Tourist\";\"The Tourist\"\n\"262\";\"The Transporter\";\"The Transporter\"\n\"263\";\"The Usual Suspects\";\"The Usual Suspects\"\n\"159\";\"The Warrior\";\"The Warrior\"\n\"295\";\"Three Kings\";\n\"266\";\"Titan A.E.\";\"Titan A.E.\"\n\"267\";\"Top Secret!\";\"Top Secret!\"\n\"268\";\"Total Recall\";\"Total Recall\"\n\nThe original query looked like this:\nand here is snippet of the results:\n\n\"idMovie\";\"c00\";\"c10\"\n\"261\";\"The Tourist\";\"The Tourist\"\n\"262\";\"The Transporter\";\"The Transporter\"\n\"263\";\"The Usual Suspects\";\"The Usual Suspects\"\n\"159\";\"The Warrior\";\"The Warrior\"\n\"295\";\"Three Kings\";\n\"266\";\"Titan A.E.\";\"Titan A.E.\"\n\"267\";\"Top Secret!\";\"Top Secret!\"\n\"268\";\"Total Recall\";\"Total Recall\"\n\n. Changed c10 per your suggestion:\n\nUPDATE xbmc_video61.movie SET c10 = 'The Transporter 2' WHERE movie.idMovie =261;\nUPDATE xbmc_video61.movie SET c10 = 'The Transporter 1' WHERE movie.idMovie =262;\n\nWithin xbmc, \"The Transporter\" appears before \"The Tourist\" in the \"montellese\" playlist.\nResults of SQL (in CSV format):\n\n\"idMovie\";\"c00\";\"c10\"\n\"262\";\"The Transporter\";\"The Transporter 1\"\n\"261\";\"The Tourist\";\"The Transporter 2\"\n\"263\";\"The Usual Suspects\";\"The Usual Suspects\"\n\"159\";\"The Warrior\";\"The Warrior\"\n\"295\";\"Three Kings\";\n\"266\";\"Titan A.E.\";\"Titan A.E.\"\n\"267\";\"Top Secret!\";\"Top Secret!\"\n\"268\";\"Total Recall\";\"Total Recall\"\n\n. Glad I could help. I did one more test to make sure sorting works in both directions.\n\nUPDATE xbmc_video61.movie SET c10 = 'The Xyz 2' WHERE movie.idMovie =261;\nUPDATE xbmc_video61.movie SET c10 = 'The Xyz 1' WHERE movie.idMovie =262;\n\n\n\"idMovie\";\"c00\";\"c10\"\n\"263\";\"The Usual Suspects\";\"The Usual Suspects\"\n\"159\";\"The Warrior\";\"The Warrior\"\n\"262\";\"The Transporter\";\"The Xyz 1\"\n\"261\";\"The Tourist\";\"The Xyz 2\"\n\"295\";\"Three Kings\";\n\"266\";\"Titan A.E.\";\"Titan A.E.\"\n\"267\";\"Top Secret!\";\"Top Secret!\"\n\"268\";\"Total Recall\";\"Total Recall\"\n\n. @theuni I would like to help. Can you give more information about \"commit with --enable-shared-lib on or off\" please.\n. ",
    "scarabeusiv": "Thanks for explanation, this is first time I created some multiple pull requests at once. Should I redo it so it contain only the first commit or you can pick only the first one somehow?\n. Closing this pull requested as I replaced it by 809 where I created the branch which contain only the relevant patch.\n. Well I saw it, but it is completely broken so I wrote it from scratch. I was not aware if there is any way how to attach other commits to other owner merge request.\n. Well this is relevant even after the 0.10.2 api merge because libav and ffmpeg will probably differ there forever.\nAlso as distro packager I would love to see this in eden where the 0.10.2 branch won't prolly end :)\n. @amejia1 Gentoo like Alexis, but i work on libav and he on ffmpeg :)\nHmm you are right I didn't address the vdpau check part as we export the ac_blabla=yes to be always sattisfied as it is handled by our USE depencencies with no need for the configure script to actually look for it.\nSo lets wait on th emerge of the 0.8 api (0.10.2 how you would call it) and I will see which patches I will be needing there :)\n. I forgot to add that the patch is against Frodo, master branch has tiny fuzz in configure.ac so it needs merge on one part (straight forward).\n. Okey, and is it submitted upstream?\nDidn't have this problem with 2.1.0 and the Parser.cpp file is no longer even part of the project.\n. ",
    "aballier": "this is for libav and shouldnt hurt ffmpeg\nsee: http://git.libav.org/?p=libav.git;a=commitdiff;h=0ebcdf5cdad6bf20a5170735a7f77b23ecc081ac\n. http://git.videolan.org/?p=ffmpeg.git;a=commitdiff;h=96676e1abfece89e20bc962255b48cb2d9e417bd\nrestored it in ffmpeg\n. you updated to 0.10.2, which was cut before the api/abi breakage; this breakage took effect by changing major from 53 to 54. there's currently no release with 54 major afaik, only ffmpeg's git master.\nhttps://github.com/xbmc/xbmc/blob/master/lib/ffmpeg/libavformat/version.h shows major 53\n(and dropping back compat will probably break the build with 0.10.2 as AVFormatContext.parse_queue does not seem to exist in this version)\n. yes, i've had absolutely no time to work on xbmc lately, though, imho, we should support both with a preference over libswresample if available: it is only available withing ffmpeg and they promised (are?) to port the libavresample improvements to swr.\n. lets close this for now, i'll reopen a new one rebased on current master\n. note also that this has been used for a while in gentoo too: http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/media-tv/xbmc/files/xbmc-9999-nomythtv.patch?view=log\n. Hmm yes, this is almost the same..\nshould I scrap this one ? (this one has disable mythtv support too as was requested on the ticket)\n. updated with above comment and fixing bugs in the initial patch (wrong summary at end of configure, mythtv configure switch was useless as it was using mysql variables)\n. well, there were still calls to the internal ffmpeg API.\nif you find another way to drop them, I'm happy too :)\n. OTOH, it may be faster to use swr for audio conversions in the audio engine; they have a lot of mmx/sse/avx optimisations.\n. for mapping avr <-> swr, see    274679d here\nAPIs are really similar, its not that difficult to map them (only a subset of the api is mapped here though)\n. problem with AEConvert is that its API doesnt map sanely to swr/avr: the latter have a model with a costly initialisation, setting up everything and allocating memory, and then fast conversion.\nAEConvert API uses a cheap initialisation (a function that returns a function converting from/to float and the requested format).\nI cant find a sane way to wrap swr api into AEConvert's one.\nOther options are:\n- Make AEConvert an abstractaction layer of swr, adopting a very close API\n- Drop AEConvert and use swr directly\n. hmm, wait, what is option 1) ? :)\n. and what do you mean by 'forcing a dependency on anything ffmpeg' ?\n. A LGPL library, that does not depend neither on libavformat nor libavcodec (where you may have some patent issues)???\nWell, the voodoo remains :)\n. back to the subject, nav sounds are already resampled with src (libsamplerate in AEWAVLoader.cpp); however, I dont understand the idea (and neither the problem with nav sounds) here :(\n. ok but then I dont get where we're trying to go:\n1) convert AE to do its format conversions with swr/avr\n2) swr/avr is forbidden as a hard dep\nfor me the two are in contradiction\nif the point is to make AE optionally use avr/swr, then this justifies even more this PR:\n- the first 3 commits will be needed\n-   6fc0730 is a straightforward conversion of existing code\n-   2fd1e6f only removes now unused API from the dll\nfor the context problem, maybe the following will be simpler: \n- change CAEConvert API a little bit and make CAEConvert::ToFloat / FrFloat return a context\n- add a convert function to CAEConvert taking as arguments the context, uint8_t* buffers and the # of samples\n. ok I get it now :)\nthe simplest way is what i described above imho, adopting a context-based api ala swr; the most important change is that the caller should delete/free the context, which is not the case now.\n. importing the code is not nice for people already having the shared lib: they dont need twice the same code in ram / on disk :)\nmoreover, its not that straightforward to import if you want to avoid symbol collisions\n. here libswresample + libavutil (dep of libswr) .so's are ~200kb, not negligible imho\n. what i have in mind is: keep the reinvented wheel as such, and when swr is available route the resampling through it; no code duplication, ae remains self contained by default, every one is happy, no ? :)\n. re is_valid: Changed to a function, it makes more sense here.\nusually i'm not a fan of this OO religion of babysitting developers by duplicating the code using getters/setters, but in this case it just makes more sense for it to be a function, and allows more flexibility for implementations.\n. external (or internal) ffmpeg will use libswresample so will not hit that branch.\nffmpeg pulled in libav prototypes changes anyway for libavresample.\n. Yep its fine, this change is needed because libav changed the prototypes from void** to uint8_t, for us this meant that we can remove the first void cast and just cast away the const from the input pointer (probably due to libav declaring poorly its prototypes because I hope the input buffer is constant...)\n. By the way: please push to master as you see fit as I cannot do it myself.\n. Thanks, it fixes even more than your original PR :)\nThe cleanup was long overdue since I believe it's been a while since xbmc has been requiring ffmpeg 0.10 in other parts of its code. It should make libav support possible now, or maybe it even works now.\nFor me it's all good, but it needs elupus' review, blessing and merge I guess\n. Very nice work. However, I fear ffmpeg 1.2 (as opposed to eg 1.0.6) could break some things by introducing planar audio formats.\nI'm not sure that these files will still work:\nxbmc/cores/AudioEngine/Encoders/AEEncoderFFmpeg.cpp\nxbmc/cdrip/EncoderFFmpeg.cpp\nfor example, ffmpeg aac encoder now seems to expect planar float which xbmc has no clue about\n. well, those are encoders so basically any sample would work ;)\nits just a matter of triggering that code path, but note that i'm not saying that based on my experiences but rather based on my reading of the code so it's possible I'm wrong; I'm just saying to be careful about these two encoders :)\n. well, this has been merged as such when there were pending improvements on the PR, what should be done now?\n. some hunks such as:\nhttps://github.com/FlyingRat/xbmc-ffmpeg-version-bump/commit/6f653c5a2ba30008d62ab589ff5686df8a29ef72#lib-dllavformat-h-P6\njust need to be reverted\n. > @FlyingRat commented\n\nWhat has changed in regards to the previous discussion on this topic? Trifle or not, please motivate and explain why. /Thanks in advance, Lars.\n\nI should rather ask you this question. You agreed that this hunk shouldn't be merged, but it has been merged and you deleted the branch and all the comments with it...\nFYI, again: the dllavformat changes merged with this PR makes xbmc use an internal ffmpeg symbol that may change its ABI (so that xbmc will crash) or even be removed (so that xbmc wont work) for absolutely no reason nor gain. Everything was safe before.\n. I'd merge the last patch with the wrong one, it's a bad idea to have non compilable revisions in between.\n. which symbol ? the av_ or ff_ one ?\nthe av_ symbol is from lib/xbmc-dll-symbols/DllAvFormat.c; there are two reasons for this: ff_ symbols are not abi safe in ffmpeg and not exported in shared libraries.\n. yes it'd be better to rename it, but:\n1. IMHO its saner in another commit\n2. see lib/ffmpeg/patches/0024-add-public-version-of-ff_read_frame_flush.patch ; I don't know how we can avoid to rename everything to xbmc_ so that the internal ffmpeg code paths in DllAvFormat.h can work (DEFINE_METHOD1(...), RESOLVE_METHOD(...))\n3. For internal ffmpeg, see lib/ffmpeg/libavformat/libavformat.v ; a xbmc_ symbol in ffmpeg will end up being masked by the linker script, meaning that this may or may not work depending on how internal ffmpeg is built in xbmc and if the platform honours this linker script\nA possible solution could be to always build a xbmc_ version from lib/xbmc-dll-symbols/ (internal or external ffmpeg, so far it's only for external ffmpeg AFAICS) and use that, but I'm not sure if that's desirable.\n. Why does github calls the first patch an \"outdated diff\"?\n. ping. please merge, thanks.\noffending commit has been merged ignoring the reviews and now the cleaning lady's obvious fixes having to wait is not very motivating :(\n. #define xbmc_read_frame_flush av_read_frame_flush\nin the internal ffmpeg case should do the trick no ?\n(instead of ff_read_frame_flush which might not be exported by shared libs... er dylibs :) )\n. why not av_read_frame_flush ? other platforms with internal ffmpeg uses that name\n. oh, and av_read_frame_flush was actually the former behavior\n. agreed, just revert [b621dd755550d118b1f6490b1429c9d64afaa06b]\n. yes, sorry, not passthrough, encoding for AAC output over hdmi for example (what I tested)\n. wow, I just realized, this is not AAC (dont know why I was thinking AAC... maybe because AAC decoding was broken by the planar formats too..) but rather AC3. The PR title is all wrong in the end\n. done ;)\n. updated\nhow nice, comments were not wiped :)\n. ",
    "burriedu2": "I was having the issue with the CopyPicture() crash. I was able to fix it by commenting out lines 343 through 351 in DVDPlayerVideo.cpp which are located in the CDVDPlayerVideo::Process() function. I haven't had any trouble with playback or seeking after that and I don't know xbmc well enough to know what I may have broken or if this is the best solution, but I thought I would post it here in hopes that it might simplify someone's life for debugging. These were the lines I commented out:\n//      //Waiting timed out, output last picture\n//      if( picture.iFlags & DVP_FLAG_ALLOCATED )\n//      {\n//        //Remove interlaced flag before outputting\n//        //no need to output this as if it was interlaced\n//        picture.iFlags &= ~DVP_FLAG_INTERLACED;\n//        picture.iFlags |= DVP_FLAG_NOSKIP;\n//        OutputPicture(&picture, pts);\n//        pts+= frametime;\n//      }\ncontinue;\n. It looks like that patch works. Thank you!\n. I have discovered a bug with this branch where I open the folder containing a particular file and xbmc crashes. It only happens with one particular file and everything else seems to work great. I don't think it should be a blocking issue or anything, but I figured I mention it. I have a xbmc debug log and a stack trace and I can upload the file somewhere if it would help.  \nstack trace:  \n0  0x742b9270 in ?? ()\n1  0x0859597f in CDVDDemuxFFmpeg::AddStream (this=0xb1633a78, iId=100)\nat DVDDemuxFFmpeg.cpp:1087\n\n2  0x0859727c in CDVDDemuxFFmpeg::Open (this=0xb1633a78, pInput=0xb1606ec0)\nat DVDDemuxFFmpeg.cpp:493\n\n3  0x0859d5b1 in CDVDFactoryDemuxer::CreateDemuxer (pInputStream=0xb1606ec0)\nat DVDFactoryDemuxer.cpp:66\n\n4  0x08544b27 in CDVDFileInfo::ExtractThumb (strPath=..., strTarget=...,\npStreamDetails=0xb5be0d8) at DVDFileInfo.cpp:104\n\n5  0x08b3a18b in CThumbExtractor::DoWork (this=0xb162cd00)\nat ThumbLoader.cpp:142\n\n6  0x082ef3c0 in CJobWorker::Process (this=0xb36db120) at JobManager.cpp:65\n7  0x08a720a2 in CThread::staticThread (data=0xb36db120) at Thread.cpp:177\n8  0x00b68d31 in start_thread () from /lib/i386-linux-gnu/libpthread.so.0\n9  0x0259f46e in clone () from /lib/i386-linux-gnu/libc.so.6\n. ",
    "caribo": "Hi Opdenkamp.. this was discussed a while ago and you suggested that you would add following definitions to PVR branch to cover EPG, SUBTITLE and TELETEXT keys... perhaps it has been overlooked..\nhttps://github.com/Pulse-Eight/xbmc/issues/5#issuecomment-3460521\ncase CEC_USER_CONTROL_CODE_SUB_PICTURE:\n    iButton = XINPUT_IR_REMOTE_SUBTITLE;\n    break;\n  case CEC_USER_CONTROL_CODE_ELECTRONIC_PROGRAM_GUIDE:\n    iButton = XINPUT_IR_REMOTE_GUIDE;\n    break;\n  case CEC_USER_CONTROL_CODE_DATA:\n    iButton = XINPUT_IR_REMOTE_TELETEXT;\n    break;\n. ",
    "mikrohard": "Is this better now? m_needsScaling was already set to true and m_coordsRes is already scaled. But if I don't call g_graphicsContext.SetScalingResolution(), the ScaleFinalXCoord() and ScaleFinalYCoord() methods have no effect at all.\n\ndiff --git a/xbmc/video/dialogs/GUIDialogTeletext.cpp b/xbmc/video/dialogs/GUIDialogTeletext.cpp\nindex 47f2343..47f5876 100644\n--- a/xbmc/video/dialogs/GUIDialogTeletext.cpp\n+++ b/xbmc/video/dialogs/GUIDialogTeletext.cpp\n@@ -117,11 +117,17 @@ void CGUIDialogTeletext::OnInitWindow()\n   m_bClose            = false;\n   m_windowLoaded      = true;\n\n-  RESOLUTION res = g_graphicsContext.GetVideoResolution();\n-  m_vertCoords.SetRect((float)g_settings.m_ResInfo[res].Overscan.left,\n-                       (float)g_settings.m_ResInfo[res].Overscan.top,\n-                       (float)g_settings.m_ResInfo[res].Overscan.right,\n-                       (float)g_settings.m_ResInfo[res].Overscan.bottom);\n+  RESOLUTION_INFO res = g_graphicsContext.GetResInfo();\n+  g_graphicsContext.SetScalingResolution(res, m_needsScaling);\n+  float left = g_graphicsContext.ScaleFinalXCoord(res.Overscan.left, 0);\n+  float right = g_graphicsContext.ScaleFinalXCoord(res.Overscan.right, 0);\n+  float top = g_graphicsContext.ScaleFinalYCoord(0, res.Overscan.top);\n+  float bottom = g_graphicsContext.ScaleFinalYCoord(0, res.Overscan.bottom);\n+\n+  m_vertCoords.SetRect(left,\n+                       top,\n+                       right,\n+                       bottom);\n\n   if (!m_TextDecoder.InitDecoder())\n   {\n\n. You're right. It works and the code is much cleaner now. I updated the pull request.\n. No problem. Will do.\n. Ok... will keep that in mind.\n. Ok... will keep this in mind.\n. +1 on the font change.\nThe current font used in teletext has problems with some special characters.\n. 1.) Add upstream (if you didn't already):\ngit remote add upstream https://github.com/xbmc/xbmc.git\n2.) Fetch upstream:\ngit fetch upstream\n3.) Make sure you're on your PR branch (in your case master):\ngit checkout master\n4.) Rebase to upstream/master:\ngit rebase upstream/master\n5.) Force push to update your PR:\ngit push origin master --force\n6.) You're done...\n. I didn't research this any further. The code in current pull request doesn't break visualizations and fixes the described problem.\nI agree that it would be cleaner to fix this in applications IsPlayingVideo or players HasVideo. But we need a non-locking way to check for radio if we don't want to break pvr radio visualizations.\n. This code would work for Eden... but you need to change it for Frodo...\nChange this:\nvector<CPVRTimerInfoTag *> activeTags;\nm_timers->GetActiveRecordings(&activeTags);\nInto this:\nvector<CFileItemPtr> activeTags = g_PVRTimers->GetActiveRecordings();\nChange this:\nCPVRTimerInfoTag *timer = activeTags.at(pat);\nInto this:\nCFileItemPtr timer = activeTags.at(pat);\nAnd this:\nif (timer->m_iClientChannelUid == channel.UniqueID())\nInto this:\nif (timer->GetPVRTimerInfoTag()->m_iClientChannelUid == channel->UniqueID())\n. Well... I thought that s_randomSeed is randomized over time. But I didn't check.\nI think that calling srand with time(NULL) should be ok until a better solution is found. At least the build isn't broken.. \n. Just a thought... What about using Boost.Random? Boost is already a dependency...\nBoost.Random does not maintain global state that would need protection from multi-threading.\nBoost.Random is thread-safe as long as you don't access any given object from two threads simultaneously. (Accessing two different objects is ok, as long as they don't share an engine). If you require that kind of safety, it's trivial to roll that on your own with an appropriate mutex wrapper.\n. @theuni So every Android platform can behave differently? I just packaged the build libraries into the standard addons folders inside the apk and everything (pvr with tvheadend addon) loaded without any problems on my android device (ICS 4.0.4). Was it just a coincidence?\n. Ah... OK :) Thanks for clearing that up.\n. Back when I added support for teletext in tvheadend I also enabled teletext with one additional call to OpenDefaultStreams() (which wasn't merged into opdenkamps branch). Maybe that would be the solution now (or maybe not). You can take a look here: https://github.com/opdenkamp/xbmc/pull/250\n. The problem here is m_loadType LOAD_EVERY_TIME which doesn't seem to work like expected.\nThe correct fix would be to use KEEP_IN_MEMORY and do the necessary changes in CGUIDialogPVRGuideInfo or figure out why LOAD_EVERY_TIME isn't working as it should.\n. If you want user friendliness then add a lastWatchedChannel property to CPVRChannelGroup and switch to that one... at least thats what I think would be best from the user perspective.\n. @opdenkamp I changed everything as discussed...\n. It was added in API version 1 and therefore it should always exist: http://developer.android.com/reference/android/os/Environment.html\nBut I'm no Android expert... if anyone thinks that null checks are necessary I'll add them...\n. But this means that the user can not remove the icon through the backend anymore?\n. When I implemented this I always thought that every icon set by xbmc (and not the backend) should be marked as \"user set\". But @opdenkamp didn't want the automatically set icons to be marked as such. Maybe the bIsUserSetIcon should be replaced by iIconSourceType (ICON_SOURCE_BACKEND, ICON_SOURCE_USER, ICON_SOURCE_XBMC, ...)?\n. Ok... will fix right away...\n. Yes... this will work...\n. ",
    "jingai": "Nothing in my patch requires the linear ordering.  I did it that way just to group them.  But it's fine with me either way, personally.\n. You mean handle these separately outside of the switch in GetItemLabels()?\n. On it.\nedited to avoid broadcasting that I bloody can't read lol..\n. Is that roughy what you were getting at?\n. Yeah, I did it the way I did actually because I thought it was clearer, but it is slower.  I'll change it and use comments to maintain clarity instead (namely, so other programmers don't have to go to the header file to know what's going on there).\nAs for including PICTURE_INFO_PATH in the no-rearrange comment, it was because I was testing on it and that test would fail if it were moved down.  I'll just test on >= _RESOLUTION instead to avoid that entirely.\n. Changes made.  Let me know if you spot anything else.\n. There ya go.\n. ",
    "Jellyfrog": "+50 on this, I'm unable to use xbmc because of the lack of buffering for \"LAN\", since I connect to my sources with VPN, and the tunnel sometimes drops in speed, the video stops and it says \"buffering\" for 2 sec, then plays for 10sec then \"buffering\" again...\nMaybe add the option to buffer or not per source?\n. +50 on this, I'm unable to use xbmc because of the lack of caching for \"LAN\", since I connect to my sources with VPN + SMB, and the tunnel sometimes drops in speed, the video stops and it says \"buffering\" for 2 sec, then plays for 10sec then \"buffering\" again...\nInstead of \"alwaysforcebuffer\" add an option to choose per source to cache or not\n. @classicspam Why not add an option to choose per source (ie when you add/edit a source) to cache or not, instead of alwaysforcebuffer?\nAlso, any news about this?\n. IMO:\nRemove alwaysforcebuffer and make it an option per source\n. ",
    "classicspam": "Was pointed to this pull request after I put in my pull requests.  Some thoughts:\n-- SMB issues...this might be caused by the rate at which you are trying to read.  At 3X max bitrate of the movie the read rate can get quite high and I have noticed issues like audio getting slightly out of sync and choppiness when setting artificially high read rates which was resolved by lowering the read rate.  Perhaps limiting to max bitrate would help SMB issues for example:\nvoid CDVDPlayer::UpdateReadRate()\n{\n  unsigned int bytespersecond = (GetVideoBitrate() + GetAudioBitrate()) / 8;\nif (bytespersecond > m_readrate * 1.25)\n  {\n    m_readrate = bytespersecond;\n    m_pInputStream->SetReadRate(m_readrate);\n  }\n}\nwould up the read rate until it is 75%+ of the max read rate.  This may solve the smb issues. \n-- Probably do not need the advanced settings \"maxcachesize\" and just use the cachemembuffersize as the max size or even better yet remove them both and create a different advanced settings variable called \"freememorycachepercentage\" with default 50% (0 percent would force file cache) \n--  In FileCache.cpp  the equation should probably something like:\nunsigned int cacheram = calculated buffer size\nunsigned int front = cacheram * 0.75;\nunsigned int back = cacheram - front;\nm_pCache = new CCircularCache(front\n                   , std::max( back, 1024 * 1024));\n-- make it default i.e. use default constructor \n-- if the setting to force buffer for smb files cannot be put into into the GUI then an advanced settings variable should be used...this is the one this that I think the user should have an option on as people with lan's will probably not need to use this for smb files.\nThis will defiantly be better than reading at average bitrate when using caching.\n. Ok I merged some of the changes from this pull request and added bitrate limiting functionality in my \"Branch_SMBUseBuffer\" branch and rebased to a current master.\nit currently uses advanced settings to set items up in the network section:\nadded:\nsmbforcebuffer - boolean forces xbmc to use buffer for smb files (default false)\nfreememorycachepercent - percentage of free ram to use for cache (default 50, max 80, 0 causes xbmc to use file buffer, max cache size hard limited to 1 GB)\nremoved:\ncachemembuffersize - no longer needed as cache is based on percent free ram and not an amount\nI cannot get it to crash on smb files (or ftp, dav, http) so if anybody would like to help test to try and crash it, it would be appreciated...\n. Well I updated my branch with the following:\n1.  Switch advanced settings variable from \"smbforcebuffer\" to \"alwaysforcebuffer\"\n2. When this setting is enabled it will force the buffer on everything except Pictures or  IsOnDVD or IsBluRay (i.e. dvd rom drive unless I am mistaken on the IsBluRay functionality).  This should force the buffer on OS mounted network drives (also on local hard drives, flash drives, etc as a result).\nAgain testing is welcome as it is not taking into account IsPlugin = false which IsOnLan takes into account (not sure if that check is relevant for using the buffer)\n. I can if it is alright with the devs as some of the code used in it is from this PR with the following additions:\n- move variables over to advanced settings (\"alwaysforcebuffer\" default false and \"freememorycachepercent\" default 50% max 80% with hard limit of 1GB.  It also removes \"cachemembuffersize\" variable as it is no longer needed)\n- \"alwaysforcebuffer\" variable will cache everything run through dvdplayer (i.e. OS network shares, local media, etc) except Optical Media Drives\n- Memory buffer is straight percentage of free ram (i.e. if 50% free ram is used ~75% of the 50% will be forward looking buffer and ~25% of the 50% will be back buffer) \n- Rate limiting which fixes SMB issues as far as I can tell (1.25 time max bitrate up to 40 MB/s in which case it is throttled to Max Bitrate)\n- ios and linux fixes\n. I have not had any issues with SMB with my branch after testing on windows/linux and atv2 for a month+...the cause of the issues may have been either trying to read too fast (i.e. 3X max bitrate) or the fact that this PR still uses 25% of cachemembuffer size variable as the back buffer in addition to percentage of free ram as the forward buffer...both items are taken care of in my branch (rate limiting and carving up the free ram percentage into back/forward buffers)... \n. @doits - I have noticed that on occasion it does try to fill up the buffer before playing the video over wlan (seems to happen for high bitrate videos)...pressing play while it is buffering starts the video as normal.  Also I have not observed the memory leak can you try and use xbmc nfs network share instead of OS mounted to see if it still exhibits this leak?  Can you verify if it also occurs on SMB?\n. PR #1388 (network cache redux)\n. Did you try FTP?\n. Sorry new to Git...couldn't get the splitting of pull requests to work right...\n. Removed Cachemembuffer commits from request so that AudioEngine bugfix pull request can be accepted by itself.\n. Attempting to fix correctly\n. Attempting To Fix Correctly\n. I am thinking of changing the default to 2X average bitrate in which case the majority of people would not even need to add the setting to their advanced settings as 2X average bitrate fills fast enough for most movies, however that would change it for everybody....thoughts?\n. Changes would be taken care of by previous PR: https://github.com/xbmc/xbmc/pull/831\n. Well the diff is accurate for the Bugfix for multiple albums in the same directory not adding album artwork, however I am not sure how to remove the previous commits as re-basing did not seem to do it unless I selected the wrong options...\n. Nevermind...figured out how to use fixup.  The pull should be ready for item 1 bugfix.\n. Thanks for the tip...changes have been updated.\n. Changes would be taken care of by previous PR: https://github.com/xbmc/xbmc/pull/831\n. I am of the opinion that embedded art should take precedence over scraped art for the reason that if the album does not fall in the tolerance range for the scraper, the user is left with no album art even though they have track art for these situations.  This way xbmc will still fallback to scraper art if there is no embedded art on any of the tracks. \n. The patch only takes into account the way xbmc processes items 2 and 3 for albums with more than 1 track artworks which you just stated is open for discussion.  My previous comment also limited the discussion to embedded versus scraped which again is open for discussion...I agree that folder.jpg should take highest precedence as that was specifically set by the user and should be used as default, however given the lack of folder.jpg I would say embedded > scraped as people may have taken the time to actually embed art into their mp3's\n. Well if a user wants scraping to override embedded art then it should probably be an advanced setting as we can go around that discussion forever..half the people will want one thing half the people will want another.\nThat being said the first track image found should probably still pull into the album art on scanning embedded images when more than one track  image is on an album (assuming that there is no folder.jpg and xbmc correctly works now...if it doesn't then that is another PR) to alleviate no album image if the scanner cannot find an album image (per possible future choice in previous paragraph) \n. done...rebased off of master and fixup'ed\n. Moved fix to AddonDll.h\n. Extra line removed.\n. Updated to pass the m_audioCallback to the DVDAudio constructor instead of registering it after creation. \n. Well the issue is that the audio callback is registered once when the visualization is started, however DVDAudio is destroyed and created on every track change so you run into the situation where the DVDAudio is created but RegisterAudioCallback is not called again to re-init the audio callback in DVDAudio, however DVDPlayerAudio survives track changes which is why I am holding the callback pointer in there instead and just passing it to DVDAudio whenever it is re-created. \n. Ahh...I was looking at CDVDAudio::Destroy which was being called on track changes which was destroying the streams...Since the AudioCallback is only registered once I will still need to re-register the callback on DVDAudio.Create to re-link the callback to the new streams, however I can move the storage of the Callback pointer to DVDAudio and will update pull request shortly...\n. updated\n. It will make using the home menu addon shortcuts operate like running the addon from programs (or the associated addon sub-menu).  I will currently argue that the addon shortcuts for the home menu are currently broken for the following reasons:\n1.  If a addon has more than 1 provides type (i.e. - Video, Music, Image, Program) then running it from the home window addon shortcut (i.e. calling addon through runaddon) will always default to running the addon in a view which may not be the correct one (i.e. if an addon provides Video, Music and Pictures the view will always be Pictures and not allow one to use the Video/Movie Views such as Media Info List or Music Views...)\n2. Running addons from the home window through addon shortcuts uses the \"return\" behavior of ActivateWindow which would probably be the wrong behavior to use as most addons need to re-download updated Movie, Episode, Song, etc lists (i.e. most current information, especially if they build their own item lists to display) and just returning to the last window that the user was on completely bypasses this functionality...\n. @tompen - I am curious for the Pi whether it is the network communications (i.e. the read throughput) or the memory subsystem (i.e. memcopy function in circularcache) causing the stuttering due to high cpu cycles.  Since I do not have a Pi to play with, if you could run the following test - revert OMXPlayer to the state without any changes (i.e. static read rate of the avg. bitrate of the movie) to see if the skipping still occurs which should eliminate network throughput being the issue.  This is of course assuming that you copied the changes from DVDPlayer to OMXPlayer...\nEither way, possibly having a different default for the Pi may be in order if and/or when OMXPlayer changes are made, however only having 5 percent of free ram as the default across the board would probably be useless for any devices like the ATV2 which is memory limited but can handle a 30-40 MB buffer size (i.e. about 50 percent of the usual free ram) and basically any standard linux, windows, etc. boxes that people have that can handle decent sized buffers...\n. I am waiting for a Rasberry PI to come in (back-order) to test regarding issues that @tompen was describing to see if I can adjust the code (i.e perhaps a 25 or 50 MB memory reservation before the percentage of free ram is used, or to use cachemembuffersize as a static override, etc).  Anyways this PR will not be included in main until at least after Frodo goes live as there is a feature freeze... \n. ",
    "michaelbaudino": "This feature may be useful on non-SMB files too : I'm reading videos over internet using a SSHFS mount (as described on this XBMC forum thread), which seems to be viewed as a local FS by XBMC.\nAnd as my internet connection is not always as performant as I would like to (e.g. not able to stream not-so-compressed 720p movies), a buffer to download data prior to reading it (maybe only a few minutes prior), would be highly useful !\nAnd, on a more philosophical level, with the rise of personnal cloud storage, people may tend to store and stream more and more videos over-the-internet in the future.\n. Thanks, I'm cloning it atm :-)\nIs there a way to monitor cache level in real-time while playing a video to check that it's working ?\n(I'll probably try that during the week-end)\n. Nice, I'll let you know, then :-)\n. I've been using @classicspam 's branch for almost a month now, and it's working great ! Except for a few really big files (which I cannot watch seamlessly even with full cache), I had absolutely no problem.\nOne thing I noted, though, is that the cache's maximum capacity, may vary (sometimes it's 900MB, other times 150MB), but I guess it depends on the available memory which must be taken by another process (or by the very same process, btw).\n@classicspam, do you plan to issue a pull-request to merge your branch in master ?\n. I can't comment on that SMB bug, since I'm using SSHFS, but I did not encounter such a bug with SSHFS...\n. I've seen that too. Also, sometimes, with pretty big videos (e.g. 7GB BRRIPs), the buffer fills up totally but a message pops-up at the end of buffering : something like (i don't remember the exact sentence) \"the buffer is full, but it will not be sufficient to watch the video until the end\".\nSo my guess is that while buffering, the player computes the amount of buffer necessary (depending on the buffering speed). I think the movie is launched when this required amount has been reached (or, if it is never reached, it displays the message I've been describing above).\nAnyone can confirm such a behaviour ?\n. I'd +1 for merge too, if that helps...\n. ",
    "doits": "I'm using patches based of the @classicspam branch with latest openelec frodo and buffering nearly works perfect with locally mounted nfs (over wlan) storage and alwaysforcebuffer.\nOnly one problem: A video does not begin to play at once after starting it. Looks like it wants to fill up some cache before - XBMC hangs at the video list for about 40-80 seconds after starting a video. When the video starts, it already has ~500mb in cache. Then everything works fine. Someone else got this, too?\n. And one other thing: after starting and stopping to play four videos, XBMC is completely eating RAM. Not sure if this is supposed to, or shouldn't it free RAM after stopping a video?\ntotal         used         free       shared      buffers\nMem:          3960         3928           32            0           51\n-/+ buffers:               3876           83\nSwap:            0            0            0\n. @classicspam my problem happened without cache enabled, too, now ... cleared my xbmc setting totally and reconfigured it - works flawless new. sorry for the confusion.\n. using @classicspam branch without any problems last 5-8 movies. +1 for merge.\n. I'd be glad to hear something from the devs here. If there's something still not right with the patches to be included we'll work it out.\nWithout this, I couldn't watch 1080p videos (~10gb/h) without 1-2 disturbing \"buffer-breaks\" for few seconds per hour over my wlan. The \"old\" buffer did not catch extreme spikes in bitrate nor  an unsteady wlan bitrate. With this, I have absolutely no problems. Videos even start at once (no \"buffering on start\" or so) and play until the end.\nAnother big benifit: small distance seeking is no hassle anymore! Before even skipping 20 seconds sometimes lasted 3-5 seconds, now seeking inside buffer range works at once.\nI cannot see atm why this is not merged. If there's something needed to be worked out, please tell us.\nTalking about @classicspam's patch with latest frodo builds, https://github.com/classicspam/xbmc/tree/Branch_SMBUseBuffer\nEdit: I see, theres a PR #1388 already for this ... should be at least referenced like now.\n. what's current status for this? any chance to include this in the next cycle?\n. compiles fine for me at 914e708\nedit, for reference, I use this patch: link to patch\n. ",
    "PKOneTwo": "Just an FYI: using ATI 5450 and 6450. And the quality is more then visible (with patch integrated and) using Lanczos3 compared to DXVA setting!\n. Since i really love to have better quality then DXVA scaler (lanczos3 for example) i just edited the patch file, so it suits with the changes in master (lines, the one and the other changes of code):\nhttp://pastebin.com/raw.php?i=qhSSYuQt\nhave fun\n. ",
    "BrannonKing": "I posted about this code in the forum: http://forum.xbmc.org/showthread.php?tid=154688&pid=1339890#pid1339890\n. ",
    "wsnipex": "I run a hd 4250 and can confirm that this resolves 2).\nwithout the patch the gui is always completely scrambled and unreadable.\n. Users already bitch about it all over the forums since Eden was released. Thats why we redirect them to FernetMentas branch(alias Xvba branch)\n. sorry about the hunk. also added to final_message\n. @theuni I squashed the old commits into this one. Since I'm kind of a git noob, your comments got lost, sorry about that.\n. is there still something to be changed from my side?\n. probably not popular suggestion: when a user sets a speaker setup and audio device in the GUI, check the sink capabilities and pop a warning/disable wrong settings.\n. are you gonna add it to your PR then? \n. fine for me, closed\n. example from my system:\nprefix=/opt/taglib-1.8\nexec_prefix=/opt/taglib-1.8\nlibdir=/opt/taglib-1.8/lib\nincludedir=/opt/taglib-1.8/include\nName: TagLib\nDescription: Audio meta-data library\nRequires: \nVersion: 1.8.0\nLibs: -L/opt/taglib-1.8/lib -ltag\nCflags: -I/opt/taglib-1.8/include/taglib\n\nAlso tested with prefix /usr/local which translates to:\nprefix=/usr/local\nexec_prefix=/usr/local\nlibdir=/usr/local/lib\nincludedir=/usr/local/include\nName: TagLib\nDescription: Audio meta-data library\nRequires: \nVersion: 1.8.0\nLibs: -L/usr/local/lib -ltag\nCflags: -I/usr/local/include/taglib \nthis is with the taglib included in xbmc in lib/taglib\n. not really packaging friendly comment. I think addon devs might disagree too.\nBtw, I made this PR in accordance with @opdenkamp \n.    because most users prefer an all in one package. They don't care if\n    a couple 100k space are wasted by addons they don't use. \n    And with the rather frequent API bumps it gets very fugly trying to\n    package compatible addons separately, specially when you package\n    monthlies, nightlies and stables.\n. developer convenience and packager convenience is the same thing is this case. Both benefit from a way to build all in one.\n@cptspiff: I absolutely understand your point on this, I'm all for infrastructure that allows binary addons to be installed from the addon repos, but its just not there yet.\nAnyway, I'm not losing any sleep if you guys decide to deny this.\n. Even if you split every addon in its own package, it still makes sense to build them all at once, so I really don't see your point here. Why are you trying to enforce packaging rules, while Xbmc doesn't even do linux packaging anymore?\n. cptspiff: in my - not at all twisted - reality of providing all in one packages, but I already said that.\nopdenkamp: the fact that the Team XBMC ppa did not put up a new package since march. Even if you count the debian policy crippled Eden stable package, there are 0 monthlies or nightlies. Hell, even xbmcfreak's Xbmcbuntu Pre builds use my packages\n. they are part of the xbmc package depends(on linux). Currently its only mysql and boost headers, which xbmc itself needs anyway.\n. Afaik the general policy for pvr addons is that they should not use external dependencies. Because of that you need a configure switch to enable building them. see here: https://github.com/opdenkamp/xbmc-pvr-addons/commit/79f73ecb7824094b2db46ad9edde41d02539f44b\nThis purpose of this PR is to pass this configure switch down to the pvr-addons when they are built intree(together with xbmc)\nedit: alternatively we could just pass this switch always instead of introducing a new switch in xbmc\n. you won't get anything into any linux dist with everything statically linked. Also, if you do this for addons, then you must do it for xbmc too and only ship one huge monolithic binary. Thats not the linux way for sure.\n@opdenkamp: I don't see the point in saying: This flag is for developer convenience only, you are not allowed to use it in any other way. \nAlso seeing how osx does things, its miles away from what some people here imagine how it should be done. Pvr addons are also included in the xbmc package, very much the same as I do it on linux. The only difference being that it does not make use of intree building.\nAnyway, this PR is closed.\n. if its there and it does what I need, why should I not use it for packaging?\n. so the answer is: because its for developers only? in what utopian world is that a valid reason?\n. we are going in circles here.\nI've already stated multiple times that I fully support binary addons. Here comes the but: currently there is zero infrastructure to allow this, so we need a solution for the time being.\nagain, osx packaging(didn't check windows) currently does nothing different than linux except its not using intree building of pvr-addons.\nLet me rephrase what I said about statically linking xbmc: It's ofc not necessary to statically link xbmc, only because  an addon was built that way.\nBut statically linking addons with libraries that xbmc itself already depends on - and therefore are installed on the target system - is just silly. If you do that you might as well do it for xbmc itself and not require any system dependencies at all.\n. how about what elupus said, plus a \"test audio\" button?\n. bump. \nif we can't get the suggested fixes for frodo, we should at least merge this as is. better a long list of devices then no audio at all.\n. ping\n. well, gitrev is just a text file that has the git revision of the build. Its a replacement for what the git log  - that is used when configure is run from within a git repo - spits out. Its what the system info screen shows besides the build date.\nIt would be up to the user to fill it with the last git revision this source has.\nThis patch is probably only useful for packaging on linux, because e.g. launchpad only takes tarballs, you cannot build out of a git repo. That means that the Xbmc info screen shows buildate with revision Unknown. With this patch the packager could include this gitrev file to include that information and be in line with all other platforms that build from git dirs.\nI'm not sure myself if this is necessary to be included in xbmc, up to you.\nI agree that the filename could be more self explanatory, can change it if you agree with the idea of the PR.\n. @theuni great :) I adjusted this to use the VERSION file. the cut command trims the revision to 16 chars, which would allow the exact same revision format as like building out of git (e.g. 20121215-abcdefg). What do you think?\n. @theuni I updated to use awk. I'd like to keep it generic enough to work also with VERSION files that contain only one line or more then two, so we always use the last line from the file. \n. this is much cleaner indeed :) updated\n. if you don't check for the header first, test compilation in XB_FIND_SONAME fails. Iirc the warning then comes in the \"gold linker syntax\" part. And I didn't find a better way to cleanly check check this, but suggestions are welcome.\n It'd be easier if lame support was not auto.\n. works for me on ubuntu\n. @amejia1 are you going to build new packages for v3.1.2 before this is merged? the newest I can find in debian experimental is 3.1.1-1\n. @amejia1 Thanks. I ported it over to ubuntu and it built fine for >= 11.10, but failed for natty in one of the tests:\n258: test_write_filter_lzop\nlibarchive/test/test_write_filter_lzop.c:152: Assertion failed: used2 < used1\n   Description: compression-level=9 wrote 7646 bytes, default wrote 6144 bytes\nhere is the full build log: https://launchpadlibrarian.net/131040253/buildlog_ubuntu-natty-amd64.libarchive_3.1.2-2ppa1~natty_FAILEDTOBUILD.txt.gz\nany idea whats going on?\n. wouldn't this also work for the \"no audio after suspend\" issue?\n. regarding the deadlock on suspend while playing audio: I can reproduce that 100% with this patch, but it works without it.\n. ok, probably wasn't clear:\nwith this patch:\n- suspend while NOT playing music: works\n- suspend while playing music: deadlock\nwithout this patch:\n- suspend while playing music: no deadlock, but also no audio\n. same thing with last commit. Still deadlock on suspend with audio playing.\nbt: http://paste.ubuntu.com/1605681/\n. last revision completely fixes suspend/resume, also suspend while playing audio or video!\nawesome work!\n. retested with lastest commit, still working great. imho merge away\n. Softsuspend working here too, that will make many users very happy :+1: \n. still works for me\n. retested softsuspend. Works fine with and without menu sounds.\n- with menu sounds: sink restart is triggered in ProcessSuspend()\n- without menu sounds: sink restart is triggered in Run()\nnice catch\n. yep, correct, its the other way round. fixed it above now\n. revert that, its totally broken for me. Audio doesn't even play normal anymore, crashes..\nedit: just noticed that came out kinda rude, sorry, no offense meant\n. softsuspend working fine again, with and without menu sounds.\nfull suspend, with and without sound playing also with and without menu sounds.\nAll fine :)\n. good hunch, you are right again. \nsoftresume while being in pause deadilocks in Run() outputstage \nhttp://paste.ubuntu.com/1625906/\nthat is using HDMI without passthrough\n. @Voyager1, @arnova \nupdated to fix the issue in our configure\n. retested soft and real suspend, works fine here. Resume from pause now seems to always fall trough to the sink where its catched - imho the correct place to do it anyway.\n. ubuntu packages including this PR:\n- mainline: https://launchpad.net/~wsnipex/+archive/xbmc-pr-tests\n- xvba: https://launchpad.net/~wsnipex/+archive/xbmc-xvba-testing  (currently uploading ETA ~3h)\n. working really fine here, survived all kinds of nasty stuff:\n- switching on the fly between video and music, passthrough and stereo\n- suspend/resume from all player states\n- block alsa device while xbmc in pause and idle\n- playing while alsa device is blocked by other process and removing the block while play\n. ad 1) completey agree, don't mess with version numbers, you cannot even be sure that older packages are still available. Launchpad removes superseded packages at will, so do other package repositories.\nad 2) if the package dependencies are properly set, this should not happen. Thats the package maintainers job. \nIn your example: removing libmysqlclient will also remove xbmc-pvr-cmyth(and xbmc itself)\nFurthermore, we have several repositories(stable, unstable, nightly, + unofficial ones), that potentially all hold different xbmc and pvr-addons packages. Imho its enough that both are compatible inside the same ppa.\nSince the user must already have added a ppa(in ubuntu case), its probably a sound idea not to add another one via this Addon repo, as this can screw things up. Just let apt/yum/emerge.. install the package from whatever system wide repository it finds appropriate.\n. that said, it might make sense to add some API compatibility flag to the addon packages that could serve as sanity check before installing\n. yes, but its not exposed in a way the repository addon can use. Only idea I have for this, is to put something like api16 in the package filename/version\ne.g. xbmc-pvr-demo_1.0.0~git20130124.1718-96774c4-0quantal~api16\n. I don't see how a meta package helps here, unless we want xbmc to depend on pvr-addons. This would defeat the purpose of this PR though, as addons would always be installed.\nMy idea is the following:\nPut the PVR Api version in the addon package name. xbmc-pvr-[addonname][PvrApi]_[addonversion]-[tag][distribution]\n     e.g. xbmc-pvr-mythtv-cmyth1.6.0_1.6.8-1raring\nconverts to: \n-addon name:  xbmc-pvr-mythtv-cmyth1.6.0\n-addon version: 1.6.8 from upstream\n-version tag: -1raring\nwith this the repo addon can install the newest or even a specific addon version that is compatible with xbmcs Pvr Api and addons for all xbmc versions could live in the same repo.\nIf this is not what you want, please explain how a meta package would handle this\n. I'm almost done with the implementation of what I suggested above. \n. https://github.com/wsnipex/xbmc-pvr-addons/commit/26fd3db7d989c9471c02096545fac368dfc8389c\ntest packages: https://launchpad.net/~wsnipex/+archive/xbmc-nightly/+packages\nclick on the xbmc-pvr-addons package to see the sub package details.\n. > Now, if it gets bumped to 1.6.8 and depends on xbmc.pvr 1.6.0, frodo users get an update.\n\nIf we add v1.7.0, which depends on xbmc.pvr 1.7.0, frodo users won't get it, but frodo+1 will (assuming that >frodo+1 gets xbmc.pvr 1.7.0)\n\ndoesn't work like this. What happens instead if you install the new addon version that depends on xbmc.pvr 1.7.0, is that xbmc gets updated to frodo+1.\n. works for me.\nedit: confirmed unrelated to this PR:\nwhile testing I noticed that switching audio output from the audio OSD(while playing a video) does not work. I can cycle through hdmi, spdif, analog, but output device stays the same as configured in settings.\n. implemented the suggested changes. Also added filtering of username in xml tags\n. its very possible that I changed the order around while rebasing/squashing the last time. Would it really make a difference though?\nI did squash those two down as requested and rebased again.\nI'm aware that Xcode stuff is missing, thats why I asked for help with that in the PR description ;)\n. understood, didn't think about that.\n. I don't see a gaping hole. You can always enable user/pass for the webserver. Also most users, me included don't have anything to hide on their own LAN\n. I don't follow. What has xbmcs webserver to do with your router?\n. which security issues are we talking about exactly? If there is more data to be sanitized, I'd be happy to do so, but I won't implement a gui option.\n. You can turn it off, turn off the webserver. I really do not understand the issue here. The webserver can be password protected....\nedit: @NedScott plz provide concrete examples\n. Since depending on \"debugging enabled via Gui setting\" would defy most of the usefulness, I added a gui setting to enable access to special:// urls\n. I never enable debugging via Gui setting, only via advancedsettings, because I hate the overlay.\nSo either \"if debug logging is enabled\" or a Gui setting for this or always enabled. \nYou guys were lamenting about the \"huge security risk\", so a GUI setting is the correct solution.\n. then what do you suggest for the settings text?\nagain the debug gui setting is useless to me and many users.\n. thats the question here. I don't see a security issue in exposing the stripped log(or other files), @t-nelson and others obviously do.\nIf log only is agreeable, fine for me, but I do not want it dependent on having debugging enabled via GUI setting. This is my only requirement, as it makes my own usecase moot.\n. @MartijnKaijser can you please add the last commit https://github.com/XBMC-Addons/service.xbmc.versioncheck/commit/a92376734f136f1f1fc7790c98093a84350687b7\nIt should fix that the script could get killed by xbmc before the apt cache was fully updated.\nBtw I already have upgrading xbmc working on ubuntu, but it needs more testing and polish.\nif someone is interested: https://github.com/wsnipex/service.xbmc.versioncheck/tree/upgrade\n. http://trac.xbmc.org/ticket/14296\n. other packagers have the same issue: http://trac.xbmc.org/ticket/14274\nping @elupus @davilla @theuni \n. linux packages for testing here: https://launchpad.net/~wsnipex/+archive/xbmc-nightly/+packages\ncan you try if they work as expected?\n. ",
    "athloni": "Will Kiosk mode finaly be implemented?\n. ",
    "Cyberwizzard": "Is this the fix for the VDPAU issue where at the start of playback only audio is played and XBMC hangs? If so, does it need additional testing?\n. ",
    "escalade": "Shouldn't this be integrated soon?\n. ",
    "un1versal": "I would like to test this code by pulling it to my code. I never used GIt so How can I pull thing for testing since I currently work with master..\nThank you.\n. Ok Testing this PR against current mainline code and add this patch and compile. As ronie suggested\n(13.0-ALPHA1 Git:20130209-20f2624)\nResults are astounding, it removes the broken/incorrect VDPAU studio level conversion option from XBMC this alone is merge worthy,.\nOn a ION gen 1 the slight judder on panning is improved considerably (unnoticeable on any test files so far) on all vdpau accelerated content.\nAll judder when using Video Scaling other than bilinear is 100% gone with this as is without only bilinear worked.\n@davilla @FernetMenta \nidk what is holding this back from being merged, since this is working like butter.\nIf there is anything specific FernetMenta like me to test let me know.\nuNi\n. @elupus \nI tested with this master + this PR\nWithout PR I also disabled VDPAU studio level conversion as it produced same black is greyish results.\nonly with this PR its not just vdpau accelerated content it applies even on GUI.\nEssentially what @da-anda said holds. With setting on blacker is not blacker, and when you turn it off addons have no reflections. Without this PR (pure master compile) addon reflections are back to normal.\nWith setting on Black is greyish \n\nWith setting off Black is Black again \n\nWith setting off addons reflection is lost. \n\n. Memphiz I do believe you may be on to something, when using this and pressing volume up/down or mce button the screen color changes, wondering if this is what you discovered or something else.\n. d '-' b Two thumbs up - Tested single PR against Master. Finally chapters seeking doesn't kill playback\nThx.\n. Im sure there is a reason, tbh wasnt thinking of traffic ;) and perhaps there's even another feeds link on some feed site which is working and up-to-date, though couldn't find any.\nA long shot anyway either PR or open a bug reports which have not been getting any love anyway.\nAt least I could do this quick PR as long as it doesnt involve any form of coding I dont mind.\nThe addon idea is good, perhaps even extend the rss editor to do both.\nthx ronie.\n. @theuni @ronnie seems there is no coming back for feedburner, google is apparently (insert is this true?) shutting down feedburner and apprently XBMC is one of the many for which feeds just broke,\nsee http://techcrunch.com/2012/09/24/feedburner-experiencing-stat-issues-api-to-shut-down/\nhttps://twitter.com/FeedBurner/status/228554988127911936\nPossible (free) alternatives to feedburner http://www.feedcat.net/\n. That was fast, I wish other things got equal attention ;)\n. @theuni couple of things in Ubuntu after compiling from master.\n1) After this trying to compile PIL in Ubuntu is no longer possible with  make -C lib/addons/script.module.pil the .so files arent compiled anymore, How can it be done and is it still required?\n2) and 3) Weird and unneeded contents of /usr/share/xbmc/addons/\nlibrary.xbmc.addon/\nlibrary.xbmc.gui/\nlibrary.xbmc.pvr/\nHas source files inside like .cpp and .h files, and nothing else, is this right?\n3) In Ubuntu /usr/share/xbmc/addons/\nrepository.pvr-android.xbmc.org\nrepository.pvr-ios.xbmc.org\nrepository.pvr-osx32.xbmc.org\nrepository.pvr-osx64.xbmc.org\nrepository.pvr-win32.xbmc.org\nThese arent really required in Ubuntu/Linux or are they? They end up there after compile anyway perhaps in other OS's Shouldnt each OS have only the required repositories?\nI can open a trac report if required.\n. Ok sorry, though it was ok since it was committed and is part of dev and oddities after a month still there. So just trying to understand whats what., sorry, asking in forum.\n@ http://forum.xbmc.org/showthread.php?tid=162264 please ping theuni someone.\ngratitude.\n. Thank you theuni even if its temporary.\n. Compiled with this patch\nOnly thing it did was reset all my Files view modes to List instead of mediainfo\nLibrary was unscaved from view reset but still shows issues on tv shows and movie sets in various views. SO unfortunately unless Im missing something, no joy.\nuNi\n. Ok presuming that only that last patch is applied. I can confirm that the rogue flag being pulled for non file items, does indeed fix the issue.\nThank you @arnova for addressing this large annoyance and @jm for queuing this under the radar.\nthanks again, gratitude.\n. It also would be worth mentioning that with aeed179 it also works for extracting the listing SD/HD (blue/green) flag for multiepisodes showname S01E01E02.extension type scenario, as previously the second episode was listed without that flag until playback was initiated/stopped.\nIt also worked if file was not in library and previously had been, haven't tested if file was not in library at any point and haven't test stacked/non stacked files, but can test all those scenarios out.\nIf testing is welcome for this last bit let me know what commits to pull and compile as its gotten somewhat confusing now which is the patch(s) to pull/compile, presume its's 2c48b89 and 4c063c7.\nPlease provide instructions and I will test it and  confirm its those two last patches needed only.\nThanks again.\n. Updated further textures to tweak colormatching and addressed the comments on https://github.com/uNiversaI/xbmc/commit/3ffec90a6bbe0bda5d2cc578a91b37302c9f05ff , the floor png doesnt have to be this its still there but I can revert it.\nonly pallets were changed to match closer the confluence blue and some design to squarer on scrollbars/progress.\nI can further refine the background as on scrollbars only tweaked palette and shape it was still blueish before hand.\nWould be nice to have psd sources to do a proper job though rather than work on png.\nupdated the Textures.xbt to match latest commits but havent removed the floor png yet.\n Though the reflections are very visible still.\n. @JezzX @ronie \nPushed changes to address all commnets now and updated Test Testures.xbt to match,\nOk seemingly I managed to squash everything and push to PR now its all in  14318df \nUpdated First post to match commits and changes.\n. @phil65 Confluence is a skin from many skins jumbled together, not a design per say from one person only. Sure Jezz threw them together and made it all work indeed a desirable work. But even since then its been added to without consideration to details. Your saying basically there's is no room from improvement this would be a shame.,.\nThis attempts to deal with these shortcomings and improve make the confluence match even better and still keep it simple.\nChange is always hard but after a couple more tweaks (mainly to progressback/Mid I believe its much better. and even if this is totally shot down it is still and issue. which merits attention.\nBesides I cant code, what I can do I do. if its shot down heck not teh end of the world, much more complicated work is ignored and shut down, If I end up on that pile well, \nI hope I understand what it is people want and provide the sources so I can do a better job instead of working on png which not as good as working from sources.\nI love confluence and admire the work just want to see it more refined and better matching.\n. Anyway updated the last two textures to match the comments that outline was too standout on OSDback/MID\nits now been squashed and pushed\nTextures.xbt updated to match.\n@phil65 some feedback from these changes would be welcome other than just telling me its a bad idea to even think of doing the PR. Is this opensource?\n. @phil65 I was looking for your feedback on the changes not on finer points of an artists rights. Have you tested it with latest changes and if so whats your opinion. \n. @JezzX @ronie feedback please?\nbcbd657  Addresses all tfixes of the OSD Textures and even a size discrepancy on canvas 48x49 in one Texture OSDRecordOnNF.png should also have been 48x48 like all the others.\nSee commit message. Sources psd's with vectors (not rasters) will be made available when I sort out and organize the naming etc on psd itself.\nThe Test Textures.xbt has been updated and can be downloaded from first post.\nIt looks fantastic its very visible improvement on screen/ projectors HD TV's. imho its looks as if it was always like that. Instant classic look But thats just me.\n@phil65 Any feedback?\n@da-anda because you probably understand the half pixels/precision and because zappy rules, would love some feedback.\n. Ok PSD sources for 90% of fixes is available here https://github.com/uNiversaI/skin.confluence/tree/master/PSD_Sources\n. @JezzX @ronie Round #20 some feedback please. Ive addressed JezzX comments and would like some guidance/feedback. SInce then over 20 commits and 80+ fixes improvements and designed vector sources for these.\n@jmarshallnz Would be nice to have feedback from other people who are involved with GUI too?\n. @JezzX Sorry didnt mean to sound impatient.\nThe test Textures.xbt is on first post same link for all. https://github.com/uNiversaI/Test/raw/master/Textures.xbt if a new revision is made same link will do, should work just fine across revisions.\nI never seen any psd with vectors shapes for these sources anywhere, given the precision issues the shapes are not aligned to full pixels on these sources then, hence, never seen by me such sources. A link would be nice.\n- The calibrate textures (CalibrateTopLeft was perfect and thus untouched.) only 3 had half pixels on some straight edges except the subs which had a glow around are they all supposed to have a glow anti-aliased? I tested them as is now looks fine.\n- OSD 64x64, Yes I could have a stab at making all the 48x48 turn them into 64x64 instead/also, if its just a matter of replacing the existing, since I dont understand the code part. Or do you want both 48x48 and 64x64 for OSD?\n- Because the osd ring are ontop of a black gradient it stands out enough, but this can be changed to have some more contrast.\n  There are really 3 different sizes side menu, main menu and fullscreen so idk.\n- The icon_ They may look same but they are much improved (half pixels mostly) the idea is not to change just because, but to improve on crispiness of graphics.\n- The progress bars/ where inspired by a few projects of yours on google+ their are 3 pixel Radius (rounded corners) I tried as best as possible to have colors that wouldn't stand out too much (as per your comment) and still work, This is the most challenging part. Please let me know more specifically what to improve.\nLet me know.\n. Its being tested now on ION platform for sure but Im having a few quirks, like resume sometimes gets lost and already watched disappears along some other weird behaviour, I would like to get to bottom of it. Haven't pulled and compiled this yet though.\n. @wsnipex \nDone sorted both Readmes dependencies list with true alphabetical A-Z.\nIs that ok? Squashed both commits into 1\n. ",
    "aviksil": "@amejia1 yes you can.\n. @davilla I don't have much idea on iOS build, but does the below patch serve the purpose?\n--- a/tools/darwin/depends/configure.in\n+++ b/tools/darwin/depends/configure.in\n@@ -52,6 +52,8 @@ case $use_darwin in\n      if test \"$use_arch\" != \"armv7\"; then\n        AC_MSG_ERROR(error in configure of --with-arch=$use_arch)\n      fi\n-     CFLAGS=\"$CFLAGS -Wa,-march=armv7a -mcpu=cortex-a8 -mfloat-abi=softfp\"\n-     CXXFLAGS=\"$CFLAGS -Wa,-march=armv7a -mcpu=cortex-a8 -mfloat-abi=softfp\"\n    case $use_sdk in\n    4.);;\n    )\n. ",
    "eghetto": "Ahh, I see, thanks! :)\n. ",
    "sialivi": "1.6.3 is available\n. Any chance this could be updated to 1.7.1 before it's merged? Looks like it's adding some panasonic vendor commands that will hopefully fix some unsupported buttons for me.\n. I'm sorry to butt in on a developer discussion, but it sounds like this PR is overlooking one thing that's fairly important: Production Language; the language the content was recorded in, not whatever dubbed languages are also available. If the production language matches either the primary or secondary preferred language, one could probably safely assume that the person knows that language and would want to prioritize the production language over the dubbed version, even if the production language is the secondary preferred and a primary preferred audio track is available.\nExample of problem:\nLet's say I set primary preferred to English, and secondary preferred to my native Swedish.\nTest 1: \"Pirates! Band of Misfits\", production language: English, additional audiotracks: Swedish, Norwegian, etc.\nResult: It will default to English which is perfect.\nTest 2: \"Let the right one in\", production language: Swedish, additional audiotracks: English.\nResult: It will default to the dubbed english version, which is nearly always a bad choice.\nSuggestion for a modified version of the rules in the description:\n\u2022 If (audio track == production language) && ((production language == primary preferred) || (production language == secondary preferred)) then use it\n\u2022 else If audio track language == primary preferred, then use it.\n\u2022 else If audio track language == secondary preferred, the use it.\n\u2022 else fallback to old behavior.\nProblem:\nI don't think XBMC currently scrapes the production language, even though the information is available on both IMDB and themoviedb.\n. @jbdk \nI have to disagree that it's a corner case. Can you think of any scenario where you would want to prioritize a dubbed language over a production language that you know? I think -that- would be the corner case.\n. @jbdk \nIt was not my intention to discourage you, only to offer another point-of-view to make it even better.\n. ",
    "ipitcher": "xbmcKey.iButton = XINPUT_IR_REMOTE_BLUE;\nPushCecKeypress(xbmcKey);\nSemicolon is missing there on PushCecKeypress.\n. Just tested this.  Views aren't being created when using a MySQL back-end.\n. Hahaha, sorry.  I'll try to recreate the conditions and get a debug log.\nBut, in summary: I had a version 25 music database, built from git after these commits were merged, got many \"the table does not exist\" messages, looked at the database with mysql command line client, database existed and was populated, views weren't there, dropped the database, restarted XBMC to allow it to create a fresh database, scanned music source, views weren't there, modified advancedsettings to use sqlite, rescanned source to sqlite, looked fine and everything showed up in the gui, modified advancedsettings to use mysql, restarted XBMC, version 27 database was create and populated -- views still not there.\n. Looks like  tgrAlbumInfo is the only one there.\n. Okay, thanks.  That's working well now.  One last thing: are Album Artist tags going to be required now? Newly scraped albums without the Album Artist tag are ending up with empty strArtists fields.  I suppose I could just add the Album Artist tags, but I thought it was worth asking.\n. Yes, this was from yesterday's master.  Sorry, I should have thought about the other musicdb changes before commenting.\nI recall strArtists populating correctly without Album Artist tags since that music db change, but I don't remember if it was on a db upgrade or a fresh scrape.\n. Sorry, the log is long gone as is the old DB.  This is MySQL, and though I'm not certain, I think the same behavior was seen on SQLite. \n. I've since copied the Artist tags to the Album Artist tags on all of my mp3s with empty Album Artists, but if I have some time later I can create a small test case and send you a log.\n. ",
    "vajonam": "thanks i will rebase this and re-submit this. \n. i think have a lot more cleanup to do! will create new PR when I am ready thanks\n. cleaned up rebased and squashed commits. \njmarshall yes that is right this a rebase of #542\n. I did already squash the code down. into a commit, am not sure why that isn't showing up as one commit. I have also fixed all the indents. again not sure why git hub isn't showing the squashed\nregarding the actual code, I agree with most of the comments, except that you don't need a graphics card to install this package, I have tested this on a system without a card. But that being said the current dependencies on an ubuntu include a number of sdl packages. \nThe main point of this server is to be always available on the network so internet pvrs can notify it of changes and keep the db upto date. or to run periodic updates to keep db upto date for a multi seat install. \nthere is a lot of hackery in here I agree. What is the suggested approach to keep this moving  forward?\n. @Montellese, I use vi and set the tabstop and shiftinden and expandtab and then did a retab and ensured the indents a re okay. If you are mean the if-defs those indents aren't consistent in Application.cpp to being with, I have made them have no indents as per spec  in the sections I touched. \n@Montellese,@amejia1 assuming that mysql / shared database is used. there is no need for a sources or gui to adjust the scrapers. they can all be done from another headed machine. since all the scraper information is stored in the database anyway. Any additional sources and so on can also be configued from the headed machine again which gets added to the db. the scrapers and scanners all use this rather than the sources.xml anyway! \nthe only config this server needs its to point to the same mysql database, if it will make this less easy to stumble upon I can change it that the server mode can be set only by editing the advancedsettings.xml this will remove the -s or --server switch. Which would mean for now this would be just for advanced users who are familiar with using the advanced settings file. \nas i see it this is what I see as the minimum requirements\n1. atleast 1 XMBC running in full GUI/Headed mode this will be used to configure. \n2. use of MySQL for a shared database\n3. ability to edit / create advancedsettings.xml for the server/headless under the userdata folder\nI think this makes sense because. to use MySQL the user modified and edited an advancedsettings.xml anyway even in the headed GUI XBMC instance. \n. @Montellese thats for pointing those out, stopped seeing them after seeing the patch for so long.. but doesn't look like this PR is going too far based on the discussion thus far? \n. interesting, if this is path that we want to take, I can offer to code something but will need some help / direction I am just bit of hacker when it comes to XBMC i am afraid, enough to be dangerous!\nwhat will be needed to achieve the following?\n- a server that listens exposing the http-api or jsonrpc api\n- updates a mysql db by running the scan and updating content.\nwont this almost duplicate a lot of code that is already written in xbmc?\n. @theuni where do you want feedback about bugs? forum or here? \n. ",
    "basrieter": "Wow! I really appreciate that this is being picked up and supported by the XBMC team! Nice. \nWould it be a good idea to start a central topic on this headless version on the XBMC forums so we can discuss builds, bugs and features there? \nI myself an not a very skilled c++ coder. I did however created a tiny service addon that allows a user to schedule Video and Music backups on a daily basis. As soon as this headless server is official it might be a nice addition?\n. ",
    "Samtronic": "Hi is it posible to add \"lastplayed\" property for album too.\nThanks\nSteven\n. ",
    "sandersch": "Built xbmc from the myth-0.25 branch of dteirney's repo and it worked against my 0.25 backend.  Is there a more formal testing process I should go through?\nRegarding the conversion of the cmyth_rcv_long_long functions for protocol version 66, it looks like this was converted everywhere but ringbuf.c.\n. ",
    "hcw70": "Hi dteirney. I tried the libcmyth version from frodo-nightly builds for ubuntu with mythbox. It worked quite well but i had playback hickups with both live and recording views. I am viewing over WLAN (no problem with MythFrontend). \nIs there an option for buffering ? \nWhere to report this?\n. ",
    "jocull": "I don't have access to Trac to add bugs. I've tried, but not sure what to\ndo. The issue is closed on Github now, so I am stuck unless I recreate.\nDon't want to do that and be annoying.\nOn Mon, Apr 23, 2012 at 3:00 AM, Sascha Montellese <\nreply@reply.github.com\n\nwrote:\nLooks like older packages have been removed from the debian pool. But\nplease post this as a bug report on our own Trac at http://trac.xbmc.orgas we don't handle bug reports on github (yet).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/897#issuecomment-5275395\n. Thanks, that worked!\n\nOn Thu, May 3, 2012 at 2:16 AM, Sascha Montellese <\nreply@reply.github.com\n\nwrote:\nAh you need an account in XBMC's forum (http://forum.xbmc.org) to get\naccess to Trac. You will be able to use the same username and password in\nTrac as you use in the forum.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/897#issuecomment-5481617\n. Opened:  http://trac.xbmc.org/ticket/12985\n\nOn Thu, May 3, 2012 at 12:45 PM, James O'Cull houndeyex@gmail.com wrote:\n\nThanks, that worked!\nOn Thu, May 3, 2012 at 2:16 AM, Sascha Montellese <\nreply@reply.github.com\n\nwrote:\nAh you need an account in XBMC's forum (http://forum.xbmc.org) to get\naccess to Trac. You will be able to use the same username and password in\nTrac as you use in the forum.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/897#issuecomment-5481617\n. \n\n",
    "featherman": "Replace  ftp server in pkg-paths.txt with ftp.acc.umu.se\n. ",
    "mazkolain": "Sorry for resurrecting this PR, but I suspect that it broke music playback on an addon I'm working on: Spotimc.\nThe addon relies on an embedded python server (spawned from the addon itself) to serve music streams to XBMC via http. It worked before this PR was merged, but since then all requests to this embedded server end up on timeout errors.\nIf I'm not wrong, the python bindings for the xbmc module that were superseded by this PR released the python GIL with CPyThreadState, as you can see on the body of Player_Play:\nhttps://github.com/xbmc/xbmc/blob/Frodo_alpha5/xbmc/interfaces/python/xbmcmodule/player.cpp#L109\nI believe that the new implementation does not release the GIL, and these steps could end up causing the issue:\n1. Playback is requested from python to an url of the embedded server.\n2. XBMC opens an http connection to the embedded server.\n3. On another python thread the server should handle the request, but it can't since the python GIL is still owned by (1). As a result the requests always time out.\nHope these statements are true, and are able to explain the issue I'm experiencing.\nThanks in advance.\n. Tried rebuilding XBMC, adding the suggested line on top of Player::playStream()'s body, with no results. The function's initial code now looks like this:\nvoid Player::playStream(const String& item, const xbmcgui::ListItem* plistitem, bool windowed)\n{\n    DelayedCallGuard dc;\n    CLog::Log(LOGDEBUG, \"in Player::playStream()\");\n    TRACE;\nAs you can see, I also tried adding some debug statements here and there, but they won't get printed on the log file. The file I'm supossed to change is /xbmc/interfaces/legacy/Player.cpp, right?\nSorry if I did something wrong, I'm new to this :)\n. I've moved the discussion of the issue to the XBMC forum as suggested:\nhttp://forum.xbmc.org/showthread.php?tid=142303\nSorry for the noise...\n. ",
    "sholafsson": "I had a little play, this is simply a thing of beauty.\nIs it possible that type filter and folder have different sorting options available?\n. ",
    "justdan0227": "So being new to XBMC development, does the --disable-ffmpeg actually remove all FFmpeg from the code such that we do not have to worry about legality of this library being distributed with XBMC and allow hardware to do its job?\n. Sorry I meant this to be a development question.  With the discussion above, I'm wanting to know if the flag disables the ffmpeg dependency of if I need to add more code.\n. Thanks, sorry I'm new to GitHub  although I'm a programmer of some 30 years.  What is PR code? Again my apologies for being new here.\n. ",
    "jpsdr": "I think the result is unfortunately this : http://trac.xbmc.org/ticket/13023\n. I've removed (put in comment) the following code :\nif(o->m_overlay)\n{\n   if(changes == 0)\n     return o->m_overlay->Acquire();\n}\nin the file OverlayRenderer.cpp, and it solved the issue.\nIt seems that unfortunately the value of \"changes\" is not accurate enough... or things should be done differently.\n. Doing this ? \n {\n    m_libass = libass;\n    remove = true;\n    libass->Acquire();\n  }\nI'll try this evening, and report result.\n. ...  \"remove\" is underlined when i add it => unknow variable... So, i don't even try to compile. Are  you sure it is the correct name or correct place ?\n. Hello.\nSomething always bothering me since this commit, without realy being able to truly point it, until it \"pops\" to me playing one of the test file i regularly use for regression check. Basicaly, i had often the feeling that some subtitles disapeared \"too soon\". With that file, it has suddenly been obvious. You can get the file here : http://jpsdr.free.fr/XBMC/Test-4.rar\nI've checked the file with mpc-hc, and subtitles are displayed properly, but not with xbmc. You can quickly check, at the begining, when \"The Vajra are not our true ennemy.\" disapeared, karaoke at top left also disapeard, when it shouldn't. Also, when next karaoke begin, you can see during a very bref time (at leat on a TV at 24fps), something which is like the previous karaoke.\n. I've made several tests.\nI've first commented the following code :\nif(o->m_overlay)\n{\nif(changes == 0)\nreturn o->m_overlay->Acquire();\n}\nin the file OverlayRenderer.cpp\nbut, it doesn't solve the issue, display of subtitles was still broken.\nThen, i've also commented the following : \"replace = true\" in DVDOverlaySSA.h, and it solved the issue.\n. I've opened a ticket : http://trac.xbmc.org/ticket/13302\n. It's not from my point of view a \"working\" patch. It's just information for elupus, because what i've done is almost a total removing of all the work of this commit. A true real fix is above my knowledge, again, it's just the result of my experiments for when elupus will take a look at it.\n. Question : In all of this, how are the size screen adjustment settings used ???\n(For exemple, in my case where i've adjusted screen size to compensate overscan of TV).\nI've not been able to figure out within all the explanations...\n. @adam-aph \nThe fact is that information of interlaced CAN be taken from the display !\nHere result from my log file :\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 50.00 - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 60.00 - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 59.94 - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 25.00i - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 30.00i - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 29.97i - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 24.00 - Full Screen\n12:58:07 T:2592  NOTICE: Additional mode: 1920x1080 @ 23.98 - Full Screen\n. Sorry, i haven't mentionned it, but I have AVR... My PC is connected by HDMI to an AVR (Pioneer VSX-921K).\nHaving things like \"30.00i\" => Interlaced is possible to detect.... That what i thought, but i may be mistaken.\nConsidering your log, with things like 75Hz, i thought it was from a PC monitor, so maybe with no interlace mode, i just wanted to show you that there is information like \"30.00i\", and maybe, you may never had seen this kind of information.\nI just wanted to give you a little piece of information, just in case you may not have it...\nI wanted to try your patch on one of my custom build, but unfortunately noticed one thing in my XBMC log of supported resolutions of my device : No 23.976 (neither 24.00) for 720p...!!! As 99.99% of all i'm watching is either 1080p or 720p 23.976fps, and i'm watching with \"Adjust display to match frame rate\" activated, and \"Windows full screen instead  of true full screen\" not activated.... i'm afraid it will not match my expectations in my case... :(\nSo, considering my partial log :\n.....\n13:27:41 T:976  NOTICE: Additional mode: 1176x664 @ 59.94 - Full Screen\n13:27:41 T:976  NOTICE: Previous line repeats 2 times.\n13:27:41 T:976  NOTICE: Additional mode: 1280x720 @ 50.00 - Full Screen\n13:27:41 T:976  NOTICE: Additional mode: 1280x720 @ 60.00 - Full Screen\n13:27:41 T:976  NOTICE: Additional mode: 1280x720 @ 59.94 - Full Screen\n13:27:41 T:976  NOTICE: Additional mode: 1280x768 @ 60.00 - Full Screen\n13:27:41 T:976  NOTICE: Previous line repeats 2 times.\n13:27:41 T:976  NOTICE: Additional mode: 1280x800 @ 60.00 - Full Screen\n....\n13:27:41 T:976  NOTICE: Additional mode: 1360x768 @ 29.97i - Full Screen\n13:27:41 T:976  NOTICE: Previous line repeats 2 times.\n13:27:41 T:976  NOTICE: Additional mode: 1360x768 @ 24.00 - Full Screen\n13:27:41 T:976  NOTICE: Previous line repeats 2 times.\n13:27:41 T:976  NOTICE: Additional mode: 1360x768 @ 23.98 - Full Screen\n13:27:41 T:976  NOTICE: Previous line repeats 2 times.\n13:27:41 T:976  NOTICE: Additional mode: 1366x768 @ 50.00 - Full Screen\n......\nHow a 720p (so 1280x720) 23.976fps file will be played ?\n. Apparently i'm not clear enough, because indeed you don't follow...\nOf course i know this patch doesn't alter my avaible screen modes.\nMy prefered fps is the fps of the source file (\"Adjust display to match frame rate\" activated). Value which can btw change on the fly if xbmc detect a vfr file, or realise the fps the file was started with was incorrect (see my PR #1387).\nI was hoping that 720p would be directly out to 720p, and my AVR will do the upscale to 1080p.\nUnfortunately, on my gig, 720p is supported but not at 23.976fps, and the closet higher resolution avaible which support 23.976fps is 1360x768... So, my question was : My 720p 23.976fps file, with your patch, and considering the possibility my AVR has (with the partial log i've provided), how will it be out by xbmc ? \n. I thought it may has choosen 1360x768...\nEDIT : No, maybe 1366x768@23.98... which is not in my partial log.\nAbout fps, i think it should be improved, by prioritizing multiple of original fps. If source is at 25fps, 50fps should be prioritized before 30fps for exemple, and allowing 50fps if source is 25fps even if fps overriding is disabled, because it will not cause the display issue users want to avoid if fps display is an integer multiple of fps source file. Wich mean, if fps overriding is off, for 29.97 allowing 59.94, but not 30. I'll try to see if i figure out something, not maybe immediately, but it's something i'll try to see. Your patch is very interesting.\nEDIT : 23.976 =24000/1001 29.97=30000/1001 => 1e-3 relative value, so i think of something like :\nnfRD = g_settings.m_ResInfo[i].fRefreshRate/fOrgRefreshRate;\nif (abs(nfRD-floor(nfRD+0.5))<1e-5) fRD=0.0;\n. I think it should be a little more \"intelligent\". For an original 25fps, if you have 50, 75 and 100 avaible, i think, the best is to chose the lowest, so 50. Actualy, it will chose the last in the order checked...\nI'll try to figure out something...\n. I've got  this :\ndouble nfRD,fRD, fD, fODist = 100000000.0;\nint iWD, iHD, piW = g_settings.m_ResInfo[m_resolution].iWidth, piH = g_settings.m_ResInfo[m_resolution].iHeight;\nint pnfRD=1;\n\nfRD = g_settings.m_ResInfo[i].fRefreshRate - fOrgRefreshRate;  // refreshrate delta\n  nfRD = g_settings.m_ResInfo[i].fRefreshRate/fOrgRefreshRate;\n  if (abs(nfRD-floor(nfRD+0.5))<1e-6) fRD=0.0;\n\nif( fRD >= 0.0 && iWD >= 0 && iHD >= 0 && fD <= fODist &&\n     g_settings.m_ResInfo[i].iScreen == iOrgScreen ) \n  {\n    if ((piW==g_settings.m_ResInfo[i].iWidth) && (piH==g_settings.m_ResInfo[i].iHeight) && (fRD==0.0))\n    {\n        if (pnfRD>floor(nfRD+0.5))              // Allow change only if fps < previous\n        {\n            m_resolution = (RESOLUTION)i;         // if we are here, then this resolution is closer to \n            fODist = fD;                          // the source parameters than previous one\n            pnfRD=floor(nfRD+0.5);\n        }\n    }\n    else\n    {\n        m_resolution = (RESOLUTION)i;         // if we are here, then this resolution is closer to \n        fODist = fD;                          // the source parameters than previous one\n        pnfRD=floor(nfRD+0.5);\n        piW=g_settings.m_ResInfo[i].iWidth;\n        piH==g_settings.m_ResInfo[i].iHeight;\n    }\n  }\n. Make sense.\nNevertheless, my point of view is the following, but you can, of course, have another.\nThe true thing to understand is \"What is the true meaning of preserving fps ?\".\nSomeone who want that, the real purpose is a \"smooth\" play, without stuttering. Wich means, he's not absolutely not bothered by a 25fps played at 50Hz, but he will if played at 30Hz, because video will stutter.\nOn the other hand, if he activate native scalling, he also want it to be effective.\nIf he plays a 720p 30fps file, and on his system, fps avaible for 720p are only 50 or 60, even if he's not allowing fps overriding, 720p@60 should be selected. This is why i think, fps of multiply should be allowed in all the cases.\nI just want my point of view to be clear for you and you've understood what i want to say with my poor english. After, you may not agree and don't want to make it that way, not hard feelings, it's your work. I just want to be sure that even if you don't want to make it this way, you've clearly understood \"what you don't want\".\n. ... You said you agree... but i still don't see how you can have 720x480@60 selected if you have deactivated fps override...\n. I think there is a mistake in your fD, no ?\n1 should be 720-680+576-256=360\n2 & 3 should be 720-680+480-256=264\n\"if you deactivate fps override then the code will search for setup with exact fps as source (30 in this example) and probably will find nothing, so the original xbmc setup will remain.\nI think this is what is expected in that case?\"\nThis is what i've try to explain, and said we may had different point of view : For me, the real purpose of deactivating fps is not to absolutely keep the same fps, but to absolutely keep the same visual result in play. Playing at 59.94fps a 29.97fps produce the exact same visual result, and you'll absolutely not see the difference (each frame will be send twice to the screen) and should be allowed in all cases, but playing it at 30fps will create stuttering in the video, and is not to be allowed if fps override is deactivated. So, this is why, in my own custom build, i'll make it work this way.\nNow, theorical situation...\nFile, almost the same 680x256@29.97\nPossible resolutions :\ncase a)\n720x480@30\n720x480@59.94\n1280x720@29.97\ncase b)\n720x480@30\n1280x720@59.94\n1920x1080@29.97\ncase a), best choice should be 720x480@59.94.\nComputation results are\n264+0.03_100=267\n264+29.97_10=563.7\n824+0*10=824\nThe worst case is choosen... The code i've proposed chose the best if i've made no mistake.\ncase b, best choice should be... well, here it may depend from point of view... Personnaly, i think 1280x720@59.94.\nComputation results are\n264+0.03_100=267\n824+29.97_10=1123.7\n2744+0*10=2744\nThe best case is not choosen here too... The code i've proposed also chose the best if i've made no mistake.\n. Of course there are AVR which support 59.94 and 29.97... Didn't you see my partial xbmc log a few post ago ????\nThis one https://github.com/xbmc/xbmc/pull/1096#issuecomment-9955500\nI'll implement my own custom version of you patch this WE, and will make some try.\n. http://forum.xbmc.org/showthread.php?tid=133720&pid=1161038#pid1161038\n. Warning : I had a strange issue when tested it. Video played fine on my standard PC with a VGA PC screen, but was totaly broken on my PC to view  video, linked by HDMI to my audio receveir, and TV screen afterward. Video was ultra zommed, i think roughly only the upper left quarter was displayed. I'll have to make more test (but compliling is long), to check if it this patch, or if actual git is broken.\n. It is, that's for sure, as all HDMI enter in receiver, and after output to TV => Receiver off => No screen...\nReceiver if powered on even before i power on the PC.\n. I have to compile two version, one updated to last git i'll do very shortly, and the same with the patch, but compile take around half an hour for me, so, expect me to be back with result no before at least an hour... More likely in two hours.\nAs i said, it'll take time for me to check.\n. It's not the patch, something broke video display in git update between the 28/07 and yesterday.\n. @cptspiff :\n1) I thought it was clear enough... Maybe people never encounter files with Variable Frame Rate ? They are not common, it's true.\n2) I truly don't understand this part... I've no idea what to do. Montellese in my post here : http://forum.xbmc.org/showthread.php?tid=139666 has been kind enough to provide me informations, but after hours of struggle i've been barely able with almost no HP left to achieve at this point... I'll gladly do/redo things, but i'm at a point i need a precise step by step of what to to (under Windows with Turtoise Git). I wanted to create a branch on my fork xbmc master, but was not able to figure out how. I've been able to create branch on my PC local, but not github. I've not been able to reverse what i've done on my master branch, and when i've made a \"pull request\", i've got 7787238 and d13617a, when i wanted only the last one.\nBut, what i want is the other dev test/valid/comment/take a look first at what i'm suggesting. According from what i've understood of what Montellese said, i thought it was made by doing a pull request. If not, tell me what to do.\n. @ace20022 : I've no idea what TeamViewer is... I'll try for now to understand what DDDamian said.\n@DDDamian : Thanks for the advices. As i'm not very fluant in english, i hope not being rude without intend to.\n1) I've misunderstood... I thought spiff said that the explanation on my ticket were not clear enough. You're right, i've done it.\n2) I'm sinking... I'm absolutely not used to \"repo\", \"fetch\", \"rebase\"... and all of this... :(\nI'll continue to try and see if i'm able to understand.\nBasicaly, if i'm able to get my commit on top, i should do a pull request again, with a better explanation ?\n. Euh... Are things good now ?\nOf course, for the \"test/valid/comment/take a look first\" step.\n. @FernetMenta : Several reasons.\n- Switching frequency display mode on TV often take \"time\", sometimes 2s or 3s of black screen. So frequently switching between 29.97 and 23.976 for exemple is not an option.\n- More the time passes, more framerate is computed on longer time, will always finish to get a stable value, when value is indeed not stable, because it's VFR. If it finish on a good one, why not, but it's not the case.\n- When display is too low, 23.976 instead of 29.97, it produces awfull result. Invert is good. So, in case of VFR, framerate should stay locked on highest value.\nSample is unfortunately not an option. I've no idea how to edit/cut a VFR mkv file without destroying anything on it. Unfortunately, mkv are not avi and can't be cut, it's most of the time \"all or nothing\".\nI absolutely don't understand the malware part ???? Just download the file from the torrent link provided in the last post of the ticket.\nNow, maybe there is a better way to handle VFR file, but going down on fps display is not the one, that, i can assure you for having experimented it.\n. Just one thing : If you've take a look, my fix allow any switching for the 1rst. So, for the first switching, it can go down, in case of wrong start for a \"no vfr\" file (for exemple, start wrongly at 25fps a file wich was indeed 23.976). But, further switch can only be up. Now, i agree my fix is not a true fix, but, with my little knowledge and taking a look at the log file, it's the only thing i've think of, and i'm able to do.\nTime stamps messy... well... it's probably the case of all vfr files. In fact, in a vfr situation, if time stamps were not messy i would be surprised.\nAnd you're right on one thing, it can take a while to switch back to 29.97, and it can sometime not even switch back, because more you wait, longer is the average periode to calculate frame rate. So the trick is when you start the file, to immediately go on a sequence wich will go to 29.97. But, if you allow down, it'll not stay.\nFirst question is indeed : Is it possible, at the opening of the file, to detect if file is vfr mode ? This is the begining for a true fix. As Mediainfo can detect it, it measn it's possible. Is it implemented/possible in xbmc ? That's another story.\nI've been surprise to see that they may be not so uncommun indeed, discovering vfr mode on a file i didn't expect it would be. Not seen yet, and will not be seen with xbmc, as it's not an anime.\n. A little github question. On my PC (local), i've finaly be able to create 2 branches, on with this patch, and another for others things for me (custom build). But, as i was noober than now with github, i've messed my master branch with this modification. How can i remove this from my master branch, to have my master branch to be clean from my specific things, and so having only the master commits of xbmc on it ?\nIn turtoise git log, on rigth click menu, the closest thing i see is only \"Revert change by this commit\", but nothing like totaly removing it. If someone can tell me how to clean my master branch ? Maybe \"Revert change by this commit\" is only the 1rst step to it ?\nI assume, after done it, i'll have to commit my master branch to my other branches ?\n. Thanks.\nAbout original issue, taking a look at the code we can see that framerate is stored only if it matches the previous ones. Wich means, the 1rst value to be stored is critical, and in case of vfr, it can take time to achieve the \"//if we've measured m_iFrameRateLength seconds of framerates\" condition, as it can takes longer time to have \"m_iFrameRateCount\" incremented enough.\nA general idea for a better fix, but unfortunately would still be something on the fly...\nMake modifications on DVDTSCorrection files, globaly the CPullupCorrection class, to try to raise some warning flags in case of detection of above level threshold differences between \"m_pattern[i]\" values, store min (and max ?) of these value. Wich means add functions to get/reset these values and several things. Most of the work could be done in the \"CalcFrameDuration\" function.\nIf you think it could lead to something better, i can begin to think to the code.\n. Ok. I'm closing this one, and opened later another when i'll be certain to not screw up things with git and others things !!!\n. Ok. Resume properly the pull request #1369. I shouldn't mess things this time...\n. @FernetMenta \nBeleive me : If you have a device wich take several seconds to sync to new display mode, as it's often, not all, but often, the case on TV, wich results in several seconds of black screen, you don't want to have refresh rate switched often while you're watching !!\nApparently you are not concerned by this, and good for you. Just out of curiosity : What do you use to watch ?\nAnd when you look at the code, you'll see that after a while (when \"m_iFrameRateLength\" reach 128, so after 8 streps), frame rate is apparently considered stable, and not adjusted again. \n. After a little testing, i've noticed that VFR information provided by mediainfo is not reliable : Files are sometimes tagged as VFR when in practice they are not. So, detection of VFR situation can only be done \"on the fly\", and any information tagged in stream can't be considered reliable.\nActualy, i've noticed two kind of \"true\" VFR files :\n- Those like the one i've provided, which have frame rate changing all the time, even several times during one second.\n- Those which have things like : Opening at 29.97fps, episode at 23.976fps, ending at 29.97fps. You can also consider it can exist the oposite (23.976/29.97/23.976 -> Claymore will fit perfectly on this). Of course, when ending occurs, the algorithm have stopped since a long time (m_iFrameRateLength have reached 128 since a long time).\n. Unless you do some kind of a full analysis of the file at the opening, you can't distinguish both cases on the fly. Because the 1rst case may allways have a situation you can mix with second. I've begin to make a lot of sought about it, there is no ideal solution. The best, or \"least worst\" i've think about is to lock on the highest frame rate detected, and detected quick enough => do not increase m_iFrameRateLength, and so don't stop the algorithm. Add where frame rate is calculed from time stamp, so detection of max frame rate.\nWhen mature, i think i'll propose an update.\n. I don't know for sure, but it seems a very interesting idea. It can lead to a detection of what could be considered \"Case 1\".\nAs my knowledge for now of xbmc is near noob, do you mean having in the log several things like \"13:17:44 T:2796   DEBUG: CPullupCorrection: pattern lost on diff 41000.000000\", and so, try to figure out something inside \"CPullupCorrection::Add\" using this information ?\nEdit : Or the number of  time it detects a new pattern : We can see things like \"12:49:39 T:6708   DEBUG: CPullupCorrection: detected pattern of length 1: 41708.33, frameduration: 41708.333333\".\nWell, there is appartently interesting things to check/track in \"DVDTSCorrection\".\nThat's what i've intended to do in my next step. Slower, having less time now that my vacations will be over.\nSo, for now, i think we could label VFR files as :\n- Case 1 : Those like the one i've provided, which have frame rate changing all the time, even several times during one second.\n- Case 2 : Those which have things like : Opening at 29.97fps, episode at 23.976fps, ending at 29.97fps. You can also consider it can exist the oposite (23.976/29.97/23.976 -> Claymore will fit perfectly on this). Of course, when ending occurs, the algorithm have stopped since a long time (m_iFrameRateLength have reached 128 since a long time).\nOne idea would be to have an efficient and quick way to detect \"Case 1\", and in that case, allow only to go up on frame rate changes.\n. It seems i don't screwed things...\nHere a new proposal.\nSo, i've made some tests, logging  the full play of several files, and result is :\nFor VFR files, there is around 100 loss/detection of pattern for a full episode.\nFor no VFR files, there is 1 detection and 0 loss.\nThe purpose is to detect as soon as possible VFR case, not tacking minutes. I've noticed that it took around 30s to have 3 loses of pattern, so, i've decided to put the threshold to 3. This make around 30s to achieve detection, it's not too quick, and not too long. Higher value will take too long.\nI've also changed  the fps validation in from 100 to 120. Case is very very rare, but i've encounter files with 120fps. So, 120 is not an invalid value.\n. I've made a few tests. No regression noticed for now, and detection of VFR situation is quick enough.\n. Long... long... the busy...\n. For me, it was played fine(1) without your change (but i'm using a custom build with MT decoding enabled, wich may help more), but i think this case is somehow... don't know how to translate \"a schoolar case\". But the fact that MPC-HC+directvobsub play it perfectly fine, make me think, that, maybe, there is also a way for xbmc to play it fine also...\n(1) : I've not hit \"o\" to see if there was drop frames, just watching is display seemed corret. Considering the static case of animation, i wouldn't have noticed a few dropped frames. But now, xbmc praticaly stop, audio stop, etc...\nNevertheless, i think this case is somehow maybe not unique, but very rare, and is absolutely not a reason to remove your fix, wich fixes a loooooot more that it may eventualy rarely broke...\nBut, again, MPC-HC and VLC 2.0.3 (i've just made the test), play it perfectly fine also on my other PC (i7@860) where xbmc failled totaly, means that it should probably be possible for xbmc to play it also. Finding the way may probably globaly find a way  to reduce other possible cases of high cpu usage.\n. Cases may not be so rare finaly, even if they are still not frequent.\nI've encounter another file (get here : http://www.nyaa.eu/?page=torrentinfo&tid=355408 or newsgroup), issue is not as bad as previous file, but result is still a little mess. It's at the end of the ending (around 23:30/23:40).\nDon't worry, i don't intend to post each file i may encounter. This is just to give another sample, and just warn that maybe problem may happend more often than i thought.\n. I don't know what broke it, but actualy the issue i've describe in the ticket 13302 http://trac.xbmc.org/ticket/13302 is back.\n. > works here (tested on osx and atv2 - atv2 won't play this \n\nstutterfree but subs are there) - maybe some hi10 media or so)\n\nStrange. With the  build i've made the 6/10 the issue i've described  in my ticket wasn't here, your patch fixed it, but with the build i've made ysterday, the 13/10, the issue is back. I've just at the moment downloaded  XBMCSetup-20121013-e331bf6-master.exe and test it, and issue is back indeed. Have you exactly tested what i've  specificaly described in my ticket post with the file (small, 15MB) i've provided ? The \"fix\" i've described in  https://github.com/xbmc/xbmc/pull/942#issuecomment-8223861 is still working and solve the issue, but it's not of course a good final solution...\n. > you are only testing on windows?\nYes.\n. I've tested a few files, on them seeking was working fine.\n. ",
    "night199uk": "I also get:\nAirTunesServer.cpp:670 error: \u2018struct AudioOutput\u2019 has no member named \u2018ao_set_metadata\u2019\nAirTunesServer.cpp:671 error: \u2018struct AudioOutput\u2019 has no member named \u2018ao_set_metadata_coverart\u2019\nBut I'm on OSX - is libshairport used? I rebuild from scratch made clean made all depends and did a make install in libshairport also, no dice.\n. Okay, split this up into 3 commits. Also added the database update code per cptspiff. Thanks for all the feedback, its been a git learning experience.\n. Updated against all of the previous feedback.\n. Not taken as rude at all.\nIt's not laziness, I'm in the process of refactoring these and trying to make sure at each stage we can still compile and test so the changes can be taken either as a stream or as one chunk. spiff and jmarshall had requested smaller commits than I had put originally so I'm trying to keep these commits pretty small now. I guess I'm trying to find the right balance. I didn't want to refactor a lot of code in one go.\nThanks for the heads up on rebasing my branch.\n. I think this set of commits is complete and IMHO ready to go. Would appreciate feedback :-)\n. I think that's what this does, no? I've tried to touch nothing external except where absolutely necessary? You around on IRC?\n. I just rebased against upstream/master and fixed everything that was broken and updated the table references in the new SmartPlayList changes (strArtist -> strArtists, etc). I think I caught everything and it seems to work so far.\nThanks for the heads up.\n. Yes please. :-) I'm on IRV most nights after 6pm HK time.\nSent from my iPhone\nOn 20 Jun 2012, at 06:54, jmarshallnz\nreply@reply.github.com\nwrote:\n\n@night199uk Do you need a hand rebasing this down + separating out stuff that is somewhat separate?  As you're relatively new to git, I'm happy to give pointers.  Will try and catch you on IRC.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1040#issuecomment-6440068\n. Can you get the ArtistID back somehow instead of using GetArtistsByName? (dup artists)\n\n@Montellese for JSON-RPC can we replicate the new MusicDatabase.GetArtistsBySong and MusicDatabase.GetArtistsByAlbum calls through to JSON-RPC? So that the JSON-RPC client flow is like this:\nAudioLibrary.GetSongDetails\nAudioLibrary.GetArtistsBySong (or Album)...\nAudioLibrary.GetArtistDetails\nDup artists & multiple artists per song/album is the motivation... Later we'll be able to parse stuff like this:\nMark Knopfler & Chet Atkins feat. Blah\n(two primary artists and a featuring artist)\n. I just took a look through the JSON RPC code. There seem to be a few\nways to get the full list of artists out this, none too difficult.\nMy suggestion is that I can submit a PR tonight to get the full list\nof ArtistIDs into the JSON API unless @Montellese is already working\non it?\nSent from my iPhone\nOn 4 Jul 2012, at 08:29, jmarshallnz\nreply@reply.github.com\nwrote:\n\nUpdated with fixes based on comments - thanks very much.\n@night199uk, @Montellese The one thing I'd like resolved before this going in is how to handle artistId for JSON-RPC.  If noone objects, I'll add it back into the song and album views for now and we can redo it later if required.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6750159\n. Cool.\n\nRegards updating the existing vector, I wouldn't recommend that. The\nint artist IDs and string vector will go out of sync at some point\nsoon (when I submit the new scanner and TagLib mods).\nThe vector string is really 'just' the artist display string. Actual\ncontributing artists should always be referenced by ID.\nE.g. here are the 3 cases we will tackle:\nIn id3v1 with no MusicBrainz, the vector will be:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nand the vector int with three artists will match.\nThe display string is built on demand with musicItemSeperator but is\nthe same as the tag encoded in the files:\nMark Knopfler / Chet Atkins / Blah (using music item separator)\nIn ID3v2.3 with no MB:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nTag TPE1:\nMark Knopfler\nChet Atkins\nBlah\n(3 separate strings NULL seperated). the vector will match.\nDisplay string is merged using musicItemSeperator as above but\ndifferent tag parsing.\nId3v2.4 with MBIDs pseudo:\nVector[0] = 'Mark Knopfler & Chet Atkins feat. Blah' (TPE1)\nVector  = { idMark, idChet, idBlah }; (built from MBIDs, NULL\nseperated in tag)\nI think the idea is that artist display string != artists (TPE1 !=\nartistID). This allows us to deal with all of the different string\ncombinations and artist formats out there with resorting to much\nstring parsing, or forcing users into one artist format or another...\nAwful pseudo code and quick write up, but hope this makes sense.\nSent from my iPhone\nOn 4 Jul 2012, at 12:16, jmarshallnz\nreply@reply.github.com\nwrote:\n\n@night199uk Go for it - I believe @Montellese is busy with other things.  I suspect you'll need to add a vector to CSong/CMusicInfoTag and go from there?  It would be nice to supplement the existing vector to vector instead if possible as I doubt there's much point having only the ids available - this would match with the cast list for movies which has both id and name (as well as other information) available.\nIn the meantime, I've done up a quick fix commit to get the idArtist back in for the meantime in case we find it's more difficult than initially thought - it's currently broken, after all - available in my restore_idArtist branch.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752282\n. Yup, completely agree.\n\nSo I'm leaving the existing artist as the display-string (maybe we\nrefactor the name later to make it more obvious) as so much already\ndepends on that behaviour. Will build out new for the second of these,\nmake sure we read it in GetSongById (this is not used in a performance\ncontext i think) and pass it through to the JSON API, then make then\nJSON API write this out.\n@Montellese: would that be okay for JSON API users?\nSent from my iPhone\nOn 4 Jul 2012, at 13:09, jmarshallnz\nreply@reply.github.com\nwrote:\n\nYes, I completely agree that the displayed artist makes no sense to be\nstored in a vector of strings.  The vector of strings is only useful in the\ncase where you have separate strings from the tag and can use that to both\nbuild up the display artist and the individual artists.  Similarly, you'd\nhave a vector of MBIDs.  Lastly, you want a vector of database ids for\nJSON-RPC and other linkages.\ne.g. In your 3rd case you'd have display_artist = \"Mark Knopfler & Chet\nAtkins feat. Blah\" and vector = {{\"\", MBID_mark, -1},\n{\"\", MBID_chet, -1}, {\"\", MBID_blah, -1}} when read from the tag (you could\nfill the artist with the display_artist if you wished).  Once the MBIDs are\nresolved this would then allow the artist name in the vector to be filled,\nand once those artists are in the db you also have the ids available.\nThe point is that in CMusicInfoTag you need both a vector of strings, a\nvector of mbids and a vector of dbids for reading from tags or for reading\nfrom the db.  There's no reason why this couldn't instead be a vector of\ntriplets, given that the data apply to the same items, right?\nOn Wed, Jul 4, 2012 at 4:43 PM, night199uk <\nreply@reply.github.com\n\nwrote:\nCool.\nRegards updating the existing vector, I wouldn't recommend that. The\nint artist IDs and string vector will go out of sync at some point\nsoon (when I submit the new scanner and TagLib mods).\nThe vector string is really 'just' the artist display string. Actual\ncontributing artists should always be referenced by ID.\nE.g. here are the 3 cases we will tackle:\nIn id3v1 with no MusicBrainz, the vector will be:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nand the vector int with three artists will match.\nThe display string is built on demand with musicItemSeperator but is\nthe same as the tag encoded in the files:\nMark Knopfler / Chet Atkins / Blah (using music item separator)\nIn ID3v2.3 with no MB:\n{'Mark Knopfler', 'Chet Atkins', 'Blah'}\nTag TPE1:\nMark Knopfler\nChet Atkins\nBlah\n(3 separate strings NULL seperated). the vector will match.\nDisplay string is merged using musicItemSeperator as above but\ndifferent tag parsing.\nId3v2.4 with MBIDs pseudo:\nVector[0] = 'Mark Knopfler & Chet Atkins feat. Blah' (TPE1)\nVector  = { idMark, idChet, idBlah }; (built from MBIDs, NULL\nseperated in tag)\nI think the idea is that artist display string != artists (TPE1 !=\nartistID). This allows us to deal with all of the different string\ncombinations and artist formats out there with resorting to much\nstring parsing, or forcing users into one artist format or another...\nAwful pseudo code and quick write up, but hope this makes sense.\nSent from my iPhone\nOn 4 Jul 2012, at 12:16, jmarshallnz\nreply@reply.github.com\nwrote:\n\n@night199uk Go for it - I believe @Montellese is busy with other things.\nI suspect you'll need to add a vector to CSong/CMusicInfoTag and go\nfrom there?  It would be nice to supplement the existing vector to\nvector instead if possible as I doubt there's much point having\nonly the ids available - this would match with the cast list for movies\nwhich has both id and name (as well as other information) available.\nIn the meantime, I've done up a quick fix commit to get the idArtist\nback in for the meantime in case we find it's more difficult than initially\nthought - it's currently broken, after all - available in my\nrestore_idArtist branch.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752282\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752475\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6752672\n. ipitcher: do you see the same in yesterdays master? I want to check if that is from the musicdb changes or from these changes.\n. Do you have an xbmc.log from the DB upgrade? Is this MySQL or SQLite?\n\nSent from my iPhone\nOn 6 Jul 2012, at 01:28, ipitcher\nreply@reply.github.com\nwrote:\n\nYes, this was from yesterday's master.  Sorry, I should have thought about the other musicdb changes before commenting.\nI recall strArtists populating correctly without Album Artist tags since that music db change, but I don't remember if it was on a db upgrade or a fresh scrape or not.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6785109\n. If it's MySQL can you do this:\nTurn on debug logging, and add some files. Scan them in. If they don't get strArtists, can you send me the debug log (xbmc.log)? or post a paste bin link.\n\nRegards,\nChris.\nOn 6 Jul 2012, at 03:04, ipitcher wrote:\n\nSorry, the log is long gone as is the old DB.  This is MySQL, and though I'm not certain, I think the same behavior was seen on SQLite.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1109#issuecomment-6787587\n. I chatted to Montellese last night before going this way. I think we agreed that GetArtistsNav is not ideal. Do you have any suggestions?  The alternative was to use GetArtistsByWhere and encode a bunch of SQL into the JSON-RPC code (ergh).\n\nI think it's not perfect but it should keep folks happy and I think it keeps us moving towards multiple artists (rather than falling back to what feels like a false 'primary artist'). I'm currently working on TagLib support for the ID3/MP4 etc but I will come back to the MusicDatabase once that's done to finish off the MusicBrainz support, so I think I can do something better then, unless someone gets in first. I think Montellese mentioned he might also have some improvements here that he had gone into the VideoDB.\nOn 5 Jul 2012, at 06:38, jmarshallnz wrote:\n\nAs this is setup, you can only have one of idAlbum, idSong or idGenre set in GetArtistsNav.  There's nothing restricting the JSON-RPC user specifying both a songid and a genreid in GetArtists, and if they do so it might respond in a way they don't necessarily expect.\nI'm not sure it makes sense necessarily to have this filtering take place in GetArtistsNav - reason is that that's designed to be hierarchical rather than multiply-filtered.\n@Montellese any comments?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1117#issuecomment-6768875\n. okay, this is tidied up and i think (basically) complete.\n\nThere are a couple of places where this is not perfect - ideally I'll raise patches on tag lib to integrate xingHeader reading to tidy up some MP3Codec ugliness that moved from ID3Tag.\nAlso some of the old tag loader architecture is still around for a couple of files that don't have TagLib support. (asap, shn, nsf, ym). I don't know what those files are and I don't have any, but I'm open to see what could be done about them.\nTwo more can go to TagLib in short order - MIDI and Wav as those are supported.  I may commit them in the end of this patch as we have a while until the next window opens.\nAlso ID3Tag lingers as I haven't built a full tag writer yet and we need it for CD ripping. Tag Writing I will leave until another PR though, this one is big enough as it is I think. This needs lots of testing. I've thrown everything I have and that I can readily get my hands on at it, but I'm sure users have worse files...\nthanks in advance for feedback.\n. @wsoltys \nI've pulled in all your Win32 fixes. Squashed a bunch of them into the most appropriate commits (e.g. Win32 truncate implementation & SMBWinFileHD). The VS project updates I've left at the end of the stream, as they roll up a few changes into one and would have to be executed at the end of the stream. That okay? Thanks.\n@cptspiff \nMade the changes freeing the VFSStream, lemme know if you think we're good.\n. Yeah, that would be messy. I had gone that way at first, and some of\nthe readers - e.g. The MP4 readers - need significant work to uplift\nthem for MusicBrainz. I have some of that work, but more would need to\nbe done to do the full musicbrainz change.\nI think the 1.8 release is due 'RSN', but I'm loathe to wait on\nsomeone else's schedule. I need to reach out to the taglib folks to\nunderstand their timeline.\nMy OSX depends built a repo version of Nfs at some point too - is\nthere prior art here?\nTagLib is very constrained, without a lot of external dependancies\n(good) so i don't see this being a complex spider graph of\ndependencies for users to upgrade like e.g. Gtk or smth. And we're\nreally only talking about linux users that build their own here right?\nDon't Windows and OSX both get a packaged copy?\nSent from my iPhone\nOn 27 Jul 2012, at 10:34, jmarshallnz\nreply@reply.github.com\nwrote:\n\nI guess the only problem with waiting for 1.8 is that it might take a while :)\nNot sure if the musicbrainz stuff can be done independently of this (I suspect it can, but it might be messy to alter all the old implementations).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1122#issuecomment-7296192\n. How do we do that? I'm going to ping the TagLib guys, but I'm out in\nthe USA til the 17th now on business, so I'm holding off on this until\nI get back.\n\nSent from my iPhone\nOn 5 Aug 2012, at 03:19, Arne Morten Kvarving\nreply@reply.github.com\nwrote:\n\nthen we need to ship and build the sucker for linux as well.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1122#issuecomment-7508254\n. If you wanted to commit this now though and finish it off for this\nmonth no problem - it should be ready to go if someone does the Linux\nparts, I just won't have good access until I get back... :-)\n\nSent from my iPhone\nOn 5 Aug 2012, at 03:19, Arne Morten Kvarving\nreply@reply.github.com\nwrote:\n\nthen we need to ship and build the sucker for linux as well.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/pull/1122#issuecomment-7508254\n. @wsoltys @Fneufneu @cptspiff @amejia1 @jmarshallnz \nI just updating this and rebased onto master ready to go for this commit window. Would folks be able to help with the tag lib1.8beta builds for FreeBSD, Windows, Linux? Mac should already be done here.\n. @Memphiz I think @wsoltys has tested this on Windows. I've tested on osx32, not done a osx64 build yet. I have no capability to test on iOS and atv2 unfortunately, could do with some help on that one?\n. Okay - I can look at the LibId3Tag.h stuff. How much of this needs to be done pre-merge? I'm really keen to get this and the MusicBrainz support in in this merge window if at all possible. I've been running this on my PVR and the MusicBrainz indexing of artists is really nice IMHO. I'm loathe to miss another merge window and roll for another month... I'm sure you're all busy at DevCon :-) But if you have 10 minutes would be much appreciated if the the team could review this and let me know what set of changes needs to be done to get this signed off, so I can dedicate some time to getting in done before the end of this merge window? Otherwise next month it is.\n. @wsoltys @theuni @cptspiff \nI updated all the Makefiles (except Win32) to reflect 1.8 FINAL and I rebased this down into a lot fewer commits ready to merge. I also merged all of the Linux/Droid/Win32 project file changes into the flow so each commit should compile individually on all platforms.\n\nAs discussed with cptspiff last night we're ready to merge this today so please give it a quick test (especially for Win32).\n. Hey Montellese, I'm in the Philippines right now, back on Friday, but I\nhave the code on my laptop. Will try and take a look from here but no\npromises. Do you know how non-UTF8 stuff is stored in the DB? I really know\nvery little about Unicode stuff, so I'm probably going to need some\npointers here\nSent from my iPhone\nOn 30 Sep 2012, at 18:51, Sascha Montellese notifications@github.com\nwrote:\nThere seems to be a problem with data read through taglib which is not\nUTF8. The data is stored untouched in our database but xbmc always assumes\nthat all data in the database are UTF8 which results in the GUI not being\nable to display those labels properly and JSON-RPC returning mixed charset\ndata.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/xbmc/xbmc/pull/1122#issuecomment-9012581.\n. Perfect, thanks Sascha. It may be a few days before I can get to a fix for this. I am on an island right now with not much internet. I will try and see what I can do :-)\nOn 30 Sep 2012, at 21:41, Sascha Montellese wrote:\n\nIt is not, it needs to be converted to UTF8 (if it isn't already) before storing it in the database. There are methods for that in xbmc/utils/CharsetConverter.h/cpp which can be used through the g_charsetConverter global.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks Jon, I will implement these when I'm back in HK (Friday/Sat)\n\nSent from my iPhone\nOn 1 Oct 2012, at 10:05, jmarshallnz notifications@github.com wrote:\nThe StringListToVectorString() routine is correct (it passes true into\ntoCString()) but the others are wrong. Given that to8bit gives you a\nstd::string directly, that might be a better way to go.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/xbmc/xbmc/pull/1122#issuecomment-9020419.\n. @jmarshallnz can you take another swipe at reviewing this please? I fixed all of the stuff I think you posted in your previously detailed commits. i'm not happy 100% with the way this deal with embedded artwork now though, but it seems to work... appreciate your thoughts.\n. Yes. I've had a lot of real life stuff going on lately, moving house, work\nand all of that stuff, and the TagLib was a bit of a diversion (but overall\na good one, I think). Real shame, I wanted to get this for Frodo. :-(\nBut I'm pretty much clear of all that stuff now so over the coming weeks I\nplan to get this really up to scratch for the next release post Frodo :-)\nStay tuned and thanks for the support :-)\nSent from my iPhone\nOn 15 Oct 2012, at 11:01, fiveisalive notifications@github.com wrote:\nThis used to be in the October milestone, I guess it's been removed? Does\nthis mean we'll have to wait until the next major release to get this full\nMusicBrainz support in XBMC?\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/xbmc/xbmc/pull/1213#issuecomment-9432387.\n. I will start taking a look at this again soon - it stalled while we had feature freeze for Frodo and I've been incredibly tied up with real-life work outside XBMC for the last few months. Hopefully the next month or two should give me some more time to pick this up again. Its good to know there is support for the MusicBrainz stuff :-)\n. See the newer PR.\n. Yes, that is it.\nOn 27 Apr 2013, at 04:50, fiveisalive notifications@github.com wrote:\n\nI assume that the newer PR is #2626 ?\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah. I'm out of town right now so I can't look at the code but basically\nit just changes the query in GetArtistsNav to include artists on albums\nthat have the 'bCompilation' flag set or not. The changes I will make will\nall be on the front side of the scanner, I.e. changing the way artists are\ncreated in the database. SmartPlaylists are back side (I.e. querying\nartists from ye database) so shouldn't need to be any changes for that.\n\nI can take a look at this more deeply when I'm back on the 17th.\nSent from my iPhone\nOn 7 Aug 2012, at 03:11, Sascha Montellese notifications@github.com wrote:\nIt's not an advanced setting it's a GUI setting in Settings -> Music ->\nLibrary. I always keep it disabled to get a clean list of artists but if I\nunderstood @night199uk https://github.com/night199uk right he plans to\nimprove scraping/organization of all those \"Foo feat. Bar\" so it might make\nsense to just keep it on the SQL level i.e. grab the information for all\nthe artists but in Music -> Artists only show the album artists. Then maybe\nadd a new node Music -> Compilation artists where only those artists are\nshown.\nThinking about it I'll remove that rule/filter because I have neither the\nunderstanding for it nor the items/database to actually test it.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/xbmc/xbmc/pull/1249#issuecomment-7545462.\n. 2/3 - the FLAC functionality can all migrate to TagLib, but MP3::ReadDuration is still used in reading Xing VBR headers. There is a patch floating around for TagLib for reading Xing headers but it's not committed to mainline. In my PR I've moved ReadDuration to MP3Codec to demise the tag reading functions and more accurately represent its status as only a 'player' requirement.\n. Sure, if you checked it out hit the button. I just wanted to re-review this as some of it was defunct with TagLib. I'm back in town on Friday & aiming to merge the libid3tag removal PR this weekend also when I get back so I can do this one unless you're keen to get it in :-)\nRegards,\nChris.\nOn 1 Oct 2012, at 22:02, Sascha Montellese wrote:\n\n@night199uk @cptspiff I can't see the original comments/remarks but this looks good for merge now?\n\u2014\nReply to this email directly or view it on GitHub.\n. -1 from me, I want to know which plugins get installed so I know when they cause issues.\n. Wow, thanks Cory.\n\nI need to implement tag writing (for CD ripping) to MP3s using TagLib before we can get rid of libid3tag. This is complicated by the smbc_ftrunate dependency on smb-3.2+ (GPLv3), so I need to find a solution to that first. I'm aiming to get something this month so we can do this pre-Frodo but I'm snowed under at work the last few days.\nLibApeTag should be able to go now, I will double-check and see.\nRegards,\nChris.\nOn 13 Sep 2012, at 05:06, Cory Fields wrote:\n\n@night199uk Whenever you're ready, these are the core changes necessary for removal of our old in-repo libs for linux+android.\nI'm sure there are some other things you're planning to address first, but I figured I'd save you the trouble of messing with the buildsystem.\nGreat work on taglib!\nYou can merge this Pull Request by running:\ngit pull https://github.com/theuni/xbmc tagdepsremoval\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1415\nCommit Summary\nlibid3tag/libapetag linux/android removal\nFile Changes\nM Makefile.in (10)\nM bootstrap (2)\nM configure.in (24)\nD lib/libapetag/AUTHORS (1)\nD lib/libapetag/COPYING (510)\nD lib/libapetag/ChangeLog (2)\nD lib/libapetag/Makefile.am (23)\nD lib/libapetag/NEWS (0)\nD lib/libapetag/README (12)\nD lib/libapetag/apetaglib.c (1075)\nD lib/libapetag/apetaglib.h (277)\nD lib/libapetag/bootstrap (4)\nD lib/libapetag/configure.in (52)\nD lib/libapetag/file_io.c (137)\nD lib/libapetag/file_io.h (46)\nD lib/libapetag/genres.h (195)\nD lib/libapetag/id3v2_read.c (385)\nD lib/libapetag/id3v2_read.h (42)\nD lib/libapetag/info_mac.c (156)\nD lib/libapetag/info_mac.h (96)\nD lib/libapetag/info_mpc.c (202)\nD lib/libapetag/info_mpc.h (96)\nD lib/libapetag/is_tag.c (161)\nD lib/libapetag/is_tag.h (41)\nD lib/libapetag/libapetag.sln (20)\nD lib/libapetag/libapetag.vcproj (207)\nD lib/libapetag/libapetag.vcxproj (105)\nD lib/libapetag/m4/.gitignore (0)\nD lib/libid3tag/Makefile.in (33)\nD lib/libid3tag/README (4)\nD lib/libid3tag/id3.sln (95)\nD lib/libid3tag/libid3tag/AUTHORS (1)\nD lib/libid3tag/libid3tag/CHANGES (83)\nD lib/libid3tag/libid3tag/COPYING (340)\nD lib/libid3tag/libid3tag/COPYRIGHT (21)\nD lib/libid3tag/libid3tag/CREDITS (28)\nD lib/libid3tag/libid3tag/ChangeLog (1)\nD lib/libid3tag/libid3tag/Makefile.am (124)\nD lib/libid3tag/libid3tag/NEWS (1)\nD lib/libid3tag/libid3tag/README (102)\nD lib/libid3tag/libid3tag/TODO.txt (12)\nD lib/libid3tag/libid3tag/VERSION (6)\nD lib/libid3tag/libid3tag/compat.gperf (350)\nD lib/libid3tag/libid3tag/compat.h (41)\nD lib/libid3tag/libid3tag/compat2.c (556)\nD lib/libid3tag/libid3tag/configure.ac (205)\nD lib/libid3tag/libid3tag/crc.c (137)\nD lib/libid3tag/libid3tag/crc.h (29)\nD lib/libid3tag/libid3tag/debug.c (222)\nD lib/libid3tag/libid3tag/debug.h (34)\nD lib/libid3tag/libid3tag/field.c (890)\nD lib/libid3tag/libid3tag/field.h (36)\nD lib/libid3tag/libid3tag/file.c (709)\nD lib/libid3tag/libid3tag/file.h (25)\nD lib/libid3tag/libid3tag/frame.c (654)\nD lib/libid3tag/libid3tag/frame.h (36)\nD lib/libid3tag/libid3tag/frametype-9754.c (575)\nD lib/libid3tag/libid3tag/frametype.gperf (368)\nD lib/libid3tag/libid3tag/frametype.h (42)\nD lib/libid3tag/libid3tag/genre.c (155)\nD lib/libid3tag/libid3tag/genre.dat (480)\nD lib/libid3tag/libid3tag/genre.dat.in (180)\nD lib/libid3tag/libid3tag/genre.dat.sed (54)\nD lib/libid3tag/libid3tag/genre.h (27)\nD lib/libid3tag/libid3tag/global.h (53)\nD lib/libid3tag/libid3tag/id3tag.h (375)\nD lib/libid3tag/libid3tag/latin1.c (226)\nD lib/libid3tag/libid3tag/latin1.h (46)\nD lib/libid3tag/libid3tag/libid3tag.list.in (21)\nD lib/libid3tag/libid3tag/metadata.c (522)\nD lib/libid3tag/libid3tag/metadata.h (102)\nD lib/libid3tag/libid3tag/msvc++/Makefile.am (24)\nD lib/libid3tag/libid3tag/msvc++/config.h (78)\nD lib/libid3tag/libid3tag/msvc++/libid3tag.dsp (250)\nD lib/libid3tag/libid3tag/msvc++/libid3tag.vcproj (697)\nD lib/libid3tag/libid3tag/msvc++/libid3tag.vcxproj (347)\nD lib/libid3tag/libid3tag/msvc++/libid3tag.vcxproj.filters (143)\nD lib/libid3tag/libid3tag/parse.c (199)\nD lib/libid3tag/libid3tag/parse.h (34)\nD lib/libid3tag/libid3tag/render.c (200)\nD lib/libid3tag/libid3tag/render.h (40)\nD lib/libid3tag/libid3tag/tag.c (909)\nD lib/libid3tag/libid3tag/tag.h (30)\nD lib/libid3tag/libid3tag/ucs4.c (233)\nD lib/libid3tag/libid3tag/ucs4.h (43)\nD lib/libid3tag/libid3tag/utf16.c (298)\nD lib/libid3tag/libid3tag/utf16.h (53)\nD lib/libid3tag/libid3tag/utf8.c (374)\nD lib/libid3tag/libid3tag/utf8.h (44)\nD lib/libid3tag/libid3tag/util.c (147)\nD lib/libid3tag/libid3tag/util.h (35)\nD lib/libid3tag/libid3tag/version.c (45)\nD lib/libid3tag/libid3tag/version.h (25)\nD lib/libid3tag/readme.txt (10)\nD lib/libid3tag/testdriver/Resource.h (17)\nD lib/libid3tag/testdriver/stdafx.cpp (8)\nD lib/libid3tag/testdriver/stdafx.h (26)\nD lib/libid3tag/testdriver/testdriver.aps (0)\nD lib/libid3tag/testdriver/testdriver.cpp (173)\nD lib/libid3tag/testdriver/testdriver.h (3)\nD lib/libid3tag/testdriver/testdriver.rc (67)\nD lib/libid3tag/testdriver/testdriver.vcproj (171)\nD lib/libid3tag/testdriver/writetest.mp3 (0)\nD lib/libid3tag/zlib/ChangeLog (855)\nD lib/libid3tag/zlib/FAQ (339)\nD lib/libid3tag/zlib/INDEX (51)\nD lib/libid3tag/zlib/Makefile (154)\nD lib/libid3tag/zlib/Makefile.in (154)\nD lib/libid3tag/zlib/README (125)\nD lib/libid3tag/zlib/adler32.c (149)\nD lib/libid3tag/zlib/algorithm.txt (209)\nD lib/libid3tag/zlib/amiga/Makefile.pup (66)\nD lib/libid3tag/zlib/amiga/Makefile.sas (65)\nD lib/libid3tag/zlib/as400/bndsrc (132)\nD lib/libid3tag/zlib/as400/compile.clp (123)\nD lib/libid3tag/zlib/as400/readme.txt (111)\nD lib/libid3tag/zlib/as400/zlib.inc (331)\nD lib/libid3tag/zlib/compress.c (79)\nD lib/libid3tag/zlib/configure (459)\nD lib/libid3tag/zlib/contrib/README.contrib (71)\nD lib/libid3tag/zlib/contrib/ada/buffer_demo.adb (106)\nD lib/libid3tag/zlib/contrib/ada/mtest.adb (156)\nD lib/libid3tag/zlib/contrib/ada/read.adb (156)\nD lib/libid3tag/zlib/contrib/ada/readme.txt (65)\nD lib/libid3tag/zlib/contrib/ada/test.adb (463)\nD lib/libid3tag/zlib/contrib/ada/zlib-streams.adb (225)\nD lib/libid3tag/zlib/contrib/ada/zlib-streams.ads (114)\nD lib/libid3tag/zlib/contrib/ada/zlib-thin.adb (141)\nD lib/libid3tag/zlib/contrib/ada/zlib-thin.ads (450)\nD lib/libid3tag/zlib/contrib/ada/zlib.adb (701)\nD lib/libid3tag/zlib/contrib/ada/zlib.ads (328)\nD lib/libid3tag/zlib/contrib/ada/zlib.gpr (20)\nD lib/libid3tag/zlib/contrib/asm586/README.586 (43)\nD lib/libid3tag/zlib/contrib/asm586/match.S (364)\nD lib/libid3tag/zlib/contrib/asm686/README.686 (34)\nD lib/libid3tag/zlib/contrib/asm686/match.S (329)\nD lib/libid3tag/zlib/contrib/blast/Makefile (8)\nD lib/libid3tag/zlib/contrib/blast/README (4)\nD lib/libid3tag/zlib/contrib/blast/blast.c (444)\nD lib/libid3tag/zlib/contrib/blast/blast.h (71)\nD lib/libid3tag/zlib/contrib/blast/test.pk (0)\nD lib/libid3tag/zlib/contrib/blast/test.txt (1)\nD lib/libid3tag/zlib/contrib/delphi/ZLib.pas (557)\nD lib/libid3tag/zlib/contrib/delphi/ZLibConst.pas (11)\nD lib/libid3tag/zlib/contrib/delphi/readme.txt (76)\nD lib/libid3tag/zlib/contrib/delphi/zlibd32.mak (93)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib.build (33)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib.chm (0)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib.sln (21)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/AssemblyInfo.cs (58)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs (202)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs (83)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/CodecBase.cs (198)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/Deflater.cs (106)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/DotZLib.cs (288)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/DotZLib.csproj (141)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/GZipStream.cs (301)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/Inflater.cs (105)\nD lib/libid3tag/zlib/contrib/dotzlib/DotZLib/UnitTests.cs (274)\nD lib/libid3tag/zlib/contrib/dotzlib/LICENSE_1_0.txt (23)\nD lib/libid3tag/zlib/contrib/dotzlib/readme.txt (58)\nD lib/libid3tag/zlib/contrib/infback9/README (1)\nD lib/libid3tag/zlib/contrib/infback9/infback9.c (608)\nD lib/libid3tag/zlib/contrib/infback9/infback9.h (37)\nD lib/libid3tag/zlib/contrib/infback9/inffix9.h (107)\nD lib/libid3tag/zlib/contrib/infback9/inflate9.h (47)\nD lib/libid3tag/zlib/contrib/infback9/inftree9.c (323)\nD lib/libid3tag/zlib/contrib/infback9/inftree9.h (55)\nD lib/libid3tag/zlib/contrib/inflate86/inffas86.c (1157)\nD lib/libid3tag/zlib/contrib/inflate86/inffast.S (1368)\nD lib/libid3tag/zlib/contrib/iostream/test.cpp (24)\nD lib/libid3tag/zlib/contrib/iostream/zfstream.cpp (329)\nD lib/libid3tag/zlib/contrib/iostream/zfstream.h (128)\nD lib/libid3tag/zlib/contrib/iostream2/zstream.h (307)\nD lib/libid3tag/zlib/contrib/iostream2/zstream_test.cpp (25)\nD lib/libid3tag/zlib/contrib/iostream3/README (35)\nD lib/libid3tag/zlib/contrib/iostream3/TODO (17)\nD lib/libid3tag/zlib/contrib/iostream3/test.cc (50)\nD lib/libid3tag/zlib/contrib/iostream3/zfstream.cc (479)\nD lib/libid3tag/zlib/contrib/iostream3/zfstream.h (466)\nD lib/libid3tag/zlib/contrib/masm686/match.asm (413)\nD lib/libid3tag/zlib/contrib/masmx64/bld_ml64.bat (2)\nD lib/libid3tag/zlib/contrib/masmx64/gvmat64.asm (513)\nD lib/libid3tag/zlib/contrib/masmx64/gvmat64.obj (0)\nD lib/libid3tag/zlib/contrib/masmx64/inffas8664.c (186)\nD lib/libid3tag/zlib/contrib/masmx64/inffasx64.asm (392)\nD lib/libid3tag/zlib/contrib/masmx64/inffasx64.obj (0)\nD lib/libid3tag/zlib/contrib/masmx64/readme.txt (28)\nD lib/libid3tag/zlib/contrib/masmx86/bld_ml32.bat (2)\nD lib/libid3tag/zlib/contrib/masmx86/gvmat32.asm (972)\nD lib/libid3tag/zlib/contrib/masmx86/gvmat32.obj (0)\nD lib/libid3tag/zlib/contrib/masmx86/gvmat32c.c (62)\nD lib/libid3tag/zlib/contrib/masmx86/inffas32.asm (1083)\nD lib/libid3tag/zlib/contrib/masmx86/inffas32.obj (0)\nD lib/libid3tag/zlib/contrib/masmx86/mkasm.bat (3)\nD lib/libid3tag/zlib/contrib/masmx86/readme.txt (21)\nD lib/libid3tag/zlib/contrib/minizip/ChangeLogUnzip (67)\nD lib/libid3tag/zlib/contrib/minizip/Makefile (25)\nD lib/libid3tag/zlib/contrib/minizip/crypt.h (132)\nD lib/libid3tag/zlib/contrib/minizip/ioapi.c (177)\nD lib/libid3tag/zlib/contrib/minizip/ioapi.h (75)\nD lib/libid3tag/zlib/contrib/minizip/iowin32.c (270)\nD lib/libid3tag/zlib/contrib/minizip/iowin32.h (21)\nD lib/libid3tag/zlib/contrib/minizip/miniunz.c (585)\nD lib/libid3tag/zlib/contrib/minizip/minizip.c (420)\nD lib/libid3tag/zlib/contrib/minizip/mztools.c (281)\nD lib/libid3tag/zlib/contrib/minizip/mztools.h (31)\nD lib/libid3tag/zlib/contrib/minizip/unzip.c (1598)\nD lib/libid3tag/zlib/contrib/minizip/unzip.h (354)\nD lib/libid3tag/zlib/contrib/minizip/zip.c (1219)\nD lib/libid3tag/zlib/contrib/minizip/zip.h (235)\nD lib/libid3tag/zlib/contrib/pascal/example.pas (599)\nD lib/libid3tag/zlib/contrib/pascal/readme.txt (76)\nD lib/libid3tag/zlib/contrib/pascal/zlibd32.mak (93)\nD lib/libid3tag/zlib/contrib/pascal/zlibpas.pas (236)\nD lib/libid3tag/zlib/contrib/puff/Makefile (8)\nD lib/libid3tag/zlib/contrib/puff/README (63)\nD lib/libid3tag/zlib/contrib/puff/puff.c (837)\nD lib/libid3tag/zlib/contrib/puff/puff.h (31)\nD lib/libid3tag/zlib/contrib/puff/zeros.raw (0)\nD lib/libid3tag/zlib/contrib/testzlib/testzlib.c (275)\nD lib/libid3tag/zlib/contrib/testzlib/testzlib.txt (10)\nD lib/libid3tag/zlib/contrib/untgz/Makefile (14)\nD lib/libid3tag/zlib/contrib/untgz/Makefile.msc (17)\nD lib/libid3tag/zlib/contrib/untgz/untgz.c (674)\nD lib/libid3tag/zlib/contrib/vstudio/readme.txt (73)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/miniunz.vcproj (126)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/minizip.vcproj (126)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/testzlib.vcproj (126)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/zlib.rc (32)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/zlibstat.vcproj (246)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/zlibvc.def (92)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/zlibvc.sln (78)\nD lib/libid3tag/zlib/contrib/vstudio/vc7/zlibvc.vcproj (445)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/miniunz.vcproj (566)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/minizip.vcproj (563)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/testzlib.vcproj (948)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/testzlibdll.vcproj (567)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/zlib.rc (32)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/zlibstat.vcproj (870)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/zlibvc.def (92)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/zlibvc.sln (144)\nD lib/libid3tag/zlib/contrib/vstudio/vc8/zlibvc.vcproj (1219)\nD lib/libid3tag/zlib/crc32.c (423)\nD lib/libid3tag/zlib/crc32.h (441)\nD lib/libid3tag/zlib/deflate.c (1736)\nD lib/libid3tag/zlib/deflate.h (331)\nD lib/libid3tag/zlib/example.c (565)\nD lib/libid3tag/zlib/examples/README.examples (42)\nD lib/libid3tag/zlib/examples/fitblk.c (233)\nD lib/libid3tag/zlib/examples/gun.c (693)\nD lib/libid3tag/zlib/examples/gzappend.c (500)\nD lib/libid3tag/zlib/examples/gzjoin.c (448)\nD lib/libid3tag/zlib/examples/gzlog.c (413)\nD lib/libid3tag/zlib/examples/gzlog.h (58)\nD lib/libid3tag/zlib/examples/zlib_how.html (523)\nD lib/libid3tag/zlib/examples/zpipe.c (191)\nD lib/libid3tag/zlib/examples/zran.c (404)\nD lib/libid3tag/zlib/gzio.c (1026)\nD lib/libid3tag/zlib/infback.c (623)\nD lib/libid3tag/zlib/inffast.c (318)\nD lib/libid3tag/zlib/inffast.h (11)\nD lib/libid3tag/zlib/inffixed.h (94)\nD lib/libid3tag/zlib/inflate.c (1368)\nD lib/libid3tag/zlib/inflate.h (115)\nD lib/libid3tag/zlib/inftrees.c (329)\nD lib/libid3tag/zlib/inftrees.h (55)\nD lib/libid3tag/zlib/make_vms.com (461)\nD lib/libid3tag/zlib/minigzip.c (322)\nD lib/libid3tag/zlib/msdos/Makefile.bor (109)\nD lib/libid3tag/zlib/msdos/Makefile.dj2 (104)\nD lib/libid3tag/zlib/msdos/Makefile.emx (69)\nD lib/libid3tag/zlib/msdos/Makefile.msc (106)\nD lib/libid3tag/zlib/msdos/Makefile.tc (94)\nD lib/libid3tag/zlib/old/Makefile.riscos (151)\nD lib/libid3tag/zlib/old/README (3)\nD lib/libid3tag/zlib/old/descrip.mms (48)\nD lib/libid3tag/zlib/old/os2/Makefile.os2 (136)\nD lib/libid3tag/zlib/old/os2/zlib.def (51)\nD lib/libid3tag/zlib/old/visual-basic.txt (160)\nD lib/libid3tag/zlib/old/zlib.html (971)\nD lib/libid3tag/zlib/projects/README.projects (41)\nD lib/libid3tag/zlib/projects/visualc2003/zlib.vcproj (1561)\nD lib/libid3tag/zlib/projects/visualc6/README.txt (73)\nD lib/libid3tag/zlib/projects/visualc6/example.dsp (278)\nD lib/libid3tag/zlib/projects/visualc6/minigzip.dsp (278)\nD lib/libid3tag/zlib/projects/visualc6/zlib.dsp (609)\nD lib/libid3tag/zlib/projects/visualc6/zlib.dsw (59)\nD lib/libid3tag/zlib/qnx/package.qpg (141)\nD lib/libid3tag/zlib/trees.c (1219)\nD lib/libid3tag/zlib/trees.h (128)\nD lib/libid3tag/zlib/uncompr.c (61)\nD lib/libid3tag/zlib/win32/DLL_FAQ.txt (397)\nD lib/libid3tag/zlib/win32/Makefile.bor (107)\nD lib/libid3tag/zlib/win32/Makefile.emx (69)\nD lib/libid3tag/zlib/win32/Makefile.gcc (141)\nD lib/libid3tag/zlib/win32/Makefile.msc (126)\nD lib/libid3tag/zlib/win32/VisualC.txt (3)\nD lib/libid3tag/zlib/win32/resource.h (16)\nD lib/libid3tag/zlib/win32/zlib.def (60)\nD lib/libid3tag/zlib/win32/zlib1.rc (67)\nD lib/libid3tag/zlib/zconf.h (332)\nD lib/libid3tag/zlib/zconf.in.h (332)\nD lib/libid3tag/zlib/zlib.3 (159)\nD lib/libid3tag/zlib/zlib.h (1357)\nD lib/libid3tag/zlib/zutil.c (318)\nD lib/libid3tag/zlib/zutil.h (269)\nM xbmc/DllPaths_generated.h.in (1)\nM xbmc/DllPaths_generated_android.h.in (1)\nD xbmc/music/tags/DllLibapetag.h (93)\nD xbmc/music/tags/DllLibid3tag.h (305)\nM xbmc/music/tags/Id3Tag.h (1)\nM xbmc/music/tags/Makefile (1)\nPatch Links\nhttps://github.com/xbmc/xbmc/pull/1415.patch\nhttps://github.com/xbmc/xbmc/pull/1415.diff\n\u0097\nReply to this email directly or view it on GitHub.\n. @theuni I'll close this as I'm merging this into the PR to get rid of the rest of the stuff and do the MacOSX files too. Thanks, I've credited you on that PR :-)\n. @wsoltys Can you review this for the Windows dependencies please?\n. @Fneufneu any fbsd dependencies, too?\n. Thanks Montellese, I integrated your changes into this PR.\n. @huceke anything needed here for rbpi?\n. I'm back in town on Friday and will rebase and pull over this weekend, unless someone else is bored and fancies doing it :-) Currently in the Philippines with little internet. Should be done on Sat morning I reckon.\n\nOn 3 Oct 2012, at 02:15, Arne Morten Kvarving wrote:\n\nrebase and pull?\n\u2014\nReply to this email directly or view it on GitHub.\n. +1\n. I don't understand how this fixes anything, the two calls should be the same.\ncan you do a little more digging here? i'm happy to merge it if you can show exactly why the two calls are different and how this fixes anything.\n\nalso, i don't have any issues reading cover art here on osx, and i've not heard any other reports of issues - but this code is still pretty recent so i'm willing to accept someone might not have stumbled on it.\n. agreed. I've reported this to the taglib maintainer to see what they say. I'm thinking to work around it in a slightly different way. Can you tell me if this works for you?\n\n      /\n       * picture() returns a copy, should return a ref. \n       * when we call .data() on the stack copy of the bytevector\n       * it can be freed before we use the pointer.\n       * remove when taglib gets fixed to return a reference.\n       * \n       /\n      ByteVector   picture =          pictures[i]->picture(); \n      string       mime =             pictures[i]->mimeType().toCString();\n      TagLib::uint size =             picture.size();\n      uint8_t     data  = (uint8_t) picture.data();\n      tag.SetCoverArtInfo(size, mime);\n      if (art)\n        art->set(data, size, mime);\n\n. yes, you're right. merging this.\n. Can you share a couple of sample files for my test suite please?\n. on my hard disk unfortunately. can send me anything free with the right image setups, i don't care what the music is. unless it's country. don't send me country ;-)\nOn 7 Oct 2012, at 23:10, Chris Browet wrote:\n\nI guess the best way (legal-wise) is for me (or you) to convert your mp3 test files to OGG. Where can I find those?\n\u2014\nReply to this email directly or view it on GitHub.\n. Post a dropbox / rapidshare link or something with a short expiry, I'm here for a bit.\n\nOn 7 Oct 2012, at 23:25, Chris Browet wrote:\n\n:)\nCan I find your email somewhere or a way to MP you?\n\u2014\nReply to this email directly or view it on GitHub.\n. got them, tx.\n\nOn 7 Oct 2012, at 23:34, Chris Browet wrote:\n\nHere you are: https://www.dropbox.com/sh/mijnlouyul06gkz/AbDnItm8y5\n\u2014\nReply to this email directly or view it on GitHub.\n. Looks fine\n\nSent from my iPhone\nOn 13 Oct 2012, at 13:37, jmarshallnz notifications@github.com wrote:\nThis takes us back to how we used to handle multiple values in a tag.\nThe only potential issue is for those that normally store multiple values\nin a tag using the list feature of the tag (supported by id3v2 for example)\nbut have only a single value set in a particular tag that happens to\ncontains \" / \". This is reasonably unlikely though...\n@night199uk https://github.com/night199uk Look OK to you?\nYou can merge this Pull Request by running:\ngit pull https://github.com/jmarshallnz/xbmc multi_artist_genre_fixups\nOr view, comment on, or merge it at:\nhttps://github.com/xbmc/xbmc/pull/1610\nCommit Summary\n- use the music separator for artists/album artists/genres that are lis\u2026\nFile Changes\n- M xbmc/music/tags/TagLoaderTagLib.cpp (60)\n- M xbmc/music/tags/TagLoaderTagLib.h (3)\nPatch Links\n- https://github.com/xbmc/xbmc/pull/1610.patch\n- https://github.com/xbmc/xbmc/pull/1610.diff\n\u2014\n  Reply to this email directly or view it on\n  GitHubhttps://github.com/xbmc/xbmc/pull/1610.\n. @jmarshallnz @cptspiff @MartijnKaijser \nWho else needs to review this one?\n. This is because you don't have the new scrapers in place. I need to do a\ncommit for you to be able to get it... I won't get chance tonight now so\nwill email you tomorrow.\nSent from my iPhone\nOn 30 Apr 2013, at 01:07, Martijn Kaijser notifications@github.com wrote:\ngot some errors\nhttp://pastebin.com/1imXT4eL (not a debuglog)\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/xbmc/xbmc/pull/2626#issuecomment-17179936\n.\n. ",
    "danips": "Sorry, I am not an habitual translator.\n. ",
    "piejanssens": "Sorry, thought this was the new trac.\n. ",
    "PSyton": "Looks like it works now. I've test it on win.\n. Maybe i need to squash it into one commit?\n. ",
    "HeresJonny": "Can this be added to the next 13.0.alpha_x Milestone?\n. ",
    "CrossEyeORG": "Hey Iristyle, can you please post your issue on the XBMC forum? This is definitely an issue that needs to be addressed and with more devices coming online lately running XBMC(etc Android, Raspberry Pi, AppleTV) this issue will become even more apparent to everyone! If you would also be so kind as to link your XBMC forum post to this GitHub Issue, anyone else searching will find your link. Thank you!\n. ",
    "elenril": "On Wed, 23 May 2012 03:48:46 -0700, Lars Op den Kamp reply@reply.github.com wrote:\n\nI got a cc about this one: http://trac.xbmc.org/ticket/13056\nSeems to be related to seeking in recordings from tvh.\n\nYes, the problem was that tvheadend recordings were not seekable.\nSorry for the noise, seems I was looking at the wrong seeking function.\nI will investigate the problem further.\n\nAnton Khirnov\n. ",
    "vicbitter": "When executing the query MySQL returns \"#1054 - Unknown column 'sets.idSet' in 'on clause'\"\n. On MySQL version 5.5.5 and above, the default storage engine is InnoDB. Creating the tag table and index with storage engine InnoDB fails. Can you create the table using ENGINE = MYISAM?\n. Guys, I think commit https://github.com/xbmc/xbmc/commit/49cc4be9d0aef253751dd8bbcdb25c55adc0c019 is causing the problem. If you comment out the commit then the \"Loading Directory\" dialog is not shown over the top of the Search dialog.\n. @jmarshallnz, I tried your commits with the \"lock.leave()\" commit and everything worked great. Thanks\n. This PR breaks playback of DTS-HD and Dolby TrueHD on nVidia platforms...\n. @fritsch, on OpenELEC builds with PR 2382 still causes problems when playing DTS-HD and Dolby TrueHD.\n. @fritsch , after applying both of @anssih's patches, I can confirm that DTS-HD and Dolby TrueHD are working again :)\nThanks for the quick turn around on a fix...\n. This thread discusses the ffmpeg testing across the various platforms supported by OpenELEC\nhttp://www.openelec.tv/forum/130-video-decoders/62608-xbmc-ffmpeg-1-1-2\n. @Alphix, I have applied your fix and subtitles are working again! Thanks\n. The reason for the error appears to be:\n(defined(LIBAVFILTER_FROM_FFMPEG) && LIBAVFILTER_VERSION_INT >= AV_VERSION_INT(3.43.100)\nwhich should look like:\n(defined(LIBAVFILTER_FROM_FFMPEG) && LIBAVFILTER_VERSION_INT >= AV_VERSION_INT(3,43,100)\n. ",
    "ChrisLee7": "Thanks for the heads up guys, i'll be sure to watch for key map changes more carefully in further too.\nShould be easy enough for Flirc.\nChris (One of the Flirc guys)\n. ",
    "kcstrom": "I had also created Trac ticket Ticket #13065 for this.\n. Thanks for the responses guys! I'll split out the new option change from the rest. I'll also look into changing  GUIInfoManager to supply the localized date from the EXIF data without the time and modify the slideshow.xml skin file to place the text instead of directly in the C code.\nI originally had the text implemented to scroll horizontally as the pan effect moved the horizontal center of the image as I think that would look better. Unfortunately, I the text did not move smoothly and it looked a little jittery. I'm not exactly sure why, but I think it might have something to do with the UI coordinate scaling and slower framerate update while panning photos. So I just removed it and left it in the center.\nThis is my first experience doing anything with XBMC, so I'll have to figure out how to add the label control and get the text centered in settings.xml. Hopefully I'll have a bit of time this afternoon to play with it a bit.\nWhat's the normal way of resubmitting pull requests? Should I force update this branch in my xbmc github repo or create a new branch (with two commits for the option setting pulled out)?\n. ",
    "kid1000002000": "Apologies for the confusion. Done.\n. ",
    "tamland": "This is great, but I still think method 1 should be default instead of 2. This is because ctime have different meaning on different platforms and thus creating an inconsistency in xbmc across platforms as previously explained.\nEspecially on linux, where ctime is last metadata change, method 2 makes no sense as the order would change every time you rename a file or edit permissions. I believe this isn't what you intended (?)\n. Maybe the methods could be split into different behaviors instead of the purely technical descriptions of how it's implemented? Because method 2 will indeed behave differently on different platforms, while method 0 and 1 have consistent behavior.\n. You mean I should cast them all to long long? Any suggestion on how to do it otherwise, because the type seems to be implementation dependent, so I'm not sure what to do about that. Manually write all the cases? (cant even figure out what they are btw)\n. Are you handling absolute paths in the master m3u8?\n. Thanks. Looking forward to this.\n. First do\ngit pull --rebase upstream master\n..then your two commits should be on top.\nSquash them.\ngit push origin +master\nThink this should work.\n. No I only made the previous one a tuple because it was the easiest then. Now, as long as the tuples are unnamed, I would say an object is better because that unpacking line will be pretty long and easy to mess up.\n. Someone else will have to do that. Things were added that I cant decide to remove of keep.\n. ",
    "jus7incase": "@Montellese: Value 0 does not work for me. See issue #2354.\n. Value 0 does not work for me. See issue #2354.\n. @amet: OK, to which of the forums should bugs go? General help and support? I checked the options but it wasn't conclusive to me.\n. ",
    "azeos": "This should be optional, for us who don't have an optical drive connected to the XBMC (RPi in my case), this is a total drawback. Now I can't see my DVDs indexes.\n. ",
    "akva2": "yes, we need to open the frodo repo first.\n. if somebody takes charge and pulls it before the window closes.\n. and the morale, as always, is: you ALWAYS rebase on an upstream.\n. right. just meant as friendly advice in case you read it as anything else.\n. other than a minor grump on the grandpa C habits of declaring variables at the start of a block instead of declaring them when they are needed as well as the malloc/free usage instead of new/delete it looks fine to me. \nof course you can do it old style if you prefer obviously, just expressing personal preferences.\n. 3 initial observations;\n1) it does not replace the listitems in the media window listing, i.e. you see foo.rar not the name of the media file inside the archive which is used to show. this is a regression\n2) while there is playback from stored archives, it cannot handle multi-part sets, so playback halts immediately after the first volume. i suspect this is cased by me running libarchive from apt.\n3) since it's libarchive, it should do the zips as well no? (assume this is a todo)\nanyways; a great start. the day unrarxlib die in flames will be a good day.\n. heh.\ndamn self interest lured me into the project in the first place and it has lured me into working on stuff already (a pr will show up). i still refuse to work with certain elements of the team so coming back is not an option.\n. as i suspected then. so just the regression. it would be caused by changes in the FileDirectoryFactory code.\n. surely some common base class must have started to rear its head by now. are we still concerned about performance here. is the extra cost of a map lookup + variant too high? if not i could imagine one common setting container class and no foosettings...\n. simplify where it makes sense, keep those you mention separate?\n. hehe, to my defense the 'neat' was mainly aimed at the fact that we are moving... i didn't really consider the suggestion.\n. assume i have an archive at /home/spiff/foo.rar holding foo.avi\nyou have a file on the form\nrar://[urlencodedpathtoarchive]/[file in archive], in my case rar://%2c/home%2c/spiff%2c/foo%2d.rar/foo.avi\n(don't mind the random url encoding..)\nif i call GetDirectory() on this, i get rar://[urlencodedpathtoarchive]/ - it's the directory of the file inside the archive. in my case; rar://%2c/home%2c/spiff%2c/foo%2d.rar/\ni then call GetParentPath on rar://[urlencodedpathtoarchive] - this yields the directory where the archive sits,\nin my case it would yield /home/spiff/. that's the big difference between GetDirectory and GetParentPath - GetDirectory is to just strip off the file name from an url, GetParentPath implements this additional logic for archives and stacks and some other special cases in the VFS.\nfinally the code applies the avi name, so it ends up with /home/spiff/foo.avi - then looks for that file.\nthe rationale; typically the trailer won't sit in side the archive but outside. so we look for the trailer that would be attached to the file if was outside the rars.\n. ^ cptspiff with his work login by accident.\n. uhm, how can it be hard to imaging vsync can every use more cpu?\nthe cpu is waiting for the retrace. on good drivers you get a callback from the gpu when the vsync occurs (or well, rather when the buffer switch occurs). on bad drivers you don't and have to poll. either you have it sleep, and miss a retrace (bad idea), or you have to spin. last mode eats cpu like babies.\n. it's what i had in mind. if it still compiles, it's all good.\n. argh, wrong id, ^^ cptspiff at work.\n. thanks squash it up and i'll hit the green and shiny.\n. noncopyable is extremely little code to write. seems like it's very easy to shortcut this entire discussion but writing the two lines of code yourself ;)\n. redone.\n. thanks, seen it but i also have this pesky thing called a real life job ;)\n. no time to review in detail now, but in principle they look exactly what i had in mind.\n. i really don't see a reason to refuse this in the mean time.\n. fine by me (cptspiff alter ego).\n. it does as announced. it flattens the library hierarchy.\n. if we do this (i like it btw), we do it in general for all platforms. get rid of CDDACodec.h/cpp in paplayer, and assign cdda to the dvdplayer codec. if you also fix up the CDDARipJob.cpp to read through this framework, we can kill off filesystem/CDDAFile.*\n. or git show > patches/patch-number+brief-desciption.patch for the lazy.\n. i realize that, it was more of a general comment. at least with icc, the c++11 ABI is optional. you will also get into lots of troubles with libraries using the old ABI. they don't mix and match very well...\n. right. fyi i am cptspiff and so am akva2 ;) work login vs private, i arse up at times.\nthe problem rears its head mostly with templates. if a template has some initialization code that ends up in both a library, and the app / downstream library, you get into weird issue that easily eats a couple of days of work. trust me ;)\n. ",
    "Karlson2k": "This merge breaks shutdown procedure. XBMC.exe can't exit. Last strings in log:\n04:42:40 T:8816  NOTICE: StorageServer-1.0.0 Closed down\n04:42:44 T:14376   ERROR: XBPyThread::stop - script didn't stop in proper time - lets kill it\n. In any case it's not OK.\n@wsoltys, @amet, will someone fix or revert it?\n. @amet, no problem. \nI'm working on other patches. :)\n. Native resolution should be used only if no up-/downscaling is made by XBMC.\nAny LCD/Plasma TV would resize to it's screen resolution internally.\nSo for example in case of 1280x650 material, output chain can be 1280x650 ->  (by XBMC - no scaling, black bars) 1280x720 -> (HDMI) 1280x720 -> (resize by TV) 1920x1080. This is OK as TV upscaler could be better than XBMC.\nBut in case of 1024x550 material, output chain can be 1024x550 -> (1st resize by XBMC) 1280x688  -> (by XBMC, black bars) 1280x720  -> (HDMI) 1280x720 -> (2nd resize by TV) 1920x1080. This definitely be worse than 1 upscale (no matter where - in XBMC or in TV). Picture lose more sharpness and becomes more blurry. \n. Besides my comment about wrong fit calculation, supposed patch still allow double scaling.\nYou should rescale image only one time: in XBMC or in TV.\nIn other words: if TV accept exact image resolution, than XBMC could use it as output and allow TV to rescale image. In all other cases XBMC should rescale image to configured resolution (which should be TV native resolution) to allow pixel-to-pixel exact TV output.\n. @adam-aph Did you suggest it to me?\nI can only repeat: https://github.com/xbmc/xbmc/pull/1096#issuecomment-6757441\nYou should not try any resolutions, except native image resolution and native display resolution. In any other case you'll get double upscaling: one in XBMC and one in display. Any double upscale will be worse than single scaling in XBMC.\nRegarding FPS. All displays support widest choice of FPSs at native resolution, so there are no reason to try other resolution if you are fps-addicted.\nAbout interlaced videos. If you want to deinterlace video by TV, the only way to get it is to output video at exact video's resolution and FPS. In all other cases TV will be unable to deinterlace. So again there are no reason to look for any \"close\" resolution.\nOther problem for interlaced video is how to sync even/odd frames output from video decoder with even/odd frames in video out.\n. @elupus Try it. Result will be terrible. :)\nIf you resize even frame, having only half of horizontal lines, you'll get inter-/extrapolated new lines (some will be placed in original locations of odd frame lines). Than those lines will be unpredictably shifted (new number of lines = new relative places of lines) and mixed with other shifted and inter-/extrapolated lines. Just try to imagine how resulting frame will be deinterlaced. :)\n. @elupus Of course if you resize only horizontally, result will be fine.\n. @elupus Yes, theoretically possible, but practically unusable. :)\nAnd idea in general is good. It's nice to have a choice where to resize video. At least to compare result.\n. @DOCaCola Seems that in Dreambox terminology SD = 576\n. @adam-aph I'd suggest to start from less controversial way and most simple way at the same time: native image resolution or native TV/display resolution.\nIt's relative simple patch, think can be easily integrated into mainline. Just put all settings to GUI.\nIn case of demand for more features you can improve it in later PRs.\n. Any resolution without resize (just adding black bars).\nSo yes, output 720x304 as 720x480 is OK\n. @elupus We should think more about aspect error with native resolution. In one hand - looks like nice idea, but in other hand we'll get definitely lower image quality (double resize).\nProblem will be doubled in very low resolution - even small aspect ratio change will be unacceptable, while changing ration with resize to final resolution is fine (as implemented now in mainline).\n. @adam-aph You can save this branch locally and replace it with simpler one or open separate PR with simpler patch.\nDon't pollute advancedsettings.xml, use GUI settings.\n. @jmarshallnz You right. Patch should handle non-square pixels properly.\nFor videos XBMC has real aspect ration information from file, for output pixel aspect is defined by standard. \n. Everything merged to master should be needed for endusers. But endusers will not play with advancedsettings.\nSo put all settings into GUI. And even for developers - it's easier to play with settings when settings in GUI. You can share your custom build until it's merged.\nThe only setting for advancedsettings is \"disable native resolution support\".\nAdvancedsettings should not be treated as temporal place for GUI setting.\n. @adam-aph No offence, but using advancedsettings instead of GUI settings sounds for me like putting steering wheel under the hood. :)\n. @adam-aph There are some (unofficial) rules. Every settings that needed for correct configurations and use of XBMC must be placed in GUI (like output sound device, directories with media files, language, output video resolution). Those  settings should be configured as easily as possible.\nComplicated settings, that require deep technical knowledge (like MySQL), or troubleshoot settings (like dirty regions, flip buffer) must be placed in advancedsettings.xml.\nDuring last 6 months at least 3 of my PRs wasn't get it because of use of advancedsettings. And several others was rejects by reason that I don't follow unofficial rules. And that is right, because when code grows, rules must be stricter otherwise it'll be impossible to maintain and support resulting monster.\nMoreover you can just write a good patch and forget about it, while XBMC team must maintain your code, support users for you code, write documentation, wiki, FAQ and so on... For me it's not very logical to explain that video output should be configured in GUI, but after that native video output should be configured in AS.\nAnd note, that some nice feature can be implemented in 200 lines of code, but configuration and GUI can take 2000 lines of code. And if original developer don't implement GUI for it, who must do it?\nPS I'm not in XBMC team\n. @GhostM121 Don't worry, I'm sure it'll be implemented.\n. Disadvantage: if you have thousands of movies than it will be real pain to mark them as set. It will be a real pain even to find  specific \"movie set\" in tags to make single movie by hands!\nBesides TMDB, kinopoisk also supports movie sets.\nWhy do you want to just to strip movie set support from scrappers?\nMy suggestion: future more extend movie tag to support different movie tag type. Convert \"movie set\" to \"movie set\" tag type.\n. OK, thanks for explanation.\nThis way is looks good.\n. iMon claims that this it the bug in DirectX. See 'Cause' in http://www.soundgraph.com/forums/faq.php?faq=sg_faq_sw_imon_manager_g_01#faq_sg_faq_software_products_gamecontrol \nBut anyway - it's unfixable because firmware isn't upgradeable. At least until Microsoft rewrote DirectInput code. :)\nSo, until that it's not possible to use iMON hardware with XBMC (with DirectInput Joystick). I'm sure that a lot of users will be unhappy if this will go to release.\nMy solution is relatively simple, doesn't broke anything and add small feature, that can be used even by users without iMON hardware.\n. OK, I'll combine all commits in one, fix whitespaces and remove some checks.\nIt's possible to detect hardware via USB HID properties, but I don't have a lists of buggy and bug-free firmwares. \nI'm ready to write detection module. Could you advise something about lists of the hardware?\n. Started development thread for discussion: http://forum.xbmc.org/showthread.php?tid=135218\n. Rewrote from the scratch.\nNow it looks like elegant solution, not like a hack as before\n. There are just a few cosmetic points.\nOne of them - duplicated Reset, other - code for one function move from .h to .cpp and third one - move g_Joystick to SystemGlobal.\nDo you really need separate commits?\n. OK. I'll split it to several commits. :)\n. Too late. :)\n. @jmarshallnz . Fine?\n. It was done already, except squash.\n. @jmarshallnz finally done!\n. From my point of view adding functions in root namespace without any class is wrong.\nEspecially when function name is very general like 'WakeUp' or 'WaitAfterWake' - it can be confused with system wake functions.\n. - Agree that defines will work in any order, but it's easier to maintain them when they are ordered.\n- OpenGL is still present everywhere: in projects, in .bat build. So until it's removed, better if it'll be working config. And fixes are relatively simple.\n- As I said debug related settings a left untouched (I didn't optimize any setting).  All optimization and code generation setting are preserved. So code compilation don't changed. But it was strange that debug build use standard includes and libs paths, while release use standard + DXSDK for example. SSE is enabled in one project in (not used) Unicode Release config as it was enabled in (main) Release config.\n- Reset defaults to defaults is absolutely cosmetics. But this way it's simpler to locate in project config real important settings as they are highlighted.\nAnd there was a lot of junk in paths. Paths that don't exist.\nLooks like with cleared settings solution is compiled faster. And now I can compile it with Intel Compiler. I can't do it before because extremely long command line cause a lot of troubles.\nAnyway I think that outdated trash should be excluded from projects. \n. @wsoltys done.\n. Yep, didn't take this into account.\nNext time I'll do my best. :)\n. Fix this one: http://forum.xbmc.org/showthread.php?tid=122360 \n. @vdrfan this code is add all available scrappers only for test to math crapper URL in nfo file not for blindly scraping info.\nIf user put kino.de URL into movie.nfo that should mean that user explicitly want kino.de scraper for that movie even if user set imdb scraper for all movies.\nIt's described here: http://wiki.xbmc.org/index.php?title=Import-export_library#Video_nfo_files_containing_an_URL, but was broken a long time ago.\n. @vdrfan The current order is: current scraper, default scraper. Scrapers match by language is never used as there is no way to set \"scrapers.langfallback\" to \"true\".\nMany scrapers is multilingual, but marked as \"en\". Moreover, even if user set somehow \"scrapers.langfallback\", there is no warranty that \"multi\" is include needed language. \nSo current logic is broken already.\nAnd last but not least argument: this is only test for match scraper URL from nfo file. If user explicitly want specific scraper for specific movie, why should we prevent he/her from this?\nAnd what can be broken for user, that don't use movie.nfo? If no movie.nfo is present than only default scraper is used.\n@jmarshallnz typos are corrected.\n. @vdrfan And I can't understand about feature change.\nThis it just implementation of http://wiki.xbmc.org/index.php?title=Import-export_library#Video_nfo_files_containing_an_URL\nAgain, right now code is not working as described in wiki!\n. Again, scraper is only used if it match url in movie.nfo. If user specified explictly scraper for movie, why XBMC should prevent it?\nIn all other cases only default scraper is used.\nCurrently, in one hand XBMC allow user to specify alternative specific scraper for movie, but in other hand disallow use of alternative scraper. I can't understand this logic.\nFor what reason in this case URL in movie.nfo could be used?\nYou should ether completely disallow scraper selection by movie.nfo or allow user to choose scraper that he/she wants by movie.nfo.\n. Language based fallback was already nuked some time ago, when it was cut from GUI.\nIf users don't enable the addons then movie.nfo with URL just will not work.\nNo harm at all.\n. We could do so, but it's nice to have directory default scraper at first, than type default scraper at second and all other after them.\nSo scraper eats Urls from other scrapers. For example TMDB can be used on IMDB url. So order of scrapers processing is does matter.\n\nThen you should drop the entire logic and nuke the AddScrapers function.\n. Already notices my typo. I'll fix it :)\n. Before any other code change let's define logic at first.\n@cptspiff there are two default scrapers: directory default and global type (movie) default. I think that we could process defaults scrapers at first and after them - the rest.\n\n@vdrfan Why do you want to put default one to the end of the list? From my point of view it should have priority on other scrapers as it's selected as default.\nI use movie.nfo to avoid any searching - I just put movie URL in it and want to be sure that correct scraper will be used.\n. @vdrfan OK. Agree with that logic.\nGlobal default scrapped isn't selectable by user, so it should be checked at last position.\n. @cptspiff @vdrfan Done. Rewritten, typos fixed.\n. Hopefully last typo (in commit description) fix. :)\n. @cptspiff @vdrfan @jmarshallnz Fine?\n. @jmarshallnz Done.\n. @jmarshallnz Ready to go :)\n. As alternative - this could be not replacement to \"CPU Frequency\" info, but I can add new type on information \"Current CPU Frequency\".\nAny suggestion? \n. @jmarshallnz @cptspiff Looks like regression. Loose some information when blindly cutting Hz. \n44100 Hz and 44.1 kHz are standards, but 44 kHz is non-standard.\n. @cptspiff  But it's not 44 kHz. It's 44.1 kHz.\nSo we loose some significant information.\nIt's like we'll show 24 fps instead of 23.976 fps.\nAnyway, just using float format is simple and with correct result.\n. OK, I understand your terminology. \nWhat we can do with an issue?\n. OK, thanks for clarifying. \n. @jmarshallnz done.\n. Sorry, comment was in commit.\n@jmarshallnz Should I create a separate PR for faster CPU usage update?\n. The only question:\nIs m_strLocation from result really used anywhere except device identification?\nI check the code and didn't find any other usage. Did I miss something?\n. This is subset of changes from #1189, but it could be applied independently.\n. @opdenkamp The idea about memory preallocation was inspired by 'devcon' example from Windows DDK. \nSo in general - is't just a shuffle of MS examples. :)\n. Some refactoring added\n. @opdenkamp ?\n. It's mostly a bugfixes, no a featureadding, so no need to wait for merge window.\n. @opdenkamp Code is updated.\nAbout bugs. The old code missing a lot of checks: memory allocation, string really found.\nAnyway, optimizations are added between merge rounds.\nBut I'd like to avoid this discussion any deeply as it does not make sense as merge window is coming. :)\n. @opdenkamp More corrections?\n. @opdenkamp Is code ok now? :)\n. Nice! \nThanks.\n. @opdenkamp Code is updated a little.\nReady to test. ;)\n. @opdenkamp  Still waiting. ;)\n. @MartijnKaijser Learn to distinguish between impatience and reminder.\n. Really, I fully understand that here we have no obligations or something like this and all have a lot of things to do, not only open source coding.\nAnd I have a lot of patience.\nBut I'd like to remind about thing promised to be 'tomorrow' after 3 days, without any offense.\nAnd I don't want to \"learn\" anything here, except good coding.\nThanks for understanding.\n. OK.\nAny chance that code will be reviewed within this merge window?\n. @opdenkamp Rewritten from the scratch.\nNow carefully follow you coding style. :)\n. OK, I'll separate all fixes, changes and cosmetics.\nAbout SetupDiGetDeviceInterfaceDetail. There is no garantee that DevicePath will contain device ID. It is just the string that can be used with other functions for specify device in system. Yes, it contains ID now, but we can't be sure that it will contain ID in all possible cases and this behavor will not be changed with future Windows version or service pack. The only function that returns hardware ID in all cases is SetupDiGetDeviceRegistryProperty with parameter SPDRP_HARDWAREID .\nAnd yes, result can be passed, but you shold not parse (analyze, decompose, split) result.\n. @opdenkamp One change - one commit.\nBTW about real problems - PR #1189 is still waiting\n. @opdenkamp Move code to cperipherals? It's platform independ mostly, may be it's better to move code to CPeripheralBusUSB?\nBut detection function must be called from here, as it should set only default value, which can be overwritten from settings.xml .\n. But all peripherals/devices are initialized after loading of settings from xml as they deeply depends on settings.\nThe idea of this patch to supply default value that can be overridden by user's choice so iMON should be detected before loading of settings and, therefore, before any peripherals initialization.\nMy suggestion is to move detection code to platform specific BusUSB (as this check is needed only for Windows) and call some static function from here to set default value.\n. OK, thinks about suggested way.\n. Dilemma.\nIt can be implemented as new device type, like 'CPeripheralPromlemImon', but this looks like overkill.\nIt can be implemented as HID device with configuration in Peripherals.xml, but in this case we need to catch addition/deletion of such devices in CreatePeripheral/OnDeviceAdded and OnDeviceDeleted, but this will looks like a hack.\nWhat could you suggest?\n. @opdenkamp Rewrote from the scratch.\nWith little optimization of old code.\n. @opdenkamp OK, I'll convert it to separate imon class.Early this seemed overkill, but now it looks like adequate solution. \n. @opdenkamp Rebased and ready to test.\n. @opdenkamp Rebased again and still ready for test.\n. @opdenkamp Ready for this merge window.\n. @opdenkamp Sorry, pushed rebased version while you was commenting. :(\n. @opdenkamp They all are in my notification inbox.\n. @amet Don't - what?\n. @opdenkamp Is it fine to implement \"NumberOfConflictingImons()\" in CPeripherals ? \nIt's needed in a lot of places instead of \"HasPeipheralWithFeature(FEATURE_PROBLEMIMON)\".\n. @opdenkamp Some code already rewritten by your comments, but before any more push of commits to this PR, I'd like to negotiate the way how it'll be implemented.\nWe need:\n- some global function that returns presence of conflicting iMON hw (for enabling/disabling joystick in GUI and at startup). Now it's implemented as g_Peripherals.HasPeripheralWithFeature(FEATURE_PROBLEMIMON), my suggestion is to replace it by g_Peripherals.HasConflictImon()\n- check that not other conflicting iMON is present when device is removed. If this should be done in destructor, than we need some cached value in CPeripherals (if we start to enumerate devices, we could cause a deadlock)\nIf this it OK, I'll implement it this way.\n. @opdenkamp Sorry to remind you, but this is a real problem for many iMON users.\nI'd like to move forward with it.\n. @opdenkamp There was some questions about correct implementation. I can't see any now, that's strange. May be they are still in your inbox?\nOne of questions was about aditional counters in CPeripherals. It's needed for avoiding deadlocks: when imon is removed we need to check is it last imon or not, but we can't start enumirating as bus is already locked.\nSo we need to implement ether specific counters for imon in CPeripherals or add code to CPeriphels for switching on/off joystick upon removal/insertion of imon. Or, as alternative use \"problem imon\" as feature.\nWhat's better?\n. It's good idea, but some imon devices can be \"non-problem\". I'd like to implement it later by device setting.\nAs alternative, it's possible to implement counters as static members of imon class. Is it ok?\n. But it worth to try it as static members?\nLooks like elegant and correct solution.\n. @opdenkamp Did my best for removing extra #ifdefs.\n. New names are little bit hulky, but now they are self-explanatory.\n. @opdenkamp Fixed linux build.\nTested on Ubuntu.\n. @Memphiz Thanks for point me to that problem. I'll do that next time.\n. Personally I'm against this commits.\nI don't like the idea of skipping everything in root folder - something can be temporary placed here.\nAnd I don't like that idea of assumption that everyone is using name template like 'Title (Year)'. I'm using 'Original Title (edition) {Year}= Localized Title [Genres]' template. And XBMC works fine with my template after tuning AdvancedSettings.xml.\nMay be it's worth to think about different tool for sharing? NFS, SMB works pretty good with last modified time. Or in case that http is required, try other http server.\nIn any case: instead of implementing not-always-working workarounds, try to use right tools that are intended for your needs.\n. @cptspiff as you recomend\n. @jmarshallnz , @cptspiff \nIs it ok to go?\n. @jmarshallnz Is it time to go?\n. Think that's right idea.\nBut anyway optimization does matter because GUISettings is used everywhere. So it'll be useful, specially on low-powerful platform, like Android.\n. @jmarshallnz 1. Agree. But what drawback of optimization, even if it isn't highly used? :)\n2. std::string should be equal to std::basic_string, but std::basic_string is explicitly used as parent class for CStdString so it should be more compatible (does not depend on library implementation). Using std::string (or basic string) as a key is definitely faster as comparison of keys is faster and one-time key objects creation is faster (when using \"char *\" for search).\n3. Both MSVC and GCC has unordered_map. They both also has hash_map, which if even a little bit faster (from my tests). Mat be we should use hash_map?\n4. In real situation on Win platform std::unordered_map is faster. But I can agree, that it could change after migrating Skin settings from GUISettings. Or it wouldn't change. :) We could test.\n. @jmarshallnz Done. \nIs it worth creating separate PR for map with std::string as key?\n. @cptspiff We have hash_map as alternative.\n. @cptspiff Agree. But it's included everywhere for years. \nAnd unordered_map is included too, but OK, if we want to make it compiler-compatible as much as possible, I removed it already from this PR.\n. @cptspiff Did you mean 'hash_map' or this PR? :)\nBy the way, GUISetting counts now 223 setting.\n. I decided to do as @jmarshallnz recommends.\nI removed 'map' change from this PR (as it contains other changes too).\nI'll create a separate PR for 'hash_map', but it's not so straightforward as on MS it's in stdext namespace, on GCC it's in other namespace.\nAs I see for MacOS, iOS and Android we use GCC too, but anyway it can be complicated.\n. @jmarshallnz Already excluded all 'map's from this PR. :)\nAbout CStdString - yes, it's just a wrapper, but it wrap not only creation of object when search begins, but it wrap every comparison during key search.\nFrom my tests - using of std::string is lower time less than or about 10%.\n. @jmarshallnz, @cptspiff Now this PR drop only .ToLower() transformation.\nIt's ready to go!\n. @jmarshallnz if one of them will be merged, I'll remove it from second one.\nCurrently seems that this one have more chances to be merged.\n. @jmarshallnz Decided to drop 7aa45a2 as this PR can go without it.\n. @jmarshallnz Yes, I missed this one.\nAlready done several times with \"Confluense\", \"Touched\" and some other skins.\nAs all get/set function write message in case of \"not found\" by \"CLog::Log(LOGDEBUG,\"Error: Requested setting (%s) was not found.  It must be case-sensitive\", strSetting);\", all possible errors can be easily detected.\n. JSON-RPC and python already superficially checked by simply using several addons and JSON control app.\nI'll look into GUIInfoManager.cpp.\nBut if settings supposed to be lowercase and at first and second looks all work just fine, should we introduce any additional hacks for potentially wrong designed addons, skins and anything other components?\nIsn't it better to use right design?\n. @jmarshallnz OK, I'll look into it.\n. @jmarshallnz Found http-api use of g_guiSettings.\nCould you point me to python and infolabel usage of g_guiSettings?\n. @jmarshallnz Is 1e73614 fine?\n. @jmarshallnz Think that 2a5236f is even better solution. \n. OK, I'll fix it.\n. @jmarshallnz Finally. Remove commented out getbool from system_param?\n. @jmarshallnz 123b567 is fine?\n. @jmarshallnz Corrected.\n. @cptspiff @jmarshallnz @davilla This is removed part of #1252. \n. @cptspiff @jmarshallnz @davilla as I dropped 7aa45a2 from #1252, this PR does not conflict with others and can be merged.\n. @jmarshallnz \n?\n. Thanks. This explains quietness here.\nHope Viennese Schnitzel will be good. But not good enough to keep devs from returning back to code. :)\n. Actually think something was wrong with my PC. :)\n. @jmarshallnz Will keep it in mind.\nI'll try to do my best. :)\n. Less memory allocation (EmptyString is one for all code, but each '\"\"' require some place in code and memory (stack) allocation) and if converted to CStdString - initialization.\n. @Montellese Fixed. :)\n. @Memphiz Montellese commented on lines in last commit. There was missing space in \"if\" and couple of things.\nThat was fixed and last commit was replaced.\n. @jmarshallnz \nErr... I have two fixes in 2f03c21 . Are they wrong too?\nAnd replacing empty strings with \"EmptyString\" is bad idea?\n. @jmarshallnz \nSo on one side is copy and on other side is initialization of object and then copy.\nSeems that skipping of initialization should be better and faster.\nAnd I'll apply a right fix for \"fallback\".\n. Actually, I understand what compiler can do. :) Even can imagine what happen after compiler optimization.\nBut I understand your point of view: if result is not be better for sure, than prefer conservatism over changes. :)\n. @jmarshallnz Thanks for the detailed explanation.\nOne note: compiler should be instructed to optimize, while this isn't always true. Strings pooling is switched off on windows for example. :)\nOK, I'll drop replacing with \"EmptyString\" tomorrow, it's 2:40am in Moscow. \n. @jmarshallnz Done.\nIs fix correct in b0b28f9 or just drop it out?\n. @jmarshallnz Done.\n. This should change internal algorithms so COM becomes faster.\nhttp://msdn.microsoft.com/en-us/library/ms678505.aspx \nIt only can be faster and does not guarantee any improvement, but definitely will not be worse. \n. To be honest, I can not make any suitable test.\n. @elupus Agree about noticeable difference. Main goal of this commit was removing xbox relation. \n. @jmarshallnz There is placeholder for other platforms, but it's common on all platforms - bigger buffer results in faster copy.\nSo I'm sure that it will improve performance on all platforms.\nBut I can #ifdef for now-Windows platform with old (xbox) value. Should I do so?\n. @elupus Done. :)\n. @elupus @jmarshallnz Are we still in merge window?\n. @wsoltys Answers: :)\n1) Basically I was going to implement only 'char _', 'wchar_t ', 'CStdStringA' and 'CStdStringW' versions. All those type of variables are used in XBMC and some function need internally CStdStringX versions, some - only Xchar_ version, so to avoid unnecessary char<->CStdString conversions I implement 4 versions of functions.\nBut then I got an error when I tried to compile a simple command like \"xbmc_setenv(\"XBMC_HOME\", cstdstringvar). Compiler didn't know which functions should be used \"xbmc_setenv(char , char *)\" or \"xbmc_setenv(CStdStringA&, CStdStringA&)\" as both conversion is possible. So I decided to implement all possible versions, trying each time to use less possible conversions.\nAnyway, this give a great flexibility on using this functions and it's not too hard to maintain all those code as huge part of functions is implemented by calling other similar functions.\n2) charsetconverter is used for non-windows platform. But charset conversion is needed mostly for Windows. So I decided to use direct Windows functions for two reasons:\n1. When coding for Windows, native Windows conversion should be faster.\n2. This is the only way to check conversion success, as XBMC conversion functions in case of fail just return original string converted via CStdString conversion (so converted as ANSI -> wide or vice versa). In case that string contain illegal ANSI characters, returned string can be just empty so if 'value' parameter conversion failed, then xbmc_envset can delete variable instead of setting new value for it.\n_WIN32 is replaced.\nAnd of course, it make sense to update only multiplatfrom code. Pure Linux/OSX code should use their native functions.\n. At least one bug here, in Application.cpp:\nCUtil::GetHomePath(xbmcPath);\nSetEnvironmentVariable(\"XBMC_HOME\", xbmcPath.c_str());\nWe are trying to set \"XBMC_HOME\", so next call to CUtil::GetHomePath should use this environment variable instead of full detection. But \"GetHomePath\" uses runtime function \"_wgetenv\" (which one operates with separate environment copy) and never get this variable, so every time \"GetHomePath\" uses full detection again.\nI'm sure that in XBMC a lot of places where different environment is used. For example first setting \"OS\" variable will be ignored by any external libs, like python as it compiled by VS2008.\nAs I see, XBMC code uses widely \"SetEnvironmentVariable\" (as it simpler than \"putenv\") for setting variables, but uses \"getenv\" for reading it (as it simpler than \"GetEnvironmentVariable\"). But it's wrong, as \"getenv\" will not see changes made by \"SetEnvironmentVariable\" and vice versa.\nTo properly change variable on win32 platform you need to update it in:\n- runtime environment (by \"putenv\")\n- process environment (by \"SetEnvironmentVariable\", this environment is inherited by child processes )\n- other runtime versions environment used by third-party libs (each runtime uses independ copy of environment)\nCurrently XBMC uses in some places \"win32env.c\" to update environment for python, but \"win32env.c\" is buggy and could crash after library unloading.\nIf this code go to XBMC, we will need to get rid of \"win32env.c\".\n. @jmarshallnz May be PostgreSQL don't unload libs at runtime - I don't know.\nI just want to implement convenient functions for XBMC with XBMC's specific.\nI removed all win32 charset conversions and split code to several commits.\n4c5bd47 contains main logic, but main logic includes some CStdStringA and CStdStringW functions. The main reasons for it to explicitly return a copy of variable value (to not confuse with posix behavor as posix specify return value of getenv as modifiable, but this not possible on Windows platform with wide<->UTF-8 conversions). And CStdString is used for putenv (again - posix specify that string should be putted as later modifiable by it pointer and again it's not possible on windows).\nCStdStringW is a part of main logic as some parts of XBMC use wide chars, so Environment can be modified without unnecessary wide->UTF8->wide conversions.\nconvertFromUtf8 and convertToUtf8 is just a wrappers for charsetconverter with additional checks and shortcuts useful mainly to Environment functions.\n. @jmarshallnz @wsoltys \nPR is still waiting.\nJust check e777e57 at first.\nThis could solve number of problems and potential problems.\nI'm still not sure about charsetconverter as SetEnv can be used before it initialization. May be implement win32 charset conversion at least as fallback?\n. @jmarshallnz OK, wide char is really rare. \nAbout \"char \" - I just want to avoid extra  char -> CStdString -> char conversion.\nAnd the most common usage for setenv is \"setenv(\"envvar\", varvalue)\", so if we accept \"char \" we'll just get a pointer without any initialization/conversion/c_str.\nI'll start with dropping of wide char.\n. @jmarshallnz Rewritten. \nNow uses mostly std::string and std::wstring.\n. @jmarshallnz What can I do to improve this PR even more? :)\n. @jmarshallnz @wsoltys \nIs it time?\n. @wsoltys @jmarshallnz wchar version is mostly for win32-only code sections. It's easy to use wchar in win32 as windows doesn't support UTF-8 as input/output (except charset conversion functions).\n@jmarshallnz XBMC's charset converter is not available before initialization / if shutdown in progress. Same as for CLog: https://github.com/xbmc/xbmc/blob/master/xbmc/utils/log.cpp#L226\n. Wchar is used only in https://github.com/xbmc/xbmc/blob/master/xbmc/win32/WIN32Util.cpp#L503 and https://github.com/xbmc/xbmc/blob/master/xbmc/win32/WIN32Util.cpp#L513, so wrappers can be really removed.\nAnd I'll check initialization/deinitialization order, but it can be changed in future (or will require environment manipulation in different moment). As utf8<->wchar conversion needed only for win32 platform, it will be more future proof to use win32 conversion (and no conversion for other platforms).\nShould I move all function to some class (XBMCEnv?) or to another namespace?\n. @jmarshallnz Rebased, all public wchar_t/wstring functions removed, WStdString usage removed, everything moved into static class, some functions was refactored, some rewritten. \nMakefile updated. Need help on updating Mac projects.\n. @jmarshallnz Done + few more cosmetics.\n. Small correction for Linux (replace \"pop_back\" with \"erase\" for std::string). \"pop_back\" is part of C++11, but for it's available on MSVC C++98.\nTested build on Ubuntu v12.10 x32.\n. @jmarshallnz \nDone\n. @jmarshallnz \"Test\" corrected.\n. @jmarshallnz Done + rebase and squash\n. If raw result of some regex is passed as input.\n. Cleaning of input currently don't fix anything. It's just precaution.\n. Other fixes in 00a033d .\n1. utf8ToW was used wrong (we don't need to reverse anything!)\n2. ANSI version of GetFullPathName will broke path in non-ANSI filesystem\n3. No actual check is GetFullPathName really return something or return was not fit in to buffer\n1c14c3c , d74c6d9, 1f40cf0 replace big arrays in stack with CStdString (so alloc is used). Heavily using stack with 64 kilobyte array could potencially leads to stack overflow.\n. @wsoltys Commit removed.\nI can't switch to std::string here as it does not provide method for direct buffer manipulation. \nIt's just a part of my understanding of XBMC. :) I just want to fix obvious things.\n. @jmarshallnz \nAre there any defined limits for stack usage in XBMC?\nI thought that placing anything more than 10k in heap instead of stack is good and right coding style as extensive stack usage could produce stack overflow errors that can be hardly identified.\n. @jmarshallnz \nIsn't 32k too large? \nDefault stack size on Win32 is 1M. If 64k in stack is just fine, then we can have less that 15 steps deep calls of such functions. Moreover on OSX within non-main thread default stack size is 512k, so in case of 64k stack arrays we have limit of less that 7 calls.\nCommon recommendation is put everything more than a few kilobytes in heap.\nVS code analyzer complains about any function that puts more that 16k in stack.\nI think that if we can easily convert large variable from stack to heap, than we should do it. Am I wrong?\nAnd I want to fix some limit about stack variable, which is OK for XBMC (in all platforms), and not to buzz about this topic again.\n. @wsoltys Yes, I got it. :)\n@jmarshallnz About large stack usage... Check out:\n- CKaraokeLyricsCDG::cmdScroll, tmp\n- CZipFile::Seek, tmp\n- CSAPSessions::Process, data\n- CKaraokeLyricsCDG::Render(), pixelbuf\nIt's just some of them... :)\n. @jmarshallnz Yes, you are right. \nOK, I'll try to concentrate on more serious bugs/problems. :)\n. I'll update it today.\n. @jmarshallnz Rewritten.\nIf it's OK, I'll check other parts for double XML processing (like addons)\n. @jmarshallnz This can break other using of  CXBMCTinyXML, as code can expect that XML is already loaded and parsed if it's specified in constructor parameter.\n. And I see a lot of using of CXBMCTinyXML.\nIt's created and loaded several times on every visible windows transition, so 47ed046 and using of 99acb24 is highly valuable. Other code can be modified similar to 1be538e .\n. @jmarshallnz Yes, that's better way.\nAfter your fixes there is only one commit for optimization.\n. @jmarshallnz Was last commit wrong?\n. This will produce addressing of array outside array bounds on devices with 9 or more channels as layoutsByChCount is defined as layoutsByChCount[9][9] (or maximum for 8 channels).\nSomeone was confused by \"layoutsByChCount\" and \"AEStdChLayout\". \nI don't like hardcoded values too. We can use ARRAYSIZE for starting value in loop, but it's not clear for me why we don't use modes with less than 3 channels.\n. @DDDamian Updated, more fixes added.\nFix for layoutsByChCount now is in 4342769\n. Checked on several PCs. On some drivers just ignore speakers configuration (mask), but on others require exact match to report OK.\nI'll try to extend possible speaker configurations and check it all.\n. OK, but \"mask\" was used the same for any number of channels. :)\n. @DDDamian You must be talking about f554393, but \"mask\" is always the same, does not depend on number of channels, but depends only on uiChannelMask.\n. As WASAPI allow to use different number of output channels (and different channels) depending on what's required, it would be good to remember output format with supported channels configuration.\nSo we can output stereo stream as stereo (and it will be detected on amplifier as stereo and upmixed) as 5.1 stream as 5.1 stream (again it will be detected on amplifier).\nJust thoughts about future features.\n. I'm implementing more accurate detection now.\nWhile I'm doing this, I'd like to pay your attention that code in f554393\nDWORD mask = 0;\nfor (int c = 0; c < WASAPI_SPEAKER_COUNT; c++)\n{\n  if (uiChannelMask & WASAPIChannelOrder[c])\n    mask |= WASAPIChannelOrder[c];\n}\nis equals to simple\nDWORD mask = uiChannelMask;\n. @DDDamian Implemented new detection. Already detects more channels on Realtek.\n. See,\nif (uiChannelMask & WASAPIChannelOrder[c])\n  mask |= WASAPIChannelOrder[c];\nis equals to\nmask |= uiChannelMask & WASAPIChannelOrder[c];\nSo in end of the loop mask, we will have all bits on that is on in both \"uiChannelMask\" and in any WASAPIChannelOrder[c];\n. OK, I'll drop all cosmetics from this PR.\nThere are some commits for UTF-8 translation. Should I drop it too?\n. @DDDamian Done.\n. @DDDamian All done.\nCosmetics removed, all changes combined into separate commits. Each commit is itself complete. \n. @DDDamian Merge window is coming. :)\n. @DDDamian We are in merge window. ;)\n. @night199uk \nOK, but instead of dropping out some commits from this PR, I suggest to merge it if your PR isn't merged yet.\nI see no problem, if your PR will remove later some of this commits, but until this is valid with current master it's better to remove more know bugs now.\n. Should I really drop something from this PR?\n. @night199uk I see that your PR #1122 was merged.\nIt it time for this PR? Still need to remove something?\n. Old constant is wrong for sure.\nSee above: \"switch (flashattr.flashing &0x1c) // Flash Rate\" 0x1c = 0001 1100, old value in \"case\" was 0x11 (0001 0001)  but last bit will never be \"1\". \n. I was waiting for this question. :)\nNothing mysterious, just VS2010 Premium/Ultimate and VS2012 (even Express, but with reduced number of checks) - \"Run code analysis\".\nVS2012 display results more convenient, but VS2010 detects more problems.\nTry it yourself, you'll be surprised how many problems detected. Most popular - malloc/realloc return value is not checked for NULL.\n. @cptspiff  Should I split it to to PRs?\n. @cptspiff Updated\n. @jmarshallnz Done.\n. @elupus But we will load all file into \"data\", if xml is OK so 8 gig will not be loaded anyway and full size string will be allocated.\nIn normal situation we're working with correct XML file, but when using \"streamIn\", file is actually parsed twice.\n\"StreamIn\" isn't optimized for reading files, I'm working on solution with much more optimized base LoadFile instead of streamIn.\n. @wsoltys Do you mean part of code starting from https://github.com/xbmc/xbmc/blob/master/xbmc/guilib/Texture.cpp#L298 ? \nYes, idea is basically the same. And I'm sure it can be used in many more places in XBMC code. So OK, I'll move it to FileUtils.cpp and reuse it in CXBMCTinyXML.\n. Separated code change and cosmetics.\n@elupus Reason is old standard. Right now Side Left & Side Right used everywhere (DVD, BD, TV) instead of Back Left & Back Right in 5.1. That's current standard.\n. Some info: see AC3 standard http://www.atsc.org/cms/standards/a_52-2010.pdf , section 5.4.2.3, table 5.8\nhttp://msdn.microsoft.com/en-us/library/windows/hardware/ff537573(v=vs.85).aspx \nhttp://download.microsoft.com/download/9/c/5/9c5b2167-8017-4bae-9fde-d599bac8184a/SpkrConfig5.docx\nOr just look at defs of KSAUDIO_SPEAKER_5POINT1_SURROUND in KsMedia.h\nYou can also check http://www.dolby.com/us/en/consumer/setup/connection-guide/home-theater-speaker-guide/index.html\nAs you can see for 5.1 there are no back left and back right, but side left and side right.\n. More nice info: http://www.thx.com/consumer/home-entertainment/home-theater/surround-sound-speaker-set-up/\nhttp://www.audioholics.com/tweaks/speaker-setup-guidelines/home-theater-speaker-layout-an-essential-guide \n. @gnif The difference between 5.1 and 7.1 is back speakers; side speakers (no matter how we call them) are on same positions in 5.1 and in 7.1. In current XBMC code difference between 5.1 and 7.1 is side speakers, that's wrong for sure.\nSide speakers is explicitly defined in AC3 standard. And when playing any DVD, BD or mkv with 5.1 AC3 on 5.1 speakers, we must get one-to-one matching. Right now 5.1 AC3 is remixed in channels.\n. @alanwww1 OK, I'll do some tests.\n. Done tests with MPC-HC, AC3Filter, FFDShow, Windows Media Player 11, PowerDVD 12, WinDVD 11.\nResults are very inconsistent, especially with opensource products.\nLooks like noone know how to implement it right so in one part of project something implemented in one way, in other part - in other way. \nIf throw away most inconsistent results, than AC3 5.1 and DTS 5.1 in 7.1 systems mostly routed to side speakers, AAC 5.1 in 7.1 is mostly routed to back.\nIn case of 5.1 speakers setup, even 5.1 streams are remixed. In most cases 7.1 side speakers is routed to front and surround, and back speakers is routed only to surround. (for 5.1 speakers setup)\nMore results tomorrow. It's 1am here. :)\n. Agree with @jmarshallnz and @DDDamian.\nSome conclusions:\n- AC3 standard defines surround speakers as side speakers (not back) (here, section 5.4.2.3, table 5.8).\n- Commercial players, that pretend to strictly follow standards, play AC3 and DTS 5.1 tracks on side speakers.\n- 6.1 = 5.1 + back center, 7.1 = 5.1 + back speakers. (here and here)\n- Microsoft screwed things up by ambiguous definitions. FL + FR + FC + LFE + BL + BR should be interpreted by MS decision as FL + FR + FC + LFE + SL + SR (More info here). Moreover, MS require sound driver to play 5.1 streams on 7.1 side channels even if driver is requested to use 7.1 back channels (More info here). In the same time Windows Control Panel show 5.1 config as back speakers and internally interpret it as side speakers. (More info).\n- Most of the users will be happy if 5.1 streams will be played on their 5.1 systems without remixing of channels.\n- XBMC already correctly detects channels in AC3 and DTS streams.\nFinal conclusion:\nTo get code working right we need to define correct 5.1 speakers setup as suggested in this PR. Than 5.1 context (that already correctly detected) will be played correctly. If we leave speakers setup as is, than we need some kind of hacks to remap properly detected side channels to back channels.\nIt's also a good idea to implement an option in settings to use side speakers as back speakers for users who willing to place speakers really behind the listener. If I'll have time, I'll implement it.\nTo fully understand Windows situation with back and side speakers, I suggest following reading:\n- http://msdn.microsoft.com/en-us/library/windows/hardware/gg463023.aspx\n- http://msdn.microsoft.com/en-us/library/windows/hardware/ff537573.aspx (quotes: \"Windows ... do not define a new 5.1 format descriptor to distinguish the 5.1 side-speaker configuration from the 5.1 back-speaker configuration\", \"vendor should ensure that the two side-speaker channels in the 5.1-channel stream play through the side speakers rather than the back speakers\", \"when playing content authored for the \"7.1 home theater speakers\" configuration through a 5.1 speaker configuration with side speakers, the channels for the 7.1 side speakers most naturally map to the side speakers in the 5.1 configuration\")\n- http://msdn.microsoft.com/en-us/library/windows/hardware/ff537511.aspx (quotes: \"Although having only a single 5.1-channel format descriptor avoids confusing users, it does require hardware vendors to remember to interpret the 0x3F channel mask to mean that channels 5 and 6 are assigned to the SL and SR speaker positions instead of the BL and BR positions.\", \" if the system mixer produces a 5.1-channel output stream, the mixer always sets the stream's channel mask to 0x3F. The system mixer behaves this way even if it receives a 5.1-channel input stream with a channel mask of 0x60F. With this behavior, an audio driver never receives a 5.1-channel stream with a channel mask of 0x60F from the mixer.\")\n- http://msdn.microsoft.com/en-us/library/windows/hardware/gg463015.aspx\n. It's also a good idea to implement an option in GUI to get 5 channels content always played on 5 speakers setup without remuxing, not matter now content defines speakers placement.\n. @DDDamian Small addition.\nProper mapping for AC3 5.1 and DTS 5.1 is FL FR C LFE SL SR. \nThere are some files with explicitly defined FL FR C LFE BL BR.\nIn any case we should play both types on 5.1 setup (no matter how system report it) as 1:1.\nBut in case of 6.1 and 7.1 system we should set output to configuration, specified in file.\n. And again back to this PR.\nSee my coments here: https://github.com/xbmc/xbmc/pull/1490#issuecomment-9003694\n. @DDDamian It's in my to-do list. :)\nBut while it isn't implemented yet, will we push this PR to master?\n. Did you mean move to per-device setting?\n. @opdenkamp Perfect! This is exactly what this PR is doing.\n1. Removed global \"iMON device\" setting\n2. Added setting to device to disable joystick (default is ON)\n3. If device is present and device setting is ON, than GUI setting for joystick is disabled.\n. And thanks to flexible peripheral framework, device setting will appear only on win32 platform.\n. @opdenkamp Can I improve it somehow before close of merge window?\n. @opdenkamp Done + rebased.\n. @opdenkamp As strings are already translated, should I pick other string ID?\n. @opdenkamp Besides translated strings, is all other code OK?\n. @opdenkamp Nice!\nMay be it's faster and better to pick other ID for string?\n. @opdenkamp Done.\n. @davilla This is a fix for iMON/joystick fix (PR #1189).\nIf someone have two sets of iMON devices: one with buggy firmware and another with proper firmware, than with this fix it's possible to run single installation of XBMC on both hardware sets. But it's definitely rare situation.\nAnd, as @opdenkamp pointed, settings introduced in #1189 (post-Eden) could confuse users.\n. @Voyager1  Do we still support win2k??\n. According to this KB article, support for Pre-WinXP SP2 is already broken.\n. Corrected typo in comments.\n. @Voyager1 as you requested. :)\n. @Voyager1 Right.\nCorrected.\n. @DDDamian Yes, this it needed for WASAPI code. I hope that I'll publish soon initialization changes.\n. @DDDamian To see how \"best match\" algorithm works, just allow usages of \"double\" in as.xml. As most hardware don't accept float and XBMC try to send float, you will see sequence of initialization attempts. \n. @DDDamian Opening statement just mean that I wish to do more cleanup and change \"goto\" to more c-style if-else-while-return...\n. More info about f4deec9. \nFirst of all I move try and initialization code to same place. Sometimes card can't initialize with same parameters that was OK for IsFormatSupported. For example Creative cards report support for 48000/24-bit/5.1,but fail to use it. Now it's possible to try something else in that case.\nNow, if format isn't supported we try following:\n1. Try same freq, channels, but with bit-wider formats. For 16 bit we will try 24 bit, 32 bit and (if not disabled) even float and double. This is totally lossless (or almost lossless) and most preferred conversion.\n2. If requested format don't have LFE, but user speakers configuration support LFE, that try to add LFE. This is absolutely lossless as now upmixing is needed in this case.\n2.1. Try format + LFE with bit-wider (16->24->32..)\n3. If requested format have SL SR but not BL BR, try to use BL BR instead of SL SR (or vice versa - SL SR instead of BL BR). This is close configurations and (soon) should be not up/down mixed.\n3.1. Try side-back with bit-wider\n3.2. Try side-back with LFE and bit-wider\n4. Try full user speakers setup instead of format specified. As requested format contains only channels that user have, no upmixing should be required.\n4.1. Try use speakers with bit-wider.\n5. Try multiple of requested sample frequency. 22050->44100->88200... This is a almost perfect conversion with less possible harmonic distortion. For each frequency try bit-wider formats.\n5.1. Try format + LFE with multiple of frequency and bit-wider.\n5.2. Try side-back with multiple of frequency and bit-wider. Than try side-back + LFE with multiple of frequency and bit-wider.\n5.3. Try user speakers with multiple of frequency and bit-wider.\n6. Try format with standard known sample rates, that higher requested. This is not ideal transformations, but using higher frequency is better possible solution. For each frequency (sample rate) try bit-wider.\n6.1. (Need to be added, not implemented now). For each frequency try +LFE, side-back, user speakers.\n7. Try formats with lower bit resolution (float->32, 24->16).\n7.1. For each format try +LFE, side-back, user speakers, multiple of frequency, standard frequencies but do not try bit-wider (as all bit-wider formats was already tried).\n8. Try format with standard known sample rates, that lower requested. For each sample rate try wider bits.\n9. Try formats with standard known sample rates, that lower requested and with lower bit resolution (float->32, 24->16). For each format try +LFE, side-back, user speakers, multiple of frequency, standard frForl equencies but do not try bit-wider or higher frequency (as all bit-wider and higher frequency formats was already tried).\nSo we try all possible options from best-match to worst case.\n. @DDDamian The longest part of format checking is writing to log.\nEven before I correct IsCompatible, Initialization was called twice on beginning of playback (once on start and immediately again as format was signaled as incompatible) and even with allowed float for PCM (so a lot of combinations was checked) there was not noticeable delay.\nUnfortunately we can't check all possible combination of parameters. Separate check for frequencies, data formats and channels is not enough.\nFor example on Creative card stereo can be played back as 16-bit, 24(3), 24(4) and 32 on any frequency: 44.1, 48, 64, 88,2, 96. But 5.1 can be used only as 16/48 or 24/96 and fail on 24/44.1, 24/48 and on 16/44.1\nI see the only possible way to avoid a lot of checks, this is to build a map of requested and resulted format. But we will need to reset this map with every user sound configuration change.\n. @DDDamian Thanks for positive response!\nActually engine already stores all bitdepths and sample rates in CAEDeviceInfo.\nI suggest to use CAEDeviceInfo& instead of std::string &device. It's easily to adapt current code for this.\nAnd I'd like to extend CAEDeviceInfo a little.\nIs it worth to try?\n. Already in progress.\nBasic idea is in 4ce647de03368b629cb848d59200a1656aa915ba \n. @gnif As you requested.\nFixed compiler warning in meantime. :)\n. It's not a problem. If other PR will be merged, I'll rebase this one.\n. What's \".goutputstream-ISUQQW\" file in this PR? Is it really required?\n. @Memphiz Minor bug was introduced with this patch. See my comments in code.\n. I thought that milliseconds will overflow unsigned int every 49 days on any platform.\nOr int isn't 4 bytes on some supported platforms?\n. @DDDamian If m_softSuspendTimer is set just before wrap and nothing is played than CoreAudio will remain only soft suspended (until next sound playback). Am I wrong?\nOther case: if current time is just before wrap when setting m_softSuspendTimer, then curSystemClock will be > m_softSuspendTimer at the same moment so AE thread will be hard suspended immediately. \nSolution is simple: use EndTime class for m_softSuspendTimer.\n. Nice.\nHope any kind of error checking will be implemented in new system. :)\n. @cptspiff this change will not break anything and fully backward compatible. This is addition to https://github.com/xbmc/xbmc/pull/1324\n. @akva2 Actually MSVC 2012 is not fully C++11 compatible, but it has many C++11 restrictions.\nI did several builds with MSVC 2012 (with v110 toolset) in last year and didn't notice any problem.\n. @MartijnKaijser Is it handled well by translation system?\nDone.\n. ",
    "RobertMe": "Hi,\nAs contributor to the xbmcremote app for MeeGo I think it's a good idea to add a SendKey/SendText method. And I have a request in these. Would it be possible to add an Application.RequestKeyboard (or something along those lines) notification? So when the user selects a text input field in XBMC and the (virtual) keyboard pops up it also sends a notification to the clients, so a client would be able to open the virtual keyboard(/show a text input field, when the device has a hardware keyboard) so the user could enter the text in there and the entered text could be send to XBMC (using SendText, would probably be better than SendKey) and the virtual keyboard in XBMC maybe automatically closes when it receives the SendText command. This keyboard integration between XBMC and a remote app could further smoothen the user experience in entering text. If possible I think a \"title\" of the input field (as displayed on XBMCs virtual keyboard) and a type (text, number) should be the parameters of this notification.\n. Great. But having to send OK afterwards indeed seems strange. Would it also be possible to send the heading (m_strHeading) as parameter of Opened? So the client can also display the title. And the same support in, I think, CGUIDialogNumeric would be awesome (and pass through the mode). So the client could decide to display a numeric keyboard instead of the qwerty keyboard, or a date and/or timer picker.\nLooking at how easy you added the notification I might even try to implement this myself.\n. Closing would be sending \"OK\" right? So SendText could execute OK afterwards automatically. Instead of doing some specialized close handling. And it could be added as optional bool ok = true parameter to SendText.\nAnd the numerics could also be send as GUI_MSG_SET_TEXT and parsed internally by DialogNumeric. So the JSON handling could keep sending the SET_TEXT message, and doesn't need to know about which mode the dialog is in. But of course the SET_TEXT handling should be written first. The most basic handling would be to loop over the input string (one char at a time) and call OnNumeric one by one.\n. Great :) Will try to get it implemented in the MeeGo xbmcremote app and report back on how the API works. I think only date, time and ip will be difficult as they need to be send as one long string with the numbers without delimiters. But shouldn't be a to big issue.\nBut why aren't you sending \"title\" in CGUIDialogNumber? As heading seems to be present there also. Is Init and thus the notification getting called before the heading is set?\n. Don't know if I'm to late with this question as it's already merged, but I started implementing it on the client side and have a small extra request. Would it be possible to also send the value in the OnInputRequested announcement? For example some/most settings already have a value set and when the virtual keyboard opens this value is also already set. So it would be great if this value could also be preset on the client which receives the notification. So the user is able to edit the value, instead of having to type it over and only changing a small part.\nEdit:\nDialogKeyboard-s hiddenInput flag (for passwords) would also be appreciated as being part of OnInputRequested.\n. Distinguishing between keyboard and numeric can be used to set the the input method hint on the mobile phone (which validates the input and also changes the keyboard between qwerty and numeric), and on a text field it's also possible to set the echo mode to normal or password. Haven't tested if they could be combined but don't see a reason why it shouldn't be possible.\nI'm also wondering if DialogNumeric distinguishes integers from decimals. So if only digits can be inserted or also a decimal dot. As the input method hints also has digits only and numeric.\nI also discussed SendText with the main dev. of xbmcremote for MeeGo. A good point he made in still using the old method of sending text (which in MeeGos app is a legacy command) and possibility to send only a char is fast scrolling through a list. So when typing for example a \"p\" the active list scrolls to the \"p\". So maybe the list control should also be able to handle the SET_TEXT message and scroll to the first letter of the send text (or maybe even the best match of the send text, so when sending \"abc\" and there isn't an item starting with abc it selects \"abb\", so the last item before where the match would be).\n. @Montellese \nUnsure about what you would like to do on the JSON side of things (only adding/extending the PVR API, or internally changing how JSON-RPC works?) But I'm already doing some work on the JSON API for PVR (current code isn't mine). @opdenkamp already told me he wouldn't like to include my work right now (in this PR). But I'm continuing development on it and already did a few things differently (most PVR methods which are in this PR should be part of Player IMHO, for one). One of the changes I already did was adding Player integration (https://github.com/opdenkamp/xbmc/pull/626) and currently I'm working on \"read\" support, so things like PVR.GetChannels etc.\n. Personally I don't like the PVR.ChannelUp/Down(/Switch) methods. I would rather like to see those implemented in Player, where there already are GoNext, GoPrevious and GoTo methods. These changes are also part of the PR I send you on your fork (https://github.com/opdenkamp/xbmc/pull/626). I will see if I can finish some last pieces on the TV/EPG part, transplant the branches to mainline and send a PR for them.\n. I know, but this would be the time to break backwards compatibility I guess. So merging it in now and removing it before the Frodo release would just add to the confusion. Currently it already is left out, so not adding it back (or adding it back, and leaving it in) would IMO be the best choice.\n. Montellese, ChannelSwitch/Up/Down are indeed meant to be replaced with Player.GoTo/Previous/Next from my PR. I think RecordCurrentChannel (or whatever it is called) could also be moved? I will comment on my PR (opdenkamps fork) later today. As I just booted my computer since Friday, so have some reading up to do :)\n. When the users opens the virtual keyboard you'll receive a notification (Input.OnKeyboardRequested if I remember correctly). One of the parameters the event has is the current value of the keyboard. So when the user has to correct a mistake you can still display the old value in the edit box. And besides that, nothing prevents you from sending the full text every time the value in the edit box changes. You'll just have to send the \"done\" parameter as false (otherwise it closes XBMCs virtual keyboard)\n. ",
    "maysl": "I'll return with the visualization.fishbmc folder tree shortly ;)\n. Should be quite stable now. Need someone to port this to DX, need a hint on how to port to GLES\n. The german filenames come from the standalone visualizer that fishBMC was forked off. But other than the word \"fische\", nothing is in german.\n. Sorry, stupid mistake. Deleted and recreated the branch and don't know\nhow to inform the PR...\n. you are right. I'll fix it.\n. No, a different stupidity ;)\nI'll throw out the merge commit.\n. - I can confirm the viz works on Linux 32/64 and OSX.\n- Windows is not supported. Porting would be a trivial joke for anyone who knows how to draw a textured quad in DX. I just don't have a Windows machine to develop on.\n- An icon.png is included. Is it in the wrong place? (/addons/visualization.fishbmc/icon.png)\n- Squash done.\n. You are absolutely correct as far as package installs are concerned.\nHowever, there are other ways of installing binary addons (manual and addon repository). In these cases, it is probably much more user friendly to have both libs in one package.\nThe systemlib-bar.so.? problem can be addressed by static linking and compiling on a safely old system. I have done this before for the fishBMC visualization addon, and it worked just fine. But I always had to trust the user to download the correct version.\nBut - considering the fact, that I am probably the only developer to profit from the change - and not for long, as I really hope fishBMC gets pulled into xbmc - the benefit of this feature is probably negligible.\n. ",
    "laviddichterman": "a quick browse would have shown that i should use trac to file this bug. sorry\n. ",
    "ybart": "Hope this will soon be merged in XBMC master branch ! Thanks for this feature.\n. ",
    "Schischu": "Sry, the second commit should not be part of this pull request.\n. Looks good. Thx. :-)\nNow I can create my next patches, have quite a lot. :-|\nAnd this time I will use branches before creating pull requests. ;-)\n. > squash please\n\nsquash what?\nDo you meen something like this: ?\ngit rebase --interactive HEAD~2\nalso, it's not mysql, it's mysqlclient. you'd run the db on a more powerful device.\nHm yeah but have you tried porting it to a new cpu arch and compiling it from scratch, just awful. I mean I want to run xbmc on my system and dont want to invest to much time in the dependencies.\nMaybe I will do this sometime in the future but for now I am quite happy with sqlite.\n. Hope I squashed it correctly. :-)\n. Good point, \nI just checked,\nsystem.h is included in Database.cpp through Util.h.\n. Why should it? mysqldataset.h is only included by Database.cpp and mysqldataset.cpp.\nAnd for mysqldataset.cpp it is only included if the define is set. \nAnd as Database.cpp is compiled before mysqldataset.cpp the define is still defined.\n. I pushed an updated version which is I think a more elegant solution than the many ifdefs.\n. I see, commited a fix for xcode build.\n. Thanks :-)\n. Hm, I think the killer argument is shader. There is no way to support such a feature on the current chip.\nBut ESv1 is be pretty similar to ES2 with the only real differences is that there are no shaders and therefore the loading and drawing of textures is different. Currently I wrote around each shader call a #if HAS_GLES == 2\nand replaced the drawing functions in TextureGL GUITextureGLES and GUIFontTTFGL.\nI will just open a pull request and then you can see what changes would be necessary to add ESv1 support, then you can better decide if it is a reasonably effort to maintain this.\n\nBut anyway, ESv1 is easy. The hard part is that for videodecoding the frames are directly rendered into the videolayer which is below the framebuffer. So the way to display video is quite different to the way it is currently handled.\nI still have to figure out how I can merge this back cleanly.\n. That is the current state of my port\nhttp://www.youtube.com/watch?v=wByCsZzr6sA\nI would say that for the current progress its already quite usable.\n\nAs for video decode, we have a 'bypass mode' flag in the gles renderer for decoders that handle their own presentation on a separate plane.\nThanks I will take a look at this mode.\n. @theuni : You wrote \"As for video decode, we have a 'bypass mode' flag in the gles renderer for decoders that handle their own presentation on a separate plane.\"\nCan you elaborate this ? I tried setting\n\nif HAS_GLES == 1\nm_renderMethod = RENDER_BYPASS;\nelse\nm_renderMethod = RENDER_GLSL;\nendif\nin the LinuxRenderGLES constructor. But the experience I get is fast switching between a black screen and the old ui.\n. ",
    "paulvt": "Filed at: http://trac.xbmc.org/ticket/13115\n. ",
    "tsg-": "As an additional note, I did attempt the port from GLX to EGL (adding VAAPI support to LinuxRendererGLES.cpp similar to that in LinuxRendererGL.cpp), and the port seems mostly straight-forward except for the CLinuxRendererGLES::Create/Delete/UploadVAAPITexture() routines.  Thanks folks.\n. Ok - this is more of a feature request against which I was looking to post patches - I will use trac to do that, no problem.  Thanks.\n. ",
    "dharanendiran": "I am cross compile the  XBMC to SH4 based on following URL:\nhttps://github.com/Schischu/xbmc/commit/37777e46b0c3f17a76b5af519b6a5ba80945a39d\neven though it is not compile to SH4. Any other patches i have to apply?\n. ",
    "adam-aph": "ok, added a lot of cosmetics ;)\n. > > > And you should consider to prepare the needed documentation in the wiki for the new advancedsetting.\nno problem - let me know in what form do you need it (email or comment here, or... )\n\n\n\nI'm not sure if this approach will disturb the refreshrate adaption.\n\n\n\nit searches for the best resolution and then it looks for refreshrate closest to the original one. if the original screen is 1920x1080@24.00Hz and say source is 624x352, then it is finding first 640x480@70.00Hz, then 640x480@60.00Hz and stays with 60Hz as there is no more good dimensions.\nAnyway, this automatic search is first approach to this feature. It can be heavilly parametrized, I can imagine for example that instead of finding the best match, we can define several dimension windows, or create rule that all SD contents always falls into 800x600@60Hz etc.\nHere actually it will be good to have advise from more experienced users. Maybe this should just wait for feedback from others, for now this automatic setup seems to be good starting point.\n. > > > If you use it as bool\nwell I rather think it will have more values in near future (see my previous comment). but before this will be extended with other options I would rather wait for feedback from users, to see where is the immediate need to enhance it\n\n\n\nIf refreshrate adaption is turned on - only match resolutions which have the exact same refreshrate\n\n\n\nyeap, makes sense, I will update the code\n\n\n\nIs it really a good thing to try to find a \"close to\" - native resolution? Or should we really try to match to the EXACT native resolution?\n\n\n\nI do not think there is other option here - see examples in the initial post, most of SD resolutions are something like: \n608x336, 608x256, 624x352 etc. These resolutions are not what the receiver/video card can support.\nas the reference, here are modes supported by my receiver:\n1920x1080 @ 60.00 - Full Screen (12)\n1920x1080 @ 60.00Hz (13)\n1920x1080 @ 50.00Hz (14)\n1920x1080 @ 30.00Hz (15)\n1920x1080 @ 25.00Hz (16)\n1920x1080 @ 24.00Hz (17)\n1680x1050 @ 60.00Hz (18)\n1440x900 @ 75.00Hz (19)\n1440x900 @ 60.00Hz (20)\n1440x576 @ 50.00Hz (21)\n1440x480 @ 60.00Hz (22)\n1360x768 @ 60.00Hz (23)\n1280x1024 @ 75.00Hz (24)\n1280x1024 @ 60.00Hz (25)\n1280x960 @ 60.00Hz (26)\n1280x800 @ 60.00Hz (27)\n1280x720 @ 60.00Hz (28)\n1280x720 @ 50.00Hz (29)\n1152x864 @ 75.00Hz (30)\n1024x768 @ 75.00Hz (31)\n1024x768 @ 70.00Hz (32)\n1024x768 @ 60.00Hz (33)\n800x600 @ 75.00Hz (34)\n800x600 @ 72.00Hz (35)\n800x600 @ 60.00Hz (36)\n720x576 @ 50.00Hz (37)\n720x480 @ 60.00Hz (38)\n640x480 @ 75.00Hz (39)\n640x480 @ 73.00Hz (40)\n640x480 @ 60.00Hz (41)\n576x576 @ 50.00Hz (42)\n576x480 @ 60.00Hz (43)\n411x576 @ 50.00Hz (44)\n411x480 @ 60.00Hz (45)\n360x576 @ 50.00Hz (46)\n360x480 @ 60.00Hz (47)\n288x576 @ 50.00Hz (48)\n288x480 @ 60.00Hz (49)\n\n\n\nSince you changed your commit message for all 3 commits to the same - you can just squash all your commits down to 1 when everything is in place at the very end of this (no need to have 3 or 4 commits for this one feature).\n\n\n\nsure, will do\n. ok, I merged it and changed also the setup. now the advancedsettings.xml setup looks like this:\n```\n\n...\n    \nfalse\ntrue\n0\n0\n\n...\n\nwhere:\n          - controls if the fps can be overridden or not (default is 'false')\n    - controls if the output should be zoomed when upscaled (default is 'true')\n         - controls the minimum width when searching for closest resolution (default is '0')\n        - controls the minimum height when searching for closest resolution (default is '0')\n```\nthe < forcewidezoom > option requires some explanation. when < nativeupscale > is enabled, the assumption is that finally the output will be upscaled by external device to some high resolution (like 1920x1080). therefore we want XBMC to generate output filled with the video contents as much as possible (minimize black bars), as it will be stretched by the receiver anyway. the WideZoom option works perfect for this, so zooming can be forced here for SD contents, before receiver will finalize the picture. After all this looks pretty ok.\nI tested these changes on the Linux version of xbmc.\n. I think the point is here: http://www.marvell.com/digital-entertainment/qdeo/\nYou would need to see the difference on the screen, otherwise the discussion is pointless ;)\n. well, not really. the xbmc is always resizing the image, so the error is here already. resizing to smaller dimension is however creating smaller image errors, and then the processing chip enhances it even more. so at the end the image looks much better than original image fully processed by xbmc.\nwithout initial resizing you will see on the screen big black bars on the half of the screen from all four edges.\n. I think the height is bigger problem than width, as usually SD contents fits very well either to 640 or 720 wide. Anyway all these examples which I tested above were looking much better with initial WideZoom scalling. Source 720x304 on resolution 720x576 gets almost 50% of horizontal black bars, and when upscaled by receiver to 1920 wide it looks like 70% of the screen is black. really ugly. \nwith initial WideZoom upscaling it looks much better, the picture dimensions are similar to the original xbmc dimensions.\nwell, yes, all this makes sense only for SD enhancements, the HD contents does not really need all this. the proposed patch will not affect the HD contents though.\n. yeah, I was considering it initially. but at the end I think it makes more sense to keep it separately. The refresh rate adaption works for all your contents (HD, SD, whatever) - it is system wide parameter. When enabling < nativeresolution > adoption it is more convenient to keep all its options in the same place (override fps or not, force wide zoom or not etc). at least that was my thinking.\n. actually the intention was to apply this check only if both values are set. I'm not sure if enabling it when only one size is set (width or height) is practical?\n. updated\n. > > > If xbmc does any other scaling its quite pointless.\nwell, I do not have any good argument for upscaling, except what I saw on the screen: http://forum.xbmc.org/showthread.php?tid=64139&pid=1136328#pid1136328\n. ok, I corrected it according to suggestion made by jmarshallnz, now the image is streteched to aspect ratio of the final screen (most probably 16x9). The setup changed a little:\n```\n\n...\n    \ntrue\ntrue\n1920\n1080\n0\n0\n\n...\n  \nwhere:\n          - controls if the fps can be overridden or not (default is 'true')\n    - controls if the output should be stretched to final screen dimensions (default is 'true')\n            - controls the destination width to which the source will be scaled by AVR (default is '1920')\n           - controls the destination height to which the source will be scaled by AVR (default is '1080')\n             - controls the minimum width when searching for closest resolution (default is '0')\n            - controls the minimum height when searching for closest resolution (default is '0')\n```\nI tested briefly these changes on the Linux version of xbmc. I would need to test it a little more though.\n. ok, I'm done. It works great for me.\nThe setup changed a little again:\n```\n\n...\n    \ntrue\ntrue\n1920x1080\n0x0\n0x0\n\n...\n  \nwhere:\n          - controls if the fps can be overridden or not (default is 'true')\n    - controls if the output should be stretched to final screen dimensions (default is 'true')\n              - controls the destination resolution (width x height), to which the source will be scaled by AVR (default is '1920x1080')\n            - controls the minimum acceptable output resolution (width x height), which will be generated by xbmc (default is '0x0' - not active)\n            - controls the maximum source resolution (width x height), which will be handled by native scaling (default is '1024x768', '0x0' disables this check)\n```\nI tested these changes on the Linux version of xbmc. \n. Do you mean it should disable it (VS_DEINTERLACEMODE_OFF) each time when nativeupscale is activated? Or only do this for specific resolutions or fps? \n. ok, I do not know xbmc good enough, but after quick check in the code it looks like the information if the display is interlaced or not is taken from the display itself. \nso I'm not sure if this is applicable here - I do not know if it makes sense for the AVR to provide interlaced input mode (between xbmc and AVR). At least on my AVR I can see following modes (see above):\n720x576 @ 50.00Hz (37)\n640x480 @ 60.00Hz (41)\nand if you do not use AVR it seems that xbmc upscalling is better than average TV Set upscalling (at least if you do not use Kuro), so this might be useless feature...\n. btw. what is going on with this request? are you going to close it as n/a, merge it, waiting for anything? just curious...\n. @jpsdr \nI think you are missing the point - using this patch without AVR in between is kind of pointless.\nPlease also try to read my previous comment here:  https://github.com/xbmc/xbmc/pull/1096#issuecomment-6754239\n. ok, not sure if I follow, but this patch is not altering the screen modes available on your display. Try to use following setup changes:\n= to make sure that native scalling will never change your preferred fps:\n<overridefps>false</overridefps>\n= to make sure that native scalling will be deactivated for sources with higher resolution than 800x600:\n<maxsrcres>800x600</maxsrcres>\n. ok, got it\nI think that if you will allow for fps overriding, then for 1280x720@23.976 the code will find 1280x720@50.00 as the best fit from the list of available resolutions\nIf you disallow fps overriding and will insist to have 23.976fps then it will not find anything suitable and will stay with whatever xbmc set initially for this source\nsee also my first post in this thread - the patch shows in the log what was the initial resolution, what is the source resolution and what was finally decided - so the best what you can do is apply the patch and post here snippet from the log ;)\n. ok, I did not realize that multiple fps is better than closer fps, but I think you are right, these two lines of code should do better.\n. this should do the same, but seems to be simpler:\n```\n   for (size_t i = (int)RES_DESKTOP; i < g_settings.m_ResInfo.size(); i++)\n   {\n\n nfRD = g_settings.m_ResInfo[i].fRefreshRate / fOrgRefreshRate; // refreshrate fit\n\n\n fD = (iWD * 1.0) + (iHD * 1.0);                            // default weights for width and height resolution\n\n if (!bOverrideFPS)\n {                                                          // if original fps should be preserved, accept only these \n   fRD = (fRD == 0.0) ? (0.0) : (-1.0);                     // resolutions where refreshrate is the same\n }\n else\n {                                                          // preferred multiple fps     \n   fD += fRD * ( (abs(nfRD-floor(nfRD+0.5)) < 1e-6) ? 10.0 : 100.0 );\n }\n\n if( fRD >= 0.0 && iWD >= 0 && iHD >= 0 && fD <= fODist &&\n     g_settings.m_ResInfo[i].iScreen == iOrgScreen ) \n {\n   m_resolution = (RESOLUTION)i;         // if we are here, then this resolution is closer to \n   fODist = fD;                          // the source parameters than previous one\n }\n\n}\n```\nit searches through all fps and prefers these which are lowest multiply, but if will not find anything, it will stay with the closest fps. \nmakes sense?\n. I completely agree, and I think that the code agrees either ;)\nassuming that we have poor SD of 680x256@30 and following available resolutions:\n800x600 @ 60.00Hz (36)\n720x576 @ 50.00Hz (37)\n720x480 @ 60.00Hz (38)\n640x480 @ 75.00Hz (39)\nthen the code after last fix should chose 720x480@60 and with the original design it will take the lower fps (50).\nIf you made this patch already, is this feasible for you to add that fix and see how it behaves on some other sources?\n. if you deactivate fps override then the code will search for setup with exact fps as source (30 in this example) and probably will find nothing, so the original xbmc setup will remain. \nI think this is what is expected in that case?\nHere are some examples in case when the fps override is allowed and source is 680x256@30:\nEDIT: corrected calculations (again)\n1) 720x576@50\nfD = 720-680+576-256=360\nfRD = 20\nnfRD = 1.66666\nabs(nfRD-floor(nfRD+0.5)) = 0.4444\nso fD = 360 + 20*100 = 2360\n2) 720x480@50\nfD = 720-680+480-256=264\nfRD = 20\nnfRD = 1.66666\nabs(nfRD-floor(nfRD+0.5)) = 0.4444\nso fD = 264+ 20*100 = 2264\n3) 720x480@60\nfD = 720-680+480-256=264\nfRD = 30\nnfRD = 2\nabs(nfRD-floor(nfRD+0.5)) = 0\nso fD = 264+ 30*10 = 564\nthe lowest fD wins, so it will be case 3) in this example.\n. sorry for calculation mistakes, corrected now\nregards fps override - I think I would disagree here, this option allows user to stay with preferred fps no matter what the code thinks would be better\nregards other calculations - my point is that the original code works simple - it is just the matter what weights are assigned for particular screen parameters - currently it considers the lowest screen dimensions as the most important factor, then fps which should be lowest from multiply of available fps\nso I think it makes more sense to work on proper weights for these parameters to achieve desired result, than embed more logic into it - but of course this is just my opinion\nsee here for all modes supported by my AVR: https://github.com/xbmc/xbmc/pull/1096#issuecomment-6502297\nI'm not sure if this is common, maybe you can post here modes supported by your AVR? I'm trying to understand if we are trying to fight with ghosts, or there are AVR's which supports fps like 59.94 or 29.97?\nanyway with these modes which my AVR supports, for the example source 680x256@29.97 the code would chose 720x480@60 which I would consider as not so bad choice.\n. ups, missed it\nok, looking again on your examples I can see that the code should prefer multiply of fps regardless of the distance to the source fps, although take the lowest one.\nalso \"punish\" more the case when fps is not multiply of source fps\nso changing that line: fD += fRD + ( (abs(nfRD-floor(nfRD+0.5)) < 1e-6) ? 10.0 : 1000.0 );\nwould change these calculations to:\na)\n264+0.03+1000=1264,03\n264+29.97+10=303,97\n824+0+10=834\nwhich is 720x480@59.94\nb)\n264+0.03+1000=1264,03\n824+29.97+10=863,97\n2744+0+10=2744\nwhich is 1280x720@59.94\nand for my original examples:\n1) 720x576@50\n360+20+1000 = 1380\n2) 720x480@50\n264+20+1000 = 1284\n3) 720x480@60\n264+30+10 = 304\nso it is still good\n. Sorry dude, I suggest that you start reading comments from at least this one: https://github.com/xbmc/xbmc/pull/1096#issuecomment-9951008\n. ok, no offense ;) I think it would be good to include it into the main xbmc codeline, so people can actually use it and have better understanding if/what needs to be changed. \nor improve it and then include into xbmc\nendless debates what is better or worse are pointless for me if you cannot see it on your home screen ;)\n. ok, what do you mean by \"native image resolution\"? see examples from the beginning of this thread, say for SD 720x304 what would be native resolution for you?\n. the iteration is there already\nyou can disable any scaling by setting < correctpixelratio > to false\nyou can disable any fps overriding by setting < overridefps > to false\nbut if you can make it simpler - go for it, anything available in the mainline is better than nothing, controversial or not ;)\n. well, guys, to be honest I'm not following your hesitations \n- it needs to be enabled by advanced settings (on the purpose), so it will not create massive headache in any way, until somebody will start playing with it\n- no doubt it is not perfect and for sure can be improved - but in my opinion than can be done when people will start testing it with different sources / hardware and will fall eventually into some real issues\n- the current code is for me as simple as it was possible - if you see any specific thing which should be added/changed then name it, because requirements called \"simpler\" or \"non-controversial\" are hard to implement ;)\n- so if I'm the only one seeing value in this patch maybe just forget about it\n. @elupus: \n\n\n\nJust looks overly complex. I don't get why we need so much configuration.\n\n\n\noverridefps             - you may want to stay with your preferred fps (24fps?) so disable ovverriding\ncorrectpixelratio     - you may hate any kind of stretching, so disable it\ndestres                  - there is no way to find out what is the final resolution (not between xbmc and AVR, but between AVR and TV) - so it needs to be provided here\nminoutres               - you may want to skip some low resolutions available at AVR for some reasons, so specify here the minimum one which can be assigned during the iteration\nmaxsrcres              - you may want to disable NR when resolution is good enough, so specify here the maximum resolution on which NR is still active\n. yes, I would also have one question - why people are always reading only the last 3 posts and think that their point of view is unique and the most important? :D\nre overridefps - pls check Memphiz above\nre correctpixelratio  - do you mean adjusting your AVR/TV before playing each source? :p \nre destres - perhaps it may be replaced by some other existing global variable or perhaps you may want NR to assume some fixed output resolution - not sure at this point\nre minoutres - correct\nre maxsrcres - say you don't want NR to be enabled on any SD which is width 720 or more\n. ok :D \nre correctpixelratio - I saw it in my tests that stretching at xbmc and then processing by good AVR creates better experience at the end - but if you will read Karlson2k and others - this is not so obvious before you see it on your screen, so why not to make it easy for others and allow to disable it? \nre maxsrcres - well, it is like somebody may feel more comfortable to make sure that 1080 or something will never go trough the NR code.. just an option you may want to ignore if you do not care\n. may I suggest incremental approach? release it as it is, as kind of \"experimental\" feature, so those who are interested will start playing with it. when the code will stabilize enough (also some options may go, some new may be required) then add nice GUI options for it.\n. so would this work for you:\n- add a toggle option in System/Video-Settings screen, say \"Native Resolution Enabled\"\n- hardcode sensible default values for NR \n- keep option to ovverride these default values via advanced settings if somebody is not happy with these defaults\n. so where these overridefps/correctpixelratio/destres/minoutres/maxsrcres attributes can be read from, if advanced settings is bad place, but you still want end user to tweak with them?\n. ok, this is really not my problem, it is for me just like you would build a car without the steering-wheel and say - let's people try it, we will see what useful they can do about it :D \nAnyway I think I'm done with it. The code is here, you may copy it, change it, add all possible bells and whistles on GUI side - or just simply ignore it. Good luck ;)\n. well, if you see above then you will realize how patient I was during 6 months (!) of this discussion. I really surprised myself :D during that time I never rejected any request which was technically justified.\nnow you wanted to have GUI toggle to make sure people will be aware of this feature - ok, I can understand this. however with all my patience I cannot understand why are you bitching on advance settings option? Just do not use it, ignore it, deny that it ever existed! :D \nso now I say: take it or leave it. I never play games which I do not understand. that's it ;)\n. @Karlson2k you are talking about good coding practices. sure, each ecosystem builds its own, XBMC community its no different here. in my professional life I'm dealing with software systems way more complicated than XBMC. XBMC is my preferred entertainment tool, this is just a hobby. and I'm kind of ok with rules which the community worked out during the life of XBMC. if you will read this thread from the beginning then you can see that I did not complain when Memphiz grilled me to make the code XBMC-standards compliant. I can also understand that a toggle at GUI level is good thing, as it makes this functionality exposed to all users with some default settings.\nbut here is where my will for compromise ends. this patch needs more testing with different hardware setup. It needs to be simple exposed to wider audience. and I need tool like AS when I can quickly test different configuration options with these users. maybe some new switches will be required - I thought for example that the whole \"distance\" function should be probably refactored to be another AS parameter, like some kind of regular expression so it can be flexible changed. i made it pretty straight (I believe) - this patch is still kind of \"experimental\". asking me to hide all parameters is not reasonable - it will end up with the situation that it will not work properly for majority of the users and they would need to wait half of year for another XBMC release. on the other hand, asking me to implement all these \"temporary\" parameters at GUI level is not reasonable either - as you pointed out, this is significant effort, this is poisoning the GUI and some of these parameters for sure will go away with one of next iterations. \nso the process which is for me kind of natural - that the working version of some functionality is then iteratively improved is somehow not accepted by the XBMC team. they expect to have this patch fully functional from day one. which is kind of naive expectation in my opinion. from my experience I can say that keeping some \"techie\" options at AS level and moving them gradually to GUI level as the code is stabilizing is the most reasonable approach. it seems that we cannot get agreement on this and this is like end of the story on my side ;)\n. ",
    "GhostM121": "I started a thread on this on the xbmc website and would really like to see it added. Madvr does this perfectly, and imo it would be a waste not to allow interlaced content. I have a 1080i,30 profile in madvr, as well as a 480i,30 profile.\nMADVR simply allows you to add resolutions supported by your video card and tv, and then switches to those resolutions when playing media with that resolution. It basically accomplishes what is discussed here...\nKarlson made a good point and its something i think madvr does wrong, instead of just upscaling if that resolution is specified and input, it selects the closest resolution specified if that resolution is not specified in settings. So an obscure resolution you dont have specified i believe madvr pics the next closest resolution and scales to that. It would be ideal if it did not do this, and if the input resolution does not match an output resolution you specified, it simply lets xbmc upscale.\n. I have no idea what you mean, xbmc already does refresh rate switching is similar. The desktop flashes and refresh rate is changed.\nIt works fine using madvr, the resolution simply changes, xbmc has it working already for refresh rates, adding the ability to alter the resolution wont be any different, as mentioned madvr has it working fine.\nNothing may work perfect but thats why were discussing implementing it, nothing xbmc adds just works.... Actually oppo bluray players output source direct, and basically output what video resolution is input and it removes audio sync issues since video scaling is not being introduced prior to sending the signal.\nLess then 1 percent, i think this is part of the reason many video enthusiasts dismiss xbmc, many users more then 1 percent care about altering our video, their are alot of users outside this xbmc bubble some live in who use madvr and such for improved quality and handling of video. \nAlot of even general users would also like to use their avr or high end tv's to handle deinterlacing and scaling.\n. I am simply contributing to an idea that was posted, their was alot of discussion about madvr some wanted it implemented and an xbmc developer was trying to add it but was shut down. \nIts not the point though, i simply wanted to show support for automatic resolution changes as a feature i would like to see.\nAnyway this will be my last comment, I will stop posting...A mod in the forum linked me to this page when i asked the question, thats how i ended up here.\n. Not really any of my business being here, but this feature will be\nappreciated by many, I really hope it does not fall apart at this stage,\nthe work being done is appreciated and this is a very exciting and useful\nfeature. Not just from people who want native output, but on the forum\nraspberry pi users said it would help take a load off of the pi when\nit struggles to deinterlace or scale material.\nI really hope this does not die at this late stage.\nOn Tue, Dec 18, 2012 at 5:18 PM, adam-aph notifications@github.com wrote:\n\n@Karlson2k https://github.com/Karlson2k you are talking about good\ncoding practices. sure, each ecosystem builds its own, XBMC community its\nno different here. in my professional life I'm dealing with software\nsystems way more complicated than XBMC. XBMC is my preferred entertainment\ntool, this is just a hobby. and I'm kind of ok with rules which the\ncommunity worked out during the life of XBMC. if you will read this thread\nfrom the beginning then you can see that I did not complain when Memphiz\ngrilled me to make the code XBMC-standards compliant. I can also understand\nthat a toggle at GUI level is good thing, as it makes this functionality\nexposed to all users with some default settings.\nbut here is where my will for compromise ends. this patch needs more\ntesting with different hardware setup. It needs to be simple exposed to\nwider audience. and I need tool like AS when I can quickly test different\nconfiguration options with these users. maybe some new switches will be\nrequired - I thought for example that the whole \"distance\" function should\nbe probably refactored to be another AS parameter, like some kind of\nregular expression so it can be flexible changed. i made it pretty straight\n(I believe) - this patch is still kind of \"experimental\". asking me to hide\nall parameters is not reasonable - it will end up with the situation that\nit will not work properly for majority of the users and they would need to\nwait half of year for another XBMC release. on the other hand, asking me to\nimplement all these \"temporary\" parameters at GUI level is not reasonable\neither - as you pointed out, this is significant effort, this is poisoning\nthe GUI and some of these para meters for sure will go away with one of\nnext iterations.\nso the process which is for me kind of natural - that the working version\nof some functionality is then iteratively improved is somehow not accepted\nby the XBMC team. they expect to have this patch fully functional from day\none. which is kind of naive expectation in my opinion. from my experience I\ncan say that keeping some \"techie\" options at AS level and moving them\ngradually to GUI level as the code is stabilizing is the most reasonable\napproach. it seems that we cannot get agreement on this and this is like\nend of the story on my side ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/1096#issuecomment-11512044.\n. \n",
    "sebjacob": "Stumbled onto trying to find a solution for the cpu challenged raspberry pi.\nThere's a couple reasons this would be cool on the pi for example :\n1-The pi could switch to 1080i and let the receiver take care of the deinterlacing.\n2-The Pi can't seem to upscale 720p@59.94 to 1080@59.94, but has no trouble playing the file at native res.\n. ",
    "DOCaCola": "Are there any devices that natively output @30 resolutions?\n. as reference/inspiration on how others have implemented it. Here are the options for resolution switching my Dreambox DM800 DVR offers:\nhttps://lh.rs/yPD9ArzT0g9E\nhttps://lh.rs/oQpcVQrjV9Uh\n. No, this feature is a good thing.\nTVs are designed to work with low resolution content.\nThe rescaler chips in (more expensive) TVs are selected/optimized to give best possible picture quality for a particular resolution on this particular hardware (LCD panel).\nWhile XBMC uses the 'generic' techniques to rescale content, which of course works well in most scenarios, native resolution/refresh rate output might give us (perceived) better picture quality on some TVs.\n. hmm, some thoughts on the usefulness of these commands\noverridefps - why would someone like to not have the fps adjusted as defined by the content? Are there technical limitations that would produce issues when fps are not adjusted?\ncorrectpixelratio - it might be required for some configurations, but usually the monitor/TV handles the correct aspect ratio. If the aspect ratio is wrong, then the monitor/TV should be configured accordingly.\ndestres - not really understanding what the commands purpose is. would it be enough to let the code not select resolutions higher than the one set globally?\nminoutres - this command might be useful in some scenarios. With very low resolution content the overlay GUI might become very pixelated and hard to use.\nmaxsrcres - don't see a need for this command. what do you mean, 'good enough'? That defeats the purpose of NR. Why would we now want to rescale 720p content to 1080p?\n. no, i am just trying to understand from a user point of view and help finding a compromise on this thing. If you are pissed for some reason, then that is none of my business. :p\ncorrectpixelratio: yea, maybe i just don't understand the purpose of this option. If you have set your TV to output content with correct aspect ratio (versus streched) then this should be not necessary? Is this intended for when a TV doesn't offer an option to scale content with correct aspect ratio? If a TV is that bad, then probably it would be better to let XBMC handle the rescaling, right? :) But maybe i missed the point.\nmaxsrcres: What would be the advantage or purpose of not having such content at native resolution?\n. ",
    "Edgewalker": "I just found this by accident after asking about this feature in Windows Support on the forum; please keep working on this adam-aph...  it's more valuable than you know. And for those who would be naysayers or who don't think \"endusers\" use advancedsettings.xml, I am an \"enduser\" and I most definitely use it, to make stuff work that should work already. \nIn point of fact, this method is how the XBox version of XBMC handles output of video, perhaps not via the same code but in a similar way; I am looking for my HTPC's XBMC to do the same thing, because frankly SD content looks like crap the way it is being handled now. \n1% is still greater than zero... so please quit sandbagging this and implement it for anyone who wants to try it (without them having to have a programming degree). \nI can run a compiler if I have to, so can someone PM me on the forum (same username) and explain how would I go about adding this to Eden source so I can have XBMC work the way I want? Thank you, and thank you adam-aph for a USEFUL FEATURE.\n. ",
    "GeertAki": "I vote +1 for this feature and want to thank adam for all the effort he put already into this!\nMany thanks!\n. ",
    "opperpanter": "+1, thanks Adam for all your hard work.\nMaybe we could implement it with 1 parameter in the GUISettings.\nThis parameter would be a dropdown/combox to select a possible value:\nFull = Equal to current behaviour of xbmc, do full upscaling (default).\nDisabled = Disable all upscaling, no zooming, use exact resolution from input etc.\nMinimal = Use closest resolution, do zooming (is this zooming different from the 'Z' key during playback?).\nMinimalZoomed = Minimal with zooming.\nSomething like this would allow us to keep iot relatively simple, but still have some choices for advanced users?\n@adam-aph I think getting the basics right is of great value, because it will be good enough for the majority of people. Once the feature gets used and there's feedback we can always add more settings/presets.\n. ",
    "deh2k7": "I agree - let's get a build with SOMETHING working, either with a simplified GUI setting or an advanced setting X<L template to work with and get users testing out the functionality.  Once you have good feedback on how its working, we all can offer some suggestions on how to best implement it into the final version.  I would guess starting with everything in advancedsettings would be simplest way to get things going, as long as we had at least a clear understanding of each of the possible settings and values.\n. ",
    "voip-ninja": "Just wanted to add my moral support to this settings option.  I have a pretty damn expensive video processing chipset in my AVR that would probably do a much better job of upscaling 720P and SD source material than the HTPC can do currently.\n. ",
    "jeanpijon": "+1 I think this is great feature - I will try to compare results with my Samsung Smart TV (it seems that main problem on my HTPC is not decoding of HD content, but actually upscaling SDi)\n. ",
    "sramkumars": "+1 for this feature. I am not sure if this is relevant at this point or may have been though of before, but just my 2 cents. About upscaling twice one by XBMC and then by the AVR, XBMC can just pad blacks instead of upscaling to the nearest resolution.\n. ",
    "harry1236": "This will be the great feature for the people who have avr with good video processing power. I would really love to see this on xbmc.\n. ",
    "bas-t": "So I guess you are ready to merge now?\n. It is indeed just for the Eden branch.\nThis fix is already in master, I took it from there.\n. I just noticed that this fix is also in pr #1039 \nAs this is a huge pr, it will most likely take some time to actually get pulled.\nDo we have to wait for that?\n. Debian Squeeze users will have to wait for the bugfix release to be able to compile Eden.\n(unless they are smart enough to determine the cause of their trouble and do git checkout 701e543cc3)\nIMO that is a showstopper.\nAlso, there is no harm done by pulling this in right now.\n. There is more to it:\nopdenkamp's and tsp42's repos (and probably some others) have of course been affected with this bug too,\nsince their Eden-pvr branches depend on Eden.\nSo building whatever variant of (pvr enabled) Eden branch is broken for users with tinyxml < 2.6.0\nAll that just because while backporting external tinyxml to Eden, this fix was missed.\n. Closed. You don't need this request, the fix is in your own master branch.\n. ",
    "openback": "I was looking for information as to where to post bugs in a readme and could not find anything. Perhaps a couple of URLs should be placed in there? And I was under the impression that Eden was the latest master, sorry.\n. ",
    "t4-ravenbird": "@elupus OK, I will do some refactoring and come back..\n(Is it possible for me to amend this existing pull-request with my modifications or do I need to create a new PR?)\n. IF I can update your PR directly that is probably the easiest now. In the meantime I have joined github after I found out this is where the action is.. \nI must make my changes first, then see what I can do with it, but any advice is appreciated\n. I have issued a new pull-request as replacement : https://github.com/xbmc/xbmc/pull/1112\nPlease close this one ..\n. The functions you refer to are just local helpers and not in root namespace. Not public and not supposed to be.\n. OK, as you probably understand I am unfamiliar with the process and how things are done so sorry about that.\n'need to be separate commit' - Can it be a separate commit to this pr or must it actually be a separate pull request?\n. The commit has been updated, do you have more remarks? \nWill you handle the GetDirectory() bug or should I? (As it is now the animated 'working..' message is not shown)\n. It was singled out for readability only (same applies to the other separate function, which I expect any decent compiler will inline anyway)\nMoving the other (WaitAfterWake) will severely obfuscate readability in my opinion so I did not touch it, but the function you pointed to is moved in the latest commit\n. '..  end up with very many calls for wakeup ..' \nYes. That was what I attempted to avoid when I put it inside an already existing function in URIUtils (even if it was not an intuitive behaviour) I dont really know what is the lesser evil.\n. @elupus '.. end up with very many calls for wakeup ..'\nMaybe a solution could be to make a new function in 'Util' called 'PreparePath' or something similar\nThis function then should call 'URIUtils::SubstitutePath' and also do 'WakeUp' logic\nIn the classes File/Directory the scattered occurrences of this pattern\n CStdString realPath = URIUtils::SubstitutePath(strPath);\nCUtil::WakeUpFileHost(realPath);\ncould then be replaced with\nCStdString realPath = CUtil::PreparePath(strPath);\nComments?\n. @MartijnKaijser Agreed! (Personally I dont think GUI-settings is important at all, there is a wiki for how-to use MySql and it should be updated if this thing flies)\n. OK, was not aware of those ..\n. I tried to look at how GUI-settings are done, but problem is the settings is an array of entries which probably need a brand new dialogue to input data in ..\nhttp://oi47.tinypic.com/e0okg5.jpg\nEven if it maybe belongs somewhere else in settings than my attempt here (system/power) a new dialogue is required ? \nUnless I am missing something and there IS a way to programatically show an adapted version of a pre-existing generic dialogue?\n. Hmm, there can be multiple sources from same host so that does not seem right\nBesides ; the feature will also do wake before MySQL connect and the MySQL server may be on a server that is not listed in sources\n. Populate which list? \nA list that comes up in settings/system/power that simply lists all known servers (found by searching sources+mysql+pathsubstitutions..) - and then simply a checkbox for each\nIs that what you have in mind?\n. ^^ Actually just a checkbox will not be enough, we need a couple of time-out settings as well for each entry\n. Is there a way to make that GUI without adding new class(es) for new dialog(s) + new dialog resource file ?\nFrom what I see in the GUI settings code I am led to believe we need to do something similar to the handling of parameters for the usb-cec adapters .. or am I missing something?\n. I updated the commit \n- bug-fix (null pointer to busy-dialog-window)\n- added wait for network to get connected before sending wol (wol fails to transmit if net not ready shortly after resume)\n@elupus ; changed files since last time util.cpp, advancedsettings.cpp/h \nexample advancedsettings including new parameter \"netinittimeout\" :\n<onaccesswakeup>\n    <netinittimeout>60</netinittimeout>\n    <wakeup>\n        <host>10.0.0.6</host>\n        <mac>00:ff:f2:7d:df:1e</mac>\n        <tmout>700</tmout>\n        <wait>8</wait>\n    </wakeup>\n    <wakeup>\n        <host>TOWER</host>\n        <mac>a0:16:f2:7d:df:1e</mac>\n        <tmout>2000</tmout>\n        <wait>12</wait>\n    </wakeup>\n</onaccesswakeup>\n. Sure. It is useful as it is now, but can be improved further.\n-Add GUI config. As it is now the config is through advancedsettings.xml, some find it important that things are settable in GUI instead.\n-If GUI is made it would be nice to have auto-detect of mac-address, at least as much as possible, it is not trivial as mikkle pointed out.\n-Add a Ping function so that the wait for the server can be aborted as soon as server responds. As it is now we will always wait a fixed period of time even if server is in fact alive already. \n. Great to hear that you have been looking at this !\n**\nMy thoughts on how GUI should look ;\n1) It does not belong in 'sources' at all ..\n- A server may very well be mapped up multiple times as source for various movie/music/picture paths .. with your suggestion some source entries to server may be toggled 'yes' on the 'try to wake' while others on the same server is toggled to 'no' .. now what?\n- A simple toggle is not enough, some timeout parameters are needed and manual edit of mac-adress if auto-detection fails\n- If you have no sources on the server you want to wake then there is no place to set it up. There could be a MySQL server that you want to start..\n- There could even be a 'pathsubstitution' setting that remaps some sources (which appears to be local) into a source that is actually on a server .. these will not be able to setup either\n2) I believe it fits into 'settings/system/power saving' like I tried to indicate in the beforementioned link : http://oi47.tinypic.com/e0okg5.jpg\nUpon entering this setting the following could run (some of this is also discussed with @elupus earlier in thread) : \n- enumerate all unique servers we know of by traversing all configured 'sources' + all MySQL databases + all 'pathsubstitusions' \n- auto-detect mac-address as well as we are able to for those servers\n- display this list with the 'try to wake' toggle together with the individual timeout settings..\n- manual adding & editing of mac-address should also be possible\n. Another possible improvement to the entire feature is to Ping the server to determine when and if the wakeup is required.\nUntil this PR gets merged I have my XBMC setup with EventGhost and there I use Ping to abort waiting as soon as server is reachable so I know quite well the sequences that we could use in XBMC if Ping was available.\nIf someone would help adding a Ping method to the CNetwork class I could update the WakeOnAccess feature ..\n(That change would mean we could drop the parameter 'wait' in the setting)\n. @pieh Yet another improvement would be to give GUI feedback when the wakeup kicks in ..\nAs it is now the WINDOW_DIALOG_BUSY is shown in the case where we need to pause execution.. this could have been more informative if a custom dialog with a message was shown that indicate why we are waiting ..\nBut maybe it is too much effort for too little value?\n. > Obviously wakeup entry would need to be linked to host and not source - in that dialog we would try path substitution and then get host - so if we have 2 source from same host and change toggle in 1st, it would automaticly \"change\" toggle in 2nd too.\nOK, nice- that voids many of my objections.\nIs it possible to have it like that and then let the code behind that GUI manipulate the entries in as.xml?\nIf we could do it that way we would get a good compromise : one-click ease of use and full tweakability by editing as.xml manually ..\nOr is that a dirty, nasty hack?\nAlternatively, can we make a new woa_settings.xml which is tweakable by your GUI and manually?\n\nMysql could have additional entry in av.xml ...\n\nMy concern is that the settings for WOA should not be scattered with some under sources with GUI and then some under as.xml - that seems messy?\n\nYou can use use WINDOW_DIALOG_PROGRESS ..\n\nThanks, will have a look!\n\n...  typing mac address, timeout, etc manually in xbmc gui is not the way IMO ..\n\nAgreed! Therefore I thought it was appropriate to keep it in as.xml\n\nCould You draw/sketch dialog You would see for it? Perhaps I wrongly see what would You like to have.\n\nI could, but it would include editing mac-address and \"weird\" fields so I think you already know where that is going;-) .. Lets us see how the discussion develops further before I do that exercise..\n. @pieh What is status now, do you know what direction to go in?\n@davilla No. What could be done?\n. @pieh \n\nYou can use use WINDOW_DIALOG_PROGRESS with disabled progress bar instead of WINDOW_DIALOG_BUSY - it has slots for heading and 3 lines of text. Search code to see how to use it.\n\nOK, I made some changes and now have a nicer feedback .. the progress bar now indicates what is going ..\nI also found the 'CGUIDialogKaiToast' class and use it to show error notification (If WOL can not be sent - stopped by firewall etc)\n. @pieh Fabulous, looking great! \nThat is a complete refactoring so I guess it voids this PR\nI love that you keep the option of manually tweaking it so it is usable on platforms with no ping and/or mac-discovery.\n. The pause could be measured - if it is a short stop then no rewind. If it is a long pause (you had to answer a 10 min phone-call ..) then rewind ..\n. OK, I grabbed the \"../network/osx/ioshacks.h\" file in your patch, but this is a new and unreferenced file so how will it matter? Was your patch incomplete?\n. Thanks a lot ! (Hope I got it right)\nI assume you built it .. did you test out anything also?\n. There is also a new ping-function in the network class but I assume it must have compiled as is then .. It just does system(\"ping ..\") and if we are lucky it will work.\nThe rest should be platform independent, but it does not work until it is verified;-)\n. - The patch is supposed to do just that (wake server only when accessed). Log should show why it kicked in, but you need to enable Debug-logging. (I used LOGINFO, maybe LOGNOTICE should be used instead so it comes up without debug-logging)\n- Maybe just drop them, yes. (They only come if your 'timeout' corresponds badly with your server's actual idle-time before it enters suspend, so if you tune 'timeout' in wakeOnLan.xml it would help)\n-  -\n- WakeOnLan.xml ...\n. I dont understand what you mean by queuing wol messages? Only scenario where more than 1 wol gets transmitted would be if more than 1 thread accesses server at 'same time' - there is no mutex around the wakeup since worst thing that can happen due to multithreading would be just that ; more than 1 wol is transmitted in a short time-window.\nAfter a wakeup is performed there will be no more attempts to wake until 'timeout' expires, and then only if host-up-check (ping) fails.\nThe patch will by design NOT prevent server from going to sleep. (If keeping server alive was acceptable behavior then this patch would not be required at all as I see it - keep-alive wols could be done by plug-ins already)\n. update;\n- removed 'server already running' notification\n- changed log-messages from level 'info' to 'notice'\n- additional protection to avoid recursive progress-dialog (as I have experienced on my openelec build, still collecting experience on my latest build)\n. @da-anda ready or not, I am not sure to be honest. It seems to work fine for windows-users as far as I have heard, but my own openelec-build is giving me concerns. It works as expected when booting and if xbmc as been idle for a while, but when xbmc resumes from suspend I have some observations I dont like. There appears to be various things that kicks in because of the 'OnWake' event .. and I also for some reason get premature ping-response when resuming. \nIn any case, I will update my repo\n@kricker , that observation should be handled separately IMO. The woa feature just helps to reveal that accessing add-ons for some reason causes db-access (probably) and if that is not a justified behavior than it should be addressed.\n. Last update also adds a new 'ping'-function by trying connect on specified port\nThis was suggested in the thread here http://forum.xbmc.org/showthread.php?tid=124340&pid=1316368#pid1316368 and I think it is a good idea and implemented.\n. I merged your original stuff (including proj files) so they might be OK already, can you check it?\n. OK, yes I hope it builds on all targets (unless there is some diff in fcntl/sockopt/errno codes?)\n. Seems I have been chasing a ghost when I had issues with stability ; it all boiled down to a misbehaving server that occasionally responded to ping prematurely. It was an xp-machine, after I upgraded to win7 there is no issues at all.\nso I combined all my changes into one commit and updated the repo ; it is also rebased\n. true ping would certainly be better but requires root AFAIK so that is why I made it like this.\nI assume you dont like the overhead (or is there something else wrong with system()?) but code using ping() must in any case be prepared that it is blocking for a while\n. I just updated to match latest changes (some settings have been shuffled around a bit that affected this PR)\nThere is only 1 commit, but parts of that is (still) thanks to @pieh and @Memphiz \nPlease have a look and let me know if something should be changed or anything else I can do to make it ready to be merged\n. @theuni OK, will investigate busybox. Regarding spawning it works since the 'ping' command has some special permissions if i recall correctly\n. Some links on ping ;\nhttp://stackoverflow.com/questions/1189389/python-non-privileged-icmp\nhttps://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man4/icmp.4.html\nhttps://groups.google.com/forum/?fromgroups=#!topic/android-ndk/Xnc8c3A3OLw\nAs I understand it ;\n- ping requires opening a socket in raw mode ; socket (AF_INET, SOCK_RAW, IPPROTO_ICMP)\n- opening socket in raw mode requires root\n- ping utility (and busybox) is installed with permissions to \"auto-switch to root\" if started by non-root user and are therefore able to get the job done.\n- for DARWIN it is explicitly permitted to do ; socket (AF_INET, SOCK_DGRAM, IPPROTO_ICMP) to get around the problem and be able to do a non-root icmp ping\n- it is unclear if Linux supports the same and for which versions/distributions ; Android fails according to discussion on google above.\nI checked my old Android-phone (v 2.3.7) and it has 'ping' utility on it (but phone is rooted and running MIUI so I dont know what its worth)\nI think using \"system(\"ping\")\" is the approach with the best chance of getting it to work on most targets ; and if it does not work this patch also adds a \"ping by tcp-connect\" feature that can be used, check https://github.com/xbmc/xbmc/pull/1892/files#L13R358\n. Updated PR and \n- fixed pointer dereference  pointed out here ; https://github.com/xbmc/xbmc/pull/1892#discussion-diff-3665318\n- removed selective blocking of application::process() , ref https://github.com/xbmc/xbmc/pull/1892#discussion_r3665417\n- added reentrancey protection for powerManager instead ; https://github.com/xbmc/xbmc/pull/1892/files#L21L219\n- ping by system() call remains ; don't think it can be done natively\nMy private machines (openelec) are running this and behaving well so far\n. The pointer dereference issue made me check again and I realized that after merging with changed handling of settings-files (and inheriting ISettingsHandler) protection is needed for the list of wake-up-servers, so latest commit adds that\n. @jmarshallnz Thanks for your input on this PR. After I changed the protection against reentry as discussed above it has run without faults so is looking OK. If you have the time please have a new look and let me know if there is anything more I should look at or if it can be queued for merge? \n. @MartijnKaijser Done. @garbear I checked other recently added files and they are stamped only 2013 so I stick to that too\n. ",
    "kricker": "I can revert the previous patch to get it back to head. Then we can\napply the new patch. That is if they don't want a new PR.\n\nKarl\n. Should we remove the earlier commit prior to making a new one?\n. Damn, hit the wrong button on my iPod. \n. ...runs off to read what all that means....\n. We asked for help to get it added to the GUI, but there was no takers. I've been thinking more about that.\nWhere in the settings does it make the most sense? I was thinking maybe it is something done during source setup. You can enable or disable it there. But, there could be many sources coming from the same server just in different folders. There would need to be some logic that checked if the root source is already in the wakeup list or not. Even then you have to have a place to put the MAC address.\n. This works for more than mySQL databases. I use this with the default XBMC databases and a file server.\n. Where are we on this? Still waiting for fixes or comments?\n. Any takers on adding it to the GUI? I'll look myself, but I really suck at coding.\n. Does XBMC already have some magic code to resolve a MAC address from an IP or NetBios name?  And as T4_Ravenbird said, there are timeout settings as well, unless you set a default one extremly long to accomodate slow waking servers. So, if there was a way to grab the MAC addresss programatically, you'll then need a checkbox and timeout setting for each server. Or in Network settings, just one checkbox and timeout setting for all servers. \n. Are we waiting for GUI settings and magical MAC discovering before pulling this?\n. If you could create the GUI stuff, that would be fantastic. I don't think anyone has created that magical MAC auto-discovery code for XBMC yet. I'd hate to have to wait for that and not get the basic usability in. Anyone that has ever done any sort of WOL should know what a MAC address is. Someone who is just toying with the option though as you suggested may not know what it is.\n. If auto discovery fails, will it force the toggle off? Or will you then be able to enter the MAC manually and enable the toggle?\n. FYI, I have recently seen wireless NICs that do have WOL, but your point is still valid. \nI'm happy to see movement on this.\n. As far as I know, without this patch you can't wake a sleeping mySQL server when XBMC starts. That was one of the main reasons this patch was started. This should be in the core. \n. Where are we on this? Have we stalled out?\n. That is a pretty clean and simple approach. Bypassing the \"there are too many GUI settings, it is a mess debate\", would it seem more appropriate under the system\\services section in the settings? If it had it's own section, then you can add in default netinittimeout, timeout, and wait parameters. And possibly whether to have notification or not.\nThis seems like a user friendly solution.\n. The newest patch t4-ravenbird created has not been supplied here as of yet. We were doing some additional testing. It is working quite well now. The issue that is not resolved yet is auto MAC discovery for platforms other than Windows.\n. There is still one thing that bothers me with this patch. I've discussed it in the past with t4-ravenbird and he wasn't sure how to \"fix\" it. For some reason it will wake server when you are accessing Add-ons. I don't think it is a big deal, but I find it odd I have to wait for me server to wake up in order to access Add-ons to watch content from the web.\n. So we appeared to have stalled out again on the PR. What can we do to move this forward again? Has Androis and OS X been tested yet?\nIf we could somehow get the PVR Power saving integrated into this, I think it would be full featured and ready to merge. It seems silly to have PVR with its own wake settings.\n. ",
    "Deano316": "So we could in theory, once this is fully implemented, have a hotlink from a movie to a tv show/tv show season?\n. ",
    "bilbonvidia": "Is it possible to use this feature as it is?\n. When will this get merged with mainline?\n. ",
    "SavellM": "Where would you like it on the forums?\n. Thanks\n. ",
    "PartialGestalt": "No problem -- new commit should squash those nits.\n. Closing to clean up commit business\n. No worries -- you have done some amazing work here; just happy to help wherever I can.\n. ",
    "leechguy": "This PR seems to be obsoleted by 01a2ea04fa2f294ce6196d382a91e38f8ed862ae\n. FYI: I left some comments in the trac ticket.\n. @jmarshallnz I removed the superfluous getter and setter, and replaced the XMLUtils::GetString() by the XMLUtils::GetUInt() function like you suggested. I then started squashing it all, but somehow end up two additional commits which are not mine. Only e121c58 is relevant. Please let me know if this is a problem, if so then I will simply close the PR and create a new one to get rid of this mess.\nTested under Linux. Test cases performed:\n<autologin> tag not available in profiles.xml -> last loaded profile is used.\n<autologin> tag less than 0 -> last loaded profile is used.\n<autologin> tag greater than available profiles -> last loaded profile is used.\n<autologin> tag empty -> last loaded profile is used.\n<autologin> tag valid profile number -> the configured profile is loaded.\n. After all the git wizzardry I did a new clean compile to be sure that all is still ok. All test cases were repeated and passed successfully.\n. I can probably get rid of 9aae10. If necessary, let me know and I'll look into it tomorrow afternoon (CET)\n. I'm not an XBMC dev. I'm just somebody with a love/hate relationship with XBMC's profiles :)\nThis is very complicated stuff and may be it would be better to open a thread on it on the forum so that more people can get involved in the discussion. The profiles stuff in XBMC is, to say it politically correct, far from perfect. That said, I'm very happy that there is at least support for profiles.\n@Montellese When the login screen is shown, the Master user profile is active, so there is always a profile active (Note: this is the case for Frodo, I also have an Eden-PRE running and there the last logged in user is actually logged in when the login screen is shown).\nWhen you do a log off, the following code is executed in Buildins.cpp:\ng_application.getNetwork().NetworkMessage(CNetwork::SERVICES_DOWN,1);\ng_settings.LoadMasterForLogin();\nSo the network services are shut down. I just noticed the funny fact that when starting XBMC and the login window is shown, the network services are actually up (when enabled in the Master user profile). This is both a good and a bad thing. The good thing is that you can use the XBMC remote app to select the profile you want to load. The bad thing is that it probably exposes the library of the Master user which may not be what you want.\nSo the above is why your option 2 does not work. A solution would be to enable the network services just like when XBMC starts up and shows the login screen (but only when the Master user has the webserver enabled).\nAlso be aware that the settings of the webserver (enabled/disabled, port, username, password, web interface) are all profile dependent. So unless every profile configures them in the same way, funny things may happen. Like I said, profiles is complicated stuff.\nI took a brief look at your code. Am I correct that your code does not support switching to password protected profiles?\nbool prompt = false; //(params.size() == 2 && params[1].Equals(\"prompt\"));\nThis will probably be confusing for many people.\n. Updated \"Add GUI support for configuring the autologin profile in profiles.xml\" after comments from cptspiff.\nAdded screenshots to show the added functionality.\n. Most recent is the profile that was last used (the way it is in Frodo and earlier). Disabling is done either by selecting the Most recent option or enabling the login screen.\nThe fact that it has been merged does not mean that I'm not willing to change it. I'm not a native English speaker so I don't know which would be better \"Most recent\" or \"Last used\".\n. No problem, I'm already working on the remarks by jmarshallnz. Just not sure yet how to handle the clunky UI thing.\n. Forum topic for discussion: http://forum.xbmc.org/showthread.php?tid=162069\n. ",
    "micahg": "I have updated the branch to use the internet bandwidth setting to determine which bandwidth to play on.\n. NP. I assume Aug is the review (not inclusion)?\n. OK, IDK what policy is about boost and using std::strings but I did it since it seemed the easiest way to parse the stream parameters. Anyway, I'll wait for the review.\n. No, and looking through the spec, I see that is something I overlooked -- I'll correct it this week.\n. Hello,\nI updated the code to use CURL to check to see if the sub-stream is a full path. I haven't been able to test this change on an m3u8 that uses full paths yet since I couldn't find any online. It does still work with the apple non-https samples and the other streams I've found.\nThis also has me thinking about if we need to worry about entries like ../whatever.m3u8. FFMPEG is a bit more fancy about this (see ff_make_absolute_url in libavformat/utils.c). That said, I've only ever seen that kind of notation used for local files on a unix style filesystem, so maybe it'd think it wont be a big deal for online m3u8 files.\n. OK, I've made those corrections -- looks much better, TY,\n. OK, I rebased and pushed. It is still showing two commits (one with all the changes and one with no changes [a merge of master]), so I'm not sure what happened there. But anyway, I think its set.\n. OK, I think I got it this time. All are down into a single commit. The problem seems to be resolved by using -f on the push so it doesn't prompt me to resync.  Anyway, let me know if this is OK.\n. Awesome -- thanks for your patience too!\n. Is that mandatory for acceptance? In plugins I've written I just parse the toplevel m3u8 and give the user a list of available bitrates. Also, I would like to think that eventually FFMPEG will get to a place where they handle the adaptive streaming on their own. Obviously my first point is not ideal and the second isn't real, but is it worth the effort to provide built in bitrate selection?\n. That seems more like an FFMPEG problem. Also, this is avoided if the plugin parses the top m3u8 (the one containing the different bitrate m3u8 streams).\nBut, if we were going to build stream selection into xbmc, do we have a precedence for doing this? Would we just pop up a window and ask which of the available bitrates they user wants to play?\n. Hello,\nI can't actually use the \"internet bandwidth\" setting on this version of XBMC (I don't think it exists?). In any case, I've made use of it on the master branch pull request if anyone wants to have a look. I've tested it with some different HLS streams by neulion and it works properly.\n. ",
    "dataolle": "Is it possible for txbmc to use cache/buffer (like cachemembuffersize) when playing m3u8 files/playlists? when i play video from m3u8 n no cache is used (cache 0B 100% is displayed in the cideo information) and the video is choppy/stutters.\nLog from playback: https://gist.github.com/4649698\nIf i download the video stream to a local webserver (with ffmpeg) and stream from that then the cache is used and it plays perfectly fine.\nWhen I playback one of the segments in the m3u8 file it is cached/buffered and it plays perfectly (cache is used). Log from playing single segment segment:\n20:03:53 T:2757493824 NOTICE: Thread CGUIDialogCache start, auto delete: true\n20:03:53 T:3037683712 NOTICE: COMXPlayer: Opening: http://svtplay9q-f.akamaihd.net/i/world/open/20130125/1278818-005A/STJARNORNA_PA_S-005A-363fe074b865ae35_,900,348,564,1680,2800,.mp4.csmil/segment20_4_av.ts?null=&e=b2a7ace1bf661c32&id=\nI use raspberry pi (raspbmc) with rc3 build of xbmc frodo.\n. ",
    "stintel": "My attempt at a fix is available on http://bpaste.net/show/34793/\n. ",
    "pvaibhav": "Quick update, I think this patch is ready to be merged in. I've tested and found the best solution would be using a -30 dB to 0 dB range mapped to 0% to 100%, anything lower than -30 dB gets clipped to soft mute (0%).\nUsing this formula, at 8 out of 16 ticks on the iPhone, the XBMC volume is exactly 50%, so I'm pretty sure now it's supposed to be a 30 dB range and not 28.8 or something.\n. Any decision on merging this yet?\n. Closing this pull request due to lack of interest.\n. Thank you for finally fixing this bug. It makes XBMC much more useful to me.\n. ",
    "orewagundam": "Ok, thanks for your tips. I don't know what I was thinking when copy-pasting the code, I fixed the code and it should be ok now. About those \"1\" files, I'm not sure how they appeared (maybe they where generated by one of those batch files you execute when preparing the dependecies), so I just deleted them.\n. Hi,\nI followed your instructions and I merged all three commits in a single one, and the synched the changes on my personal repository. How do I push these changes to the xbmc repo? \nSorry about that but I'm still learning about Git..\n. I did the push (two times, once with tortoisegit and another with git.exe), but I still see 3 commits instead of just one. Do I need to cancel this pull request and open another one?\n. Ok, I retried doing everything from command line and it worked! I'll stop using tortoisegit until it works better..\nAnyway, thank you very much for your help! :)\n. Hello, sorry for the wait.\nAnyway, as requested I moved the debug code to the Builtins.cpp file, and also fixed some wrong indentation.\nI hope everything is allright.\nBye\n. Ok, I made the action a builtin action. I only have a doubt about what to do with the SetDebugMode() static function I left in the CBuiltins class: the reason i made this function is because this code is called in two places (the interface action and the debug change option in GuiWindowSettingsCategory.cpp, and I wanted to keep the code in a single place.\nI tried looking for some already existing class related somewhat to debug, but I could'nt find any, so I wanted to create a CDebug class somewhere (maybe in /utils/ ?)..\n. I moved SetDebugMode() to the CAdvancedSettings class. \nFor now I didn't change the other line in AdvancedSettings.cpp, because I feel it's doing something different from what I'm doing in the new function (it's setting the loglevel to the max between logLevel and logLevelHint, while SetDebugMode switches between two different values).\n. ",
    "zewt": "\nIf we're worried about crashing, writing to the database at a similar time isn't the smartest move IMO.\n\nAre you not using a reliable database (like SQLite) to ensure that interrupted database writes don't cause data loss?\n. I think this is important, though not quite correct.  Currently, it seems that the play state is never saved mid-playback at all, which means if anything fails (XBMC crash, system crash, power loss), you lose the playback state.  I had this happen recently; it's annoying, knowing that XBMC could have saved my spot but didn't.\nSaving on pause doesn't hurt, but it really needs to save periodically during playback, eg. every 60 seconds or so, rather than letting people get an hour into playback without a single save.\n. Please try to recall it.  Currently, it is broken.\n. Could this be a legacy from older versions of VC?\nVC2008 (I believe) and earlier always treated source files as if they're in the ANSI codepage, so putting UTF-8 in source would cause errors in certain codepages.  This might be a workaround for that.  (It'd only be a partial workaround, probably for a particular user's codepage, since whether that worked or not would depend on the local codepage.)  VC2010 autodetects UTF-8, which makes it easier to avoid problems.\n. The date on that supports my guess, anyway...\nIf you're really worried, it could just be sidestepped entirely with hex escapes, but I'd see if it's really needed first.\n. It would be nice to get this applied; it's a bit of a pain.  This just looks like a workaround for old versions of VS (which I don't think XBMC even has project files for anymore).\n. http://trac.xbmc.org/ticket/13180\n. As a side-effect, this should also fix a minor bug: if the \"disable screensaver\" option is disabled in settings, the ES_DISPLAY_REQUIRED flag was still set until the program exits and restarts.\n. I'm only set up in Windows, so I only modified what I could test.  I don't know if it happens on other platforms.\nThis is important enough to me (having a plasma TV) that I'll set up X in VMware and port it to the platform-generic code if needed to move this patch along, though.\n. That would make WinSystemWin32 disable the screensaver even if EnableSystemScreenSaver(false) was never called in the first place.  The point of m_ScreenSaverEnabled is to remember what the caller actually requested, so we don't do that.\n(I don't know why the CWinSystemBase interface even exposes that level of control, since it seems like Application always turns off the screensaver, but so long as it does expose the interface, the implementation shouldn't ignore it outright.  I'd be inclined to suggest removing the screensaver interface entirely and make the CWinSystemBase implementation implicitly disable the screensaver, but that's way outside the scope of this fix.)\n. I don't believe enabling SPI_SETSCREENSAVEACTIVE will actually disable the screensaver if none was configured to begin with, though maybe that's just something fixed in Win7.  Anyway, I've pushed a simpler fix for this.\n. Is there a better way of doing that than creating an entirely new branch and pull request?  (I could probably push --force, but the entire Internet is saying not to do that.)\n. Uh, well, I clearly didn't do that right...\n. There it goes.\n. FWIW, it would be useful for code that broadly ignores exceptions to mention why, since without an exception type in there it's hard to tell in isolation (or, narrow the catch to bad_alloc).\nIt'd definitely be good to handle T-E: chunked (you'll get that from a lot of servers that use deflate, IIRC), though short of reading the whole stream in when GetLength is called, that's tricky to do generically with an API that pretends to be a plain file...\n. Note that there's another bug that this at least reduces: the stream might close before returning the advertised number of bytes.  Previously, this would result in uninitialized heap bytes being dumped into the string; now it'll always result in zeroes, since strings initialize to null.\nThis still isn't really correct; rather than silently returning a partial file, it should either resume/restart the file or return \"\" as if no data was received at all.  This seems like a reasonable short-term improvement, though; returning random stale data on the heap is scary, even if it doesn't cause obvious problems.\n. Done; https://github.com/xbmc/xbmc/pull/1200.\n. Don't use a null terminator.  All that does is make it not 8-bit clean when it's easy to avoid.  That's not critical for this particular bit of code, since it's reading text, but it's only more complicated and risks other people copying and pasting this code to somewhere where it could matter.\nhttps://github.com/xbmc/xbmc/pull/1185\n. What are you even talking about?  It's simpler and cleaner to do it properly.\n. Stop wasting my time.  I've given a simple, straightforward code simplification, and you're actually arguing that the more complicated code should be used instead.  Give me a break.\n. (merged separately)\n. No, but WM_CLOSE happens before WM_DESTROY.  g_hWnd shouldn't be cleared until WM_DESTROY, since that's the point when the window is actually going away.\n. FYI: The reason WM_CREATE is at the top is because it sets both g_uQueryCancelAutoPlay and calls SetWindowLongPtr.  If it was in the switch, m_pEventFunc (which should really be g_pEventFunc; it's static, which is closer to a global than a member) would always be NULL and it'd short circuit at if(!m_pEventFunc).\n. The files work in every other player, so in practice it's not the file that's broken.  (If it works in most players, then people are going to continue--no matter how much we yell at them, if we can even find them--to encode files in this way.)  Also, this isn't an isolated issue; I've hit this many times (or else I wouldn't be bothered enough to try to fix it), and XBMC is the only player that has trouble with it.\nSeeking around the file would be wrong, because that would fall apart on media with expensive seeks (eg. DVDs, internet streaming).  That would also require a major overhaul of CDVDPlayer, from what I can tell.\n. Going back to my original thought: it actually seems fairly straightforward for CDVDPlayer to continue buffering if either stream needs more data.\n-    if ((!m_dvdPlayerAudio.AcceptsData() && m_CurrentAudio.id >= 0)\n-    ||  (!m_dvdPlayerVideo.AcceptsData() && m_CurrentVideo.id >= 0))\n+    if ((m_CurrentAudio.id < 0 || !m_dvdPlayerAudio.AcceptsData())\n+    &&  (m_CurrentVideo.id < 0 || !m_dvdPlayerVideo.AcceptsData()))\nThis way, more data is read until both players' queues are full.  This effectively makes the values into desired buffer sizes, rather than maximums.  After doing this, I can reduce both audio and video buffering significantly without causing playback issues.  (And they would want to be reduced; they're currently tuned as pessimistic maximums, not desired values.)  The amount buffering simply grows beyond that value if required by the file.\nOf course, this also means that there's no hard limit on buffering.  If that actually happened--if it tried to buffer a huge amount of data--then the file isn't going to work anyway, so it should just show an error and stop if either queue becomes unreasonably large.\n(I'm sure there are other issues with this; for example, I don't know the logic of the \"GetLevel() > 50\" cases in CheckStartCaching, which this would affect.)\n. (Issues that can lead to permanent damage to expensive TVs getting no attention at all makes me nervous about using XBMC on my television.)\nThis isn't happening now, hopefully due to a driver fix, so I'm closing this.\n. ",
    "midripps": "Thanks very much for your help and considering it so quickly. \n. ",
    "SlrG": "+1 for integrating this into XBMC. In my opinion it is a desperately needed feature for people using external scrapers like Ember Media Manager to have full control of the sraping process and make sure only local data is used.\nThank you very much for your work Koying!\n@XBMC Team: Please reconsider this pull-request. :)\n. Added algorithm to identify main movie.\n. @cptspiff:\nI don't quite understand what you mean. :) I'm open to change it in every possible way. Regarding the idle timer, would you say it would be better to prevent it from changing?\nAt the moment I plan to use this function to write a python screensaver script which starts the windows system screensaver instead of providing or using an xbmc internal one. A feature which I noticed was asked for several times over the last two years via the forum by different people.\nCalling the external screensaver will however make XBMC loose focus and not react to the mouse move or keypress which exits the windows saver. On return the black xbmc screensaver window will still be open and I found no xbmc function to make it close without having the user to interact. (which would reset the idle timer, too)\nThat is my usecase. Maybe unrelevant for most people. But the toggle function itself I deem quite useful to have for scripts and addons writers (see Gifties comment). The http-api is gone and I don't know if toggling the screensaver is doable by json-rpc.\n. @cptspiff:\nPlease forgive me, I'm feeling rather stupid to have to say this, but I still don't understand. What other things should the function achieve? Resetting the idle timer is no problem. One line of code. Should this happen on activating the screensaver, too? Or only when deactivating?\nAn app ping how I understand it, would only wake something up, right? It won't make sense to have it toggle between \"waking\" and \"sleeping\", or am I missing something?\n\"Waking\" will only work if the screensaver is running. What other processes has xbmc running that need to be woken up? No python script will be able to wake the pc from suspend if no timer is involved. Which probably would go a bit above my coding skills. :)\nFor \"sleeping\" it would be possible to suspend instead of screensaver. I can't imagine other xbmc processes that need to be activated for \"sleeping\"?! And for suspend I would rather use a seperate function and not mix it with the screensaver one.\nSo for me the name as it is makes perfect sense. Even if the idle timer is resetted on toggling.\nWhat name would you suggest the function should have?\n. @cptspiff:\nAh. Now that makes it clearer. I'll soon close this pull request and be back with a new one, which does like you suggest. A last question, though. XBMC.PingApp will only wake the app. May I add yet another PR with an enable screensaver function?\n. @cptspiff:\nCan you please explain a little further what you want me to change?\n. Nice finding. :) Still I don't know how to fix this regression. Sadly I'll also have no time to try in the following weeks. I'll leave the pull request open as discussion base for this problem. But my solution above is probably not the right way to fix it. So please ignore it. \n. @jimfcarroll\nOf course not. :) I'm very glad you were able to fix this issue. Thank you very much. :)\n. IMHO standard behaviour should be, that in windowed mode the sss should kick in regardless of a video running or not. There should be an advanced setting however to override that, if someone wants to do so.\n. ",
    "digitech76": "Didn't know that, actually i already asked that in the forum since 3 days and no replys, my apologies.\n. If the forum it's the place to get help, why i haven't had a reply since 5 days?, that's the main reason i posted here cause at the forum nobody gave a damn about it, since i had this problem i can't enjoy watching movies as before, i guess i'm stuck but thanks for the ..help?\n. I know it's a open source software, and one of the best programs i have ever come across with and dedicated so much time i even consider it a hobby, sorry if im being rude or impatience, but here we are wasting 6 posts that don't help at all, by the way the sarcasm was born from my frustration.\n. I already did that three days before i post here,\nhttp://forum.xbmc.org/showthread.php?tid=136614\nand do me a favor, if you don't help stop posting, go back to work and preach other people's lives.\n. It seems that the perfect couple forgot how to read.\nCheck below my second post.\n\"Closed        digitech76 closed the issue a day ago\"\n. lol, sorry for being grouchy to u both, already forgot i still have this problem, but at least i smiled a little.\nAnyway i still love xbmc but our relationship isn't very good lately.\n. ",
    "phil65": "he would actually be able to go back to work if he wouldn\u00b4t have to deal with jerks like you all the time.\nplease close this.\n. for me it reads \"Closed digitech76 behaved like an idiot a day ago\". probably a bug, too.\n. @JezzX i could extend my skinning tool to convert those position tags < posx/y  > to < right > / < bottom > if they include the \"r\". \n. an idea:\ni think a better solution for those 2-way sliders would be to completely get rid of this slider-moving inside the control itself.\nwith that i mean that the slider button control should behave like a horizontal grouplist with two buttons (like spincontrol for example, with small labels showin the actual limit instead of up/down arrows) where both buttons open a popup which allows to make small or big steps + also direct keyboard input with numblock. this would also improve handling with touch devices etc I think because the slider could be shown a lot larger inside this popup.\nanother advantage would be that onleft/onright events for slider buttons could be used to focus another button/ scrollbar / whatever then so they behave the same as the other button types in terms of navigation.\ni know havin a new window isn\u00b4t perfect, but i really cannot see any other way to make this control intuitive.\n. would it be lot of work to also allow this for radiobutton textures? that would be great, too.\n. HasFont() sounds as if it is about a single font, that\u00b4s why i called it font theme.\n. HasFontset() would make more sense. Anyway, I\u00b4ll let XBMC Devs decide (if it gets included at all)\n. i\u00b4d be fine with both. i thaught this way is very basic and cannot break anything so that it could perhaps make it into Frodo.\nplus it\u00b4s also more powerful. wouldn\u00b4t hurt to have both possibilities though, defining the offset in font.xml is a bit more elegant, I agree with that.\n. at the moment the only way to add a complete additional fontset is by integrating a skin setting which toggles between label controls with different fonts and different y alignment. that\u00b4s much worse than adding a condition which works exactly  the same as the texture theme counterpart I think.\nanyway, if it doesn\u00b4t make it in just close it, just wanted to help those guys with crazy fontsets to have a good lookin skin. they\u00b4ll have to live with the misplacement then.\ncheers\n. would be ok with that, just tell me so i can get it fixed. i just did not know that there is some reserved space which should be used by skins, i (and problably the others too) thaught everything above 31000 would be ok. if this doesn\u00b4t get pulled it would still be nice if you would extend it to 32999 though.\ndoes it make a difference from a performance perspective if we clear a bigger range?\n. we\u00b4re at approx. 600, extending it would make it easier to pull all the strings outside of the range inside it with a bit of regex. without i have to search and replace every single label outside the range manually to fill up the empty spaces + who knows if we will hit 1000 in some years^^\nsince 32000 onwards is already used i think i have to go the hard route and invest an hour in search and replacing. not a big deal. will do that then if i find some time.\n. yes thx, knew that already. that\u00b4s why i will shift that change a bit to after initial release.\n. the addon.xml delivered by the translations repository uses whitespaces + most XML editors. i thaught i keep that consistent. could change it to tabs of course too. commit is more about gettin rid of the effectslowdown.\n. so do you want to remove the effectslowdown and, if yes, in what way? I\u00b4ll adjust it then.\nwould be nice to change that since a lot of skins are based on confluence so they all use wrong timings in skin xmls.\nwe had the same in nox, I used 0.8 as a multiplicator there. that way the resulting timings are not as \"weird\".\n. i set up a branch where i fixed all xml related stuff (formatting, indentation, whitespaces, xml headers, superfluous tags to end comments etc)\nhttps://github.com/phil65/xbmc/commit/53559af4c03cd050911e45b5b000788f6b93d53a\nIf I should send a PR for that let me know.\none thing i wasn\u00b4t 100% sure ( didn\u00b4t test):\n< onclick >PlayMedia(& quot;$INFO[Window.Property(LatestAlbum.3.Path)]& quot;)< /onclick > is used in confluence. i changed that to ESCINFO. correct?\n. also removed two unused strings.\n. updated. thx.\n. already included here: https://github.com/xbmc/xbmc/pull/2110\n. then loop=false + time = 0 wouldn\u00b4t work anymore. This way functionality stays the same, only freeze-ups are fixed.\nbtw would be nice to allow times in milliseconds for AlarmClock(), that would also eliminate the need for blacks small skin script which was discussed in the forum. will have a look at that when i find some time.\n. would not prevent freezing for seconds = 0 + loop = true.\n. thx for feedback. updated PR.\n. percentwatched is also fine. :)\nI\u00b4ll remove the temporary variables and change the property label then.\n. PR updated.\n. hmm i think it makes more sense to have them separated since they return different stuff + we also use property() for the related infos 'totalepisodes', 'watchedepisodes' etc\nthx for the suggestion, will update the PR in the evening.\n. PR updated again.\n. ...and apart from that the comment is also completely wrong because it has nothing to do with this feature.\n. so hh:mm:ss:ms and dealing with it in TimeStringToSeconds() ?\n. even nicer would be if we could define some builtin sequences with xml.\nso same structure like < variable > nodes except that every value gets evaluated, not only till the first hit.\nthat way we could even use conditions. implementing that is beyond my coding capabilities though, i still have much to learn..\n. what do you mean with multiple var?\natm we can call a var from inside another var var if you mean that (< value >$VAR[xyz] )\nwhat i mean is (and would would be more powerful) is something like this\n< action name=\"ExampleAction\" >\n < builtin condition=\"Control.HasFocus(xxx)\" >SetProperty(bla,bla)< /builtin >\n < builtin condition=\"Control.HasFocus(yyy)\" >SetProperty(bla,bla2)< /builtin >\n < builtin  >ActivateWindow(....)< /builtin >\n...\n< /action >\nwith difference to vars that every builtin gets evaluated, even when the first one is true for example.\nand then < onclick >Action(ExampleAction)< /onclick >\nwould have to be seperate from vars since multiple hits can only work for builtins, not for info labels.\n as i said i think i won\u00b4t get that done in a way that you\u00b4d accept the pull request, just an idea i was havin :)\nconcerning the PR: if wanted I can try to adjust it to your wishes. busy with some other stuff atm so it will have to wait a bit then.\nis there any advantage when using semicolon as a seperator? \nwe don\u00b4t use that anywhere else in skin xmls. escaping should work correctly i think when using commas since commas are only used inside brackets (parser respects that afaik)\n. PR updated.\n. yeah read that. i just thaught it would be nice to get it fixed on xbmc side since it\u00b4s  broken for a long long time and i doubt that they\u00b4ll ever fix that.\n. hmm at least on my end it fixed the errors for \u00e4,\u00f6, and \u00fc which are often used in German. (it introduced some \"&NBSP\" (--> space) at the end though, but if that\u00b4s all we could remove that manually in python of course)\n. strange, perhaps i was wrong. tested properly again and my patch doesn\u00b4t change anythin when using confluence.\nin nox (displayed in a textbox control) the characters appear correctly...\n. yep, workin here.\nanything wrong with fixing it this way @cptspiff ?\n. Not sure if it is the best idea to send pull requests with design changes for skins.\nConfluence is Jezz\u00b4s piece of art and I\u00b4m sure he\u00b4ll change stuff if he thinks it doesn\u00b4t fit well.\nbetter only send PR\u00b4s for code-related flaws  / typos / navigation improvements etc.\njust my personal opinion.\n. \"Confluence is a skin from many skins jumbled together\"\nthat\u00b4s not true.as far as i can see it\u00b4s completely his own work and design, of course inspired by previous work from others. \nanyways, i was just thinkin out loud being a skinner myself. not everyone has to agree with me :)\n. keep calm, i never said that it is a bad idea to even think of it and you\u00b4re perfectly fine to send every PR you want. i\u00b4m just sayin that me myself wouldn\u00b4t try to change any design aspects of the skin (perhaps i\u00b4m too much of an artist in that aspect, but i don\u00b4t think that painter\u00b4s should paint in each other\u00b4s pictures except they agreed to paint the picture together) \nand again, this is just my personal opinion, better wait for the answer of people in charge than to get offensive. (and for further discussions concerning this (if needed) please by PM)\n. ",
    "jabbera": "Sorry, not really sure what happened. I forgot to merge before I sent my pull request.\n. ",
    "killdash9": "Sorry, I'm new at contributing to xbmc.  I will send another pull request with the comment you're asking for.  As for the wonky indentation, it was intended to correspond to the paren depth in the boolean expression. \n. The gamepad dialog is nicer than the number dialog in one sense because it allows a code to be entered much more efficiently and an observer watching the screen can determine the password with the number dialog, but not with the gamepad dialog.\n. I have removed Apple TV-specific comments.\n. ",
    "thebandit": "Yes that is correct. The scrapers' source provides multiple numbering schemes in the xml (absolute, dvd, etc) so the scraper uses one scheme for the episode guide and a different scheme for the episode details. This is possible since XBMC uses the unique episode id provided by the data source to perform the match between GetEpisodeList and GetEpisodeDetails.\nThe default tvdb.com TV scraper does provide season/episode numbers in GetEpisodeDetails however I did check several 3rd party TV scrapers and it seems not all of them return that information in GetEpisodeDetails by default. This is why I did the modification as an if statement. Since iSeason and iEpisode are defaulted to -1 in the VideoInfoTag if these values are not returned by the scraper then it will use the season/episode values from the filename as it does currently.\n. Yeah ok I see what you're getting at. \nI have successfully tested the default tv scraper using the default settings with this change but I haven't tested the various ordering options so I want to do some more testing before giving my 100% go-ahead.\nI will report back here once I'm satisfied that it will not break (or that it does). Thank you for considering this addition.\n. So I've tested this as best I can and I've seen no ill effects from the change. Apart from scanning my library I created stubs to mimic absolutely numbered episodes and episodes numbered by air date and they all scrape as expected using the thetvdb.com scraper.\n. ",
    "odon": "NMB lookup will still be useful for users without local DNS. But it might be annoying to do a request over internet before.\nMaybe try to ping all NMB returend IP's in case of multiple answers ?\n. Issue is that on Linux with nmblookup installed, XBMC can't reach hosts which returns multiple IP and where the last returned IP is not reachable by XBMC client.\nI had this problem with a NexentaStor File Server with 2 NICs on different networks.\nWorkaround is to declare NAS IP in advancedsettings.xml, but real issue for the unreachable File server is still pretty hard to identify. An other pretty useful info would be to log XBMC DNS cache updates.\n. Right, I don't even use SMB within XBMC. All my shares are NFS-based. But if nmblookup is available, it seems it is used for name resolution of hostnames, whatever the protocol is.\n. ",
    "Begall": "Did you turn on your xbmc box while the display was shut off? This for me leads to a problem almost exactly as you've described here. \n. ",
    "anthonyryan1": "Is it safe to presume you mean the Trac linked on the forums? A forum is not the right place for a bug report.\nI would also suggest the issues tab be disabled on here, if this is not the place for issues.\n. I would respectfully disagree, with the sole reason that the exact\nfile paths used on Linux and OS X are already not assured to be\ncompatible with Windows. You can't just copy the full database and\nexpect it to work, as they have different reserved characters (all\nother characters that are not permitted on Windows are accepted fine\nby XBMC Linux as it currently stands, this is the only exception). Not\nto mention the fact that such a change would break backwards\ncompatibility with a large number of people using those reserved\ncharacters on non-Windows platforms.\nOn Wed, Aug 1, 2012 at 2:23 AM, Martijn Kaijser\nreply@reply.github.com\nwrote:\n\nBesides that XBMC is meant to be system independant so treating the \\ on one system as valid character isn't something that should be done IMO\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/1232#issuecomment-7419266\n. While I agree it's \"not correct\" to name something like this, there\nare episodes in the default scraper that are named with backslashes\nincluded, since I want file names to match the library name for\norganization purposes.\n\nRegardless, the character is valid on the file system, so I'd argue it\nshould be valid in programs using the filesystem. No matter the\nlanguage convention or any arbitrary limitation on a different\nfilesystem. It's simply a matter of something being possible, or it\nnot being possible, not everything recognizes it as valid except one\narbitrary program. (And I do believe XBMC is the only program my\nentire media server that doesn't recognize  this character).\nOn Thu, Aug 2, 2012 at 12:34 PM, Trent Nelson\nreply@reply.github.com\nwrote:\n\nThere really isn't a problem here seeing as you're misusing the punctuation mark...\nhttp://en.wikipedia.org/wiki/Slash_(punctuation)#In_English_text\nvs.\nhttp://en.wikipedia.org/wiki/Backslash\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/xbmc/xbmc/issues/1232#issuecomment-7460656\n. \n",
    "neilj1983": "Worked fine for me!\n. ",
    "dedeibel": "I was afraid you'd say something like this. Until then I have my patch. Thanks anyway.\n. ",
    "hacke78": "@opdenkamp, not sure if this is the correct way of doing it, please verify.\n. OT: While looking into teletext in general I noticed that the font used in XBMC is somewhat ugly:\n- Parts of letters not visable\n- Hard to read and not similar compared to \"standard\" Television teletext fonts.\nI've been looking around for alternatives and found one, which I think could be a good replacement candidate (from https://github.com/ali1234/vhs-teletext/)\nScreenshot using XBMC font:  http://www.alfredsson.nu/teletext4-3.png\nScreenshot using alternative font:  http://www.alfredsson.nu/teletext-newfont.png\nWhat do you think about replacing the font with this one?\n. @opdekamp: Sorry but I don't know how to do the rebase and can't find a good guide. Guess I've made a mistake with my fork, using my 'master' for this PR. Will you be kind to guide me?\n. @mikrohard, thanks!\nHope I got everything right.\n. Like this? Thanks for the support, learning :)\n. Not sure I get the spaces at the EOL. The empty lines seems to follow the previous coding style...?\n. Got it now :) \n. Will contact the author. Regarding just changing the font, we might get some objections as it's not as nice looking due to the \"retro style\" (original teletext look).\n. Thanks Ali1234 for your input!\nI will later update the PR to only replace the font then, according to the \"consensus\" here. \n. ",
    "mpschr": "ok. if you like the idea, open a thread please. i have no account there.\n. ",
    "Jeltel": "This issue turns up on a 3rd party addon, but XBMC provides the means to display the password in plaintext. Besides I already contacted the author of the addon.\nI will go to trac to report te problem though, thanks.\n. ",
    "lemv": "I was testing in portuguese (my language) and found some msg without translation. How do i use it? am i allowed to make changes? I thought i was making a suggestion?\nlemv\nthanks\n. ",
    "strich": "Hi,\nI believe some of your work here includes a fix for downmixing AC3 audio from 5.1 to 2.0? If so, would it be more beneficial to put it into its own pull request? There are many who are suffering this issue on the various Raspberri Pi XBMC distro's (OpenElec) and it looks like this pull request is quite large!\n. No problems huceke. Is there an ETA on this pull request?\n. ",
    "peol": "@Pezmc I'm sure we're a lot of people waiting for this to get merged, but I'd rather wait for a proper merge than having a broken main repository that might take weeks to trace bugs in (and code that doesn't follow the XBMC standards). Let them work in peace, I'm sure they'll announce it once they got it all sorted out. :)\n. I've tried this on latest master on OSX, works great!\nI've also tested it on 12.0.3 on Raspberry Pi (OpenELEC), works great there too! :)\nThanks a lot fo fixing this issue, @Montellese.\n. I can also confirm better playback on rpi (both 256 & 512). Well done, @popcornmix.\n. ",
    "Pezmc": "@peol Can't this be split into some of the major problems as separate pull requests. E.g. the force HDMI and Downmixing AC3\n. ",
    "ace20022": "Hi,\nI posted a similar patch 2 days ago http://forum.xbmc.org/showthread.php?tid=131237&pid=1167850#pid1167850.\nIn the following posts I described the situation when the debugger stopps.\nSince this patch was rejected. I posted a new one today: http://forum.xbmc.org/showthread.php?tid=124600&pid=1169079#pid1169079 .\nace\n. I'm a bit concerned if that is sufficient. Using the old conversion the crash happened within seconds, if not instantly.\nWith the new one [the one without 2*] it happened within minutes. Maybe the old conv. led to a higher frequency of calling GetCurrentPadding(...) and therefore increased the chance of calling GetBuffer(...) and GetCurrentPadding(...) at the same time, which leads to a crash.\nSo maybe your return value only reduces this chance?\nBut you are way more into this stuff than me, what do you think? \n. @sialivi I added it here SHA: ab3b9500fc5b0118ca452c60c65cfb40371b1f79 . If you know some more please post them in the forum.\n. Will do so. Should I close this one and open a new one or can this be done in the same one? (I am very unversed in git/github) Sorry! \n. I'm afraid I'll have to redo this completely from the start, since the chances are scattered all over the commits. Sorry for the mess :(\n. Now I'm done with the reorganisation of the base feature set.\n@DDDamian Thank you for offering your support! (My platform is indeed Windows)\n. @vdrfan Will do so. Since these two methods are basically copies of the external subtitle methods, your comment is also valid for them, I guess.\n. I noticed that the DVDFileInfo part is not as easy as I thought at first. I will add a commit soon.\n. > I noticed that the DVDFileInfo part is not as easy as I thought at first. I will add a commit soon.\ndone, I altered the relevant commit itself.\n. > \".\" is not good filename parts delimiter - f.e. \"The.Dark.Knight.Rises.\" will fail with this approach\nYes, it's not perfect. Imo a user who wants \"nice\" external audio tracks has to care for himself about it.\n\nI think that language and \"type\" extraction might be done in scanforexternalaudio/subtitles methods - we could clean external audio/subtitles filename of base video filename easily and interpret what's remain as language and/or type\n\nI also thought about diffing the the names. I have a sketch on my hd, but in the DVDFileInfo file. The problem there is that you can not easily get the video filename; more precisely I'm not sure what to do if there is more than one video stream. Furthermore, if the video is named \"The.Dark.Knight.Rises.English\" then the external track has to have the name \"The.Dark.Knight.Rises.English.English\". \nDoing this in scanforexternalaudio/subtitles methods will be \"nicer\".\nWill have a look at this asap.\n. @pieh\nI implemented the file name diffing part, but not in scanforexternal. The reason is that if we do so, we have to elevate the infos to the dvdplayer (the thumbloader part is a completely different thing, anyway).\nI thought about a struct and a member vector for the dvdplayer, like \nstruct externalAudioTrack\n{\n    CDVDInputStream* m_extInputStream;\n    CDVDDemux* m_extDemuxer;\n    CStdString lang;\n    CStdString type;\n    CStdString code;\n}\nBut then I have to rewrite almost everything. If this is a stopper for this PR I will do it after the review. \nThe reason why I haven't added a commit is that I found an access violation.\nI use(d) CLangCodeExpander::ConvertToThreeCharCode(CStdString& strThreeCharCode, \n                                            const CStdString& strCharCode, bool localeHack /*= false*/)\nto get a language code from a language name, e.g., English. The point is that this method sets the global locale of the system. I really have no clue why the method is named like this!? The crash occurs when xbmc starts and a movie with tagged ext. audio files is in the recently added list, so its maybe a thread thing.\nI think the easiest way would be to parse lang. codes directly, i.e., users have to name their files accordingly like \"The Matrix.eng-Commentary.ac3\". What do you think?\n. @pieh\nReally great! Way better than my stuff! Is this final and is it possible to merge your commits in my branch?\n. As @pieh suggested, I dropped the lang/type extraction and rebased on this occasion.\nI will reimplement after/if PR #1365 got merged.\n. Just rebased. Has anyone from the team the time and interest to review this? I guess @elupus is the main dev for this part of the system, right? \n. fixed some bugs\n. Revised version, included simplifications.\n. @elupus does this pr has any chance at all to be merged before hell freezes? :-) If not I would like to close it. \n. Not even 2 bytes and a few seconds left?\nI know the team follows the rule to simply ignore unwanted features, but I don't think that this is right. Over 1/3 of the prs are older then 6 month and 191 opened at the moment are too much imho.\n. @cptspiff Thanks for the response! I'm afraid I can't reopen it because I changed the layout of my repo.\nI will open a new one.\n. Two more things:\n- What about isMythTv() and isTuxBox(), and maybe others?\n- The wiki entry http://wiki.xbmc.org/index.php?title=Subtitles#Compressed_subtitles states that the name of the archive has to be the name of the video file. This is not the case, any archive in the search path is examined. Furthermore, besides rar also zip is supported and there is no option to \"automatically turn on packed subtitles\".\n. The priority selection gets  skipped for dvds (not sure about blurays).\nThe relevant piece of code is:\nvoid CDVDPlayer::OpenDefaultStreams(bool reset)\n{\n  // bypass for DVDs. The DVD Navigator has already dictated which streams to open.\n  if (m_pInputStream->IsStreamType(DVDSTREAM_TYPE_DVD))\n    return;\n. @pieh any news about this? Since blacks Video language script (http://forum.xbmc.org/showthread.php?tid=155693) gets include into skins, ext. subs language might rise on the wanted list. I've opened a pr to your repo some time ago proposing to store the info in the db. with that blacks script should work out of the box.\n. @jpsdr I can help you via TeamViewer if you like. As my first PR is just a few days old, I can understand you ;) Just pm me your TeamViewer data in the forum.\n. Hi jbdk,\nI wanted to start with something very similar ;) Do you mind having a look at the ticket I referred to at http://forum.xbmc.org/showthread.php?tid=142345 ?\n. The preferred audio track selection has be intensively discussed here #700.\nMy suggestion is that you tidy up this pr:\n- drop the translation commit completely\n- squash the indent fix\n- split the audio and subtitle changes into separate commits\nRegarding pieh's pr, I'm not sure if you should merge it into your pr, because it is not yet accepted or even reviewed.\n. @sialivi Imo \"primary preferred\" exactly means that the user wants to hear that language.\nSo in my case I would set 1st to german and 2nd to english. If I understand your point right, then I would get eng audio for every movie that was produced in USA/Uk/etc. !?\n. @jbdk imo there are two possibilities. First you close this pr and open two new ones, one for the audio and one for the subtitle part. Second you change the things I mentioned above in your local repo and force push the new commits to the branch you made this pr from, this will update this pr. The first one is maybe the nicer one. And sorry for the confusion with pieh's pr, I just wanted to point you to it; you could stay with your implementation until pieh's work got merged, so your pr is easy to review.\n. @jbdk I hope this doesn't mean you lost your interest!\n. I release an addon which offers the functionality of this PR: http://forum.xbmc.org/showthread.php?tid=153783\n. @Montellese I made the changes you suggested, thanks for the really fast review!\nAny ideas about distributed tv shows? Consider the following structure:\nx:\\shows\\The X-Files\\Season 1 and y:\\shows\\The X-Files\\Season 2\nIf a user wants to change the poster of season 2, which path should be offered?\n. @MartijnKaijser \nI changed the comment, even though it was a temp comment anyway.\nCan you please explain why this is not needed any more?\n. @MartijnKaijser \nNow I understand, you referred to the downloader. The new behaviour will save a lot of bandwidth which is great!\nBut I for myself prefer local artwork, so it was just an example.\n. @jmarshallnz \nSince you mentioned multipath, I wondered why the tv show in my test setup\nx:\\shows\\The X-Files\\Season 1 and y:\\shows\\The X-Files\\Season 2\nhad no multipath. There's one episode in each directory.\nI think I discovered a bug:\n- the tv shows windows shows the correct amount of episodes: 2\n- the tv shows info dialog shows 1 ep and path x:... set\n- after removing the show from the db only the one with path x:.. is removed, i.e. the show remains with 1 ep and path y:.. set \n. Regarding the path of an movie set: we could construct a multipath from the movies inside the set. Any thoughts?\n. @jmarshallnz Sorry for spamming, but could you verify this https://github.com/xbmc/xbmc/pull/1740#issuecomment-10142433 ?\n. @jmarshallnz \nmade the changes you suggested, thanks.\n. @jmarshallnz your comment got lost, sorry. I changed positions, don't know why it was that way ;)\n. I'm working on it; having problems because #1418 got merged: the order of the members of a set is random now and therefore its path. Should I push it anyway and provide a solution later?\n. In the first commit a set's path is randomly set, due to the changes mentioned above.\nThe second commit fixes this. The additional int variable could be saved if the year of a set is set to the minimum and not the maximum. This needs a review again ;)\n. I just found out that the browser can handle mulitpaths, really nice. I haven't used them because I got confused with these \"stacked shows\" I mentioned before. Will do the rest of the work tomorrow, since beta 1 is closed now anyway.\n. I used a new test structure and rebuild the db. Now GetVideoInfoTag()->m_basePath always is a directory. Has this been changed since I opened the PR?\nThe only exception are episodes, but these can't be stacked afaik.\nThe path of a set is a multipath now because  the browser can handle them nicely.\n(btw I kept the other commit(s) only to have a history)\n. Ok, this is getting worse and more complex than I thought at the beginning.\nThe value of m_basePath depends on a scraper setting, namely \"Movies are in seperate...\".\nIf that setting is on, m_basePath stores a dir, otherwise it stores a file path, possibly stacked etc.; really confusing for a newbie.\nWill shut up now till I (think I) covered all cases.\n. > Will shut up now till I (think I) covered all cases.\nHopefully I have now;)\n. Next try, and thanks for all the patience!\n. Done.\n@jmarshallnz I thought about adding something similar to the music section, what do you think?\n. Rebased, just in case...\n. Thanks for the review!\n. Big thanks to @Paxxi! This seems to fix a huge bug in get_audio_info, now all relevant info can be queried at once again.\n. No, see PR #2198 .\n. While implementing this I noticed that the stream details of dvd tracks aren't set properly.\nWill address this issue in a separate PR eventually.\n. Agree, I just wanted to keep this PR minimal w.r.t. code changes.\nThe same problems occur regarding subtitles, I would also open a separate PR for that.\n. fyi I started to work on the root issue: https://github.com/ace20022/xbmc/commits/unify_stream_lang\nI will open a PR once it's ready.\n. I opened an advanced PR at PR #2162 .\n. I'm not 100% sure what you mean since I haven't added any function to the player. Do you want to save method calls? If this is the goal I can add a commit, but I doubt that another lengthy method improves comprehensibility. \n. @elupus ideally #2128 should go in first, because it fixes a bug in get_audio_info which I would only be too happy to use.\n. Now the language of any selection stream should be a three char code. These are used for the language priority evaluations.\n. I'm working on an update, but found some other issues, e.g. audio_attributes.lang_extension is wrong, the info is store in  audio_attributes.code_extension. Maybe I can push something tomorrow; when is the merge window closed?\n. Some issues that I've noticed and don't know how to handle correctly, so comments are highly appreciated!\nMoved here: https://gist.github.com/ace20022/c9da53faefebb3d76ef5\n. Had a look at blurays in the meantime, no special handling is needed for them. Btw this pr should fix the auto language selection since this also uses 3 char codes.\n. @elupus Could you please have a look at this pr. It is not only a gui gimmick, at least imo, it also fixes the subtitle auto-selection and fixes, or improves, json-rpc usage, e.g., remotes w.r.t. language representation. At the moment you get the full language names, sometimes even localised and in the wrong field:\nFor example: https://gist.github.com/ace20022/4a5207870ff4302b9ca0\n. I have revised and extended this pr after 87047e93e02375851505e9d6c420dd1225996bdb. It's quite large now.\nThere are some issues regarding libdvd that I've noticed. I opened a gist for discussion, so no mail spam will be generated: https://gist.github.com/ace20022/c9da53faefebb3d76ef5.\n@davilla Could you please check the amlplayer commits? Especially 3ee15dac4af70c068774f8f01d644165a6e01ff4.\nHopefully I haven't miss anything.\n. @davilla thanks, that was really quick ;)\n\nI see the previous commit that does the expansion at the source.\n\nNot exactly, that's just a conversion to 3 chars if necessary. The only place where the full name is required is the gui, imo.\n. Only for presentation in the audio/subtitle settings dialog; for subs this is done already (in the current implementation)\n. @elupus If you find some time, could you please have look? Especially at the gist thing. I'm afraid this month's deadline is coming closer ;)\n. No problem, have fun :)\n. @elupus will do soon. Any thoughts about this: https://gist.github.com/ace20022/c9da53faefebb3d76ef5 ?\nI can't assign it to a merge window (not a team member), can I :) ?\n. @elupus done.\n. @elupus I replied here: https://gist.github.com/ace20022/c9da53faefebb3d76ef5 (no notifications triggered from gist...)\n. @elupus \nOK, checked it with an hexeditor in combination with ifoedit and the newer pgcedit. The correct enum is/should be:\nc++\n/* The audio format */\ntypedef enum {\n  DVD_AUDIO_FORMAT_AC3        = 0,\n  DVD_AUDIO_FORMAT_UNKNOWN_1  = 1,\n  DVD_AUDIO_FORMAT_MPEG       = 2,\n  DVD_AUDIO_FORMAT_MPEG2_ext  = 3,\n  DVD_AUDIO_FORMAT_LPCM       = 4,\n  DVD_AUDIO_FORMAT_UNKNOWN_5  = 5,\n  DVD_AUDIO_FORMAT_DTS        = 6,\n  DVD_AUDIO_FORMAT_SDDS       = 7\n} DVDAudioFormat_t;\nthe include comes from xbmc\\cores\\dvdplayer\\DVDInputStreams\\dvdnav\\dvd_types.h . Is it sufficient to only change it there? The other files are lib\\libdvd\\includes\\dvdnav\\dvd_types.h and lib\\libdvd\\libdvdnav\\src\\dvdnav\\dvd_types.h\n. @elupus changed it. Which upstream is the correct one, since videolan forked the project? \n. @elupus I proposed it here: http://lists.mplayerhq.hu/pipermail/dvdnav-discuss/2013-March/thread.html.\nVideolan.org has no mailing list for libdvdnav...\n. @elupus Can this one go in this merge window?\n. Ah, that's a great pity! I only tested the pr with a video that has the same codec and channel count in all streams, sorry! \nI could really use it for my language preference addon. Maybe I will add a method down there.\n. @Montellese I can't see a way to reopen this one, so I opened a new one: #2224\n. Thanks for almost instant merging ;)\n. @Montellese @elupus Any thoughts or feelings about it?\n. @elupus \nIf you mean the attached conversation in the other pr, then I may have misunderstood you. The situation is the same here. Do you really want me to drop the existing methods? I guess there are many places to adapt. Should I do that for all stream types (video, audio, subs)? I'm willing to do it, but I would like to have a clear \"go\" beforehand.\n\nelupus: Sorry, missread the diff. Will have to look at it in some more detail. But looks good initially.\n\nace20022: I'm not 100% sure what you mean since I haven't added any function to the player. Do you want to save method calls? If this is the goal I can add a commit, but I doubt that another lengthy method improves comprehensibility.\n\nelupus: Instead of adding yet another function to IPlayer could you add getstreaminfo(int type, int index, struct&info) instead so we can remove all the other.\n\u2026\n. Sorry for being kind of annoying, I just want to make it right. \nI just noticed virtual bool GetStreamDetails(CStreamDetails &details){ return false;} in IPlayer.h. I could give that a face lift, since it also has no info about bitrate and name. But this only gets updated when a file is opened, except in case of dvds there's its updated every 500ms! I'm afraid it could be inaccurate. So changing the players is the better solution i think, right?\n. Rebased after 87047e93e02375851505e9d6c420dd1225996bdb\n. Thanks, I wasn't aware of that. Now Player.Audio.Stream.Extended is dropped. Is this the correct way?\n. @Montellese shall I bump the bump ;) ?\n. Done.\n. @elupus Do you have something like that in mind?\n. @jmarshallnz there were only two places where CStdString was required. I added a commit...\n. Is the renaming and constructor stuff okay as extra commit? It's really painful to update each of the existing ones.\n. > Yup. One thing though. Add a accessor function for this data in guiinfomanager, which caches the struct until next frame. There should be a function that is called on each new frame in there somewhere. That would reduce the load on players for multiple info label accesses.\n\n\n\nHaven't found it. I could implement it the way it was done for MUSICPLAYER_BITRATE:\ncase MUSICPLAYER_BITRATE:\n    {\n      float fTimeSpan = (float)(CTimeUtils::GetFrameTime() - m_lastMusicBitrateTime);\n      if (fTimeSpan >= 500.0f)\n      {\n        m_MusicBitrate = info.bitrate;\n        m_lastMusicBitrateTime = CTimeUtils::GetFrameTime();\n      }\n      CStdString strBitrate = \"\";\n      if (m_MusicBitrate > 0)\n        strBitrate.Format(\"%i\", MathUtils::round_int((double)m_MusicBitrate / 1000.0));\n      return strBitrate;\n    }\n    break;\n. Ok, can I squash them by now ? Shall/Can I push subs and video stuff in one commit each (in new prs)?\n. Added subtitle stuff, as for audio I haven't changed how things get set. For that I have opened the unify pr which I will update after this gets merged. Kind of special w.r.t. subs is amlplayer: getlanguage is not implemented and the logic in getname seems strange to me, can a specialist have a look at it (for later use in the unfiy pr)?\n. Added video stuff, let me know if I should integrate other methods, too.\n@davilla thanks for review, may I discuss the aml subs stuff with you some time when I start working at the unify pr?\n. Can this be merged soon? Then I could resume working on the other two pr for which this one is the base.\n. I stumbled upon this because the ms compiler spits out two warnings for this file:\n\\xbmc\\guilib\\guikeyboardfactory.cpp(115): warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning)\n\\xbmc\\guilib\\guikeyboardfactory.cpp(135): warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning)\nI can't figure out why these are there, but by what I found (http://stackoverflow.com/questions/1847860/why-is-there-a-performance-warning-on-cast-pointer-to-bool), I think it can be ignored? \nOther ideas?\n. @wsoltys super! I tried had to count them with my fingers, but they aren't what they were once ;)\n. @Memphiz correct?\n. Thanks all of you. @DDDamian left your beloved AEDeviceType variable in place ;) \n\nand no objections to the constructor inits either - always easy to miss manually :)\n\nOther opinion?\nwsoltys said:\n\nProbably it would be better to extend CAEDeviceInfo by a bool default device and use that in CSoftAE::GetDefaultDevice().\n. @DDDamian Do you mean \"remove [REVIEW]\" or \"squash by file/class\" or \"squash all into one commit\" ?\n. OK, but af67453f051668e6cc8521e9c209bdd84983ef5a is present in Frodo and therefore a candidate for 12.1, I guess?\n. Done twice, forgot the rebase, sorry.\n. Next, I will check the complete AE.\nIf desired, I could check the other parts bit by bit.\n. Issues I haven't touched:\n\n[Encoders\\AEEncoderFFmpeg.cpp:245]: (portability) Casting from float* to integer* is not portable due to different binary data representations on different platforms.\n[Engines\\CoreAudio\\CoreAudioAEHALIOS.cpp:1167]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\n[Utils\\AEBitstreamPacker.cpp:110] -> [Utils\\AEBitstreamPacker.cpp:111]: (performance) Buffer 'm_trueHD' is being written before its old content has been used.\nDon't know if these are problematic.\n. > i guess somebody is afraid of evil casting games.\nIf I knew you were merging this, I would have removed the [REVIEW] tag from the commit message ;)\nThanks anyway!\n. Dropped the libcurl commit.\n. This fixes it for me. (but I'm on another pc now)\n. I just saw that Get() isn't thread safe, and it seems to be not that easy to guarantee it: http://www.aristeia.com/Papers/DDJ_Jul_Aug_2004_revised.pdf or http://blogs.msdn.com/b/oldnewthing/archive/2004/03/08/85901.aspx\n. Implemented @cptspiff suggestions. Can you check if it's OK so: 46e221db883ecc259f5611bfd422eb7e3d56415b\n. yes it does, thanks.\n. Will do tomorrow morning. If this is ready to merge already, I will remove the tags while rebasing. (?)\n. @cptspiff rebased.\n. Just to be sure, squash the most recently with their \"partners\" or squash all 31 commits into one?\n. @cptspiff done ;)\n. This is a candidate for 12.1 imo, if that isn't finished already. \n. Nothing, resulting in an empty string. In the file I tested there's no artist field. I checked this with a hex editor, the artist is stored later/separately in that file. I also checked it after changing the artist field with the windows media player/mp3tag.\nBesides that I read on a msdn website that \"artist\" and \"actor\" are aliases for author: http://msdn.microsoft.com/de-de/library/windows/desktop/dd562383%28v=vs.85%29.aspx\n. @jmarshallnz done. The problem in that case is that there's no artist list retrieved if multiple artists are given separated by some delimiter (\"/\" ?). I could add a string split block or the like. \n. Thanks! Just one click away :)\n. @elupus Did you had something like this in mind?\n. > Yes, but you can just reset the info on every frame, called from application Imho. This is only allowed to change during frame move not render.\n@elupus Not 100% sure I got it. But if we update the info in FrameMove() [application.cpp (line 3055)] then the players methods get called even more often. Currently they are only called if the VideoOSD window is visible.\nOr have I missed something?\n. OK, now I understand. My initial idea was to update the info just every 500-1000ms to save even more calls, because it's not too important that this info is 100% up-to-date imo. But that behavior could easily be misinterpreted as a bug or at least negative by users, I guess.\n. @jmarshallnz done. Do you think it is worthwhile to do a similar thing for the m_currentFile->GetVideoInfoTag() calls at line 3570 ff. ?\n. Yes, I just wondered if it makes sense to do only one call per frame. \n. > m_currentFile is constant while a file is playing back - the information is pushed to the manager, so m_currentFile is only updated on play start anyway.\nHaven't seen you on irc, so sorry for all the spam. I meant the getter calls for the infoTag, but I guess these are cheap enough?\n. @arnova the commit message is wrong now, delete /ftp ;)\n. @cptspiff \n\ni'm wondering if zipped/rarred extra audio tracks is common enough to warrant the overhead...\n\nNot sure either, just copied it from the external subtitle code. I think I should refactor and reuse that.\n\nsome of this code made me deja vu ;)\n\nI will think about a way to remove the duplications :)\nThanks a lot so far! I'm afraid it will take some time to update it; I simply don't have much spare time at the moment ;(\n. @cptspiff I've implemented most of your comments. The overall diff of util.c is quite a mess due to the renaming I've done. I wasn't aware of that because I only saw the individual diffs until I've push them to here. I can revert the renaming stuff if you prefer that.\nThings not done yet:\n- I've commented to the first one: https://github.com/ace20022/xbmc/commit/9d3848b2551315dc7e246310800f5caeaabad766#xbmc-cores-dvdplayer-dvdplayer-cpp-P172\n- The code duplication in DVDPlayer and DVDFileInfo. \n  - Do you think I can solve this by adding an new class?\n- playback stops if the selected external track reaches its end (before the end of the video stream)\n  - maybe fall back to next audio stream?\n- seeking may lead to temporary stutter\n  - really no glue :(\nBest regards!\n. @elupus finally ;-)\n. @cptspiff are the utils changes okay? If so I could clean this pr up a bit.\n. @elupus I've uploaded an approach of your suggestion to a separate branch: https://github.com/ace20022/xbmc/commits/ext_audio_unified (https://github.com/ace20022/xbmc/compare/ext_audio_unified)\nOf course, only the changes to dvdplayer.c/h are of interest. Could you please have look at it when you find some time? \n. @cptspiff like that? A similar problem exist with CDemuxStream::operator= line 111, what can be done in this case?\n. @elupus , @cptspiff Any thoughts what to do with this one:\nvoid operator=(const CDemuxStream& right)      { Assign(right, true); } in line 111 of the same file?\nShouldn't it also return a reference?\n. Just out of curiosity, isn't it sufficient to add the extension via advanced settings xml?\n. > Upstream commit is b066d90\ngives me 404. You probably forget to add the prefix FFmpeg/FFmpeg@\nFFmpeg/FFmpeg@b066d90211072c7532e17c0c54d8475f10fc97ad\n. > Renaming the commit message is not enough. It needs to be split up into parts it touches and commit message needs to tell what it does. This for future reference in bug tracking.\n\nLike this\n\n@mtisza The easiest way is to cherry-pick the commits from bobo1on1's and classicspam's repo to your's, imo.\n. Most callers check that beforehand. The only place with a theoretical null param is CDVDPlayer::OpenDemuxStream() line 666 ;) and that is in a try block. So just for safety.\n. Yes, I tried to overload it first but that's not supported by the code generator, default values are.\n@ how can I find out which addon is the caller of such a method?\nWhen I've put a breakpoint into this method I noticed that it is called quite frequently, once a second or so.\n. > When I've put a breakpoint into this method I noticed that it is called quite frequently, once a second or so.\nFound it out, it's service.qlock . This addon indeed asks for the language every second.\n@MartijnKaijser I guess I didn't express myself clearly, xbmc.getLanguage() works as before.\n. I'm quite unhappy with the result of region in case of full name. The 2/3 letter code case seems to be correct.\nFor example the result for Australia is English-Australia (12h). Using g_langInfo.GetRegionLocale() and converting, like in the other cases, does not help since region locale is stored as ISO3166-1 code. But we don't have a mapping for that standard. I'm not sure if it's worth the effort to create that map. Other opinions?\n. I copied the first 3 commits form #2643. I remove them form one of the prs before merge.\n. I've added constants. The method has to be called like this now:\nconvertLanguage(English, xbmc.ISO-639_1)\nconvertLanguage(English, xbmc.ISO-639_2)\nconvertLanguage(English, xbmc.ENGLISH_NAME)\nIf this is fits the request, I will adapt the comment and add it also to the other pr.\n. imo the xbmc. can't be omitted, can it? @jimfcarroll  @topfs2 \n. Personally I see no benefit in that. Any other constant has to be prefixed too.\n. @jimfcarroll cppcheck found some unused methods, I guess they are there for a reason?\nC++\n[Alternative.h:48]: (style) Unused private function: 'Alternative::which'\n[Alternative.h:84]: (style) Unused private function: 'Alternative::operatorT1&'\n[Alternative.h:85]: (style) Unused private function: 'Alternative::operatorconstT1&'\n[Alternative.h:86]: (style) Unused private function: 'Alternative::operatorT2&'\n[Alternative.h:87]: (style) Unused private function: 'Alternative::operatorconstT2&'\n. The problem is the (unused) copy that it++ creates.\nhttp://www.tantalon.com/pete/cppopt/asyougo.htm#UsePrefixOperators\n. ",
    "rgaiacs": "@arnova Sorry about create the issue here.\n@alanwww1 Can you open up a ticket in my place? I'm yet have to create a account.\n. ",
    "iroot": "No, the place is still there. Why space before the colon?\nhttp://storage8.static.itmages.ru/i/12/0823/h_1345731614_2963611_03d8883b72.png\n. ",
    "mcsmart": "Suspend() and Resume() support is very nice, but unfortunately also causes one problem for me: XBMC crashes when playing movies (sound passthrough) on Linux.\n. Fixed in current git. No more crashes on Linux, thanks.\n. ",
    "frals": "I experienced crashes when compiled with --enable-shared-lib and and the lib linked with 'standalone video library updater' (from http://forum.xbmc.org/showthread.php?pid=1126458#pid1126458). \nIt might not be a common crash, but since the validness of the ptr is checked in one place in the original I think it should be checked whenever used here.\n. ",
    "mattfysh": "https://github.com/xbmc/xbmc/blob/master/addons/webinterface.default/js/MediaLibrary.js#L624\n. ",
    "sofakng": "Very exited about this!\n. ",
    "bennykill": "I dont't think that the raspberry is powerfull enough to navigate through the channel list while watching a channel! Tried it with raspbmc R4 connected to a tvheadend server witch ran on an ubuntu pc and got crashes, picture bugs and so on! Main problem is the CPU performance! :(\n. @Memphiz With this information I wanted to help by telling you about my experiences. Because implementing PVR support isnt necessary when the hardware isnt strong enough! ;) Someone who wants to use XBMC as a receiver also wants to use a channel list! ;)\n. ",
    "maddox": "I was only being courteous and adding a summary. The forum is what failed me already.\nhttp://forum.xbmc.org/showthread.php?tid=135942\n. ",
    "kopf": "Please disable your Github Issues section, in that case.\n. ",
    "Baswazz": "Is there any progress on this? Will it be merged into Frodo Final?\n. Thanks!\n. @da-anda how do i need to name the channel icons?\nFor example i have a channel from TVHeadend called: TLC / Animal Planet\nMy channel icon is called: tlc animal planet.png this does not work.\n. I changed all the spaces in the channel icons with underscores \"_\" but none of the channel icons which have a underscore in the channel icons are displayed in XBMC.\nnederland_1_hd.png\ntlc___animal_planet.png\n...\n. Did you had time to have a look yet?\nI changed the icon like you suggested, only lowercase letters. It does not show the channel icon.\n. That was quick.\nIt already has been reported on the forum. Because it is not been fixed in one of the Beta's or RC, i thought i have to bring this to the front.\n. ",
    "fernandog": "Question for 13-gotham: with this, external subtitles will be considered a new stream? Will the video database have a new column to indicate that a movie/tv-show has a external subtitle? If so, skins can offer image labels and or filter to movies/tv-show that has subtitles.\n. Question for 13-gotham: with this, external subtitles will be considered a new stream? Will the video database have a new column to indicate that a movie/tv-show has a external subtitle? I so, skins can offer image labels and or filter to movies/tv-show that has subtitles.\n. Is it correct when I'm at TV SHOWs and it does an \"up one level\" to MOVIES when list is empty?\nIt should up on level to tv show, isn't? Not to movies\nThanks\n. Oh, I could\u2019t reproduce it anymore\nWhen I did happen my movie library was empty (only tv-shows). \nNow there\u2019s movies and that didn't happened again\nWhen a tv-show with only 1 episode ends, I shows the episode detail with a \u201cseen\u201d mark and don\u2019t go back to the list of TV-shows. I have no filters. I'm using media-info view.\nIs this what is supposed to do?\nthanks\n. Why don't you force a update/refresh/hide watched process on the tv-show in your code/logic?\nYour idea is great.\n. Thanks. will test as soon as the commit goes to Raspbmc.\nTwo doubts:\n- If I ummount a device, wait a few minutes (time to copy new files to the HDD) and plug it again, will it mount?\n- Is there a message showing that the device was \"safely removed\" ?\n. Will test it too. I opened a TRAC on Jan/05.\nIf its ok after this commit, this http://trac.xbmc.org/ticket/13909 can be closed\n. ",
    "jenkins101": "Ok... \nso this is for?\n. so where in the forum should i add bug reports?\n. There is no mappings here only making button available fore use...\nI will propose a new button structure shortly (New default remote.xml)\nthe current is useless from my point of view \n. Hove ever on my remote \"HP MCE clone\" the button is marked recordedtv...\nSo i think it should open up the recordedtv view?\nThere is a button for livetv to... \n. what\u2019s happening? \nsomething wrong?\n. yes it opens the recorded tv view of the pvr window \n. Thanks...\nI notised that this should be added for:\nremote device=\"mceusb\"\nunder \"new kernel-based lirc button names\"\nand probably for Antec_Veris_RM200 and MCE_via_IMON to...\nbut cant test that...\n. oops... this was bad... hove do i remove this commit?\nit should not have been here... \n. Ok... i think we are back now :-S\nThats what you get for not double checking things...\ncan some one verify?\n. however this is what I am trying to do: http://forum.xbmc.org/showthread.php?tid=142910&pid=1215536#pid1215536\n. ok... \nI did it...\ndo I need to do some thing more?\nwhat was wrong whit good old svn ha... ;-)\n. I am trying but it says Everything up-to-date\nand does nothing...\n. There...\nTanks opdenkamp really sorry for the mess...\nI am new at this git stuff... <:-)\n. any thoughts\n. rebased.\n. ",
    "mcrosson": "Yes, a user on www.xbmcandroid.com/forums reported an error with the manifest when I built XBMC using platforms/android-9.  I traced the error back to the API level specified in the manifest.  Changing the value to 9 resolved the error he was receiving.\n. Killed pull request due to bad merge/push from mcrosson.\n. @Montellese I like the default of passing an empty string and combining the two methods, I'll be starting on this soon.  \nIn terms of external players supporting the various streams/proto's there are some gotchas.  I am working on putting together a compatibility matrix with some users on xbmcandroid.com/forums which I plan on publishing.  However, the playercorefactory.xml rules can be used to work around some of the limits of external players from what I can tell.\n@theuni I can take a stab at de-duping the code.  Wouldn't mind seeing this through to the end.\n. @theuni, @Montellese, @davilla : I am still working on the re-factor.  Ran into some JNI failures and need to look closer at it.  I am hesitant to commit broken code, but I can if you would like to take a closer look at what I have done thus far.\n. Latest commits include a re-factor to combine the StartActivity methods into a single method with default parameters\n. @theuni This is limited at the moment.  I was already planning on looking into exposing installed packages to add-ons, I wanted to start small with this PR and create new PR's for other android specific add-on items as I get them built.\n. Latest commits include a re-factor to combine the StartActivity methods into a single method with default parameters\n. Squashed/bump\n. Planned on a rebase, will start with that as my next item along with a squash.  Status: got tied up with my personal life the last ~3-5 days.  Will be looking closer at it this week in the evening's EST.\n. Rebased\n@theuni: My understainding of the constants: The windowing constants should be safe to use if they are behind a conditional.  The AndroidManifest is now setup to have a minSDK of 9 but target SDK of 14 so it builds (note you need to build this branch against platform-14 instead of 9) but should run on platform-9.  I'm waiting to get my platform-9 device back to do a more complete test.\n. @MartijnKaijser I have not had a chance to do the rebase / updates based on the comments, I was trying to solve a rendering bug before I made the changes above.\nSee Koying's PR #2564 for a cleaned up version of this PR.\n. @Montellese There is a thread on the forum that @davilla started: http://forum.xbmc.org/showthread.php?tid=152238\n. @davilla: New PR for directly controlling system volume on android or update the code in this one?\nAlso: it looks like it is at xbmc/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp:SetVolume, correct?\n. @davilla This is a possible problem: AESinkAUDIOTRACK is setting the audio track volume internally (does not affect the STREAM_MUSIC volume) and it is a value between 0 and 1 on Android.  The max volume is going to be capped at whatever the STREAM_MUSIC is set to at the OS level.  Should this be changed out to keep the internal XBMC volume at max and only adjust the system volume per option 2 in @jmarshallnz comment?\nNote this will affect the number of volume levels available within XBMC.  For example, my Nexus 7 has 15 volume levels, XBMC has more.\n. @davilla Thanks for the input, from what I saw in the code I thought that was the case but I wanted to be sure.\n. @davilla, @Montellese, @jmarshallnz, et all: Native android volume slider or XBMC custom volume bar?\n. Cosmetics and ifdef logic updated\n@davilla: Not sure what you meant by friended and haven't updated for that comment yet\n. @davilla, @jmarshallnz I'm good with keeping at this until its up to the official dev's standards.  Indecision or not, I'm learning a ton about the code base and would prefer my PR's be \"gold\" in the eyes of the dev's (this holds for others I have open).\nAs it stands now I am going to nuke the ShowVolumeBar changes and leave it to another PR for making it a tune-able via the settings.  I think everyone can agree the internal XBMC volume bar is sufficient for a 1st release with the option to use the Android one as a \"nice to have\".\nFor the AE ifdef's being removed in favor of a reverse transform being done in the Sink, I am looking into it.  I agree with @jmarshallnz, AE should be un-touched if possible leaving the tricky bits to the Sink.  My only concern is that the transform code is done in the Application and reversing it in the Sync opens up the opportunities for bugs if the transform ever changes upstream.\nFor the isTouchMode: that is helpful for other things like ActionBar, but if it is not necessary for this PR I will remove it and re-use the code in a branch where it makes more sense.  I don't want to clutter a feature commit with unnecessary code.  It will make it that much harder to trace origin later and it's not worth it.\n. @davilla: Figured it out as you were posting your comment.  git reset HEAD~1 after squashing and re-committing seems to have done the trick.\n. @davilla, @jmarshallnz : Latest squashed push should be ready for merge.  I'm now un-doing the percent->gain->scale within the AE sink and setting the volume internal to the XBMCApp Android class.\nI also stripped out the isInTouchMode code to keep the PR clean of clutter and unnecessary code.\n. @davilla: derp fixed in latest squashed push\n. @jmarshallnz Making the changes now; should be done shortly\n. @jmarshallnz : Latest squashed push has cleaned up math and no android in the comments\n. ",
    "margro": "Ok, I've removed the patch file.\n. @elupus Agreed. It is cleaner to move it to the dvdplayer. The only reason I can think of why the existing check for LiveTV was  in application is maybe to support other players.\nI will move the check to the dvdplayer code.\n. @opdenkamp: that is also an option unless you mean \"add back the property bSupportsTimeshift to the PVR_ADDON_CAPABILITIES\" as it was before the PVR merge.\nI would like to check the property for each channel individually because the MediaPortal addon can return a mixed channel set (both web channels and real tv channels). Some channel can be paused, while other can't. \nIt is now done at channel scan time, but I can ask the PVR addon at tune time whether it support timeshifting for the newly selected channel.\nHow would you like to see this? Extend the PVR_STREAM_PROPERTIES or PVR_SIGNAL_STATUS struct or add a dedicated CanTimeshift function instead?\n. Ok, I will try to update it using the PVR_STREAM_PROPERTIES struct although I'm not yet sure if I can get the order right for updating the enabled state of the GUI buttons.\nFurthermore, this requires that the PVR addon always knows which channel is playing in order to return the proper CanTimeshift() answer.\nFor example: what should happen if the channel uses a StreamURL and XBMC directly opens the URL?\nWill XBMC then execute the PVR addon's GetStreamProperties() to see if the timeshift buttons should be enabled?\nAnd how should the addon then know which channel is active?\n. Thanks for checking. Will update the code to add CanTimeshift instead\n. @AndreyPavlenko That won't work without adapting the also the xvdr addon. This pull request changes the PVR API, so all addons need to be updated. The segmentation fault is probably caused by a mismatch between the struct sizes in XBMC and your pvr addon (if you didn't modify also the addon sources).\nFurthermore, this pull request only provides the required infrastructure for timehifting. It requires proper backend support and an extension of the pvr addon. I don't know the XVDR stuff good enough to know if this backend has timeshift support.\n. I've updated this pull request to incorporate the remarks and suggestions.\nThe previous database change is now replaced by the CanTimeshift() function.\nThe application.cpp file check on livetv is now moved to the dvdplayer instead as suggested by elupus\n. Updated with the remarks from @da-anda (generic names).\nThere is no reference to the word timeshift anymore.\n. Fixed the c+p mistakes. Thanks for checking.\n. Oops.. fixed the << 4 part. A strange manual copy-code action from my side.\n@elupus The weird while in switch code is called \"duff's device\". See wikipedia for the explanation.\nIt looks indeed strange. As davilla already indicated it comes directly from the original SDL header. That was the only difference I could find between Linux and Windows with respect to the teletext display.\nI still don't know why the old SDL_memset4() implementation for Windows resulted in the transparent background as it looked like a valid implementation given how the SDL_memcpy4 is implemented.\n. ",
    "silvermir": "how can i try this with windows? i have issues with smb & vpn on a windows client!\n. sorry but i try to get smb working more than 2 weeks and i really want to try it so i can give a feedback. just tell me if its possible please. \n. ",
    "mgehre": "+1 for making sshfs mounts usable\n. ",
    "tompen-": "Should OMXPlayer.cpp also have ReadRate changes?\n. Tested on OMXPlayer with ftp and smb source. I noticed the following:\nFor Raspberry Pi, freememorycachepercent=50 as the default seems to be too high (especially when cpu is decoding audio). I don\u00b4t understand why, but my experience from testing: The more data we have in cache, the more horsepower is needed to play the movie without stuttering. On the Pi, I settled on a few MB cache, freememorycachepercent=5\nSlightly offtopic for this PR: When streamed movie have temporary drop in network speed, so that cache is emptied and vq/aq is not entirely full, there is too much cpu cycles spent by the player repeatedly trying to fetch data from an empty cache. The result is too few cpucycles are spent for movie playback and by filecache to fetch new data from network. In this cornercase scenario, regardless of the configured cachesize, the movie stutters. This is not new and it is not caused by this PR. In my personal build I fixed it like this:\nhttp://pastebin.com/FzDKsmfz\n. Sleep(0) was already there. I increased to Sleep(50) if cache is almost empty.\n. @classicspam \nI have done further testing on Raspberry Pi. Sorry for the long post.\nProblem I noticed is caused by disk io reads due to low memory condition for Linux.\nAs you do not have a Raspberry Pi I write this with lots of details:\nI used a rev2 Raspberry Pi board with 256MB memory\n(128/128 RAM/GPU memory split)\nFrom Linux point of view we have a total of 128MB RAM.\nI compiled latest OpenELEC, commit d5bea25.\nThis includes xbmc commit c2037d1 (23-Oct-2012).\nI added this PR 1388, unchanged.\nSo for this test, as requested, I did not implement changes to OMXPlayer\n(In the test I did a few weeks ago, the changes from this PR was implemented also in OMXPlayer.)\nMy advancedsettings.xml:\n        true\n50\nWhen playing a 1080p x264 movie, the OSD in xbmc displays 37MB cache is used.\nThis movie has DTS audio and the cpu downmix audio to stereo output.\nWithout this PR implemented, I know that I can play this movie flawless with average cpu usage of 75%. (DTS audio decoding is not hardware accelerated, so most of cpu usage is to handle audio).\nWith the above settings. I get around 0.001 fps. Movie is so slow I can easily see individual frame updates. The more I reduce freememorycachepercent, the better my movie playback works.\niostat reports the boot partition is doing huge amount of reads. cpu resources are wasted in io_wait status. On OpenELEC, the boot-partition is mounted readonly. Located in boot-partition is Linux kernel and the / filesystem as a squashfs. All application binaries are there. I do not have a swapfile.\nWhen movie is playing, Linux have so little free RAM that a simple command such as:\ncat /proc/meminfo && iostat\ngives error message: \"fork: Cannot allocate memory\"\nBelow is my guessing/speculation on the cause:\nOn the Raspberry pi, with freememorycache=50 XBMC takes too much RAM so Linux does not have enough free RAM to keep enough filesystem cache.  \nI am guessing this PR does the check for available RAM before playback is started. And on a device with only 128MB memory, the startup of OMXplayer also needs RAM. So the 50% actually consumes more than 50% of available memory because the check of how much free memory we have happens sooner than optimal.\nI think, for the PI a different default is needed. freememorycachepercent=50 is unusable. \nMaybe this PR need not only to limit cache size to a maximum of 1GB as already done. I am thinking it also need to set a minimum cache size of a couple MB. And, the important point from my test, it needs to make sure we leave alone at least xx MB RAM for the OS.\nPerhaps it is better to keep cachemembuffersize setting available. My idea: If cachemembuffersize exist, it override the freememorycachepercent. But if cachememorybuffersize does not exist, the freememorycachepercent should be considered. That gives maximum flexibility for the user.\nAs mentioned in my previous test, on OpenELEC, with my Raspberry Pi I get the best experience with freememorycachepercent=5. That corresponds to about 5MB cache + the vq/aq cache. With this setting iostat reports that linux is not doing any reads from boot partition during movie playback. I have not figured out exactly when problem starts, but I know the problem starts with big cache. With this setting the movie again play flawless for me.\nAnother idea I have: The network rate-limit maybe can be disabled if movie need to stop playback and do buffering and also if user have paused the movie. For people with really bad wireless networks and lots of RAM, I guess they will start movie, pause it and wait for 1GB cache to fill before they start watching movie. For them, an unlimited readrate during paused movie would be really good. \nAs a final note: I think this PR is for sure a big step in the right direction and should be added to xbmc. It would be very good for people that are streaming movies on wireless networks.\n. ",
    "JohnHoek": "anybody still working on this? This network cache patch is a good addition to xbmc, especially for not so good bandwich on wireless networks. \n. ",
    "xbianonpi": "I'm going to try to compile XBMC (for XBian) with this pr. \n. @classicspam It would be nice if you posted a sample advancedsettings.xml to make that part 100% clear.\n. Getting compilation errors with this pr applied\nmake[1]: *** No rule to make target `DVDInputStreamFile.o', needed by `DVDInputStreams.a'.  Stop.\nmake: *** [xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreams.a] Error 2\n. ",
    "rbej": "Working perfect on Rpi. alwaysforcebuffer=true and freememorycachepercent=5\n. Still memory leak when playing online movies. Only solution is set unlimited cache buffer in advenced settings and write cache on sd card. When i downgrade kernel to 3.2 everything is perfect.\nhttps://dl.dropbox.com/u/94360623/xbmc%20log%20testing/xbmc.log\n. Im tested and working perfect. Please add this for master.\n. It works. Clipping and distorting audio is gone.\n. Mov and flv test files not working.\n. Flv working now perfect. Im wait for update firmware fixed playing mov files in Xbmc.\n. Please add this for Frodo branch.\n. APPLY PATCH (common):   packages/mediacenter/xbmc/patches/xbmc-720-ass_subtitle_fix-0.1.patch\npatching file xbmc/cores/omxplayer/OMXPlayerVideo.cpp\nHunk #2 FAILED at 453.\n1 out of 2 hunks FAILED -- saving rejects to file xbmc/cores/omxplayer/OMXPlayerVideo.cpp.rej\npatching file xbmc/cores/omxplayer/OMXPlayerVideo.h\nmake: *** [release] Error 1\n. Still patch error.\n. I have apply this patch to Frodo Final, not Xbmc 13 Alpha. Maybe this patch working only with Xbmc master brench (Xbmc 13 Alpha).\n. Special for you Sam\nhttp://forum.xbmc.org/showthread.php?tid=140518&pid=1332131#pid1332131\n. Thanks. Working perfect!!. Please share patch remove battery level on Rpi in System Information.\n. Add Both HDMI and analog audio output\" doesn't seem to work well. When I set audio output to \"all\", I'm unable to seek in mkv movies anymore, neither with the arrow keys, nor by typing the minutes and seconds in. No problems with settings \"HDMI\" and \"analog\nhttp://pastebin.com/0GKXNwDJ\n. Working perfect.\n. If i have Rpi i must apply only last patch Omx:adopt to buffering?.\n. I apply this patch for Rpi and dont work. I still have 9 fps in gui.\n. I apply this patch and added framerate 20 to advencedsettings and nothing change on Rpi. Why??.\n. Thanks for explanation. Patch working perfect when i disable vsync.\n. New version \"OMXPlayer: adapt to buffering\" reduces too much performance on Rpi. Merged subs in mkv now is perfect sync, but performace is too much down. Old version have \"normal\" performance but have little out of sync merged subs. I try \"OMXPlayerVideo: try different timing \" and nothing change.\n. With \"enable dirty regions for video full screen\" performance is still down on Rpi. This same with PR 2556.\n. Working well on Rpi.\n. Compile error with Frodo Branch.\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/lib/DllAvCodec.h: In member function 'virtual int DllAvCodec::avcodec_encode_audio(AVCodecContext_, uint8_t_, int, const short int_)':\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/lib/DllAvCodec.h:144:120: warning: 'int avcodec_encode_audio(AVCodecContext_, uint8_t_, int, const short int_)' is deprecated (declared at /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/toolchain/armv6zk-openelec-linux-gnueabi/sysroot/usr/include/libavcodec/avcodec.h:4404) [-Wdeprecated-declarations]\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/lib/DllAvCodec.h:144:170: warning: 'int avcodec_encode_audio(AVCodecContext_, uint8_t_, int, const short int_)' is deprecated (declared at /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/toolchain/armv6zk-openelec-linux-gnueabi/sysroot/usr/include/libavcodec/avcodec.h:4404) [-Wdeprecated-declarations]\nOMXPlayer.cpp: In member function 'virtual void COMXPlayer::Process()':\nOMXPlayer.cpp:1162:24: error: 'class CDVDInputStream::IMenus' has no member named 'SkipStill'\nOMXPlayer.cpp: In member function 'virtual void COMXPlayer::UpdateTimestamps(COMXCurrentStream&, DemuxPacket_)':\nOMXPlayer.cpp:1776:55: error: 'PLAYER_DISPLAYTIME' is not a member of 'CDVDMsg'\nOMXPlayer.cpp: In member function 'virtual void COMXPlayer::HandleMessages()':\nOMXPlayer.cpp:2362:29: error: 'PLAYER_DISPLAYTIME' is not a member of 'CDVDMsg'\nIn file included from /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GUIControl.h:30:0,\nfrom /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GUIControlGroup.h:28,\nfrom /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GUIWindow.h:31,\nfrom /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GUIDialog.h:28,\nfrom /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/dialogs/GUIDialogBusy.h:23,\nfrom OMXPlayer.h:33,\nfrom OMXPlayer.cpp:30:\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GraphicContext.h: At global scope:\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/guilib/GraphicContext.h:244:150: warning: 'g_graphicsContext' defined but not used [-Wunused-variable]\nIn file included from /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/Application.h:57:0,\nfrom OMXPlayer.cpp:31:\n/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/utils/CharsetConverter.h:83:157: warning: 'g_charsetConverter' defined but not used [-Wunused-variable]\nmake[2]: * [OMXPlayer.o] Error 1\nmake[2]: Leaving directory /home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3/xbmc/cores/omxplayer'\nmake[1]: *** [xbmc/cores/omxplayer/omxplayer.a] Error 2\nmake[1]: Leaving directory/home/rbej/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/xbmc-12.0.3'\nmake: * [release] Error 2\nAny chance for compatible with Frodo??\n. Frodo version this patch:\nhttps://github.com/OpenELEC/OpenELEC.tv/blob/d0bab2eaf4ad3f0b76f6ba497504122417bc926a/packages/mediacenter/xbmc/patches/12.1.6/xbmc-990.33-607cc54.patch\nPlease add to Frodo branch.\n. Compile error on Rpi.\nWhen i compile only \"ffmpeg compatibility fix for matroska embedded subtitles\" patch everything is ok. No compile errors. But when compile all 7 patches i have error.\n. Now compile is ok on Rpi, but patch dont work.\n. Subs is back. Thanks.\n. ",
    "Koenkk": "I doubt if this patch has any use for the raspberry pi as it's using omxplayer and dvdplayer is being patched here..\n. Not working anymore because 2 methods are removed (GetVideoBitrate() and GetAudioBitrate()). This was done in the following comit: https://github.com/xbmc/xbmc/commit/87047e93e02375851505e9d6c420dd1225996bdb#xbmc/cores/dvdplayer/DVDPlayer.h\n. ",
    "popcornmix": "@Koenkk \nThis applies fine for Pi. We use all the files changed here.\n. Sorry, lacking the git skills to fix a previous pull request. I believe this pull request is correct.\n. Thanks. Will try that next time.\n. @theuni \nYour fix works for me:\nNOTICE: GL: NPOT texture support detected\n. Video playback is okay with this fix on Pi. \nWe also use the bypass render method (the frames are displayed from OpenMAX on a different layer to the GL).\n. I believe that Raspberry Pi is the only platform that uses CONF_FLAGS_FORMAT_SBS/CONF_FLAGS_FORMAT_TB.\nI believe  that this patch only changes Pi specific code and generic code where CONF_FLAGS_FORMAT_SBS/CONF_FLAGS_FORMAT_TB are enabled.\nSo, I believe this patch should have no effect on other platforms.\n. This appears to be a clear bug which can result in the Pi using 720p modes for 1080p videos.\nCan it be accepted, or can someone explain how I've misunderstood the issue?\nOn platforms without clamping, iWidth=iScreenWidth and iHeight=iScreenHeight, so the patch should be harmless.\n. Actually this patch isn't sufficient for maintaining mute status when pausing/seeking/starting a new file.\nIt's fairly easy to handle this with:\nm_pPlayer->SetVolume(g_settings.m_bMute ? VOLUME_MINIMUM : g_settings.m_fVolumeLevel);\nbut this is needed in several places in Application.cpp, and also in various other files, like AirPlayServer.cpp, AirTunesServer.cpp, UPnPRenderer.cpp, ApplicationOperations.cpp etc.\nSo, I think a better solution is to add a new method to class Iplayer. e.g.\nvirtual void SetMute(bool bOnOff) {};\nwhich players can act upon is desired.\n@davilla is this preferable?\n. Do you me to add the SetMute function, or is that something you have in hand?\n. Updated PR as suggested with (working) implemenation for Pi.\nOther platforms that don't use AE will need patching.\nDoes this scheme look okay?\n. So what other platforms don't use AE and need modifying?\nJust amlplayer?\n. I've added a dummy implementation to amlplayer. It reports it controls volume and has a stub mute function.\nIt should behave as it did before this patch (but be easier to add mute support in future).\nObviously I haven't tested the code on amlplayer.\n@davilla can you test?\n. @davilla\n        // never trust pts in avi files with h264.\n        if (m_bAVI && pStream->codec->codec_id == CODEC_ID_H264)\n          st->bPTSInvalid = true;\nIt's only set for H264 in AVI. I think I'd prefer it if it was always set for AVI, then could use dts with timestamps through fifo.\n. @rbej\nThe failures aren't a fault of this patch. The flv one is already fixed in updated firmware.\nThe MJPEG (mov) one is a locking issue between JPEG block used by xbmc for images, and the MJPEG codec and it will be fixed with a firmware update.\n. I see AMLPlayer still does a wait for kJobTypeMediaFlags jobs to finish:\nhttps://github.com/arnova/xbmc/blob/96cda775577efe55679f1626f10f0c967b9d0fb3/xbmc/cores/amlplayer/AMLPlayer.cpp#L1287\n(OMXPlayer has this code present but commented out - not sure why it is commented)\nShould this be done in the generic code? Should it also include kJobTypeImageCache/kJobTypeDDSCompress?\n. @rbej \nI'm not seeing this. I've just checked out a clean repo and applied the patch and it worked:\ngit clone git://github.com/xbmc/xbmc.git\ncd xbmc\nwget https://github.com/xbmc/xbmc/pull/2206.diff\ngit apply 2206.diff\n. I've run into this problem on (local) mp4 files. You use fopen/setvbuf, but the rapid seeking between audio/video streams means the setvbuf cache is constantly being discarded. \nAs @ulion suggests, the solution is to fopen the file multiple times, having a cache per (audio/video) stream.\n. @arnova \nI've seen avi files that do exactly the same thing. First half of file is video. Second half of file is audio.\nThey are (fortunately) rare, but are legal, and will provoke the issue described here.\n. Looks good to me.\n. I've just tested the patch, and get same result as rbej.\nSet audio output to \"all\" and it stalls after first seek. Try again with hdmi or analogue and it is fine.\n. This is a tricky one. It will probably be useful to ~1% of users.\nIt is quite an intrusive change. It adds hundreds of lines of code to the openmax setup which is already hard to understand and maintain.\nOn the plus side, there are a steady trickle of people who request it. The code looks sensible. It is mostly a no-op when \"all\" is not selected. The extra processing to handle the dual output is done on the GPU, so shouldn't affect performance.\nI don't know if this code could be refactored to make a clearer switch between the normal setup and the dual audio setup.\nI think I'd like to see a test build produced and some of the people who've requested this feature reporting they are happy that the \"all\" setting works well.\n. Sticking a #error in xbmc/cores/omxplayer/DllOMX.h has no effect, so I think it can be deleted.\n. There's no conflict. #2232 doesn't modify Application.cpp.\nEven if #2232 is accepted first, this PR will still improve things.\n. @theuni \nOkay it seems SetInt followed by GetInt will fail to update for a value not in GUISettings.\nSo, we can cycle multiple times in the toggle and avoid any #ifdefs.\nBetter?\n. @theuni \nprobed from where? \npowermanagement.shutdownstate seems to get it from a command line parameter.\nOn the Pi its omxplayer that determines the audio output devices supported, but omxplayer is (normally) not around when in the settings dialogue.\nI could remove the ifdef from guisettings and add a call to is_IEC958_supported()\nBut my implementation of is_IEC958_supported would just have the #ifdef TARGET_RASPBERRY_PI.\nOr is there something I'm missing? ALSA is not enabled on Pi so I don't see a generic way of probing for audio support.\n. @theuni any suggestion for a way of improving this patch?\nCurrently there is a feature that doesn't work on the Pi, which this fixes.\nI'd like this to be accepted, or to be given a suggestion for how it can be improved.\n. @da-anda \nThat works for 24fps content, if display supports 24Hz.\nBut 25/30 fps will generally choose 50/60Hz as 25/30Hz support is rare on TVs.\n(and actually the frame rate matching algorithm always picks the highest multiple which means 25/30 never gets chosen).\n. Confirmed working on Pi. CPU usage massively lower when playing files with ASS/SSA subs.\nGood job!\n. @theuni \nYes it was broken. On Pi it was taking over a second (with m_count=828) to render ASS subs...\n. Removed commented out code, and fix for aspect ratio when looping and SetVideoRect wasn't being called.\n. This is the effect of the bug where subtitles become rectangles after GPU texture memory is full:\nhttp://forum.xbmc.org/showthread.php?tid=155465\nI've tested this patch on the Pi and textures are now freed, and it fixes the linked to problem.\n. The problem is observed with ass subs in seperate file. E.g.\nhttp://alex131089.info/OpenElec/2x01%20-%20Anthropology%20101.ass\n. Minor testing of updated patch is looking fine on Pi.\nI can confirm that textures are being freed from GPU. Subtitles appear when expected. No obvious problems.\n. Great collection of bugs. They all look like good fixes to me. \nPi build with these applied seems fine.\n. Seems to be working fine for me.\n. Tested on Pi. Fixes current compile problems and seems to work fine.\n. Could we make a list of what platform's don't want VSYNC?\nIt seems hard to imagine how limiting framerate to VSYNC can ever use more cpu.\nI would like to claim that all GLES platforms do want VSYNC enabled. Any counter-examples?\nIf I said all GLES platforms want VSYNC enabled, any counter-examples?\n. I would consider a graphics driver that busy waits for a vsync to be fundamentally broken.\nEven so, if 1% of people are using such a driver, and they end up with high CPU after the change, which is fixed by changing the vsync option, and 99% of people get a an improved, lower CPU xbmc after the change, then it still sounds like a win.\nI'm still going to claim that no GLES system suffers from this brokenness, and would benefit from enabling VSYNC. Any counter-examples?\n. Agreed, this fix looks correct.\n. So if the correct solution to make:\n  virtual bool CanSuspend()   { return false; }\n  virtual bool CanHibernate() { return false; }\ni.e. @MilhouseVH patch but unconditional?\n. These buffer sizes cause OOM crashes on 256M Pi, so this patch isn't suitable.\nThis is a better patch:\nhttps://github.com/popcornmix/xbmc/commit/53d401cf1f21d0eb7166f5709a5b543e420048c4\nWhich only makes the buffers larger when there is sufficient free memory. Please test it.\nI did get some (rather confusing) reports that the bigger buffer might cause problems:\nhttp://forum.xbmc.org/showthread.php?tid=140518&pid=1350763#pid1350763\nwhich is why I haven't pushed the PR yet. I don't believe the patch is the cause of the reports, but it's an intermittent bug elsewhere.\n. This: https://github.com/xbmc/xbmc/pull/2372\ncontains a better fix.\n. rpi build is broken. Needs:\n+#include \"guilib/GraphicContext.h\"\nadded to OMXImage.cpp\nPossibly removing this:\n-#include \"settings/Settings.h\"\nis desirable (in keeping with other changes in this commit).\n. @elupus \nAny suggestions to fix the problem reported of GetTime() returning zero after demuxer has returned start=DVD_NOPTS_VALUE.\n. @elupus \nAre you happy with this version of PR?\nThe code change now only applies to ETIMESOURCE_CLOCK.\n. I'm not familiar with audio CD playback.\nI assume that on other platforms paplayer would normally handle this, and dvdplayer doesn't handle it?\nAny reason for this code to be conditional on HAS_OMXPLAYER? Presumably if you removed that then dvdplayer could also play audio CDs?\n. Looks fine to me.\n. @rbej it's more useful with the error message:\nIn file included from DVDCodecs/Video/DVDVideoCodecFFmpeg.h:29:0,\n                 from DVDFileInfo.cpp:46:\n/home/pi/pop/xbmc/lib/DllAvFilter.h:85:92: error: macro \"AV_VERSION_INT\" requires 3 arguments, but only 1 given\n/home/pi/pop/xbmc/lib/DllAvFilter.h:189:92: error: macro \"AV_VERSION_INT\" requires 3 arguments, but only 1 given\nmake[1]: *** [DVDFileInfo.o] Error 1\n. +1 on the Pi.\nrbej has been producing test builds with this patch in and the response has been positive.\nSeems to help people with wifi play higher bitrate streams.\n. On Pi:\nOMXPlayer.cpp: In function 'bool PredicateAudioPriority(const OMXSelectionStream&, const OMXSelectionStream&)':\nOMXPlayer.cpp:145:58: error: 'std::string' has no member named 'Equals'\nOMXPlayer.cpp: In function 'bool PredicateSubtitlePriority(const OMXSelectionStream&, const OMXSelectionStream&)':\nOMXPlayer.cpp:175:61: error: 'std::string' has no member named 'Equals'\nOMXPlayer.cpp:187:61: error: 'std::string' has no member named 'Equals'\nCPP     xbmc/linux/DBusReserve.o\nIn file included from /home/pi/pop/xbmc/xbmc/guilib/GUIControl.h:30:0,\n                 from /home/pi/pop/xbmc/xbmc/guilib/GUIControlGroup.h:28,\n                 from /home/pi/pop/xbmc/xbmc/guilib/GUIWindow.h:31,\n                 from /home/pi/pop/xbmc/xbmc/guilib/GUIDialog.h:28,\n                 from /home/pi/pop/xbmc/xbmc/dialogs/GUIDialogBusy.h:23,\n                 from OMXPlayer.h:33,\n                 from OMXPlayer.cpp:30:\nCopying the three lines from DVDPlayer.cpp makes it compile.\n. With this patch, every time I open the settings/system window, it says \"would you like to keep this resolution?\" even though nothing has changed. I say \"yes\" and next time the \"video output\" is highlighed I get the dialog again.\n. @Montellese \nBuild is now fixed on Pi.\nAnother regression is the audio passthrough settings have vanished.\n\"Audio ouput\" page just contains:\n\"Audio output .... HDMI\"\n\"Speaker Configuration......5.1\"\n. @Montellese \nThanks, that works as expected.\nApologies for not reading your initial post carefully enough. I imagine I'm going to be the first of many to ask \"where have my settings gone?\"\n. ",
    "pivin": "Been testing with my friend over Wan for 1 month, with OpenVPN and SMB. Very impressive it works great!!\nI noticed that it dosent work with \".iso\" files. Is there a workaround for enabling cache on \".iso\" files?\nI'm using the Branch_SMBUseBufferFinalFrodo and compiled it on Febuary 27. \n. ",
    "seddonm1": "Hope you can fix this classicspam as I want to recompile my OpenElec with this patch. I have 4gb ram sitting idle while playing and would like to use it - plus it would be really nice to get my x16 fast forward a bit smoother.\n. mtisza, can I make a suggestion that you also put the maxcache parameter into the advancedsettings so it can be varied from the 1GB limit (i.e. if you have more available why not use it?) it is a tiny change but could be nice.\n. @mtisza I agree with @NedScott  that the most elegant solution is to remove the hard limit on maxcache and allow devices with more ram to utilise it (based on the freememorycachepercent setting).\n. ",
    "slakbmc": "Hi classicspam! I need this in Frodo quite desperately. It would be really great if you cound fix it. Many thanks!\nedit:\\ Actually, if the missing \"GetXBitrate()\" methods is the problem, why not just change it to \"m_dvdPlayerVideo.GetVideoBitrate()\" as it's used in DVDPlayer.cpp now in line 3815? Would that work? I only have rudimental knowledge of programming but it seams reasonable to me.\n. You can also just compile the latest stable from xbmc.org/download with the original PR by classicspam. That's how I did it successfully. Works very well!\n. ",
    "mtisza": "I have a fix for the compilation issues around the API change.  Short of creating a new pull request, I'm not sure how to request this PR be updated with the fix.  So the link to my fork/branch with the fix is https://github.com/mtisza/xbmc/commit/1f7ef33cebc0acd49e6c671a739ec6dff99bcc16  If I should create a new pull request, please let me know.  \nAlso I'm unsure is the devs want me to use the GetVideoStreamInfo/GetAudioStreamInfo API instead of calls to m_dvdPlayerAudio.GetAudioBitrate(), which is how I chose to do it.  If you want me to change it just ask.  I'm not even remotely familiar with the vast code of xbmc, so I took the easy way out for now.\nI'm dying to see this PR in master, since I've had very good performance with it on my RPIs.\n. I've created a new pull request https://github.com/xbmc/xbmc/pull/2607 with the updates, and rebased with upstream/master.\n. @seddonm1 I would personally be okay with that change, but I fear that the more we\ncram into this PR, the less likely it will be accepted, or at least it\nwould take more time to test.\nI have tested PR 1388 quite a bit in my setup (9x RPIs :-) and some are\nbehind a wifi bridge).  rbej had it in his OpenELEC builds for a while\ntoo.  My change on top of that is trivial, and only works around an API\nchange that broke compilation.  I'm hopeful this will be accepted very soon.\nOn Fri, Apr 12, 2013 at 9:05 PM, seddonm1 notifications@github.com wrote:\n\nmtisza, can I make a suggestion that you also put the maxcache parameter\ninto the advancedsettings so it can be varied from the 1GB limit (i.e. if\nyou have more available why not use it?) it is a tiny change but could be\nnice.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2607#issuecomment-16324957\n.\n. @MartijnKaijser I've updated the commit message.\n. I've made the requested edits to the code, and rebased.  I've still got to split the commit into the different parts (coming soon).  In the mean time how can we address the two other outstanding issues:\n1.  elupus not thinking this is worth the complexity\n2.  external subtitles issue. @MarcBridner  can you describe exactly how to repeat the issue?  I never use subtitles so I don't really even know what you mean by external subtitles (server on the internet, local server ???) or cycling through them\".  If anyone has any ideas on how to address this, speak up.\n. \n",
    "terual": "Shouldn't it look like:\nfor (; i < blocks; i += 4)\n{\n    *outOffset += inOffset[info->srcIndex[i].index] * info->srcIndex[i].level;\n    *outOffset += inOffset[info->srcIndex[i+1].index] * info->srcIndex[i+1].level;\n    *outOffset += inOffset[info->srcIndex[i+2].index] * info->srcIndex[i+2].level;\n    *outOffset += inOffset[info->srcIndex[i+3].index] * info->srcIndex[i+3].level;\n}\n. ",
    "ExtravagantAardvark": "@Montellese: thanks for looking into this.\nNo idea how the indenting got this way, it looks fine on my local copy. But git/github is not my strong suit - took me many tries to even send in this patch... No idea what the timewindow is for Frodo, but I won't be able to dive into this again for weeks. If someone wants it in Frodo and knows how to fix the indenting feel free ;-)\n. Thanks for taking that up, much appreciated!\n. Thanks for handling this for me! \n(Slight correction for posterity: I could fix the cosmetics no problem. It was installing xbmc source and git, getting the stuff into git and then into github that would take me ages. I was still learning all that newfangled SVN stuff when they swtiched to git...)\n. My mistake: I never used debug output so did not notice the start was unset. I agree with just killing the line, no idea for what purpose just logging the duration could be useful. @Montellese, if you could again be so kind...?\n. ",
    "xhaggi": "@MartijnKaijser omg i merged the xbmc:master into my master  .. started this PR on my master instead of a new branch .. i will look into and start a new PR :/\n. it was a damn mistake :/\n. @akva2 it's not too bad .. because i created a branch while i'm recognized that i opened up a PR on my master.\n. +1\n. OpenDefaultStream is not working for pvr streams, because at this time no stream information exists. i don't know if it depends to the PVR backend. only tested this with tvheadend.\n. that don't fix the issue ..  the label is set dynamically within the CGUIDialogPVRGuideInfo class .. it depends on the current recording state of the selected tv show. so it has to be fixed there.\n. it takes care of audio and subtitle streams\n. @opdenkamp what do you think about calling a CDVDDemuxPVRClient::Read() in CDVDDemuxPVRClient::Open() like it's implemented in CDVDDemuxHTSP::Open(). This would fix it too.\n. i will do some tests later and report if it's working .. what do you mean with \"putting a stream change in the wrapper and calling OpenDefaultStreams when receiving that one\"\n. you mean DMX_SPECIALID_STREAMCHANGE ... thanks for the explanation\n. i think we should ensure, that we hold the required stream information after opening the demuxer, so there is no need to change anything in DVDPlayer.\n. i know .. so we should read the first packet in CDVDDemuxPVRClient::Open() to get the stream info right after opening the demuxer. this would solve the issue.\n. @opdenkamp if you prefer this, i will try it .. i don't want unnecessary changes to DVDPlayer, because CDVDDemuxHTSP::Open integrates it on the same way\n. it is now ensured that stream information are available when opening the PVR demuxer, so that the call of OpenDefaultStreams in DVDPlayer works like expected. \nwe can add the additional calls of OpenDefaultStreams in DVDPlayer, if it receives the special packet later.\n@opdenkamp can you take a look at this.\n@elupus no changes made to DVDPlayer\n. i thought this could be fixed within the demuxer :/ .. will change this tomorrow or so.\n. updated the PR: now it checks the special stream id DMX_SPECIALID_STREAMCHANGE, update the selection streams and open the default streams. it would be great to know, if i'm on the right way.\n. @opdenkamp i will do some more tests on the subtitle part to check if the additional stuff is needed.\n. I removed the unneeded cache reset and added a parameter to handle only  opening a defined stream type in OpenDefaultStreams.\n. @elupus currently i use the enum stream type STREAM_NONE to determine if all streams should have to be opened. i would prefer to add a new enum value STREAM_ALL and use this instead on STREAM_NONE .. what do you think about it?\n. @opdenkamp i moved clear + update selectionstreams into OpenDefaultStreams\n. @elupus changed + squashed commits .. thank you for clarifying this ;)\n. @elupus done\n. @mikrohard yeah that would be the best solution, but for now i think this is always better than the current behavior.\n. @jmarshallnz it sounds good, but the experience is different.\nI don't want to waste your and my time but nearly all applications follow this behavior. starting from top on a new list, not in the middle or bottom.\ni could extend this PR, so that it remembers the selected position for each group for the current osd time. BUT starting first on position 1.\n@opdenkamp let me know if I should follow this further at all .. or close this PR and we have to live with this.\n. @opdenkamp i started this because i want a user-friendly solution for all of us. not only for you or me.i know this is not really a prioritized part of xbmc pvr, but if you use this every day, it makes you unhappy ;)\ni would say let me do some more work on this so that it remembers the positions for all groups and selecting this, except newly selected groups which starts from the first position.\n. @opdenkamp i have done some more work on this, so it remembers the last selected item position across all groups now. currently i'm using a static map, so that it doesn't lose its state after closing and re-open the channel osd.\n. okay will change it\n. @opdenkamp updated map to a non static member\n. @opdenkamp i removed the use of namespace in header.\n. Thank you .. i have changed all to your suggestions.\n. updated method GetLastSelectedItem to be const\n. @opdenkamp squashed\n. +1\n. it would be nice if this gets into frodo, because without this you need two button controls to use a colordiffuse while button gets focused.\n. @ronie i only want a statement if this could get in or not .. sorry if I seem a little impatient ;)\n. @jmarshallnz is there a reason why this is rejected?\n. thanks\n. @lemonboy999 as you can see in the main description of this PR, it is possible to use $VAR and $INFO .. so i don't know what you mean with skin variables?\n. @jmarshallnz thank you for the hints .. i will change it in a few days.\nThe main reason for this PR is to use it on button controls with <texturefocus colordiffuse=\"\">, so you don't need a second texture or control for highlighting. Well, i don't know if multiply the diffuse color is the best way.\n. @jmarshallnz changed up on your hints\n. @phil65 it work's for every texture control .. the comment was an unfortunate choise , I will update it\n. @MassIV only for texture controls .. no labels.\n. would it be better to rename the conditional function name to Skin.HasFont(), because the selected font not relates to the selected theme.\n. yes, it should indicates that the defined single font name is selected within the gui settings.\nsame like Skin.HasTheme(theme), Returns true if the user has selected the theme with name ?theme?\n. @phil65 ok ;)\n. please do not change the current behavoir .. using left / right for switching channel groups is best for usability.\n+1 for replacing the hardcoded stuff.\n. good to see that there is no plan to change it. at the end the skinner has the ability to change the behavoir.\n. ",
    "BluTuTh": "PR is now updated.\nThanks to mikrohard for help.\nI noticed that in Frodo PVR.IsRecording stays TRUE, even after DeleteTimer() is executed.\nIt seens like the problem is somewhere deeper, probably in PVR client. I will try to fix it.\n. ",
    "Glenn-1990": "There are more PVR windows/dialogs with the same problem (channel osd, guidedialog,...).\nI always see \"Control 'x' in window/dialog 'y' has been asked to focus, but it can't\" in the logs when opening the affected dialogs/windows. So maybe the fix is needed somewhere deeper in XBMC.\n. ",
    "herrnst": "Hmmm... While agreeing on putting LCD support outside of the XBMC core would be a good thing in the long run, I'm starting to feel a bit unlucky regarding hacking and submitting things based on \"unwanted\" things .. :) Might however be a neat addition until...\n@Memphiz, as I can see, your Python implementation seems to be mostly identical to the stuff currently implented in core. Is \"no\" enough to do some testing with it?\n. (nice how github ate the XML markup, should have been [haslcd]no[/haslcd])... Will give it a shot, but has to wait at least until the end of the week. Will get back to you via PN to not half-offtopic-abuse this PR even more :)\n. Nice, thanks! Let me know if any changes, rebasing or so is needed when merging.\n. Hrm. Apparently also seeing bad things (garbage) after this change. Reading through many (random) comments, patches and parts of the LCDproc source et al and trying out, this seemed like a way for little cleanup. Guess I should test more thoroughly before spreading things, so sorry for the noise. Pulling my hat and closing this.\n. Thanks. I'm of course well aware that for the long term the LCD stuff should go and be put to some addon or so, but at least this might be interesting stuff for one or another user until then :)\n. I assume the display works as usual afterwards even with those log messages? Pretty sure why you get that output, can you try applying http://pastebin.com/HXyJzikC (moves the call to RecognizeAndSetIconDriver() to a safer location) ontop this PR? (Did not try this myself, will do that tomorrow evening)\nEDIT: Additionally seeing \"char reply\" in that function starts uninitialized, will definitely push an update tomorrow.\n. I expected this to happen, the for()-loop made the call to read() blocking forever, as nothing would probably ever be sent to the client again without sending commands.\nSquashed/forcepushed an update to this PR, removing the loop so the info-command is handled like the hello-command. Also added another (informational) check if at least any text was returned to info (not all LCDproc modules return something I learned from server/drivers.c, returning - hopefully - only \"\\n\" in that case...), fixed the uninitialized reply-array thing and add messages for NOTICE and WARNING for loglevel-0 users. This should fix the dead(b)lock. Details on the commit update can be seen at https://github.com/herrnst/xbmc/commit/5fa4204 - I really hope LCDproc really returns the \"\\n\", otherwise this needs a little hack by appending an additional \"noop\" to the \"info\" command (that command reliably returns \"noop complete\"). Unfortunately cannot test this due to missing hardware, can you please check again with your display? \n. Nice, thanks for checking! :) If no other interferences occur, all should be fine.\n. Yeah, am aware of that, so going to make daily prayers for this (also in the name of other SoundGraph owners) and keeping fingers crossed :)\n. (Apologizes if this posting is considered spam)\nWell, getting a feeling this won't hit mainline anytime at all. However, I followed your advice to poke at this via a python addon. So I hacked around with your initial work, and I believe I got very far with that. Mind taking a look at https://github.com/herrnst/script.xbmc.lcd ? Additionally, https://github.com/herrnst/script.xbmc.lcd/tree/imonmdm has the enhancement of this PR integrated. Some other people already testet it and it seems to work quite well. Maybe that stuff qualifies to go into the official XBMC addon repo or maybe the core distribution?\n. Thanks alot for your very positive feedback and comments :)\nI've started a forum thread on this at http://forum.xbmc.org/showthread.php?tid=143912 and copied part of your reply there to not hijack this PR even more.\nGuess this (and PR#1429) is obsoleted now and ready to be closed?\n. ",
    "A600": "Sorry to bother you. The DVBViewer PVR I recently released, loads the channels data from a binary file (with zeroes everywhere) from http so with your PR, I couldn't do that anymore, plus I need to know the size of the html data to get the number of channels. Any thoughts?\n. > > Then we need to change the call a bit, or add another. Suggestion?\nWhat you see better. I'm using this code for both text and binary files:\nCStdString Dvb::GetHttpXML(CStdString& url) \n.\n.\n  CStdString strTmp;\n  strTmp = CStdString(response.response, response.iSize);\n.\n.\n  return strTmp;\n. It was too easy to be true :) Feel free to close the PR then\n. ",
    "Paxxi": "Cptspiff: yah it'll break in that case and maybe it's not the best solution. My reasoning for this method was that it should be extremely rare to find both a subs and Subs folder in the movie folder. However the fix solves it for any case insensitive case where there's only one subs folder which is probably a more common scenario. I feel the trade off is worth it in the absence of a better solution.\n. T-nelson: sounds like a good idea.\n. oh crap, spent more time with git than merging trying to get a clean PR. Back to the git fighting then :)\n. Thanks jmarshall, commit should be OK now. I noticed though that there's copies of the libdvdnav header files in xbmc/cores/dvdplayer/DVDInputStream/dvdnav/. I guess these should be  updated as well to be kept in sync, or would it be better to just get rid of them and use the headers in lib/libdvd/libdvdnav/src/dvdnav\n. Updated the files in core/dvdplayer as well. Removed the big endian defines, data is already read in big endian format and then byteswapped.\n. Fixed the things mentioned by @ace20022 and @Voyager1 .\nFound that dvdnav_get_state and dvdnav_set_state were declared in vm.h in the includes copied to dvdplayer, moved them to dvdnav_internal.h to match where they are in libdvd folder.\n. Hopefully that should be the last fix\n. new commit up, actually made sure it compiles this time\n. @Memphiz just saw your patch, didn't know about objc. Anyway it's bedtime so I'll go over this tomorrow and make the needed changes\n. fixed the _LINUX ifdef, re-added it as it were before instead of trying to change it to TARGET_xxx and how it would affect the forced win32 define.\nLeft \"self\" as is since it's used fairly often in the dvdnav sources and it doesn't cause any errors\n. Voyager1 is correct, it's based on http://dvdnav.mplayerhq.hu/ . I didn't know about the new fork.\n@elupus I'll fix you a diff tonight of the XBMC changes that are still in\n. @elupus Here's the diffs of the changes. I've split them up per lib to make it easier to check. cores.diff is the difference between the header files in /lib and /cores/dvdplayer\nhttps://dl.dropbox.com/u/55118895/libdvdread.diff\nhttps://dl.dropbox.com/u/55118895/libdvdnav.diff\nhttps://dl.dropbox.com/u/55118895/libdvdcss.diff\nhttps://dl.dropbox.com/u/55118895/cores.diff\nLooking at the new fork over at videolan it probably shouldn't be that much work to update against that once these changes are in. Not sure if there's any immediate need though since the fork seem to be very new. With that said I'm more than willing to do the work if you think it would be better.\n. Those sections weren't marked as XBMC changes but they're not in the libdvdnav 4.1.3 sources. The best I've found for them is this checkin from @elupus . It would probably make sense to add some _XBMC ifdefs around them to make it easier to track in the future.\nI'm not entirely sure wether they're still needed or not.\n. ",
    "tutifrutas": "yes, that sounds good. this was just a hack to get rid of the of error\n. Thanks.\n. ",
    "Red-F": "Ai Christian, that is some time ago already. \nOff the top of my head I seem to recall that there is a certain interval (first 5 minutes?) when you start playing a new recording, where SaveFileStateJob will not get valid resume point info. This is probably done on purpose to allow the user to quickly preview a video file without setting the resume point. Thus he will not see the 'resume/start from the beginning dialog' when he really starts viewing the file.\nThis however thwarts the exact purpose of set last played position on the PVR server. There we want the exact last position that was last viewed. This allows flawless resume cross clients, since all the clients (xbmc or other) retrieve that position from the PVR server. That was the reason to insert it in DVD player.\nI fully agree it is more elegant to have the code in SaveFileStateJob. But I was not able to locate where that decision to send the resume point info to SaveFileStateJob  was made or I would have suggested to move the decision to actually save the resume point to there too (and update the PVR server always).\nHope this helps. Can you please verify if after playing a new recording for 30 seconds the correct last watched position info is still being sent to the PVR server?\nCheers,\nFred\n. The GetRecordingLastPlayedPosition was originally only called when starting to play a recording. This change causes it to be called for every recording during construction of the recordings view. Every time the recordings view gets focus. With a couple of hundred recordings this causes a delay of more than 20 seconds (on my test system).\nI'm a patient person, but I can see this experience decreasing the WAF factor enormously ;)\nJust using up/down arrow in the Live-TV left menu will freeze xbmc every time for a long period.\nRetrieving this information is not a cheap operation, a round trip to the REST api of the PVR server takes a penalty.\n. I discovered this when I was testing my final (?) catch-up pull request to be.\nCaching is tricky when using multiple clients concurrently, which is the whole point of having this on the PVR server initially.\nI'll try to look into this tomorrow evening. Workday coming up :)\n. Yes, that is the scenario that I came up with too, extend pvrrecording with a last played position field that gets set during the initial retrieval of all recordings (capabilities will show that it is valid or not). That will be non-blocking since it runs on a different thread, also many PVR's (certainly FTR) return the last played position already with the rest of the recording details.\nThis will also refresh the data when the recordings are refreshed from the server.\nAnd then query the server again when a request to play the recording is received.\nWill you be picking this up?\n. Are we going to bump the API version number? \nIf you want I can create a pull request to get the struct PVR_RECORDING with an added int iLastPlayedPosition; That would allow add-on authors to anticipate the upcoming change. And then I can try to find some time this week to see if I can implement this change, cause I reckon you must be real busy with all this.\n. From a high level point of view every recording has a last played position (if bSupportsLastPlayedPosition is true in PVR_ADDON_CAPABILITIES). It will be 0 for unwatched recordings. I think the last played position is currently used in the recordings view to distinguish between 'not played', 'playing in progress' and 'fully played'. Showing proper icons accordingly. \nThis is even more important for those PVR servers that do support Last Played Position but don't support Recording Play Count.\n. iPlayCount is already part of PVR_RECORDING.\n. Ok I looked at PR 1567 and it is clear that this PR collides. \nThis code provides a simple POST, much inline with the simple GET that is already offered by CurFile. \n1567 implements a complete new webdav filesystem, perhaps it better inherit from CurlFile and do webdav specific stuff there?\nThe reason for this PR is that just a couple of weeks ago new policies were enforced for PVR addons where they can no longer use CURL by themselves. All in all this means that one of the oldest PVR addons, that has been in use since december 2010, will not be in Frodo when it is released, unless there is a way to use a RESTfull webservice that can be used from within PVR addons. An alternative would be to have CurlFile available via the PVR api.\nAny help, ideas or suggestions are appreciated.\nCheers,\nFred\n. Ok, not being a native English speaker I have to choose my wording carefully.\nI took time to carefully examine the CurlFile.h/cpp. 1567 does not implement POST but PUT (it uses CURLOPT_UPLOAD, not CURLOPT_POST). Actually POST is already supported by CurlFile, just not via the generic IFile interface.\nTo me it would make more sense to have a POST within CurlFile, and create separate overrides of the virtual WriteFile and Write methods within the webdav class to upload files (which is what webdav is about ultimately). The 1567 PR already makes private fields and methods protected. Thus he has access to all the CurlFile features to implement the webdav class. True users of the generic IFile interface are very limited.\nFor access to most REST webservices GET and POST would be sufficient and this implementation within CurlFile provides just that for generic http/https urls. Specific (legacy) webservices (protocols) like eg. webdav need specific support, and it looks like the webdav filesystem of 1567 brings that. But, as I said, I would just move the PUT into the webdav subclass, and leave CurlFile minimally impacted while providing a tad more support for POST to users of the limited interface. And move the protocol specific upload to the webdav subclass.\nIf I'm wrong about 1567 not implementing post please tell me.\nRegards,\nFred\n. Agreed, we're trying to get a lot of functionality via a minimalistic interface.\nThere are, however, not too many options when you're writing a PVR addon (and do not want to static link to full CURL).  The 'old' way used to link to the curl shared object. But distribution gets complicated that way because of version mismatches. One really just wants to be dependent on XBMC and nothing else.\nAn alternative would be to extend the PVR api... I'm sure that will not be greeted with pleasure at this moment in time.\n(Actually I even considered a 'rest://' protocol with the factory returning an instance of a RESTFile subclass of CurlFile. However due to the IFile limitations there would not be much benefit.)\n. So, how do we proceed from here? This is a blocking issue for the completion of the ForTheRecord PVR add-on.\n. Perhaps CURL_UPLOAD is really the standard CURL write interface. But current consumers of the IFile interface end up with an instance of CurlFile and limited GET functionality at this moment when they open a http:// protocol url. From that perspective should we re-factor CurlFile and create descendant HTTPFile and DAVFile?\nPersonally I'm fine with whatever solution surfaces. The problem I really need to be solved is POST functionality from within PVR addons. It is a blocking issue. And I imagine the less code changed the better at this stage.\n. That implies removing GET from CurlFile too...\n. I guess it must be a personal preference, because the current CurlFile already has a .post() method, replicating POST in a sub-class just for IFile:: OpenForWrite/Write feels... I don't know, sloppy.\nAnyhow, as long as everybody understands, and is happy with, the fact that the factory will return a different class for http:// protocols then before, it doesn't really matter to me. I just really, really need an agreed upon way to POST so that I can finally start working on bringing the addon on par with the current PVR API level.\n. In response to the above comments I have re-implented this functionality in a subclass and replaced this PR with PR #1650. This should no longer clash with PR #1567.\n. Huh?\n. Ah, sorry, I've just added HTTPFile close to it's parent. Didn't notice the alphabetical ordering, and since CHD usually means \"Coronary heart disease\" I was a little taken aback :)\nAnd once again I really would like to point out that this is only to provide very minimal post functionality for PVR addons that are limited to using IFile. It is not pretty, it is not clean and it definitely is not the way I would like to engineer it. It's a cornered cat trying to find a solution since it can not instantiate a CurlFile within a PVR addon.\nCheers,\nFred\n. ok, when I get home from work I'll rebase and squash\n. Git's power never ceases to amaze me. Just when I think I understand, I manage to do something that behaves not quite as expected. Yet I've never lost history sofar.\nAnyway, after 'git rebase -i master' the above is what I ended with. Commit edbf643 is indeed the squashed set of commits I made (and I trust the 'H' is now properly located ;)).\n. Thanks Lars, I knew I simply had to continue branching,  cherry picking and forcing updates, but was a little lost how to reduce the number of commits instead of expand...\nCopied and pasted to the iron clad memory of my evernote :)\n. Yes, we can move it. Actually I think we really should initialise the m_postdata and m_postdataset within CCurlFile::Post() as well as CCurlFile::Get() and re-factor CCurlFile::Service without the postdata argument. That way it would more be like prepare request -> execute request in both cases.\nYou want me to do that and either make a new PR or update this one?\nOf course the real underlying problem is using side effects to control the Open() method ;).\n. np\n. Fixed as described in pull request #1681\n. @jdembski yes that was the idea originally, and as far as I know that is how it is implemented and working now.\nIf your PVR backend does not support last played position, or you don't want to implement it in the add-on (at this moment) set the capability to false and XBMC uses its database.\n. @fetzerch @opdenkamp : will this be merged before Frodo's GA?\n. No problem, I just wanted to know if I should find time in my agenda this year to implement this.\n. ARGUS TV does not send events. Clients that play a recording will update the position on the server, but the server does not push out events. This mainly due to the fact that the ARGUS TV api is a pure RESTfull api, patiently waiting for requests.\nThere are some plans to extend the api via the use of SignalR in the future for easy real-time event pushing by the server. But this is just under consideration and not available any time soon (and integrating that with XBMC will probably a challenge by itself when it is available :lollipop: :).\n. ",
    "avdleeuw": "This is the description that goes with the ticket: \nI'm using the PVR Group manager and noticed the following issues:\n- Channel groups don't show names - Channels can't be moved to new groups\nI've found the cause of this bug to be in the way the CFileItem is being used.\nTo display channel group names, GetGroupList in PVRChannelGroups should be changed to explicitly set the label to the groupname.\nTo be able to add ungrouped channels to a new group, the ActionButtonUngroupedChannels method should be changed. Instead of GetFileCount, GetFolderCount should be used.\n. Formatting error is now fixed as well. \n. I'm happy to do anything to help, but I'm a n00b to git :( What can I do to squash it up?\n. Please bear with me as I'm trying to get this right... I think the squashing worked, resulting in commit 3108cfb, but all other commits are still showing in this pull request as well. Not sure if that's supposed to be like this. \n. I've decided to close this pull request and make a new clean one. \n. I've been investigating some more issues with channel switching in combination with the DVBLink addon and I'm a bit confused by all the different ways there are for switching channels. \nSometimes a switch is just executed as a PlayFile() call, while other times there's some more elaborate checking to see if the channel has a URL or not and then make a decision based on that. \nThe easiest way would of course be to 'just' use the PlayFile() call (which is what actually happens from CGUIDialogPVRGuideInfo), but there must be good reasons for implementing it different in the other places. \nWhat is the preferred way? \n. Well, in this specific case, URLs are being used, which seems to imply there always needs to be a PlayFile() call. Some more digging seemed to indicate that the long delay I'm debugging may be caused by the 'CloseStream' in CPVRClients.SwitchChannel. \nYou may want to hold off on this PR until I've done some more research. \n. I've researched this issue some further, and the slow channel changing seems to be caused by the 'early' closing of the stream when a URL-stream is being used. This seems to confuse the dvdplayer, where it keeps waiting until some timeout, sometimes up to 60 seconds. Moving the 'CloseStream' into the non-URL stream codepath fixes this issue for the DVBLink-based URL streams and doesn't change behaviour for the non-URL streams. \n. Well, my patch is included in this pull request. Seems a safe way to go for me, just don't know if it's the best way...\n. This commit breaks the EPG timeline window for some reason\n. This is fixed now indeed! Thank you!\n. ",
    "buxit": "strange. i can't seem to find the relevant strings there. is the pvr stuff somewhere else?\n. ",
    "linniksa": "@MartijnKaijser\nAs far as I can see Russian translation on transifex not up to date\n. @alanwww1 \nBig thanks!\n. ",
    "fape": "What do you think about simple add rand_r  implementation  manualy?\nLike this: http://gitorious.org/android-pc/external-sshfs/commit/dca49dbc512de2c9dd170d2e402048e7db540ecf\n. I compiled without error. But I can't enable addons for pvr. Log: http://pastebin.com/BVtj1Zih (default build, fresh install,  Seby 0.7.1 rom: android 4.0.3)\n. Yes, I tried with the latest 3 commit from https://github.com/theuni/xbmc/commits/android-pvr. But I bumped the version in Makefile for use theuni's pvr-addons commits.\n. Yep, You're right. I made a mistake :S\n. ",
    "BtbN": "Yeah, i tried that(doing it for the first time), and somehow managed to close the old PR instead to make the rebase show up in it, so i had to re-create it.\n. I mainly put it there cause the other paths of the function trimmed it, too. Don't see a reason why a trim should realy be necessary. If an Addon gives a malformed mimetype string that needs trimming, it should be fixed in the Addon.\n. Allright, should be sorted now.\n. The VPP api supports a lot of diffrent deinterlacing methods, up to full motion compensation deinterlacing, but the libva drivers currently only implement bob.\n. Running the deinterlacer in a separate thread would definitly be better. More complex algorithms need more hanling, like buffering some frames as forward and backward references.\nI think for Bob this should work fine as drop-in replacement.\n. I updated this. Now it runs in a seperate thread in the VAAPI decoder, same as suggestes.\nIt propably still needs some testing and polishing, but in my tests its working perfectly.\nI also added VAAPI deinterlacing as new deinterlacing-method, selectable via the UI or perfered by Auto-Select if available.\n. It propably could run within the Decode thread, but the current setup separates VPP, which is except for the display a new vaapi instance, into its own thread, which allows it to work in the background, while the decoder can fill more surfaces.\nThe Performance gain is not very big, but on some systems with not so powerfull GPUs this performance gain can make the difference for 1080i50 playback.\nVPP is also capable of much more than just deinterlacing, and the seperate thread allows for easy integration of such features(Scaling, some filters and other stuff) in the future.\n. This totaly breaks vaapi(xbmc just crashes), because of a bug in ffmpeg-1.2.\nhttp://git.videolan.org/?p=ffmpeg.git;a=commit;h=b066d90211072c7532e17c0c54d8475f10fc97ad\nThis is the fix for it.\n. It's not only that. ffmpeg-1.2 and even latest master has massive problems with vaapi. I can say for sure that decoding mpeg2 just crashes. VLC has the same problem, so it's a problem in libavcodec.\nffmpeg-1.2 release version is without the patch i posted completely unusable for vaapi. It just crashes on the first frame.\n. Commit should be fixed now.\nI still haven't found a way how to fix mpeg2 decoding.\n. ",
    "vanosg": "New to the process - Should I make those changes and recomit/push? Or do you make those yourself when you merge? Thanks\n. So, is this now ready for incorporation?\n. I think this is ready to go\n. ",
    "philicious": "err ..ok..but why? \n. ",
    "asylumfunk": "Ah, I see what I did there.\nThis is my first Github project, so forgive the learning curve.\nSo I noticed that now the change list has changes I made after the initial pull request. Looks like I (mistakenly?) issued the pull request from my master. I then made another set of incremental changes in a separate local branch, but then merged them back to master and pushed to remote. Hence the double version bump and extra changes (specifically Core.js).\nWhat I'll do:\n- close this pull request\n- move all Launcher.js fix changes to separate working branch on my remote/local (I want to preserve each of my incremental changes for history; they all leave the code in the same working state :) )\n- correct version number and update copyright year\n- branch from this working branch and rebase/squash it down to a single commit\n- rebase master to mirror remote xbmc (and keep it that way)\n- issue new pull request from squashed working branch\nSound about right?\n. Revised from: https://github.com/xbmc/xbmc/pull/1502\n. Hmmm... comments auto-imported from commit comments..\n. Ah, the smaller HTTP request is the smaller JS file; sorry if that was confusing..\nOctober 9? I can hit that deadline :)\n. Will do, regarding future PRs.\nAs far as the \"neglect\" for this addon, I figured as much. That's actually exactly what brought me here :) I was using the webinterface, decided to pull up the source in my browser one day and thought, \"this doesn't look like it's been touched in years.\" Of course, the commit log here verified that. I've privately forked this project a few times, but never ended up polishing/releasing them. This time around, I figured, why not share back with the community?\nI've got a couple more minor performance changes/cleanups lined up for this window (one depends on this PR) that I'll submit today/tomorrow.  Outside of all the low-hanging fruit, I'm working on series of larger, further reaching changes (I may get the first completed for this window; we'll see today..) to drastically improve performance/experience. After that, I'll move on to updating the UI/display, but one step at a time... :)\n. @Montellese \nThis will be it from me for this release window; the major rewrite will have to wait until the next go-around.\n. The TODO comment was actually already in there...I was just moving that block further down in the function (that way we don't do a DOM lookup until/unless we need it).\nYeah, I had done the stringify thing in a different branch before; I'll pull that in tomorrow after work.\nIt definitely makes the code look a lot cleaner.\n. Requests incorporated:\n- params specified as json, not strings\n- spacing\nRebased and ready to go..\n. ",
    "AndreyPavlenko": "I tried to apply this patch on top of f6744049923e782ff4c37250de8ae7f6f1f849ff and installed xbmc-addon-xvdr - XBMC crashes with segmentation fault when switching to any channel. Without the patch everything works fine. Tested on Ubuntu 12.04 with kernels 3.0.2 and 3.0.5.\n. Thanks margro. XVDR does not support timeshift. Are there any addons for tvheadend/vdr backends that support timeshifting?\n. Could someone merge this fix please?  The build has been broken for about a week.\n. ",
    "axmhari": "\nlooks like a duplicate of #1227\n\nYou are right, I haven't seen your PR (I have to confess I just went through the more recent PRs). I will immediately try it out.\nAt least it underlines the need for a fix!\n. I think I will have the new proposal ready at the weekend. It should limit the changes in ffmpeg to the ff_gen_search function. I'm still searching for a nice way to get around the ffmpeg API change in this new solution, but I already have something in mind.\nI fear, that I don't get the point of the \"index breaking\" discussion. I tried not to treat any special cases in my code. I am just forming a linear 33 timestamp and thereby removing a possible wrap while seeking. When seeking is complete I reapply the wrap and get the correct timestamp as it is saved in the file. So for the TS case I can treat any file up to approximately 26 hours in length. If there is no PCR wrap in the file, the code should behave exactly the same way as the original version.\nAnyways, please correct me if I am missing something.\n. Thanks, now I understand. Solving it in the mpegts demuxer sounds to be a very good idea. I will have a look at the weekend and try to get it working!\n. Unfortunately I did not have much time for it in the last two weeks, but I got ahead today and it looks quite promising. So far it seems to be working for my TV recordings (with and without PCR wrap). However there is still some work to do, because there are code passages, which haven't been covered at all by my tests yet.\n. I've now pushed the changes to my branch mpegts-pcr-wrap-fix. I only implemented the fix for the mpegts type, not for the mpegtsraw type, for which I have not found any samples to test it. I didn't find a test case for read_sl_header (for MPEG-4 generic streams?) either, but it should be okay. I will do some further testing this evening.\nWhat do you think of it? Should I prepare a new pull request with these changes?\n. The updated pull request is available, and the patch is posted on the FFmpeg mailing list.\nI assume, we can close this one.\n. Interesting, I found only one video just today, which shows a similar behavior. The offset is 26:30 hours, which coincides exactly with the maximum PCR. I am surprised that is is 26:00 hours in your example. In your case, does this happen for all videos, only for those with PCR wrap or only for some single videos?\nAnyways, I am currently working on a fix, that is accepted directly in ffmpeg. So perhaps we can directly use that version instead then.\nIn any case I will check this issue!\n. FernetMenta wrote:\n\nffmpeg can seek before the point where you got you initial_ts.\n\nThanks, that's more or less the problem.\nMost of my recordings have an adaption field containing a PCR as 3rd packet. This will be always evaluated, when the movie is started. And I was completely relying on that. But there are TV stations, were the PCR will reproducibly follow later.\nI will try to solve this in the patch I am preparing at the FFmpeg Mailinglist.\n. @fetzerch \nCould you please check my new branch utils-pcr-wrap-fix. Thanks!\n. @fetzerch \nThank you very much for testing. But that is confusing. It is working perfectly for me.\nI am wondering if I am still relying on some condition that is only met by my files. Would it be possible for you to upload a smaller chunk of this recording, so I can reproduce the behavior on my system? I would play it directly without MythTV, but I assume that would not make a difference.\n. @fetzerch That's very good news.\n\nWill this go in directly to xbmc or later as upstream patch?\n\nI don't know, I hope it is accepted upstream. But I could prepare a pull request for the meantime, until XBMC's FFmpeg is updated again.\n. Unfortunately the solution 8261ee0 still may have problems. As I use the first timestamp of each stream seperately to determine the wrap condition, it might be the relatively improbable case that the wrap occurs just after the first video time stamp and before the first audio time stamp. Then only the video timestamp would be adjusted leading to asynchronicity. And also the wrap condition needs some minor fixing. (see FFmpeg mailing list).\nI am trying to solve those issues in the next days.\n. @elupus Thanks very much for your intervention at the mailing list and for doing the backport!\nThe problem is the \".i64\" default value. In the local ffmpeg version \".dbl\" must be used instead.\nWith this change it works for me. With default settings this option is turned on, so no change in DVDDemuxFFmpeg.cpp is needed. Deactivating the option using av_opt_set is also working, but that should not be necessary.\nI have updated the PR with the latest version.\n. Yes, correct, it is a newer problem, I think it came up somewhere with the merge of PVR into the main line, but I did not track it down.\nThe situation is: When returning from the movie, the old view and focus are restored. This means the recordings list will get the focus again. It will then have the old content still available. But as long as the PVR state is not fully restored, the correct sorting is not available, so the entries will be completely unsorted. When the list gets the focus, PVRWindow also gets the focus. As the old view was the recordings view, this will be focused again. It will then trigger an update of the recordings list. In the current version the list will be cleared before the update. In the directory update the render loop checks, if the currently focused control is focusable, but a list with no entries is not. So it sets the focus to the default control for PVR, which is the button \"TV channels\" in the left side bar. The recording entries in the list will remain unsorted and without function. So you have to go to \"Recordings\" again to get the correct list.\nThe whole execution tree can be seen nicely when placing a breakpoint here. When returing from a movie it gets hit twice.\nIn another approach I cleared the list after the update and just before adding the new entries. Then the unsorted list was displayed during the update, which was not very nice.\nAlso it is possible to set the focus to the respective button in the side bar, when the view is restored. But I don't like this solution either, because you have to press a button to hide the side bar again.\nAfter all the proposed fix was the easiest and best looking solution.\nPerhaps it would be possible to update the list, before the view is displayed at all. This could be a bigger change though, but I haven't checked that yet. I am also open for other ideas.\n. I think that disabling the check if it is focusable may have side effects elsewhere. Adding the dummy item is specific to the problematic view and should therefore be the safer alternative. But as it is still a hack I think I should probably add a FIXME comment.\nIf desired, I could do that and rebase to current master on Thursday.\n. I have uploaded an updated version which adds the dummy entry in every PVR view, as @pieh suggested. Please see 71ac2a8.\n. Updated as discussed in 71ac2a8.\n. @opdenkamp The path changes alone are available in PR #1728.\n@jmarshallnz I have split the library integration into 3 smaller commits, please see the according branch. CGUIWindowVideoNav::LoadVideoInfo() is made static as suggested. However those changes will not have an effect without the change of the filename, because PVR and library items cannot be associacted due to the date/time subdirectory.\nCould you please check those commits and decide how to proceed? Thanks!\n. Updated.\nI just saw, that thumbnails and fanarts are not shown in \"all recordings\" directory. I think it would be necessary to get all subdirectories of pvr://recordings and call LoadVideoInfo for each of it. Maybe it should be put into a separate commit anyways... I can have a deeper look at it on Sunday.\n. I have added thumbnails and fanarts for \"all recordings\" in 9a00e24.\nI now came to the conclusion, that it might be confusing, if the labels are replaced in the recordings view. Some might miss their recordings, and for TV-shows only the episode number and title are displayed, which is problematic in \"all recordings\" view. So I also added 88bc1e9, to always use the original titles as labels in PVR recordings view.\nPlease have a look and check, if the commits should be added here.\n. @jmarshallnz An updated version (using a map as proposed) is available at 6b02c3f and d5be472.\n. I added the new commits to the PR. The additional typedefs are removed and make_pair is used as said in 6b02c3f.\nI still use an auto pointer to CFileItemList in the map because copying the whole list object on insertion is not desirable IMO.\n. Sorry about that! The problem is, that for material which is in the library the watched status from the PVR backend is overwritten by the information in the database (in CGUIWindowVideoNav::LoadVideoInfo and CFileItem::UpdateInfo). So XBMC's local watch status has the precedence.\nWe could add a boolean setting replacePlayCount, just like replaceLabels. Or we could use the original play count for PVR items. But in any case we would have to reset m_playCount after being set by GetVideoInfoTag() = item.GetVideoInfoTag(); in CFileItem::UpdateInfo.\nOr do you have any other ideas?\n. The resume position is also affected. Perhaps they are taken from your database.\nI have now implemented an approach at 1896d29. The idea is to merge the resume and play count information from PVR client and database. The information from the PVR client has the precedence if available. Please tell me, if this is working for you.\n. We could use the following additional clean string instead:\nm_videoCleanStringRegExps.push_back(\", TV( \\(.*\\))?, (19[0-9][0-9]|20[0-9][0-9])[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]\");\n. @jmarshallnz I had this change of CFileItem::GetMovieName() in #1719. However it worked in \"Files\" view only, because a library item does not have m_pvrRecordingInfoTag set. Therefore I now added an extra recording detection and retrieve the info tag where appropriate. If the recording info tag is not available for any reasons, the regexp will clean the string as you suggested.\nI have outlined the changes by updating the current PR.\n. > Is there any case where this tag information would not be available?\nYes. The tag will only be available, if the recording is found by the PVR system. So it won't if the server is down or the recording is on an external hard disk which is not mounted on the server. The latter case applies to my system.\n. Okay, I was blind. I never though about cleaning the filename already there. Please have a look at the new commit.\n. I have fixed the memory leak (I should have had a closer look to GetReplaceString!). I also replaced the string comparison with StringUtils::EmptyString by a call of the method IsEmpty, as that is the common way to check for empty strings.\nI would consolidate the changes into a new PR with 2 commits: one for the title extraction and one for the path change. Is that okay? Are there any further comments?\n. > Can we drop the TV-specific cleaning regexp now?\nYes, it is removed from the advanced settings.\nThe new PR is up (#1747). After all I decided to put it into one single commit though, because the changes are more or less depending on each other.\n. I though about dropping the look-up, too. I didn't do it, because the title may contain some characters, the filename does not. These are currently '/' and '?'. However, the replacement of '?' was only introduced, because there was a problem with scraping of titles containing a question mark. I think this replacement could be removed now. '/' is replaced by '-'. This can cause problems, e.g. \"Face/Off\".\nWe could replace '/' by a space instead, drop the question mark removal and then remove the recording look-up.\n. > Note that you can fix + rebase and force push back to your branch to update the PR.\nI see, thanks. The PR is updated.\n. So you mean the following?\n\nvoid CGUIDialogKeyboardGeneric::MoveCursor(int iAmount)\n{\n  SetCursorPos(GetCursorPos() + iAmount);\n}\n\nI didn't do it because GetControl(CTL_LABEL_EDIT) with some search code in it would be called twice than. And that is not resolved by the optimizer.\nPR is updated with the first two commits only.\n. Okay, updated!\n. ",
    "hydra": "oops, yes, i'll close this and create a new poull request, my bad!\n. Can you do the makefile as part of the merge; I don't have a linux build environment setup here yet.  I'll be adding AmbiPi support (which was the driver for this refactor) to OSX and Linux so will setup OSX and Linux build environments in due couse but not ready yet.\nok?\n. Addressed two comments from yesterday and squashed commits (you did mean 'git reset'..., 'git commit', 'git push origin relocate-screenshot-code2 --force' right?)\nI wanted to keep my first pull request simple so I could figure out the process and start communication.  I'm sure i'll be making additional pull requests in the future to help out when I get time.\nThanks again!\n. Also, once this is done let me know so I can make a pull request for this branch:\nhttps://github.com/hydra/xbmc/commits/refactor-screenshot-code1\n. Sure, i'll do that tomorrow.\n. Done\n. Also added missing #prama once\n. ",
    "Crupuk": "Translation is correct on transifex.\nThanks\n. ",
    "jbeluch": "Cool, I think that should work. I'll test once I see the relevant commit go in. Thanks.\nAlso, can you elaborate on why the returning fix is prob a bad idea? I'm new to the python c-api and eager to learn :)\n. It does indeed fix the issue. Thanks for the explanation as well.\n. ",
    "ali1234": "I'm the author of vhs-teletext. The ttf font I made is created automatically from the bitmap fonts which are part of the tv-fonts package on Debian, which is marked as GPL and made by Gerard Knorr for Xawtv. The software I used to do this is also available on github as https://github.com/ali1234/bitmap2ttf. So to the best of my knowledge this font is GPL.\nI should mention that using ttf fonts for teletext is problematic. You often get gaps between the block characters. Where possible, using the bitmaps gives better results. I created a ttf font only because browsers don't support bitmap fonts. If you can guarantee the fonts will be rendered without antialiasing or hinting, then this is not an issue and ttfs work fine.\n. ",
    "pipelka": "Alright.\nMy knowledge about these things is just too limited.\nSorry for wasting your time.\n. My intention is to load a PVR addon not packaged with XBMC.\nI first tried the classic way, but under android it's impossible to load a shared library from the sd-card.\nThis means I have to create an apk for the PVR addon but it's currently impossible to load it.\nAnother implication is that PVR addon repositories are impossible on android.\n. Confirmed ;-)\nGreat. Thanks for fixing this.\nThis means I can close this PR and you will add this patch ?\n. The problem here is that stopping the pvr manager dead-locks xbmc.\nFrom my point of view it's unnecessary to stop the pvr manager.\nThis way it removed 2 problems.\nAbout background scanning:\nIt doesn't matter if the backend signals that it's possible to do background scanning or not.\nThe backend simply may hide the scanner dialog and continue scanning.\nCurrently, I also added the scanner dialog to the client specific settings.\nIf the change doesn't make it to XBMC to doesn't matter for me.\n. AFAIK, stopping the pvr manager unloads all PVR addons.\nHow should the addon do a channel scan without being loaded ?\n. I added a patch stopping live tv before starting the channel scanner.\nI'm not the specialist for XBMC internals but this is the best solution I was able to find.\n. ",
    "K900": "\"XBOX360 GAMEPAD (Controller)\" is another possible name, e.g. Razer Onza.\n. ",
    "rowanborder": "@MartijnKaijser I've been running XBMC Eden with a wired XBOX controller using xboxdrv drivers on Lubuntu and it recognises the controller fine despite it being declared as \"wireless\" in the keymap. Your keymap looks almost identical to mine with a few differences. I have the D-Pad mapped as buttons instead of using 'hat'. I'm unsure whether that mapping works on Windows however.\n. Sorry, I'm really new to GitHub and the XBMC Project. What does that mean exactly? :)\n. Is that fully rebased now?\n. Ok think I've got it sorted now. Sorry I'm a real newbie to this and working with TortoiseGit on Windows not in Linux command line. Thanks.\n. ",
    "mizaki": "@jmarshallnz  Just so I understand you correctly. New to people actually checking what I've done.\nRemove the changes to tvdb.xml because, as you say it's an addon change?\nOriginally I used the name \"episodeid\" but as Montellese pointed out that is confusing with the table and JSONRPC id of the same name. So I followed the IMDB for movies, which although is called IMDB does not have to actually be the IMDB number. I believe any addons that use it check for \"tt\" at the beginning. The TVShowID is also saved with no indication of where it came from. Although it would be nice, it would be a big change imo.\nThanks for your time, I appreciate you are all busy right now.\n. After talking it over with Montellese he is happy with \"episodeuniqueid\". This was preferred over \"episodeuid\" because of its closeness to \"episodeid\". I changed the internals to match.\nAll good now?\n. This just brings episodes in line with the rest. I agree that it would be helpful. Movies especially as you say, there are a number of resources. I kept my ambition low for my first foray into C++ and XBMC :)\n. Sorry, thought I had nuked the tvdb.xml. Have now. All good to go in?\n. I've changed as per the instructions (thanks for those). I've tested and it all seems to work fine. Is it ready now? :)\n. Okay, 20th time lucky? :)\n. This is what I did to test: http://pastebin.com/BYDxpj1h  Olympia might have a better way. I don't think there is anything else.\nThanks for sticking with me everyone :)\n. ",
    "ribbon10": "Tested the patch with RPI and OpenELEC r12056 (that includes xbmc-frodo-f13566b wich have the BXA Demuxer) and it works fine for me.\nBut I do not know how this behaves on darwin or android.\nJust for info OpenELEC has disabled IPv6: https://github.com/OpenELEC/OpenELEC.tv/blob/master/projects/RPi/linux/linux.arm.conf#L479\n. Can someone proof that the patch works under IPv6 enabled environments. If so this will minimize the risk a little bit that it breaks something.\n. ",
    "jbdk": "Did a merge with #1365, but i don't really know if its the correct way of doing that.\n. @sialivi I can only act on information about track languages available to me in the file. \nIn your case, I would set primary = swedish, secondary = english, and then remux the file(s) that gives the wrong result.\nSounds like a corner case to me.\n. @ace20022 So what I should really do is close this PR, redo it in a new branch, discussing it on the forum, change it, and the make a new pull request with clear separated commits?\n. Well the intended use case for this, was to let kids watch dubbed movies (in preferred primary), and in that situation be a little clever by not displaying subtitles for the same language except if forced subs were found. \nAnd for me, select preferred secondary language on series with dual German/English audio where track 1 was the dubbed German, and track 2 Native English.\nAnother problem with the current XBMC is that it shows the first available subtitle if no match is found with my selected preferred subtitle language.\nThis was an easy to use solution based on how other media players and consumer products handles it.\nBut I am really starting to realize, that we cannot cover every situation.\n. ",
    "Forage": "Sorry to barge in, but I'd love to see this feature happening...with one request :-D\nWill it be possible to set one remote target as the default player? I.e. start any movie at any time as is being done \"normally\", without having to specify the remote target on the spot every time when starting a movie. This should happen if, and only if, a file is requested to be played through the XBMC UI, not when XBMC is instructed through UPnP to play a file.\n. ",
    "stevevg": "ok, sorry for posting here, I didn't know.\n. ",
    "dragonflight": "I'm not sure I understand (well actually I am sure I don't).\nIf the stream decoder is responsible for determining \"real time\", then it should tag the display packet with that information, as it needs to be synchronized with that packet.\nAs for understanding the current \"real-time\" I agree that it should have been the responsibility of all players to update time and a message to update time would be a good choice.\nI just wanted to fix a very annoying bug (not sure why others didn't complain - the queue is just the same length as as small backstep, making it just a stutter:)) and I thought poking into the player was in the same vein as poking into the decoder.\nperhaps you could comment more on what you mean with the messages\n. It's a fact I'm an idiot - I checked against the wrong branch before I posted. I also misinterpreted why the stat - thinking it was to prevent having to check file validity later.\n. a) you are of course correct about the two atof's\nb) I'd be happy to change it std::string (I thought you guys only used CStdString)\nc) Briefly looked at #1466 and hte commit for this, I'd be happy to rebase, change the name and resubmit it if that doesn't screw hi stuff up (I assume it will be easy enough to skip his commit\n. sorry bad click\n. As requested the above PR (if I didn't screw up with git again) is a PR with GetReplaceStdString returning a std::string. There was very little difference between it being a std::string and CStdString. In code review VideoInfoScanner was the file that had the mos non-trivial changes.\n. Pull request 1742 merged into master\n. 1. Is Stopping CleanString from deleting the whole name (as it now does with a name starting with '[' a bug or an enhancement?\n1/2. What is the preferred method for \"fixing\" a PR? mangling the current branch (in this case creating 2 commits and squashing the current one) or create a new branch an PR\n1. In the current form, there really isn't a good set of test cases as the semantics of the function is to find the first match in a long list of alternatives and delete the rest of the name.\n. OK bad day - 292786c is not needed, 776aa50 got stepped on, but not needed because of Frodo freeze\ne0736ff has a typo (no rooted vs. not rooted)\n. Given Frodo freeze I see no reason to keep the rest of this. I only added it for a couple of users in the forums\n. sorry, which non database items have videoinfo tags, so that I can look up what happens\nthanks\n. I checked all of the file systems and some (can't claim all) of the other uses of videotag and in particular I checked for references to m_strFileNameAndPath and as far as I can tell no-one except for PVRManager sets it, so I'm guessing the files view sorted by file looks somewhat surprising today.\nIn any case I have added a test for m_basePath and m_strFileNameAndPath being unset that might provide reasonable results in those cases.\nIt might be nice if we had someone who could test it.\n. I think you will find that the content type, scraper, and the bools are exported, but not the path.strSettings which are the additional options for the scraper (like episode ordering in tvdb...)\n. It is not just multi disc movies (of which I have several - maybe not all 12) it is also all the movies that come as 2 disc sets and of those I have > 1000.\nI could convert them all to iso, but AFAIK any other format and you lose the menus and in many cases some of the \"extras\"\n. I don't know why DVD folders are the poor cousin in the XBMC world\nWith this comment I will have spent more time and thought on this discussion than I did on the code!\nAnyway a few somewhat nonsensical observations\nI take some exception to \"whole heap of non-obvious code\", it is neither a whole heap nor particularly opaque especially if you look at each commit individually\nA DVD file structure does not begin with VIDEO_TS folder there are numerous examples of DVDs that have extra folders\nI have a large (>4000) episodes of the format tvshow/NNN episodename.titNN -> DVD/VIDEO_TS/VIDEO...s as I have proposed for everyone in another pull request. Without some change all the thumbs for the episodes tramp on each other and even worse all the episode nfo's go to DVD/VIDEO_TS/VIDEO_TS.nfo\nIt seems intuitively (of course intuition is personal) wrong that if you have \"movies in folders\" option that you can use movie.nfo except if you have DVD/BR folder.\nWhile it is not entirely unreasonable (I say it is, but...) to say only use iso's there are several reasons to chose BR folders over BR isos at the moment (menu with list of files and the ability to select individual titles/playlists)\nPersonally I have a file structure with over 3000 DVDs and while it is not unreasonable to covert them all to ISO it is a pain and god forbid I should screw up the script. Others are no quite so lucky to have a file server that can compute\nAs for extras yes I do want them scraped but no-one else would, at least until XBMC undersands them\nAnd FINALLY the way it is is just plain wrong ! :)\nPS. Unfortunately much of this same code needs to be looked at regardless, as as nfos and actor thumbs all get stuffed in the VIDEO_TS folder which is really really wrong.\nLuckily it's \"simple and straightforward code\" for me to keep rebasing :)\n. Here is an 'ls' of one of my DVDs (its unusual but not particularly rare)\nAUDIO_TS  Autorun.inf  autorun.mcl  common  disc.id  install.exe  iti.png  iti_st1.png  JACKET_P  start.osx  start.pct  VIDEO_TS  win  Xtras\nI hate being wrong. Yes movie.nfo does work. I had to add a special case for it, in my stuff, when you click refresh in the movie information dialog (or so I thought I will have to retest that!), so I thought it wouldn't work now\nI did realize I didn't have to convert all my movie titles, I was talking about the problems with tv show ones.\nFor me personally, I have other suff in my movie folder - checksums, independent metadata files, sometimes source info... \nI just remembered another problem, but again there are a small number (10-20) of DVDs that have multiple movies per DVD - I have a structure like my tv show episodes with multiple symlinks to a single DVD and again the nfo and artwork will trample on each other (so I have 15-25 movies that have to be isos :) )\n. to answer 1 and three yes I am worried about separating the disk and the other crap. One day some of the other crap is going to stomp on the physical disk crap and I'll never know until way too late and I consider it pollution of the disk as much as sticking nfos into VIDEO_TS\nthe difference between s01e01e02e03e04 and my scheme is that I can mix seasons (rare) and specials which are sometimes scrape-able as s00e..\n@jmarshallnz PS. I hope your not fuming at all this\n. @cptspiff Loved the morning smile!\nConsistency and removing support nightmares is what I'm all about, after 25 years in the hi-tech industry (only 25 'cause I retired at 48) I appreciate removing support nightmares.\nIf you have a dvd.iso, or a stub file or a DVD jukebox (yes I used to have one of those - made it about 8 years ago), the scanner library treats each DVD as a single item and they can be placed in an extra folder if you use (\"place movies in folders\"), but for some reason DVD folders are different (inconsistant I would say :) ).\nI don't know about windows (haven't seriously used windows since win2k) but in linux if I click on a dvd.iso I get the contents of what would appear to be a DVD Folder.\nThe true inconsistency is that XMBC understands lots of different ways of storing media but but not folders. A video_ts.ifo has no useful meaning if the accompanying vob files are not there.\nThese changes were to simplify matters (make them consistent) and say that in all (and yes a little more work is needed to say all) cases a DVD folder and a corresponding DVD iso were treated the same (including not polluting the structure with stuff)\nAt jmarshallnz's suggestion here (http://forum.xbmc.org/showthread.php?tid=141928) is the forum topic I started about this stuff before I issued the PR\n. @elupus \nI did in fact notice that as a path option, but I didn't know how to make it scrape (and no one has suggested how in the forums when people are complaining that XBMC chooses the wrong - well not the one they want to see - playlist)\nHumourously, this is a case where a Bluray folder instead of an ISO is better.\nOut of interest I tried adding a source as you suggested and I got two items\nSelect from all titles ...\nShow bluray menus\nThe first returns an empty list, the second does nothing (I have no blurays, so I tried this with a bluray that I downloaded, only one mpls, but XBMC plays the iso and gives a list of mpls's if it is a folder, so it should be ok.\nThis PR gives a relatively understandable way of \"fixing\" which mpls XBMC plays\nWhen things are changed (or explained it is possible today) to scrape this stuff I agree that a DVD:// syntax should be created.\n. You were right I got the wrong path in the url.\nas for using ?title to pass the title info I only did that because there was code to already do it, except property BlurayStartingTitle was never set, nor tested inside DVDInputStreamBluray.cpp. The option only ever exists between DVDPlayer and DVDInputStreamBluray and DVDInputStreamNavigator. I would be better if DVDPlayer could pass options as another argument to the streams. As an alternative I could nest the filename in a bluray:[urlencoded filename]/?title=NN to avoid ambiguity, but I'm not sure XMBC handles nested URLs properly\nI currently don't have any BluRays (but I will), but I have lots of DVDs. If I were to use your scheme or urls to play specific titles and use alternate paths I would need 4000+ paths for my tv shows and another 2000+ for my dvds (I have them set to play the movie directly without going through the menus by default) and would be a real maintenance mess. As there already are people with largish BR collections you might want to rethink \"I will not accept another way of accomplishing the same thing when it comes to bluray\".\n. There are 3 separate issues we are talking about\n1. the passing a parameter from DVDPlayer to the DVDInput streams\n   I used ?title because it was already there. I am happy to be told how best to pass the info to the input streams.\n   e.g. am happy to use bluray:[url]/?title=nn using curl to encode it and decode it in DVDInputStreamBluray/DVDInputStreamNavigate. The option would otherwise never be exposed.\n2. The addition of a filename option that allows a specific title to be played.\n   While this is a duplicate of bluray://url encoded path/BDMV/00001.mpls it is scrape-able (scrapable?) and doesn't need potentially thousands of alternate filenames to implement.\n3. The addition of a database field that specifies which title to play set in the nfo (and maybe a gui option at some point)\nI use #2 because I have an external tool that I use to generate the episode names an title number semi-automatically. I also have scripts which play the individual episodes in mplayer and xine.\n. 1) is different because in DVDPlayer filename becomes bluray:[urlencode(filename)]/?title-nn\n    then in DVDInput stream gets bluray:[url]/?title=nn  and filename = urldecode(url) and title=nn\n     DVDInputStream just uses filename as it would have before\n2) there is no problem with fetching it from a http/webdav server (actually there might be if it ended in a ?title=nn, but that could be handled by always adding the ?title option) because the ?title only exists in between DVDPlayer and DVDInputStream. it is added just before calling DVDInputStream and it is stripped in DVDInputStream before doing anything else.\nthe problem with scrape-able (as opposed to scrap-able) is that you can't pass the BDMV/00003.mpls if it is an iso (except of course with a url which you can't represent in a filename (though you should be able to in a symlink which didn't seem to work for me and I don't know if it works in Windows regardless) What I did was create a new filetype .titNN.iso which is a unique type interpreted as title NN (or BDMV/NN.mpls) by the player which could even be configured to be played with an external player if one so desired.\n. No nfo files don't point to paths (at least individual ones as opposed to the whole library dump), it is the other way around.\nYou need a video file to trigger looking for an nfo (name of the nfo file is derived from the video filename and scraper options). You could add an option to specify a redirected path, and in essence that is what I have done with the playtitle tag.\nYou can (if the BR is a folder) create symlink of the form SnEnn name.mpls -> BRfolder/BDMV/00003.mpls and place the symlink in a tv show folder, it will be scraped and then you can play episode nn from the library.\nIn linux one could create a symlink of the form SnEnn name.mpls ->bluray:[url]/iBDMV/00003.mpls\nand again the symlink would be scrape-able, but for some reason when I tried it it didn't work, but I'm sure it could be made to work in Linux. As I said I don't know if it could be made to work on windows.\n. Let me start by apologizing for not having written a better description to start with. I have been doing this for about 10 years (not with XBMC of course) and I forgot that what is obvious to me is only obvious to me.\nIt doesn't appear that .strm files would work as the code treats them as playlists (as well as .url), but something similar could , but it would have to introduce the idea of a relative URL encoded path (now xbmc's uses of urls/paths back and forth really confuses me :) ). as one definitely wants the ability to reorganize video in the filesystem.\nLet me just say that the new file type (clumsily implemented, but limiting the code affected) and a symlink  was intended to accomplish what you are thinking of with the .strm file\nTo try and correct my initial error with a description of want I want to accomplish. I'm not that familiar with BluRay so some of this may not be strictly correct, but hopefully it will clarify some stuff.\n. Sorry I didn't realize (obvious now) that git wouldn't word wrap, so ignore first comit\n. As I said in my README that would work fine except that a .strm is a playlist.\nPerhaps .urlalias? as a generic filesystem -> url translation, or whatever.\nThere is still value in adding the database item, as you would get 2 scraped items  the urlfile and the movie.iso,  movie.../VIDEO_TS.IFO or movie.../index.bdmv\nIf I/you decide to implement play longest for DVDs and play menus for blurarys, it would be nice to add \"Play longest\" as an option along side the \"start DVD at main menu\" option\n. Fine, I might have chosen to fix .url instead, but since I have not even contemplated moving my music collection to xbmc I'm not sure I would even know where to start fixing it so as not to break the music library (or leave it with one meaning for music and another for video), guidance would be useful.\nI was not trying to knock the Bluray implementation (though as I'm sure you realize if it is an iso you elect the longest and if it is a folder you list the PLAYLIST directory by default). I only have the one bluray disc that I downloaded to test this and it may have been stripped of menus. My point was merely that the playTitle nfo option allowed one to decide on one of three options (menu,longest,specific) on a per video basis and this was useful for DVDs (more useful when play longest title is implemented) and for BluRays (more so if it plays menus today)\n. OK, it is immaterial to this topic but I checked what is happening on my ONE BluRay (It has a simple menu that just  immediately starts the movie and it has only one playlist.) I monitored the debug log to know what is happening.\nI have two files\nsecretary.iso\nxxx/BDMV/...\nI scraped them into my library\nin library mode (select or play)\nsecretary.iso - plays longest title\nxxx - displays dialog, select bluray menu plays menu\nin files mode\nsecretary.iso (select,play) - plays longest title\nxxx (no stacking, play) - plays longest title\nxxx (stacking, select or play) displays dialog\n. According to the debug log (and the extra message I put in ), when I said play longest it is calling CDVDInputStreamBluray, trying the protection (non-found), then calling CDVDInputStreamBluray::GetTitleLongest() and finally playing udf://%2fxmbclibrary%2fBluRay%2fSecretary.iso%2fBDMV%2fPLAYLIST%2f00001.mpls\n. Its going to be a little hard to fix as the dialog is displayed when  the user attempts to play a bluray (as determined by CFileItem::IsBDFile() which merely checks if you are playing index.bdmv in CGUIWindowVideoBase, whereas CDVDPlayer decides to try playing the iso as a bluray if DVDInputStreamNavigator doesn't like it. One of the \"oddities\" I discovered researching this feature. I just assumed XBMC was waiting for full menu support to just drop the dialog.\n. bad pull\n. ",
    "Patatra": "Ok, bad title, it's not an error, it's a bug. Already talked about it on the forum. Could you reopen?\n. Ok thanks and sorry, I'm not a regular at bug reporting\n. ",
    "Diaoul": "I think a README in language/ would help\n. ",
    "vincentfierant": "I tested the build you posted on the forums and noticed that, after a restart, the fix doesn't seem to work anymore. It looks like the coreaudiod assertion is not released. The other XBMC assertion get's released as expected.\npmset -g assertions prints out this:\n\nAssertion status system-wide:\nPreventUserIdleDisplaySleep 1\nCPUBoundAssertion 0\nPreventSystemSleep 0\nPreventUserIdleSystemSleep 1\nExternalMedia 0\nUserIsActive 0\nApplePushServiceTask 0\nBackgroundTask 0\nListed by owning process:\npid 135(coreaudiod): [0x0000000100000196] 00:54:55 NoIdleSleepAssertion named: \"com.apple.audio.'AppleHDAEngineOutputDP:1B,3,1,2:0:{CB3D-0B33-00000000}'.noidlesleep\" \npid 135(coreaudiod): [0x0000000500000197] 00:54:55 NoDisplaySleepAssertion named: \"com.apple.audio.'AppleHDAEngineOutputDP:1B,3,1,2:0:{CB3D-0B33-00000000}'.nodisplaysleep\" \npid 17(powerd): [0x00000001000001d5] 00:00:01 PreventUserIdleSystemSleep named: \"com.apple.powermanagement.ttyassertion\" \nDetails: /dev/ttys000\nLocalized=A remote user is connected. That prevents system sleep.\nKernel Assertions: None\n\nThe \"com.apple.powermanagement.ttyassertion\" assertion is me using ssh...\n. Sorry, yes; a restart of the whole Mac. To add; I initially doubted XBMC called the coreaudiod process, but when I quit XBMC, the assertion of coreaudiod clears, and when I run XBMC again the assertions of coreaudiod are back again.\n. Add a zero to which option? Or do you mean an empty advancedsettings.xml with nothing but a 0?\n. Nope, adding the  option does not help; the coreaudiod assertion sticks, while the main XBMC assertion get's cleared. \n. Seems to be working fine! No more coreaudiod assertions. It's maybe a bit not user friendly to have to add the  option in advancedsettings.xml for first time users, but I guess this is a bit of an advanced feature to want to have, so the users that want this feature are probably savvy enough to work with advancedsettings.xml.\nI'll keep using this build for a few days to see if everything works like it should, but initial testing looks good!\n. How could I test that? To let it suspend I'd have to leave XBMC idle, so nothing playing. But to test the audio lock, I'd have to play something in XBMC again, thus the audio lock get's asserted again?\n. Ahhh ok, misunderstood. Nope, the (PCM) audiolock stays until going to sleep. After sleep, the lock is back. So that seems to work just fine.\n. ",
    "bstrdsmkr": "If you're familiar with android's intents system, it's be nice to see something like that for this. For example, only add the context items if the list item url matches a provided regex, or if certain list item properties match given regex's\n. It's entirely possible that I missed it, but have you defined constants for the formats? Just trying to avoid those \"magic numbers\" =)\n. I see that the languages themselves have constants (ex. English), but I was asking about the formats themselves. As far as I can tell with my limited knowledge of C, the formats must be passed as an int:\nlanguage = xbmc.convertLanguage(English, 1) instead of by a more readable constant: language = xbmc.convertLanguage(English, ISO-639-1)\nAgain, sorry if I missed it =)\n. It's not necessarily a problem, just a python idiom \"Explicit is better than implicit.\" That way if I'm reading through someone's code or trying to help them debug, I know just by looking at it what the parameter does and what they expect. The idea is not to have to pull the pydoc. \nFor example, xbmc.addSortMethod() defines constants for it's parameters. Like I said, not a show-stopper, just seems more readable and consistent\n. To address @MartijnKaijser's point that most people won't recognize the ISO code on sight, maybe the constants should be something more colloquial (since clarity is the whole point of the exercise):\nxbmc.LANGUAGE_FULL\nxbmc.LANGUAGE_2_LTR\nxbmc.LANGUAGE_3_LTR\n. ",
    "Fice": "@bstrdsmkr No, I'm not familiar with the intents system. Could you given an example when it would be useful to let a regex over a path decide if it's visible? There is a lot of information that you wouldn't get by that, like any metadata of your media. I think it would be more useful to query them directly.\n@bossanova808 Yeah, I'm in the same situation ;) You either need skin support (as if the skinners weren't busy enough ;) ) or they would be completely un-userfriendly to use... I haven't created a special Forum thread for that but I read a few feature suggestions that would then be doable as an add-on. Where should I open a thread? Feature Suggestions, Development or Python Add-on Development... depending on what you want to discuss, it could go in any of them.\n. done: http://forum.xbmc.org/showthread.php?tid=144770\n. did a rebase to master... still no answer from some dev if this can make it into mainline?\n. Made some changes. The addon.xml should now look like:\nxml\n<extension point=\"xbmc.context\" library=\"addon.py\" label=\"{LABEL}\" visible=\"{VISIBILITY_EXPRESSION}\">\n </extension>\nwhere {LABEL} can either be a hardcoded string (if you don't need it to be translatable or for prototyping) or an integer that represents the id of the translatable string in the strings.po ;)\nDisadvantage: When opening the context menu for the first time, we have to load, parse and extract the label string... When having only a few context item addons, i don't think that this would be a big of a deal.\nRight now i also keep all the language strings in memory, maybe it makes sense to only keep the label in memeory and clear the rest?\n. @bulkzooi Still waiting for a somewhat official answer, but in the official dev forum they said sth. like \"if this gets added\" (http://forum.xbmc.org/showthread.php?tid=154474)... so at least not a no ;) I had a great deal of positive feedback by python developers though. \n. So, just removed the [WIP] ;)\nYou can now finally access the selected list item in your addon via \"sys.item\" not via the arguments passed. Also the problem with context item addons showing up in the middle of the list is also fixed ;)\n. already read it, I like the idea of it and unless you decide you want to go with nested contextmenus, I think it should be manageable to adapt ;)\n. kk, moved my ideas for further work on this PR here: http://forum.xbmc.org/showthread.php?\n. Btw, right now, when the user creates a bookmark this way, the user does not get any kind of feedback... any ideas of a good way to give an appropriate feedback to the user? I'm not sure that using a textual notification would be the most appropiate way, but would be better than nothing\n. @MassIV I don't think that's easily possible... The last commit now shows a Kai dialog that a Episode Bookmark was created, but I'm also fine with no feedback at all\n@jmarshallnz done and rebased again\n. done ;)\nAlso removed the commit that overwrote <b> and <b mod=\"ctrl\"> in keymaps, because they are already in use.\nFurthermore, the GUI_MSG_REFRESH_LIST message and the KaiDialog are now only shown, when the bookmark creation was actually successful.\n. rebased. sry about that, don't know what happened here ^^\n. Well, I don't know. Are there any instructions on how to run the tests on osx?\n. not quite...\nmake xbmc-test\nautoreconf -vif .\nautoreconf: Entering directory `.'\nautoreconf: configure.in: not using Gettext\nautoreconf: running: aclocal --force \nautoreconf: configure.in: tracing\nautoreconf: running: libtoolize --copy --force\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, `build-aux'.\nlibtoolize: copying file `build-aux/ltmain.sh'\nlibtoolize: Consider adding `AC_CONFIG_MACRO_DIR([m4])' to configure.in and\nlibtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.\nlibtoolize: Consider adding `-I m4' to ACLOCAL_AMFLAGS in Makefile.am.\nautoreconf: running: /usr/local/bin/autoconf --force\nconfigure.in:26: error: possibly undefined macro: AC_MSG_RESULT\n      If this token and others are legitimate, please use m4_pattern_allow.\n      See the Autoconf documentation.\nconfigure.in:73: error: possibly undefined macro: AC_MSG_ERROR\nautoreconf: /usr/local/bin/autoconf failed with exit status: 1\nmake: *** [Makefile.include] Error 1\n. Done.\n. I tried to take the first step (compile the regex during parsing instead of evaluation). I felt that it was more appropriate to derive from GUIInfo and make a GUIRegexInfo. (The Caching part would be more appropriate in InfoBool, as that one is already responsible for deciding if it should be updatet?!?).\nWell, during that I ran into the problem that I would have to downcast in CGUIInfoManager::GetMultiInfoFOO and I wanted to avoid that, so i moved the GetMultiInfoFOO functions into GUIInfo and GUIRegexInfo. Not sure this was the right move, the last commit is quite huge right now (and probably a b*tch to merge later on). But i see a few advantages: We could make 2 versions of GUIInfo depending on if they need a m_data2 or not (and save some space). Also I was thinking about moving GUIInfo and GUIRegexInfo in their own files, to make the 5000+ LOC of GUIInfoManager.cpp more comprehensible?!?\nSo, I'm not sure it was the right move myself so what do you think?\n. Yes, this commit was only to not recompile the regex every time (and it seemed to fit better in GUIInfo than in InfoBool), has nothing to do with caching.\nWill take a closer look at how everything works tomorrow ;)\n. @jmarshallnz my exams are over, so I finally have some time to spare (already done some small things, but nothing to show for). Would be cool if you could push your local parse/syntax tree, so I could have a look and perhabs work on top of that ;)\n. done\n. strange... made a git rebase and reworded the commit as you can see in the branch https://github.com/Fice/xbmc/commits/music_player_exist but github didn't change it in this PR.\n. Done\n. You're fast ;)\nDone!\n. hmm... rebased 30 mins ago ^^\nwill do again ;)\n. took a little longer, found a bug in my previous PR... i know that I fixed the exact same bug before, but I just couldn't remember how... Can make the fix for #2147 a seperate pr if you want\n. ",
    "bulkzooi": "@Fice : Do you know if team=XBMC is interested in this patch?\n. Talking about subcontext menu's, there is also a special case: Play and then the next menu from start or here (see: http://trac.xbmc.org/ticket/5442)\n. With this patch in, maybe automaticly adding ripped cd's to the library is also an option: http://forum.xbmc.org/showthread.php?tid=142621\n. Should we use mimetype to expose EXIF or is the original PR better? Or don't we need this EXIF data in the GUI at all?\n. ",
    "imhof": "Just another data point: After FernetMenta pointed me here, I tried your patch 8261ee0 on my setup with a VDR backend and the skipping works fine for my problematic recordings. The length shown for the recordings looks ok, too.\n. Ah, thanks for the heads up. When looking for this issue the first time round (which was actually a while ago), I did not find anything substantial and I did not think about re-checking.\n. ",
    "nephalim3": "Does this also change when changing the sort method? One of my machines is very slow when changing the sort, especially when changing from my wife's favorite sort of \"Date Added\" to mine of Alphabetical by name. which requires multiple changes to get from one to the other. If it also waited 500ms I could flip to the one i want quickly and not need to reload the list 5x.\n. ",
    "maheus": "yes but i totaly recompile xbmc so I think it was unnecessary . \nI don't no my first compilation not perform .\n\nMessage du 24/10/12 \u00e0 18h12\nDe : \"Cory Fields\" \nA : \"xbmc/xbmc\" \nCopie \u00e0 : \"maheus\" \nObjet : Re: [xbmc] Update docs/README.android (#1663)\n\n@maheus did you have to apt-get cmake to build?\n\u2014\nReply to this email directly or view it on GitHub. \n\n\n\nL'\u00e9tonnant soutien de Michel Drucker au cycliste d\u00e9chu Lance Armstrong\u2026 \u00e0 lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/polemique-de-la-semaine-michel-drucker-etonne-en-soutenant-lance-armstrong-people_8786.html\n. ",
    "efenka": "I vote for this ... very useful!\n. ",
    "FSSDawid": "Will this also resolve the deadlock in PVR ? \n. ",
    "mikebzh44": "Sorry.\nCan you give me the right sub-forum URL to reports bugs on Frodo ?\nI have search but I haven't found the correct sub-forum or thread like \"[XBMC Frodo] Bugs reports\" :+1: \nhttp://forum.xbmc.org/forumdisplay.php?fid=111\nhttp://forum.xbmc.org/forumdisplay.php?fid=93\nThanks.\n. ",
    "ryanroth": "Ditto.  I was having scrapping issues after the initial patch was committed.\n. ",
    "colfax4": "Removed changes to CGUIControl.  Made m_stopped boolean a class member of CGUIRSSControl.  Removed references to IsStopped().\n. You're right.  Didn't see labelInfo being saved as a class member variable.\n. ",
    "Black09": "Any chance that this could be post-Frodo? Otherwise I would have to fix the vertical alignment in almost every label in my skin. A proper fix for correct center alignment for every font would also be ok but I guess that's tricky.\n. All my (vertically) centered labels have a different alignment now, 1 or 2px different as before this fix. Is that intended? Because it is a lot of work to fix everything now.\n. Ok, I made another test and it seems fine now with your fix... I corrected the valign of my font and everything is perfect now, thanks.\n. jmarshall is correct that the font height was calculated smaller than it's real height before so the font was aligned 1px wrong in most cases, I did some testing yesterday. If it's now wrongly aligned, the font is the problem.\n. ",
    "npeacock": "Thanks for the help.  I think I've got a proper pull request now.\nhttps://github.com/xbmc/xbmc/pull/1727\n. ",
    "adamsutton": "@opdenkamp I'm not sure why you would want to do that, nor do I think I can do it.\nAt the moment I've done nothing with the seek API for several reasons:\n1) XBMC blocks access in PVR mode to the seek controls so unless its used internally during FF/RWD I don't see a major benefit at this time.\n2) I don't yet fully understand, because of the above, how the API is meant to work.\nThe only reason I even included it was simply for completeness, it seemed better to at least pass the demuxer API fully through to those addon's that have their own demuxers.\nAnd while I don't really understand the need for a backwards flag (as opposed to a simple signed number) I would think it better that we maintain the XBMC internal demuxer API as is through to the addon's rather than having a special API within the PVR framework.\n. @FernetMenta of course those functions are only relevant to a subset of the addons. But I'm happy for SeekTime() to be removed as I currently have no use for it even if XBMC-PVR allowed control of it.\nAs noted I merely included it for completeness with regard to the demuxer API.\nFor me its more important that I can simply control the speed of output to allow play/pause FF/RWD. Jumping is a nicety that I can live without for now.\nThe one thing I've discussed with @opdenkamp before and I think you (@FernetMenta) mentioned in the XBMC forum post is how we deal with a reverse path to allow the addons/demuxers to indicate the true speed. E.g. TVH will output a response message (async) to indicate when the speed is actually updated and more importantly what it has actually been set to (since it may limit it, or reject the request).\nThis mainly relates to things like going off either end of the buffer and while can be handled internally within XBMC it would be nice if (where supported) XBMC allowed feedback from the demuxer as to what speed has actually been selected. But I think that's a problem for later.\n. @FernetMenta right, so now you want to impose a specific model on the backends, I can see that going down well. \nTVH is a streaming server that understands to a certain extent the contents of the stream and will play it back accordingly (up to now 1x only) using its own streaming container. It simply isn't designed to be used like a file, nor do we have any intention of making it behave that way. We don't really want to have to produce a specific interface for XBMC, when the one we have already works just fine.\nWith regard to recordings v timeshift, at the moment there is a big difference, though it may blur in time. Recordings are done to a linear file intended to be kept long term and in a standard file format. The timeshift buffer is a series of discrete time chunks (designed to be shared for efficient storage) stored in TVH's internal format that is essentially the same thing we currently stream live TV in.\nA caveat to the above is that if we find XBMC simply cannot deal with this way of working we may have to re-think our position. But that is a last resort and I would like to avoid it.\n. @elupus you guys understand all of this way better than me, the purpose of this PR was simply to allow the PVR demuxer (used by TVH, and VDR?) the same level of control as the other demuxers using the same standard APIs already defined in XBMC.\nSpecial case code has already been added to support the other backends which do not provide a demuxer and therefore require such special cases to handle things.\nIf there is a better way of doing this then I'm more than happy for someone to point it out and I will be prepared to integrate accordingly. \nAnd as I noted, I'm not going to lose any sleep if you guys reject this and find a better way to do it post Frodo. However not including the support necessary for XBMC to support timeshift for all existing backends (even if its not perfect and needs fixing later) would be a real shame!\n. @elupus doxy comments updated, you ok with those?\nI don't quite follow your point about checking m_pStruct, no other code checks that pointer its pretty much assumed to be correct (not sure it can be NULL). If you're talking about check m_pStruct->SetSpeed, then again this doesn't appear to be the way the PVR addon code is implemented.\nit's assumed (enforced?) that all addons must implement all methods, even if they simply stub them out. This is certainly what I've done in the corresponding PR on @opdenkamp's addon repo.\n. @elupus I'm not really arguing that point per se, its not a bad suggestion.\nHowever if you want to put this requirement on new code, fine, but you really should put the requirement on ALL code, which means significant updates to the PVR code which currently implies all functions are properly stubbed out.\n. @opdenkamp @elupus I don't think that the way the linkage has been done I can test what you're asking for, I think the code is forcing (part of the loader?) that these values be non-NULL.\nCertainly I cannot check that m_pStruct->SeekTime != NULL.\nAm I missing something obvious?\n. @opdenkamp try it ;) it doesn't work, the way the func ptr linkage is setup the compiler whinges.\n. ",
    "mtheli": "Is there any chance to get this feature into frodo?\n. ",
    "ryanolf": "I've been using this feature (from fetzerch's mainline branch https://github.com/fetzerch/xbmc/tree/mainline) with the mythtv-cmyth pvr addon (from https://github.com/fetzerch/xbmc-pvr-addons/tree/mainline) and it's worked very solidly. Now that frodo is out, maybe this is ready to be considered for merge into the xbmc master?\n. ",
    "chaitan3": "The build error should be fixed now. I'm not able to test it due to a slow computer and bandwidth limitations. Hopefully in a few days I'll have access to a faster computer & net.\n. ",
    "jonfabe": "For instance, say you have xbmc running on a device attached to your tv, without a keyboard (or mouse) attached and you want to interface with it, say from your laptop. If you're running xbmc on a full os its no problem, you can just use vnc or another program to essentially do a virtual KM switch and forward the keyboard and mouse to the device. If your running on a distro like OpenElec, however, you can't just install another program, so that leaves interfacing with xbmc directly. \nThe JSONRPC interface doesn't let you send key-presses to xbmc, only fill in text boxes, and the current EventServer interface will let you send key-presses, but no modifiers (the short it sends is only enough to send the key itself), and the key-presses themselves aren't interpreted the same way as an actual key-press on a keyboard attached directly to the system (the ascii fields and vkey fields don't get filled in and they need to be in order to be correctly interpreted by all the different parts of xbmc).\nSo in a nut shell thats what this aims to do, allow control of xbmc remotely as if you were sitting in front of the system and physically interacting with an attached keyboard, but instead doing it from a laptop, etc. that isn't physically attached to the system (without the expense of buying a wireless keyboard).\nThese changes seemed to be the easiest way to do this, reusing the existing input infrastructure and just populating the needed fields from the key-code that is sent to the event server. \n. Ok, so I looked into alternatives other then using the Vkey codes, and found I could use the unicode values for most keys and just had to run them through the ProccessKeyDown function to get the correctly populated CKey object. That left the non-unicode characters and certain unicode characters not defined currently in the XBMC_keytable (such as return, backspace, etc.), these keys seemed to best be handled by the SDL keycodes, since the same code which handles the unicode values could then be used to handle these as well (by just setting the unicode field to KEY_INVALID and letting the ProccessKeyDown function overwrite it with the correct value).\nThese changes get rid of all the bit-masking I was originally doing to accomplish the same thing, hopefully making it a bit easier to see the purpose now.\nAs an aside, this is probably the wrong place to ask this, but why are there both unicode and ascii values set on the CKey object instead of just the unicode? Is it just historical flotsam and jetsam still around waiting to be cleaned up or is it important to some other aspect of the code?\n. Well yes and no, for unicode values it will populate the ascii and vkey values (through the KeyTableLookupUnicode call) and for keysym values it will populate the ascii, vkey, and unicode values (through the KeyTableLookupSym call) - I ran into a few places while testing where CKey still needs the ascii value populated to function correctly (like when using shift+letter to jump in a menu), so it seemed best just to reuse the ProcessKeyDown function to make sure all the fields were populated correctly.\nAdditionally, the ProcessKeyDown function converts the SDL modifier values being sent to the EventServer into the internal XBMC modifier values used by CKey, but I only used the SDL values to begin with to be compatible with the ProcessKeyDown function, so its only a secondary concern.\nThat said, its not strictly necessary to run it through ProcessKeyDown, I could just call the keytable lookup functions directly and grab the needed values, but since ProcessKeyDown does this already it seemed like a waste to basically rewrite the same code elsewhere. Thoughts?\n. ",
    "n37": "I am closing this so that you may implement all the needed changes at one go.\n. ",
    "chewitt": "this resolves missing HDMI audio in the OpenELEC AppleTV build, the nVidia card was seen as a bad device and disabled - please commit\n. a less terse comment like \"please open tickets on trac instead of github\" would be a nicer way to say that ..particularly as this is the first time I opened a ticket against xbmc on github\n. ",
    "ikkemaniac": "Ok, let me know if there's intrest, I will fix all suggestions then.\n. ",
    "Andries007": "Can you please give me the link to the right place then..?\nThanks\n. ",
    "singular0": "Done!\n. I have squashed commits as suggested.\n. @elisiano, does your Arch installation utilize systemd or is it still on sysvinit?\n. ",
    "aronparsons": "Applies cleanly against master and works fine on Fedora 17 x86_64.  Thanks for the functionality, singular.\n. ",
    "elisiano": "Hi Guys,\n    I'm in a similar situation of this guy: https://bbs.archlinux.org/viewtopic.php?id=154084\nAll I get in the logs when I start xbmc is:\n19:29:11 T:139832183691200  NOTICE: -----------------------------------------------------------------------\n19:29:11 T:139832183691200  NOTICE: Starting XBMC (12.0-BETA2 Git:20121203-a65b40d), Platform: Linux (Arch Linux, 3.6.8-1-ARCH x86_64). Built on Dec  4 2012\n19:29:11 T:139832183691200  NOTICE: special://xbmc/ is mapped to: /usr/share/xbmc\n19:29:11 T:139832183691200  NOTICE: special://xbmcbin/ is mapped to: /usr/lib/xbmc\n19:29:11 T:139832183691200  NOTICE: special://masterprofile/ is mapped to: /home/xbmc/.xbmc/userdata\n19:29:11 T:139832183691200  NOTICE: special://home/ is mapped to: /home/xbmc/.xbmc\n19:29:11 T:139832183691200  NOTICE: special://temp/ is mapped to: /home/xbmc/.xbmc/temp\n19:29:11 T:139832183691200  NOTICE: The executable running is: /usr/lib/xbmc/xbmc.bin\n19:29:11 T:139832183691200  NOTICE: Local hostname: xbmc\n19:29:11 T:139832183691200  NOTICE: Log File is located: /home/xbmc/.xbmc/temp/xbmc.log\n19:29:11 T:139832183691200  NOTICE: -----------------------------------------------------------------------\n19:29:12 T:139832183691200    INFO: Selected UPower as PowerSyscall\n...and then it hangs there indefinitely.\nIs this commit somehow related to this behaviour?\nApologies in advance if it's totally unrelated.\nCheers, Elisiano\n. Hi, my system uses systemd.\nFollowing the referenced post on Arch Linux forums, enabling the testing repository fixes the problem.\nAt first I just tried to install dbus manually from the testing, but nothing changed. So as an act of desperation I enabled the repo and the following packages were updated:\nTargets (18): device-mapper-2.02.98-3  filesystem-2012.12-1  isl-0.11-1  libpulse-2.99.2-1  libquvi-0.4.1-2  libssh2-1.4.3-1  linux-3.6.9-1\n              linux-headers-3.6.9-1  lua-5.2.1-2  lua51-5.1.5-3  lvm2-2.02.98-3  mkinitcpio-0.12.0-1  nmap-6.25-2  pulseaudio-2.99.2-1  talloc-2.0.8-1\n              vlc-2.0.4-5  xorg-server-1.13.0.901-1  xorg-server-common-1.13.0.901-1\nNo idea which one of those solved the issues but if I had to bet I'd say either the kernel or xorg-server*.\nThanks for your patience and apologies for the noise.\nCheers, Elisiano\n. ",
    "paalsteek": "It's working fine on two ArchLinux systems here. The person at the arch forum seems to have solved the problem by updating the dbus package.\n. ",
    "Topfjoer": "OK. Sorry for that!\nOp 21 nov. 2012, om 22:46 heeft Martijn Kaijser notifications@github.com het volgende geschreven:\n\nNo bug reports on github \nUse the xbmc forum\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "freezy": "\nI would still keep genreid. Yes it's only useful for synchronizing clients, but that's a valid use case. If it's not too much of a hassle, add it to the video lib too, otherwise clients can also match by string.\nIn my opinion, both artistid and artist should be a vector and displayartist for the featuring string sounds fine to me.\n. Sweet! Looking forward to the merge :)\n. Looks good to me!\n. \n",
    "JoeSchmoeMe": "@ronie \nWell, I'm a total git and XBMC newb, but I'm pretty sure this change broke the Raspberry Pi build.  With a fresh clone, and following the build instructions at http://www.raspbmc.com/wiki/technical/building-xbmc/, I get the following build error:\nconfig.status: error: cannot find input file:xbmc/visualizations/iTunes/Makefile.in'\nmake: *** [configure] Error 1\nmake: Leaving directory /home/build/xbmc/tools/rbp/depends/xbmc'\nmake: *** No rule to make targetxbmc/visualizations/iTunes/Makefile.in', needed by Makefile'.  Stop.\nI notice that xbmc/visualizations/iTunes/Makefile is referenced in xbmc/configure.in and removing this line (2379) lets my build proceed.\nIf there is any more information I can provide, please do not hesitate to ask.\n. Confirmed.  Thanks for the quick turnaround!\n. ",
    "warhog": "hm? on rpi the menu rendering resolution is fixed to a maximum of 1280x720 (ignoring higher resolutions\nthe display offers).\nafaik this was done due to performance reasons.\nbut now the pi scales the menu which is rendered in 720p to 1080p(native tv resolutions) which makes it very blurry.\nthe only thing the patch adds is the ability to set the resolution limit through configuration to not\npatch every xbmc release.\n. ",
    "robinsmidsrod": "I don't see a bug report forum on http://forum.xbmc.org/, so where am I supposed to put it?\nThis is not a support issue that I don't know how to solve, but a genuine bug that should be fixed. I have already solved and fixed my problem, now I just want to make sure nobody else is caught by it.\n. For reference, I've posted it as http://trac.xbmc.org/ticket/13616\n. ",
    "tkurbad": "Sorry, @Memphiz, but that just cannot be done on Linux distributions like Gentoo, which have a strict \"no private libs\" philosophy. And where's the harm in including a header that's included anyway, although indirectly?\nAn additional showstopper is that libnfs-1.3.0 supports the configure option --enable-libtirpc, which is used on Gentoo and breaks XBMC.\n. I understand your portability concerns.\nThe problem is: Gentoo provides libnfs-1.3.0 alright, but they unconditionally configure it with --enable-tirpc. The reason for that, according to the Gentoo devs, is that libc will drop rpc support soon, so libtirpc seems the only route.\n--enable-libtirpc, on the other hand, breaks NFS browsing for XBMC, because here, the libc RPC headers are used unconditionally, despite libnfs's pkgconfig stating otherwise.\nWe had a long debugging session in the mentioned libnfs issue to find that. Only to find out that the maintainer is about to drop external RPC support completely.\nThus, there are 3 (4) options:\n- convince the Gentoo devs to drop --enable-tirpc for 1.3.0 -> won't happen, as I see it\n- fix XBMC's configure to use the correct rpc headers and libs (i.e. libtirpc vs. libc)\n- update libnfs to the next release, which comes without external rpc dependencies\n- Leave Gentoo users with a broken NFS implementation\nNow, which option do you want to you choose? ;-)\n. Well, that would be an option, too. :-)\n. Thanks, that helped us a lot!\n. ",
    "nemphys": "Right, must think of a better way.\n. Just took a look at the code; what if we just changed SetChannelIconPath method of CPVRChannelGroup to call channel->SetIconPath(strIconPath, true) (instead of channel->SetIconPath(strIconPath)), so that the m_bIsUserSetIcon bool is set to true?\nThis would cause the if in this case to return false and accomplish the same result.\nAfter all, if the user selects to scan the icons directory for icons, we can safely assume that the channel has a \"user set\" icon, right?\nPlease advise, so that I can update the PR\n. That sounds reasonable and should do the trick properly if we exclude eg.  ICON_SOURCE_USER, ICON_SOURCE_XBMC from the check.\n@opdenkamp please comment so that this is resolved.\n. Actually, now that I inspected deeper, maybe @opdenkamp wanted it like this because he has the icon scanning routine running every time a channel group is loaded (which is quite slow and increases loading time a lot; will make a PR for an advanced setting for that).\nMy opinion is that all this behavior should be changed to work according to @mikrohard 's suggestion.\nPlease comment so that I can start working on it.\n. As I understand it, the current behavior is:\n1) Load all channels (with previously auto-populated icons) from the DB.\n2) Get channels from backend and update the ones loaded from the DB, which considers all channels with icons from the previous step as changed (since backend does not send any icons in my case) and persist them in the DB.\n3) Scan once again for channel icons auto-population and, if found, persist them in the DB.\nAll the above is executed every time we update channels from the backend.\nIn my opinion, this is far from optimal and causes big unneeded delays on every startup.\nWhy not just consider auto-populated icons as user set (since the user chose to give the path to scan) and get over with it? Is there some specific case where this could cause a problem?\nAs you can imagine, I am trying to find ways to speed up the initial loading time (hence PR #1870, too; take a look at it when you can), since it has become really slow lately (used to be much, much faster a few months ago).\nAs for the icon scan time, don't forget that I have around 2000 channels and the path for the icons is an SMB share.\nAlso, I just got myself a Raspberry Pi, which I plan to use for a secondary bedroom XBMC host and it is too damn slow at the moment :-)\n. PS. in my setup, the icons scan is taking a whooping 10 seconds and since it is executed twice (see PR #1870), it delays pvr startup by 20 seconds. Isn't it too much?\nI have temporarily disabled it (after internal group load) when building from source, but I cannot do that in the Pi installation (where it takes much longer than 10x2 seconds).\n. Any further comments on this one?\n. My suggestion is that we set the auto-scanned channel icons to be \"user set\", so that we avoid needless persisting of channels (as I stated above), or at least follow mikrohard's opinion to implement triple icon state to overcome this.\nAs for the actual icon scan on every internal group load, I think we should at least have a setting for this (and maybe not an advanced one), eg. \"Automatically scan for missing channel icons\", so that the functionality can be disabled easily on slow setups.\nPlease advise, I can send PRs for both\n. OK, will send a PR for the auto scan on load later today if I find the time.\nDon't you think we should at least do the same (some advanced setting maybe? eg. usersetautoscanicons) for the channel mark and implement it later as you say? It will be just a few lines of extra code but will do the trick for now.\nIt's a shame, because right now the channels take too much time to load during startup (another thing is that the progress controls for pvr and epg are painted one on top of the other and it looks ugly).\nI will also take a look at why it takes so much time to fetch the channels from tvheadend (LoadFromClients). I am quite certain that it used to be much faster in the past.\nPS. @opdenkamp: how many channels do you have in your setup? It's impossible to see all these delays if you have only eg. 20-50 channels...\n. OK, will send 2 PRs.\nAs for the delay, I am positive it is the fetching of the channels, as I have already merged the 2 changes I will send PRs for in my local branch and I can still see a delay in my main machine (not the Pi), which has everything locally.\nI even put some debug logs for testing and there is a 10 seconds delay just for LoadFromClients.\nWill investigate further and report.\n. First PR 1901 is up, please check.\n. Thanx, will (hopefully) send the 2nd PR tonight, as my internet connection was not working during the past few days\n. PR #1923 is up, please check\n. Fixed cosmetics, please check\n. Just added a second commit to this that also takes advantage of the new property while adding and updating channels to the actual internal group. It makes a huge difference in per startup time in my setup.\n. OK, IsDummy might not be the best option, but as I wrote above, I would prefer something more generic so that we can do more optimizations in the future (maybe \"IsInTransition\" or sthg?). Please advise.\nAs for the sortandrenumber call for the (indeed) dummy group, should I keep it as I did (once, after channel import is finished), or should I ditch it completely?\n. OK, will make a new PR soon.\n. Created new PR #1982, had to rework more stuff than here.\nPlease check if it's ok and close this one.\n. Yes, I know that, but there were is another reason I didn't do it that way, don't ask :-)\n. Also, I think we need to do some work and revisit all calls to sorting/renumbering methods, as I see a lot of calls everywhere (maybe make them more centralized somehow?). For instance, SortAndRenumber does the sorting first and then calls Renumber, which calls SortByChannelNumber again before it finishes. Is there a reason for that or should I just change it to Renumber first and then sort only once?\n. After inspected further, concerning my last comment, I think we should remove the sorting call from the Renumber method (since it didn't even respect the m_bUsingBackendChannelOrder setting), call it first in SortAndRenumber and then do the sorting. This will save us a sorting call (and correct the setting ignoring behavior).\nWhat do you think?\nps. this means SortAndRenumber should be changed to RenumberAndSort, too, but I don't think that's too urgent right now.\n. A little early for me here in Greece, will update the PR and you can take a look at it when you can :-)\nMerry Xmas!\n. PR updated, please check\n. PR updated again, please check\n. Hmm, was hoping that it would make it to Frodo, since the current behavior is slow/ugly.\nHave you tried initializing PVR in an installation with 1700 channels and a slow machine? (eg.Ion, or even worse rpi) :-)\nBtw, when is Frodo coming out?\nPS. At least check PR #1982, it will be a real shame if that one doesn't make it to Frodo, too\n. Just rebased.\nFYI I have been running this for the past 3 months or so without any issues...\n. @opdenkamp: ah, come on, this is not a big change and greatly speeds up channel icon searching (which by default is run on every PVR manager start). Anyway, as you wish...\n. Will check the code again when I can, but, concerning performance, it has a huge difference in both setups I have tried it.\n. The same condition (and log level) appears 3-4 lines of code above this and I thought this was the way to go.\nShouldn't both be changed then?\n. @davilla who exactly did you talk about it with? (I don't get the 'grr' part of your reply)\nI just wanted to help reduce useless logging someone else put in there and thought it was ok to use the same code that was already there.\n. ",
    "zag2me": "Sounds very sensible to me.\n. I don't think my site can handle this to be honest. I'd at the very least need some time to prepare it.\n. Musicvideo scraper is hugely resource intensive I'd imagine? Does it check every track in someone's database?\n. OK lets do this! Feel free to add theaudiodb.com as the default scraper.\nI'll work on beefing up the server\n. ",
    "highlandr": "check the ticket for my reply too.\ncheers.\nwhere's tslayer?:)\n. Did a few progress, check it out on the trac. Thanks.\n. ",
    "LossAngeles": "Thanks for your work on this.\n. ",
    "josebiro": "Just a comment for other noobs: stumbled across this post filing the issue. Sorry for the noise. Check this out before filing github issues.\nhttp://forum.xbmc.org/showthread.php?tid=26707\n. ",
    "JoostK": "I can do a pull request if needed (it seems like that is how you work with GitHub, sorry for not doing it that way) but this is such a small thing that I din't want to go through the hassle of creating one.\n. ",
    "rpatterson": "This still happens on the  http://mirrors.xbmc.org/nightlies/win32/XBMCSetup-20121219-46e045e-master.exe nightly which includes this commit.\n. I confirmed that the last nightly this does not happen with is  http://mirrors.xbmc.org/nightlies/win32/XBMCSetup-20121214-a5f1630-master.exe.\n. ",
    "tashkas": "https://pastee.org/d67nn  logfile\n. ",
    "climbeault": "I started working on a fix within dvdplayer.\n. Is this a duplicate issue? I couldn't find any...\n. Oh, sorry about that.\nWhy there are 125 open issues then?\nI guess you're handling them through trac instead?\n. ",
    "GreenOnyx": "If I understand the problem correctly, users utilizing an external ffmpeg that can't compile to the latest ffmpeg code need a patch to eliminate the xbmc portion of this change so that they can patch and compile the latest xbmc source to work with their system's older pre-compiled ffmpeg?  Basically a patch that removes the one line added to DVDOverlayCodecFFmpeg.cpp which utilizes the latest ffmpeg?\n. I submitted a new pull request to not utilize rect.flags for an external ffmpeg that doesn't support it by checking if USE_EXTERNAL_FFMPEG and LIBAVCODEC_VERSION_INT.  I looked into av_get_opt but it was a bit outside my skill level for me to accomplish quickly. Hopefully this method will at least get us a solution for now until it can be approved.  I could only \"fake\" the testing that I did, so any help on that front if merged would be appreciated.\n. ",
    "jmarcet": "@MartijnKaijser \nRebased :)\n. All right. My master branch only has the first commit and 'next' contains both of them.\n. All right, I removed the action, just left the builtin. It works very well.\nI don't know whether it'd be better I called g_peripherals directly from Builtins.cpp, instead of polluting CApplication.\n. What about now?\nIt is still untested as I'm not in front of a machine with xbmc, but it compiles fine.\n. I can confirm it is working beautifully.\n. All right, I integrated all the changes in one commit, ready to be merged.\nFor reference, the former split commits are kept under https://github.com/jmarcet/xbmc/commits/for-upstream.old\n. So you want to be able to specify whether you are switching it on or off. I had thought about that but adding a parameter, which would force a specific change not just toggle the current state.\nIn case of adding the three methods, should I add them all as builtins?\n. Lars, I have made all the changes you proposed however I still cannot grasp what is the real purpose of IsLibCECActiveSource().\nIn order to replace the boolean I had added to keep track of the state (on or off) of the playing device(s), by a call to IsLibCECActiveSource(), I had to add two calls to SetInactiveView(), otherwise, once active, the only way to deactivate it was by exiting XBMC. Yet using IsLibCecActiveSource() like that would imply the forceType parameter only makes sense on the CECStandby() method. At the moment all the methods have their forceType parameter.\nI would like to be able to query the CEC adapter and get the real current state of the playing device(s), that is, not controlled by a boolean but by the current state of the device.\n. There is another issue with IsLibCECActiveSource(). By calling it I introduce a 2 seconds delay when waking up the playing device.\n. Well, I kept at it and found out how you query the power status. It seemed perfect, you can see it @ https://github.com/jmarcet/xbmc/commit/086a271a4dae92be972df9dd01e5fa914de4dddd\nBUT, the TV, at least the Panasonic Viera I'm testing it on, takes more than 60 seconds to report it is in standby since being switched off.\nSince I really did not like the extra delay incurred by the call to IsLibCecActiveSource(), I added back a boolean to keep track of the state of the playing device; the force parameter short-circuits the call to IsLibCecActiveSource() and with that the delay is gone. This version is @ https://github.com/jmarcet/xbmc/commit/194183f73bf73c078f1baa922350a28fd521b9f1\n. ",
    "stupid-boy": "worth a try. will deal with this a bit later. biggest trouble i see for now will be the translation, at least for me.\n. sorry, last commits was not for here. can you help in removing them, as i don't know how to remove them and risk to made more mess.\nthese 2 commits are NOT for merge! they do not work!\n. git reset (last good SHA)\ngit push --force\nwill this help? is it safe?\n. sorry for disturb, but can someone made a decision to apply this or to reject it?\ni need to drop my fork and recreate it from scratch.\nthanks.\nbtw, currently RPI says 464.48 BogoMIPS, so they are nothing meaningful for mass public and only causes a lot of new topics around forums.\n. deprecated by new pull request\n. no one interested by this?\n. no. i can play anything i throw on it without any problem. also this feature is tested by xbianonpi team with no issues.\n. no. entire system must follow less capable component, analog in this case. otherwise it will be impossible to keep things in sink. also one of used components are not powerful enough to support this scenario. that is why these options are disabled for 'All'.\nstill you can use more that 2 channels over HDMI (i hope) , but all will be decoded inside RPI.\n. by seeing your comment on other pr for GUI frame rate, and especially following currently missed one:\n\nI apply this patch and add to advencedsettings this line:\n20\nand dont work. Still is 9fps in gui.\n\ni thing you have other problems and may be you don't know how to deal with fixes. \nremember, github repository is not correct place for any support questions. because of this, don't expect any reasonable responses here.\n. ok, i will check if it is related to #2368. if not, i will try to figure out the reason.\n. Seek fixed\n. @popcornmix, this adds hundred of new lines, my intend was to made them as clear as possible.\nthere are all the time army of people that ask for such thing. on normal linux they can do this with alsa, but on rpi it is not possible for now. \nyou know, every one give feedback only when something do not work as ( he ) expect. usually no one gives unasked feedback if all is ok.\nas i know, currently this feature is implemented only by 'xbian on rpi' ( i am not related with them in any way ) and in few private builds. only things i hear from them is 'where to find it', followed by explanation how final client to upgrade his system with build, that contain it.\nas this is request for communication, i expect following things to be discussed:\n1. COMXAudio::Initialize() signature was changed. this way we/i can add more endpoints, and this way seem ideologically more correct for me.\n2. COMXAudio::m_omx_render was changed from pointer to instance. i don't thing explanation is needed here.\n@huceke, what troubles and confusion you meant? omx code is difficult to read and maintain by default. this addition doesn't made it more not readable or more readable. it may contain some bugs, but who is sinless? definitely i am not.\n. May be any use case to illustrate initial problem will help in understanding.\nLooking only at diff, in initial version we simply do not hit AUDIO_IEC958 case, and this is not a problem.\nAdding missed default: assert(), it is ...\n. Now I see the idea and actual problem. It is related to key mappings. If someone add 'audiotoggledigital' action mapping in system/keymaps, old code will stuck. Currently this mapping is not present and actual code is dead one, until someone did a research ( and guess ) for this action mapping in xbmc/input/ButtonTranslator.cpp.\nBy seeing this, i am ok with this change. It keep eventual action addition working. Good catch.\nBut, currently if i change audio output via settings window, i thing setting is not applied to current player and it continues with old audio output. May be this is another bug, not related to this PR.\nThis mean that if #2232 is accepted, this must be changed too.\n@theuni, currently it can't be probed. Only ifdef-ed. \n. to popcornmix i can add:\n... and if some day ( god, hear my plea please ) ALSA sink becomes reality for RPI, how one will probe for 3,4 or even more options? they are completely different from other platforms.\nsolution can be some factory, that can return all possible combinations for every platform, and may be ways to probe each of them. it can define their order too. however these factories need to be hardcoded, and again, ifdefed.\nfor today i thing popcornmix way is better and enough one. for tomorrow, who know. this fix doesn't close the doors for future rework, it only support current state of code.\n. actually lock elupus ask for is here, at line 793 of new code.\nwhy for() is used? in regards of emergency exit at line 794, isn't it while(true)? this for() can lead to orphaned messages in different situation, not when preempted by other window but added message during SendMessage() call for example. no need of GetThreadMessageQueueSize() and first lock, and code will be more clear.\n. Endless loop from same thread most likely is bug. No such endless recursion. This way you will hide it.\nIf other thread push messages, what is the problem? We need to process them any way. Usually, as soon as possible, not after years.\nBut this become more rhetorical question, as multiple exit paths for example. I have acceptable answer to my question.\n. @Memphiz, i don't mean 'out of order'. i mean 'all, until queue is empty'.\n@ulion, as i already say, i have acceptable answer. last time i actually do not disagree with you, just point some interesting aspects.\n. Your point is interesting and contain a reason. i agree. \nJust because this way code looks, let say, unusual, it will be better to document your point with explicit comment. Next time i will end up looking at it, and without this thread as reference, definitely i will change it. Who knows who will look at it next time and when.\n. Still not happy here, sorry.\nOnly stack trace i can find at first look is:\nBreakpoint 1, 0x00a26adc in CGUIWindowManager::DispatchThreadMessages() ()\n(gdb) bt\n0  0x00a26adc in CGUIWindowManager::DispatchThreadMessages() ()\n1  0x010036c8 in CApplication::Process() ()\n2  0x01099f40 in CXBApplicationEx::Run() ()\n3  0x0109fa00 in XBMC_Run ()\n4  0x0128329c in main ()\nIn CApplication::Process() comment above this call is ( and usually i trust on comments ):\n// dispatch the messages generated by python or other threads to the current window\nFew lines after that we process any python scripts, so first case when some script will generate huge amount of messages definitely will kill next frame. Then only remaining source is another thread. Even then, it will kill next frame too. Whatever the source is, new code doesn't add any protection against such flood.\nAND, there is no clear preemption here. Depending on comment, this is not a GUI events handler, DispatchThreadMessages is called only by CApplication::Process, and ProcessWindowMessages call is on next row.\nWhy we need to add such complicated and unusual logic here? I agree, any message dispatchers must be solid, but this change do not add anything in this direction. Ok, let we remove copy to temp variable ( as kind a complicated code too ), but why we need to add another more complicated pieces on its place?\nSorry, i thing i miss something really important here.\n. even your example clearly shows there is no benefit of message count. if we kill this frame or next, where is the difference? we should avoid such message floods, not to seek in advance how to deal with them. repeat, IN ADVANCE. again, you do not provide protection about them. if you process only first 5, or 50, or 500, but fixed number, then this is different story, not so good too. code must manifest clearly such floods as soon as possible, and they must be reworked, but not try to deal with them in advance by trying to guess how.\nthis is only one problem. main problem is that i do not see any possibility loop preemption to happen. this function process thread messages, not gui, so it must not be preempted in similar way. this is thread function, not window one. \nonly protection BOTH versions contain is for when THIS thread generates messages for ITSELF. both versions do that. may be such situation can be clarified as 'bad design', instead of something normal? or can be a normal situation? i do not know. i do not talk about this protection, as it is already present. with while(true) we will lose it.\ni like your idea ( for memory optimization only ) to change vector with list, and to eliminate vector copy at begin, but remaining part is not clear. for example, double check pattern is something, that will keep everyone away from trying to understand and fix this function in future, and seems to be unwanted here. \nweb links in code comments is bad habit. usually no one follow them. web links tend to change location/disappear completely.\n. message order is important. no one is talking about this. i thing message order is kept even with older version, as i do not see who and how will preempt loop in it. of course, everyone is free to try to do such preemption, does this mean we must explicitly and in advance allow it?\ni suspect that in terms of functionality, both versions are equal. new version only adds unwanted level of code complexity and open doors for unwanted things. that is what i want to understand clearly.\n. i am afraid that it does not fix it, as we do not have this problem here. message order seems to be ok with old version. i do not see any proof for potential problem.\n. please read careful.\nthis function seems not having problems with dialogs. it is not a window loop, it is thread loop. at least, it seems to be thread loop, not window one.\nany way. merge it if you are comfortable. \n. in your pastebin there is no preemption, at least for now. ok, it gives some side signs that it is possible to happen.\nif there are really such deep call stack to some potential preemption, most likely you lost protection for self triggering actions. to get it back, you need to copy ( or mark some how ) messages at beginning of current frame and do not process remaining messages in queue until next frame.\n. so, this is not complete pull request? other one, for message pump, in #2167, may be have to deal with the same complexity and is not complete too?\ni was ready to stay blind for this complexity, you get this road.\nas you already say, message loops are difficult and critical things and must be fine tuned.\n. now i am happy. now not only i see functional changes in behavior of loop.\nas currently preeption is not pure proofed, only side signs for such possibilities are shown, as well as no proof for presence of self triggered events, it must be carefully decided.\nactually  jmarshallnz is not completely true. current version ensures 2 only if new messages enter queue after potential recursion. he show this clearly, but not state it clearly. difference is that new version have more changes to pick new message, making behavior less predictive.\nwith added complexity ( double check for example ) and nonmeaningful and painful comment, chances that someone else will try to fix this loop later are minimal.\n. i will not hurry with this.\nwhile(true) in not a good candidate, as in its pure implementation it does not have protection for self triggering events.\nfirst decision must be made what we actually need. based on it, this pr can be used for some discussions and implementation reviews, or just as place where we will agree other place for such discussions.\ntill then, i prefer to keep old implementation, whatever problems it have. at least they are already known.\n. at first look last version seems to be non working. \ni need to clear and add one really important requirement in list:\ncan dispatch function be called in multiple threads or only main thread have such queue?\nthis is important requirement and it will dictate any concrete implementation!\nif it can be called only from main thread, previous version is ready to be completed. in it you can add static counter ( not boolean flag ) for function entrance. you must get messages count ( again in static variable ) only on begin of first entry and process that count of messages at all preemption levels. 2 static members, most likely no need for double check, more clear code. but this is true only if no more threads will use this function. i mean really only this function, not methods for queuing messages and remaining methods.\nif more threads need this functionality, things becomes really complicated.\ni thing we don't need this:\n\nIf possible: Queued messages can be removed by certain filter condition.\nas well as priorities of messages and all similar junks\n. you can't get without entry count. without it you can't distinguish first and consecutive entries, but this is really important. actually it is used as boolean, but can't be implemented using boolean.\n\nrule for removal is complicated, error prone and may be not needed. thing if/how you can postpone post message, or how you can dummy process them later. do not mess with already queued ones. once in, it must be processed somehow. this will keep things correct.\n. as i already say, try without remove at all.\nof course, you can do remove with static class members. when you remove some message, you have to decrement message count as if it was processed. this can be dangerous!\nfor now, let concentrate on message dispatch, and look for remove only when dispatch is fully done, accepted, merged, and remove is really only way to go.\nkeep things simple.\n\njust see last commit. local firstTime var is true for every function entry! do it static ( or class member ) and counter, not bool. with bool you can't reset it correctly! also, try to reorg code. currently it is not clear. something like following pseudo code ( will type directly here, expect problems ):\nstatic int nEntry = 0;\nstatic int nCount = 0;\nif ( 1 == ++nEntry )\n{\n    nCount = queue. size();\n}\nwhile ( 0 < nCount )\n{ \n  Process...\n  --nCount;\n}\n--nEntry ;\nsimply enough?\n. wrong interpretation!\nmessage, pushed during this frame, must be processed during next frame. this mean no infinite loop ( deadlock ). breaking this rule you definitely enter endless loop. that is major problem of your initial implementations! \nas i already say, i do not know if currently we have such self triggering messages.we must be prepared for them.\npreviously i was seeing actual need of such pattern for some programs in macromedia action script. they are loop based, not event based, exactly as XBMC is. with addition macromedia can stop current script when it decide, you don't have any control or notification in such case. just unexpected death in middle of your work. only workaround was to use self triggering.\n. stop thinking for nesting levels. at all levels you must process only messages ready at first entry, ie, first level per frame.thing for work per frame as whole work.\nself triggering messages are useful exactly for long processing things. instead of killing next frame, you can do part of work now, queue some message, continue during next frame and possibly trigger another message to finish actual work during third frame. without splitting long work this way UI ( and not only ) have to wait you. this is just one simple scenario for such self triggering messages and why you must process all of them by frames. no need to mean some erroneous scenarios, which will trigger infinite loop otherwise.\n. i feel we are in circular loop here. can some one help me explaining things with different words? otherwise i have no other way, but to surrender.\nfirst, this is NOT a gui message loop, so modal dialogs have nothing here.\nif you never end this loop by returning from top level entry, render() will newer get called, so no modal dialog again. eventually you can run another loop ( not in this function, at upper level ), which may require another instance of CApplication or another indirection???? if you need such non usual logic, you can/must provide correct handling without breaking any of these rules. in any way, in this function you must process in order AND keep messages processed at correct timing. \n. sorry for second consecutive comment here.\nif you enter somehow in CApplication::Process(), which is main application loop, from nested level, in CGUIWindowManager::DispatchThreadMessages() you still have to process exact number of queued messages during this frame. all of them and nothing more, in correct order. in next loop you will process next ones. as i provided only idea by showing some pseudo code, if such condition is mandatory, you can proceed with this pseudo code and implement it in correct for such conditions way. right now i can't suggest correct way for doing this, as it is concrete implementation related detail. \nof course, you can do this in other way, not as in pseudo code above. if you keep all rules, any way is possible, with preferences for simpler and easy readable one. \n. so this is your previous pastebin ( which is not available now )?\nin it you do not have DispatchThreadMessages recursion! old code works with it!\nyour scenario shows more important bug, recursive start of main loop! instead of it you concentrate on one function, and even worse, which is not directly affected by this.\nif you need to support such recursion and need DispatchThreadMessages to work correctly, put so called static counters at upper level, directly in loop itself, and initialize them at every frame. by doing this you will identify other similar problems.\nother way you can get, and may be correct one but with more refactoring, is to prevent second loop invocation. following the rule and being procesiing messages of any kind, addressed only for current frame, you can post message CHECK_READY_FLAG with receiver CDVDPlayer, in which you will continue your actual work, and may be resend the same message if ready still is false. main logic will continue to work correctly. that is self triggered message and its correct usage. BUT, you will keep only one main loop running! \nthis is MAIN LOOP, not just 'something'. this is the backbone of entire application! do not play with it just because it seem little easy for now.\nif some function in stack with main loop recursion hold some resource, no mather what, and free it at its end, you are dead allowing such recursion. can you bet there is no such functions? i can't! auto guard pattern can be used somewhere, and it is advisable to be widely used. let say auto guard lock some file, or some hardware....\n. ok, so you can't remove recursion.\nthen entire main loop must be prepared for it. not only DispatchThreadMessage is problematic. there are another dispatch functions too. also FillFrame ( sorry, i don't have code in front of me right now, so name can be different ), by which you effectively produce this recursion in currently missed pastebin, must be prepared. in short, entire loop. then DispatchThreadMessage is less problematic one. \nrefactoring main loop you must keep all rules true.\n. that seem ok, except missed protection against integer overflow.\nyet another idea: can you try to make message loop state automata? in its first step get a snapshot of all such counters.this way at any level of reentrancy you will continue from exactly the same point where you stop at previous level, and will not call functions twice. also at any level you will have the same markers what must be processed during this frame and what during last.\n. again restart here.\n1. DispatchThreadMessage  is not recursive. ok, it isn't for now. until we see call stack, which contain it twice, it isn't.\n2. main loop is reentrant one.\nbecause of 1 & 2, by 'fixing' DispatchThreadMessage you didn't fix anything, as there is not a problem at all. to fix actual problem, you need to fix main loop.\n. with this call stack now i am finally convinced for recursion. previous time you show different path.\nstill lastMsgSeq at new line 803 in CGUIWindowManager::DispatchThreadMessages is not ok. it will get new value at any recursive reentrace, including any queued messages during current frame. this opens the doors for infinite loop. if we agree main loop will not support such self triggering event, i hang up for them. if we do this, i thing while(true) is clearest solution. ( again in our endless loop here ). i don't insist on while(true), if others are ok with your way, i am ok too. with while(true) it is clear that all messages will be processed now and self triggering are not supported, while in your way there is no guarantee for any of these assertions. while(true) can last longer ( forever ) and in case of some bug will for sure, your version doesn't provide any guarantee for this too.\nif we need to support such events, then you must init lastMsgSeq  per frame, not per entrance. then while(true) in clear form is not applicable.\nsome consensus from others? now we clearly have some problem here, let finalize last remaining requirement. yes or no self triggering support? in my vision 'yes' will add more complexity and is not proven to be needed, 'no' can lead to some simplification of current pr.\n. i don't mention sequence at top or other level. i mean sequence per frame. i know 'deeper loop' can take more than one frame. loop, no matter at which levels it is splited, have to behave in the same way as if it is never splited.\nin all your attempts till now:\n1. if initially we have to process messages A, B and C at frame start \n2. we process A and it queue message D\n3. we process B, which cause recursion\n4. in recursion you are getting new message count, so you process both C and D.\n(5. if C queue another message E and D enter in recursion again, you will process E in current frame too, and so on )\n6. if no recursion occur, newly added messages will be processed during next frame.\non other hand, if no recursion occurs, you always will process A, B and C. D (E, ... ) will be processed during next frame.\nthat is inconsistent behavior i am talking about.\n. happy that finally we talk in same language.\nyes, it will be difficult to get correct dispatch here. that is why i again mention while(true). it will always process all available messages during current frame. this keep dispatch behavior the same, no matter at which entrancy level we are. this approach clearly don't support (infinite) self triggering messages at all levels and in any condition. i thing it is more predictive, as it always will dispatch until we have something in queue, without any other 'if's.\n. yes, it will keep existing bug.\nare you comfortable fixing some bug and at the same time keeping another, clearly visible one? are you comfortable to add additional level of complexity, which will prevent future attempts to fix intentionally leaved bug now?\ni am not, that is why i continue to write here. if you and every one else feels comfortable, i agree with your decision. i plan to stop at this point, as now i believe situation is clear. rights for decision are yours.\n. while i am not sure if you want to fix or keep this bug, i will give last simple idea how to fix it.\nadd new property to CApplication, say CurrentFrameID. change your current message seq number to say DestinationFrameID. increment currentFrame around or in Render(). when you queue new message, assign destinationFrame to currentFrame + 1. process only messages with destination == current. this way code will become more clear, simpler, still will process messages in order, and will guarantee determinism when message will be processed. i don't believe currently there are some message, that must be processed during current frame and can't be during next one. as ID you can use whatever you want, from simple bool to long long, no problem with overflows. just a little care for multithreading may be. same strategy can be used for remaining dispatch functions too.\nyou decide.\nEDIT: actually not completely correct. you have to process only with destination <= current. then overflow must be taken into consideration. there is some time between dispatch function and ID increment.\n. you incorrectly mix recursion level with frame.\nlet play with my last idea, only with == as currently it seems to be enough:\n1. if initially we have to process messages A, B and C at frame 1 start. all time before frame move bellow we are in frame 1.\n2. we process A and it queue message D with destination frame = 2\n3. we process B, which cause recursion in frame 1\n4. in recursion you continue with processing messages with destination 1, so you process C and leave D in queue.\n5. exit dispatch function, do other work, Render(), ... at this time some can add message E, which will have destination 2.\n6. move current frame to frame 2.\n7. enter in dispatch ( no matter at which recursion level !!!!! )\n8. process D. if it add new message, F, it will get destination 3. process E.\n9. exit dispatch function as there is no more messages with destination 2, do other work, Render(), ... at this time some can add message J, which will have destination 3.\n10. move current frame to frame 3.\n...\nat recursion exit:\n1. we have messages A, B and C in queue with destination current+1. you exit dispatch, do Render(), increment current frame and exit recursion.\n2. you are one level less in recursion, back in dispatch function. as frame was reflectively moved ( fully processed ), you continue with next messages in queue with correct destination.\nthis way recursion enter and exit looks like one liner function all ways.\n. yes, but as CApplication::Process() can be called more than once per frame, it is not correct marker. that is why i need frame itself. if CApplication::Process() call is used, it is almost the same as your current implementation.\nbe prepared, i thing in CXBApplicationEx::Run() or in CApplication::Process(), i am not quite sure, we have some hack, renderGUI or similar, thanks to which Render() will not be called at some situations. you have to find correct place for frameID increment.\n. i never mean counter at DispatchThreadMessage() call. it is useless!\nif you don't see difference in predictability,  i have to stop here.\nif you are afraid from dependence from one global instance, from which you depend in some other way, i have to wake up too.\n. till now we didn't see such simple proposal for this pr. all previous was with added unusual and unneeded complexity. i asked few times 'why we need this complexity'.\ni agree with this proposal, even that it does not solve problem with foresight too. as it keeps things as simple as possible, and is an almost self documented ( well, simple few words in one line comment above process(), explicitly stating it can cause recursion, will be welcome ), it keeps doors for future work on foresight behavior open.\n. not a factor, but this time i agree to.\nnow remaining problem can be fixed when some one face it in reality.\n. i understand you. they are a lot, agree.\ni can ifdef this one? i thing advanced settings is better place.\n. ... INFO: GLES: Enabling VSYNC\n... ERROR: GLES: Vertical Blank Syncing unsupported\nmanually selecting 1080p@24 produces ugly look because actual resolution selected is 1280x720@24.\nwith forcedswaptime hack and 1080p@24 i get 1280x720@24 under actual 1920x1080@60, so again ugly, but with 100% cpu\nthis patch limits frame rate for menus only. playback still uses media frame rate and tv switches to frequency as popcornmix described.\n. GLES error was taken from my xbmc.log with XBMC up to date as per previous comment. may be i didn't used correct option to enable it, i do not know. fact is that i get this error if i enable Vertical syncronisation by GUI.\ntill now this is only working way to lower GUI frame rate so CPU is not at 100%. all around the world ask for such way. if there is another, their problems will be already solved in this other way, but they aren't.\neven if VSync work, as it is intended to match monitor refresh rate with rendering one, and because TV support 60Hz, it is impossible for RPI to produce such rate and it uses 100%. this 'hack' limits XBMC attempts to follow VSync refresh.\nthis work only for GUI rendering and leave media render as before. i prefer not to touch algorithm described by  popcornmix too, as it have effect on media rendering too and will have negative effect at all.\nmay be you are right and this solves, or even worse, hides, other problem. then this can be used as starting point for investigation.\n. i thing we miss the point here and i am partially guilty for this. my reaction when VSYNC was mentioned here was not adequate. also right now i tested 8d2e0fe and it does not deal with problem here.\nthis hack is similar to d72df194ff. hack i use here was present in system from a long time, i just add a way to manipulate it without recompile. \nit doesn't deal with GLES or others, so it is not related to VSYNC. i thing VSYNC work is not affected by this, and is not related to this. at least this work in this way on RPI, as it have custom algorithm for media rendering. on other systems this can lead to other limitations, that is why i made it a setting.\nthis hack actually limit main loop cycles per second, not only GUI frame rate. because dirty regions aren't supported worldwide, on some systems GUI rendering is usual main load of each cycle,  that is why by lowering them i lower actual CPU usage. we don't need to render each GUI frame at such high speed. by doing that and allowing CPU to sleep longer, i cheat governor and it keeps CPU at lower speed. i didn't mess with underlying systems, i just limit memory buffer rendering. under this GLES work on its full power. also TV link is at correct 1080p@60, i throw new memory buffer to it at only 20 fps.\nthat is what i have in mind when i do that. after all, may be i miss relation to VSYNC, it is not intentional. \nhere i didn't tested music visualization with lowered frame rate. they are pretty aggressive, so may be they will cause high CPU usage even at lowered frame rate. i never seen some music visualization working flawlessly on my RPI and they are disabled by default here.\n. ok, i managed to achieve even 29% CPU time only with VSYNC. that was on only one place. system info dialog still consume 98+% and governor is at high speed. RSS feeds also causes 98+%. weather window also. need to continue? don't thing.\nno one interested by this 'hack'? no one interested by limiting entire system at idle when it actually is idle, without additional reservations what to stop and what to not open/use?\n. it depends. regarding your previous post here, you are getting 9fps for some reason. this limiter doesn't allow more frames than you can now, it limit upper side, ie, it will limit to 20 only if you get 35, or 50, or 100 frames per second.\nthere are another dependency too: it work only for VSYNC_DISABLED or VSYNC_VIDEO due to existing logic in CApplication::Render().\n. for me this work on my old low powered laptop too ( windows based ).\n. alternatively to specific implementation may be you can use /sys/power/state file.\nsee \"The PM sysfs Interface\" in http://landley.net/kdocs/ols/2003/ols2003-pages-325-339.pdf\non my RPI this file is empty, indicating no standby/suspend/hibernate are available. exactly as  \"pm-is-supported --XXX ; echo $?\" indicates too.\nthis should be kind a universal and portable method. let others with more linux knowledge help here.\n. don't get me wrong, i prefer current approach with hardcoded \"return false;\" instead of \"/sys/power/state\" variant.\nas @theuni mention init script, in terms of completeness/correctness, /sys/power/state is better exactly because init ( or as in my case, bash script ) knows how to deal with these options. only it can correctly \"echo disk | sudo tee /sys/power/state\" and can add resume hook to restart XBMC. also only it can prefer \"pm-suspend-hybrid\" over other methods. this way concrete support depend on distribution maintainers choice and this method gives them ability to decide.\ni do not like these options in XBMC because it is multimedia center, but not system utility. that is why i prefer current  hardcoded version with disabled options. skilled user knows how to proceed with them, for others they will add only troubles. that is why i will be happy if they disappear in windows build too, but this is personal preference.  \njust some regular user point of view on that.\n. for 8508364? i agree. mine is only compilation fix, nothing more.\nthen only includes for 7ab3860. i do not see them in #2372.\n. can't test it, but by reading #2372 now it contain this, so this can be closed.\nif no complaints from others, i will close this after few hours.\n. Is there any real reason to poll for new CEC device? If it is not presented at startup, who expect it to be plugged later? Usually CEC devices are: a) default monitor ( TV ); and b) USB CEC adapter. In first case device is already present. For second case, is simple restart so expensive? For maximum of 1% of users, who will try to add USB CEC adapter at runtime, and maximum 1% of them to be lazy enough to restart, all others must scan and rescan forever?\n. If it is event based, no one will complain, including me. Heavy rescan is something that must be avoided, and from you i understand it is current approach.\nMay be with events xbmc will not lost CEC device if tv is turned off and back on. Currently it loses my LG tv in such combination, nevermind any expensive scans.\n. ",
    "graysky2": "OK.  After the forum post, it dawned on me that github was probably the more appropriate venue to get to the devs.  I'll wait to see if there is some action in the forum, thanks.\n. ",
    "rezso": "Problem solved...\n. ",
    "Falcon-1": "http://trac.xbmc.org/ticket/13966\n. Right. Sorry about that. \nPerhaps pointing the ill informed to the right place would be nice. It would have prevented me to post this one.\nhttp://wiki.xbmc.org/?title=HOW-TO_Submit_a_Proper_Bug_Report\n. http://trac.xbmc.org/ticket/13966\n. ",
    "eirc": "+1\n. ",
    "romanvm": "Works perfectly with dsplayer which is an internal player.\n. ",
    "DoraXBMC": "That is why I suggest being able to switch profiles directly by using a JSON-RPC command without the need to go to the Login screen, like many other actions that you can do directly.\nPS: Thanks for notifying me about my email (or should I say, lack of email). This is my first time to use Github :)\n. You're right about this feature currently does not support password protected profiles.\nI also agree with you about that the profiles support in XBMC is very basic.\nAnd I think it is about time to give it more attention.\nBeing able to control the login screen using the remote control is one thing (and this change does not meant to solve it), and controlling profiles using JSON-RPC is another thing.\nI think it will be easier to change profiles directly from the remote control than by navigating theXBMC menus, and this is what I'm suggesting here.\nI'm personally not using password protected profiles and that is why I implemented it this way.\nHowever, is can be expanded to support password protected profiles later on.\n. More discussion here:\nhttp://forum.xbmc.org/showthread.php?tid=151456\n. @leechguy Now password protected profiles are supported :)\nOne may provide a password while requesting to change a profile or he may choose to be asked to enter a password.\n. Any chance that this feature will get into XBMC next version?\n. ",
    "war59312": "Please use the forums for feature requests (http://forum.xbmc.org/forumdisplay.php?fid=9)  and issues (http://forum.xbmc.org/forumdisplay.php?fid=111).\nUnless you got some code to provide? ;)\n. For discussions like this please use the forums.\ngithub is only for code.\n. ",
    "SebastianThorn": "Forums, that means i have to make an account?\nGuess i have to find my old programming-books then..\n. ",
    "skyblaster": "Bump for a very simple push.\n. ",
    "alexdaums": "Hello, and sorry for my english, I am a French user of xbmc for Rpi! (openelec)\nI will try to describe my problem:\nFor some of my avi file on nfs network folder, audio is still out of sync. \nPatch improves the problem but did not fix for me.\nSo I have to use the version baaa51c who has not this problem.\nThank you!\n. ",
    "norbini": "I've compiled this on Windows Vista (32-bit) and Linux. I've updated the original comment to reflect this.\n. Hopefully that's done the trick. I'm afraid this is my first serious outing with git, so this is a bit of a trial-by-fire! :-)\nPlease let me know if there's anything else I should do with it.\nMany thanks,\n  -Norbini\n. ",
    "thoj": "Would it be possible to check if VDPAU and VAAPI is disabled and then allow for framed based decoding? Wouldn't that be pretty safe?\n. Yeah i agree.. It's only hi10p that needs more power! :) so this would be fine for me.\n. ",
    "sandsmark": "This is the patch from http://trac.xbmc.org/ticket/12490\n. yes?\n. I'm fairly certain that _LINUX is only defined on linux (tested on OS X), and AFAIK all Linux-based platforms (including Android and r\u03c0) have it.\n. gah, overriding gcc defines, I'll update tonight...\n. what if some external includes defines TARGET_POSIX on a non-posix platform? :p\nand adding new defines is not the same as breaking existing ones.\n. As I said, I'm going to fix it tonight, I'm at work at the moment and thought the reasoning was stupid (why not plummet them with trout if _LINUX is wrongly defined?).\n. sorry, completely forgot about this.\ndoes it look okay now?\n. ",
    "tru": "Updated PR after discussion with @davilla and @Memphiz \n. Thanks for spotting that free() there, haha so used to shared_ptrs these days :)\nI have not tested on iOS, I am not setup to do it, so if you can try it, it would be great :)\n. Updated to add the comment.\n. Ah, that's what you get for copy and pasting stuff into a clean tree. Will update it.\n. Fixed.\n. Pretty sure that the default allocator retains all objects. Its was a very obvious leak running it under instruments.\n. System strings can be MacRoman or whatever the arcane format is. That was the problem with some of the code in CoreAudio, it failed to convert to UTF8 because it wasn't really UTF8.\n. This was the original fix: https://github.com/xbmc/xbmc/pull/2078 that fixed the problem that we got MacRoman whatever crap from coreaudio instead of UTF8. It made it match the wrong output device.\n. That makes sense, yeah that was the original discussion on that pull req as well, which lead to the refactoring..\nI am ok with this pull req then! :thumbsup: \n. ",
    "ampedandwired": "Brilliant, thanks so much for investigating and fixing this!\n. ",
    "oliv3r": "Will this be pulled anytime?\n. Ah, it hasn't been committed yet. I was going to say, I just did a fresh pull. I'll wait for that commit to be merged to push my other changes.\nAny ETA when it will be merged? Been open for 18 days and counting...\n. ",
    "jcable": "This is really important to me. Happy to help test, review, etc.\n. I've read that other platforms also have the issue, so a platform check is not ideal. As a user, I would prefer that the system detect frame rates below 1 frame per second (or maybe a bit faster) and ask the user if the effects should be turned off permanently.\nThe libass folks are also saying that XBMC creates more tiles to blend than necessary, this sounds like a longer term fix to me, and disabling effects feels like a quick win.\n.  checking if the time passed in libass is too great then applying these settings (without any user interaction) would be fine for me.\n. ",
    "jmrd98": "Confirm that this patch works as intended to resolve the performance degradation seen with some subtitles on this platform.\nIf not through an (optional) advanced setting, what would be a better way forward? \n. Agree that adding hidden options is not ideal. Only other thing I can think of is to do a platform check, as it can be assumed that all RPI will have roughly the same performance, and disable/override via that mechanism.\nupstream discussion seems to be also taking place here: http://code.google.com/p/libass/issues/detail?id=66 \n. ",
    "stelford": "speaking as one of the affected rasp-pi users, it does seem to fix performance for me. I would prefer not to see a philosophical reason hold up a solution real world problem. +1\n. well, what's the problem with overriding solutions ? obviously the creator of this fix doesn't either (I assume anyway), so it's not immediately obvious - this is my last comment on thread btw, not the place to talk about this I assume. honestly not seeing a problem with the solution.\n. ",
    "white-tentacle": "\nI'd recommend keeping things simple: If there's a set of overrides \nthat will do the trick, then construct that set and simply have a toggle\n\"Apply subtitle effects\" or similar in the UI (defaulting to true).\n\nI suppose this would take place besides the \u00ab force font \u00bb option.\nAs a side note, i\u2019m also working on improving libass rendering performance, since i still experience some slowdowns when there are lots of subtitles (mostly during intro, with karaoke effects). I hope to get results there.\n\nAs a user, I would prefer that the system detect frame rates below\n1 frame per second (or maybe a bit faster) and ask the user if the\neffects should be turned off permanently.\n\nWould something like checking if the time passed in libass is too great then applying these settings (without any user interaction) be something acceptable ? I\u2019m not found of the idea to ask something during video playing, but disabling effects without user consent can be pretty disturbing.\n. ",
    "biocoder-frodo": "I was contemplating on writing some code (c# probably) to find calls to from xbmc.core and other source to get an idea how much is used and what isn't. That would make removing safer since we could document the APIs and then search calls to the localization code. Spoiler: I found a .Format(\"$LOCALIZE(#contextid)\" call in C++ source where you'd expect  a direct function call to g_LocalizedStrings.Get() :)\n. Some time ago alanwww1 posted on the forum that there 4-5 ways to get to localized text (C/C++, Python, addon api, etc) I looked in the Wiki for documentation on that and there isn't much....With tooling we could say how much percent is unaccounted for. We could even let 3rd party scan their codebase with those tools(if it were that complicated to tell what is used ;) )  Forum is unavailable so I can't quote alanwww1 atm. \n. ",
    "ralob": "This breaks Linux compile: http://xbmclogs.com/show.php?id=34202\nShould I do a Trac ticket?\n. That PR fixed it right up; sorry about the noise.\n. ",
    "jeroenst": "Okay, but then also accepting HEX in keyboard.xml, I had to dive into the\nsource code to see that the file keyboard.xml needs decimal values and the\nlogging outputs hexadecimal values...\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\n2013/1/30 John Rennie notifications@github.com\n\nI can see the problem, but i went to considerable effort to standardise on\nusing hex everywhere in the key handling code and I do not want any of this\nreverted. A compromise would be to prefix the key id with 0x to indicate\nthat it is hex.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12879889.\n. Hi John,\n\n16:22:03 T:3038416896   DEBUG: Keyboard: scancode: 04, sym: 0033, unicode:\n0033, modifier: 40\n16:22:03 T:3038416896   DEBUG: OnKey: ctrl-three (1f033) pressed, action is\nFullScreen\nBut in keyboard.xml I had to use keycode 127027 because 1f033 or 0x1f033\ndidn't work...\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\n2013/1/30 John Rennie notifications@github.com\n\n@jeroensteenhuis https://github.com/jeroensteenhuis: logs? I ask\nbecause if there's an unknown key I want to see what key it is.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12892157.\n. But why not just accept keycode, it's much easier, and why is the config of\nthe keycode different than the keycode in the logfile? That's not logic and\nnot user friendly because config errors are made (not only by me)...\n\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\n2013/1/30 John Rennie notifications@github.com\n\nThe correct syntax for keyboard.xml is:\nfullscreen\nYou do not need to use the key=\"...\" form. In fact there should be no\nreason to use the key=\"...\" form because I can't think of a key where there\nisn't a key name available.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12894969.\n. Maybe it will, I can try, but I prefer codes in logging to be the same as\nin configuration if they can be configured.\n\nMuch people walk into this problem because they are using keycodes... There\nwas even a note somewhere on a form that ring a bell but it states that the\ncode in the config has to be in hex instead of in decimal, but that's also\nnot correct because the code in the config has to be the decimal value of\nthe hex value in the logging, causing me to make this mistake twice...\nIf you want, I can change the code so hex is also accepted in config, and\nsend you a pull request if you like...\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\n2013/1/30 da-anda notifications@github.com\n\nwhy not using ? Shouldn't that work? (not tested)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12895221.\n. I think this is a wrong decision if xbmc has to be user friendly product,\nwrong information is even worse (like in this case) than no information.\n\nBut I will put it on a forum otherwise to inform people to calculate the\ndecimal value with a calculator out of the hex value and it's not gonna be\nchanged in xbmc so people don't burn hours (like I did on this by inserting\nan hex value instead of decimal value in the keymap files and had to dig\ninto code) so I did my best in this case to improve usability.\nEither way, if I can support you further don't hesitate to contact me.\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\n2013/1/30 John Rennie notifications@github.com\n\nI'm afraid that this seems to me to be non-issue. The key=\"...\" is\nprovided as a last resort and isn't expected to be used by most users.\nUnless another member of the dev team objects i will close this pull\nrequest in 24 hours.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12895971.\n. I think hex values always have to start with 0x to separate them from\ndecimal numbers.\n\nFor backward compatibility the support for decimals must stay also.\nIn logging hex values should also start with 0x to prevent reading them as\ndecimals.\nVriendelijke groeten, Kind Regards,\nJeroen Steenhuis\nOp 30 jan. 2013 19:55 schreef \"jmarshallnz\" notifications@github.com het\nvolgende:\n\nIMO the user has a point. If we're logging the keycode has hex then we\nreally should support reading it as such, even if it is just a fallback.\nAFAIK the keycodes used will very likely be on the range f000 up, so we\nshould be able to be distinguished between hex+decimal in that case simply\nby reading as hex, then throwing out those values that are obviously far\ntoo large?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2141#issuecomment-12905814.\n. \n",
    "SteveBell": "sorry lars. heading over to trac.\n. ",
    "gewli": "Did not fix http://trac.xbmc.org/ticket/13407 for me, new debug log is attached there. The ticket should be reopened.\n. ",
    "chagar": "Work-around for the stable release which does not have this fix:\nDisable ALL thumbnails in Settings -> Video -> File lists -> \"Extract thumbnails and video information\"\n. ",
    "pamiro": "I am not sure what you mean. I just tried to close ObjectID=\"\"  hole.\n. I can re-style  to use NTP_Result.\n. FYI: http://forum.xbmc.org/showthread.php?tid=154296\n. Oh right, then specials should not be allowed too.\n. IMO this needs to be fixed with something simple as soon as possible. \nI can imagine many people forget to switch off UPnP server while connecting their laptops to insecure networks. \n. ",
    "DigitalDJ": "At the moment, I don't really have time to fix this up. Also pretty shitty at git in general.\nI agree some of the later commits are dependent on previous, but this was simply the process of fixing problems after re-enabling video playback in pictures.\n. Not sure what the point of this is. Videos can also have a PictureInfoTag as videos from digital cameras can also have EXIF data.\n. It doesn't. I've seen it populate videos with EXIF data. Frankly, I don't know where it's used, but it's a more complete implementation.\n. ",
    "DasMarx": "Added a commit to save the filesize. I had Problems seeking before after hitting the EOF.\n. Just tested this by setting maxrate = rate * 0.5 and you're right. Need to investigate why i often run out of buffer over Wlan or powerlan which have about double the useable bandwith.\nIn my setup, i configured very high caches (like 150 MB to comprehend this) because of the need to refill the buffer...\nEdit: as this has something to do with smb, i can configure my caches to normal size as they are not running out.\nI am closing this PR for now as it has no effect.\nDoes smb \n. Yes, inside CDirectory::GetDirectory, it will try to save the original path, but look inside CDirectoryCache::SetDirectory where it saves the substituted path\nCStdString storedPath = URIUtils::SubstitutePath(strPath);\n  URIUtils::RemoveSlashAtEnd(storedPath);\nClearDirectory(storedPath);\nCheckIfFull();\nCDir* dir = new CDir(cacheType);\n  dir->m_Items->Copy(items);\n  dir->SetLastAccess(m_accessCounter);\n  m_cache.insert(pair(storedPath, dir));\nand for the second commit, why is that wrong? \nClearFile calls CDirectoryCache::ClearDirectory for both cases.\nI thought the intention of rename is to save the new path inside the cache and delete the old one. But maybe i am wrong here, will remove that commit if so.\n\nOh, and heres a picture showing the cache and the path i am looking for, which clearly is saved substituted.\n. I could do that, but don't we sometimes go through CDirectory/CFile multiple times and could therefore apply substitution multiple times? Highly unlikely, put possible.\n. updated the commits.\nWhat about files like CApplication::LoadSkin where we use \ng_directoryCache.ClearSubPaths(skin->Path());\nShould a URIUtils::SubstitutePath be applied there too? I would say no, but i am not sure.\n. Sorry about the missunderstanding of rename, changed it now and pushed again.\n. ",
    "AndyPi": "Hi Martijn,\nnot the most helpful post Ive ever seen but hey, whatever.  I am a little familiar with the forums and did try to find solutions but was not successful.  Perhaps I didn't try hard enough, perhaps there is more wood than trees..I dont know. \nBut this is a genuine issue for me and if you know that it has been dealt with in the forums please give me a hint...perhaps even a link.\nregards\nAndy \n. ",
    "trusnak": "As I guess, the forum was used before, this is new feature request.\n. I understand, thanks.\n. ",
    "palli81": "Any change this will make it into some patch for Frodo?\n. ",
    "samnazarko": "+1 to spiff\nAFAIK all that is different is OMXPlayer has support for both Additional Codec and the FlipPage patch so it may just work if you apply it after applying these patches.\nOtherwise, just read the changes and manually apply.\nI am more interested in seeing how this fix pans out, rather than your inability to apply a patch\n. My opinion on OE is irrelevant. I wanted the conversation to be based on the patch. In this case here I can now see there are no visible regressions so thank you. I actually tried to help rbej by telling him to patch the file manually or try adding noflippage and additional codec patches as I believe this is all that changed in omxplayer in master. Grow up\n-------- Original message --------\nFrom: Stephan Raue notifications@github.com \nDate: 11/02/2013  15:42  (GMT+00:00) \nTo: xbmc/xbmc xbmc@noreply.github.com \nCc: Sam Nazarko samnazarko@stmteam.com \nSubject: Re: [xbmc] [rbp] Fix for broken ASS subtitles. (#2206) \nhere is a OpenELEC build with this patch included for testing:\nhttp://sources.openelec.tv/tmp/image/OpenELEC-RPi.arm-devel-20130211162131-r13263.tar.bz2\ni see no negative performance changes here.\n@cptspiff sorry, @rbej was trying to make a OpenELEC build with this patch included after a request http://forum.xbmc.org/showthread.php?tid=140518&pid=1330917#pid1330917 i told @rbej he should ask me next time if he has such problems.\n@samnazarko, we all know you dont like OpenELEC but your comment was the most useless comment here (like any other \"+1\" and \"me too\" comments)\n\u2014\nReply to this email directly or view it on GitHub..\n. ",
    "asmaloney": "Did I do this right?  Just want to make sure you aren't waiting on me for something...\n. ",
    "LehighBri": "I just tested the \"All\" setting on my rpi (to output HDMI and analog audio simultaneously) with this. For music, it works great... definitely a fantastic feature as I'll be using both for 2 zones. BUT, when I try to playback a TV show .mpg file, I get a black screen with no audio or video. Watching that same video works fine if I use just HDMI audio. Thoughts on this?\n. i just updated to r13316 and I can get output during HDMI and Analog (aka the All setting) to playback.  Nice job.\nOne more question.  If I playback a video that has Dolby Digital (AC3) audio with HDMI, it plays back with dolby d as I would expect (from the HDMI source).  But when I choose \"All\", it doesn't use dolby b on the HDMI connection (not sure what it uses).  Is there a way that when \"All\" is used that it will playback in the same way as if I chose HDMI?\n. Will this conflict at all with the PR below that adds the ability to output audio to both the HDMI and analog outputs simultaneously (e.g. by adding a new \"All\" option to the audio output settings)?\nhttps://github.com/xbmc/xbmc/pull/2232\n. ",
    "stefansaraev": "@jmarshallnz basicaly, it is a wizard which run once, on first run. screenshots here: http://imgur.com/dATVYaq,2eKcPa2,k5rDM00,hUg1QlQ,JMbrOhI,sUS00Hy,CTLRDDg\nEDIT: wizard is still not fully translated, but you should notice that the language is changed (background elements)\n@MartijnKaijser nothing happens, it fails silently without changing the current language\n22:07:50 T:140488459102016   ERROR: unable to load special://xbmc/language/English121212/langinfo.xml: Failed to open file at line 0\n. I can confirm. for me this fixes a segfault after resume with menu sounds enabled.\n. ",
    "mooninite": "Hi. Thanks for the comment. Is there something I missed to get this committed?\n. ",
    "kidwm": "I encountered this problem with FLAC files in XBMC 12 on Fedora 18.\nHope that it could be merged soon.\n. ",
    "snowjim": "This is really annoying feature. When a episode is set as watched and then I check to see that I really seen it the progress icon will be shown instead of the progress icon. And if I hit the w for watched I will still not get the watched icon back? I have looked all over the place to turn this progress icon off but there is none?\n. ",
    "overbyrn": "@ronie could be wrong but I think there's an 'add source ' entry wrongly showing in Add-ons.  Did a quick check by installing nightly from Feb 9 prior to pr2217 and there is no 'add source' in Add-ons in that build.\n. ",
    "riso": "wow thank you. been waiting for this for a long time. great job.\n. I think that a better way would not to touch the NullObject and create a new implementation of the IPowerSyscall specific for rpi. And then fix the factory so that if TARGET_RASPBERRY_PI the rpi implementation is instantiated.\nBut I'm not a XBMC developer (just a user) so this is only my opinion from a general design point of view :-)\n. :+1: I like that aswell. \nJust one thing, probably due to the fact that my C is pretty rusty, is that else if(1) needed @ line 85 of your patch @sraue ? Doesn't a simple else suffice?\n. ",
    "smfontes": "The exiftime and resolution values are currently set in the same file (PictureInfoTag.cpp), way at the bottom in the SetInfo() method.  There is a switch statement that only handles setting exiftime and resolution.  If SetInfo is called with any value other than those two, nothing happens.  I think this is to handle the case where pictures were created using a scanner rather than a camera.  An addon can get the info from the file attributes, then call SetInfo to make sure the picture has at least those two useful pieces of metadata.\nI don't mind rebasing down to a single commit, but this is my first time using Git.  Can you give me a simple set of git command line commands to do it?  If you can't, I'll figure it out.\n. The way the code is written, Item.GetPictureInfoTag() will allocate a PictureInfoTag if one is not already associated for the item.  All we really want here is if the metadata has not already been loaded, then load it.  By adding the extra condition, it will in many cases fail because GetPictureInfoTag() has not yet been called.   \nI don't really understand the reason for HasPictureInfoTag(), since, whenever you call GetPictureInfoTag(), it will either return an existing PictureInfoTag, or allocate one and return it. So, item.GetPictureInfoTag()->anyFunction() will never get a null pointer exception that is caused by not having a PictureInfoTag associated with the item.\n. Sorry ulion - I didn't refresh the page between my comments, so did not see your reply to take out the first part of the condition.\n. Right - that is handled in the second file of my fix.  I changed SetLoaded() in PictureInfoTag.cpp to set a different variable called m_isExternallyLoaded, to distinguish between the two cases.  If metadata is loaded from a file, m_isLoaded is set to true.  That is the only case where m_isLoaded is set to true.  If metadata is set by a call to SetInfo() then m_isExternallyLoaded is set to true.  This allows some data to be set externally, but does not stop additional data to be loaded from the file.  I then modified Load() in PictureInfoTag.cpp with logic to handle using both types of metadata.\n. You are right, calling SetLoaded(true) then Loaded() returns false is weird.  But there is really no reason to expose the internal loaded state to be modified externally.  Whether data has been loaded from the file or by a call to SetInfo is information that can be maintained by the class itself.  We should not allow an external call to change the internal state indicators in a possibly inconsistent way.  I removed the ability to call SetLoaded.  The class maintains its state consistently.  Callers do not have to worry about how they should change the state after they make calls.\n. Scanner is not part of xbmc.  But MyPicturesDatabase doesn't handle files with no exif info any differently than xbmc.\nI just tested the MyPicturesDatabase code, and it just passes in info that it already found in the file.  So right now we don't need to restore it.  We can leave that for a future enhancement.  So I will undo all of my changes from the Load() function, and this fix will still solve both problems.  The Load() function will not have any diffs from current code.\n. All cleaned up and ready to merge.  I've tested it, and everything works.  Slideshows display the right info when launched from the context menu, from the left side menu, and recursive slideshows work under picture sources.  Slideshows and recursive slideshows launched from the MyPicturesDatabase addon also display the correct info.\nAnswers to your questions (as far as I can tell)\nFor number 1, here are the comments in the jpeg parsing routine:\n// This module gathers information about a digital image file. This includes:\n//   - File name and path\n//   - File size\n//   - Resolution (if available)\n//   - IPTC information (if available)\n//   - EXIF information (if available)\nIt says it gets the resolution \"if available\", but I can't figure out from the code when it will get it and when it won't.  I'd have to do a lot more research into the actual format of a jpeg file. \nFor question 2.  Any info set by SetInfo will be overwritten by the Load.  So if Load has empty info, the SetInfo stuff will be lost.  The MyPicturesDatabase addon calls SetInfo with time and resolution it extracts from the file, so Load will get the exact same info.  I do not know whether any other picture addons use SetInfo()\n. Thank you for all your help ulion.  You pointed me to places that needed more investigation, and you made me simplify things as much as possible.  I think we have come up with a good solution.\n. The current pr has no effect on HOW info is loaded.  Whatever support was available for png/gif/bmp before this pr, it will still work exactly the same way after this pr.  This pr does not add any additional function for png/gif/bmp, but it also does not remove any existing function.  \nAll this pr does is keep track of one extra state variable, so we can (load info externally AND load info from file).\nWithout this pr, we could only (load info externally OR load info from file).\n. I just found this ticket with similar intent to fix this problem.  http://trac.xbmc.org/ticket/10519.  I think we need to add code in the load function as I originally had.\n``` c++\nbool CPictureInfoTag::Load(const CStdString &path)\n{\n  ExifInfo_t savedExifInfo;\n  m_isLoaded = false;\nDllLibExif exifDll;\n  if (path.IsEmpty() || !exifDll.Load())\n    return false;\n/ Its possible that the datetime and resolution were already set externally /\n  / Retrieve them, then - if they are not loaded from the file - put them back in /\n  if (m_isExternallyLoaded) savedExifInfo = m_exifInfo;\nif (exifDll.process_jpeg(path.c_str(), &m_exifInfo, &m_iptcInfo))\n    m_isLoaded = true;\n/ If set info does not exist in file, add it back in /\n  if (m_isExternallyLoaded){\n    if (m_exifInfo.DateTime == \"\") strcpy(m_exifInfo.DateTime,savedExifInfo.DateTime);\n    if (m_exifInfo.Height == 0) m_exifInfo.Height = savedExifInfo.Height;\n    if (m_exifInfo.Width == 0) m_exifInfo.Width = savedExifInfo.Width;\n  }\nreturn m_isLoaded;\n}\n```\nCan you get jmarshall to comment on this pr?\n. Rebased\n. I found one more incomplete bit of tag info to add.  Slideshow INFO tags can return just the date with no time, I added that for ListItem.Picture* INFO as well, and add the ability to get long format date.\n. ",
    "dodoadoodoo": "@opdenkamp Makes sense, I think that would reflect how most users would want this to work. Commit added.\n. Are the commits ok, or would you like me to change something?\n. ",
    "pike2k": "seems to fix the switching issue here on intel\n. ",
    "smspillaz": "I believe the relevant issue has been fixed.\n. On 19/03/2013 2:21 PM, \"Cory Fields\" notifications@github.com wrote:\n\nMind explaining why?\nThe current code is a butt-load of copy/paste, but very much on purpose\nto improve readability and debugging. It's not exactly a\nperformance-critical section. Your change is certainly elegant, but I'm not\nsure it's necessary.\n\nSure,\nSo, my change isn't strictly-speaking necessary, but it reduces a lot of\nthe maintainability risk that comes with that section of code. Repeating\nchecks like :\nif (guess->GetName () == implementation || implementation == \"auto\") is\nfine for the first time, but then you have to update all of them in case\nyou decide to change \"auto\", or the method name or whatever. Also, having a\nlot of code where you've got allocation and frees close to each other is\nrisky too because its easy to accidentally miss a free or double free when\nyou didn't intend to.\n(This is also why I have guess->Initialize () in a destructor because of\nthe risk of new throwing an exception, having it in a destructor makes it\nexception safe)\nAs for debuggability - I don't think that's so much of an issue. Most\ndebuggers will show you the template arguments in the function name, and\nthen also, its the same code for the check-and-verify bits too (because\nthey operate through a PV-interface).\nAs for readability - I think this change makes it clearer that the same\nprocess is applied to each constructed object, rather than the reader\nchecking carefully to make sure there isn't a slightly different procedure\nfor each object.\nThe best way in which readability can be improved is probably just to\nimprove those function names (I'm sure they're not 100% right).\nThe reason why I proposed this change generally was because I was looking\nat the requirements for wayland and mir, and then I realized that we'd be\nadding another three copies of this code in the future (X11, wayland, mir)\nand that maybe it would get a little silly if we had 6 repetitions.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. That's a very good point - I had not considered this before. Perhaps the\ninitialize-in-a-destructor model is not the best - there's no inconsistent\nstate to worry about here in the allocation functions (eg if new throws),\nso I think I'll refactor that to be a function that initializes the native\ntype and then returns true. That way we can do this:\n\nreturn InitializeEGLNativeType (nativeType);\nOn Mar 19, 2013 4:55 PM, \"whaupt\" notifications@github.com wrote:\n\n\"(This is also why I have guess->Initialize () in a destructor because of\nthe risk of new throwing an exception, having it in a destructor makes it\nexception safe)\"\nI would suggest to prevent any exceptions from leaving your destructor as\nexceptions in destructors may result in undefined behavior and you will not\nknow that guess->Initialize() guarantees to be exception free.\n\u2014\nReply to this email directly or view it on GitHub.\n. On Mar 19, 2013 5:18 PM, \"Cory Fields\" notifications@github.com wrote:\nFair enough. My first instinct was to use simple macros, hence the\ncomment about the ability to debug, but you've gone to the other end of the\nspectrum here, so that argument doesn't hold.\n\nYeah, I generally try to avoid macros because they're basically\nundebuggable. Templates are debuggable but template errors suck.\n\nI suppose my main hesitation is that I'm not that familiar with boost, so\nit makes me nervous, as the primary maintainer of this code, to be adding\ncomplexity for very little (imo) gain.\n\nThat was something I meant to ask about - boost and C++11. Some people like\nthem, others don't. I don't know what the view is here.\nAs for the boost I'm using here - boost::noncopyable basically declares all\ncopy constructors and copy assignment operators as private, so that you\ndon't weird behaviour from implicit copies of something that you meant to\nbe an object type.\nThat being said, it won't be necessary anymore once I make the relevant\nchange. Putting the call to Initialize () in a destructor was a good idea\nat the time, but I don't want to do that anymore.\n\nThat said, ignorance is hardly a reason to deny a change, so I'll read-up\nand review once you've updated for the issue pointed out above.\n\nThanks.\nAs for your other question - the naming. I was referring to the new\nfunction introduced in my  PR - I don't have the diff on me right now so I\ncan't recall it from memory, but it probably needs a better name.\n\nReply to this email directly or view it on GitHub.\n. On Mar 19, 2013 5:33 PM, \"Cory Fields\" notifications@github.com wrote:\nHeader-only boost is ok around here, but c++11 is a no-go.\n\nYeah, that's what I used when I worked on compiz.\nI suppose the reason for no-c++11 is because of the partial implementations\non platforms you want to support (eg ios, android etc)\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Okay, updated based on the current commentary.\n\nI guess CreateEGLNativeType is probably the best name for that function.\n. ping?\n. Sounds like a good idea. I'll give that a try in a few hours. Thanks.\n. Ah, I guess we can even do this:\nCEGLNativeType *nativeGuess = NULL;\nif ((nativeGuess = CreateEGLNativeType< CEGLNativeTypeAndroid>\n(implementation)) || ...))\n{\n    m_NativeTypes = nativeGuess;\n    m_NativeTypes->Initialize ();\n}\nWould make it more clear what's going on\nOn Mar 25, 2013 11:36 AM, \"Cory Fields\" notifications@github.com wrote:\n\nWell if we're going for reducing duplication here, why not send in a\nnativetype pointer to be alloc'd by the creator, then return a bool on\nsuccess? Then you can drop that InitializeNativeType helper and early\nreturns, and it'd look like:\nCEGLNativeType *nativeGuess = NULL;\n  if (CreateEGLNativeType< CEGLNativeTypeAndroid >(implementation, nativeGuess) ||\n      CreateEGLNativeType< CEGLNativeTypeAmlogic >(implementation, nativeGuess) ||\n      CreateEGLNativeType< CEGLNativeTypeRaspberryPI >(implementation, nativeGuess))\n  {\n    m_nativeTypes = nativeGuess;\n    m_nativeTypes->Initialize();\n  }\n  return m_nativeTypes != NULL;\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2464#issuecomment-15376539\n.\n. Alrighty, done :)\n. Done, thanks\n. \n",
    "monksy": "That seems silly.\n. So feature-requests and bugs go overlooked on the forums? That seems rather inefficient and ineffective. \n. ok\n. That seems silly.\n. That seems silly.\n. ",
    "pgit": "Forgot to mention: Additionally, search results are now cached, too. This was speeding up things during testing.\n. I have been told that changes to plugins are not pulled in here, but rather the sourceforge repository. This has been done as of version 1.5.0 of the tvdb plugin, here's the commit: http://xbmc.git.sourceforge.net/git/gitweb.cgi?p=xbmc/scrapers;a=commit;h=10bf4af0665f215c2c23e3ddbcb1413ddee49396\n. ",
    "sjongele": "Fritsch, 2320 causes big underruns with DTS-HD MA and TrueHD passthrough on my system: Intel, Ubuntu 12.04 64-bit, NVidia GT540M, ALSA, no Pulse.\n. Hello Fritsch; sorry, still lots of underruns. 2382 does not solve the issue.\n. @fritsch \nNot sure where my response ended up, but thought I had posted success with this solution as well.\n. @fritsch:\nwill test the proposed changes tonight and communicate results.\n. @fritsch \nBased on a few test tracks, the combination of the two seems to work well; the log remains clear of underruns. Just the first patch is not enough.\n. ",
    "dagwieers": "Ok, after diving into configure.in I now have a working configure check (only tested on Linux though).\nLooks quite basic so what can go wrong, right ? :-) I will update this PR after some more testing on OpenELEC.\nPatch is available from: https://github.com/OpenELEC/OpenELEC.tv/pull/1977\n. I hope this is now acceptable to be pulled. We take care of checking if the library has the capability, we make sure MacOSX stays the special case and we test the FreeBSD/OpenBSD function call as well. In any case this should work better than the original implementation.\nOn OpenELEC:\nroot ~ # pstree -p 845\nxbmc.bin(845)-+-{CEventServer}(940)\n              |-{CSoftAE}(922)\n              |-{CTCPServer}(941)\n              |-{EPG updater}(946)\n              |-{PVR manager}(947)\n              |-{PVR manager}(948)\n              |-{PVR manager}(949)\n              |-{PVR manager}(950)\n              |-{XBPyThread}(930)\n              |-{xbmc.bin}(923)\n              |-{xbmc.bin}(932)\n              |-{xbmc.bin}(933)\n              |-{xbmc.bin}(934)\n              |-{xbmc.bin}(935)\n              |-{xbmc.bin}(936)\n              |-{xbmc.bin}(937)\n              |-{xbmc.bin}(938)\n              `-{xbmc.bin}(939)\n. Unrelated to the patch, but nevertheless interesting to us: a lot of threads have no custom name set, and it would be useful to identify by name what these are as well for troubleshooting purposes.\n. @FernetMenta So there's an opportunity to set the thread name for addon's as well, I'll look into it.\n. By popular demand...\n. @opdenkamp There is one thing I do not understand. We build libcec in OpenELEC with udev support, so I would be expecting XBMC to not have to rescan sysfs recursively every second. However it does do that.\nAre we overriding the udev support in libcec from the PeripheralBusCEC thread in some way ? Or is there a bug in libcec so it doesn't use udev ? I don't see it.\n. Hmmm, I do see it. It's looking for any entry with idVendor and idProduct entries in almost the complete sysfs tree :-/\nWhereas I would be expecting that it only processes all existing udev entries once, and then hooks into udev to get notified for new devices. Much like PeripheralBusUSBLibUdev does.\nI think I'll be disabling CEC support in my ATV1 OpenELEC builds for the time being.\n. @stupid-boy The proper implementation wouldn't need a rescan (every 1 or 5 seconds), but it would only act on udev events. Which is zero overhead (not like the current implementation). This is how USB-Udev is implemented currently. So we don't have to (over)generalize use-cases, just implement it better (eventually).\n. ",
    "romanlum": "theuni said: \n\nShould use udev to grab device names\n\nI implemented the initialization with udev\n  https://github.com/romanlum/xbmc/commit/e077dd62d7fc8f0eca8f82aa1ff3ec955ec20d41\nIs there a way in xbmc to get an event on device changes, or must i implement a udev monitor??\nCan anybody explain me peripherials?? could i use that??\n. ",
    "juanfont": "@FernetMenta this patch is not focused on mpegts, I've only mentioned it as an example of format without header. \nIn real-time applications, like interactive TV services, the time required to start playing the video is critical, as you want to reduce as much as possible the delay between the server and the client. Spending 5 seconds (and, because of that, getting 5 seconds of delay) is unacceptable. \nAlso, like other parameters found in advancedsettings.xml, the user assumes the responsibility of giving wrong/insufficient values.   \nNice (and useful) this patch of yours :)\n. @MartijnKaijser should I put it in guisettings.xml instead? \n. @MartijnKaijser but that makes it impossible to configure those parameters... \nThis problem exists, and I can't found any other way to reduce the time spent by ffmpeg in it. Any alternative solution? \n. > This isn't needed for mpegts. \nBut this patch is not only intended for mpegts.\n\nIf not there is something else wrong (or you are insisting on external libav or ffmpeg)\n\nYep, the distro packagers. Using xbmc internal ffmpeg isn't very common among them ;)\n. Ok. Thanks! \n. ",
    "BartOtten": "I think most of the times there are no real difficulties with the sites (both XBMC Repo and SuperRepo suffer from this bug while their backbones are quite good) so the suggestion to just refresh is not that bad at all. Waiting 10 minutes is a long time for people just wanting to use their mediacenter.\nHowever, the previous sync should be ended already but that's not a problem anymore as repositories are now refreshed individually again.\n. ",
    "wiso": "@DDDamian: wrong person\n. ",
    "MilhouseVH": "Obviously this patch only applies to the Raspberry Pi and I'm not suggesting this PR should be merged to master, but it can be used as a patch when building R-Pi projects - for example, OpenELEC, XBian, Raspbmc.\n. Updated patch to include #ifdefs for Raspberry Pi so that default Suspend/Hibernate behaviour is restored for non-Raspberry Pi systems. I realise #ifdefs are frowned upon, but not sure of better way to implement this right now.\n. Than again, according to this forum post by popcornmix, hal is available on the Pi platform, so if OpenELEC (and Xbian/Raspbmc etc.) can be built with hal (HAS_HAL), maybe no code change are required at all and the Pi can use CHALPowerSyscall?\n. @sraue makes a valid point: If the system can't determine what power options are available, then the defaults offered should be conservative, which would mean Suspend and Hibernate disabled. No ifdefs, just change the current CNullPowerSyscall settings for Suspend and Hibernate to false. Is there an argument for them being set to true, when in most cases they won't work anyway?\n. Patch updated - many thanks @sraue.\n. I suppose fundamentally this PR is questioning whether the default NULL provider (as used by the Pi, and probably Apple) should be reporting that Suspend and Hibernate is supported when most likely they are not... how we get to the NULL provider, or a Fallback provider, is probably for another PR entirely... certainly not one I'm comfortable submitting.\n. @sraue: Patch seems to build and test OK for Raspberry Pi.\n. Yes, the else if(1) does seem redundant, just else will suffice.\n. Wouldn't this achieve the same result, while being less contrived:\n```\nif defined(HAS_HAL)\nelse #if (1)\n    m_instance = new CHALPowerSyscall();\nendif // HAS_HAL\nendif // HAS_DBUS\nif (m_instance == NULL)  #else\n    m_instance = new CFallbackPowerSyscall();\n```\n. I'm seeing this \".actors\" error plenty when scraping movies over NFS. So it's not just TV Shows, but movies too, and not just SMB but NFS too. I don't have any .actors directories, yet the scraper is chucking out this \"error\" message for every movie. Either check it exists before using it, or suppress the \"error\" message when it doesn't exist and it's not a problem that it doesn't exist.\n. ",
    "dezi": "I dot not understand. I posted code. \n. Yes, i agree. put the patch on hold. I still get buffering problems and think, that it might make things even worse. I will investigate some more.\nCheers\ndezi\n. Yes, i agree. put the patch on hold. I still get buffering problems and think, that it might make things even worse. I will investigate some more.\nCheers\ndezi\n. Done.\n. Oops, i left debugging stuff in patch, i will rebase and changes this.\n. I looked through iconv and could not find the feature UTF8-MAC anymore. So this is not an option. If You access drives with HFS+ directly or via AFS-Protocoll, Apple takes care that Your filenames, however You specify them, are decomposed. No problem here. However, if You copy files from HFS+ to ext4, their names will be decomposed. ext4 basically does not care. You can have in the same directory two files, which look as if they had the same file name, one precomposed and one decomposed. So the decomposed file cannot be accessed with precomposed file names. It is a big mess, introduced by Apple. I would under no circumstances manipulate strings, which are used to acces files. Path-strings should only be converted for queries somewhere else (Scrapers) or for display, since XBMC renders those decomposed string wrong in displays.\n. I missed the UTF-8-MAC implemenation in CharsetConverter.cpp. So we do not need my routines. By the way, i looked half a day in internet for routines which do the job and did not find suitable...\nI have just checked on my Mac. Yes, the decomposed file names are displayed correctly. Yet the scraper does not work on those of course. I use the very same Airport Extreme Disk on my RaspberryPi, here the file names show up incorrect. I would say, converting for display from NFD to NFC is not an OSX issue, but an issue on hosts, where OSX drives are mounted. So we should always decompose for display and searching. \nAs i mentioned, i copied files with those filenames down from my Airport drive via AFS to ext4, and the filenames on ext4 stay decomposed. So I infected also my ext4 drive. Basically You have to exspect them everywhere. All my music comes originally from iTunes / OSX. Lots of accented characters in there. Moved all of that down to my server on ext4.\nCheers\nDezi\n. @jmarshallnz: I have looked into both, CharsetConverter.cpp and libiconv source. UTF-8-MAC in CharsetConverter is only a define used on Darwin build targets. It is not available anywhere else. Basically I cannot find a routine, which will convert UTF-8-MAC to UTF-8. By the way, decomposed characters are also valid characters in UTF-8. So if You convert Mac-Style-UTF to ISO-Latin, it will work everywhere as such, no special facilities required. \nConverting strings from UTF-8 to ISO-Latin, then converting it back to UTF-8 would do the job, but is certainly no option, because ISO-Latin is only good for European languages and will fail on other content.\nBasically we have two problems here:\n1. People using Mac Shared Disks (Airport Extreme NAS is a common example) or files from Mac Shared Disks on local filesystems will expierence unpredictable and hard to explain problems with scrapers (Content not found).\n2. People using Mac Content in XBMC Gui other than on Mac will have character display problems in file lists and other places.\n. I have tried on Linux/Debian the first variant w/o success as far i remember. I will doublecheck this. Also, converting to wide may work, but, since decomposed characters is well formed UTF-8, i am afraid, the conversion routine sees no need in converting from decomposed to composed while converting to wide unicode and back. I will also check this and give feedback. Thanks for Your support on this.\n. More interesting facts on this issue:\nThis is a protocol from a ssh session on my RPI. \"Test\" is a directory, which resides on a EXT4 partition.\nThe content was copied over from Aiport Extreme NAS to this place. Its a directory called \"Unsere M\u00fctter, unsere V\u00e4ter\"\nI tried to cd into into it.\nThe first cd, I typed the path in. Did not work.\nThe second cd, I copy and paste the path from ll listing. Did not work.\nThe third cd, i used file name completion, worked.\n\npi@xberrydev ~ $ ll Test/\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Mar 23 09:38 .\ndrwxr-xr-x 13 pi pi 4096 Mar 23 08:44 ..\ndrwx------  2 pi pi 4096 Mar 23 08:45 Unsere M\u00fctter, unsere V\u00e4ter\npi@xberrydev ~ $ cd \"Test/Unsere M\u00fctter, unsere V\u00e4ter\"\n-bash: cd: Test/Unsere M\u00fctter, unsere V\u00e4ter: No such file or directory\npi@xberrydev ~ $ cd \"Test/Unsere M\u00fctter, unsere V\u00e4ter\"\n-bash: cd: Test/Unsere M\u00fctter, unsere V\u00e4ter: No such file or directory\npi@xberrydev ~ $ cd \"Test/Unsere M\u00fctter, unsere V\u00e4ter\"\npi@xberrydev ~/Test/Unsere M\u00fctter, unsere V\u00e4ter $\n\nConclusion: Linux / EXT4 is picky about how you specify accented characters. You need to match the NFD/NFC version exactly, or otherwise it will not work. AFP/HFP+ ist not picky about this, You can enter paths in both, NFC and NFD and it will work.\n. @jmarshallnz: I have double checked both suggestions You made. Both conversions leave NFD / NFC domains as they are. I am not able to compile the OSX version, so i cannot verify the conversion there. Anyhow, on OSX the path names are displayed correctly, Scraper searching fails. You can check from the log, what really was searched, because strings are dumped in url-encoded manner. I believe, on Darwin, the native display is just able to display NFD correctly and no conversions are ever made. Maybe You can verify this. Thanks a lot, Dezi\n. The NFD_NFC_Tupel array is pretty large, we could move it to some static area later on. Just presented as a working draft here. If someone is interestest in how the table was generated, just give me a note.\n. ",
    "VegarS": "Yes, that is definitely a better solution. Unfortunately I am not able to compile and test it myself, is anyone able to take this further?\n. ",
    "phoefler": "Yes, it has nothing to do with PVR at all.\nThis would be an option needed for UDP Multicast live streams directly opened since SkipPrevious is reacting differently in Frodo.\n. hehe, we live from the udp streams ;-)\nso shall we make them not seekable and pausable based on the url?\nso, if it's udp we set state.canseek and state.canpause to false?\n. that's a nice feature for us too ;-)\n. ",
    "whaupt": "to sum it up:\nIf you watch an UDP stream it is not possible to go to the previous channel of a channel list after the first 3 seconds of playing.\nIn my opinion there could be 2 solutions:\n1. disable seek and pause for UDP streams only\n2. giving arguments to all kind of ffmpeg-streams (not for only one specific protocol) so anyone can define the behavior they need (because the problem described above may apply to other protocols too)\nAm i right here?\n. implemented option 1 and made new pull request:\nhttps://github.com/xbmc/xbmc/pull/2434\nthis one can be closed.\n. ok, thanks for the information.\n. @theuni Tried your POC and did not work for our udp streams.\n@elupus tried your fix too and it worked as expected (also left a comment at the new pull-request)\n. Tried it and works like expected with udp streams :)\n. \"(This is also why I have guess->Initialize () in a destructor because of the risk of new throwing an exception, having it in a destructor makes it exception safe)\"\nI would suggest to prevent any exceptions from leaving your destructor as exceptions in destructors may result in undefined behavior and you will not know that guess->Initialize() guarantees to be exception free.\n. @pieh fyi: tested your fix today and it's working :+1:\nthanks a lot\n. just pulled in your changes and made a few tests:\n1. ffmpeg timeout on not existing streams:\n   works like expected (shows an error message and goes back to playlist menu)\n2. manual abort:\n   it is not freezing, but it behaves differently on following actions:\n- jump to not working item and abort:\n  skips the broken item and plays next one immediately\n- go to PREVIOUS channel (from working item to broken item and then pressing abort):\n  goes back to playlist menu for about 0.5 to 1 sec then plays the previous item (which is the item before broken item)\n- go to NEXT channel (from working item to broken item and then pressing abort):\n  goes back to playlist menu and plays next item in background of menu\n- in case of 2 broken items:\n  trying to play first broken item and abort) you get back to menu trying to play next (broken) item\n  pressing abort again leads to next item playing in the background of playlist-menu.\n. ok, sounds great.\ni don't think it's a big issue anyway as you have full control over xbmc any time.\n. thx for your help.\nadded the patch now\n. yea, that's no problem.\njust wondering how i did not see patch nr. 31 as i double checked it...but nvm i'll change it :)\n. ah didn't check the obsolete_patches directory...\n. ping @elupus could you please verify this for may merge-window? thx\n. i can only say that it's incredibly enhancing switch-time between upd-streams. it's not necessarily breaking anything, but a great enhancement.\nthere's a post in our forum maybe it helps:\nhttp://forum.xbmc.org/showthread.php?tid=160006\nit's been merged into pivos xbmc but not in mainline as far as i know.\n. not sure if this is true for std::vectors with custom objects in it, but:\nhttp://stackoverflow.com/questions/6419599/will-the-inefficiency-of-the-postfix-operators-be-optimised-away-for-stl-i\nalthough i use prefix version myself...\naccording to the book \"c++ coding standards\" one may compute the end value of an iterator before the iterating loop to get rid of container-end-calculation on every iteration.\n. ",
    "sayap": "Here's an ugly diff that resorts to screen scraping to get the IMDB ID. Seems to work ok for me...\n``` diff\ndiff --git a/metadata.douban.com/douban.xml b/metadata.douban.com/douban.xml\nindex 5acdbe2..346ff71 100644\n--- a/metadata.douban.com/douban.xml\n+++ b/metadata.douban.com/douban.xml\n@@ -15,7 +15,7 @@\n    \n\n\n-           \n+           \n\"title\":\"(.+?)\",\"url\":\"http:\\/\\/movie.douban.com\\/subject\\/([0-9]+)\\/[^\"]\",\"sub_title\":\"(.?)\",\"year\":\"([0-9]+)\"\n\n\n@@ -23,7 +23,7 @@\n    \n\n\n-           \n+           \n\n\n\n@@ -71,16 +71,16 @@\n            \n\"large\":\"http:\\/\\/(.+?)\\/img\\/celebrity\\/large\\/(\\d+).jpg\".+?\"name\":\"(.+?)\"\n\n-           \n-               <db:attribute name=\"imdb\">http://www.imdb.com/title/tt([0-9]+)\n+           \n+               http://www.imdb.com/title/tt([0-9]+)\n\n-           \n+           \n\n\n-           \n-               <db:attribute name=\"imdb\">http://www.imdb.com/title/tt([0-9]+)\n+           \n+               http://www.imdb.com/title/tt([0-9]+)\n\n-           \n+           \n\n\n\n```\n. Where should it go instead? There is no tracker on SourceForge.\n. Noted. Sorry about the mistake. Hopefully one day there will be repositories for xbmc-xxx-addons on github / bitbucket / etc, similar to https://github.com/opdenkamp/xbmc-pvr-addons\n. ",
    "aglebov": "It seems possible to pass other mouse events to python as well (you can\ntake a look at the constants in xbmc/xbmc/guilib/Key.h for a list of the\nmessages available).\nOn 17 March 2013 04:11, bossanova808 notifications@github.com wrote:\n\nAny chance of click and hold support for touch interfaces? I had to\nimplement a very clunky volume up down button thing because it only\nregisters one click event as far as I can tell.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2447#issuecomment-15015301\n.\n. Sure, thanks!\n\nOn 18 March 2013 22:26, Jim Carroll notifications@github.com wrote:\n\nOk. I just want @Montellese https://github.com/Montellese to review\nthis when he's back next week (he reworked all of the mouse/gesture stuff\nfor android). I hope you're ok with that.\nOther than that, I'm fine with this.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2447#issuecomment-15076161\n.\n. \n",
    "djgonzo81": "I believe it's the realPath variable, as it's the one passed to the get directory method.\nCStdString realPath = URIUtils::SubstitutePath(strPath);\nI will try to get the value it's returning to see what's going on.\n. I retested this using the nightly build, and the code returns the correct value. So this bug was actually fixed after the Frodo release. Thanks for pointing me in the correct direction. I'll just use the nightly build for my add-on extension.\n. How do you undo a push?\n. Sorry, I wasn't sure if I should post there or here since it was related to the latest code. Do you know where in the forum to post potential bugs against the latest build?\n. In case anyone wanted to know what was going on from the logs, and so I can use it to post in the forum.\nLog:\n10:38:36 T:1232  NOTICE: Thread CFileCache start, auto delete: false\n10:38:37 T:2224  NOTICE: Thread Background Loader start, auto delete: false\n10:38:37 T:1996  NOTICE: Thread Jobworker start, auto delete: true\n10:38:38 T:1500  NOTICE: DVDPlayer: Opening: http://192.168.1.12:5004/auto/v5?dlna\n10:38:38 T:1500 WARNING: CDVDMessageQueue(player)::Put MSGQ_NOT_INITIALIZED\n10:38:38 T:1788  NOTICE: Thread CDVDPlayer start, auto delete: false\n10:38:38 T:1788  NOTICE: Creating InputStream\n10:38:38 T:1788 WARNING: XFILE::CCurlFile::CReadState::FillBuffer: curl failed with code 22\n10:38:38 T:1788   ERROR: CCurlFile::CReadState::Open, didn't get any data from stream.\n10:38:38 T:1788   ERROR: XFILE::CFileCache::Open - failed to open source http://192.168.1.12:5004/auto/v5?dlna\n10:38:38 T:1788   ERROR: CDVDPlayer::OpenInputStream - error opening [http://192.168.1.12:5004/auto/v5?dlna]\n10:38:38 T:1788  NOTICE: CDVDPlayer::OnExit()\n10:38:38 T:1788  NOTICE: CDVDPlayer::OnExit() deleting input stream\n10:38:38 T:1500   ERROR: Playlist Player: skipping unplayable item: 0, path [upnp://938319DE-1113-38E4-8D72-B0AFFAED2C92/CableTV%2fv5/]\n10:38:38 T:1500  NOTICE: CDVDPlayer::CloseFile()\n10:38:38 T:1500 WARNING: CDVDMessageQueue(player)::Put MSGQ_NOT_INITIALIZED\n10:38:38 T:1500  NOTICE: DVDPlayer: waiting for threads to exit\n10:38:38 T:1500  NOTICE: DVDPlayer: finished waiting\n10:38:38 T:2976  NOTICE: Thread Background Loader start, auto delete: false\n10:38:40 T:2788  NOTICE: Thread CFileCache start, auto delete: false\n. ",
    "nate1280": "I added the setting for those that wish to keep it the way its currently handled.\n. Removed the advanced setting, fixed the indenting (thought I had 2 spaces set, guess not), and reduced comments.\n. Do I just rebase to squash, and force a push to update this? I don't use git that often.\n. Squashed and updated, hope I did it right.\n. ",
    "gbeauchesne": "Hi,\nAre you still using hcrop/vcrop workarounds? Could you please report a bug\nagainst the VA driver if this is still an issue with the current staging\nbranch?\nIn turns of global architecture, it would be interesting if you could\n\"pipeline\" several filters (deinterlacing, noise reduction et al.) into a\nsingle VPP pipeline. That's because some platforms may be able to apply\nseveral of those filters in a single pass too...\nBTW, do you see anything that could be improved API wise? I mean, is the\nAPI convenient enough to use?\nThanks,\nGwenole.\n2013/4/9 BtbN notifications@github.com\n\nIt propably could run within the Decode thread, but the current setup\nseparates VPP, which is except for the display a new vaapi instance, into\nits own thread, which allows it to work in the background, while the\ndecoder can fill more surfaces.\nThe Performance gain is not very big, but on some systems with not so\npowerfull GPUs this performance gain can make the difference for 1080i50\nplayback.\nVPP is also capable of much more than just deinterlacing, and the seperate\nthread allows for easy integration of such features(Scaling, some filters\nand other stuff) in the future.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2460#issuecomment-16132748\n.\n. \n",
    "DataGhost": "Those subs aren't forced. Read http://trac.xbmc.org/ticket/13993 and http://trac.xbmc.org/ticket/14079 for more detailed information. By the way, I'm not really sure what this does to forced subs but I guess not much, I saw the logic for that elsewhere in the code.\n. ",
    "1358": "@MartijnKaijser How about a BIG RED BANNER (here on github) that says that the github issue tracker is not to be used for reporting issues?\n. ",
    "CodeBleu": "Thanks for the 'no comment' close!  It would have been nice to have been told something.\n. ",
    "simonvetter": "If an OS doesn't have ipv6 support at run time, trying to acquire an ipv6 socket (socket(PF_INET6, SOCK_STREAM, IPPROTO_TCP)) simply fails. In this case, falling back to ipv4 should work.\n. Note that if you want to disable ipv6 on Linux you need to prevent the ipv6 module from being loaded. Disabling ipv6 through sysctl will disable autoconfiguration and routing but will still allow you to get a socket and bind it.\n. Thanks for your feedback. I updated my code to meet your coding guidelines.\nI also changed my setsockopt calls to match winsock expectations.\nI unfortunately don't have access to any windows machine or visual studio to perform any further debug.\nTCPServer.cpp has the following comment \n//using namespace std; On VS2010, bind conflicts with std::bind\nCould that be the problem @wsoltys is facing? How would you like to resolve it?\n@Memphiz I do not see any memleak. How long did it take before you noticed a crash? What test did you perform?\nI am not doing any dynamic memory allocation or even loop, but could the use of two MHD instances be a problem?\n. @mikkle your commit is still needed as I haven't touched the event server yet. I believe that we could use the same technique as I am using to determine at runtime if ipv6 is available.\n. @wsoltys could you please check if the socket is listening on both address families?\nI just double checked and it works fine on Linux, with or without ipv6 support on the OS, and with and without ipv6 addresses at all. I can stream youtube videos and images from my camera roll just fine.\nIt works on OSX as well, but Mountain Lion's ipv6 support can't be disabled.\nMy latest patch sets SO_REUSE on server sockets to avoid bind() failures when restarting XBMC while client sockets are still in TIME_WAIT state. \nAlso, I added an extra #ifdef to use const char on windows and unisgned int anywhere else. This is needed because setsockopt has a different prototype on unices and on windows.\n. I don't believe the problem has anything to do with connecting to youtube - that works with both address families and isn't handled by the AirPlayServer.\nI believe accept() was failing because with dual stack sockets, ipv4 connections are represented as ipv6 connections (mapped v4 addresses), and ipv6 addresses won't fit into a sockaddr structure.\nThe code is now using the address-family agnostic sockaddr_storage structure.\nTested OK on OSX with and without IPV6 addresses, OK on linux with and without ipv6 support in the OS, with and without IPV6 addresses.\n. ",
    "FourthRock": "Ok, I will put this on the forum.\nThanks for putting me in the right direction :-)\n. ",
    "Alphix": "I'm not sure I follow.\nFirst, the codec id (AV_CODEC_ID_SUBRIP) is defined in libavcodec/avcodec.h in recent versions of libavcodec.\nSecond, your #if seems to change nothing? Why test the micro version separately? The AV_VERSION_INT already includes the major/minor/micro version numbers?\n. Nevermind. I see, you were talking about libav as opposed to ffmpeg, not libavcodec.\nYes, AV_CODEC_ID_SUBRIP doesn't seem to be defined in libav. Your #if doesn't seem to fix that problem though? It'll just break ffmpeg compatibility when the major and/or minor version numbers are bumped?\n. Ok, I've educated myself. libav uses a zero based MICRO and ffmpeg uses a 100+ MICRO. I'll fix it...\n. @aballier Does this updated PR fix your nitpicks?\n. Gah, I messed up the PR\n. See PR https://github.com/xbmc/xbmc/pull/2597 instead\n. @FlyingRat The mkv embedded subtitle issue you've hit upon is something I've already fixed in my pull request (https://github.com/xbmc/xbmc/pull/2525)\n. @elupus Done. Compile tested on linux (with --disable-dvdcss --disable-rsxs because either of those seem to break the compilation)\n. @rbej patch don't work? As in....mkv embedded subtitles are now shown during playback?\n. @rbej, the patch should work now (missing include)\nThe rest of you - I managed to find out how to change existing patches in a github PR (git push --force, which is usually strongly discouraged in other contexts)...so here's a new set of patches with the fixups merged into the proper commits\nCompile tested and I've also verified that mkv subtitles work\n. You should also add the patch in lib/ffmpeg/patches I guess?\n. ",
    "FlyingRat": "@Alphix, your fix worked perfectly!  Here are some binaries based on ffmpeg n1.2 and your work. /Regards, Lars.\nosx: http://forum.xbmc.org/showthread.php?tid=156303&pid=1393277#pid1393277\nwin32, ios & atv: http://forum.xbmc.org/showthread.php?tid=156303&pid=1393505#pid1393505\n. Done, commit splitted in two parts.\n. pushed the close button by accident...\n. - bookmarks and TODO:s cleaned and wiped!\n- renamed: XBMC-patches -> patches\n- updated: patches/README-patches\n- renamed: patches/OBSOLTE -> patches/obsolete-patches\n- Commit: \"[FFmpeg] version bump to n1.2 (rev e820e3a) - lib/ffmpeg\"\n  lib/ffmpeg n1.2 including xbmc patches.\n- Commit: \"[FFmpeg] version bump to n1.2 (rev e820e3a) - xbmc files\"\n  Designated xbmc files... \n. Thanks! The intention was to make the build process work smoother but you are of cource welcome to disregard or/and restructure the any of the win32 build script whichever way you see fit best for the new Jenkins build environment.\n. @aballier, please provide some media samples we can verify with that also can work as a reference if we need to alter stuff. /Thanks in advance, Lars.\n. @popcornmix, referenced this pull request in huceke/omxplayer: (github.com/huceke/omxplayer/issues/150)\n\n\"Issue #150 MKV video plays at double speed (FFmpeg-1.2)\"\n\nI'm sorry, but what has OMXplayer and \"Built a recently checked out omxplayer against external ffmpeg-1.2\" anything to do with this pull request?? \nBtw, as this is not a discussion forum please move further discussion to: http://forum.xbmc.org/showthread.php?tid=156303&action=lastpost . /Thanks in advance, Lars.\n. @aballier commented:\n\nwell, those are encoders so basically any sample would work ;) its just a matter of triggering that code path,\nbut note that i'm not saying that based on my experiences but rather based on my reading of the code so\nit's possible I'm wrong; I'm just saying to be careful about these two encoders :)\n\nOk, thanks. Since there are no actual problems reported I'll consider this particular case closed for the moment. You are more then welcome to get back if you find anything specific issues that should be solved but in the mean time let's move more general discussions to: http://forum.xbmc.org/showthread.php?tid=156303&action=lastpost  /Thanks, Lars.\n. cptspiff commented\n\n@flyingrat, \"apologize\" to popcornmix, all he did was open an issue on his repo. github is responsible for the >noise..\n\nWell, sorry about that but I had no idea about this \"feature\". I'll know github is good for many things but... anyhow, now I know.\n@popcornmix good :+1:  github bad (well, surprises..) :-1:\n. @FernetMenta commented:\n\n@FlyingRat How much testing does this require on Linux with vdpau and vaapi?\n\nI've done quite some testing on my own but only with vmware fusion. There are some other folks on the following thread that I'm quite sure have done some more extensive testing and can probably answer any of your questions:\n\"[WIP] FFmpeg v1.1.x + XBMC add-on patches.\"\n\n@sraue You already run external ffmpeg 1.2 with OE, right? Are there any tweaks you have done which\nshould be considered here?\n\nCheck this post: http://forum.xbmc.org/showthread.php?tid=156303&pid=1391318#pid1391318\n. @wsoltys commented:\n\n@FlyingRat: please bring back the copy of the pdb file as we need it that jenkins can fetch that too. Then I'm\nfine with it.\n\nOk, will fix. Want a rebase or will a separate commit do?\n. @Alphix commented\n\nThe mkv embedded subtitle issue you've hit upon is something I've already fixed in my pull request (#2525)\n\nExcellent work dude! :+1: :+1: :+1: Saved me a lot of headache, thank you!\n. @cptspiff: is there a way to create a dependency to another PR (like this one: https://github.com/xbmc/xbmc/pull/2525) or how is this supposed to work?\n. @wsoltys commented:\n\n@FlyingRat: please bring back the copy of the pdb file as we need it that jenkins can fetch that too. Then I'm\nfine with it.\n\nIt's in as https://github.com/FlyingRat/xbmc-ffmpeg-version-bump/commit/a6cb8db11bd2f7657dd7e537014e5c622d7534cf\n. Tested some binaries yesterday that included Pull Request  #2525 and they all appear to work as expected:   \nhttp://forum.xbmc.org/showthread.php?tid=156303&pid=1393277#pid1393277\nhttp://forum.xbmc.org/showthread.php?tid=156303&pid=1393505#pid1393505\n. @wsoltys \n\n3) the ffmpeg libs won't build at all. the make breaks with\ncommon.mak:138: *** missing separator.  Stop.\nThis message comes already before configure starts but configure runs fine so the error might be somewhere else > but I couldn't figure it out yet.\n\nThat error may indicate there are spaces instead of a leading tab or crlf problems on the \"command\" part in a make section. I don't get that error in my current build env that was a made out of clean clone from today so it's hard to tell the reason behind.\n. > common.mak:138: *** missing separator. Stop.\nI got the same error some time ago and found this error report: https://ffmpeg.org/trac/ffmpeg/ticket/1209. I think this made it to work again: git config --global core.autocrlf false\n. > Git docs tell to set it true on windows if working together with other platforrms http://git-scm.com/book/ch7-1.html\nYeah i know, but it actually helped in the ffmpeg case (I dont remember the root cause thou). One could argue about the scope regarding the \"--global\" flag... \n. > @elupus commented \n\nHave 0028-fixed-dvd-still-frames-ended-up-in-internal-lavf.patch been verified to not a problem anymore?\n\nWell, you might be lucky this time since 0028 is nowadays included upstreams: https://github.com/FFmpeg/FFmpeg/blob/n1.2/libavformat/utils.c#L341 \n. I agree, it's very odd but I'll dig into it...\n. > @aballier commented\n\nsome hunks such as:\nFlyingRat@6f653c5#lib-dllavformat-h-P6\njust need to be reverted\n\nWhat has changed in regards to the previous discussion on this topic? Trifle or not, please motivate and explain why. /Thanks in advance, Lars.\n. My findings regarding the common.mak issue:\n- Brief summary:\n  Currently Mingw-Make does only work when ffmpeg is checked out with core.autocrlf=false under win32 (as most already may have guessed!) It's quite odd that mingw-make can't cope with crlf endings since I guess this was not an issue with the old 0.10.2 ffmpeg.\nAre we missing a \"miniwg\" settings file or something like that?\n- Background:\n  The build env that was used is based on a ffmeg repo cloned from the ffmpeg n1.2 fork. Since it was a git repo it was also possible to utilizes local config settings like core.autocrlf=false. As soon as the PR made it into the xbmc master repo, ffmpeg just became a regular directory which makes it impossible to use local git config settings.\n- Temporary workaround:\n  A very temporary solution I've tested is to re-checkout ffmpeg with core.autocrlf=false but that is obviously a rather ugly solution!\n- Possible solutions?\n  Does it exist any platform settings (local or global) in the minigw  environment that enables Mingw-Make to accept crlf instead of just lf? Can someone with deeper skills in this area please explain if anything like that is possible?\n## Other ideas?\nI'll continue to dig deeper into this issue and see if i may find anything in the old 0.10.2 environment. Any type of feedback or ideas is of course welcome...\n. Regarding buildsetup.bat\nI had the same oddity with buildsetup.bat that behaved very strangely in the same way as reported in the forums but I couldn't locate any defects when i debugged it. When a renamed it and checked out the file again, everything worked as normal(!) That made me suspect that buildsetup.bat somehow was checked in with the wrong line endings. \nI made a successful build of master (rev c01c97d) on win32 by first re-check out buildsetup.bat and then re-check lib/ffmpeg with git core.autocrlf=false (only used for ffmpeg)\nUploaded: XBMCSetup-20130412-c01c97d-dx.exe to https://www.dropbox.com/sh/a7tsbe6o80rrv2a/S2NszQXp7H\n. @aballier: it might be a misunderstanding but pls let me get back to you when we have solved win32 problems. /Thank you, Lars.\n. Worth a try: https://github.com/xbmc/xbmc/pull/2604\n. 2013/4/13 wsoltys notifications@github.com\n\n@FlyingRat https://github.com/FlyingRat: short update. ffmpeg compiles\nwith gnu make 3.82 (already committed to master). unfortunately libdvdnav\nand libdvdread won't compile anymore.\nWhereas gnu make 3.81 seems to work fine with VPATH gnu make 3.82 just\nwon't find the source files anymore. if I adapt the src paths in the\nMakefile directly libdvdread will compile but libdvdnav won't due to a\nmissing rule.\nDoes any Makefile expert has an idea if this is a bug in gnu make or if\nthere's something wrong with the libdvd makefiles?\n\nMorning! I've probably built 12-14 win32 envs the last couple of days and\neveryone has worked with the \"built in\" msys-make that is downloaded to\nBuildDependencies i.e:\nk:\\src\\xbmc\\project\\BuildDependencies\\msys\\mingw\\bin\\make.exe -v\nGNU Make 3.82\nBuilt for i386-pc-mingw32\nCopyright (C) 2010  Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html\n\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nBtw, how is v3.81 involved in this case, i mean do you have your own local\nmsys/mingw installed somewhere that may conflict with the other? This is\njust speculations, but you don't think this happens to be another\ncore.autocrlf symptom as\nwell?\n. Sorry, forgot to ask if you read my other mail. You'll hopefully reconsider\nyour opinion regarding autoctrl because I'm quite convinced that the\ncorrect (and default) repository setting is after all\ncore.autoctrl=false.  I rest my case (or at least until proven wrong) :D\nhttps://github.com/xbmc/xbmc/commit/ce8efc8a71d2999539590766304e243d4530b0c0#commitcomment-3005705\n2013/4/13 wsoltys notifications@github.com\n\nv3.81 was our current make until today when I update make to 3.82. and\nagain I try to build ffmpeg with autoctrl=true as like I already explained\nwe can't use false.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2554#issuecomment-16332782\n.\n. Ok, i hear and understand what you say. But here are the facts:\ncore.autoctrl=false is the default repository setting and works without any\nproblems. If you don't believe me, please read .git/config and tell me what\nyou see.\n\nBottom line: regardless if it was the team decision to alter this flag for\nJenkins you need to find a another solution to deal with this problem.\nPlease take my advice regarding Jenkins, don't start altering code and\nother configs to satisfy things but rather fix the Jenkins setup instead\nwith for example plugins, etc. But do whatever you like, i'm just trying to\nmake a point :)\n2013/4/13 wsoltys notifications@github.com\n\n@FlyingRat https://github.com/FlyingRat : the autoctrl thing was a team\ndecision that helps us working in a mixed environment (win/Linux).\nSwitching would lead to huge problems which was the trigger to switch to\nautoctrl=true on windows systems.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2554#issuecomment-16333254\n.\n. Hey Martijn, did you actually read my mail reading the git config?? Well, 3.82\nmight be a lifesaver for win32 after all... but here are the facts (again):\n\n$ type .git\\config\n[core]\n        repositoryformatversion = 0\n        filemode = false\n        bare = false\n        logallrefupdates = true\n        symlinks = false\n        ignorecase = true\n        hideDotFiles = dotGitOnly\n        autocrlf = false\n[remote \"origin\"]\n        url = git://github.com/xbmc/xbmc.git\n        fetch = +refs/heads/:refs/remotes/origin/\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n[branch \"Frodo\"]\n        remote = origin\n        merge = refs/heads/Frodo\n[remote \"upstream\"]\n        url = git://github.com/xbmc/xbmc.git\nfetch = +refs/heads/:refs/remotes/upstream/\nPlease stop blaming ffmpeg or anything else since this obviously a pure\nCRLF problem that you brought in yourselves when\nyou started to override the default setting with core.autocrl=true.\n2013/4/13 Martijn Kaijser notifications@github.com\n\n@FlyingRat https://github.com/FlyingRat\ncore.autoctrl=false is a no go end of story. Period!\n@Voyager1 https://github.com/Voyager1\nWhat did you else change to get it compiled?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2554#issuecomment-16333262\n.\n. Well, ignore or override, the end result just became the same. OO for now...\n\n2013/4/13 Martijn Kaijser notifications@github.com\n\nno i am ignoring that false statement\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2554#issuecomment-16333918\n.\n. > and since you obviously did not pay attention due to chasing some ghost we already have ffmpeg build\nbut are now stuck at libdvdread\n\nSince i'm not using a build server like Jenkins (where core.autocrlf=true) i don't have this problem. Like i said, i'm using the standard git setting that comes with the xbmc repo and it works perfectly well because the effective default setting of core.autocrlff is false which compiles everything without any problems (with default gmake 3.81).\nSo I'm sorry, but you are on your own on this one.\nOO & AWFK - definitely this time since my wife is shouting now! :)\n. Yes i know, but that's not the recommended settings for ffmpeg and libav on\nWindows. I've also posted about this issue on the forums:\nhttp://forum.xbmc.org/showthread.php?tid=156303&pid=1363840#pid1363840. But\nyou are probably correct, and the following guys are obviously wrong and\ndon't know what they are talking about regarding core.autocrlf ;-)  [?]\nhttp://stackoverflow.com/questions/2825428/why-should-i-use-core-autocrlf-true-in-git\nhttp://ffmpeg.org/git-howto.html\nhttp://libav.org/download.html\nhttp://libav-users.943685.n4.nabble.com/Libav-user-makefile-problem-on-win32-MinGW-td4657083.html\nBut when/if you find an alternative solution you could do them a favour and\npost that solution on their forums. Need get back to the family again.\nLater dudes!\n2013/4/13 Sascha Montellese notifications@github.com\n\n@FlyingRat https://github.com/FlyingRat: You should read the \"Git\nUsage\" article on our wiki: http://wiki.xbmc.org/index.php?title=Git_Usage\nIt clearly states that you have to set core.autocrlf to true. It doesn't\nmatter whether you use jenkins or anything else, every dev committing\nsomething to XBMC needs to set core.autocrlf to true because otherwise you\nrun into problems when people from different platforms (Windows vs.\nlinux/osx) commit stuff. Even github has a page stating that anyone using\ngit on Windows should set core.autocrlf to true.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/xbmc/xbmc/pull/2554#issuecomment-16334816\n.\n. I need to supply a video sample for a patch submitted upstreams as a rfc to\nffmpeg. Does anyone know where to find the video file \"brokenStream.mpg\"\n(or similar) that is related to patch 0015 below?\n\nhttps://github.com/xbmc/xbmc/blob/master/lib/ffmpeg/patches/0015-fixed-memleak-in-mpegts-demuxer-on-some-malformed-mp.patch\n\nFrom b83c9a2505338cdf021dd499c26686e82bcbc066 Mon Sep 17 00:00:00 2001\nFrom: Joakim Plate elupus@ecce.se\nDate: Fri, 26 Nov 2010 20:56:48 +0000\nSubject: [PATCH 15/24] fixed: memleak in mpegts demuxer on some malformed\n(??) mpegts files with too large pes packets\nat-visions sample file brokenStream.mpg\n. Notepad is unfortunately quite worthless when it comes to line ending problems. Use for example wordpad (or notepad++) that will show any screwed up line endings. But still, my experience is more or less the same: a checkout or wordpad+edit+save will solve the problem.  Sigh, an extremely annoying problem!\n\nI'll retry with my own branch again this time with some alternative git config settings...\n. Hmm, feels like we reached the phase that requires a wizard tool: hexdump :)\n. av_read_frame_flush was just renamed to ff_read_frame_flush and then hidden with some rather \"dirty\" tricks but is quite easy to revert if you want to: http://ffmpeg.zeranoe.com/forum/viewtopic.php?f=23&t=261. The wrapper av_read_frame_flush should still be ok to use since 0024-add-public-version-of-ff_read_frame_flush.patch is still in effect but i would rather get rid of that patch in the long term... \n. Whatever happens to the current patch, i would just like to confirm that @Memphiz suggested fix works a well.\n\n@Memphiz wrote:\nhttp://pastebin.com/b8uShdp9\n. Whatever happens to the current patch, i would just like to confirm that\n@Memphiz suggested fix works a well.\n@Memphiz wrote:\nhttp://pastebin.com/b8uShdp9\n. You can just add the patch in a separat commit on the same branch and it will show up here automatically. You can create a patch by for example running \"git format-patch --stdout HEAD~1 > patches/patch-number+brief-desciption.patch\" from within the lib/ffmpeg directory. \n. Would you mind changing the patch number to some different since patch number 31 is already in use: \"0031-ARM-vp56-allow-inline-asm-to-build-with-clang.patch\". Check for used numbers also in patches/obsolete-patches.\n. Flushed & pushed.\n. ping?\n. Ok, i'm not sure i follow you but wouldn't that change behavior since the original test was after all \"m_Subtitle.pts != DVD_NOPTS_VALUE\" ?\n. m_Subtitle is a result from:\n\"m_dllAvCodec.avcodec_decode_subtitle2(m_pCodecContext, &m_Subtitle, &gotsub, &avpkt)\"\nand then you have:\n\"avpkt.pts = pPacket->pts == DVD_NOPTS_VALUE ? AV_NOPTS_VALUE : (int64_t)pPacket->pts;\"\n\nAre you referring to a check like \"(pPacket->pts == DVD_NOPTS_VALUE) ??\n. Thanks, got it! btw, is the lack of pts by design caused by fuzzy format specifications or the result of bad encoding?\n. ",
    "petriposio": "Reverted consuming of NOOP actions caused by mouse events.\nIn my opinion those should be used at least to wake up from a screensaver and to reset idle timers. Now they are split apart and called from every single device processor.\n. @jhsrennie yes that was the first thing i thought and tried. It's possible to change the mouse cursor of the skin. The biggest problem is not the visual part but the fact what skins and XBMC do after getting a mouse activated. The focus changes to the point where the cursor happens to be and naturally my select action does not what intended. Dialogs and side panels may pop up or close randomly.\nOne of the first things the mouse handler does is \"blind\" mouse activation, and no xml or script can change that. I've always liked the customizability of XBMC but this was a problem i just wasn't able to affect without changing the code. The only special case needed is what to do with NOOP actions from mouse.\n@jmarshallnz is there still problems? g_Mouse.SetActive in CApplication::Initialize() is needed to hide the OS cursor initially (otherwise it will not hide until the CMouse.SetActive() is called in an event). In fact it hides a lot faster because on current master the OS cursor is disabled only after the splash screen.\n. @jmarshallnz sorry for wasting time... reverted everything and made the minimal changes to get this feature work. I should just learn to make proper minimal pull requests. I got distracted when i saw some strange things (in my opinion) and wanted to make a difference.\n. Rebased and made it consume ACTION_NOOP everytime. Though it be might quite odd behaviour to consume events \"randomly\" but anyway there must be a reason if user maps a mouse action to NOOP. For example wheel might be as sensitive as moving so let's be sure and consume every mouse event.\n. SetActive() doesn't set MOUSE_STATE. Honestly I have no idea where the current logic comes from. I just wanted to be sure and kept the same logic but added an exception for NOOP.\nIsn't the mouse state used almost exclusively to set the mouse cursor image? If that's correct your code should do the job.  Luckily the most dangerous outcome is that we'd have an incorrect cursor.\nI let you make the call.\n. So do you make your own push or should i change this?\n. ",
    "Pulfer": "It may be just a workaround indeed. But I'm very new to XBMC code and UPnP internals in general so I don't know better solution. Someone else must take a look.\n. That's an interesting question. I don't see anything playlists-related here:\nhttps://github.com/andoma/showtime/blob/master/src/upnp/upnp_browse.c\n. I tried to check how Showtime handles m3u playlists but looks like XBMC doesn't provide them via UPnP at all yet? And doesn't provide music smartplaylists as well?\n\n. It's about video SmartPlayList type of playlists. \n. @elupus >> Strange, then I wonder why this change is needed. IsFolder() aught to be true.\nDo we have this issue assigned to someone, BTW? \n. Now Showtime loads playlists & smart playlists fine. Both music and video.\nBut if I load music playlist and return to root of the library, I can no longer enter Music Library.\nThe response is: http://pastebin.com/625kQSyc\nBrowsing music by genres also fails: http://pastebin.com/jica6Pna\nBrowsing music videos from Music Library fals as well (and looks much like http://trac.xbmc.org/ticket/14239 ): http://pastebin.com/HEkUcZPZ\nPerhaps there are other recently introduced issues but these are enough for now, I guess. \n. BTW, is it possible to add common playlists feature for music videos in future? \n. Manually selected music videos, added to the list. Could be useful for genre- or year-based favorites, for example. \n. Oh, well, it's getting too much offtopic here. Sorry.\n. > Looks like #2182 has possibly caused some weird behaviour, the path handling in UPnPServer is pretty fragile\nSeems to be not fixed yet in latest master.\n. Done: http://trac.xbmc.org/ticket/14277\n. ",
    "magnyld": "Wouldn't this be easily fixed by adding text eol=lf for ffmpeg in the .gitattributes? Instead of depending on a make that hopefully handles crlf correctly on windows.\n. ",
    "louis89": "Oh yeah... You're right! Unfortunately it took some time searching to find any mention by an XBMC team member that this is the plan. Specifically, I found your posts about it buried in this thread http://forum.xbmc.org/showthread.php?tid=149489.\nIt probably would be a good idea to add a note about this to the wiki sections that discuss MySQL...\nI trust in the XBMC team that a better solution than MySQL will arrive, eventually, but in the meantime I need SSL working in my setup. The code I have added here isn't very complicated and I am a little surprised it wasn't part of the initial MySQL integration with XBMC. I guess I'll have to merge this code into future updates and build XBMC myself, at least until I can find a better solution.\n. I believe you may be correct, but C++ isn't my best language and there certainly are a few gotchas hidden in it. I chose to reinitialize those variables to avoid stepping on the toes of whomever made the design choice to reinitialize everything for both MySQL and SQLite. If you notice all variables are reinitialized except \"sequence_table\". Granted some of the variables are initialized with different values, but some are not.\n. @jmarshallnz Thanks for reviewing my code. Just wanted to mention I made your suggested changes a few days ago. I haven't used github for a large open source project before so I am not certain how or if notifications of additional commits to a pull request propagate. I got the impression from the comments that this addition was simple enough to be added even though MySQL support will eventually be dropped. Since this hasn't been merged yet I am assuming that my last commit may have gone unnoticed.\n. @Montellese Cool! Thanks a lot for taking the time to explain the process, much appreciated!\n. ",
    "MarcBridner": "It'd be great if you also patched OMXPlayer, since its used on the rpi.\n. I think as it is now it also creates CircularCache's for external subtitles as well, seems a bit wasteful to have them for a 50kb file...?\nEDIT: As for complexity. This patch is really needed for RPI's streaming HD over the internet (from FTP or whatever). You may argue that it isn't a supported usecase (or just plain dumb), but people do that... and I'd rather have it in master than have to maintain my own branch :)\nEDIT2: Seems there is an issue with external subtitles. If you cycle through them rapidly they'll eventually fail to open, possibly due to them being cached in a cache that no longer exists (Just guessing here..)\n01:07:22 T:2746160192   DEBUG: CFileCache::Open - opening  using cache\n01:07:22 T:2746160192   ERROR: Open - Unhandled exception\n01:07:22 T:2746160192   ERROR: Open - Error opening ftp://xxx@aaa.com:21/somesubtitle.en.srt\n01:07:22 T:2746160192   ERROR: OpenStream - Unable to create subtitle parser\n01:07:22 T:2746160192 WARNING: OpenSubtitleStream - Unsupported stream 0. Stream disabled.\n. External subtitle is a subtitle that is not embededed inside the movie container, that is a \".srt\" (or one of the other subtitle types) file residing next to the movie on the same file system as the movie.\nReproduction steps, assuming you have a remote control with a \"switch subtitle button\", or know which key that function is normally bound to in XBMC:\nFind an mkv file or something with an embedded subtitle (not 100% sure this is needed)\nFind two external subtitles and name them .xx.srt where xx is a 2 letter language code. \nStart playback.\nPress the switch subtitle key once every 1-2 seconds. After 2 or 3 complete cycles you should see something about failing to open the file in the log and the subtitle no longer appears on the screen.\nI'm pretty sure it'd be fixed by limiting files with subtitle extensions to the file cache only, not the circular buffer.\n. ",
    "Jose123456": "Apparently the way to detect the level of SSE support on VC++ is to examine the _M_IX86_FP macro:\nhttp://msdn.microsoft.com/en-us/library/b0084kay(v=vs.80).aspx\nI can add this logic to the patch, if you like, but I'm wondering where is \"SSE\" defined for Windows platforms right now?\nI understand the desire to move on, but what if there's a new x86-based embedded platform in the future that supports SSE1 and not SSE2?\nAlso, I would never have even tried XBMC if I didn't have an old Shuttle SFF lying around doing nothing that I could play with. Requiring modern hardware will reduce the tinkering potential.\n. @wsoltys I did extend AEUtil.h to detect SSE2.  I'm motivated to keep XBMC working on my old SFF so I'm willing to help with your installer if you like and if I'm able.\n. I missed the place where the _M_IX86_FP  macro is checked in AEUtil.h. Fixed to detect SSE2 on Windows.\n. ",
    "olympia": "so what is the conclusion? By the way, we are not risking regression here. Lee, Zag and I are trying to fix something (musicvid scraping) and get it to somewhat to a working level what was useless if not completly broken for very long time.\n. Is there still some blocking reason to push this to master? As said in my opinion this sould be pushed to the Frodo branch as well, I do hope you are not against it Davilla :)\n. ",
    "akileh": "I use this to turn off my tv via cec by pressing remote button. It also wakes it with any button without any other action being performed. This would have been more difficult to achieve wih display sleep/wake/toggle.\nI think Dim is a screensaver like any other and should work fine.\n. ",
    "lordanubis3": "The issue is flashing whites lines(two) on the screen for my setup(macbook pro mid 2010) with my nvidia card(320M). this began when the use of cvBufferRef was made available on frodo. maybe the problem is elsewhere in the code but when i put that flag to false the line is gone. on mac mini 2009 the problem is also solved(pecinko tried a master custom build from me and gave me is feedback that it was ok on his setup). This problem was talked a lot of times in the xbmc forum. \n. The lines appear(in my case) at the right and bottom of the video.and are not sporadic but all the time i play a video that is vda acelerated...tried with 480p and 720p i think 1080p does not happen.one user in the forum talked about the way the decoder handles anamorphic videos created in handbrake. It could be some resolution problem that vda decoder does not calculate correctly....i dont know\n. I think it happens to all files bellow the 1080p resolution....maybe the scaling could be the problem....so the pull is better not going forward.better the devs could see what can be done?\n. Macbook Pro mid  2010 with 320M, DP to HDMI adapter, OS X 10.8.3\nPhilips 32\" LCD TV, 1080p, 60Hz\nVsync on, adjust refresh rate enabled, sync to display enabled\nNo overscan on TV(unscaled option on tv), no extra calibration turn on in XBMC - it's properly calibrated with XBMC default settings like pecinko commented.\nI have test without having the macbook connected to the tv and also happens with the computer lcd monitor. In my case i have right and bottom lines.\n. Hello, \nAny news on this issue? Is necessary any more info?\n. ",
    "pecinko": "Yup, does not happen on 1080p, only on 720p and below. Tested on Mac Mini 2009 with nVidia 9400, using HDMI output and calibrated Panasonic plasma TV. Turning cvBufferRef off helps get rid of those lines. Otherwise, except for those lines, playback is fine with cvBufferRef enabled.\n. Here you go: http://db.tt/raHHT9Lt\nBTW, just noticed that turning debug logging ON seems to affect line problem. When I first turned debug on, line disappeared completely. In second test line was there but it was disappearing sporadically.\nPlaying test clip (I've chopped beginning of a movie in Quicktime) without debug turned on should show it almost immediately. \n. Mac mini 2009 with 9400, DP to HDMI adapter, OS X 10.8.3\nPanasonic 50\" plasma TV, 1080p, 60Hz\nVsync on, adjust refresh rate disabled\nNo overscan on TV, no extra calibration turn on in XBMC - it's properly calibrated with XBMC default settings\nI have tested some - line appearance is affected to some extent by skin (720 vs 1080) and aspect ratio of a video played. It is always there, just sometimes less visible. \nHere are some more screens form both XBMC settings and player (played in Confluence) as well as a new video where both bottom and right lines are very visible http://db.tt/S3D3J34v  (48Mb)\n. ",
    "cusquinho": "Mac Mini 2009, Nvidia 9400M, DP to HDMI adapter, OS X ML 10.8.3\nPhilips 42'' Native Mode LCD, 1080p, 60hz\nVsync on/off (both same issue), no overscan\nHere's a screenshot of some of the white \"lines\" I get:\nhttps://www.evernote.com/shard/s3/sh/b3f06090-99fc-4579-852a-818bd75db55f/c6c16f59eb9e077dfd334025d25f53d0\nLet me know if you need any additional information. \n. ",
    "MaDDoGo": "Hi,\nthe tokens for formatting are python's ones???\n. Well, those are examples of Spanish dates:\nShort format: 31/07/1986\nLong format: \"dayname\", \"daynumber\" de \"month\" de year .. Example: Mi\u00e9rcoles, 24 de Abril de 2013 (Today)\nDate formats seems OK, but I don't know what ' are for.\nCheers.\n. ",
    "vkosh": "I actually wonder why do recordings have string IDs? Maybe for some backend-specific historical reasons. But 1024 is the length of PVR_RECORDING.strRecordingId.\nI propose to use VARCHAR(255) with value length check during serialization to prevent overflow, or maybe just to use TEXT type.\n. ++\n. Yes it does work because boost:shared_ptr overloads operator, and epgTag->foo() - doesn't because CFileItem hasn't constructors for Ptr types.\n. ++ for storing epg tag pointer.\n. It doesn't work this way actually because item is of CGUIListItemPtr type, which sould be casted to CFileItem to get epg info.\nThe only alternative to the cast is to create fileItem explicitly and get the tag from it, e.g.:\nCFileItemPtr fileItem(new CFileItem(*item));\nor\nCFileItemPtr fileItem(new CFileItem(item.get()));\nand then\nfileItem->GetEPGInfoTag()->GenreType()\n. It's just here for readability. The code is similar to one for playing channel by id above (see line 515).\n. IMO the separate buttons is better in two reasons: usability of shift button and ability of symbols charset extention (e.g. separate charsets for symbols and for shift+symbols).\n. Added onlyCheckLanguage check (not used though).\nAs for moving main layout loading down the locale specific langinfo.xml check - the main layout must be loaded in any case otherwise keyboard dialog will not work.\n. Yes. The keyboard dialog don't work without layouts, so at least main one should present. The previous layouts should remain in case of error. \n. I need std::wstring's to get utf8 character by its index. std::string works with bytes.\n. Fixed\n. Ok\n. There are two fixed layouts because they are related to languages: main - for default language (English) and alternative - for user language. So user can't select more than two layouts.\n. Removed pair and renamed map. Map type can be used outside by calling static LoadKeyboardLayouts.\n. I tried to implement the layouts in less invasive way for skins in the start of the PR. But in current concept I can't see a way to implement layouts without breaking skins.\n. Removed operator!= and added HasAltKeyboardLayout.\n. Yep\n. This leads to errors of passing \"this\" as const (even with const modifier for related KeyboardLayout getters).\n. Good point, but I still think that shift and symbols are quite a different kind of modifiers to merge them on one button. Shift just changes letters case while symbols turns on sublayout with totally different charset (so it's not a modifier actually).\nI've found two kinds of virtual keyboards: with (for example http://goo.gl/B946t6) and without (http://goo.gl/LbwHGC) symbols switch. The first kind used when there is no much space to place digits and symbols with letters (that's our case), and the second one uses shift as the symbols switch for digits row.\nWe could add more symbols sets in the future (e.g. smiles or whatever) and use cycling for \"symbols\" button. But \"true\" modifiers should be represented as standalone buttons I think.\n. I agree, but all loaded layouts should be accesible from the one place (e.g. for settings). On the other hand the second instance of CLangInfo is redundant for loading layouts only except of using separate method for this. The implementation will depend on chosen solution between two fixed/multiple user selected layouts.\n. Ok. I'm not a C++ programmer as you have probably noticed :) So if you suggest a solution I will appreciate.\nI have utf8 string in std::string and I need to have utf8 std::string on output containing i'th character of s. Something like code below but for utf8:\nstd::string strIn = \"...\";\nstd::string strOut;\nstrOut = strIn.substr(i, 1);\n. I agree, cycling is better in UI. As for more than two layouts (more than one per language) - I just can't imagine the use case. Why user whould want to switch between ABC and QWERTY or even more within one language layouts set?\n. Thanks for the aiming. I'll think about this when we come to solution with modifiers and layouts switching.\n. Such an initialization is everywhere in pvr code. Should I change it for the PR related code or everywhere?\n. tag can't be null here otherwise a lot of stuff will break. But ok, I'all add the check.\n. Just removed the ITR types ) As @jmarshallnz mentioned in https://github.com/xbmc/xbmc/pull/4242#discussion-diff-12038835 map typedefs have CamelCase style. So what's the naming convention for iterator types? Is there any coding style document?\n. See https://github.com/xbmc/xbmc/pull/3900#discussion-diff-8560519\n. CPVRRecordingUid used as a key in std::map\n. Yep there is PVR_VIRTUAL_CLIENT_ID (-1) in PVRClient.h\n. ",
    "diederich": "Thanks for jumping in @Memphiz - and yes, sounds sane what memphiz says.\n. ",
    "midgetspy": "I did it this way because it is common functionality that I wanted in the base class. If I added it to Configure I would have had to pass the cropping rect to every BaseRenderer subclass and duplicate the same code into each Configure implementation.\n```\n\n```\nFrom: Rainer Hochecker notifications@github.com\nSent: Thursday, March 24, 2016 12:28 AM\nSubject: Re: [xbmc] Enable cropping of video frames  (#9437)\nTo: xbmc/xbmc xbmc@noreply.github.com\nCc: Nic Wolfe nic@wolfeden.ca\nIn xbmc/cores/VideoPlayer/VideoRenderers/RenderManager.cpp:   > @@ -349,6 +353,9 @@ bool CRenderManager::Configure()>        return false;>    }>  > +  // configure the renderer to crop if necessary> +  m_pRenderer->ConfigureCropping(m_cropBottom, m_cropTop, m_cropLeft, m_cropRight);   \nwhy an extra method? cropping rect can be passed with configure   \n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub                            \n. Well some of those are required for other purposes in Configure but in general yes I believe there are more parts of that method that are common and could be refactored into the base class. This being my first time in the code I didn't want to refactor the world, I just didn't want to make it any worse. I also wasn't quite sure how to test my changes if I were to refactor every renderer since I can only build and run CWinRenderer.\nI also think more smaller functions is more maintainable.\u00a0\nThat said when I change it to a CRect it'll be less of an issue since it'll be one param and one line I'll have to duplicate in every renderer instead of four so if you prefer that I can do that.\n. "
}