{
    "edward": "Awesome :)\nLooking forward to seeing a new dashboard for DA\n. ",
    "pushmatrix": "The beauty of running on a free heroku instance :P.\nIt should be back up now.\n. @utkarsh2012 Not sure I understand the question. There is indeed a graph widget\n. Currently the graph widget only supports 1 timeseries. It's pretty easy to customize it to add more though.\nThere is also an iframe widget. Does Graphiti expose any embeddable charts?\n. Good call on having it not show up if the widgets don't move. It will be especially helpful for mobile devices where fat fingers tend to nudge the widgets.\nI'd prefer it if the 'Save Layout' dialog only shows up when the widgets are moved. Having it only pop up on the first nudge seems weird to me. People will discover the ability to drag since the default dashboard makes mention to that functionality. Also, as soon as people see that you can move a widget around, it won't take long before they start dragging it all over the place.\nWhat do you think of something like this:\ndashing.gridster.coffee\n``` coffeescript\nDashing.getWidgetPositions = ->\n  $(\".gridster ul:first\").gridster().data('gridster').serialize()\nDashing.showGridsterInstructions = ->\n  oldWidgetPositions = Dashing.currentWidgetPositions\n  Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\nunless JSON.stringify(oldWidgetPositions) == JSON.stringify(Dashing.currentWidgetPositions)\n    $('#save-gridster').slideDown()\n    $('#gridster-code').text(\"\n      \\n\n      $(function() {\\n\n      \\ \\ Dashing.gridsterLayout('#{JSON.stringify(Dashing.currentWidgetPositions)}')\\n\n      });\\n\n      \n    \")\n```\nAnd then inside application.coffee, the last line of setImmediate could set the initial widget positions. There shouldn't be a race condition.\napplication.coffee\ncoffeescript\nBatman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n    Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n. What's unfortunate is that Gridster has a defective function for showing what widgets have changed: serialize_changed. It returns an array of all moved widgets....but it unfortunately also returns widgets that have only been nudged.\n. Hmmm. What if we update the current position of widgets at the start of the drag, and then compare that and the end of the drag? It unfortunately involves having to serializing the positions every time you start dragging, but the perf hit shouldn't be too bad, especially since the main functionality of the widgets is not to be constantly dragged around.\ndashing.gridster.coffee\n``` coffeescript\nDashing.showGridsterInstructions = ->\n  newWidgetPositions = Dashing.getWidgetPositions()\nunless JSON.stringify(newWidgetPositions) == JSON.stringify(Dashing.currentWidgetPositions)\n    Dashing.currentWidgetPositions = newWidgetPositions\n    $('#save-gridster').slideDown()\n    $('#gridster-code').text(\"\n      \\n\n      $(function() {\\n\n      \\ \\ Dashing.gridsterLayout('#{JSON.stringify(Dashing.currentWidgetPositions)}')\\n\n      });\\n\n      \n    \")\n```\napplication.coffee\ncoffeescript\nBatman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n        start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n. Looks good! Squash your code into a single commit, and I'll merge it in.\n. Should be up now.\n. This is a great idea. I can imagine a lot of rails projects benefiting from this.\n@cbeer looks like you're on the right track! I'll play around with this when I get some time.\n. I'll look into this.\n. The fix is on master. The issue is that the AnimatedNumber filter uses SetInterval to do the animation, but I did not specify the delay for it. Chrome interprets this as \"RUN AS FAST AS YOU CAN\", but Firefox is a bit more of a stickler and decides not to run.\n. Yeah it is. I'll close this one.\n. One thing that would need to be taken care of is the fact that the ruby jobs get loaded & started with each instance of the app. That means that having 4 unicorn workers would spin up 4 job schedulers. The scheduler is very simple, and does not run off a queue, meaning that more schedulers will just duplicate jobs.\nIf you have an idea for getting around this, I'm all ears. However, I don't want to make the job DSL or setup more complicated. The beauty of Dashing is that you can start it up out of the box without needing to worry about much. If it means you now have to spin up a separate job server, then that would suck (unless its taken care of for you through a Procfile or something like that).\n. Awesome! Keep in mind too that everything should stay deployable to heroku.\nI've seen that heroku plays nicely with unicorn, so I guess it shouldn't be\na problem.\n. For option 2, you could create a lock file for the scheduler instead of for the jobs. That way, only one of the unicorn workers will have a scheduler running. \nAfter a bit of googling, turns out that this is a popular question for rufus-scheduler. Not sure if this article gives you any further insights.\n. Redis is good at locking, but then you also have to worry about running redis. I do agree that multiple instances is overkill though. The only use case would be if your dashboard is public facing and getting a ton of traffic.\n. Awesome! \n. Dashing uses Gridster.js for its layout, and as such is bound by the responsive capabilities of that library. In its original state, it does not support auto-resizing, but there has been much discussion about it over at https://github.com/ducksboard/gridster.js/issues/5.\nThere is one way to configure Gridster such that it will attempt to auto-layout the widgets based on the screen dimensions. The drawback is that the layout is only applied to the initial size of the window; if you resize, nothing will happen. To get this to work, go inside your application.coffee file and remove the line\nDashing.numColumns ||= 4\nAlso make sure that you don't have any custom Dashing.gridsterLayout() config at the top of your dashboard's erb file.\nDashing's original use case was to display dashboards on 1080p tvs in a deterministic fashion. Libraries like Masonry.js were tried at first, but the issue was the widgets wouldn't necessarily render in the same spot, or in visually appealing layouts.\nAlthough responsive wasn't the initial goal, I'd love to see something that makes this possible for Dashing. Any suggestions are welcome.\n. Not sure why this would be happening. For my own dashboards, I'm running OSX Lion with ruby 1.9.3-p194 without problems, and I'm loading in tons of libraries and jobs.\nMight sound silly, but are you loading any libraries inside of adder.rb, or are you doing anything computationally expensive? If adder.rb is empty, does it still do the same?\n. The lib directory is not meant to run code, but rather to supply helper methods & classes for your jobs. If you have any executable code in there, it will run as soon as Dashing starts. Since you're calling sleep 1000 times, that would explain the slow load.\nPlacing adder.rb in your root folder won't cause a problem because the file won't be loaded/run. The only autoload paths are in jobs & lib.\nIf you want to do something every 0.2 seconds, your best bet is to use jobs. Each job is threaded, so you can do more expensive stuff in there.\njobs/adder.rb\nruby\nSCHEDULER.every '0.2s', :first_in => 0 do\n  system `echo \"#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{Time.now}\" >> C:/Users/winmais/code/anas_dashboard/fake_data`\nend\n. Good call. I was requesting a feature like this over on #7.\nHere's where the awesomeness that is Server Sent Events comes in. You can actually specify event names, which will act like channels. You can thus have a channel for all widget related messages, and a channel for all dashboard related ones. If you don't specify an event name, it defaults to the 'messages' channel.\nYou specify event names by formatting the SSE like:\nruby\ndata: {\"msg\": \"My message\"}\\n\\n\nevent: widget_update\\n\nThen in js land, you would attach an event listener to that event:\ncoffeescript\nsource.addEventListener 'widget_update', (e) =>\n  ...\nThis way there wouldn't need to be any parsing of the data id. SSEs are so cool. Here's an awesome article about them: http://www.html5rocks.com/en/tutorials/eventsource/basics/\n. Any interest in changing the implementation to use the event field I mentioned above? If not, I can modify this PR. I think it's a cleaner approach.\n. Awesome!\nNo pressure though. I was just wondering what the status was on this.\n. By restart, you mean just refresh the page right?\n. It's definitely something that's been on my mind, and something that will be needed. I'm still trying to decide on the best way to host the widgets. \nThe two options I see so far:\n1) A single repository where people submit pull requests for their widgets.\n2) A wiki page that contains links to people's widgets. The widgets would be hosted by the maintainers, and could be stored in gists or could be in their own repos.\nI'm leaning towards the second option. It would be easier for people to update their widgets without having to issue pull requests for every change. I sometimes feel bad for the guys over on the Homebrew repo, who have to be merging in tons and tons of requests all the time.\n. I don't see how it'd be harder than having a git repo filled with widget\ndirectories. If anything, the wiki would provide a field for people to add\na description, which would provide more context if you're doing a page\nsearch.\nOn Mon, Nov 5, 2012 at 11:40 PM, SeanJA notifications@github.com wrote:\n\nA public wiki might get a lot long and be hard to search though...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/14#issuecomment-10099022.\n. Apologies for the delay in adding this.\n\nI've added the wiki with a sample widget, and instructions on how to contribute: https://github.com/Shopify/dashing/wiki/Additional-Widgets \n. Just use simple http/Ajax calls. I really don't see the need to overcomplicate things with web sockets.\n. Are the communicating widgets on the same dashboard, or is this across dashboards? More importantly, when you pick a state on the map, does it need to sync with the graph widget of every open instance of the dashboard, or is the change only local?\nIf changes are local, then it's really simple to achieve: You can observe the state variable in your Map widget.\nPut the following in the ready: -> block of your graph widget.\ncoffeescript\nDashing.widgets.map_widget_name[0].observe('state', updateFunction)\nNow make sure that when you pick a state, it calls set to set the state variable. Ex: set('state', 'Texas'). This will trigger the observer that your graph widget setup, and will end up calling the updateFunction. \nLet me know if that works for you.\n. What browser are you on?\n. Can you try the latest master? I believe I fixed this issue with 837cf50007ef8cbd7ec017d4e8cb67adc5725568. Let me know if it now works on Firefox.\n. Do you mean set a default dashboard?\n. You'll want to make sure you only ever have 1 instance of Dashing running at a time. If you have more than one, there will be multiple job schedulers, which will cause duplicated jobs to fire. Is there a way to limit it in passenger?\n. This article seems to suggest a similar problem with a different gem: http://stackoverflow.com/questions/12130162/cucumber-fails-with-json-encodinginvalidbytesequenceerror\nLet me know if that export they suggest works for you.\n. Dashing only works on ruby 1.9.\n. Thanks. It's back up now.\n. Let's create that custom widget wiki this week.\n. Hey,\nGood catch. I mistakenly added a ? to the end of the redirect line. I fixed the wiki with an example that should work.\n. I will be adding a wiki page shortly. Rather than add all of these custom widgets into the repo, they will be added to the wiki along with any supporting instructions on how to use them.\n. Points takes an array of hashes containing x,y. Check out how the sample dashboard job is doing it:\nhttps://github.com/Shopify/dashing/blob/master/templates/project/jobs/convergence.rb\n. Closed by 5934a2729d.\n. In the json you're sending, are you passing in value: or text:? Meter widgets take the former as input.\n. I should document the widget's APIs better. Number takes in a current value, and an optional last value (to show a % change). Don't be afraid to open the widget html files to see what it expects under the hood :P\n. Discussion started on https://github.com/Shopify/dashing/issues/5\nI'm not sure where @cbeer is with his branch, but he had a work in progress for mounting dashing into rails.\n. Are there any errors in the console? What browsers are you on?\n. I have not been able to reproduce this issue. However, some googling of the error message seems to suggest it could be interference from a Chrome extension. Try disabling all your extensions, and see if it still freezes.\n@florian-bayer: We tried using MK802s for our dashboards at Shopify, but those things ended up being crap. They would overheat all the time, and would boot only half the time.\n. Two more questions: \n- What type of server are you running Dashing on?\n- Does this dashboard (http://dashingdemo.herokuapp.com/sample) freeze for you? Or is it only your own custom one.\n. @dieterdemeyer Are you also only using the API, or are you using jobs to push data to the widgets?\n. Ok I have an idea, go inside your number.coffee, and remove this line:\n@accessor 'current', Dashing.AnimatedValue\nThen tell me if it's still freezing up. I'm wondering if it's an issue with the number animation...\n. No, leave that one as is. Then we'll see if that's the one that jams up.\n. How long till it freezes?\n. @dieterdemeyer: This is still an issue for your right? Only on firefox?\n. I'm going to look into this more this week.\n. An ugly workaround for now would be a good ol' meta refresh\n<meta http-equiv=\"refresh\" content=\"3600\">\n. @mpavlov How long do you have it running before it craps out? \nAlso, are you running the server on that same laptop, or on a diff server?\n. @sikosis There's a possibility that the scss changes over time. As long as your dashing project is in source control, you'll be able to see what has changed when you copy the new files over, and pick the parts that you want to keep.\n@mcookDaxko: You don't have to do anything for sass to compile. What type of change are you making?\n. It's a totally valid use case, and would make for a good extension. If you can figure out how to make it as a gem, that'd be ideal.\n. I wish it were as simple as just putting an href tag. What I've done in the past is put something like this at the top of my dashboard's .erb file:\n<script type='text/javascript'>\n$(function() {\n  $('li').live('click', function(e){\n    var widget = $(this).find('.widget');\n    var url = widget.data('url');\n    window.location = url;\n  });\n});\n</script>\nThen in my widget I can set the data-url attribute to my link.\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-id=\"karma\" data-url=\"http://www.shopify.com\"></div>\n</li>\nDashing wasn't originally designed for interactive widgets, so this area could definitely be improved. If you find a better way, please let me know.\n. IE doesn't support server sent events, which is the core mechanism behind Dashing. IE 10 might support it if that's a possibility for you. \n. Does the following work?\nexport LC_CTYPE=en_US.UTF-8\nexport LANG=en_US.UTF-8\ngem install dashing\nI forgot to specify utf-8 encoding in the gemspec for Dashing. I'm pushing that to master now. \n. Did this work?\n. Awesome.\n. Just added this to the wiki. Let me know if it works for you.\nhttps://github.com/Shopify/dashing/wiki/How-to:-Add-authentication#wiki-httpbasic\n. Yep, it's totally possible!\nIn fact, the graph widget currently uses Rickshaw.js, which is a nice library built on top of D3.js\nTake a look at the code over here: https://github.com/Shopify/dashing/tree/master/templates/project/widgets/graph\n. The sample job that feeds that widget is over here: https://github.com/Shopify/dashing/blob/master/templates/project/jobs/convergence.rb\n. It's an indentation issue. If you notice, the lines after ready: -> are not indented, meaning that they are going to be run immediately as the file is required, instead of when the widget is ready.\nHere is your function with fixed indentation:\n``` coffeescript\n  ready: ->\n    @chart = new Highcharts.Chart\n      chart:\n        renderTo: \"HCcontainer\"\n        type: \"line\"\n  series: [\n    name: \"Tokyo\"\n    data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]\n  ,\n    name: \"New York\"\n    data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]\n  ]\n\n``\n. Nice! Thanks for that.\n. Are you trying to deploy the default dashboard that comes with Dashing? That one should work by following the instructions here: https://github.com/Shopify/dashing/wiki/How-to%3A-Deploy-to-Heroku\n. You can tryheroku ps:scale web=1to make sure you have a web process running, but you shouldn't have to do that.\n. Ah, I see. You'll need to run your dashing project at least once before pushing to heroku. Or you can justbundle installbefore you commit the files. I've added that to the wiki. Let me know if that works for you. \n. Didheroku ps:scale web=1do anything?\n. I'll assume this is fixed. Let me know if it isn't, and I'll re-open the issue.\n. This will be solved when #48 is pulled in.\n. In the case of sorting, it gets a bit trickier. Even if you re-order the array of data coming in for a list, the DOM will not reflect the changes. This is because Batman.js only re-orders lists if the data is aBatman.Set, and not just a regularArray`.\nIn your list.coffee, try adding the following:\ncoffeescript\nclass Dashing.List extends Dashing.Widget\n  onData: (data) ->\n    sortedItems = new Batman.Set\n    sortedItems.add.apply(sortedItems, data.items)\n    @set 'items', sortedItems\nThis essentially just converts the incoming list data into a Batman Set. It looks kinda ugly, but it works.\nThen in your view, you can sort the list of items with something like:\n<ul class=\"list-nostyle\">\n  <li data-foreach-item=\"items.sortedBy.timestamp\">\n    <span class=\"label\" data-bind=\"item.timestamp\"></span>\n    <span class=\"value\" data-bind=\"item.value\"></span>\n  </li>\n</ul>\nNotice how the keypath for data-foreach-item now includes the key that the list should be sorted on. This assumes that the data you pass in has a timestamp field.\nLet me know if that works for you.\n. Yeah, I like the flexibility of @crcastle's approach. @davefp, can you incorporate that into your PR?\n. Do you know if there's a way to make respond_with render an error message if the dashboard file is not found? As it stands right now, if it can't find the file, it just renders a white screen. \nIdeally we can show a message to the user, similar to what erb does when it can't find the file:\n\nI like the addition of respond_with. Now anyone can use whatever rendering engine they want. However, instead of including 'haml' as a dependency, I'd prefer adding an article to the wiki explaining the steps to include/use it.\n. When someone loads the dashboard in their browser, all widgets will automatically receive the last values that the job server fetched -- you shouldn't need to tell the job to re-run. Your widget should receive the daily value.\nIs this behaviour not showing for you?\n. It won't be available in the ready event. However, if the job has already run, then the  onData callback inside your widget will be called as soon as the page loads (but only after the ready event is triggered). Can you initialize the chart within ready, but update its data within onData? Perhaps I'm not fully understanding the issue.\n. There was mention to an error 13 happening over here: https://github.com/Shopify/dashing/issues/42\nWe were able to get highcharts running in there.\n. Hey Kevin,\nI also haven't done much CLI testing before, but this looks to be pretty good! I just merged it in.\nThanks a lot for starting this. I intend on contributing to the tests as well.\n. I'm starting to think that having to write x,y for each point is overly verbose. I'm digging the two element array...\n. Rickshaw is smart in the sense that if you give it time series data, it will try to figure out the best intervals to use to display the graph. So if you give timestamps that span years, it will probably only show axis labels on each year. If you put in months, it will probably only do months.\nIn the case of the convergence demo, the difference from one point to another is so small that it assumes it's in seconds. Is it possible for you to pass in your timeseries data as an epoch time integer? I believe that's the time format it likes.\n. Try passing in the x values as integers instead of as strings. \n. As far as I know, Rickshaw determines the best timescale for you.  If your dates span multiple months, you should see months appear.\nI'm not an expert on Rickshaw, so your guess is as good as mine for a lot of these issues. However, I think you can specify custom time units like so:\ncoffeescript\nx_axis = new Rickshaw.Graph.Axis.Time(\n      graph: @graph\n      timeUnit:\n        name: 'minutes'\n        seconds: 60\n        formatter: (d) ->  d.getUTCMinutes()\n    )\nSo all timeunits take a seconds parameter. So hours would be 3600, days 86400, and so on. I believe this will create an axis marker for every unit you specified. As for what gets displayed, the formatter parameter determines that. In the example above, every 60 seconds on the graph will have the minutes printed out on it using d.getUTCMinutes().\nBe careful though. If your data points span over multiple days, and you specify seconds:1, you're gonna have a bad time. It's gonna draw thousands and thousands of labels.\n. I'm not sure I really understand the issue. Are you saying that your dashboard runs for a certain amount, and then at one point stops responding to CURL?\nWhen you restart the dashing server, does it start working again? Then does it eventually stop working?\n. I'm assuming you're still having this issue?\n. Yeah you can, it's in the gh-pages fork. I'll just make the change though. Thanks for the tip!\n. 1) \nSynergy (Meter widget)\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": 50 }' \\http://localhost:3030/widgets/synergy\nBuzzwords (List widget)\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"items\": [{\"label\": \"item1\", \"value\": \"Test1\"}, {\"label\": \"item2\", \"value\": \"Test2\"}] }' http://localhost:3030/widgets/buzzwords\nValuation (Number widget)\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"current\": 50 }' \\http://localhost:3030/widgets/valuation\nThe reason why it's current instead of value, is because you can also specify a last value, and the widget will show the % difference.\nConvergence (Graph widget)\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":1356733421, \"y\": 20 }, { \"x\":1357338234, \"y\": 50 }, { \"x\":1357942985, \"y\": 10 }] }' \\http://localhost:3030/widgets/convergence\n2) When you create a new a new dashing project, it comes with the sampletv dashboard, and that shows the implementation of twitter and the clock.\n. I updated the answer in https://github.com/Shopify/dashing/issues/56 to contain a CURL for buzzwords\n. Although I really love the idea, I'm closing this for now for two reasons:\nThe main one is for simplicity. Rather than making people create new gems for sharing their widgets, it'd be simpler if they could just paste a link to the files on the wiki. I will create a page so that people can put a description of their widget, as well as a screenshot/demo of it. Each widget would have a link thats leads to either a github repo, or even better, a gist of the required files. Copy & paste the widgets you want, and there's no complicated magic going on.\nSecondly, I'd like to eventually decouple the frontend from ruby. I've seen someone implement the Dashing backend in Perl, and another in Python. It seems like people want to port the frontend to different technologies. If widgets are inside ruby gems, it'll be trickier to do that.\n. Your renderer: 'bar' shouldn't be nested within series, but within the main options list:\ncoffeescript\n@graph = new Rickshaw.Graph(\n  element: @node\n  width: width\n  height: height\n  renderer: 'bar'\n  ...\n. First thing's first, you're going to need to specify an id on that div. This is because the api needs to know which widget you want to send the data to.\nhtml\n<div data-id=\"myiframe\" data-view=\"Iframe\"></div>\nOnce that's done, you can do:\ncurl -d '{\"auth_token\": \"YOUR_AUTH_TOKEN\", \"url\": \"http://yoursite.com\" }' \\http://localhost:3030/widgets/myiframe\n. Oops, my bad. I put a \"iframe\" instead of \"Iframe\" as the data-view. I fixed what I wrote above.\n. Also, try without the set :protection config. It might still work. I might have been wrong about the frame options thing.\n. Most likely related to https://github.com/Shopify/dashing/issues/64\nIf you have rack 1.4.3 in your Gemfile.lock, it's not going to work. I'm working a fix for it now.\n. @ckelner: You shouldn't have to include rack in the gemfile. Just Dashing 1.0.2 should do.\nMake sure you do bundle update rack so that it fetches the right rack.\n. Hey guys,\nI recently added a public directory to dashing, where you can put custom 404 pages, and stuff like that. 6dcda5d7cd26514cac1b18438af7913105e68f00\nIt also rescues from 404's, like in your PR.\nA fun fact that I just discovered: Symbols in ruby are never garbage collected. Therefore if people keep getting 404's, then  erb params[:dashboard].to_sym will create a new symbol every time. Do that enough times with random URLs, and you got yourself a pretty little DOS attack.\n. Hey, this seems to be an issue with the recent update of rack to 1.4.2. I'm investigating now.\nTemporary fix is to add this to your gemfile:\ngem 'rack', '1.4.1'\nLet me know if that works for you.\n. It's now fixed on master & in gem release 1.0.2.\nIt's an issue with Sinatra using Rack 1.4.2+ https://github.com/sinatra/sinatra/issues/606\nSinatra gem should be bumped soon...\n. It actually has something to do with any widget that has a background icon image. I'm working on a fix.\n. Are you talking about the issue where it is 1 pixel off? Can you try it in firefox & a webkit browser, and tell me if you get the same results? I think it's a webkit bug...\n. Oh I see. You're using custom dimensions. I was just looking at the defaults on http://dashingdemo.herokuapp.com\nYou should be able to adjust the font size. Slap something like this in your clock.scss:\ncss\nh2 {\n    font-size: 25px !important;\n  }\nThe !important property will make sure that this is the one that's used, and not the h2 that is defined globally. Play around with that font size until you get the results you want. Let me know if it works for you.\n. Rather than include new widgets inside dashing, I've added a wiki where people can link to their own.\nhttps://github.com/Shopify/dashing/wiki/Additional-Widgets\n. I don't think there is one in Batman. In the example you show, just use a regular js slice. Coffeescript version:\n data.items = data.items[0..15]\n. Oh right. That shouldn't work then. It will sort the smaller list, but it might have chopped off things past 15 that actually belonged in there.\nDoes something like this work?\nAdd this to your list.coffee\ncoffeescript\n@accessor 'sortedItems', =>\n  @get('items.sortedByDescending.value.toArray')[0..15]\nAnd change this in your html:\n<li data-foreach-item=\"sortedItems\">\n. Yep, you can. If the value doesn't exist, it will just return undefined. No exceptions will be thrown. However, you should check to see if the value exists before you do the slice. A little coffeescript magic:\ncoffeescript\n@accessor 'sortedItems', =>\n  @get('items.sortedByDescending.value.toArray')?[0..15]\nThe question mark there will make sure it's defined before doing the slice\n. It's normal that it's an array, but it should be an array of objects. foreach will loop over the array, and for each item it will grab the label and value associated to it.\nThe issue is actually my mistake. You don't need the fat arrow in the accessor. Modify it to look like:\ncoffeescript\n@accessor 'sortedItems', ->\n  @get('items.sortedByDescending.value.toArray')?[0..15]\n. Dashing runs on Thin(http://code.macournoyer.com/thin/). Any documentation you can find on autostarting Thin should work.\nAs @promisedlandt said, look into an Upstart script: http://www.treeder.com/2012/03/upstarting-thin-aka-using-upstart-to.html\n. Where are you sending the data from? Curl?\n. ping.\n. Good find! \nTo keep things consistent with Dashing, I suggest we keep the hyphens in the classname. Let's make the fix to the SCSS file generator.\n. ping. Any update on this?\n. Hey @banafederico, \nYour change was hyphenating (dashizing) everything. In this case, we only want to dashize the name in the css file. I've tweaked your PR to reflect this, and I also added some tests.\n. Hey Martyn,\nIt's actually pretty easy to do it. I think @davefp was thinking you were using a number widget, but I think you're talking about the meter widget right?\nThe meter widget uses the jquery-Knob library (http://anthonyterrien.com/knob/)\nAccording to the docs, you need to fire a trigger event with the fgColor set. You can change your meter.coffee code to something like this:\ncoffeescript\n  constructor: ->\n    super\n    @observe 'value', (value) ->\n      meter = $(@node).find(\".meter\")\n      if value > 90\n        color = \"#00FF00\"\n      else if value > 80\n        color = \"#FFFF00\"\n      else if value > 70\n        color = \"#FF9900\"\n      else\n        color = \"#FF0000\"\n      meter.val(value).trigger('configure', fgColor: color)\n      meter.val(value).trigger('change')\nThat should work.\n. Just have a database on the server that Dashing is running on. Since Dashing is based off of Sinatra, pretty much any stuff you find about Sinatra can be used with it.\nTake a look at this ruby gem (https://github.com/janko-m/sinatra-activerecord) that shows how to add activerecord to Sinatra. Note that all the stuff they mention will go in your config.ru file.\n. I'm not sure what you mean. Is this using the image widget?\n. Inside your dashboard .erb file, put this at the top:\njavascript\n<script type='text/javascript'>\n$(function() {\n  $('li').live('click', function(e){\n    var widget = $(this).find('.widget');\n    var url = widget.data('link');\n    if (url) window.location = url;\n  });\n});\n</script>\nThen when you use an image widget, add a data-link attribute:\nhtml\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-view=\"Image\" data-image=\"/logo.png\" data-link='abc'></div>\n</li>\n. This should help\nhttps://github.com/maxstauss/dashing_active_record/pull/1\n. Something like http://www.youtube.com/watch?v=cJMRKB3RU_s ? Hehe\nSo your first step is to figure out how to monitor the updates to the file:\n\nAssuming you have a setup where the spreadsheet you are working on is on a different machine than the server Dashing is running on, you could use write a small ruby program that uses something like rb-kqueue to monitor when the file changes-- assuming you're on OS X. Whenever your file changes, you just use the roo gem that @toddedw mentioned, and then push the data to your dashboard using the Dashing api. Done.\n\nAssuming you have a setup where the spreadsheet you are working on is on the same pc as the Dashing server, you could do something prettttty cool. Since the Thin webserver uses EventMachine, it has access to something called FileWatch. If you're on OS X, EM will use kqueue to monitor file changes. If you're on linux, it uses inotify. If you're on Windows...I have no idea. Anyway!\nIn your jobs directory, replace the sample.rb with:\nsample.rb\n``` ruby\nrequire 'roo'\nEM.kqueue = EM.kqueue?\nfile_path = \"#{Dir.pwd}/spreadsheet.xls\"\ndef fetch_spreadsheet_data(path)\n  s = Roo::Excel.new(path)\n  send_event('valuation',   { current: s.cell(1, 2) })\nend\nmodule Handler\n  def file_modified\n    fetch_spreadsheet_data(path)\n  end\nend\nfetch_spreadsheet_data(file_path)\nEM.next_tick do\n  EM.watch_file(file_path, Handler)\nend\n```\nFor this to work, make sure that:\n- You include roo in your Gemfile.\n- You have a spreadsheet in the root directory called spreadsheet.xls. The data it is fetching is in cell (1, 2)\n- You have a Number widget called 'valuation'. The Sample dashboard has it.\nLet me know how that goes for you. Hope this helps!\nAs a side note, I guess you could do something fancier with ODBC straight to the excel file, but I'll leave that as an exercise to the reader :P\n. And roo also supports Google spreadsheets, which is pretty awesome. \n. @rickleigh Good to hear you figured it out. I don't have a linux box handy, so couldn't test.\n. Hmm, it's working on my end. Are there any js errors?\n. It works with coffee-script-source 1.6.2. I'm going to bump it to that.\n. Merged.\n. See #42\n. All you want is just a job that imports data, and then uses the list widget.\nHere's a quick sample of what you could do. In this case, the order is preserved.\n``` ruby\nfields = %w(revenue orders customers)\nSCHEDULER.every '10s' do\n  items = []\n  fields.each do |field|\n    value = ActiveRecord::Base.execute(sql)\n    items << { label: field, value: value }\n  end\nsend_event('buzzwords', { items: items })\nend\n```\nThe reason why the buzzwords example is not alphabetical is because the list is populated at random. Every time the job runs, it picks a random buzzword and adds +1 to it. These counts are stored in a hash, and will not be sorted alphabetically, regardless of the buzzwords array.\nLet me know if that works for you.\n. A common thing we do at Shopify is use some fancy metaprogramming to fetch fields we want. For example:\n``` ruby\nfields = %w(revenue orders customers)\nSCHEDULER.every '10s' do\n  items = []\n  fields.each do |field|\n    value = send(\"fetch_#{field}\")\n    items << { label: field, value: value }\n  end\nsend_event('buzzwords', { items: items })\nend\ndef fetch_revenue\n  # code that fetches & returns the revenue\nend\ndef fetch_orders\n  # code that fetches & returns the orders\nend\ndef fetch_customers\n  # code that fetches & returns the customers\nend\n```\n. How about something like this:\n``` ruby\nrequire 'net/http'\nrequire 'json'\nDefault value is set to '0'\ncurrent = Hash.new(0)\nlast = Hash.new(0)\nSCHEDULER.every '1m', :first_in => 0 do |job|  \n  %w(licensecount revenue customercount).each do |type|\n    last[type] = current[type]\nhttp = Net::HTTP.new('10.20.10.55',8080)\nresponse = http.request(Net::HTTP::Get.new(\"/#{type}.php\"))\nresults = JSON.parse(response.body)[0]\nif(results)\n  current[type] = results[\"Agents\"]\n  send_event(type, { value: current[type] })\nend\n\nend\nend\n```\nProtip: If you want to do a codeblock, wrap your code in backticks:\nruby\nbla bla bla code\n. Good idea! I just merged it in. https://github.com/Shopify/dashing/commit/4247f127bd88cd5d09f3778e07daf2a5d9c5de88\nI made it a bit shorter, and added some error handling in the case that the gist isn't found.\n. That Replicator thing looks amazing! I'm looking forward to seeing the project.\nYou should be able to package up a Dashing project. Just run bundle install, and then bundle dashing start, and it should work fine.\nI'm assuming you want to include all the files within your Dashing project right?\nI'm not sure what you mean by copying files not working without the dashing command.\n. Oooooo weee. It does take a pretty long time. Thanks for the PR! I just merged it in.\n. IE is not supported since it doesn't support Server Sent Events. :(\n. You can also write jobs in any language you want, and use the API to send\nyour data over.\nOn 2013-03-27, at 16:53, David Underwood notifications@github.com wrote:\nNot with the current implementation. However, there are versions of Dashing\ncurrently being written in Python, .NET, and a couple of other languages.\nThat said, the amount of ruby actually required to write a job is minimal.\nIf you're familiar with another scripting language, getting up and running\nwith Dashing should be straightforward.\nOn 27 March 2013 11:46, Micah Fitzgerald notifications@github.com wrote:\n\nIs it possible to write jobs in other languages (Python, Java,\nJavascript)? Yes, I know I could just learn Ruby, but I'm really just\ncurious.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/Shopify/dashing/issues/90>\n.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/Shopify/dashing/issues/90#issuecomment-15531832\n.\n. You can easily add your own database layer. Here's an example of using Dashing with ActiveRecord: https://github.com/maxstauss/dashing_active_record/issues/1\n. Ah that makes sense because using Dir doesn't guarantee order across OSes\nWill add the sort.\n. I pushed a fix to lock it to 1.6.2 and higher. Seems like that version is stable.\n. Merged.\n. I avoided adding the twitter gem because I don't want to add dependencies that people won't necessarily need.\nWhat are your thoughts on this?\nEdit: I skipped over some of the discussion. Ignore my comment.\n. After speaking with devs, it seems like the twitter widget is a popular one and is often included on dashboards. \nI really didn't want to have to add a dependency to twitter, but I caved :P\nI did it in a way that is easy to remove. It's not part of the Dashing gemspec, but rather part of the gemfile of your project.\nAlso, I put a link inside the job on where to get your API keys. \nI also made it fail gracefully, so if you start a new dashing instance that does not have the API keys set, it shows a helpful message instead of throwing a big ugly exception:\n\nLet me know what you think.\nhttps://github.com/Shopify/dashing/commit/f91c1b8962860eaeaa428d3ea75ebf61ced9ec6a\n. Because some people were also asking to change the format of the clock, I think the most flexible way is to simply redefine the updatedAtMessage function. \nFor example, put this in your application.coffee:\nDashing.Widget::accessor 'updatedAtMessage', ->\n    if updatedAt = @get('updatedAt')\n      timestamp = new Date(updatedAt * 1000)\n      hours = timestamp.getHours()\n      minutes = (\"0\" + timestamp.getMinutes()).slice(-2)\n      \"Fresh as of #{hours}:#{minutes}\"\nSince this is the only actual text snippet provided in the app, I'd prefer to not add it as a config option/i18n\n. I agree entirely & am on this.\n. Merged.\n. If this is a popular request, it will be added to Dashing 2.0.\nIn the meantime, here is a quick hack around it:\nThe following code assumes a new instance of Dashing. It will make it so that the buzzwords list keeps getting rows added to it.\njobs/buzzwords.rb\n``` ruby\nbuzzwords = ['Paradigm shift', 'Leverage', 'Pivoting', 'Turn-key', 'Streamlininess', 'Exit strategy', 'Synergy', 'Enterprise', 'Web 2.0'] \n@buzzword_list = []\ndef send_delta_event(id, body)\n  body[:id] = id\n  body[:updatedAt] ||= Time.now.to_i\n  send_event(id, body)\n  body[:items] = @buzzword_list\n  Sinatra::Application.settings.history[id] = format_event(body.to_json)\nend\nSCHEDULER.every '2s' do\n  new_item = { label: buzzwords.sample, value: rand(5) }\n  send_delta_event('buzzwords', { item: new_item })\n  @buzzword_list.unshift new_item\nend\n```\nThe key thing here is that we are maintaining the 'master' list of all buzzwords. However, we are only sending one item/buzzword at a time each time the job runs. The 'master' list is used so that when you refresh the browser, you get all the previous buzzwords that were added to the list.\nwidgets/list/list.coffee:\n``` coffeescript\nclass Dashing.List extends Dashing.Widget\n  ready: ->\n    if @get('unordered')\n      $(@node).find('ol').remove()\n    else\n      $(@node).find('ul').remove()\nonData: (data) ->\n    console.log(\"GOT DATA!\", data)\n    items = [data.item]\n    for item in @get('items')\n      items.push(item)\n    @set('items', items)\n```\nHere you can see that the onData method knows how to handle the single items coming in, and adds them to the list.\n. Not sure what to say. I tested it out on Windows 8 with Firefox & Chrome, and they are both working for me. Hmmm...\n. \"A++++~~~~~~~++++~~~~~ would ask to test again\"\nYou are my hero! Excellent work, and thanks for contributing! It was just merged in.\n. My bad. I meant the list widget.\n. Are you on Ubuntu? \nThis stack overflow article suggests a solution to a similar problem when installing rails: http://stackoverflow.com/questions/11058952/why-do-i-get-an-error-installing-the-json-gem-in-ubuntu\n. The erb will have access to any global variables set on Sinatra::Application. It's a bit of a hack:\nconfig.ru\n``` ruby\nget your clients\nSinatra::Application::CLIENTS = [..........]\n```\nThen in your template\nerb\n<% CLIENTS.each do |client| %>\n  .....\n<% end %>\n. The reason it's not straightforward is because the dashboard rendering does not assume any variables are being passed in. Ideally with erb, you can specify erb :dashboard_name,  :locals => {:clients => [1,2,3]}.\nIf you'd prefer, you can edit the dashing.rb file to allow passing these variables in.\n. Closing this because https://github.com/Shopify/dashing/issues/127#issuecomment-18401056 addresses OPs question.\n@scubes13 & @lagsalot: Those are slightly different than the original question, and will require some rewiring of how dashing works. \nQuick suggestion:\nRight now Dashing maintains an array of all connected users, and then sends all the data out to it. You could change it so that your jobs loop through each connected client, runs the job appropriate to their client id, and then send_event only for them. This goes beyond the scope of Dashing, and would be suited well suited in a fork. Discussing this further would best be done in a new issue :)\n. In your config.ru file, add the line set :default_dashboard, 'about_us.html'\nex: \nruby\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\n  set :default_dashboard, 'about_us.html'\nend\nThen in your public directory, add a file called about_us.html. Should work.\n. How about:\njavascript\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {\n  $(\".gridster ul:first\").gridster().data('gridster').draggable().disable();\n}\n. You can do something like this in your config.ru (within the configure do section):\nruby\n  get '/' do\n    protected!\n    file = File.join(settings.views, \"sample.erb\")\n    render(:erb, file)\n  end\n  # Sinatra doesn't support overriding routes. The routes are evaluated first come first serve.\n  # In this case, we want our route for '/' to come first, so we put it at the front of the routes array. hacky? yeah\n  Sinatra::Application.routes[\"GET\"].unshift(Sinatra::Application.routes[\"GET\"].pop)\n. What happens to this on windows? We should probably use the more generic Tempfile that ruby has (http://www.ruby-doc.org/stdlib-1.9.3/libdoc/tempfile/rdoc/Tempfile.html)\n. Take a look here: https://github.com/Shopify/dashing/blob/master/javascripts/dashing.coffee#L16\n. This has been fixed with https://github.com/Shopify/dashing/commit/f91c1b8962860eaeaa428d3ea75ebf61ced9ec6a\nThis will only affect new dashing instances. If you want an existing dashboard to be fixed, youll just need to replace the code in your twitter.rb file with the one I just linked to.\n. And here's an awesome article on html5 audio: http://www.html5rocks.com/en/tutorials/webaudio/intro/\n. Seems like an issue with the latest sinatra_contrib gem. Dashing started off using 1.3.2, which allows for the content_for(:title) { \"blablablab\" } syntax. Not sure what happened. We will switch to the syntax used in #153, since it also seems to be backwards compatible.\n. Are there javascript errors caused by Google Maps that might be preventing any further javascript from running? Can you provide a javascript console log?\nWhen you say reloading the backend makes it work again, do you also refresh the browser?\n. It is generated and served automatically by the server at runtime. Uses sprockets.\n. Whoa, norwegian broadcasting unit! That's awesome. \n. @thenayr WHOA THAT'S AMAZING.\n. I am trying to think of a good theming system for Dashing :)\n@thenayr: Did you guys implement the ability to swipe between dashboards, or is that functionality of the tv browser switching tabs?\n. Hey! Thanks for pointing that out. I had pushed out a new version of the gem to the demo page, and forgot to change the auth token. Good catch.\n. I should probably strip out those script tags though...\n. @drubin, Good suggestion: https://github.com/Shopify/dashing/wiki/How-To:-Send-HTML-data-to-your-widgets\n. I also think that persisting to a history file should not be default behaviour. What do you guys think?\n. Awesome, thanks.\n. Yeah, moving all discussion to #427 for now\n. What @davefp suggest would be the easiest IMO. I think it's pretty clean to use the html attributes as a way of configuring the widget. \n. The issue is that you have a function called 'render', which is overriding Batman's render function. I would name it something else, and it should work :)\n. Can you guys try with execjs 2.0.1 and see if that works?\nI can only reproduce it with 2.0.0\n. Hey,\nPut this in your config.ru\nset :protection, :except => :frame_options\nIt allows cross domain embedding.\nI should add this to the default config.\nOn Sunday, August 25, 2013, mintigoYael wrote:\n\nHi,\nI created a new dashing project with a new dashing dashboard, and it works\nwithout any problems.\nI wish to present it in iframe inside html, but I can't. I tried to do it\nin many ways including using your demo link.\nIs there any way do to it?\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/199\n.\n. It would be a nice to have for sure for. Considering it for Dashing 2.0 since I want to cater the responsive needs.\n\nIt would require an adapter of some sort so that you don't have to change any of the dashboard html between layout engines.\n. @Noqomo Have not started on it yet. Out of curiosity, what are you looking for in Masonry that would make it better?\n. Yeah decided not to go with Masonry for reasons mentioned above.\n. Dashing is currently relying on Sprockets to compile all the coffeescript assets and provide it in 1 single file. It also does some nifty things like making the widget html files available at /views/[widget_name].html. \nThe real way of doing this without a backend would be to handle includes using something like RequireJS, and compile coffeescript assets manually. \nIn the meantime, (and as a proof of concept) I just copied the generated application.js and application.css files and placed them in a repo:\nDEMO: http://pushmatrix.github.io/mini-dashing/\nhttps://github.com/pushmatrix/mini-dashing\nYou can play around with the widgets with something like: \njavascript\nDashing.widgets.welcome[0].receiveData({text:\"WOOHOO IT WORKS\"})\n. That is the idea for Dashing 2.0, to be able to support different backends.\nIn the meantime, include the following scripts in your html (in this order)\n- jquery\n- es5-shim\n- batman\n- batman.jquery\n- dashing.js (compiled from dashing.coffee.)\n  You can find these in (https://github.com/Shopify/dashing/tree/master/javascripts)\n  Here's a link on compiling all coffeescript files in a directory (http://stackoverflow.com/questions/8817281/coffeescript-compile-all-coffee-files-in-current-directory-and-all-sub-direct)\nNow you need to include each widget you want. So if you want the list widget, the meter widget, and the text widget, you would compile the list.coffee, meter.coffee and text.coffee. and require them in your html.\nYou will also need to include all the files in https://github.com/Shopify/dashing/tree/master/templates/project/assets/javascripts. Be sure to compile the coffeescript files.\nAs for css, you need to require all the files in https://github.com/Shopify/dashing/tree/master/templates/project/assets/stylesheets. For the scss ones, you can find documentation online on how to convert them. I personally use LiveReload to monitor and compile assets (if I don't have a backend doing it for me).\nNext is to include all the css for the widgets. You need to compile all the individual widget scss (list.scss,etc...), and include those.\nThose should be all the files you need to keep the project more maintainable (and less of a giant blob of js).\n. You can either check for Sinatra::Application.connections.empty? inside the job, or if you want to do it for ALL jobs:\nPut this in config.ru\n``` ruby\nmodule Rufus::Scheduler\n  class Job\n    old_trigger = self.instance_method(:trigger)\ndefine_method(:trigger) do\n  unless Sinatra::Application.connections.empty?\n    old_trigger.bind(self).call\n  end\nend\n\nend\nend\n``\n. TrySinatra::Application.settings.auth_token. Try justSinatra::Application.auth_token`\n. :+1: \n. You can use something like this:\ncoffeescript\nDashing.Widget::accessor 'updatedAtMessage', ->\n    if updatedAt = @get('updatedAt')\n      timestamp = new Date(updatedAt * 1000)\n      hours = timestamp.getHours()\n      minutes = (\"0\" + timestamp.getMinutes()).slice(-2)\n      seconds = (\"0\" + timestamp.getSeconds()).slice(-2)\n      \"Last updated at #{hours}:#{minutes}:#{seconds}\"\n. ?\n. Anything interesting popping up in the javascript console?\n. From ruby land, it is:\nSinatra::Application.settings.history\n. Keep in mind that it only stores the last data sent, nothing further back.\n. I decided I would update the base twitter widget to using 5.0.0, and update the Gemfile to use 5.0.0 as well.\nhttps://github.com/Shopify/dashing/commit/5b045724acd44e691552c0fb8f86b61aa2e0cd06\nThe reason for this is that going forward, all new users will be using the latest twitter gem. For anyone with older versions of the gem, their Gemfile would need to be changed anyway (since updating the gem won't update the generated Gemfile in your project).\n. Hey @pseudomuto. I'm looking into this.\n. Let me do a quick check. Apologies for the delays. I've been in the midst of lots of travelling.\n. Awesome work @pseudomuto, and amazing code coverage. Thanks a bunch!\n. The closest you'll get to an API right now is to use the same endpoint (/events) that the dashboards use the get their values. \nExample:\nhttp://dashingdemo.herokuapp.com/events\nIt's designed to be streaming and to use Server Sent Events. There should be libraries in your favourite language that make it easy to handle it. \n. Will merge today.\n. Thanks for bringing this up. Sorry for the long delay in merging it.\n. Unfortunately no simple way right now, but will be coming in the next version. I never really liked the history file anyway...\nWhat you could do is put this in your config.ru file:\nSinatra::Application.settings.history.clear\nThis will make sure that the history is cleared when the app starts.\n. I'd rather not add a dependency on redis gems. I'd prefer if this functionality could be added as a separate gem. Something like dashing-redis. I should look into a nice extendable way of creating these for dashing. I can imagine people wanting to use different data stores.\n. Thanks!\n. I've been meaning to see up a google group. Stay tuned. \nStack overflow has a dashing tag that yields answers:\nhttp://stackoverflow.com/questions/tagged/dashing\n. Could this be of help?\nhttps://github.com/Shopify/dashing/wiki/How-to%3A-send-mysql-data-to-your-widgets\nI know it's mysql, but should be the same pattern.\n. Added via https://github.com/Shopify/dashing/pull/364\n. This should help\nhttps://github.com/Shopify/dashing/wiki/How-to%3A-send-mysql-data-to-your-widgets\n. Are you talking about MS SQL?\n. That I'm not sure about. Dashing uses \"sinatra\" as its server, so you can search for \"Sinatra + MS SQL\" to see how other people are doing it.\n. In your application.coffee, you can configure the sizing of base widgets:\ncoffeescript\nDashing.on 'ready', ->\n  Dashing.widget_margins ||= [5, 5]\n  Dashing.widget_base_dimensions ||= [300, 360]\n  Dashing.numColumns ||= 4\nYou can play around with that to fit your screen :)\n. The CSS is fully customizable, and most likely it is the font sizes that are causing problems. \n. This looks good to me. I tried it out and it didn't seem to have any breaking changes. Thanks!\n. @wolfspyre Feel free to create PR for 0.5.6 :)\n. I noticed it too. Looking into it. This is new.\n. Fixed it here https://github.com/Shopify/dashing/pull/366\n. Thanks for pointing it out guys. Update to version 1.3.4 and you should be golden\n. +1 @protomouse. Awesome deduction.\nGood to see you found your solution, @spuder :)\n. Out of the box it should always get the last value of the widget when you refresh the page (regardless of when the job is scheduled).\nDoes this happen to you with the sample dashboards? \n. Hmmm... but the sample dashboards have number widgets on them. And you're saying those work?\n. Ah, glad you solved it. Hmmm, that is a potential gotcha that I'll keep in mind for 2.0.\n. This change may not be necessary for everyone. If you want this format in your project, you just need to put this in your application.coffee\ncoffeescript\nDashing.Widget.accessor 'updatedAtMessage', ->\n    if updatedAt = @get('updatedAt')\n      timestamp = new Date(updatedAt * 1000)\n      month = timestamp.getMonth() + 1\n      day = timestamp.getDate()\n      hours = timestamp.getHours()\n      minutes = (\"0\" + timestamp.getMinutes()).slice(-2)\n      \"Last updated at #{hours}:#{minutes} on #{month}/#{day}\"\nand it will override the default Dashing one.\n. I'm on my phone and can't see it right now. I'm just in transit so\ngive me a sec to take a look\n. So my concern here is that some users of Dashing don't use thin. I\nrealize that it's still a hardcoded dependency so they'll have to\ninclude it in anyway... I guess this override won't run if they use\nsomething different, correct?\nDashing 2.0 will be a tad more agnostic for this.\n. It already is. Look at http://dashingdemo.herokuapp.com/sampletv\n. Yep that's where you put it. It will then be accessible to you from any dashboard.\n. Looks really valuable. Will add to Dashing 2.0 widgets.\n. Unfortunately not much progress made yet :(\n. I can't reproduce it on Chrome. What browser are you on?\n. Ah, I see what you mean. I thought you meant it was preventing drag handling.\n. Thanks for the fix :)\n. Open3 is a lib that gives you access to stdout, so you could do something like:\nruby\nrequire 'open3'\nx = Open3.capture2('perl myscript.pl')\nsend_event('my_widget', { value: x })\nfrom within a job, and it will send the value that you got to all widgets with id='my_widget'\nHere's the docs for Open3: http://ruby-doc.org/stdlib-1.9.3/libdoc/open3/rdoc/Open3.html\nThat's just one of the ways. You could also use the job scheduler just to launch the perl script, and then do the API call to dashing from within perl... \n. You can use js if you want, but each widget needs to adhere to the coffeescript \"class\" structure.\nI used http://js2coffee.org to convert the list widget to js, and it looks something like:\n``` javascript\nvar hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super = parent.prototype; return child; };\nDashing.List = (function(_super) {\n  __extends(List, _super);\nfunction List() {\n    return List.super.constructor.apply(this, arguments);\n  }\nList.prototype.ready = function() {\n    if (this.get('unordered')) {\n      return $(this.node).find('ol').remove();\n    } else {\n      return $(this.node).find('ul').remove();\n    }\n  };\nreturn List;\n})(Dashing.Widget);\n```\nHere is the js version of the graph widget:\n``` javascript\nvar hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super = parent.prototype; return child; };\nDashing.Graph = (function(_super) {\n  __extends(Graph, _super);\nfunction Graph() {\n    return Graph.super.constructor.apply(this, arguments);\n  }\nGraph.accessor('current', function() {\n    var points;\n    if (this.get('displayedValue')) {\n      return this.get('displayedValue');\n    }\n    points = this.get('points');\n    if (points) {\n      return points[points.length - 1].y;\n    }\n  });\nGraph.prototype.ready = function() {\n    var container, height, width, x_axis, y_axis;\n    container = $(this.node).parent();\n    width = (Dashing.widget_base_dimensions[0] * container.data(\"sizex\")) + Dashing.widget_margins[0] * 2 * (container.data(\"sizex\") - 1);\n    height = Dashing.widget_base_dimensions[1] * container.data(\"sizey\");\n    this.graph = new Rickshaw.Graph({\n      element: this.node,\n      width: width,\n      height: height,\n      series: [\n        {\n          color: \"#fff\",\n          data: [\n            {\n              x: 0,\n              y: 0\n            }\n          ]\n        }\n      ]\n    });\n    if (this.get('points')) {\n      this.graph.series[0].data = this.get('points');\n    }\n    x_axis = new Rickshaw.Graph.Axis.Time({\n      graph: this.graph\n    });\n    y_axis = new Rickshaw.Graph.Axis.Y({\n      graph: this.graph,\n      tickFormat: Rickshaw.Fixtures.Number.formatKMBT\n    });\n    return this.graph.render();\n  };\nGraph.prototype.onData = function(data) {\n    if (this.graph) {\n      this.graph.series[0].data = data.points;\n      return this.graph.render();\n    }\n  };\nreturn Graph;\n})(Dashing.Widget);\n```\nIt's not the prettiest, but it should work.\n. Of course! The beauty of Dashing is that EVERYTHING is customizable.\nTo change the background, modify the body in the application.scss file.\n. http://www.w3schools.com/cssref/pr_background-image.asp\n. Do you have a demo URL we can check out? \n. That's an interesting idea, and could be handy for changing static things inside text widgets. To make this look nice and be more functional, I think it would clutter up the codebase and ease of use. I also don't see 80%+ of dashboard users using it. It would be cool to see as a plugin though.\nThanks for sharing!\n. I'm not able to reproduce the problem. I can set Dashing.numColumns = 9 and I get more than six columns, and my widgets can also span the whole length. Was there a new version of gridster that put a hard limit at 6?\n. Inside your gemfile, you can specify it to use the master branch on github. Something to the tune of:\ngem 'dashing', :git => 'https://github.com/Shopify/dashing.git'\nFor more advanced usage, look at: http://bundler.io/git.html\n. I want to make this happen while remaining backwards compatible\n. Thanks!\n. Thanks!\n. Well said @tylermauthe \n. Hallo, cool to see you using Dashing!\nThere are no licensing issues with this. I think that putting license headers in all generated files looks kinda bloated and corporate. I see you added the \"This dashboard is based on dashing from Shopify\", and while not required, is cool by me :)\nEnjoy Dashing!\n. Closing this for now. Re-open if you are still having issues.\n. X-Frame-Options is your culprit\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options\nThe issue here is that google prevents people from iframing their page from other domains. You can check the response headers yourself.\n\nUnfortunately there isn't really a good way around this, but maybe this can be of help?\nhttp://stackoverflow.com/a/25587469/208314\n. That's not possible. The widgets have no concept of the jobs that run them.\nYou could add a custom endpoint to your dashing server though, that first updates the database and then sends an event to the dashboards.\n. You could add to the server logic, similar to how authentication works: https://github.com/Shopify/dashing/wiki/How-to:-Add-authentication\nProbably just hook into the send_event method and do whatever logging you want.\n. Strange that you're seeing these issues. I just followed the regular dashing instructions and pushed it without having to specify a ruby version.\nhttps://pure-journey-2648.herokuapp.com/sample\n. Closing for now. If @tylermauthe's suggestion doesn't work, just re-open.\n. Closing this for now till more demand shows up.\n. I would like to. Still evaluation options.\n. Seems like the react.js train is rolling :P\n. Hey folks,\nSorry for the delay in all this. There's been a lot of evaluation lately of different technologies to replace Batman, but I've decided to keep it as-is. Batman bindings are simple and still work. In an hour or so you can be familiar with the syntax and can throw together great dashboards. Many people coming to Dashing have never used a binding library before, so they'll need to learn new syntax anyway (whether it be vue, react, or whatever). The benefits of switching to a different library are not worth breaking many of the community widgets that have been created, especially now that the project is no longer being actively maintained.\nHopefully forks like the one above using vue.js can provide a good template for people wanting to expand on the library and use the binding system of their choice.\n. Thanks for your work on this. \nThe goal for Dashing is to be as simple and readable as possible. That's why SSEs were originally favoured over websockets, because they are a ton simpler.\nI want to keep the base installation minimalistic, so I suggest we leave this PR here for people who are curious about adding websockets (or other engine) support to Dashing. \n. @kneradovsky Feel free :)\n. Yeehaa!\n. Thanks @adambyrtek, this is a great fix :)\n. Have you tried any of these suggestions? \nhttps://gist.github.com/stonehippo/5896381\n. Sweet thanks!\n. There currently isn't, but that's a pretty good idea and I'll look into adding it.\nIn the meantime, there is a workaround. Inside your config.ru file, paste the following inside the configure do....end block:\nruby\nget '/widgets/:id.json' do\n  content_type :json\n  if data = settings.history[params[:id]]\n    data.split[1]\n  end\nend\nYou should then be able to go to /widgets/your_widget_name.json to get the most recent data :)\n. Like @tylermauthe said, you should be receiving 204's:\nhttps://github.com/Shopify/dashing/blob/master/lib/dashing/app.rb#L108\n. Closing this for now. But please share when you're done :)\n. Not dead, just unfortunately not maintained as well as I'd like. I apologize for that.\nI have been working on other projects at Shopify and have not had much time to give Dashing the love it deserves. \nI need to do a big triage of the PRs. Some are okay to merge, and some do have some non backwards compatible changes.\n. Thanks!\n. Hi there,\nPlease post these types of questions to stack overflow. The Dashing issues list should be reserved for issues relating to core dashing. Any questions related to writing custom widgets fall outside this scope.\nI will be updating the readme shortly with these issue guidelines.\nThanks!\n. Ah this is great! Thanks so much for doing this :)\n. Amazing! I'm merging now\n. Thank you!\n. Strange, you shouldn't need to have node.js installed for this to work. Glad you got it working though.\n. Hey this sounds like a great idea. I do agree that most people using it don't use scrolling.\nHowever many run dashing off of raspberry PIs and dedicated boxes, which may not have access to press 'f' for fullscreenage.\n. I assume you're talking about a widget based on showing DFP?\n. Be at the root of your dashing dir, and do bundle exec dashing start\n. Core Dashing deals with Server Sent Events and not Websockets. Like @tylermauthe mentioned, help requests for things not part of Dashing should be directed to Stack Overflow.\n. The main use cases I've seen for Dashing have been to design for a single screen in mind (ex: a tv). If you want to optimize for smaller screens, you can set the dimensions using something like @mapledyne mentioned. There may be some css needing to be tweaked.\nDashing was created so that you pick the exact spots where widgets will be. After all, it's nice to always see the widgets in the place you expect them. If it becomes responsive, then suddenly you lose some of that. I'm open for convincing though.\n. @agassner How much memory?\n. Is your box crashing or is the browser tab crashing?\n. @robacarp I unfortunately was mistaken. I thought we were running Puma at Shopify, but it turns out we aren't :(. It was a discussion a few ops peeps had and I had thought they switched it, but didn't. Sad...\nI will have to look into it further then. I'd like to have Puma in shortly. Can't give an exact date @MartynKeigher, but will look into your pastebin. Thanks for putting that together.\n. :+1:\n. Check out the documentation on how to add authentication, and it includes adding in some endpoints (like '/auth/g/callback')\nhttps://github.com/Shopify/dashing/wiki/How-to:-Add-authentication\n. Hey @zwergengott, these types of questions are better suited for Stack Overflow. This issue list is best used for problems related to Dashing itself.\nCheers!\n. Looks like this is affecting other gems too. It seems to deal with El Capitain no longer coming with OpenSSL headers. See if the fixes here work for you: https://github.com/eventmachine/eventmachine/issues/643\n. Sounds good! Thanks :)\n. Thanks!\n. LGTM. Good find.\n. :+1:\n. Ah damn, didn't realize they changed it. If you figure out what's changed it'd be great to get that merged in.\n. Thanks @MartynKeigher!\n. For integrations related questions, please direct them to Stack Overflow.\n. @qbrossard @tylermauthe this is looking real good :)\n. Thanks for you work on this @qbrossard and @tylermauthe. Let's get this thing merged this week. I'll be reviewing it shortly.\n. Hey @qbrossard and @tylermauthe.\nI've given a lot of thought into this, and unfortunately I have changed my mind on putting this into master. I initially thought that the switch to puma would be straightforward, but it seems like there are many gotchas in the way, and that it doesn't play very nice with Sinatra. As this project has now become no longer actively maintained, I fear that adding a bunch of complexity may introduce new issues that may not be addressed. I also don't want to break any existing dashboards out there.\nWhat I suggest we do is make a branch for it, with a wiki article on how to use it. That way people will be able to use JRuby if they want to, and they won't have to fear about missing out on features because....well....there probably won't be any new ones coming :\\\nThanks guys for your help in diving into this! Hopefully it was a good learning process, and I hope it will be of use to other people looking to use Puma and Dashing.\nCheers!\n. It's now an official branch over here: https://github.com/Shopify/dashing/tree/puma_webserver\nIf there any gotchas or specific things someone needs when running it, feel free to post them on this wiki: https://github.com/Shopify/dashing/wiki/How-To%3A-Run-Dashing-on-Puma\n. Of course! Thanks @qbrossard !\n. Thanks for you help with this @jmb!\n. Hey @charlievogt. These questions are better suited for Stack Overflow instead of as an issue here.\nWhat you're running into is that Dashing expects data as JSON and not as plain form data. You'll need to use some javascript to turn the form data into valid JSON before sending it off\nhttp://stackoverflow.com/questions/22195065/how-to-send-a-json-object-using-html-form-data\n. Hmm, not sure I can be of much help because this project doesn't rely on Rails at all. It's a Sinatra app.\nMaybe the folks over at dashing-rails can be of help: https://github.com/gottfrois/dashing-rails\n. @fuzzy76 @webmaster128 Yes of course!\n. @mgifford Maybe not big enough, but there has been mention of the fork for some time:\n\n\n\n. Oh shit, that's not good. Fixed!\nThanks for bringing that up.. Why enforcing 2.0?\n. Is this to aid in testing or just for extra clarity?\n. Here's the PR that introduced that change for some context: https://github.com/Shopify/dashing/pull/383\nI am aware that this is thing dependant, and I do want to take it out.\n. I think it's fine\n. Yeah, although it's nice to have consistency with verb tenses and moods, I don't want to make the list of \"rules\"/\"suggestions\" seem too long. I'd just stick with the emojis\n. I don't think it's necessary to mention this.\n. Awesome! That's a great idea\n. I'd leave the last line out. It's enough to say that we will discuss and critique.\n. Well put!\n. :(\n. Just send them this: https://vimeo.com/93947228\n. I'd just link them here for now: https://github.com/Shopify/dashing/wiki#how-tos\n. Mention that they should add them here: https://github.com/Shopify/dashing/wiki/Additional-Widgets#other-third-party-tools\n. Is there a weird newline here between idea and fits?\n. updated:\nFeature requests are welcome, but take a moment to consider whether your idea fits with the scope and aim of the project. A good rule of thumb is to apply the 80/20 rule: every feature should be useful to at least 80% of users. Adding in every possible edge case will only make it more difficult to understand, maintain, and hack on.\n. Small nitpick. A questions mark at the end of this\n. I'll edit this on master\n. Each connection gets its own Mutex?\n. Can you guys explain this section a bit more?\n. There's no way to keep alive a connection without doing an idle loop?\n. ",
    "utsengar": "Works! Love the dashboards!\nWe we have graphs in one of these divs?\n. Our dashboards mainly have graphs like these (smaller than this one), so can we plot such a data in the graph widget?\n. ",
    "ryanseys": "Your changes to application.coffee broke the layout because\n$(\".gridster ul:first\").gridster().data('gridster').serialize()\nis being run before something (likely in gridster) is being properly initialized. This shouldn't happen, but the same thing happened when I tried to implement it myself. This is the \"race condition\" I was talking about. The following is what I see in Chrome and Firefox on Mac OSX Mountain Lion\n\n. This will work and the performance hit is minimal. I've reflected the change in the most up to date pull request.\n. Merge away!\n. ",
    "cbeer": "+1\nI'm interested in the same. I have some (ugly) code in the branch mountable-app in cbeer/dashing. I'm not ready yet to send it as a pull request, and there's still a lot of work to make the javascript work right, and the event stream depends a lot on your server configuration. \n. ",
    "plukevdh": "+1\n. ",
    "brentvatne": "+1! This would be a great feature\n. ",
    "cupakromer": ":+1: \n. ",
    "luis-ca": "+1\n. ",
    "jarthod": "I'm also interested in this feature and will be happy to help ;)\nI'll have a look at @cbeer branch.\n. ",
    "casoetan": "This would be a great addition.\n. ",
    "jipiboily": "I have started some work two weeks ago that I had to put on hold. Just took some time today to work on that. I think I am getting near a decent proof of concept for that.\nThe work can be seen on my fork but all is in those two commits:\n- https://github.com/jipiboily/dashing/commit/1cf3072d780c103f2fd932c23ab2ee5a22414653\n- https://github.com/jipiboily/dashing/commit/374e0a67a70557c02b2abb6b578f1b2e754882fb\nYou can see a Rails app mounted with it here: https://github.com/jipiboily/dashing-mounted-rails-app\nThe major problem for now is that we need to set config.threadsafe! and this is not something we want, especially not in development. I don't have any more time to work on that for a couple of days probably, if someone want to take a look at what needs to be fixed, that would be awesome. It most probably has to do with the send_file here. I think that's the last thing not working from my primary tests.\nDisclaimer: I am not used to work with Sinatra, I might have done silly things. Also, code quality here was not the idea for now, just hacking a proof of concept and see where that leads.\nPlease let me know what I did that was silly, stupid or good if there is some. Comment the code if you want and let me know if I am on the right path with that and if this is the kind of thing that is wanted for Dashing.\nThanks for Dashing by the way! :)\n. To be honest, there was very little to no work on this for quite a while, only some +1. I think this won't happen unless more folks are interested in this and diving in. The work I did 7 months ago was never tried or reviewed by anyone (not pointing at Dashing's team at all here, just saying no one from the community dived in). This makes me think there is not enough interest in that to make it worth to add complexity. Added complexity means harder to maintain and this is certainly not a good idea in an open source project for maintainers to add complexity only for a few folks interested to use it but not helping maintain it. My 2 cents! :)\nPS: this is all fine by me! :)\n. ",
    "ainformatico": "and what about @padrino support? I will be happy to help. Anybody else?\n. ",
    "uri": "+1\n. ",
    "gregology": ":+1: \n. I'm having the same issue running 1.9.3p374 on Ubuntu 12.04. Also, thank you team! It's such a lovely product :+1:\n. Does anywhere on the Internet still work in IE?\n. It's great that Microsoft are going in the right direction with IE. I've actually got the reverse problem at work because we use Outlook Web Access which only gives you the cool features in IE and I'm an Ubuntu user :(\n. That's awesome, I'd been playing around with wine and IE 10 and it was such a hassle. I will download the win8 IE10 stack over the weekend and have a play next week. Thanks @Pomax!\n. That's great, I keep getting annoyed looks from people when they have to update their dashboard :+1: \n. What browser are you using? Internet Explorer is not supported because it doesn't support server-sent events :(\nhttp://en.wikipedia.org/wiki/Server-sent_events\n. I forward all users without chrome to a getchrome.html page stored in public using javascript located in layout.erb. https://github.com/AmnestyInternational/LCARS/blob/master/dashboards/layout.erb\n<script>\n   if (!window.chrome) {\n     self.location=\"/getchrome.html\";\n   }\n</script>\nYou could use the same method to forward only IE users to /getchrome.html. This is my getchrome page\nhttps://github.com/AmnestyInternational/LCARS/tree/master/public\n. :+1: I was forwarding people to an error page with instructions on how to get chrome because I was working with the Amish :)\n. Twitter has retired version 1.0 of their API as of the 11th of June. Version 1.1 requires authentication so it's a little bit more work than a simple http get.\n. What are everyone's thoughts on parsing BBcode for the handful of cases?\n. ",
    "gottfrois": "+1\n. Hey guys !\nI've worked on my own version of a Dashing Engine since I wanted to learn more about Rails Engines. It is working well, easy to use and I added a bunch of configuration options to it.\nI'm using Redis to push & pull data to the widgets since not all of us have their project under Rails 4 yet. This way you can have a dedicated app for your dashboards and a shared Redis database.\nIt's also functional using CURL commands.\nPlease give it a try and let me know what do you think. This is not a beta version, I am using it in my day to day work as a metrics viewer on a TV screen.\nHere is the link https://github.com/gottfrois/dashing-rails\nHave fun!\n. Either one is possible. You can have one dashing-rails app with many dashboards (one dashboard per application you want to monitor for example). Or have one dashing-rails app with only one dashboard for one app to monitor.\n. Hey, yes since I'm using ActionController::Live to push the data to the clients. Basically, you can mount Dashing-Rails on a Rails 4 application. For Rails 3 application, you'll probably want to have a separate Rails 4 app and push your metrics into the Redis instance.\n. You can also use dashing-rails which use puma as well\n. I will follow this thread since it touches dashing-rails gem. But my first guess is that he needs to somehow add some JS code in the default meter widget code.\n. https://github.com/Shopify/dashing/issues/355\n. Thx @cefigueiredo answering. dashing-rails is now using batman-rails so I think you can safely close this ticket.\n. ",
    "szalansky": "+1\n. ",
    "chrism": "+1\n. ",
    "a4anishm": "+1\n. ",
    "jakeonrails": ":+1:\n. Good work @gottfrois! I'll check it out!\n. ",
    "ryansouza": "I've started a conversion of dashing to a rails plugin here, focused on integrating w/ rails kind-of like this.\nIts barely working in a hello-world way right now, I'm hoping to get back to it this coming weekend, but I'd love feedback either way :)\n. ",
    "jamiefolsom": "Sounds cool. I'll install this and try it out. Do you plan to work on it more?\n. Sounds great! Quick question -- when you say you use a dedicated app for dashboards, do you mean you use one dashing-rails app to host dashboards for multiple different rails apps? If so, would it work as a dashboard within a single rails app as well? Thanks!\n. Great!\nOn Mon, Aug 12, 2013 at 11:51 AM, Pierre-Louis Gottfrois \nnotifications@github.com wrote:\n\nEither one is possible. You can have on dashing-rails app with many\ndashboards (one dashboard per application you want to monitor for example).\nOr have on dashing-rails app with only one dashboard for one app to monitor.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/5#issuecomment-22503304\n.\n. Hi @gottfrois, I am looking at integrating this into a rails app. Your readme states rails 4 is a requirement. Is that the case? Many thanks.\n. Understood; thanks.\n\n\u2014\nSent from Mailbox for iPad\nOn Fri, Aug 23, 2013 at 3:34 AM, Pierre-Louis Gottfrois\nnotifications@github.com wrote:\n\nHey, yes since I'm using ActionController::Live to push the data to the clients. Basically, you can mount Dashing-Rails on a Rails 4 application. For Rails 3 application, you'll probably want to have a separate Rails 4 app and push your metrics into the Redis instance.\nReply to this email directly or view it on GitHub:\nhttps://github.com/Shopify/dashing/issues/5#issuecomment-23147903\n. \n",
    "marr": "Any update on this issue? I have a rails 4 app and was wondering if its possible to mount a dashing app into it.\n. ",
    "SeanJA": "It seems to be ignoring the current value for me, but the last value works fine...\nif I do this:\ncurl -d '{ \"auth_token\": \"AUTH_TOKEN\", \"current\": \"40\", \"last\": \"499746\", \"id\": \"per_day\", \"updatedAt\": \"2012-11-01 16:49:24 -0300\"}' \\http://localhost:3030/widgets/per_day\nthen I do this:\ncurl -d '{ \"auth_token\": \"AUTH_TOKEN\", \"current\": \"600\", \"last\": \"10\", \"id\": \"per_day\", \"updatedAt\": \"2012-11-01 16:49:25 -0300\"}' \\http://localhost:3030/widgets/per_day\nThe last value is picked up, but the current value is ignored (in all browsers)\n. This seems to work though:\ncurl -d '{ \"auth_token\": \"AUTH_TOKEN\", \"current\": \"40\", \"id\": \"per_day\", \"updatedAt\": \"2012-11-01 16:49:24 -0300\"}' \\http://localhost:3030/widgets/per_day\n. Isn't this very similar to issue 13? https://github.com/Shopify/dashing/pull/13\n. 2 would be similar to the Directory of Third Party apps for App.net, a public wiki page?\nhttps://github.com/appdotnet/api-spec/wiki/Directory-of-third-party-devs-and-apps\nseems to have worked quite well for them\n. A public wiki might get a lot long and be hard to search though...\n. True, a table with the relevant info would work (off the top of my head):\nwidget_name|version|widget_type|service(s)|description|author\n. Not sure that it would be as simple as that, there would still be some configuration that would need to be done on a per widget basis (username/password, api key...).\nThe ones that I have made so far are just jobs that use the number widget: google analytics numbers, brightcove analytics, flurry analytics, twitter follower count, and disqus comment count.\nSince I have got 4 google analytics numbers, 2 flurry numbers... I think It would have to be more like this:\ndashing generate [widget|job] whatever as [job_name]\n(if you were going to go that route)\n. Sounds like this might be similar to the way that sublime handles it: http://wbond.net/sublime_packages/package_control\nHow do you know what the settings are before you do the dashing generate command?\n. ",
    "martunta": "I see the same problem on firefox for number widgets. In Opera everything works fine. \n. Managed to get it to work. Had to set passenger variable\nPassengerSpawnMethod conservative\nafter that, scheduler seems to run normally. Thought i am still a bit afraid of what will happen if passenger decides to stop the process or run more than one process. Though, as dashboard is sending /event requests to server all the time, I guess it won't stop by itself. \n. ",
    "derhackler": "I'm having the same problem with the number widget where I show the number of open issues in our ticketing system. I'm using chrome and it's currently showing 14. The developers use Firefox which shows 1. And top management uses IE which does not show a widget at all :-)\n. ",
    "davefp": "\nTop management uses IE which does not show a widget at all :-)\n\nThat's part of our secret plan to keep management out of the loop ;)\nActual answer: Dashing isn't officially tested on IE atm. Sorry.\nOn 14 November 2012 09:17, derhackler notifications@github.com wrote:\n\nI'm having the same problem with the number widget where I show the number\nof open issues in our ticketing system. I'm using chrome and it's currently\nshowing 14. The developers use Firefox which shows 1. And top management\nuses IE which does not show a widget at all :-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/6#issuecomment-10367330.\n. I've pinpointed the problem: Firefox doesn't seem to like the Dashing.AnimatedValue function that's being used to animate the transitions on the Number and Meter widgets.\n\nAs a workaround, you can simply remove the Dashing.AnimatedValue definition in those widgets.\n. As @pushmatrix mentioned the framework originally used masonry.js to do layouts,\nwhich gave a responsive feel. However, there were issues with wasted space\non the screen as the bottom of the dashboard was inevitably 'jagged' due to\ndifferent widgets being different sizes. Column 1 would be longer than\ncolumn 2, for example.\nTo answer the 'how hard would it be' question: Not very. The markup for\neach dashboard could remain the same, whilst the js controlling the grid\ncould be swapped out for something more responsive (masonry.js, Bootstrap's\nresponsive media queries, etc.).\nThe main use case we saw was to make a dashboard that would look equally\ngood on 1080p TVs and small mobile devices. Ultimately we decided that\nsimply creating a two dashboards (using the same widgets) was easier than\nhacking one together for both scenarios.\nOn 5 November 2012 23:05, Daniel Beauchamp notifications@github.com wrote:\n\nDashing uses Gridster.js http://gridster.net/ for its layout, and as\nsuch is bound by the responsive capabilities of that library. In its\noriginal state, it does not support auto-resizing, but there has been much\ndiscussion about it over at ducksboard/gridster.js#5https://github.com/ducksboard/gridster.js/issues/5\n.\nThere is one way to configure Gridster such that it will attempt to\nauto-layout the widgets based on the screen dimensions. The drawback is\nthat the layout is only applied to the initial size of the window; if you\nresize, nothing will happen. To get this to work, go inside your\napplication.coffee file and remove the line\nDashing.numColumns ||= 4\nAlso make sure that you don't have any custom Dashing.gridsterLayout()config at the top of your dashboard's\nerb file.\nDashing's original use case was to display dashboards on 1080p tvs in a\ndeterministic fashion. Libraries like Masonry.jshttp://masonry.desandro.com/demos/fluid.htmlwere tried at first, but the issue was the widgets wouldn't necessarily\nrender in the same spot, or in visually appealing layouts.\nAlthough responsive wasn't the initial goal, I'd love to see something\nthat makes this possible for Dashing. Any suggestions are welcome.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/11#issuecomment-10098608.\n. @kevinthompson @MartynKeigher @joannecheng  I'm open to a merging a pull request with an alternate responsive layout.\n. Still open to a PR on this, but the question posed has been answered.\n. Merged as part of PR #164 \n. I'm also interested in getting this nailed down. Specifically, what format should new widgets take?\n\nMy ideal use-case would be bundling new widgets in gems dashing-whatever that can be added to a project's gemfile.\nYou would then be able to add the job and/or widget associated with the gem to the project with a command like this:\ndashing generate [widget|job] whatever\nDashing would recognise that 'whatever' is an existing widget and generate an instance of the whatever template for a job or widget rather than the default empty one.\nI had a go at implementing this yesterday but my knowledge of ruby metaprogramming failed me and I didn't get anywhere. :(\nWhat are other people's opinion on this? Am I overengineering things?\n. Good point.\nPer widget config could be done with further params dashing generate job whatever as whatever2 username password, this is really easy to do in Thor.\nIn fact, I'd ditch the 'as' and just have this: `dashing generate [widget|job] whatever name [options]\n. A javascript runtime is not explicitly specified by Dashing as some of them\nare platform dependent, people have preferences, etc.. Dashing uses ExecJS\nto pick a runtime at runtime  (yo dawg...) so you'll need to make sure you\nhave one installed before running Dashing. Info on the supported runtimes\n(and more info in general) can be found on the ExecJS\npagehttps://github.com/sstephenson/execjs\n.\nOn 9 November 2012 09:30, Benjamin Jorand notifications@github.com wrote:\n\nHello,\nI cannot start dashing when following\nhttp://shopify.github.com/dashing/#setup :\n$ bundle\nUsing backports (2.6.5)\nUsing coffee-script-source (1.4.0)\nUsing multi_json (1.3.7)\nUsing execjs (1.4.0)\nUsing coffee-script (2.2.0)\nUsing daemons (1.1.9)\nUsing tzinfo (0.3.35)\nUsing rufus-scheduler (2.0.17)\nUsing sass (3.2.2)\nUsing rack (1.4.1)\nUsing rack-protection (1.2.0)\nUsing tilt (1.3.3)\nUsing sinatra (1.3.3)\nUsing eventmachine (1.0.0)\nUsing rack-test (0.6.2)\nUsing sinatra-contrib (1.3.2)\nUsing hike (1.2.1)\nUsing sprockets (2.8.1)\nUsing thin (1.5.0)\nUsing thor (0.16.0)\nUsing dashing (1.0)\nUsing bundler (1.2.1)\n$ ruby -v\nruby 1.9.3p286 (2012-10-12 revision 37165) [x86_64-linux]\n$  dashing start\n/home/meister/.rvm/gems/ruby-1.9.3-p286/gems/execjs-1.4.0/lib/execjs/runtimes.rb:51:in autodetect': Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/execjs-1.4.0/lib/execjs.rb:5:inmodule:ExecJS'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/execjs-1.4.0/lib/execjs.rb:4:in <top (required)>'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:inrequire'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:in require_with_backports'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/coffee-script-2.2.0/lib/coffee_script.rb:1:in'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:in require'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:inrequire_with_backports'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/coffee-script-2.2.0/lib/coffee-script.rb:1:in <top (required)>'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:inrequire'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/backports-2.6.5/lib/backports/tools.rb:314:in require_with_backports'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/dashing-1.0/lib/dashing.rb:5:in'\n        from config.ru:1:in require'\n        from config.ru:1:inblock in '\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/rack-1.4.1/lib/rack/builder.rb:51:in instance_eval'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/rack-1.4.1/lib/rack/builder.rb:51:ininitialize'\n        from config.ru:1:in new'\n        from config.ru:1:in'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/rack/adapter/loader.rb:33:in eval'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/rack/adapter/loader.rb:33:inload'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/thin/controllers/controller.rb:181:in load_rackup_config'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/thin/controllers/controller.rb:71:instart'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/thin/runner.rb:187:in run_command'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/lib/thin/runner.rb:152:inrun!'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/gems/thin-1.5.0/bin/thin:6:in <top (required)>'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/bin/thin:19:inload'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/bin/thin:19:in <main>'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/bin/ruby_noexec_wrapper:14:ineval'\n        from /home/meister/.rvm/gems/ruby-1.9.3-p286/bin/ruby_noexec_wrapper:14:in `'\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/20.\n. If you look in the coffee file for a widget you'll see the code that gets\ncalled whenever new data comes in. From that function changing the\nbackground colour of the widget is a few simple lines of js.\nOn Nov 12, 2012 9:52 AM, \"spiddy\" notifications@github.com wrote:\nA simple use case of this would be to make a box color greenish when good\nvalues are given, and redish when bad values are given, giving a visual\nalert of things to notice.\nIt would be good to see a generic solution for existing widgets, or\nexplain how a new widget could be implemented to do that.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/24.\n. Look at the animation styles set in application.scss as well as the compiled styles. I have a hunch that there's something in there that FF is puking on.\n. Give each of your widgets a different ID and then have a single job that sends to each of them in series.\n\nLook at the sample dashboard job, it sends to three different widgets: https://github.com/Shopify/dashing/blob/master/templates/project/jobs/sample.rb\n. There are a couple off issues here:\n1. There isn't a class for the 'normal' state\n2. When the status is updated, the associated CSS class is appended to the node, which doesn't override the existing class if one exists\n. You can add an onData: method to your widget's coffee file to do transformations whenever new data arrives. There's a simple example in the number widget here: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/number/number.coffee#L18\nIt's also in the docs under the 'Anatomy of a widget' section here: http://shopify.github.com/dashing/\n. Dashing's just another web app as far as the system is concerned. Whatever\ntool you're most comfortable with should work.\nIf you're new to sysadmin-ing then just pick one and see how it feels :)\nOn 12 December 2012 05:42, Professor Falken notifications@github.comwrote:\n\nI'm trying to set up Dashing on a server so it will start on boot.\nWhat is the \"recommended\" way of starting Dashing on system startup? Init?\nMonit? God? Supervisord?\nAny help would be appreciated.\nThanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/47.\n. If you look at the source of the dashing binary you'll see that it's just\ncalling thin with some params:\nhttps://github.com/Shopify/dashing/blob/master/bin/dashing#L63\n\n:)\nOn 12 December 2012 08:55, Professor Falken notifications@github.comwrote:\n\nHi Dave,\nI'm not new to sysadmin, I'm just thrown by the need to call \"dashing\nstart\" to start the process, is there any reason I can't call thin direct\nwith -c config.ru? or is there some \"special sauce\" that the dashing\ncommand uses under the hood?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/47#issuecomment-11289419.\n. @pushmatrix Updated with @crcastle's suggestions.\n. FYI: That branch was mine from before the repo went public, I should have cleaned it up ages ago. Looks like @pushmatrix has deleted it now :)\n. gh-pages is a branch, not a fork ;)\n. @dieterdemeyer did you find a fix for the problem you're having?\n. ping\n. Sure thing! You'll have to create a new widget to do so, I recommend copying the number widget.\n\nOnce you have a new widget, look in the coffescript file and you'll find an onData method that gets called when it gets updated. In there you can do a switch on the value and set the background colour depending on the result.\n. @MartynKeigher You mentioned that you already know how to change the colour of the widget, so update the code in @pushmatrix's example to act on the background instead of the meter.\n. Works For Me (tm). Can you post more info about your environment? Browser, OS, etc.\nI wonder if there's some weird version mismatch going on somewhere. I've uploaded my Gemfile.lock, compare it to yours and see if there are any suspicious differences: https://gist.github.com/davefp/5149163\n. This change will make ALL h2 tags on the dashboard smaller. The correct place to do this would be in clock.scss instead so that it doesn't affect other widgets.\nEven then, this bug is dependant on the width of the widget. On the sample tv dashboard the clock displays fine.\nBecause of that, I don't think this edit is suitable for propagation back to the mainline.\n. Dashing relies on Server Sent Events, which aren't supported in IE.\n. All dashing start is really doing is calling this: bundle exec thin -R config.ru start -p 3030\nI'd hazard a guess that you've got some gem incompatibility going on somewhere. What happens if you run bundle exec thin start?\n. I thought that might happen :)\nSomewhere you have a version of a gem that's causing an incompatibility. I'm having a hard time figuring out which one. Here's my Gemfile.lock for a working dashing project. Compare it to yours and see if there are any differences. We might have to update Dashing's requirements to avoid such problems in future.\n```\nGEM\n  remote: http://rubygems.org/\n  specs:\n    backports (3.1.1)\n    coffee-script (2.2.0)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.6.2)\n    daemons (1.1.9)\n    dashing (1.0.4)\n      coffee-script\n      rack\n      rufus-scheduler\n      sass\n      sinatra\n      sinatra-contrib\n      sprockets\n      thin\n      thor\n    eventmachine (1.0.3)\n    execjs (1.4.0)\n      multi_json (~> 1.0)\n    hike (1.2.1)\n    multi_json (1.7.2)\n    rack (1.5.2)\n    rack-protection (1.5.0)\n      rack\n    rack-test (0.6.2)\n      rack (>= 1.0)\n    rufus-scheduler (2.0.18)\n      tzinfo (>= 0.3.23)\n    sass (3.2.7)\n    sinatra (1.3.6)\n      rack (~> 1.4)\n      rack-protection (~> 1.3)\n      tilt (~> 1.3, >= 1.3.3)\n    sinatra-contrib (1.3.2)\n      backports (>= 2.0)\n      eventmachine\n      rack-protection\n      rack-test\n      sinatra (~> 1.3.0)\n      tilt (~> 1.3)\n    sprockets (2.9.0)\n      hike (~> 1.2)\n      multi_json (~> 1.0)\n      rack (~> 1.0)\n      tilt (~> 1.1, != 1.3.0)\n    thin (1.5.1)\n      daemons (>= 1.0.9)\n      eventmachine (>= 0.12.6)\n      rack (>= 1.0.0)\n    thor (0.18.0)\n    tilt (1.3.6)\n    tzinfo (0.3.37)\nPLATFORMS\n  ruby\nDEPENDENCIES\n  dashing\n``\n. Which version of ruby are you guys using? thejson` gem is included in 1.9, which is why it doesn't appear in the Gemfile. Try adding it to your Gemfile explicitly and see what happens.\n. Not with the current implementation. However, there are versions of Dashing\ncurrently being written in Python, .NET, and a couple of other languages.\nThat said, the amount of ruby actually required to write a job is minimal.\nIf you're familiar with another scripting language, getting up and running\nwith Dashing should be straightforward.\nOn 27 March 2013 11:46, Micah Fitzgerald notifications@github.com wrote:\n\nIs it possible to write jobs in other languages (Python, Java,\nJavascript)? Yes, I know I could just learn Ruby, but I'm really just\ncurious.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/90\n.\n. @roblight is this still a problem for you? Please let us know if you can reproduce using the latest version of Dashing (1.2.0)\n. @oginuno Are you able to replicate this error with the latest version of Dashing (1.2.0)?\n. Fixed by #123 \n. Dashing uses Thin as its application server, so I'd recommend looking there for advice on scaling out the application to handle more concurrent users.\n\nUltimately it'll depend on your available resources, at some point you'll run out of memory/cpu cycles/available connections on the box you're running Dashing on. It's hard to give you good advice as I'm unaware of your setup.\n. This issue is out of scope for being solved here.\n. What's wrong with redirecting to a dashboard? I feel that allowing a default and root dashboard is confusing and unnecessary for most people.\n. Agreed. This is too specific for general use. Closing.\n. @pushmatrix Did this get done? If so let's close this issue.\n. Keep in mind that the browser state is not shared. Each client would have a different version of the list and if they refreshed they'd lose all the old state.\nIf you still want to do this, you'd need to create a new widget (based on the existing list widget maybe) that did some DOM manipulation in the onData function to append (or prepend) incoming data to the list already present.\n. Merged, but I don't have access to rubygems so it won't go out until @pushmatrix is around to push it there.\n. I'm a bit iffy on the hardcoded timeouts for server restarts. It seems somewhat arbitrary. An exponential backoff over a longer period might work better.\nI'd also like to see the restart route removed. I don't see it being very useful to most people.\n. You can use conditional comments in IE9 and below to render content to IE users only: http://msdn.microsoft.com/en-us/library/ms537512(v=vs.85).aspx\nFor IE10, MS recommends a different fallback strategy: http://msdn.microsoft.com/en-us/library/hh273396(v=vs.85).aspx\n. @MartynKeigher Have you tried either of the solutions here? I'm pretty sure they'd solve your problem :)\n. @MartynKeigher Add the following line to a new file in the jobs directory:\nDir[\"#{File.dirname(__FILE__)}/**/*.rb\"].each { |f| require f }\nThat will recursively require everything in the jobs directory downwards (i.e. subdirectories).\nI'll submit a pull request shortly adding this to Dashing proper, as suggested by @atrophic \n. Unless @atrophic wants to do it himself ;)\n. This wiki page has the info you need: How to change the default dashboard\n. At Shopify, we run our dashboards on HD TVs around the office. We used to run them through the built-in browser but we found that the processor on the TV wasn't up to the job. Now we have a Raspberry Pi attached to each TV to do the hard work for us. It works really well.\nI did a quick search for getting a web page running as a screensaver on Linux but didn't come up with anything I could pass on to you without knowing more about your setup. If you get something running, it would make a great addition to the wiki.\n. Default widget sizes are defined in application.coffee. Here's the line in question.\n. @pushmatrix I tweaked the functionality to put the history file in the local Dashing dir (i.e. .). I wasn't aware of the tempfile functionality though, that's a great alternative.\n. @derwin12 It should Just Work\u2122.\nMake sure that you run bundle update dashing in your project and then start the server with bundle exec dashing start. Once you shut it down you should see a history.yml file in your project dir.\n. @derwin12 \nRunning bundle update updates all dependencies listed in your gemfile to their most recent version. bundle update dashing will only update Dashing. This is useful when you have a lot of dependencies but only want to update one.\nAppending bundle exec to your command is basically saying 'use the version of the gem listed in the gemfile, rather than the system default'. The system default is the one you installed by running gem install dashing. If you run gem update dashing then you'll update the system's default install and you'll be able to drop the bundle exec.\nHere's a Stack Overflow Q/A in the context of rake, but the situation is the same here: http://stackoverflow.com/questions/6588674/what-does-bundle-exec-rake-mean\n. I think a solution on the client side would be more appropriate. Some more powerful number formatting tools can be found here: http://emcien.github.io/number-helpers-coffeescript/\n. You can do that in the onData function for a specific widget. There are a couple of widgets that do special things when updated, take a look at number.coffee for an example: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/number/number.coffee#L18\n. The code to parse the numbers is assuming that the delimiter is a .. The author is German (as far as I can tell) so the follower numbers would be written as 8.000 if localized correctly. In English speaking countries, that number would be 8,000, so removing the dot is unnecessary.\nTry removing the .delete('.') portion of the parsing code and see if that helps.\n. That should do it :)\n. Running gem update dashing will update the local copy of  Dashing.\nRunning bundle update dashnig will update the bundled version for your project only.\nYou probably want to do both, unless you start Dashing with bundle exec every time.\n. Thanks for the heads up!\n. Interesting. You're exactly right, the content_for line sets the title, which should be yielded in the layout on line 9\nFor some reason it's not. I'll have to look into it. Thanks for noticing :)\n. We haven't done a release to RubyGems with that functionality yet (it's still serving 1.0.6). If you wait it'll get released soon.\nIf you want thew new features now, you can clone the repo onto your local machine, then run this from the root dir of the repo:\ngem build dashing.gemspec\ngem install dashing-1.0.7.gem\nThat will build and install the newest code locally for you.\n. @derwin12 I just released version 1.1.0 of the gem, it contains all recent updates including the history file. Enjoy!\n. Please see #127, it deals with the same issue (albeit for a slightly different purpose)\n. This line is incorrect: tweets = Twitter.search(\"@{search_term}\").results\nThe hash on that line (which you replaced with an @) has nothing to do with the twitter search. It's part of the ruby syntax for including variables in double quoted strings. Revert your change to that line and everything should work.\ntl;dr: The only thing you need to change is the search term: search_term = URI::encode('@username')\n. @MartynKeigher At this point I'd recommend reading the docs for the Twitter gem that's being used to get the info. How to use Twitter's API (and its capabilities in general) is out of scope of this project.\n. Closing as off-topic.\nThere are plenty of modal dialog libraries out there, and adding them to a webpage is a generic issue that's not specific to Dashing.\nI'd start by finding a library you'd like to use, giving it a try, and asking for help there if you have issues.\n. That message gets printed for any error returned by the twitter gem. Update your rescue block to look like this and you'll get more info on what's going on:\nrescue Twitter::Error => e\n    puts \"Twitter Error: #{e}\"\n    puts \"\\e[33mFor the twitter widget to work, you need to put in your twitter API keys in the jobs/twitter.rb file.\\e[0m\"\n  end\n. There's a problem with the SSL certs on your machine. Give this solution a\nshot: http://stackoverflow.com/a/5973759/131066\nOn 9 July 2013 14:18, allisonmin notifications@github.com wrote:\n\nThis is what I get now after updating the rescue block:\nTwitter Error: SSL_connect returned=1 errno=0 state=SSLv3 read server\ncertificate B: certificate verify failed\n[33mFor the twitter widget to work, you need to put in your twitter API\nkeys in the jobs/twitter.rb file.\\e[0m\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/160#issuecomment-20694419\n.\n. The background and text colour aren't bound to variables in Batman the same way the other values (current, last, moreinfo). You can add code to the onData function in number.coffee to update the styles when you send new data.\n\nThis is already done for the status key, so take a look at that to see what's going on: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/number/number.coffee#L19\n. @bstephenf What cURL command did are you running against the code you posted above? I was able to get it working using the snippet @apeckham posted previously.\nWith regard to the status classed (warning/danger), setting the value to anything else should clear it. I commonly send 'status': 'normal' to do this. If that's still not working for you, please give us more information on exactly what you're doing so we can see where you're going wrong.\n. I believe so. Like you said, dashing is a sinatra app running on Thin. Under the hood, dashing start calls bundle exec thin -R config.ru start.\nLooking at the Thin docs, you can specify a number of config files in /etc/thin for the different apps you want thin to run for you. I'd create as many YAML config files as you need and point them each at a different rackup file. Then you should be able to start the server using thin start --servers 2.\nI've not actually tried this, but the Thin docs and some Googling lead me to believe it should work.\n. I'm not familiar with Rack::URLMap, and a quick search didn't reveal much. Can you elaborate on what it does and how it would help when using Dashing?\n. I like this a lot, it leaves the door open for people to add their own global events rather than locking them to certain ones.\n@cjolly I get the feeling that we should interrupt message propagation before calling Dashing.fire if it's not meant for our dashboard. Right now we have to check in each of the handlers. Please implement this and I'll merge the PR.\n. @cjolly Would you mind expanding this PR to use the temp file functionality for the history file everywhere (i.e. during regular use)? I was unaware of Dir.tmpdir when I merged the current implementation, and I think it would run a lot cleaner this way.\n. @cjolly I see. Thanks for the explanation. I definitely want the history file to stick around between server restarts, so let's leave it as-is. Merging.\n. What @pushmatrix said. The source files are application.scss for the styles and application.coffee for the js.\n. I'm not sure what's going on, but your browser window is reporting an IP address that isn't localhost in your screenshot. Have you modified your Hosts file at all?\n. If you don't know where it is, the chances are you've not edited it. If you\nwant to take a look though, here's a good guide:\nhttp://blog.grapii.com/2012/08/how-to-edit-the-hosts-file-in-mac-os-x-10-8-mountain-lion/\nOn 22 July 2013 16:13, allisonmin notifications@github.com wrote:\n\nHow do I get to the host file?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/169#issuecomment-21372014\n.\n. I think you have some strange things going on with your network. I'm afraid there's not much I can do to help from here, but it's not an issue with Dashing.\n. Your code should look like this:\n\nsend_event('tvLRnumberFF', { \"background-color\" => B21404 })\nYour symbol won't parse because of the dash, but switching it to a string should work.\nAs for the second question, look at using if statements in ruby. It's a very common task, so reading up on it will serve you well later on too.\n. Please squash these commits together and I'll merge this. Thanks!\n. Thanks!\n. That script is designed to make sure that any binaries installed by gems are on your execution path. I'm not much of  a shell scripter, so I can't tell you why it's not working.\nOn the other hand, I have an alternate method you might try. Adding the bin path to your global PATH variable should allow you to run anything that's installed by rubygems. Here's a good guide: http://www.linuxquestions.org/questions/linux-newbie-8/how-to-set-path-variables-403964/\nIf you run into more issues, I recommend Googling around the topic of running ruby binaries in linux in general, it should help you out.\nOh, one small thing: /var/lib/gem/1.9.1/bin/dashing -start is incorrect. you need to drop the dash before start.\nIt should look like this: /var/lib/gem/1.9.1/bin/dashing start\n. @awestvik please re-open this issue if you still have problems.\n. I'd love to see more themes. If you want to create one go ahead, and I can create a page on the wiki for third-party themes similar to the widget one that we can kick off with your submission.\n. @thenayr Excellent! I look forward to seeing it :)\n. @thenayr wow, that's badass. I love the Leap Motion integration!\n. Good call. merged\n. Take a look at the buzzwords.rb example job, it populates a list widget.\nSpecifically, you need to send an items array that contains hashes with label and value keys. It should end up looking a little like this:\njson\n    items: [\n      {'label': 'Incident', 'value': 22},\n      {'label': 'Request', 'value': 1}\n    ]\n. Can you post the jobs code you're running? That would help me diagnose the issue.\n. Are you starting Dashing with bundle exec dashing start?. I have a feeling you're mixing your Dashing versions somehow, prepending bundle exec will make sure that everything is using the same version.\n. That's very strange.\nWhat happens if you create a new Dashing project (dashing new blah) and run that? If it works, try copying your custom jobs/widgets etc. over to the new project and see if it causes it to break.\nSorry I can't be more help :(\n. @Sgoettschkes any luck with this?\n. Very strange. I'm sorry that I can't help further, but hopefully now that you've got things working on your laptop you'll be able to proceed. Best of luck!\n. Glad you guys got it sorted :)\nI think there might be a case for adding some better error handling around the loading of the history file. I'll have a think.\n. As discussed in #161, background colour isn't directly editable through the event. Assuming you still have your modified number.coffee file that scans for data['background-color'] though, the following should work:\nsend_event('tvLRtext2', { moreinfo: 'Latest Feedback', 'background-color' => 'red'})\nNote that the \"background-color\" key is a string, as the dash means it can't be a symbol.\n. I updated this myself, I can't/won't merge pull requests with minified js, too high a risk of malicious code getting in. Thanks for the heads up though, I appreciate it.\n. I don't have a display that size to test on, but seeing as the default margins are 5px around each widget (making the gutter 10px), the following base dimensions should work:\nDashing.widget_base_dimensions ||= [263, 246]\nTweak those as necessary, but they should be pretty close.\n. The thing about the meter widget is that the graphic is basically circular. Right now it's set to be as wide as possible but if a widget is shorter than it is wide (like yours), it'll overflow. You can get around this by explicitly setting a data-width attribute on the meter itself. You can see it defined here: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/meter/meter.html\nHere are the docs for the library we're using to generate the meters, it might have more useful info for you: https://github.com/aterrien/jQuery-Knob\n. Turns out there's an undocumented height option you can specify too. add a data-height=\"150\" (or whatever height you need) attribute to the meter definition, that should fix it.\n. Create a copy of the list widget (or just edit the original) and have it apply the shortenedNumber filter defined here: https://github.com/Shopify/dashing/blob/master/javascripts/dashing.coffee#L16\nThis is what the number widget does do display 10K instead of 10000. See it in use here: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/number/number.html#L3\nYour new list.html should look something like this:\n``` html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n. You'll also need to rename all the files in the new widget's directory. As long as your directory structure looks like this, you should be good to go:\n| widgets\n|\\ list\n| | list.html\n| | list.scss\n| | list.coffee\n|\\ listK\n| | listK.html\n| | listK.scss\n| | listK.coffee\n. You also need to edit the first line of listK.coffee to read\ncoffeescript\nclass Dashing.ListK extends Dashing.Widget\nI forgot to mention that, sorry.\n. I think this is happening because Dashing is taking the classname ListK and converting it to an underscored version to try and find the files. The convention is that file names are lower case with underscores before each previously capitalized letter. ListK becomes list_k.\nModify your folder name, file names, and the data-view property to be list_k and things should work again. If not, maybe just change the name to something simpler that's only one word.\n. I like this. Giving users the ability to use the app server of their choice is a great addition.\nBecause of the breaking changes it'll have to be part of a 2.0.0 release though, so I may not merge it in for a while. It will also be dependent on fixing the dashing stop command.\n. You can set an explicit font-size in the list.scss file.\nLook at the .li style defined here\nand change it to something like this:\ncss\n.li {\n  margin-bottom: 5px;\n  font-size: 12px; /*or whatever size you need*/\n}\n. If you want a style to apply to a single widget only, you can do the following:\nCreate a new file myWidget.scss in the assets/stylesheets folder. Inside, Add an id like this\n``` scss\nmyWidgetId {\nli {\n    font-size: 12px; / or whatever /\n  }\n}\n```\nThen add a class to the widget in question in your dashboard template:\nhtml\n    <li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"2\">\n      <div id=\"myWidgetId\" data-id=\"buzzwords\" data-view=\"List\" data-unordered=\"true\" data-title=\"Buzzwords\" data-moreinfo=\"# of times said around the office\"></div>\n    </li>\nThe styles from myWidget.scss will only be applied to the widget with the id myWidgetId as all the styles are nested under that id. You could do this using a CSS class too if you have more than one widget that needs to be altered.\n. Dashing's graph widget is powered by Rickshaw, so anything it can do Dashing can do too. I recommend reading the full Rickshaw docs if you're going to be doing heavy customization of your graphs. I've also outlined how to achieve the effects you asked about below:\nThe y-axis can be fixed by setting min and max attributes on the graph object. It'll look something like this:\ncoffeescript\n@graph = new Rickshaw.Graph(\n      element: @node\n      width: width\n      height: height\n      min: 0\n      max: 10000\n      series: [\n        {\n        color: \"#fff\",\n        data: [{x:0, y:0}]\n        }\n      ]\n    )\nFor custom x-axis labels, take a look at the source of the example here: http://code.shutterstock.com/rickshaw/examples/x_axis.html, particularly this snippet near the bottom:\n``` js\nvar format = function(n) {\nvar map = {\n    0: 'zero',\n    1: 'first',\n    2: 'second',\n    3: 'third',\n    4: 'fourth'\n};\n\nreturn map[n];\n\n}\nvar x_ticks = new Rickshaw.Graph.Axis.X( {\n    graph: graph,\n    orientation: 'bottom',\n    element: document.getElementById('x_axis'),\n    pixelsPerTick: 200,\n    tickFormat: format\n} );\n```\n. Quick question: Can you provide a few more details about the platform\nyou're using? Which linux distro? 32 or 64 bit?\nFor Chrome, you can see the network usage by popping open DevTool\n(Tools>Developer Tools) and selecting the Network tab. You'll probably have\nto refresh the page before it starts logging.\nFrom there you'll be able to see each resource and when it was downloaded.\nThe /events resource should keep growing, as it's where the streaming\ndata is coming from. Over time you'll be able to see how much data is being\ndownloaded.\nOn 12 August 2013 15:26, bgood-trada notifications@github.com wrote:\n\nI cycle through a few dashing dashboards with firefox or chrome on linux.\nFirefox slowly creeps up in memory usage over a day and will exhaust all\nmemory on the system in one day.\nI have tried chrome and I get excessive bandwidth usage for the same\nperiod.\nI don't see any special widgets being used. If I open firebug in firefox,\none dashboard throws this exception (I think it's in number.html):\n\"uncaught exception: series has no data {}\"\nSome numbers for an idea of how a dashboard causes a browser to misbehave-\n1) firefox uses >4GB RAM and >4GB swap after running for 24 hours.\n2) chrome downloads ~35GB/day of data.\nAnyone know how I can debug to get a better idea of what the cause is?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/187\n.\n. That data usage is way higher than it should be.\n\nI just noticed that you say you're 'cycling through a few dashing dashboards' in the original issue. Can you expand on that a bit? It sounds like you may have written some custom code to do this, which might be causing the problem.\nAlso, what kind of data are you sending, and how frequently? Take a look at the jobs you're running on the server and see what they're sending. Maybe images are getting transmitted frequently, or you're updating a data-heavy widget with a high frequency.\n. This isn't possible without multiple widgets out of the box.\nI think the following would work OK:\nDefine all the HoverDetail objects in graph.coffee, and then in the ready function do a switch based on a data.hoverdetail variable being passed in and assign the correct hover detail accordingly.\nThen you could write something like this in your dashboard:\nhtml\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"1\">\n  <div data-id=\"convergence\" data-view=\"Graph\" data-title=\"Convergence\" data-hoverdetail=\"blah\" style=\"background-color:#ff9618\"></div>\n</li>\nThat's still going to clog up the graph coffeescript though. Js isn't my fort\u00e9 unfortunately, but I'm sure there's a way to tidy things up there.\n. @mrhaiem I need more info before I can help you.\nFirst up: What error are you getting? Please share any output you have.\n. When you load the page, open the developer tools (instructions for Chrome and FireFox). You should be able to see any warnings/errors emitted there. You should be able to fix the problem based on the info provided there.\n. :+1:\n. The updated at function is defined in dashing.coffee, here: https://github.com/Shopify/dashing/blob/master/javascripts/dashing.coffee#L48\nI disagree that displaying HH:MM is 'wrong'. While it's less precise than HH:MM:SS it's accurate enough to still be useful.\nWhile the sample dashboards update widgets many times a minute, I've found that in production use it's much more likely that widgets only need updating every few minutes or longer.\nWith that in mind, I'm happy keeping the display as it is. If you want to change the behaviour on your own dashboards, you can override the method in your widget definitions.\n. Some of the newer icons won't work as Dashing doesn't (currently) use the most up-to-date version of fontawesome.\nCan you see the icons on the sampletv demo dashboard? In addition to Twitter the Clock widget has a clock and the Karma widget has a heart.\n. Start dashing with bundle exec dashing start to make sure you're getting all the correct gems loaded. Let me know if you're still seeing issues then.\n. The text widget just spits out what you send to it, so simply sending your data as a string should work. If you need line breaks, drop <br /> tags into your text and add the raw filter to the text widget HTML (otherwise it'll get parsed out).\n. Is this something you're planning on working on, or a feature request?\n. Absolutely, please submit a PR and I'll look at it. Thanks!\n. If you start Dashing with bundle exec dashing start the jobs you've written will get run on the schedule they define. The foobugs job you reference is set to run every 30 seconds, as defined here: https://github.com/foobugs/foobugs-dashboard/blob/master/jobs/yahoo_stockquote.rb#L32\nCan you post the full source of the job file you're trying to run? I get the feeling something isn't being loaded correctly.\nAlso, the latest version of Dashing is 1.2.0, so the version you've listed in your question must be from something else. Running bundle list | grep dashing in your project's folder should yield the version number.\n. Glad you got it sorted. I'll look into the ruby 1.9 vs 2.0 and update the docs as necessary\n. Fixes #206\n. @micpango While you were looking at this, did you find a workaround for #149?\nI'd love to have a wiki page detailing the steps required to get Dashing running on a sub-path. Once this is merged in and the next release goes out, would you be interested in writing one?\n. Very interesting. Can you reliably reproduce the case where the dashboard never re-attaches to the server? I restart my server all the time during development and I don't usually have a problem with the Dashboard failing to re-connect.\n. This is as designed. If you can't change the system clock on your machine then I cant't really help I'm afraid.\n. What section of the code is failing? In the web inspector in your browser grab a copy of the compiled application.js and see which lines are actually failing.\nAlso, jquery.min might just be a version of jquery in which case you can remove it as jquery is already loaded by Dashing\n. This site should help you out: http://js2coffee.org/\nHere's what it came up with for your code:\n``` coffeescript\n$(\"#chartContainer1\").insertFusionCharts\n  type: \"Column3D\"\n  width: \"600\"\n  height: \"300\"\n  dataFormat: \"json\"\n  dataSource:\n    chart:\n      caption: \"Monthly Sales Summary\"\n      subcaption: \"For the first half of 2013\"\n      xAxisName: \"Month\"\n      yAxisName: \"Sales\"\n      numberPrefix: \"$\"\n      bgcolor: \"ffffff\"\ndata: [\n  label: \"January\"\n  value: \"14400\"\n,\n  label: \"February\"\n  value: \"19600\"\n,\n  label: \"March\"\n  value: \"24000\"\n,\n  label: \"April\"\n  value: \"15700\"\n,\n  label: \"May\"\n  value: \"23700\"\n,\n  label: \"June\"\n  value: \"22800\"\n]\ntrendlines: [line: [\n  startValue: \"17100\"\n  displayValue: \"Last year's {br} average\"\n  valueOnRight: \"1\"\n  color: \"999999\"\n]]\n\n```\nThe only thing that jumps out at me is that instead of using the jquery selector to grab the widget by ID in the first line you can get it directly using @node. The graph widget does this: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/graph/graph.coffee#L10\n. Feel free to add a page to the wiki with this info in.\n. You can create a dashboard that is in essence one giant widget, inside of which you add/remove elements as necessary.\nAnother option is to use dashboard-level events (detailed in the API section of the docs) and build something that will add and remove widgets as @shaundon suggests above.\n. There's already support for different graph types on master, but it's not been released yet: https://github.com/Shopify/dashing/blob/master/templates/project/widgets/graph/graph.coffee#L18\nI'd love to see the other changes in a PR though. the graph widget definitely needs some attention.\n. I just pushed v.1.3.0 to RubyGems, it locks rufus to 2.x.x until we can fix it for version 3.\n. Oops! I just merged a fix to restrict the gem to version 2.x.x. Bad timing on my part. Please rebase this PR so that it merges cleanly and I'll get it in.\n. This is probably a regression in the 1.3.0 release (I updated fontawesome). Can you try a vanilla 1.2.0 install and see if the problem persists?\n. Thanks for troubleshooting, I've meged @sangmank's fix and pushed to rubygems. Version 1.3.1 contains the fix, so run bundle update dashing to pull it down.\n. Thanks for the fix!\n. Is this using Dasing v1.3.1 or v1.3.0? The issue should be fixed in the former.\n. do a gem update dashing to update the global version of dashing. Creating new projects will then use the new version :+1:\n. Yep, 1.8.x doesn't support that hash syntax. Upgrade to 1.9.3 and you'll be golden\n. @pushmatrix Thanks for keeping Dashing going all this time, and congrats on building one of the most popular dashboard projects out there. You're awesome \ud83d\udc4d \n. I've been building a Dashing clone that uses React on the frontend for a while now: https://github.com/davefp/handsome\nIt's still a work in progress and doesn't have anything in the way of integrations yet, but if anyone is interested in helping out or using it they can get in touch with me!\n. What's going on here?\n. ",
    "polymetis": "Well that is certainly a good reason. I do want to keep the app as simple as possible - was planing on using a Procfile actually - but didn't think about the job replication. I still think it will be an interesting thing for me to figure out and if/when I do I will report back with code.\nThanks for responding so fast. \n. Actually my blog is a rack-Jekyll-unicorn thing currently so I have some experience with that. :)\n. Okay I have figured out two way do doing this but both feel suboptimal. Before pushing forward I would like an opinion. \nThe way would be to spin up a jobs dyno that passes the send events to unicorn running dyno. But this mean we would have to run two dynos on Heroku and one would just being jobs. Good if you have several hundred jobs but I don't think this particular use case is really what this software was meant to do. \nThe other feels hackish. Basically if would create a lock file that counts so that it each job would be preceded with a check if the file exists and remove it after a number of passes.\nThis just feels like an odd solution to the problem and I would have to muck about with the each iterator. Beyond the fact that I would have to somehow set the number of unicorn workers as a variable in the config settings so that it knows many times to count.\nIf anyone feels like weighing in but this hack seems a bit more trouble than it's worth. \n. I am still working on this - been having an odd week - and I would just like to chime in.\n[while talking this out with my roommate I realized this may be a fools errand for certain obvious reasons. Going to have a think.]\nAlthough I agree that this is a bit overkill for the traffic handling the feature even for the use case I was thinking of is it as a screensaver/mobile dashboards. \nThis is still not a lot of connections to handle but if we have to handle updates without shutting down the server completely. Active connections will keep an active version of the app running until close and new connections can just get the updated app. \nMind you, this does not work on a heroku deploy but then again the app would work about the same in all other regards so I don't think it hurts. \n. Sorry meant to close this. This turned out to be a bit a foolish errand. Generally speaking if you ever got to the point that unicorn was needed it would be wiser to spin up a second dyno and split the the scheduler and jobs to that process. \nFun experiment though going to work on fancy widgets instead. \n. ",
    "tobi": "Locking and message pumping are both things that redis is good at. If needed, adding some redis code to have several instances of dashing communicate is probably the best option. However, I think it's overkill - dashing is super simple right now and should never need more then a single instance.\n. ",
    "joannecheng": "I made a pull request (https://github.com/ducksboard/gridster.js/pull/77) on gridster to support widget dimension resizing after initializing. I hope this helps.\n. ",
    "MartynKeigher": "Any news on the progress with this at all? Sounds like a great enhancement.\n. So was this eventually figured out?? & if so, where is it?? Would be nice to see what others have done with this Dash'board'! ;)\n. Yes I am talking about the meter widget. Thank you so much for the quick response!!\nThis DOES change the colors but it changes the scale and the number, and my goal was to change the color of the tile instead??\nIf this is not possible, then I will change the bg color of the tile and stick to as we have it now, but i could do the tile..then Hell's yeah!! ;)\nAwesome dashboard you have here guys!! Loving the work. :)\n. Could you please re-open this, as this is still not completed!\nYes..the number's changed color...but i wanted the TILE to change color!\nAny thoughts on how I could do this?\n. Quick update...\nI created a new 'asset' for a different image and I can now display multiple images. However, if i wrap them in a HREF to 'their own' URL's, they all still point to the URL in the 'default' image asset.\nSo...multiple images (assets), but only one URL for all. Any thoughts?\nThanks.\n. Yee, the image widget.\nMy dash is at 10.20.10.63\nBasically what I'm after doing is have a /main dashboard be full of Company logos to be precise & when i click on the logo of client \"ABC\" it will take me to http://10.20.10.63/ABC. If i click on Client XYZ, it will take me to http://10.2010.63/XYZ.\nTrouble i was having is that, when i create a new asset for each \"image widget\"/\"client logo tile\" it seems for some reason that i cant embed a different URL for each logo.\nHope that makes more sense.\nI will work on it tonight and see if i get any progress on it, I will let you know.\n. Hey guys, SO sorry it took me a while to get to this...Been out of town of projects and now catching up...\nSo this DID work! but... when I drag the tile with the image on it and I let go to \"drop it\", it goes to that link. So now the link does work, but i don't want to go to the link when i drag it?\nAny work-around/fix for that?\nThanks.\n. Hey pushmatrix & thank you a quick response!\nOK, so... here is my rb file for the Meter widget, that works just fine!!\nhttp://pastebin.com/6KejKWvR\nWhat I am after is doing 4 or 5 of these SQL queries, that would each be in their own PHP file to return a value next to the 'words'.\nIs THAT doable? As I'm having a hard time getting used to the way I need to set this up! :(\nAny help would be appreciated!\nThanks again!\n(Sorry for the pastebin link...couldn't get the text to show as code somehow!?)\nMartyn Keigher\n. So i updated my Shopify/dashing with this code, and it wont load??\nSo i put it back to the original and it works just fine again. Am i missing something out that i also need to update??\nThanks.\n. Yeah i restarted the service but still didnt work.\nI'm thinking it would be nice for them (someone) to upload a new master zip with the modifications that have been made.\nJust my .02 :)\n. Awesome! Thanks!\nGot plenty of email notifications today so you have defo been busy!! :)\nThank you so much for updating things...I'm off to install the new code in my lab. Will let you know results! :)\n. Do i add these lines in the 'sites-available/default' file of Apache?\n. Thank you so much!! I really appreciate this and I am looking forward to what you do with the updates!! :)\nMassive +1 and kudos to you pushmatrix!! \n. Hey Fuzzy, \nI have managed to install dashing using the currently available MASTER.ZIP from this repo. If you need some assistance getting it up and running, and perhaps you might be interested in getting it \"auto start\" with your server... I can help you with that too!\nAs for it not running remotely...I can take a look over your config and help you out if you want??\nProb a REALLY stupid question (and im really sorry for asking)...but your are putting \":3030\" in your URL to view it remotely?? and can you ping the Ubuntu VM from where you are trying to view it from!?\nWhat does a telnet repsonse give?? And did you perhaps change the port number from 3030 OR do you have something else running on 3030??\nI have my dashboard setup in my lab, you can view it here: http://lab.martynkeigher.com:3030 \nSpeak to ya soon.\n. HHmm.... is your dash external facing? If so, whats the URL? I'll see if it can display data for me.\nIve never had issues viewing data on the dashboards like this. I have all browsers installed and check them all regularly. (Reason I have them all...I do website development/design) They're all patched and plugins updated, etc.. wondering why no data pulls through though!! Check your plugins for updates etc...\nI primarily use Firefox on Windows 8 (currently version: 21.0) and I have no issues.\nDo u have a server you could throw another VM on of Ubuntu Server and see if it happens again? \nAnother thing you could do, is temporarily disable the firewall on the Ubuntu desktop to see if that for whatever reason could be causing the issue here??? You would do this using the following command:\nsudo ufw disable\nTo re-enable it its:\nsudo ufw enable \n. +1. PUMA for the win! ;p \n. Hey all, \nThis can be closed. I fixed it. I forget to update a few things:\n\napt-get install ruby1.9.1 ruby1.9.1-dev rubygems1.9.1 irb1.9.1 ri1.9.1 rdoc1.9.1 build-essential libopenssl-ruby1.9.1 libssl-dev zlib1g-dev\napt-get update\napt-get upgrade\napt-get install nodejs\n\n& finally.....\n\ngem install bundle\n\nOnce I ran these..everything worked!\n. PushMatrix wrote: \"If you'd prefer, you can edit the dashing.rb file to allow passing these variables in.\"\nAny chance you could show us how that is done, as I would really find this useful on my dashboards.\nThanks.\n. You don't have to re-open this... but I wish I had have read this about 30 mins ago! :(  lol\n. Ah Gotchya!\nI figured the # would have something to with Ruby, but i wasn't 100%. I really appreciate the quick response to this! :)\nEDIT.... \nSo... this does and doesn't work. I replaced the #Citrix with my twitter account @martynkeigher, and although it does come back with tweets, it's not MY tweets, its just tweets that include @martynkeigher(where i'm mentioned)  in the tweet itself. What I am after is a 'tweet timeline' from a @ account, so that when my system generates alerts, (via a dedicated twitter account)... it shows on the HUD. \nI'm just just using my @martynkeigher to test the functionality at this point.\nAny thoughts??\n. http://fortawesome.github.io/Font-Awesome/3.2.1/cheatsheet/\n. Hey,\nI also noticed that the images where also a little big for what I was needing, they really took up too much room (even in the background!), so I created my own background class in assets/stylesheets/application.scss and called this new class in my layout.erb file. Instead of icon-background. I also changed my top and opacity attributes.\n.icon-background2 {\nwidth: 100%!important;\nheight: 100%;\nposition: absolute;\nleft: 0;\ntop: -50px;\nopacity: 0.15;\nfont-size: 195px;\n}\n. OK...I 'think' I know where you are going with this one, so please correct me if I'm wrong! :)\nAre you trying to present tweets FROM the @HomeFinder1 timeline in your widget?\nIf so, I also had this problem.... It turns out that it's not really a problem at all. From the looks of it, @HomeFinder1 or #HomeFinder1 has to be in the body of tweet message, as opposed to it just coming from the account.\nI too was puzzled by this for a while, but as soon as i \"mentioned\" my @RMMAlerts account, using my @MartynKeigher account, the one test tweet showed up for my search_term = URI::encode('@RMMAlerts') search term.\nIf someone knows HOW to pull a TIMELINE into the widget, then please do share the knowledge, as I would love to know how! :)\n. First, grab a couple of extra bits...\napt-get install freetds-dev\ngem install tiny_tds\nThen edit your Gemfile nano Gemfile\nAdd: gem 'tiny_tds'  to your list of current gems, save Gemfile, then do bundle install\nCreate your rb file: nano jobs/mssql.rb\n```\nrequire 'tiny_tds'\nSCHEDULER.every '300s', :first_in => 0 do |job|\nclient = TinyTds::Client.new(:username => 'username', :password => 'password', :host => '192.168.1.1', :database => 'dbname', :port => '1433')\n rs = client.execute(\"SQL Query Goes here\")\n rs.each do |row| \n  send_event('test', {value: row['value'] })\n end\n client.close\n```\nLastly, add the job to your dashboard using the following code: (I'm using the Hotness widget in the following example!)\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n          <div data-id=\"test\" data-view=\"Hotness\" data-title=\"Test Title\" data-moreinfo=\"\" data-cool=\"30\" data-warm=\"110\"></div>\n       </li>\n. Try running sudo apt-get update && sudo apt-get -y upgrade first, and then try apt-get install -y freetds-dev again.\n. Here is a copy/paste of a working MSSQL job. Take and change it to fit your needs... \n```\nSCHEDULER.every '300s', :first_in => 0 do |job|\nclient = TinyTds::Client.new(:username => 'fred', :password => 'P@ssword', :host => '192.168.1.1', :database => 'abc', :port => '1433')\n rs = client.execute(\"SELECT count(*) as xyz FROM [abc].[dbo].[SR_Service]WHERE SR_Board_RecID = \\'36\\' AND Date_Closed IS null AND SR_Status_RecID != \\'475\\' \")\n rs.each do |row| \n  send_event('ev1', {value: row['xyz'] })\n end\n client.close\nend\n```\nThe data-id that @tylermauthe referes to above, in my scenario here is ev1, and that is what I would call in my dashbaord.erb file. The query itself returns a numerical value, so I have it displayed using the hotness widget.\nNote: I have the tiny_tds gem installed and referenced in my Gemfile to access the MSSQL DB.\nHope that helps you out a bit.\n. Hey maxfields, \nI'm going to assume (seen as i don't have any more info to go off) that you are running Dashing on Ubuntu and that your ruby gems are installed in the default location at /var/lib/gems/1.9.1/gems.\nTake a look at server.rb located in the /var/lib/gems/1.9.1/gems/thin-1.6.2/lib/thin folder and on line 60/61 you will see ...\nDEFAULT_MAXIMUM_CONNECTIONS            = 1024\nDEFAULT_MAXIMUM_PERSISTENT_CONNECTIONS = 100\nI believe those would be the values that you would need to change and don't forget to restart thin for changes to take effect.\nHope this helps or at least points you in the right direction! \nRegards, \nMartyn.\n. Hey @maxfields2000 ...\nDid this help you out??\n. Well here is my awful workaround to complete the switch to puma ...\nAs my ubuntu server is a VM, i just to go the console and kick off sudo bundle exec puma there and just let it run. (doesn't affect my putty sessions then!) Totally 'OLD SKOOL'! ;p haha\n. Yup! Go for it man! +1000\n. Hey Rolfie,  Here is what I did....\nAdd the following code block ABOVE the \"\" line at the top of your dashboard.erb file:\n$(function bringToTop() {\n  $('li').live('click', function(e){\n    var widget = $(this).find('.widget');\n    if(widget.data('url')){\n      var url = widget.data('link');\n      var win = window.open(url, '_blank');\n      win.focus();\n    }\n  });\n});\nNext, add a 'data-link' property to your a tile's dashboard.erb config with the desired URL you want to go to when you click your tile. Here's an example:\n```\n\n      <div data-id=\"mydata\" data-view=\"Hotness\" data-title=\"Data Title\" data-cool=\"20\" data-warm=\"1000\" data-link='http:\\\\www.google.com'></div>\n    </li>\n\n```\nWith this feature added, you can have diff tile's have different URL's attached.\nHope this helps, although I hope you had already figured it out by now! - Sorry the delayed response.\n. I also have this issue, however access to my dash is actually running through a NetScaler. I have content switching, virtual servers, responders, etc... all setup to get to it, and I'm pretty sure that's MY reason. Now,.. while you may (or may not) be running it through a NetScaler yourself, what other network devices are you running it through?? Do you have concept of rule based forwarding on them at all or is purely ip:port access, on the same VLAN?\nI'm just trying to think outside of the box here on this one.\n. Turns out (in my case at least) its a THIN thing. If i run it on Puma.. its works straight away, even through the NetScaler.\nMove it onto Puma (off 'thin') if you can.\n. I had this issue once before... Installing NodeJS on my Windows server helped me out massively!! \n. I wonder if you could do it by having the data-suffix BE the other number you need?? I haven't tried this, but it could be worded something like this (?):\ndiv data-id=\"agentcsatmonth\" data-view=\"Number\" data-title=\"agent CSAT MTD\" style=\"background-color: #B06B0B\" data-prefix=\"\"data-suffix=\"Agent Surveys:\" + \" \" + data-id=\"agentsurvey\" + \" \" + \"%\">\ni class=\"icon-thumbs-up icon-background\">\nI doubt the EXACT syntax i have used above will work, as its stated, but something along those lines should do the trick, or at least point you in the right direction.\nYou will also have play with the number.html file if you wanted the agentsurvey to be a slightly different size text or even on a different line.\nI'm looking to do the same thing, so if you make any progress...i'd be curious to what it is that does this! ;) \n(if i figure out how to do it before you post it.. I'll also post what i find out!)\nRegards, \nMartyn.\n. Hey @tclass, mind sharing with the rest of the class you did this?? ;p\nThanks.\n. Yah... I gave it a go (with my limited knowledge and extensive googling) and didn't get it to work! I definitely broke my dash a few times along the way too.\nI ended up re-installing dashing from the master branch and settled for the 3.2.1 icons. ;p \nI would still like to see the new icons as part of this project though! :) The spinning icons for sure would definitely be a great +1 . Would bring a little more \"life\" into the dash i think.\nSpeaking off adding things... I wonder if you could add sound, or blinking tiles?? - Are those things achievable with the current master?\n. Hey Tyler, \nThanks for the prompt reply, and thanks for the suggestion on the blinking tile. I'll give that a whirl in my lab soon for sure!! FYI: My use-case is a \"Server Offline\" tile. I run a query against a MySQL db, so if the value in the tile (a single number returned from the query) is NOT 0, then blink, just to draw extra attn. to it. - but as you stated, there are several use cases for this.\nAs for the FontAwesome update... I realize i might be asking a bit much, so if it's too much of a bother, then at least consider it a feature request for Dashing 2.0! :)\nWhich... by the way.. Whats the ETA on that?? \nThanks.\n. Sounds like a plan! ;)\nAre you still using Dashing on Thin at all?? Fwiw: I shifted over to Puma and got much better results! I had plans I move it to Raptor (new passenger build), but not tried that yet! \nI'm an enthuastic user too for sure and I've been making some decent dashboards for my managed services practice (& others), but my coding skills aren't at the same level as my thoughts... Yet! ;p\n. Hmm... I may have to check out that Puma fork to be honest. I do quite a bit of documentation so when i do new things, I get all it noted (i live in evernote!) I can go over and validate it, so every time i install Dashing (as i blow it up on \"purpose\" sometimes) I manually convert it to run on Puma.\nThe reason why I went to Puma was because it was running behind a (Citrix) NetScaler and while dashing ran on 'Thin' it took 50+ seconds for the tiles show data, :-1: and with Ruby it was around 3 or 4 seconds. :+1: \nI also ALWAYS add this great tweak to it to: https://gist.github.com/jwalton/6670630 , although i 'think' it affects my ability to drag the tiles, or maybe that's something else?\nMy only missing piece to the instructions, is getting Puma to run as a Daemon. Right now (As my ubuntu server is a vm) i have to go to the console and kick off sudo bundle exec puma there and just let it run. :( \n+1 on the 'Everyone is always learning' quote!! A day without a smile (and a lesson learned) is a day lost! :) \n/me is off to look for the Puma fork! ;p\nOh... one last thing, if you was to do a fork that included the newer version of FontAwesome, would it be  configured to run on Thin or Puma?? - Thanks.\n. Yeah, sorry @cefigueiredo for bringing this one slightly off topic. @tylermauthe and I kinda segway'd a bit! ;p  Thanks @howardsternisbatman for bringing right back on track!!\nHaving the full use of FontAwesome (even including the animated icons)... would be pretty spectacular!! \n. Nicely done @jmb! @tylermauthe ... would your PR be on PUMA too, by chance? ;p \n. Hey all, sorry for asking a dumb question here, but what the simplest way to merge this PR into my current project? Usually I just grab the master and then make my changes, but this is a big one that I'd rather not do manually! ;p\nI suppose I could DL it and 'WinSCP in' to copy/replace files, but i know there must be an easier way! Apologies if this sounds very \"GitHub 101'ish\", but i'd love to know how! \nThanks for your patience!\n. Yeah, I'll prob just copy/replace the files as I have pulled the master, then got it running on PUMA. I was concerned that if pulled the PR, it would overwrite all the PUMA stuff I have configured. I'll go ahead and copy/paste the files the old fashioned way in WinSCP! I just don't wanna break it all over again! \n(PS: VMWare snapshots are your friend!) ;p\nThanks for your quick response! :) \n. ha ha... as SOON AS I copied the LAST file (via WinSCP), you replied! ;p\n(About to test it out now!)\n. @jmb YOU ARE A LEGEND!! ;)\nI know you cant tell from this image: http://i.imgur.com/y1WQPyD.png but the cog is spinning too! \nThank you so much for putting this up!! Can't remember how many times I broke it trying to get this to work! You will notice that the \"spinning icon\" is outside of the tile... I can work around this by lowering the font size! \nThank you once again! :)\n. For what it's worth, I now have a Dashing project running on PUMA and also with the updated font. I'll figure out how to get this up to GitHub today! (But first.. I need coffee!)\nPS: I realize that the comments here are growing quite a bit.. To minimize the chatter in here, I am also on IRC (Freenode network. Name there is \"MartynKeigher\". Maybe chat to you on there??? \n. Hey, \nThe default implementation of this will make the icons \"rotate around a relevant point on the tile\", instead of \"spinning on their own axis\" (spin). So to tackle this 'issue' i did the following:\nAdded an additional class in the application.scss:\n.icon-background-spin {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0.1;\n  font-size: 225px;\n  text-align: center;\n  margin-top: 55px;\n}\nThen in my layout.erb I called the new icon-background-spin for spinning icons and called  icon-background (as usual) for static icons.\nI also slowed the spinning down. Edit font-awesome.css on line 81 & 82 to the following:\n-webkit-animation: fa-spin 8s infinite linear;\nanimation: fa-spin 8s infinite linear;\nYou can also apply the same change to fa-pulse class on line 85 & 86, too.\nI would make a pull request if I knew how, so if someone wants to do this, then please... go right ahead.\nRegards, \n. I'm going to close this now as a PR was made. Hope it gets pulled into the MASTER branch soon. :)\nPR is here: https://github.com/Shopify/dashing/pull/514\n. Pardon my ignorance here (probably a simple Q) but... has this been merged into the master yet? and if not.. whats the easiest way to implement it?\nI'm looking to re-install my dashing VM, and I remember there was \"a lot of find and replace\" to get this rolling! Is this still the case today, or has something more streamlined been introduced, since this happened in February? \nThanks.\n. Hey @filthyrake, \nI too am suffering from the same issue here! It's got to the point where the dash is now practically unusable on Thin, and flipping it over to Puma made it a 'little better' but not brilliant.\nIts as if all my MySQL queries (which i checked the thread count on the database I'm pulling the data from... was at 1014!!), and therefore.. dash load times are pretty bad! Sometimes upto 30 seconds...\nOne thing i have done from time to time is kill the log file, that grew to 12GB recently, that helped a little bit, but not enough. Seemed that the tiles loaded quicker, and their titles... but the data (being pulled through multiple job.rb file) still took a while to populate.\nDid you make any progress on this, or are you still experiencing slow page load times? \nThanks.\n://mk\n. Hey @pushmatrix and @tylermauthe!!\nWas wanting to know when the switch to PUMA is on the roadmap! This month, next month, Xmas? I'm loving dashing more and more, and as i add more and more... that need for puma is, well... ya know! ;p\nThat (swith to puma) along with FontAwesome 4.4 being put into the master branch are my 2 items for a HUGE +1! \nFWIW: Here is a step by step I did to switch to the current master (at the time of this post) to Puma... http://pastebin.com/6LvgBFmb (cc: @robacarp) \nKeep up the awesome work guys!!\n://mk\n. Hey buddy, \nHere is what I have for a meter widget...\njobs/lollipops.rb\n```\nrequire_relative 'my_db.rb'\nSCHEDULER.every '10m', :first_in => 0 do |job|\n    db = MyDb.conn\n\n    sql = \"SELECT `name` FROM `table` WHERE `column` = lollipops\"\n\n    results = db.query(sql)\n\n    current_lollipops = results.count\n\n\n    send_event('lollipops', { value: current_lollipops } )\n\ndb.close\nend\n```\ndashboards/home.erb\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n      <div data-id=\"lollipops\" data-view=\"Meter\" data-title=\"Lollipops remaining\" data-min=\"0\" data-max=\"500\"></div>\n    </li>\nHope this helps you out! I don't use the graph, so hopefully someone else can share an example!?  \nSeen as your SQL will only return a number,take a look over at #321 to see how you can append your result with the \"%\" sign.\nFWIW.. My meter widget is not about lollipops! ;p (just using it as an example here!) and as for require_relative 'my_db.rb' check out this post: https://github.com/brianmario/mysql2/issues/474 \nRegards, \n://mk\n. Hi Bas!\nLet me know if this works...\njobs/clienthealthscore.rb\n```\nrequire_relative 'my_db'\nSCHEDULER.every '120m', :first_in => 0 do |job|\n    db = MyDb.conn\n\n    sql = \"SELECT IFNULL(ROUND((SUM(healthscore)/COUNT())10),0) as 'total' FROM plugin_sap_latesthealthresults\"\n\n    results = db.query(sql)\n\n    current_healthscore = object.each\n\n    send_event('healthscore', { value: current_healthscore } )\n\ndb.close\nend\n```\nRegards,\n://mk\nPS: Oh... and what it this  \"Labtech\" that you speak of?? ;p\n. Hey @BassieZ,\nSorry for the UBER-delayed repsonse!! I hope you already have this working!!\nIf not, then try this out... (Simple example, but you should be able to see what I'm doing there!)\njobs/agentcount.rb\n```\nrequire_relative 'my_db.rb'\nSCHEDULER.every '600m', :first_in => 0 do |job|\n     db = MyDb.conn\n sql = \"SELECT COUNT(*) AS 'count' FROM computers;\"\n\n results = db.query(sql).first\n\n current_agentcount = results['count']\n\n send_event('agentcount', { value: current_agentcount } )\n\ndb.close\nend\n```\n://mk\n. Hey, \nHere is a snippet of code in my RB (JOB file) I use, to do what it is that you're doing in your coffeescript file....\n```\ndb = MyDb.conn\n    sql = \"SELECT SUM(bandwidth) as 'sumb' FROM computers WHERE clientid = 1\"\n\n    result = db.query(sql).first\n    total = 0\n    total = result['sumb']\n    total = total / 1000000.00\n    total = total.round(2)\n\n```\nSimply put... I'm guessing you just need to change your .toFixed(2) to .round(2) ?\nHope this helps! \n://mk\n. Hey @R2Developer ... If this is fixed...can you mark this issue as closed, please?\nThanks.\n://mk\n. Hey @bombastic1.\nIs this still an issue? If so, let us know. if not... please mark this issue as CLOSED.\nThanks\n://mk\n. Hey Daniel! For sure man... I'm working on it!! \nWill let you know when/if I get it going! :) \n://mk\n. You need to install and configure the Dev Toolkit.\nDownload and guide can be found here. I see that you are running Ruby 2.2, so be sure to get the correct version of DevKit! ;p \n. Give this a read... i've used it for a while now with awesome success!!\nhttps://github.com/QubitProducts/dashing-contrib/wiki/Widget:-Switcher \n. Can you please put your operating_system.rb file here please?\nTO add: I had sporadic issues with Dashing on windows using Ruby 2.3, I held it back to 2.2.6.. ",
    "kevinthompson": "@pushmatrix & @davefp - With Dashing's interface and application (potentially?) being separated, is there still a possibility that this issue will be addressed in this repo, or should the issue be closed?\n. Ultimately I believe the decision of how to falls to the Dashing maintainer(s). If a separate repo is used, pull requests will need to be reviewed and approved. If a wiki were to be used instead, content and links could easily become outdated, and would need to be maintained. The latter does lower the barrier for community contribution though.\nAlso, although it's slightly off topic for this thread, I do like what @davefp is proposing in regard to widget and/or job inclusion and generation. It would be very nice to simply include a few gems for the required components.\n. @bashtoni It sounds like your issues is solved, but I would recommend trying the Midori browser on Raspberry Pi instead of Chromium. Midori performs much better, and might actually be able to render the number animations without any issue.\nWe're running three Dashing dashboards on Raspberry Pi computers, each with a fair amount of animation, or frequently redrawn html (widgets with data-foreach), and we found that Midori (a webkit-based browser) outperformed Chromium on the RPi, specifically in regard to animation.\n. This has actually been a problem for us on our dashboards for a little while. As I mentioned in a previous comment, we're using the Midori browser running on Raspberry Pi computers using the Debian Wheezy distro. \nAfter some period of time, the browser stops synching with the Dashing application. Refreshing the browser re-establishes the connection, so it seems that some browsers are simply failing to reattach to the event stream when losing connection.\nI've been meaning to spend a little more time looking into this issue as well, but if nothing else, hopefully this information helps someone else dig into the issue.\n. @pokerfundr Are you still having trouble getting your Dashing dashboard running on Heroku? Any new errors, issues, or insights arrise?\n. :+1: \n. I'll look into raising the appropriate error when a template doesn't exist. I agree with you regarding the Haml dependency as well. Eventually there could be dependencies for any number of rendering engines, but the gem should never include them all.\n. Before building additional functionality on top of Dashing, such as the Haml support proposed in #49, I'd like to form tests surrounding the existing functionality in Dashing.\nTo do this, I've started by establishing a base framework for testing the CLI. This is the first time I've attempted to test a command-line interface, let alone one that generates additional files, so I welcome any questions, comments, or concerns.\nIf the basic structure here seems sound, I intend to write additional tests surrounding the CLI, then move onto testing dashboard behavior, before finally returning to feature development.\n. Has anyone had a chance to look this over? If I'm on the right track here I'd love to continue fleshing out tests. Thanks!\n. If you're going to be posting points into your dashboard, without modifying the graph widget, I believe you're going to need to pass all of your graph's points through curl as an array of hashes with \"x\" and \"y\" keys:\nbash\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":\"1\", \"y\":\"9\" }, {\"x\":\"2\",\"y\":\"14\"}] }' http://localhost:3030/widgets/convergence\n. You're probably going to need to create a custom graph widget to display the data the way you'd like. The existing graph widget uses the Rickshaw JavaScript library and simply defines the width, height, and series of data:\ncoffeescript\n@graph = new Rickshaw.Graph(\n  element: @node\n  width: width\n  height: height\n  series: [\n    {\n    color: \"#fff\",\n    data: [{x:0, y:0}]\n    }\n  ]\n)\nRickshaw does support a number of additional options and extensions though, including an extension named Rickshaw.Graph.Axis.Time for adding x-axis time labels. View the source on their examples for more information.\n. @mattjerry - I'm not sure I understand what your last question was. Can you please rephrase? It sounds like you may just have one remaining issue with your labels.\n. Would it be possible for you to create a gist, or a public repo, of your dashboard project, with any sensitive information stripped out? It's difficult to discern the cause of this issue without more context.\n. I really like the idea of extending Dashing in this way. \nOne thing I had hoped to see in Dashing is the removal of any unrelated or ambiguous cruft that could trip up more novice developers, which in the case of your dashing-weather gem would be things like the references to Thor, but I'm not sure how much simpler a custom DSL would make things.\n:+1: \n. Is this still an issue? The AWS instance you linked to in your question appear to be offline.\n. @banafederico Could you add a few quick tests around your CLI.dash_separated method verify the functionality? Otherwise, @pushmatrix, this PR looks like it's ready to merge.\n. @MartynKeigher Did @pushmatrix's answer solve your problem? Can this issue be closed now?\n. Should this still be an open issue or has the original question been answered?\n. @brodo - Did @pushmatrix's answer resolve this for you? Are you still having trouble distributing your dashboard?\n. For anyone that is still having this issue, are any of you using a Ruby version manager (rvm, rbenv, chruby)? Can you verify that the version of ruby active within your project (ruby -v) matches the ruby versions you've posted previously.\n. I like all of the functionality suggested in this PR, but it seems like you might have two different distinct features here. One that converts jobs to independent classes that subclass Job, and another for the dashboard from config functionality.\nAll in all, :+1:.\n. In config.ru the default dashboard can be defined using set :default_dashboard, :sampletv. Can you see if a different default dashboard has been defined there?\n. Ok. I'm trying to reproduce the issue. What Ruby version are you currently using?\n\nI just created a new project and verified that there isn't a default dashboard defined in config.ru and I get 302'ed to /sampletv vs. /sample when I enter 0.0.0.0:3030 in Chrome (or FF).\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Paul,\n\nCan you provide a more detailed example of what you are trying to accomplish? Are you trying to change the directory where dashboards are stored? The url they're resolved at?\nIf you just need to define config variables, you should be able to do so in your config.ru file:\n``` ruby\nrequire 'dashing'\nconfigure do\n  set :auth_token, 'dev'\n# Custom Config\n  set :my_var, 'foo'\nhelpers do\n    def protected!\n     # Put any authentication code you want in here.\n     # This method is run before accessing any resource.\n    end\n  end\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n```\nThen in your dashboards, the config variables should be accessible through settings.my_var. For more information see the Sinatra docs on settings here: http://www.sinatrarb.com/configuration.html\n. What sort of data do you need to load prior to loading the dashboard? Is it not possible to create a job to load this data periodically?\nIf you do need to load data on page load instead of periodically, I would use Sinatra's filters. Here's the default generated config.ru file with a few added lines that define a before filter:\n``` ruby\nrequire 'dashing'\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\nhelpers do\n    def protected!\n     # Put any authentication code you want in here.\n     # This method is run before accessing any resource.\n    end\n  end\nend\nExecute some functionality before loading the \"sample\" dashboard\nbefore '/sample' do\n  # Fetch data...\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n```\n. +1 for haml support, but I believe you need to change more than just the dashboard rendering in order to get it working properly for any developer new to the project. For example, you should verify that a haml parser is available before attempting to parse a haml file.\nAlso, instead of a condition check, it would probably be best to have a way to register multiple parses, in the event other developers want to add support for additional rendering engines in the future.\n. I think requiring oauth credentials makes this job less valuable as part of the template. It may be best to move the twitter job outside of the project template, or the project entirely.\n. @hannesfostie Can you provide a bit more context; possibly a gist or a git repo? It would help to see your widget(s)' JavaScript and your Twitter job.\nWhile it's possible to pass variables such as username to your JavaScript in the way you've depicted, you would need your JavaScript to then make use of those variables to sort your content. In your CoffeeScript file you should be able to use @get('username') to fetch the username from your view configuration.\n. +1\n. I ran into the same problem running Chrome on a Raspberry Pi; Chrome doesn't seem to perform well on low resource devices. What you're observing is Chrome redrawing the HTML elements in the list.\nIn my case, I was able to switch to a different browser, but if that is not an option, you can try to customize the widget's JavaScript to be more performant. Instead of clearing the entire list and recreating each element, you can attempt to update the values inline, only adding or removing list items that are added or removed entirely from the source data.\n. I'm not sure it's a good idea to have the default template loading more gems than simply dashing.\n. You should be able to remove net/http and json since you're requiring twitter.\n. ",
    "tommasop": "Here is my adder.rb code\n(1..1000).each do |a|\n  system `echo \"#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{rand(10..100)};#{Time.now}\" >> C:/Users/winmais/code/anas_dashboard/fake_data`\n  sleep(0.2)\nend\nIf I move adder.rb in the dashing root folder there is no problem.\n. ",
    "pvande": "Sorry; yes, I have interest in that.  I've simply been a bit busy at work\nlately to make that change.  I hope to get to it soon.\nOn Sunday, December 16, 2012, Daniel Beauchamp wrote:\n\nAny interest in changing the implementation to use the event field I\nmentioned above? If not, I can modify this PR. I think it's a cleaner\napproach.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/pull/13#issuecomment-11430238.\n. \n",
    "keithpitt": "Ah! Being able to restart the dashboard remotely would be amazing. What do we need to do to get this in?\n. Yup!\n. ",
    "jmccaffrey": "Maybe the way Hubot does it, with a separate repo?\nhttps://github.com/github/hubot-scripts\n. ",
    "TheGraycat": "I'm keen for this one too.\nI'd suggest a wiki style approach at least initially. This would at least capture people's codes and get the ball rolling. Once it hit a good size, moving across to a repo style approach would be the logical step.\n. ",
    "activars": "I'm building a contribution gem that tries to make it easy to plug-in sharable widgets to dashing's main framework. I've already made rickshaw graph working seamlessly. A few more are going to be added to the contribution libs. It also allow to overrides templates on your existing app if you don't like the default template logic. It's still in prototype - api might change. \nhttps://github.com/QubitProducts/dashing-contrib\n. you can use this widget directly with dashing-contrib gem: https://github.com/QubitProducts/dashing-contrib\n. Do you have any sample data that you are using for me to test it out?\ne.g. the data format you push to Dashing scheduler.\n. I just test it out, multi doesn't seem to be supported. \n. This sounds like a great idea, I will add this API to dashing-contrib\n. ",
    "gordhawkins": "Billc:\nHow did you get a map widget to show up in Dashing?  I looked at the third-party plugins and didn't see anything...\n. Possible to have different authentication settings for different dashboards?  For example, I want to restrict access to a particular dashboard based on a username and password.\n. Cool.. but it seems to mangle the graph widget a bit (moves the background off the axis slightly).  Is anyone else getting that?\n. Ok - if you adjust the percentages to 107, and 115, it works.\n. Doesn't work for me.  As soon as I try to switch to 3.0.2 the jobs stop pushing data to the dashboard.  Switching back to 2.0.24 solves the problem.  Any thoughts?\n. ",
    "ghost": "I'v tried it both in Firefox 16 and Chrome 18 running on Windows XP. Ruby is 1.9.3-p0. Installed dashing via \"gem install\".\nJust tried it on the demo you provide via heroku on Windows 7 using firefox 15, same result. Then I tried Chrome 23 on Windows 7, there it works. Now I'm confused :-) Looks like it is a bug in javascript and number handling, that apparently isn't a bug anymore in Chrome 23.\nMany thanks in advance.\n. Hi pushmatrix, curious phenomenon today (please bear in mind I'm not that familiar with coffeescript). I edited the dashing.coffeescript file to add a console output of the values that are passed (key + value). After that it started working! Does the edit trigger a recompile of the dashing.js? If yes, I guess the javascript supplied with the gem is defective somehow? Hope this helps...\n. Hello Daniel,\nYou're fix seems to have done it, works on Windows XP with Firefox 16 and Chrome 18 now with the latest master.\nMany thanks!\n. i found a problem that nginx proxy_pass to dashing cannot load assets/xx.js and xx.css\nCould you give me a help?\n. I got that same error but am working on a mac. I tried following the solution, but it didn't work.\n. i'd love this -- just building new dashboarding solutions for work, and this would save a HUGE amount of pain for me and others in team...   Is there a PR that i can apply to my local?\n. Great - found that a little after the email, and will be generating using\nthat -- any thoughts to putting graphite events into the mix - or is that\nalready supported?\nOn Sat, Feb 8, 2014 at 10:33 AM, Jason Walton notifications@github.comwrote:\n\nI have a gist version of this here:\nhttps://gist.github.com/jwalton/6614023\nIt's where I was primarily developing this, so it probably has a few fixes\nthis PR doesn't.\n-Jason\nOn Feb 8, 2014 8:58 AM, \"Peter Daugavietis\" notifications@github.com\nwrote:\n\ni'd love this -- just building new dashboarding solutions for work, and\nthis would save a HUGE amount of pain for me and others in team... Is\nthere\na PR that i can apply to my local?\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/Shopify/dashing/pull/224#issuecomment-34544490>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/pull/224#issuecomment-34546757\n.\n. if you're still having issues - might be syntax on send.\n\nsend_event('synergy',   { value: rand(100) })\nNote that the sending values (2nd clause above) is wrapped in curly-braces \"{}\" - and your examples are not...\n. Does this also work for graph-widgets? I used this tutorial (which seems pretty much the same) and it did not persist graph-data. Can you confirm that?\nDo you know if there is a way to do this (load historic graph-data (more than one value).\nChris\n. ",
    "sdepold": "exactly :+1: thanks!\n. ",
    "adamstegman": "\nYou'll want to make sure you only ever have 1 instance of Dashing running at a time. If you have more than one, there will be multiple job schedulers, which will cause duplicated jobs to fire. Is there a way to limit it in passenger?\n\nI set PassengerMaxInstancesPerApp to 1, which is unfortunately a global setting affecting all apps but means dashing won't get more instances.\n\nThought i am still a bit afraid of what will happen if passenger decides to stop the process or run more than one process.\n\nI also set PassengerMinInstances to 1 in the dashing <VirtualHost> to make sure processes were not reclaimed .\n. ",
    "bjorand": "Fixed by installing nodeJS, thx.\n. ",
    "geebru": "Incredible! That fixed it - thanks for the link!\n. ",
    "santhoshjoy": "I am facing the same problem in Mac. I tried with Firefox, Chrome. Can you please help me\n382\n.    Did you get any solution for this\n. I am facing the same problem in Mac. I tried with Firefox, Chrome. Can you please help me\nhttps://github.com/Shopify/dashing/issues/382\n. Thanks @bacondrake . It got worked.\n. Do you have any idea on this??? @bacondrake @pushmatrix \n. Thank you @LKLG ...I did like set :default_dashboard, 'graph' .... where graph is my erb file which it needs to load by default. It worked. Thanks again... Closing it\n. ",
    "adityai": "I am getting this error with ruby 1.9.3. Any suggestions?\n. I am getting this error with version 1.9.3 and 2.2.0. Version of dashing installed is 1.3.4. Any suggestions?\n. Carlos,\nI realized later that the os had a version 1.8 by default. I changed it to version 1.9 and I was able to fire up a dashing dashboard.\nThank you,\nAditya.\nSent from my iPhone\n\nOn Feb 9, 2015, at 5:23 AM, Carlos Figueiredo notifications@github.com wrote:\nAs I answered you on #22 . It can not be the same error, because these mentioned errors are about ruby 1.9+ hash syntax. If you are really having this exactly error, your env are using ruby 1.8 and you doesn't know about. \nIf you want get help, send us what u get running ruby --version and the error message you get when run dashing start\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "cefigueiredo": "It can not be the same error on ruby 1.9.3, if so, probably  you are using 1.8 without know about. \nGuess you use RVM on your user profile, and are having troubles starting dash by a script placed on rc.d or other similar unattended script runner engine.\n. Some news here... I'm getting the same trouble on dashing 1.3.4, thin 1.6.2\n. That issue seems old enough to be closed! \n. Any news here? I'm getting the same trouble! \nBut on a default thin server, on ruby 2.0.0 and 2.1.2, dashing 1.3.4\nYeah! The dashboard has started! application.js:19500\nConnection opened \nEvent\nConnection error \nEvent {clipboardData: undefined, path: NodeList[0], cancelBubble: false, returnValue: true, srcElement: EventSource\u2026}\nConnection opened \nEvent {clipboardData: undefined, path: NodeList[0], cancelBubble: false, returnValue: true, srcElement: EventSource\u2026}\n. As I answered you on #22 . It can not be the same error, because these mentioned errors are about ruby 1.9+ hash syntax. If you are really having this exactly error, your env are using ruby 1.8 and you doesn't know about. \nIf you want get help, send us what u get running ruby --version and the error message you get when run dashing start \n. Do you get some glues on your console? It looks like you could not start Sprockets or something has broken when the app started...\nBecause you are suposed to see an compiled application.js, besides the raw application.coffee and Sprockets are responsible for it..\n. And, it is known that some ruby gems has issues when running on Windows environment. So, I suggest you install and test your app on a *nix environment. \n. Great that you solved your problem! :D\nThe only relation I can see, is with the javascript engine, that when u install Node.js, you use its engine.\nSo just by installing node.js, you should use the coffee-script gem without problem, don't being necessary install it by npm. \nYou could try install only the gem therubyracer besides node.js, to remove third-party dependencies.\n. That repository has no compatibility with rails, and it's not because of batman itself. It's because it is a Sinatra's framework.\nYou should see dashing-rails\n. But besides the missunderstanding of @ravishi about rails. It would be really nice to upgrade batman and take advantage of batman-0.16.0 as well.\n. It's on ./assets/stylesheets/application.scss\ncss\n$background-color: #222;\n. \ud83d\udc4e for style tag\nIt's possible, but it sux. You will have a painfull life when decide change again and search EVERY erb file to update your styles...\nDashing.io uses a lot of SASS style on the .scss files but it's not mandatory. You can override it and write the CSS in a more verbose way, because it still understand it. \nSASS just add some structures to let you repeat less code, setting variables and letting you write css as partials (or snippets) to be imported in a biggest one to organize your code, and some other tricks to repeat less code when the behaviour repeat.\nYou should learn at least a bit of SASS. It is a nice reading and it will improve a lot your css skills.\nBut if you don't. No problem. As I said before, you can still write your css as you know SASS just add structures that will be translated to normal CSS after processed.\n. I'm not sure if you are talking about widget background or entire page background.\nFor entire page, you can add a class chosen by you on body tag, and style that on the scss, setting the background-color for that class like:\nhtml\n<body class='prettyBG'>\nscss\n// default setting\nbody {\n    background-color: $background-color;\n}\n//your setting\nbody.prettyBG { \n    background-color: $your-fancy-background-color;  //SASS syntax is not mandatory, i'm just lazy \n}\nFor a let the entire page background there, and change just the dashboard background (gridster) you can add a class into the div where you the dashboard are inside. Actually is a div where there are a class called gridster and make it as fancy you want :)\nhtml\n<div class='gridster prettyBG'>\nscss\n.prettyBG { \n    background-color: $your-fancy-background-color;  //SASS syntax is not mandatory, i'm just lazy \n}\nAs you can see, you can even let the original settings there, and just add yours. And you can have as  fancy classes you want, and you just need to control which will appear on your html (and that you do as you want as well... with javascript, ruby, raw html...)\n. I think that this issue must be closed!\nAnd the correct place for ask these kind of questions is Stackoverflow http://stackoverflow.com/questions/tagged/dashing\nMaybe someone had already the same problem and another have already answered.\nThe fact is, here is supposed to contain more subjects related with bug reports and proposals for changes. \nAnd to not be only a jerk, I can help you find the answer as well... You should check the configuration of your gridster component.\n``` javascript\n// assets/application.coffee\nDashing.on 'ready', ->\n  Dashing.widget_margins ||= [5, 5] \n  Dashing.widget_base_dimensions ||= [300, 360]  //here you set the minimum width/height of each widget as larger it is, larger is your page\n  Dashing.numColumns ||= 4  //here you set how many column you want..\n```\n. I don't know if I'm misunderstanding your question...\nBut Dashing is just a gem that plays inside a Sinatra framework and implements some widgets functionalities. But they are just html pieces, so they renders in the way you write them... So, nothing interdites you from code a form and put it inside a widget.\nThe question is... Does it make sense on a Dashboard? For me, a dashboard is like a page with informations you care most concentrated in a way to let you notice them easily.\nI prefer just have widgets to see information, but if you want input some data on interacting with a widget, you can... they are just html with some style and functionalities... \nSo, if you need some kind of interactivity on a widget, you can customise that just as you can code a normal Sinatra app.\nYou also said something like save an input as a file... To do that, you just need to make a Sinatra's POST route to submit the data for. Sinatra's routes\n. :+1: \n. I think that we 've already lost the subject of this thread, so I will give\nmy 2 cents about puma as daemon. You could see that\nhttps://github.com/puma/puma/tree/master/tools/jungle/init.d#puma-daemon-service\nOr you even can write a script to put on rc.d calling bundle exec puma (on\nthe appropriate path for your project and RVM if you use it)\nOn Sun, Feb 1, 2015 at 10:15 PM, Martyn Keigher notifications@github.com\nwrote:\n\nHmmm... I may have to check out that Puma fork to be honest. I do quite a\nbit of documentation so when i do new things, I get all it noted (i live in\nevernote!) I can go over and validate it, so every time i install Dashing\n(as i blow it up on \"purpose\" sometimes) I manually convert it to run on\nPuma.\nMy only missing piece to the instructions, is getting Puma to run as a\nDaemon. Right now (As my ubuntu server is a vm) i have to go to the console\nand kick off sudo bundle exec puma there and just let it run. :(\n+1 on the 'Everyone is always learning' quote!! A day without a smile (and\na lesson learned) is a day lost! :)\n/me is off to look for the Puma fork! ;p\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/511#issuecomment-72393004.\n. You need ensure that your firewall let event-stream MIME type pass, and that your firewall does not close the connection.\nDashing works based on Server Sent Events, so you need search discover how configure your firewall to let it pass freely.\n. You need to write a custom widget to accomplish that... or at least customize a list widget and add a link on the rows pointing to where you want.\n\nDashing Widgets are just html, with some javascript letting it fancier. ;) If you want a link, you just need to put it there.\n. I don't think so. \nBatman.js is not maintained anymore, and I guess that if they change Batman.js current version, they will replace it for another framework.\n. There is no sense on put that line on the commit of your PR.\nBecause if it would merged, you would change the gemspec of the entire project to dashing-jruby.\nI think you just want to fork that project, and on your fork only, put these line. \n. if you just return status 204 the comment will not be necessary anymore.\n. ",
    "aidansteele": "I hate to be a pest, but could you perhaps provide an example of such code, @davefp ? It would be very much appreciated. :)\n. ",
    "mattcl": "coffee\nonData: (data) ->\n  if data.something\n     $(@node).css('background-color', '#fff')\n. You can have your backend post data directly to dashing widgets (using the API), or you can have a dashing job that periodically pulls data from your backend. We've used dashing to display our build cluster statuses, and this approach was easier than integrating into our existing (php) infrastructure.\n. ",
    "crcastle": "Also try adding the class 'status-danger' or 'status-warning' to the widget.  It makes the panel pulsate yellow or red.\nhttps://github.com/Shopify/dashing/blob/master/templates/project/assets/stylesheets/application.scss#L151\n. This is a snippet from the ruby job that sends the status to the widget.  It is used to monitor the depth of a queue.  If it gets above 3 then I get worried.  If it gets above 9 then something's very wrong.  This sends an event to any widgets listening for (i.e. with data-id equal to) report-queue events.  Note that 'danger' and 'warning' are flipped because that's how the CSS came in the dashing library and I was too lazy to fix it.\n``` ruby\nset status based on queue depth\nstatus = case current_queue_depth\n  when 0..3 then 'ok'\n  when 4..9 then 'danger'\n  else 'warning'\nend\nsend_event('report-queue', { current: current_depth, status: status })\n```\nI'm changing the background of a Number widget, so in the Number.coffee widget I have this function to set the class to status-warning, status-danger, or status-ok:\ncoffeescript\nonData: (data) ->\n  if data.status\n    # clear existing \"status-*\" classes\n      $(@get('node')).attr 'class', (i,c) ->\n        c.replace /\\bstatus-\\S+/g, ''\n      # add new class\n      $(@get('node')).addClass \"status-#{data.status}\"\n. hmmm.... what browser are you using?  i've only tested in chrome.\nOn Mon, Dec 10, 2012 at 4:10 AM, Dieter De Meyer\nnotifications@github.comwrote:\n\n@crcastle https://github.com/crcastle Are you having some issues with\nthe animation for the status classes ?\nThis doesn't seem to work...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/24#issuecomment-11190783.\n. How \"realtime\" is data from the Google Analytics API?\n. Would this be a better way to update the status- class?  This will handle statuses outside of just \"danger\" and \"warning\"\n\ncoffeescript\nonData: (data) ->\n  if data.status\n    # clear existing \"status-*\" classes\n      $(@get('node')).attr 'class', (i,c) ->\n        c.replace /\\bstatus-\\S+/g, ''\n      # add new class\n      $(@get('node')).addClass \"status-#{data.status}\"\n. Not sure what the problenis but the message should update without you\nhaving to refresh the page. In fact, refreshing the page will revert back\nto the default message as defined in the HTML.\nOn May 2, 2013, at 9:44 AM, Fuzzwah notifications@github.com wrote:\nI figured that maybe using an online coffee script compiler wasn't the best\nidea, so I've downloaded and installed node.js and npm install'd\ncoffee-script. I then tried compiling the .coffee files myself but that had\nthe same exact output.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/Shopify/dashing/issues/117#issuecomment-17349588\n.[image: Web Bug from\nhttps://github.com/notifications/beacon/hy4IOiiWkLKGPwb5Ih0mUYaL9DWi9vEpSxh_vNZEzS1-aOLJwqwxNbtQQplxi1b-.gif]\n. ",
    "dieterdemeyer": "I seem to be struggling a bit with this...\nThe classes status-danger and status-warning actually don't pulsate...\nBut my biggest problem is setting the class for a widget to this status from a certain outcome in de scheduler job...\nAny help with this would be much appreciated..\n. @crcastle  Thanks for your reply....\nI had some problems resetting the status and knew that clearing the status classes would help but didn't know how to..\nYour code did the trick..\n. @crcastle Are you having some issues with the animation for the status classes ?\nThis doesn't seem to work...\n. I'm using Firefox 10.05 on CentOS 6.3.\n. I can confirm that the animations on Chrome work, but not on Firefox...\n. I'm having the same problem, running a custom dashboard on CentOS in Firefox.\nIt only seems to be a problem with the Number and Meter widgets.\n. @pushmatrix I'm using jobs to push data to the widgets.  I also have the 'List' and 'Comments' widget on my dashboard and they keep updating.\n. Should i do the same within the Meter widget ?\n@accessor 'value', Dashing.AnimatedValue\n. Actually, my current dashboard only has 2 Meter widgets, no Number widgets...\n. Give or take close to one day...\n. Currently testing with the Number widget and it seems to be not updating after a few minutes...\nAlso combinations for payload data seem to be updating partially or not at all (i opened an issue for this..)\n. @pushmatrix yes, this is still an issue with Firefox.. I have to test my dashboard on Chrome..\n. @mcookDaxko would you be willing to share your highcharts widget implementation code ?\nThanks in advance..\n. @davefp Yes, I forgot to mention I added my own status class 'normal'.  I figured out that the current status wasn't being removed...  Thanks for your reply...\n. @aaldrich would you be willing to share your highcharts widget implementation code ? With that I mean the widget.coffee, widget.html and widget.scss and possibly a sample erb ? \nThanks in advance..\n. @aaldrich  Thanks for sharing....  I'm trying to create a highchart pie chart but i'm having some issues with this..\nMy javascript knowledge is somewhat limited..\n. @aaldrich I'm making some progress...  Currently, I can display a pie chart but i'm having some problems adding a formatter to the plotoptions.  This seems to break my widget...\nThis is what I have so far:\nruby\nplotOptions: {\n          pie: {\n            dataLabels: {\n              enabled: true,\n              formatter: function() { return '<b>'+ this.point.name +'</b>: '+ this.point.y; }\n            }\n          }\n        }\nIt seems the formatter is causing problems.\nDo you happen to know a solution to my problem ?\nIt would help me a lot..\nThanks in advance.\n. Just tried it but it doesn't seem to work for me....\n. @mikechau It was true, but I changed it to false...\nAlso tried some other variations of your formatter example but without any luck..\nThis is what I have now:\n``` coffeescript\nclass Dashing.Highchartpie extends Dashing.Widget\ncreateChart: (chart_title,series) ->\n    container = $(@node).find('.highchartpie-container')\n    if $(container)[0]\n      @chart = new Highcharts.Chart\n        chart:\n          renderTo: $(container)[0]\n          type: \"pie\"\n        series: series\n        title:\n          text: chart_title\n        tooltip:\n          pointFormat: '{point.y}'\n        plotOptions: {\n          pie: {\n            dataLabels: {\n              enabled: false\n              formatter: \"\" + @point.name + \": \"\n            }\n          }\n        }\nonData: (data) ->\n    @createChart(data.chart_title,data.series)\n```\n. @mikechau\nYour formatting seems to work (don't really understand why..)\nI really suck at coffeescript :smile: \nThanks a lot for your help !\n. @mikechau Thanks!  I'll check it out...\n. @mikechau This is what I'm using as a backend job:\n``` ruby\nSCHEDULER.every '1m', :first_in => 0 do\n    updated_at = Time.now.strftime('%m/%d/%Y')\ntitle = 'Insert title here'\n\nuri = URI.parse(BACKEND_URL)\nhttp = Net::HTTP.new(uri.host, uri.port)\nrequest = Net::HTTP::Get.new(\"/dashboard?format=json\")\nresponse = http.request(request)\ndashboard_info = JSON.parse(response.body)\n\ndashboard_info_new = Hash.new\nDASHBOARD_LABELS.each { |key, value|\n  dashboard_info_new.store(value, dashboard_info[key])\n}\n\ndata = []\ndashboard_info_new.each { |key, value|\n  data << [key, value.to_i]\n  puts \"#{key}: #{value}\\n\"\n}\n\nseries = [{\n            type: 'pie',\n            name: 'Activity Overview',\n            data: data\n      }]\n\nsend_event('dashboard', {chart_title: title, series: series, updated_at: updated_at})\n\nend\n```\n. I tested this in Firefox and Chrome and they both have the same result...\nMy base widget dimensions are [285, 342].\n\n. I'll give it a try and let you know...\n. @davefp @pushmatrix I tried your solution and it does the job. Thanks for your help.\n. I found the solution.. \nApparently, the downloaded zip doesn't contain the svg file, but the source code on Github does.\n. @banafederico Are those custom widgets in your screenshot ?  If so, would you mind sharing them ?  They look very nice...\n. @banafederico Any chance you would be willing to share your widgets ?\n. @banafederico I like the widget in the middle of your screenshot, and also the 'Next Tech lunch' and 'Big News' widget..\n. ",
    "cyl-moz": "My guess is that application.scss is not generating the framesets needed for -moz-animation or -ms-animation.\n(Caveat emptor, as I'm not terribly web-development oriented!)  I was able to get things working by deleting the @-webkit-keyframes status-warning-background and @-webkit-keyframes status-danger-background definitions, then adding the following:\n```\n@mixin keyframes($name) {\n  @-webkit-keyframes #{$name} {\n    @content;\n  }\n  @-moz-keyframes #{$name} {\n    @content;\n  }\n  @-ms-keyframes #{$name} {\n    @content;\n  }\n  @keyframes #{$name} {\n    @content;\n  }\n}\n@include keyframes(status-warning-background) {\n  0%   { background-color: $background-warning-color-1; }\n  50%  { background-color: $background-warning-color-2; }\n  100% { background-color: $background-warning-color-1; }\n}\n@include keyframes(status-danger-background) {\n  0%   { background-color: $background-danger-color-1; }\n  50%  { background-color: $background-danger-color-2; }\n  100% { background-color: $background-danger-color-1; }\n}\n```\nAs a trivial test, it works in FF19.0.2 and Chrome 25.0.1364.172 (both running on MacOSX).\n. ",
    "jbogarin": "As far as I can see, this change hasn't been included in the master branch. Is it possible to do it?\nI can confirm that the change actually works.\n. Yeah, I know. What I'm talking about is that animations don't work in Firefox, but they do if you put the changes that cyl-moz described above.\n. ",
    "derwin12": "Some widgets do it..check the number widget for example.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   From: jbogarinSent: Thursday, July 10, 2014 8:07 PMTo: Shopify/dashingReply To: Shopify/dashingSubject: Re: [dashing] Can dashing change style (e.g. background-color) depending of the job's value? (#24)As far as I can see, this change hasn't been included in the master branch. Is it possible to do it?\nI can confirm that the change actually works.\n\u2014Reply to this email directly or view it on GitHub.\n. Just a me too note .. using Chrome and exclusively number and list widgets.\n. If I comment out the require thin_parser i get more nastiness..\n[root@XXXX daryl]# dashing start\n/usr/local/share/gems/gems/backports-3.3.1/lib/backports/tools.rb:328:in require': cannot load such file -- json (LoadError)\n        from /usr/local/share/gems/gems/backports-3.3.1/lib/backports/tools.rb:328:inrequire_with_backports'\n        from /usr/local/share/gems/gems/dashing-1.0.5/lib/dashing.rb:7:in <top (required)>'\n        from config.ru:1:inrequire'\n        from config.ru:1:in block in <main>'\n        from /usr/local/share/gems/gems/rack-1.5.2/lib/rack/builder.rb:55:ininstance_eval'\n        from /usr/local/share/gems/gems/rack-1.5.2/lib/rack/builder.rb:55:in initialize'\n        from config.ru:1:innew'\n        from config.ru:1:in <main>'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/rack/adapter/loader.rb:33:ineval'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/rack/adapter/loader.rb:33:in load'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/thin/controllers/controller.rb:181:inload_rackup_config'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/thin/controllers/controller.rb:71:in start'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/thin/runner.rb:187:inrun_command'\n        from /usr/local/share/gems/gems/thin-1.5.1/lib/thin/runner.rb:152:in run!'\n        from /usr/local/share/gems/gems/thin-1.5.1/bin/thin:6:in'\n        from /usr/local/bin/thin:23:in load'\n        from /usr/local/bin/thin:23:in'\n. I installed ruby from rvm to override the ruby installed at the o/s. All worked without issue after that. (Ruby 2.0)\n. Is there something we need to change on our installs to make use of this functionality? I just pulled the 1.1.0 release.\n. That worked..I was doing simply a \"dashing start\" instead of \"bundle exec..\" would that be the difference?Or I simply did \"bundle update\" rather than \"bundle update dashing\".I really like this added functionalityrom: David UnderwoodSent: Thursday, June 27, 2013 2:03 PMTo: Shopify/dashingReply To: Shopify/dashingCc: derwin12Subject: Re: [dashing] Persist and load history using a YAML file, so that server restarts don't lose pushed data (#142)@derwin12 It should Just Work\u2122.\nMake sure that you run bundle update dashing in your project and then start the server with bundle exec dashing start. Once you shut it down you should see a history.yml file in your project dir.\n\u2014Reply to this email directly or view it on GitHub.\n. Just after posting this I found assets/javascripts/jquery.knob.js which led me to data-height. I think that will do the trick.\n. Realize its not the widgets but likely the job. I can send 8000 number and it formats just fine.\nSo looks like its the job that's causing the issue. For example, this is not parsing the file correctly.\ntweets = /profile[\"']>[\\n\\t\\s]*<strong>([\\d.]+)/.match(response.body)[1].delete('.').to_i\n. Yes .. that's exactly what I was thinking and trying.. and it almost worked. Is this correct? Seems to have worked as it displays fine now.\nAdding the \",\" in the two spots below.\ntweets = /profile[\"']>[\\n\\t\\s]*([\\d.,]+)/.match(response.body)[1].delete('.,').to_i\n. I put things like this right in the various .erb files\n.widget-list ol {\n  margin: 0 5px;\n}\n.widget-list ul {\n  margin: 0 5px;\n}\n.widget-list .value {\n  margin-left: 4px;\n}\n.widget-comments .title  {\n  margin-bottom: 5px;\n}\nI am no css guru .. so this works but may not be ideal.\n. Here is the top of one of my incident.erb file..\nI have different layouts for different devices (at some point i will try and autodetect this info)\nWhenever I want to tweak something I use the css inspector thing in chrome and tweak the particular setting. I leave all the widget code stuff un-touched.\n``` html\n\n$(function() {\n  Dashing.widget_base_dimensions = [195, 175]\n  Dashing.widget_margins = [5, 5]\n  Dashing.numColumns = 6\n});\n\n\nbody {\n  font-size: 10px;\n}\n\nh1 {\n   font-size: 30px;\n   margin-bottom: 5px;\n   margin-top: 5px;\n}\n\nh2 {\n   font-size: 30px;\n}\n\nh3 {\n   margin-bottom: 2px;\n   margin-top: 2px;\n   font-size: 25px;\n}\n\nli {\n   font-size: 12px;\n}\n\n.updated-at {\n  font-size: 10px;\n  bottom: 2px;\n}\n\n.more-info {\n  font-size: 12px;\n  bottom: 15px;\n}\n.widget {\n  vertical-align: top;\n  padding: 2px 3px;\n}\n\n.widget-number .change-rate {\n     font-size: 19px;\n}\n.widget-number h2 {\n     font-size: 50px;\n}\n.widget-news h1 {\n     font-size: 30px;\n}\n.widget-news h2 {\n     font-size: 20px;\n}\n.widget-time-since_last p {\n     font-size: 17px;\n}\n.widget-list li {\n  margin: 0 3px;\n}\n.widget-list ol {\n  margin: 0 3px;\n}\n.widget-list ul {\n  margin: 0 3px;\n}\n.widget-list .value {\n  margin-left: 4px;\n}\n.widget-comments .title  {\n  margin-bottom: 5px;\n}\n.widget-graph .x_tick .title {\n    font-size: 10px;\n    font-weight: 600;\n}\n.widget-graph .y_tick .title {\n    font-size: 8px;\n    font-weight: 600;\n}\n.widget-comments.twitter_mentions p {\n    font-size: 15px;\n}\n.icon-background {\n  opacity: 0.1;\n  font-size: 125px;\n}\n\n\n<% content_for :title  do %>Incident Dashboard<% end %>\n\n\n...\n...\n```\n. I dont see multi as a valid renderer...\n\ndata-renderer: Any valid Rickshaw renderer, including 'area', 'line', 'bar', 'scatterplot'.\n. Perhaps my sample might help:\ncurl -d '{ \"auth_token\": \"MY_TOKEN\", \"data-render\": \"area\", \"data-legend\":\"true\", \"title\": \"Graph Test\", \"data-color-scheme\":\"rainbow\", \"data-moreinfo\": \"sample graph\" , \"series\" : [  { \"name\" : \"Line1\", \"color\": \"red\", \"data\" :   [ { \"x\":1, \"y\": 11 }, { \"x\" :2, \"y\" :27}, { \"x\":3, \"y\": 6  } ] }, { \"name\" : \"Line2\", \"color\": \"blue\", \"data\" :  [ { \"x\":1, \"y\": 5  }, { \"x\" :2, \"y\" :2 }, { \"x\":3, \"y\": 25 } ] }, { \"name\" : \"Line3\", \"color\": \"green\", \"data\" : [ { \"x\":1, \"y\": 15 }, { \"x\" :2, \"y\" :12}, { \"x\":3, \"y\": 45 } ] } ] }' http://:3030/widgets/samplegraph\nNote that I often have to restart the webserver if I make big changes in the graph .. like type..perhaps caching causing issues?\n. You know .. i dont even see Pie as being a valid type..(using defaults/rickshaw).\nPerhaps you are using a different widget?\nhttps://github.com/Shopify/dashing/wiki/Additional-Widgets\n. Thats the one i was referencing but the methods are not the same .. and I am too new to ruby to come up with the equivalent.\n. I updated my code above.. getting closer.. any ruby coders out there can review/critque/suggest?\n. Had to close the cursor to stop the every increasing number of open cursors.\n. The code above is valid working code.\nAnother simple example:\nrequire 'oci8'\nconn = OCI8.new('someuser','password','myhostname:1527/MYSID');\n  sql = \"begin my_dashboard_lag_data(); end;\"\n  cursor = conn.exec(sql)\n  puts \"5min_refresh job executed\"\nconn.logoff\n. Couple of things. When running from the command line, outside of DASHING, you cant use SCHEDULER/do-end, so comment those out for testing.\nI wonder if its this line: when I changed it it seemed to work.\nconn = OCI8.new(apps,apps,\"192.168.56.102:1598/vis\");\u2028\nYou need single quotes around the userid (apps) and the password (apps)\nAlso try single quotes around the ip address instead of double quotes.\nI am a trial and error ruby programmer too :-)\n. Also you have the 2nd parameter (still) as a number .. i dont think lastname is likely to be a number :-)\ncursor.define(2, Integer)\u2028\n. iframe .. thats pretty cool. \nSee: https://github.com/Shopify/dashing/issues/60\nedit your dashboard's erb file - add in your widget.\n<li data-row=\"1\" data-col=\"2\" data-sizex=\"2\" data-sizey=\"1\">\n      <div data-id=\"myiframe\" data-view=\"Iframe\"></div>\n    </li>\nThen populate it .. here it is via curl\ncurl -d '{ \"auth_token\": \"YOUR_TOKEN\", \"url\": \"http://helpdesk.eastquayit.net:8080/conn1.aspx\" }'  http://<yourhost>:3030/widgets/myiframe\nNow a full solution could be done via scraping the page like this widget:\nhttps://gist.github.com/petehamilton/5494590\nNot too difficult .. i can hack it out if the above doesnt suffice.\n. curl is a unix command that you can run whenever you want from the command line or via cron.\nIf you want to use the dashing jobs then place a file (call it iframe.rb) in the jobs directory. It should look like this. (Not a ruby expert but it works :-) )\nSCHEDULER.every '20m', :first_in => 0 do |job|\n    url = \"http://mywebaddressgoeshere\"\n    puts url\n    send_event('myiframe', url: url)\nend\nOf course you can change the 20m to 60s or whatever refresh interval you think is appropriate. \"myiframe\" has to match the  <div data-id=\"myiframe\" ... that you have in your dashboard erb file.\nIf this issue is done be sure to close it. Thanks.\n. I am confused there are only 2 pieces required and I put them in my comment above. Edit sample.erb add in the \n<li> .. </li>\nSave the file. (its not urgent that the position parameters are wrong .. dashing will by default place it wherever)\nCreate a new file in jobs directory .. call it iframe.rb,   put in the the lines above SCHEDULER... etc.\nNow restart Dashing.\nkill -9 <dashing pid>\nbundle exec dashing start -d -e production\nPS. You dont touch the widget files themselves at all.. just place it in a dashboard erb file and create a job to populate it.\n. I just installed your widget.. I changed your code slightly to correct the issue (or it appears to).\nYou need to divide by two the amount of space padding, so half goes to the top and half goes to the bottom. Likewise for the left and right space. (ie. / 2 was added to these two lines)\n```\n$(@node).find('.plum-image-position').css('top', (-(100 - (@height / @imgElem.height() * 100)) / 2) + '%')\n..\n$(@node).find('.plum-image-position').css('left', (-(100 - (@imgElem.width() / @width * 100)) / 2 ) + '%')\n```\nAlso your widget grows too big for the widget container .. so I arbitrarily removed 10px padding.\n@width = (Dashing.widget_base_dimensions[0] * container.data(\"sizex\")) + Dashing.widget_margins[0] * 2 * (container.data(\"sizex\") - 1) - 10\n. This works for me for the Rickshawgraph widget. Perhaps check your bracketing. Which widget did you use?\ncurl -d '{ \"auth_token\": \"XXX_TOKEN\", \"data-render\": \"area\", \"data-legend\":\"true\", \"title\": \"Graph Test\", \"data-color-scheme\":\"ra\ninbow\", \"data-moreinfo\": \"sample graph\" , \"series\" : [  { \"name\" : \"Line1\", \"color\": \"red\", \"data\" :   [ { \"x\":1, \"y\": 11 }, { \"\nx\" :2, \"y\" :27}, { \"x\":3, \"y\": 6  } ] }, { \"name\" : \"Line2\", \"color\": \"blue\", \"data\" :  [ { \"x\":1, \"y\": 5  }, { \"x\" :2, \"y\" :2 }\n, { \"x\":3, \"y\": 25 } ] }, { \"name\" : \"Line3\", \"color\": \"green\", \"data\" : [ { \"x\":1, \"y\": 15 }, { \"x\" :2, \"y\" :12}, { \"x\":3, \"y\":\n 45 } ] } ] }' http://hostname:3030/widgets/samplegraph\n. Which widget are you using? rickshaw widget?\nHere is a sample curl statement:\ncurl -d '{ \"auth_token\": \"A_TOKEN\", \"data-render\": \"area\", \"data-legend\":\"true\", \"title\": \"Graph Test\", \"data-color-scheme\":\"rainbow\", \"data-moreinfo\": \"sample graph\" , \"series\" : [  { \"name\" : \"Line1\", \"color\": \"red\", \"data\"\n :   [ { \"x\":1, \"y\": 11 }, { \"x\" :2, \"y\" :27}, { \"x\":3, \"y\": 6  } ] }, { \"name\" : \"Line2\", \"color\": \"blue\", \"data\" :  [ { \"x\":1, \"y\": 5  }, { \"x\" :2, \"y\" :2 }, { \"x\":3, \"y\": 25 } ] }, { \"name\" : \"Line3\", \"color\": \"green\", \"dat\na\" : [ { \"x\":1, \"y\": 15 }, { \"x\" :2, \"y\" :12}, { \"x\":3, \"y\": 45 } ] } ] }' http://<host>:3030/widgets/samplegraph\nNote you will have to refresh/restart dashing if you change the render.\n. yes .. the rickshaw widget https://gist.github.com/jwalton/6614023 takes the series data as illustrated above with my curl example. It allows you to graph multiple series etc.\n. Override each widget via html in the dashboard filerom: Tzvi SpitzSent: Tuesday, July 1, 2014 12:17 PMTo: Shopify/dashingReply To: Shopify/dashingSubject: [dashing] Cant change meter color (#392)Hi,\nI apologize if this is the wrong forum.\nThis is my current dashboard.\nI'm trying to change the default \"green\" to a darker color.\nI tried changing the \"$background-color\" value in \"meter.scss\", that didn't change anything.\nWhat am I missing? Can someone please point me in the right direction?\nThis project is amazing!\nThanks!\nTzvi\n\u2014Reply to this email directly or view it on GitHub.\n. Can you post your dashboard's .erb file? Obviously there are some fonts that are too large for your widgets. You can override these in the html. I like to use chrome and inspector to find and tweak these.\nYou can tweak things like this:\n```\n\n$(function() {\n  Dashing.widget_base_dimensions = [195, 175]\n  Dashing.widget_margins = [5, 5]\n  Dashing.numColumns = 6\n});\n\n\nbody {\n  font-size: 10px;\n}\n\n```\n. Confirmed .. this is a result of how the icon is being displayed. its setting the global icon-background value. So whichever one gets called first, it sets the style for the entire webpage. Hence the same icon is displayed for each widget. Best to post this bug on the widget github page and hopefully they can code around this issue. Unfortunately that element is not data driven but stylesheet driven.\n<i class=\"climacon icon-background sun\"></i>\nIf you wanted to .. you could copy the weather widget multiple times.. call it weather1, weather2 etc..\nthen change that class to be climacon1,, ..2, ..3 etc.\n(similar change to weather.coffee)\nNote that each widget has to have like named directory and files .. so weather1/weather1.coffee etc.\n. The klimato widget works fine with multiple cities.\n```\n    \n\n\n<li data-row=\"1\" data-col=\"5\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-id=\"klimato2\" data-view=\"Klimato\"></div>\n</li>\n\n```\nThen have multiple jobs .. send one to kilimato and the other to klimato2 for example.\n. What do you mean by large? You can tailor any part of it by adding the css code in your .erb dashboard file.\nFor example: Add this prior to the <% content_for code..\n```\n\n\n.widget-klimato h1 {\n  font-size: 20px;\n}\n\n.widget-klimato h2 {\n  font-size: 20px;\n}\n\n.widget-klimato h3 {\n  font-size: 20px;\n}\n\n.widget-klimato .updated-at {\n  font-size: 6px;\n}\n\n```\n. Someone mentioned this in a prior issue that it could be related to max threads.\nTry --max-persistent-conns and --max-conns as outlined on \nhttp://macournoyer.wordpress.com/2008/02/24/staying-alive-with-thin/\n. I am .. and have a working example. Be sure you have refreshed your browser and not grabing the html from cache.\n<div data-id=\"g1\" data-view=\"Rickshawgraph\" data-color-scheme=\"near-rainbow\" data-stroke=\"true\" data-legend=\"true\" data-renderer=\"area\" data-title=\"Graph\"></div>\nOh wait thats a Rickshaw example ..\n. I am not certain highcharts has legends defined. I see coffee entries saying legend: enabled: false\n. Why not echo \"\" > thin.log via cron. Wont that work? You dont want to simple delete it since Unix will often hold the file handle open.\n. That is perfect. Thanks.\n. Nope .. could never figure it out.\n. ",
    "mbainter": "Agreed - works for me as well.  The diff I have looks like this:\n```\n--- application.scss.orig   2014-07-11 13:35:58.551965551 -0400\n+++ application.scss    2014-07-11 13:36:02.010226539 -0400\n@@ -16,16 +16,33 @@\n $background-danger-color-2: #ff9618;\n $text-danger-color: #fff;\n-@-webkit-keyframes status-warning-background {\n+@mixin keyframes($name) {\n+  @-webkit-keyframes #{$name} {\n+    @content;\n+  }\n+  @-moz-keyframes #{$name} {\n+    @content;\n+  }\n+  @-ms-keyframes #{$name} {\n+    @content;\n+  }\n+  @keyframes #{$name} {\n+    @content;\n+  }\n+}\n+\n+@include keyframes(status-warning-background) {\n   0%   { background-color: $background-warning-color-1; }\n   50%  { background-color: $background-warning-color-2; }\n   100% { background-color: $background-warning-color-1; }\n }\n-@-webkit-keyframes status-danger-background {\n+\n+@include keyframes(status-danger-background) {\n   0%   { background-color: $background-danger-color-1; }\n   50%  { background-color: $background-danger-color-2; }\n   100% { background-color: $background-danger-color-1; }\n }\n+\n @mixin animation($animation-name, $duration, $function, $animation-iteration-count:\"\"){\n   -webkit-animation:  $animation-name $duration $function #{$animation-iteration-count};\n   -moz-animation:     $animation-name $duration $function #{$animation-iteration-count};\n```\n. ",
    "odrino14": "how can i use this for dashing-icinga2 ?\ni want that my kachel-color for blue to red change when the count of critical is 1 or more\ndid someone have any idear ?. hi @bean5 i tried this but it is not working for me\ni got a return 404. @MartynKeigher did u solve ur problem?. @Sjlver did u find a solution for that. i am having the same problem. i tried it with taht but it is not working. @Sjlver it is not working. i get Drats! That Dashboard doesn't exist.\ndid u make something else i don't know where to look. ",
    "noplay": "I think it's update each hours.\n. I need to make a proper pull request without google anayltics\n. ",
    "sikosis": "Ah thank you. Value is what I needed. What about for a \"Number\" ... I've tried both value and text but they don't seem to work.\n. Many thanks for that. Was just wondering for best practises. ie. if Dashing gets updated, will it overwrite the application.scss and the changes I've made ?\n. I'd like to see that feature too. Would help prevent burn in too.\n. Thanks for the explanation. I've written a screensaver using WebKit and all is right with the world.\n. Hrmm tried installing node.js, added to system and user path and still no joy getting dashing to work on Windows. Not Firefox or Chrome. On a Mac, both Firefox and Chrome work just fine.\n. Hey I found a browser that works out of the box !!! Maxthon Cloud Browser works just fine with dashing on Windows. It's Webkit based.\n. I don't know just wondering what's the best way to update it. If doing that is what needs to be done, then that's what I'll do.\n. ",
    "samjbmason": "Would there be any chance that dashing could be included into a rails project?\n. ",
    "florian-bayer": "We have the same problem with our dashboard. After a while all widgets do not update anymore, which is also visible in the updatedAtMessage. After a refresh of the page everything is up to date again.\n. I use Google Chrome on Mac locally and we have a TVPeCee Android Strick running with Firefox (actually we wanted an Ricomagic MK802 but that wasn't available at that time). And both stop updating after a while.\nIn the Chrome Console I can see the following:\nat the very beginning there is\nPort error: Could not establish connection. Receiving end does not exist. miscellaneous_bindings:235\n    chromeHidden.Port.dispatchOnDisconnect\nAnd after something like every 1 to 5 minute there is this message:\nUncaught TypeError: Cannot call method 'filter' of undefined\n    (anonymous function)\n    stackData\n    render\n    Dashing.Graph.Graph.onData\n    (anonymous function)\n    Dashing.Widget.Widget.receiveData\n    (anonymous function)\n    (anonymous function)\nConnection error\nConnection opened\nBut at this point the widgets are still updating for one or more hours.\n. Thats sounds good! We will try that as soon as possible on our dashboard.\n. I just tested out dashboard in different browsers again (without the animate fix).\nIn Chrome its running fine all day long, but in Firefox in stops updating after a while. So it might be a Firefox bug? It would explain why it is freezing on our Android TVPeCee Stick. There we use Firefox as well to display the dashboard (because it looks like it is the only browser on Android which is able to show real fullscreen).\nBy the way, the TVPeCee Stick itself was running well, it was booting fast and didn't crash itself. But it just gives you 720p output, not as supposed 1080p, but it scales very good on a full HD Monitor so that itsn't that big problem.\n. we don't have a meter on our dashboard and it is stopping as well, we have Numbers and Graphs and little own variations of those\n. ",
    "bashtoni": "For us, there are no errors at the console at all - with debug mode on you can even see the new data coming in, but the data doesn't updated.  Interestingly, the 'Last updated at' time continues to update.\n. Hi,\nI don't see the issue on the demo dashboard.  \nOn our dashboard, I only see the issue only on number widgets, both of which are updated once a minute from curl (but this may be a coincidence).  \nAll other widgets are graphs updated from jobs, which never have a problem being updated.\nThe failing widgets are about as simple as they can be:\n```\n    \n\n\n\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-id=\"pendingtickets\" data-view=\"Number\" data-title=\"Pending Tickets\" style=\"background-color:#96bf48;\" data-moreinfo=\"Tickets with customer reply\"></div>\n  <i class=\"icon-envelope icon-background\"></i>\n</li>\n\n```\n. Removing the animation line from the widget seems to have done the job - typically for us it would stop working within 20-30 minutes, it's been running for four hours without a problem now.\nThanks\n. We're using chromium running on a raspberry pi, and are no longer seeing the issue since disabling animation.\nNo problems with 1080p output either :)\n. ",
    "fydot": "I remove the line, but my dash still stop updating after about 20minutes?\n. the type of the wieghts stoping updating is Meter\n. no, this problem is still puzzling me.\n. works\uff0c3ks\n. ",
    "bstephenf": "I am also having the same issue and it is for both the Number and Meter widget.  I have not yet tried removing the animation. - I notice these comments are from 2 months ago.  Any recent updates?\n. Thank you VERY much for the fast response.  I was able to successfully use all of those curl commands.\nIs there a curl command I can use to update the buzzwords?\n. Perfect. -- Thanks again! :)\n. That makes sense, but it did not work.  I added both the data-id and the line in config.ru.  Could this be due to hosting on heroku (perhaps I can't restart that server)?\n. ## my config.ru:\nrequire 'dashing'\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\n  set :protection, :except => :frame_options\nhelpers do\n    def protected!\n     # Put any authentication code you want in here.\n     # This method is run before accessing any resource.\n    end\n  end\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n. Cool.  It's working now and I'll try w/o the set :protection.  Thanks again! :)\n. The above edit to application.coffee was working for me on Nov 27, 2013 when I tested it.  Now, it is not working. Since then, I did upgrade to 1.3.1.  Is there possibility that something about 1.3.1 causes this edit in application.coffee to be ignored/not understood?  Perhaps the 'if' condition never executes because navigator.userAgent is no longer able to detect that I am on an iPhone?\n. I was able to resolve my issue my installing Dashing 1.3.2 and creating a new project, then slowly moving over my customizations.\n. @kayaj - Did you get the sound to play?  If you could send me a sample from your .rb for the playing of sound (mp3), that would be great.\n. Thanks. And agreed: these guys have been really helpful - our dashboards are now not only on 4 TVs in our lobby but also in our Sales, Product, and Operations aisles.  Looking to take them to the next level with audible alerts. :)\n. For me, this does not work in Safari either.  Did you find a resolution for this?\n. Thanks Dave -- Using that as an example, I modified my number.coffee to look like this ...\nonData: (data) ->\n    if data.status\n      $(@get('node')).addClass(\"status-#{data.status}\")\nif data.background-color\n  # clear existing \"background-color-*\" classes\n  $(@get('node')).attr 'background-color', (i,c) ->\n    c.replace /\\bbackground-color-\\S+/g, ''\n  # add new class\n  $(@get('node')).addClass \"background-color-#{data.background-color}\"\n... but then this command still did not change the background color:\ncurl -d '{\"auth_token\": \"YOUR_AUTH_TOKEN\", \"background-color\": \"#000\" }' \\http://localhost:3030//widgets/tvLRnumberFF\nBut it does still change values:\ncurl -d '{\"auth_token\": \"YOUR_AUTH_TOKEN\", \"current\": \"50\" }' \\http://localhost:3030//widgets/tvLRnumberFF\nAny other suggestions as to where I might be going wrong?\n. Still no luck. My number.coffee file now looks like this ...\nclass Dashing.Number extends Dashing.Widget\n@accessor 'difference', ->\n    if @get('last')\n      last = parseInt(@get('last'))\n      current = parseInt(@get('current'))\n      if last != 0\n        diff = Math.abs(Math.round((current - last) / last * 100))\n        \"#{diff}%\"\n    else\n      \"\"\n@accessor 'arrow', ->\n    if @get('last')\n      if parseInt(@get('current')) > parseInt(@get('last')) then 'icon-arrow-up' else 'icon-arrow-down'\nonData: (data) ->\n    if data.status\n      $(@get('node')).addClass(\"status-#{data.status}\")\nif data['background-color']\n  $(@get('node')).css 'background-color', data['background-color']\n. This does not 100% answer my previous question but I was able to get background color to change using the information in this article -- https://github.com/Shopify/dashing/issues/24 -- my follow-up question, though, is: After setting status to Warning, how do I reset the status back to ok (pass ok has no effect - only warning and danger cause a change)?\n. Update: Actually warning or danger will cause a change, but then it is stuck.  If I use danger first then I cannot later apply warning (no effect/ignored) and vice versa.  Hoping someone has some advice.\n. I 'still' have the same issue whereby the status can only be changed one-time.  It changes to the desired background color but then it never changes back.  Any idea what I might be missing?\n. @thenayr - I am going to be using Leap Motion at our company soon.  If you have any advice, please let me know. :)\n. Ditto!\n. Perfect. This works, thanks!\n. This is exactly my issue -- https://github.com/Shopify/dashing/issues/248 -- but as my above inquiry asks, I wonder if there is a global css-type setting I can set that is 'relative' to whatever I set a layout's tile size to?\n. On the latest 1.3.3 of dashing, I am noticing that when I start dashing (using: dashing start), I get this in my output (which would indicate it is running twice) - This is out of the box starting dashing right after a fresh install:\nStephen-Brehm:hf-dataops-dashboard sbrehm$ dashing start\n/Users/sbrehm/hf-dataops-dashboard/jobs/twitter.rb:9:in block in <top (required)>': [DEPRECATION] #oauth_token= is deprecated. Use #access_token= instead.\n/Users/sbrehm/hf-dataops-dashboard/jobs/twitter.rb:10:inblock in ': [DEPRECATION] #oauth_token_secret= is deprecated. Use #access_token_secret= instead.\n/Users/sbrehm/hf-dataops-dashboard/jobs/twitter.rb:9:in block in <top (required)>': [DEPRECATION] #oauth_token= is deprecated. Use #access_token= instead.\n/Users/sbrehm/hf-dataops-dashboard/jobs/twitter.rb:10:inblock in ': [DEPRECATION] #oauth_token_secret= is deprecated. Use #access_token_secret= instead.\nThin web server (v1.6.2 codename Doc Brown)\nMaximum connections set to 1024\nListening on 0.0.0.0:3030, CTRL+C to stop\nWhat can I do to only invoke it once?\n. ",
    "myanaros": "I'm having the same issue, but involving a job that makes an http request to a rails application that responds with JSON data. When you initially load the dashboard the request goes through successfully, and the job continues to run and receive updated data from the Rails app but the widget doesn't show the updated value.\nI've viewed the dashboard with Firefox on Ubuntu and Chrome on Windows 7, and have the Dashboard and Rails application running locally. I've also tried removing the line from number.coffee, but it had no effect.\nHas anyone made anymore progress on this bug?\n. My work-around for this was to just change the .x_tick class to not display anything and add a custom x axis label table to the widget html. This was accomplished through some styling in the scss file, some jquery in the coffee file, and adding a table with a id'd tr.\nHere is the jquery added to the widget coffee file\nafter graph render in ready method:\njavascript\nmonth = $(\"#months\")\nmonth.empty()\nmonth.append($('<td>Waiting for data</td>'))\nafter graph render in data method:\njavascript\nmonth = $(\"#months\")\nmonth.empty()\nfor index, monthin of data.months\n  console.log \"Index #{index} Month: #{monthin}\"\n  month.append($(\"<td>#{monthin}</td>\"))\nadd display:none; to .x_tick class\nadd custom classes inside widget class\nscss\n.custom_x_label\n  {\n    position:absolute;\n    bottom:0;\n    left:0;\n    padding-bottom: 3px;\n    list-style-type:none;\n    background:rgba(100,100,100,.4);\n    width:102%;\n    z-index:1000;\n  }\nand add this to your html file for the widget\nhtml\n<table class=\"custom_x_label\">\n    <tr id=\"months\">\n    </tr>\n</table>\nHope this helps anyone that runs across the same problem.\n. ",
    "Leviter": "We had the same issue on Raspberry Pi with Chromium, but after disabling the animation for the Number widget we can (at least) run it for 8+ (and counting) hours without any problem.\n. ",
    "Oshuma": "I'm having this same issue with Dashing 1.0.4 running on Sinatra 1.3.6.  It seems to only affect the POST API, since Numbers and Meters get properly updated from jobs within the Dashing app, I just can't update them through the API (curl, etc.).\nEdit: Disregard this.  The issue was found to be elsewhere.\n. ",
    "joedeller": "I'm also seeing this using Firefox on windows,  connecting to machines that are running dashing on Win7 x64, that receive data from the POST API.  Refreshing the page does update, but not for long.  Widgets are just lists and a graph.\nI also have dashing running on some Win 2K8 R2 servers and these don't appear to suffer from the same problem.\n. Many thanks for that.  Would you mind posting your coffee script file ?  I'm still having trouble getting my graph to render correctly :-(\nThanks,\nJoe\n. Thank you!  That's great, I'll give it a whirl.\nThanks,\nJoe\n. ",
    "mpavlov": "Also getting this on OSX running Chrome\n. The jobs and the dashboard run on the same host. It takes anywhere between 3 mins and 30 mins for a widget to freeze, it appears random.\nWe have the jobs run every 30 sec, doing an http post for all widgets. Only meter and number widgets have the freezing problem, the others update reliably even when we leave the dashboard running for several days.\n. I checked the behavior described by @Dbzman by POSTing to a meter widget on a new dashboard generated by dashing 1.2.0.\nTest 1:\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": \"3\" }' http://localhost:3030/widgets/my_meter_widget\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": \"3\" }' http://localhost:3030/widgets/my_meter_widget\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": \"4\" }' http://localhost:3030/widgets/my_meter_widget\nResults:\nWidget correctly updated to show \"3\", but not \"4\". It's stuck at \"3\" and does not update on further POSTs. A reload of the page correctly shows the last POSTed value.\nHowever, changing value's type to int:\nTest 2:\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": 3 }' http://localhost:3030/widgets/my_meter_widget\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": 3 }' http://localhost:3030/widgets/my_meter_widget\ncurl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": 4 }' http://localhost:3030/widgets/my_meter_widget\nResults:\nEverything works as expected and the widget does not get stuck.\nLooks like the bug is either in the apparently stateful int-parsing, or in the widget's decision to attempt to display a string value in the first place.\n. @wickwire to_i is another way of making sure the data sent to the widget is not a string. Unfortunately it doesn't seem to work for updates over http.\nThe right solution is for the widget to either reject strings (with an appropriate error message), or handle them properly. Since these are normally numbers-only widgets, the only case I can think of for wanting to handle strings is for when a value is not available, in which case displaying \"n/a\" or \"unknown\" makes more sense than -1.\n. Nice :+1: \n. ",
    "dblessing": "Also seeing this issue with some dashboards/tiles.  Some tiles on the screen update dynamically while others do not.  The ones that work and the ones that don't use different jobs, which could contribute to this.  However I see nothing significant in the job to suggest why it wouldn't be updating.  All \"Updated at\" timestamps show update time but the metric doesn't change.\n. ",
    "Dbzman": "I'm having a similar problem using the number widget. It looks like the issue only occurs when posting the same value twice. (which is a common case in our setup) After that the number doesn't change anymore. (Chrome and Firefox) I tried using another widget for displaying numbers (Hotness) which also changes its color. It has the same problem. The difference is that the color changes correctly but the value doesn't get updated.\nEdit: Posting with a chrome extension results in \"WARN -- : attack prevented by Rack::Protection::HttpOrigin\". Posting different values results in a change but its stuck after posting the same value twice.\n. I've had the same experience which I described in #33. Looks like a parsing issue. Try to use an int instead of a string for the \"current\" value as suggested there. \n. I am successfullly using the following script (In my case I additionally needed to export the PATH variable in there so that correct ruby version is used):\nhttps://gist.github.com/gregology/5313326\n. Yep, thats exactly the same problem I'v struggled with for so many hours. You are trying to use gems from Ruby 1.9.3 but using ruby 1.8.7 to execute them. The reason it is working when you are logged in is that you are in an interactive shell which means the PATH environment variable gets exported correctly (with Ruby 1.9.3) in one of the initializiation files (.bashrc, etc...)\nI've solved the problem by specifing the the correct Ruby version in the PATH variable above GEM_HOME in the script:\nbash\nexport PATH=/opt/chef/embedded/bin:$PATH\nIf you're not sure where to find your currect ruby installation try \"which ruby\" when logged in with your account.\nHope that helps. :)\n. Looks like you are using the script on the top. I've got it working with the one on the bottom: https://gist.github.com/gregology/5313326#comment-878802\nHere is an excerpt of my script.\n``` bash\nMust be a valid filename\nNAME=dashing\nDASHING_DIR=/home/dashboard\nPIDFILE=\"$DASHING_DIR/$NAME.pid\"\nDAEMON=/opt/chef/embedded/bin/$NAME\nexport PATH=/opt/chef/embedded/bin:$PATH\nexport GEM_HOME=/opt/chef/embedded/lib/ruby/gems/1.9.1\nexport GEM_PATH=/opt/chef/embedded/lib/ruby/gems/1.9.1/gems\nDASHING_PORT=3030\nDAEMON_OPTS=\"start -d -p $DASHING_PORT -P $PIDFILE --tag $NAME -D\"\n```\n. ",
    "ericsolomon": "I am having a similar issue. After about 30 minutes my widget doesn't update anymore (with 'Last update at' time frozen) unless I restart the server. Right now I just have a cron job restarting it if it gets out of sync, but this is far from ideal. Has any progress been made on this? My widget is just a simple List widget that displays strings parsed from JSON objects.\n. All you have to do is add a click event to your widget and change location.href to your dashboard path.\ne.g. click (event) ->\n           location.href = \"your dashboard\"\nyou can also look into Sinatra simple navigation\n. Ah I apologize, for some reason I assumed you were using highcharts. To achieve what you want you should just be able to include the location.href code in the html for the widget in the dashboard file. Something like this\nhtml\n<li data-row=\"2\" data-col=\"2\" data-sizex=\"2\" data-sizey=\"1\" onclick=\"location.href='http://www.google.com';\">\n      <div data-id=\"test_text_widget\" data-view=\"Text\" data-title=\"Test\"</div>\n</li>\n. ",
    "wickwire": "Hi, I think I have a solution for this:\nI have a bash script processing some SNMP values, which in the end, echoes an integer.\nI've been invoking this bash script in a job, to update a meter Synergy example widget. As with everyone else, the widget updates fine with the rand function but isn't doing so with the bash I have.\nwhat I did on my sample.rb file, which seems to have solved it, is the following:\n\ncurrent_valuation = 0\ncurrent_karma = 0\ncurrent_synergy = 0\nSCHEDULER.every '5s' do\n  last_valuation = current_valuation\n  last_karma     = current_karma\n  last_synergy   = current_synergy\n  current_valuation = rand(100)\n  current_karma     = rand(200000)\n  current_synergy   = (/home/wickwire/snmp.mem.calc.bash).to_i\nsend_event('valuation', { current: current_valuation, last: last_valuation })\n  send_event('karma', { current: current_karma, last: last_karma })\n  send_event('synergy',   { value: current_synergy })\nend\n\nNOTE: current_synergy   = (/home/wickwire/snmp.mem.calc.bash).to_i has the bash line inside ` accents, they're not showing on the post and I'm out of time to figure out how to escape chars)\nI converted the bash output to int like stated above and left the meter.coffee untouched - which is to say, the line \"@accessor 'value', Dashing.AnimatedValue\" remained as it was.\nRunning dashing, the Synergy meter is updating with the animation working as well.\nBefore doing the cast, I also obtained the same results as stated in the thread: if I commented out the @accessor value line, I wouldn't get the animation, but the updates would work.\nPlease let me know if this fixes it for you as well!\n. ",
    "rafaelmagu": "I can confirm that using to_i on the variable before sending to the widget works. Been testing it without hiccups for the past two weeks. \n\nRafael Fonseca\nSent from mobile\n\nOn 28/10/2013, at 2:57, wickwire notifications@github.com wrote:\nHi, I think I have a solution for this:\nI have a bash script processing some SNMP values, which in the end, echoes an integer.\nI've been invoking this bash script in a job, to update a meter Synergy example widget. As with everyone else, the widget updates fine with the rand function but isn't doing so with the bash I have.\nwhat I did on my sample.rb file, which seems to have solved it, is the following:\ncurrent_valuation = 0\ncurrent_karma = 0\ncurrent_synergy = 0\nSCHEDULER.every '5s' do\nlast_valuation = current_valuation\nlast_karma = current_karma\nlast_synergy = current_synergy\ncurrent_valuation = rand(100)\ncurrent_karma = rand(200000)\ncurrent_synergy = (/home/wickwire/snmp.mem.calc.bash).to_i\nsend_event('valuation', { current: current_valuation, last: last_valuation })\nsend_event('karma', { current: current_karma, last: last_karma })\nsend_event('synergy', { value: current_synergy })\nend\nI converted the bash output to int like stated above and left the meter.coffee untouched - which is to say, the line \"@accessor 'value', Dashing.AnimatedValue\" remained as it was.\nRunning dashing, the Synergy meter is updating with the animation working as well.\nBefore doing the cast, I also obtained the same results as stated in the thread: if I commented out the @accessor value line, I wouldn't get the animation, but the updates would work.\nPlease let me know if this fixes it for you as well!\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "xfalcox": "I can confirm this bug happening on Number widget, updated via normal job.\nPutting a to_i on the data sent through send_event method solved the issue.\n. ",
    "florianpilz": "Even though this is an old ticket, it's still current. We are using Chrome on Mac OSX and after 1-2 days the meter widget won't update the bar anymore. The number and Updated At text are still updated correctly, it's really just the meter bar.\nA clean refresh reloads the data and everything is fine. But would be nice if the meter bar would always be accurate.\n. ",
    "mkb": "I was having this same issue and removing the quotes from the numbers in my curl commands fixed it, just as with the other folks.\n. ",
    "boxiong": "here is a potential fix\nhttps://github.com/Shopify/dashing/pull/303\n. ###Additional Info from Terry\nWhen refreshing a dashing dashboard page on Mac OSX Chrome Version 32.0.1700.77, the Dashing.widgets hash sometimes loses references to the ids for the dashing widgets on the page, which results in a state where the widgets will never update with data from subsequent EventSource updates with the same data.  This is because the lastEvents updatedAt value for the widget ID is the same as the incoming data's updatedAt value,  until the data is updated \u2013 which in cases where this may be hours results in blank widgets.\nThis is because in dashing.coffee in the source.addEventListener method for 'message', the lastEvents for the id is set EVEN when the widgets[data.id] is not found.  Subsequent EventSource messages will find that the lastEvents for the id and the incoming data both have the same updatedDate value, thereby short-circuiting a call to widget.receiveData UNTIL the incoming EventSource data's updatedAt value is updated by a scheduled event on the server side.  This is a problem for scheduled jobs which are not executed often.  \nIf this code in dashing.coffee is changed as follows, the widgets will refresh on the next GET Events fired from the EventSource/SSE cycle in chrome so blank widgets are only a transient occurrence.\nsource.addEventListener 'message', (e) =>\n  data = JSON.parse(e.data)\n  if lastEvents[data.id]?.updatedAt != data.updatedAt\n      if Dashing.debugMode\n        console.log(\"Received data for #{data.id}\", data)\n      console.log(\"onMessage event widget for id #{data.id} is #{widgets[data.id]}\")\n      if widgets[data.id]?.length > 0\n        lastEvents[data.id] = data #Move into the if widgets block to assure widget and lastEvents are in synch\n        for widget in widgets[data.id]\n          widget.receiveData(data)\nThe case where Dashing.widgets has loses references to the ids for the page on refresh can be observed in Chrome and in Firefox (but not in Safari), but only occurs occasionally and only on some machines and not others (with the same versions of the browsers and plugins/extensions removed or disabled).\n. @pushmatrix, would you please take a quick look of this pull request?\n. @pushmatrix or @dylanahsmith, would you please take a look of this pull request when you get a chance?  It'd be highly appreciated if this pull request can be merged so that we don't have to maintain a forked version.\n. @pushmatrix or @dylanahsmith, thank you for merging #303 for us!  \nWould you please take a look of this pull request as well?\n. ",
    "jloh": "Can confirm I've got this issue as well, except I see it almost instantly with the Number widget.\nRemoving @accessor 'current', Dashing.AnimatedValue fixed the issue for me.\n. ",
    "bogdanRada": "for me it wasn't problem with the Widget itself, the problem was i was opening too many connections to a database and was timing out because of that. Fixing the connection problem solved it for me \n. i think the problem is in how the thin server is started\nModifying the original command from this\nbundle exec thin start -R config.ru -e production -p 11400\nto this\nbundle exec thin start -R ./config.ru -e production -p 11400\nshould do the trick\n. ",
    "lanox": "I am having same issue with chrome where meter widget updates twice and stops. \nIf i remove @accessor 'value', Dashing.AnimatedValue it works fine.\nIs this been looked at all ?\n. eh found the way to get around it ... \nin widget/meter/meter.html change line to this data-bind-value=\"value\"\n. ",
    "MattRK": "I'll add to the chorus and confirm that disabling the animation on the Number widget fixed the issue for us. (Running Midori on an raspberry pi) \n. ",
    "bcole808": "For me, after loading a dashboard the number widgets would simply never update beyond the initial values.  Removing @accessor 'value', Dashing.AnimatedValue got the numbers updating, but I was also able to leave the animation enabled and fix it by editing the job that updated values and making sure that each value was converted to an integer with .to_i and that seemed to fix my problem as well. \n. ",
    "cptnslick": "bcole808's suggestion is spot on. If you are passing true integer values the animated numbers work as they should. \nFor example:\nI'm using HTTParty's GET function to grab the values from a server:\n```\nresponse = HTTParty.get('URL')\ntemp = JSON.parse(response.body)[0]\nsend_event('temp', { value: temp.to_i })\n```\nThe [0] piece is very important. It's tells the parse to pull the actual value out of the response instead of the response string [\"70\"]\nJSON.parse(response.body)[0] ==> 70  (as a string, still need to convert to int)\nJSON.parse(response.body) ==> [\"70\"]  (as a string with markup, can't convert to int)\nI know that last part is off topic, but it took me a bit to figure out (ruby noob) and I wanted to share.\n. ",
    "serenangai": "No need to create a new file. If you want to change the style for all widgets, you can edit application.scss. \nEach widget type (/templates/project/widgets/...) has their own SCSS file, so you can make changes to specific widgets too.\n. ",
    "mcook08": "When I make changes to the .scss, it doesn't apply to the page. Surely I'm missing something silly here, do I need to compile sass in order for changes to be applied? \n. Strange - seemed like changes weren't applying to my site, but I think it was just a lack of understanding in how they would apply. Edits to the .scss are definitely applying right away now. \n. Thanks for the quick response and sorry for the newb question. That worked perfectly.\n. Add highcharts.js to the javascripts dir.\nCreate highcharts dir inside widgets and add highchart.coffee\n```\nclass Dashing.Highchart extends Dashing.Widget\n@accessor 'current', Dashing.AnimatedValue\nready: -> \n    @chart = new Highcharts.Chart(\n      chart: \n        renderTo: @node\n    )\nonData: (data) ->\n    @chart = new Highcharts.Chart(\n      @get('data')\n    )\n```\nRequire highcharts.js and exporting.js (if desired) in the javascripts/application.coffee file\n. ",
    "vrish88": "I've hacked together a Sinatra extension that adds a _cycle route and uses http's refresh mechanism to cycle through the pages. I've gotten it to work with the a sample application  but I haven't been able to get the _cycle route to register with a dashing app yet.\nI've tried modifying a dashing apps config.ru:\n``` ruby\nrequire \"sinatra/cyclist\"\nrequire 'dashing'\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\nhelpers do\n ...\n```\nBut I get the error: No such file or directory - sample/dashboards/_cycle.erb which indicates to me that the _cycle action is getting matched by get '/:dashboard' in dashing.rb.\nAny thoughts on how to get sinatra to match it with the correct route?\n. Actually, I figured it out, so the gem should be good to go! https://github.com/vrish88/sinatra_cyclist\nThe instructions in the readme specify how to install it for a Dashing project.\n. ",
    "ichthala": "I needed to do this for each item in a list, not a whole widget, and ended up with:\nonData: (data) ->\n      $('li').click (e) ->\n      list_item = $(e.target).closest('li')\n      item = $(list_item).find('.my-link').first()\n      url = item.attr('href')\n      window.open(url, '_blank')\n...with of course a link of 0 characters and class .my-link hidden in the markup. If there's a better way I'd love to know, but for now I'm just leaving this here for anyone who has a similar requirement.\n. ",
    "baraschi": "I think you can do this now in your erb file: \n< li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\" >\n< div data-id=\"karma\" onclick=\"location.href='myurl'\" >< /div >\n< /li >\n(See: https://github.com/Shopify/dashing/issues/252)\n. https://github.com/Shopify/dashing/issues/127 might help you\n. ",
    "spuder": "Confirmed, onclick=\"location.href='myurl'\" works.\n. I tried ruby 1.9 and got the same crash\n```\ndashing start\n/Library/Ruby/Gems/2.0.0/gems/eventmachine-1.0.3/lib/rubyeventmachine.bundle: [BUG] Segmentation fault\nruby 1.9.3p547 (2014-05-14 revision 45962) [x86_64-darwin13.2.0]\n-- Control frame information -----------------------------------------------\nc:0014 p:-17543185482044 s:0038 b:0038 l:000037 d:000037 TOP \nc:0013 p:---- s:0036 b:0036 l:000035 d:000035 CFUNC  :require\nc:0012 p:0095 s:0032 b:0032 l:000031 d:000031 TOP    /Library/Ruby/Gems/2.0.0/gems/eventmachine-1.0.3/lib/eventmachine.rb:8\nc:0011 p:---- s:0030 b:0030 l:000029 d:000029 FINISH\nc:0010 p:---- s:0028 b:0028 l:000027 d:000027 CFUNC  :require\nc:0009 p:0083 s:0024 b:0024 l:000023 d:000023 TOP    /Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/lib/thin.rb:7\nc:0008 p:---- s:0022 b:0022 l:000021 d:000021 FINISH\nc:0007 p:---- s:0020 b:0020 l:000019 d:000019 CFUNC  :require\nc:0006 p:0011 s:0016 b:0016 l:000015 d:000015 TOP    /Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/bin/thin:5\nc:0005 p:---- s:0014 b:0014 l:000013 d:000013 FINISH\nc:0004 p:---- s:0012 b:0012 l:000011 d:000011 CFUNC  :load\nc:0003 p:0167 s:0008 b:0008 l:0011b8 d:0016e8 EVAL   /usr/local/var/rbenv/versions/1.9.3-p547/bin/thin:23\nc:0002 p:---- s:0004 b:0004 l:000003 d:000003 FINISH\nc:0001 p:0000 s:0002 b:0002 l:0011b8 d:0011b8 TOP   \n-- Ruby level backtrace information ----------------------------------------\n/usr/local/var/rbenv/versions/1.9.3-p547/bin/thin:23:in <main>'\n/usr/local/var/rbenv/versions/1.9.3-p547/bin/thin:23:inload'\n/Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/bin/thin:5:in <top (required)>'\n/Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/bin/thin:5:inrequire'\n/Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/lib/thin.rb:7:in <top (required)>'\n/Library/Ruby/Gems/2.0.0/gems/thin-1.6.2/lib/thin.rb:7:inrequire'\n/Library/Ruby/Gems/2.0.0/gems/eventmachine-1.0.3/lib/eventmachine.rb:8:in <top (required)>'\n/Library/Ruby/Gems/2.0.0/gems/eventmachine-1.0.3/lib/eventmachine.rb:8:inrequire'\n-- C level backtrace information -------------------------------------------\nSee Crash Report log file under ~/Library/Logs/CrashReporter or\n   /Library/Logs/CrashReporter, for the more detail of.\n-- Other runtime information -----------------------------------------------\n\n\nLoaded script: /usr/local/var/rbenv/versions/1.9.3-p547/bin/thin\n\n\nLoaded features:\n0 enumerator.so\n1 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/enc/encdb.bundle\n2 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/enc/trans/transdb.bundle\n3 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/defaults.rb\n4 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/rbconfig.rb\n5 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/deprecate.rb\n6 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/exceptions.rb\n7 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/custom_require.rb\n8 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems.rb\n9 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/pathname.bundle\n   10 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/pathname.rb\n   11 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/constants.rb\n   12 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/etc.bundle\n   13 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/config_file.rb\n   14 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/version.rb\n   15 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/requirement.rb\n   16 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/rubygems_integration.rb\n   17 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/current_ruby.rb\n   18 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/dependency.rb\n   19 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/shared_helpers.rb\n   20 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/fileutils.rb\n   21 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/gem_path_manipulation.rb\n   22 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/platform.rb\n   23 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/specification.rb\n   24 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/gem_helpers.rb\n   25 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/match_platform.rb\n   26 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/rubygems_ext.rb\n   27 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/version.rb\n   28 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler.rb\n   29 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/settings.rb\n   30 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/path_support.rb\n   31 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/digest.bundle\n   32 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/digest.rb\n   33 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/digest/sha1.bundle\n   34 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/set.rb\n   35 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/definition.rb\n   36 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/dependency.rb\n   37 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/ruby_dsl.rb\n   38 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/dsl.rb\n   39 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/source.rb\n   40 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/common.rb\n   41 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/generic.rb\n   42 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/ftp.rb\n   43 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/http.rb\n   44 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/https.rb\n   45 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/ldap.rb\n   46 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/ldaps.rb\n   47 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri/mailto.rb\n   48 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/uri.rb\n   49 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/user_interaction.rb\n   50 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/remote_fetcher.rb\n   51 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/errors.rb\n   52 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/text.rb\n   53 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/spec_fetcher.rb\n   54 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/source/rubygems.rb\n   55 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/strscan.bundle\n   56 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/source/path.rb\n   57 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/source/git.rb\n   58 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/lockfile_parser.rb\n   59 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/lazy_specification.rb\n   60 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/tsort.rb\n   61 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/forwardable.rb\n   62 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/spec_set.rb\n   63 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/environment.rb\n   64 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/runtime.rb\n   65 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/index.rb\n   66 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/remote_specification.rb\n   67 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/endpoint_specification.rb\n   68 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/dep_proxy.rb\n   69 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/rubygems/source_index.rb\n   70 /Library/Ruby/Gems/2.0.0/gems/bundler-1.5.2/lib/bundler/setup.rb\n   71 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/timeout.rb\n   72 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/stringio.bundle\n   73 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/date_core.bundle\n   74 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/date/format.rb\n   75 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/date.rb\n   76 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/time.rb\n   77 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/openssl.bundle\n   78 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/bn.rb\n   79 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/cipher.rb\n   80 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/config.rb\n   81 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/digest.rb\n   82 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/buffering.rb\n   83 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/x86_64-darwin13.2.0/fcntl.bundle\n   84 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/ssl-internal.rb\n   85 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl/x509-internal.rb\n   86 /usr/local/var/rbenv/versions/1.9.3-p547/lib/ruby/1.9.1/openssl.rb\n\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n```\n. Thanks @protomouse . I tried this several more times on both Mac and Linux all of them failing with similar results. I even asked this stack overflow question http://stackoverflow.com/questions/23965583/ruby-crashes-when-starting-application-is-it-the-environment\nThe moment I switched from rbenv to RVM everything started working as expected. \n. ",
    "thoughtcroft": "I know this is an old issue but I used the onclick= method and that works fine except not on an iOS device. Anyone work out the fix required for that?\n. ",
    "DeanCording": "One problem with this solution is that moving the widget triggers the onclick call, making it impossible to re-arrange the dashboard.\nSee #651 for a solution\n. The problem is that widgets can only be 0-5 columns wide, irrespective of the dashboard width.  If you specify more than 5 columns wide for a widget it fills the entire dashboard width.  I encountered this issue with a dashboard I am developing.  To maximise the use of screen space, I have set the column width to 50px, with most widgets being 4 or 5 columns wide.  The problem occurs when I have a larger widget that takes up 10 columns, it fills the entire dashboard width.\nI can confirm that the proposed fix solves this problem.\n. Dashing.AnimatedValue has a bug which causes it to lock up if the old and new values are the same.  See #672 \n. Use a Batman filter.  The Batman fixed filter hasn't been implemented in Dashing but it is easy to do.\nIn application.coffee, add the filter at the end:\nBatman.Filters.fixed = (num, f) ->\n  return parseFloat(num).toFixed(f)\nThen include the filter in your widget html .  For example,\n<h2 class=\"value\" data-bind=\"current | fixed 2\"></h2>\n. The solution I have used to prevent this is to add a drag handle to the widget.\nIn the dashboard file, add a <header> for every widget, for example:\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n    <header class=\"fa fa-arrows drag-handle\"></header>\n    <div data-id=\"time\" data-view=\"Clock\"></div>\n</li>\nWe just need to tell gridster about the handle, using handle: 'header' in assets/javascript/application.coffee:\nBatman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      max_size_x: Dashing.numColumns\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n        start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n        handle: 'header'\nNow for some CSS magic to make the handle appear and disappear on mouse over.  In assets/stylesheets/application.scss add:\n```\n.drag-handle {\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  z-index: 99;\n  opacity: 0;\n}\n.drag-handle:hover {\n  opacity: 1;\n}\n```\nThe end result is that a drag handle will appear when you mouse over the top right corner of a widget.  Clicking on the drag handle will allow you to move the widget.  Clicking or dragging anywhere else on the widget is just a normal click or drag event for the widget. \n. This is still an issue. #310 doesn't appear to fix the problems when using Edge.\n. Actually, this is a coffee related problem.\nThe offending line in dashing.coffee is:\nunless @[timer] || num == to\nwhich looks fine, except it gets translated to:\nif (!(this[timer] || num === to)) {\nwhich is a bit different.  The work around may be to change the animation loop termination test from:\nif (up && num > to) || (!up && num < to)\nwhich fails if num = to, to \nif (up && num >= to) || (!up && num <= to)\n. PR created.\n. Same change as proposed in #618 \n. ",
    "phylor": "@thoughtcroft Dashing uses gridster to move widgets around. There is an open issue for click events on iOS devices over at gridster.\nThe temporary fix is to use pushmatrix's solution and to additionally register for touchend events. The click event works on most devices and the touchend event on iOS.\nI'm successfully using following code to achieve the same behavior on desktops and iOS:\n```\n\n  function openUrl(obj) {\n    var widget = $(obj).find('.widget');\n    var url = widget.data('url');\n    window.open(url, '_blank');\n  }</p>\n<p>$(function() {\n   $('li').live('click', function(e){\n    openUrl(this);\n  });\n  $('li').live('touchend', function(e){\n    openUrl(this);\n  });\n});\n\n```\n. ",
    "centic9": "FYI, a very simple way to at least give users a hint is to add a javascript snippet at the top of the dashboard-file:\njavascript\n<script type='text/javascript'>\nvar isIE = window.ActiveXObject ? true : false;\nif(isIE) {\n    alert(\"This Dashboard does not work on Internet Explorer, please use Firefox or Chrome to view it!\");\n}\n</script>\nNaturally you will likely do something else than alert()...\n. See https://github.com/Shopify/dashing/issues/37#issuecomment-35885239 for how I inform users about this via a short javascript snippet.\n. ",
    "larrycai": "@centic9 very good direction for this.\nAnd your sample doesn't work for IE11 like, I refer to the sto: http://stackoverflow.com/questions/19999388/jquery-check-if-user-is-using-ie which is more complete.\n. ",
    "lstep": "Yes it worked, thanks\nOn Tue, Dec 4, 2012 at 5:53 AM, Daniel Beauchamp\nnotifications@github.comwrote:\n\nDid this work?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/38#issuecomment-10984283.\n. \n",
    "samstarling": "Thanks, that works perfectly.\n. Absolutely perfect, thanks @pushmatrix!\n. ",
    "csu": "Just wanted to say thanks @pushmatrix for the wiki article!\n. ",
    "karthigb": "Great work!  I have used the Rickshaw examples to build my own tiles.  However, I would like to make a pie chart.  Rickshaw currently does not support them.  I could use D3 to make a pie chart, but am experiencing some difficulty.  Do you have any examples of either a D3 tile or a pie chart tile?\n. @gregschwartz Thanks!! :)  That did the trick more easily than I could have hoped.\n\n. ",
    "gregschwartz": "Rather than trying to make one by hand, I'd strongly recommend using\nd3pie.org  I just used it on a dashboard at work yesterday. It's way, way\neasier than trying to use a sample pie chart and adapt it to your needs.\n(Which was what I was trying to do, until I found d3pie!)\nOn Thu, Jul 17, 2014 at 1:30 PM, karthigb notifications@github.com wrote:\n\nGreat work! I have used the Rickshaw examples to build my own tiles.\nHowever, I would like to make a pie chart. Rickshaw currently does not\nsupport them. I could use D3 to make a pie chart, but am experiencing some\ndifficulty. Do you have any examples of either a D3 tile or a pie chart\ntile?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/41#issuecomment-49361312.\n. Glad to hear it! In case you need it, I also just released a library for\nbuilding bar graphs, in case you need it: https://github.com/zipongo/zatanna\n\nOn Fri, Jul 18, 2014 at 2:02 PM, karthigb notifications@github.com wrote:\n\n@gregschwartz https://github.com/gregschwartz Thanks!! :) That did the\ntrick more easily than I could have hoped.\n[image: screen]\nhttps://cloud.githubusercontent.com/assets/2610557/3632017/d1991806-0ebe-11e4-887f-4a665c31da85.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/41#issuecomment-49479383.\n. Seeing this issue as well, could we get this merged in? Please? Otherwise I sometimes have to reset my displays. Thanks!\n. @egilh I'm on a mac, and Ruby Devkit says it's only for Windows machines. Any other suggestions? I haven't had issues with installing other gems, for example:\n\n```\ngregmac:~ $ sudo gem install haml\nPassword:\nFetching: haml-4.0.5.gem (100%)\nHEADS UP! Haml 4.0 has many improvements, but also has changes that may break\nyour application:\n\nSupport for Ruby 1.8.6 dropped\nSupport for Rails 2 dropped\nSass filter now always outputs ",
    "pokerfundr": "when i try following your heroku deploy method exactly i am receiving this error\nHeroku receiving push\n-----> Ruby app detected\n !\n !     Gemfile.lock is required. Please run \"bundle install\" locally\n !     and commit your Gemfile.lock.\n !\n !     Heroku push rejected, failed to compile Ruby app\n. im running the bundle install before commit the files and still running into the problem -----> Heroku receiving push\n-----> Ruby app detected\n !\n !     Gemfile.lock is required. Please run \"bundle install\" locally\n !     and commit your Gemfile.lock.\n !\n !     Heroku push rejected, failed to compile Ruby app\nand the time i successfully deployed it to heroku i did \ngit add gemfile gemfile.lock .gitignore\ngit commit -m \"bundle files\"\nit installed to heroku but with the first error \n2012-12-06T21:53:23+00:00 heroku[router]: at=error code=H14 desc=\"No web processes running\" method=GET path=/ host=swively123.herokuapp.com fwd=72.37.249.180 dyno= queue= wait= connect= service= status=503 bytes=\n. ",
    "zaeem": "Yes I had the same issue and \nheroku ps:scale web=1\nsolves the problem. Confirmed.\n. ",
    "henry74": "This wasn't very clear to me so posting for others: the view referenced above is the list.html, not your dashboard.erb file (or whatever you called it)\n. Made the following change which appears to work:\n`   onData: (data) ->\n        sortedItems = new Batman.Set\n        sortedItems.add.apply(sortedItems, data.items[0..15])\n        @set 'items', sortedItems'\nCurious how it would be able to sort by descending if I'm not providing the entire list of data.items since the sortByDescending is in the html...\n. Getting a javascript error:\nUncaught TypeError: Cannot call method 'slice' of undefined \nThe error is likely causing the list to no longer be ordered and no longer cutting it off at 15\nHere's the copy pasted code from listing.coffee:\n`class Dashing.List extends Dashing.Widget\n    @accessor 'sortedItems', =>\n    @get('items.sortedByDescending.value.toArray')[0..15]\nonData: (data) ->\n    sortedItems = new Batman.Set\n    sortedItems.add.apply(sortedItems, data.items)\n    @set 'items', sortedItems\nready: ->\n    if @get('unordered')\n        $(@node).find('ol').remove()\n    else\n        $(@node).find('ul').remove()`\nAnd from listing.html:\n<ul class=\"list-nostyle\">\n  <li data-foreach-item=\"sortedItems\">\n    <span class=\"label\" data-bind=\"item.label\"></span>\n    <span class=\"value\" data-bind=\"item.value\"></span>\n  </li>\n</ul>\nCan you set an accessor for a value that doesn't exist yet? (items doesn't get set until the OnData call...\n. I'm not familiar with batman.js, but it seems like the sortedItems is now an array, but the data-binds within the foreach loop from listing.html are looking for an item.label and an item.value...not sure how the widgets would get those if the foreach-item is now an array.\nCurrently I don't get any errors but the list widgets are now entirely empty.\n. Thanks Dan - this looks like it solved the problem although I didn't get everything you recommended, I think this thread will benefit many folks looking to leverage the shopify's dashing dashboard.\nAppreciate your help and patience through this thread as well as the quick response times!\n. Dan this isn't super critical to this question, but the dashing widget flashes between no terms to updated terms every time the scheduler pulled in updated data even if it didn't change.  Not a great user experience, but if you have any ideas on preventing that from happening; it would be useful.\nThis didn't happen with the prior code.\n. ",
    "iainay": "Hate to bring up an old thread and this may not be the best place to ask but with my limited skills this is working very well for us. Linking into a helpdesk mysql system. The only issue that is bugging me is that the sorted list is going from 0 upwards.\nAm I missing an easy way to reverse the sort or is it a bit more complicated?\n. ",
    "SecretHolland": "For sorting in descending order use sortedByDescending.\nExample:\n<li data-foreach-item=\"items.sortedByDescending.timestamp\">\n. ",
    "proffalken": "Hi Dave,\nI'm not new to sysadmin, I'm just thrown by the need to call \"dashing start\" to start the process, is there any reason I can't call thin direct with -c config.ru? or is there some \"special sauce\" that the dashing command uses under the hood?\n. lol, I complete missed that, thanks :)\n. ",
    "aaldrich": "I think the problem is that the object data needs to be created on the client side which means on the initial load I have to create a new object Highcharts.Chart. However I don't have the data to feed it at that point because that is populated by the job which also creates a new Highcharts.Chart with the values.\nI'm not sure how to store and get the latest Highcharts.Chart object so that it is available in the ready: event.\n. Let me try to better explain it:\nIn my widget ready event I initialize a blank chart.\nIn my widget onData event I take the data passed from the job and recreate that chart with the values\nHere are the steps I'm performing\n1. I start the server\n2. I go to my page http://localhost:3030/sample and my chart is empty (I Would have expected the chart to have data at this point but there isn't any)\n3. I stop the server\n4. I start the server and my chart receives the data (I'm assuming it is because the job is run when the server starts and the page is listening for it properly)\n5. I refresh the page and the chart is blank again\nSo basically I want to make step 4 work whenever the page is loaded so it loads the chart with data. I hope this helps. If I need to I can record a video of the events. Thank you so much for your help.\n. I dug into it some more and it might be a bug in the highcharts.js that is causing this. I have a function that ensures the container exists in the dom before building the chart however I still get an error 13 which means the chart can't attach to the container. I see it executing in the ready event and then I see the onData event firing after that so I think Dashing is doing what is supposed to.\n. Absolutely I have it mostly just showing line charts but here is what I have right now:\n\nhighchartline.coffee\n``` coffeescript\nclass Dashing.Highchartline extends Dashing.Widget\ncreateChart: (series,x_axis,y_axis) ->\n    container = $(@node).find('.highchart-container')\n    if $(container)[0]\n      @chart = new Highcharts.Chart\n        chart:\n          renderTo: $(container)[0]\n          type: \"line\"\n        series: series\n        xAxis: {\n          categories: x_axis\n        }\n        yAxis: {\n          title: {\n            text: y_axis\n          }\n        }\n        plotOptions: {\n          line: {\n            dataLabels: {\n              enabled: true\n            }\n          }\n        }\nonData: (data) ->\n    @createChart(data.series,data.x_axis,data.y_axis)\n```\nhighchartline.html\n``` html\n\n\n```\nhighchartline.scss\n``` css\n// ----------------------------------------------------------------------------\n// Sass declarations\n// ----------------------------------------------------------------------------\n$background-color:  #ff9618;\n// ----------------------------------------------------------------------------\n// Widget-text styles\n// ----------------------------------------------------------------------------\n.widget-highchartline { \nbackground-color: $background-color;  \n&.large h3 {\n    font-size: 65px;\n  }\n}\n```\nerb snippet\nhtml\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"2\">\n      <div data-id=\"csat_history\" data-view=\"Highchartline\" data-title=\"CSAT History\" style=\"background-color:#efad1b;\">></div>\n</li>\njob to feed data. scaled down to hide private data\n``` ruby\nSCHEDULER.every '5s', :first_in => 0 do |job|\n  updated_at = Time.now.strftime('%m/%d/%Y')\npoints = [{name: \"Blah\", data: blah_csat_points},\n            {name:\"CE\", data: ce_csat_points},\n            {name:\"Ops\", data: ops_csat_points},\n            {name:\"Acct\", data: acct_csat_points}\n           ]\nx_axis = [\"Q4 2010\",\"Q2 2011\",\"Q4 2011\",\"Q2 2012\",\"Q4 2012\"]\n  y_axis_text = \"Score\"\nsend_event('csat_history', {series: points, x_axis: x_axis, y_axis: y_axis_text, updated_at: updated_at})\nend\n```\n. I did but I can't remember what I did. I eventually abandoned it and went\nto geckoboard. I was getting too frustrated with all the random workarounds\nand wasting too much time so I cheated and went the paid route :) sorry I\ncan't be of more help.\nSent from my iPhone\nOn Aug 2, 2013, at 9:17 PM, nccmike notifications@github.com wrote:\n@aaldrich https://github.com/aaldrich, did you finally get everything\nworking? I have implemented two highcart widgets on my dashboard using the\nsample in this post. Everything displays correctly, however, my jobs are\nonly running every 10 minutes. Most times, the widget will load but the\ngraph won't display until the job is run the next time.\nSuggestions?\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/Shopify/dashing/issues/50#issuecomment-22046772\n.\n. ",
    "mikechau": "Are you still having issues?\nThis seemed to get pie charts to render correctly for me:\n``` coffeescript\nclass Dashing.Piechart extends Dashing.Widget\nready: ->\n    @chart = new Highcharts.Chart\n      chart:\n        renderTo: \"HCcontainer\"\n        plotBackgroundColor: null\n        plotBorderWidth: null\n        plotShadow: false\n  title:\n    text: \"Daily Indicators\"\n\n  tooltip: \n    pointFormat: \"{series.name}: <b>{point.percentage}%></b>\"\n    percentageDecimals: 1\n\n  plotOptions:\n    pie:\n      allowPointSelect: true\n      cursor: \"pointer\"\n      showInLegend: true\n      dataLabels:\n        enabled: false\n        color: \"#000000\"\n        connectorColor: \"#000000\"\n        formatter: ->\n          \"<b>\" + @point.name + \"</b>: \" + @percentage + \" %\"\n\n  series: [\n    type: \"pie\"\n    name: \"Indicators\"\n    data: [[\"REG\", 1], [\"CANC\", 2], [\"OSEQ\", 3], [\"CNCL\", 4], [\"LATE\", 5], [\"ISOI\", 6]]\n  ]\n\n```\n. I had dataLabels set to false, did you change it true? \n. Oh I mean you should leave it true if you want labels. I think your formatting is off since its coffeescript, perhaps try this:\n``` coffeescript\nclass Dashing.Highchartpie extends Dashing.Widget\ncreateChart: (chart_title,series) ->\n    container = $(@node).find('.highchartpie-container')\n    if $(container)[0]\n      @chart = new Highcharts.Chart(\n        chart:\n          renderTo: $(container)[0]\n    series: series\n\n    title:\n      text: chart_title\n\n    tooltip:\n      pointFormat: '<b>{point.y}</b>'\n\n    plotOptions:\n      pie:\n        dataLabels:\n          enabled: true\n          formatter: ->\n            \"<b>\" + @point.name + \"</b>\"\n  )\n\nonData: (data) ->\n    @createChart(data.chart_title,data.series)\n```\n. @dieterdemeyer \nHooray! :boom: \nYeah, I am just starting to learn coffeescript myself, formatting seems to be very important. \nI found http://js2coffee.org/ pretty helpful to convert my js to coffeescript so I could get a better idea of how it should look in coffeescript. \n. @dieterdemeyer How are you posting data to the piechart? Can I see your job rb file? \nThanks!\n. ",
    "nccmike": "@aaldrich, did you finally get everything working? I have implemented two highcart widgets on my dashboard using the sample in this post. Everything displays correctly, however, my jobs are only running every 10 minutes. Most times, the widget will load but the graph won't display until the job is run the next time.\nSuggestions?\n. @aaldrich, no worries. My widgets load fine but my charts don't load with data until the job runs. I am currently loading blank charts gut I will check into updating them with the staff from the job that has aleardy run. \n. ",
    "CmdrCody": "I'm reviving this old thread, as I recently found myself implementing dashing for a project using highcharts and have been unable to turn anything up in the interwebs about this chicken-or-the-egg issue with initializing the charts. My highcharts charts work great once they're loaded with data, but if users happen to hit the page before a send_event hits their client from the ruby job, they could be waiting until the next interval before they see anything.\nIn my case, my data lives in Oracle, and I have my RB jobs are using OCI8 to retrieve the data and then building the various series objects for the different charts. I'm now facing the same problem as the OP, where my highcharts initialize as blank, since the series data comes from the server in the subsequentsend_event.\nI cannot figure out how to initialize the chart with some valid data from the first fetch. I've seen other posts around where people talk about \"emiting\" the series data in the DOM and then consuming it in the chart from the DOM on load; however, I can't figure out how to dynamically update the DOM from the Ruby Job.\nHas anyone figured a workaround for this? As it stands my charts are blank until the next 15-minute Send_Event. Obviously this won't work for my users, so I gotta figure something out.\n. ",
    "chrisspang": "Also just stumbled across this thread - the issue for me seems to be that 'onData' is fired before 'ready'.  I'm currently using a work-around that:\n1. First call to onData() (with the old data) does create the (d3) svg successfully, but this gets lost (DOM not ready or something - I'm new to this stuff)\n2. First call to ready() just calls onData()\n3. onData() uses the stored values (@get(\"value\")) to build the visualiation\nUntested rough example below:\n```\n  ready: ->\n    @onData({ value: 0 })\nonData: (dataFull) ->\n    data = dataFull.value  \n    if (!data)\n      data = @get(\"value\")\nif (!data)\n  return\n\n```\n. ",
    "oaknguyen": "thanks for the work around @chrisspang.  Worked nicely. \n. ",
    "mattjerry": "Thank you. I am trying to populate the data through another java program and updating the widget via REST. Pardon my ignorance on Ruby.\nI finally managed to generate data from my JAVA program  in this format: \n { \"auth_token\": \"YOUR_AUTH_TOKEN\", \"points\": {\"2012-12-09T17:58:25.000+05:30\":\"27\",\"2012-12-09T17:58:53.000+05:30\":\"6\",\"2012-12-09T17:59:17.000+05:30\":\"12\"}} but unfortunately, the widget is not getting updated.\nI did try curl -d  { \"auth_token\": \"YOUR_AUTH_TOKEN\", \"points\": {\"2012-12-09T17:58:25.000+05:30\":\"27\",\"2012-12-09T17:58:53.000+05:30\":\"6\",\"2012-12-09T17:59:17.000+05:30\":\"12\"}} http://localhost:3030/widgets/convergence \nbut it is also not going through.\nAny help would be greatly appreciated.\n. Thanks a ton for the lightning fast response. \nFrom  curl it is working in the following manner:\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":\"1\", \"y\":\"9\" }, {\"x\":\"2\",\"y\":\"14\"}] }' \nhttp://localhost:3030/widgets/convergence\nNow , I would like to have a timeseries displayed with time on x axis and distance travelled on y axis.\nI give the data in the format below - and it is displaying only y values and not displaying the  Time value.\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":\"2012-12-09T18:11:41.000+05:30\", \"y\":\"10\" }, {\"x\":\"2012-12-09T18:11:42.000+05:30\",\"y\":\"14\"}] }' http://localhost:3030/widgets/convergence\nQ1: Is there a format that I need to specify time ? does it not recognize the format mentioned above like 2012-12-09T18:11:42.000+05:30, 2012-12-09T18:11:49.000+05:30\nQ2: How do I get in convergence - that it is time and distance? How and where do I show the legend and what the axes x and y signify \nQ3: How and where do I specify the units for the axes.\n. Q4. Is there a better way to update the widget via a JAVA program apart from having to construct the string with x and y and their values - kindly let me know.\nOR I am not sure of the way Ruby integrates with Java - how else I can get this widget updated.\nOnly the timeseries is the point at which I'm stuck now - and if this is cracked, it looks great.\n. Sure- we can have a new widget created.\nIn the case of convergence example given in sample, does it take time as feed?\nIn the curl example mentioned in the response above, x values are mentioned as 1, w etc. Does x take time values \nBest regards\nOn Dec 20, 2012, at 9:52 PM, Kevin Thompson notifications@github.com wrote:\n\nYou're probably going to need to create a custom graph widget to display the data the way you'd like. The existing graph widget uses the Rickshaw JavaScript library and simply defines the width, height, and series of data:\n@graph = new Rickshaw.Graph(\n  element: @node\n  width: width\n  height: height\n  series: [\n    {\n    color: \"#fff\",\n    data: [{x:0, y:0}]\n    }\n  ]\n)\nRickshaw does support a number of additional options and extensions though, including an extension named Rickshaw.Graph.Axis.Time for adding x-axis time labels. View the source on their examples for more information.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you. I have tried using epoch this time. It shows the last value but no graph. Am attaching the images. \nYour help would be higly appreciated.\n\nData taken from http://code.shutterstock.com/rickshaw/tutorial/introduction.html\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": \n[ { \"x\": \"-1893456000\", \"y\": \"92228531\" }, { \"x\": \"-1577923200\", \"y\": \"106021568\" }, { \"x\": \"315532800\", \"y\": \"226545805\" }, { \"x\": \"631152000\", \"y\": \"248709873\" } ] }'http://localhost:3030/widgets/convergence\nMy own data:\n\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":\"1355056601\", \"y\":\"10\" }, {\"x\":\"1355056845\",\"y\":\"14\"},\n{\"x\":\"1355056849\",\"y\":\"16\"},\n{\"x\":\"1355056883\",\"y\":\"200\"},\n{\"x\":\"1355056895\",\"y\":\"99\"},\n{\"x\":\"1355056948\",\"y\":\"14\"}] }' http://localhost:3030/widgets/convergence\n\n. Pl note that  my own data is in the second picture \n. Hi, After a restart of server, the graph is coming - A significant milestone achieved. Thank you.\nNow only the X axis labels issue - if the data is years only in epoch, the X axis labels were coming. Now barring X axis labels everything else looks fine.\n\n. In the last picture shown above , the y axis values are being shown. But the x axis labels are not being shown. So, it is hard to identify- the date and time when the event happened.\n. Ok- let me try and get back to you.\n. Hi, the challenge was that the x axis which had the epoch time was not sorted and hence the widget didnt have any updates. Now that it is sorted out and I'm getting labels on x axis. But still I am not getting the month/date. Pl do let me know if there is a way to get the month/date displayed.\n\n. Thank you\n. Sorry for the delay -here you go\nI am trying to create a java app and I need a front end and I felt dashing was perfect. I dont know how to integrate java and ruby and that's why i chose dashing's updating of widgets via REST\nI have in my app - a need of opening ports and making http connections. This code is being built and had some issues -and app got hung with port opened. That actually damaged ( that's what I believe at least ) the working piece of dashing. Then I created a new sample dashing and checked if it was working with sample synergy widget. I was checking this update via Rest using curl. Unfortunately this was also not working and curls output was what I has sent in my initial mail.\nThe question I have is how to debug dashing and how do I recover\nI dont have any pointers where what to look for when widget is not being updated\nBest regards\nOn Dec 27, 2012, at 10:05 AM, Kevin Thompson notifications@github.com wrote:\n\nWould it be possible for you to create a gist, or a public repo, of your dashboard project, with any sensitive information stripped out? It's difficult to discern the cause of this issue without more context.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes - dashboard runs for a certain amount and then stops working. I try updating using curl as you'd mentioned but it also doesnt work. When the dashing server is restarted also -  it doesnt work. In curl, it prints a html output , which I had pasted in my initial mail.\n. This is addressed\nThank you\n\nBest regards\nOn Mar 25, 2013, at 4:15 AM, Daniel Beauchamp notifications@github.com wrote:\n\nI'm assuming you're still having this issue?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "bean5": "A note to future users, the ways mentioned here of updating a graph seem to be outdated. Sending the values as numbers rather than as strings seems to be more supported. So instead of this:\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": \n[ { \"x\": \"-1893456000\", \"y\": \"92228531\" }, { \"x\": \"-1577923200\", \"y\": \"106021568\" }, { \"x\": \"315532800\", \"y\": \"226545805\" }, { \"x\": \"631152000\", \"y\": \"248709873\" } ] }'http://localhost:3030/widgets/convergence\nYou should do this:\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": \n[ { \"x\": -1893456000, \"y\": 92228531 }, { \"x\": -1577923200, \"y\": 106021568 }, { \"x\": 315532800, \"y\": 226545805 }, { \"x\": 631152000, \"y\": 248709873 } ] }'http://localhost:3030/widgets/convergence\nThose who are more experienced with using dashing, please do correct me if I am wrong.\n. There is a great wiki page on using dashing on parked domains. The page is at https://github.com/Shopify/dashing/wiki/How-To:-Run-dashing-on-a-sub-path \n. Want to close this, @sansepic ?\n. ",
    "scubes13": "Ok, I am totally missing it. I have been toying with thin and dashing commands of all sorts....\nI have tried:\n export JOB_PATH=/home/user/dashing/my_dashboard/\nand \n  export BUNDLE_GEM=/home/user/dashing/my_dashboard/Gemfile\nI have then tried various calls to thin, dashing and bundle exec.\nCould you show me an example of how to call the app successfully from /root, assuming that dashing exists in the /home/user/dashing/my_dashboard/ directory?\nThanks!\n. Just to clarify what I would be interested in knowing how to do...\nI have a dashboard setup to display certain items for any given client. I want to use this as a template, so that, I can call the dashboard and including a parameter via the URL. For example: http://dashboard.acme.com/main?clientid=1234\nThe idea is that the \"clientid\" would be passed to the .rb job. The job would then pass this along to our .php file that we are using to run SQL queries. The SQL query would do something like: \"SELECT SOMETHING FROM clients WHERE clientid = $clientid;\"\nAny ideas, help, examples, etc would be greatly appreciated!\nMy goal is to create a widget for each item I want to know about a client, then pass that parameter so that it pulls the data for the specified client.\nHope that is clear as mud. :)\n. ",
    "ckelner": "I was able to get the old version therubyracer (and consequently libv8) installed as it was when the server was running properly before.  However I still have no luck getting the job data to show up.\n. Sorry Kevin, I was doing gem pristine --all and re-bundling to see if that fixed it, unfortunately it did not.  I've defined the Gemfile as follows:\n\"source :rubygems\ngem 'dashing'\ngem 'therubyracer', '0.11.0'\ngem 'libv8', '3.11.8.0'\"\nThanks for the quick response!\nedit: please let me know if I can provide anything else that may be helpful, I'll be happy to do so\n. Awesome, thank you.  To be clear - if I get dashing 1.0.2 it will clear up this issue or do I still need to add \"gem 'rack', '1.4.1'\" to my gemfile?\n. @pushmatrix was able to answer that :)  had to do both things (update dashing and add rack to the gemfile).  Thank you very much!\n. Thanks, that worked, I tried bundle install --clean but I guess it did not do what I thought it did :) haha.  Thanks again for the help!\n. ",
    "cookiescrumbs": "I'm having the same problem. Trying to run on EC2, ubuntu and on Dashing 1.0.2 \nGems are: \nsing backports (2.7.1) \nUsing coffee-script-source (1.4.0) \nUsing multi_json (1.5.0) \nUsing execjs (1.4.0) \nUsing coffee-script (2.2.0) \nUsing daemons (1.1.9) \nUsing rack (1.4.1) \nUsing tzinfo (0.3.35) \nUsing rufus-scheduler (2.0.17) \nUsing sass (3.2.5) \nUsing rack-protection (1.3.2) \nUsing tilt (1.3.3) \nUsing sinatra (1.3.4) \nUsing eventmachine (1.0.0) \nUsing rack-test (0.6.2) \nUsing sinatra-contrib (1.3.2) \nUsing hike (1.2.1) \nUsing sprockets (2.8.2) \nUsing thin (1.5.0) \nUsing thor (0.17.0) \nUsing dashing (1.0.2) \nUsing multi_xml (0.5.2) \nUsing httparty (0.10.2) \nUsing libv8 (3.11.8.13) \nUsing ref (1.0.2) \nUsing therubyracer (0.11.3) \nUsing bundler (1.2.3) \nIf I keep refreshing I get some data through but it doesn't update. \nAny ideas? \n. ",
    "rowanu": "+1 I was just looking for a way to do this.\n. ",
    "cedmax": "I have the exact same problem: followed the docs on installation (running on ruby 1.9.3)\n. ",
    "zsalzbank": "Same here. (ruby 1.9.3p327 (2012-11-10 revision 37606) [i686-linux])\n. ",
    "MaxMspTutorials": "Same here, ruby 1.9.3 and the following gem list:\nbackports (2.6.5)\nbundler (1.2.3)\ncoffee-script (2.2.0)\ncoffee-script-source (1.4.0)\ndaemons (1.1.9)\ndashing (1.0)\neventmachine (1.0.0)\nexecjs (1.4.0)\nhike (1.2.1)\nlibv8 (3.11.8.13 x86_64-linux)\nmulti_json (1.5.0)\npg (0.14.1)\nrack (1.4.3)\nrack-protection (1.3.2)\nrack-test (0.6.2)\nrufus-scheduler (2.0.17)\nsass (3.2.5)\nsinatra (1.3.3)\nsinatra-contrib (1.3.2)\nsprockets (2.8.2)\nthin (1.5.0)\nthor (0.16.0)\ntilt (1.3.3)\ntzinfo (0.3.35)\n. Works!\nI added the line you suggested, and used\nbundle update rack\nto get 1.4.1 downloaded.\nThanks!\n. ",
    "samdunne": "Still an issue for me. Even using newest version of both and trying this downgrading fix\n. ",
    "joshmmo": "Does not work for me. Added gem 'rack', '1.4.1' to my Gemfile and and ran bundle update rack.\nI am using ubuntu on ec2\n. I had the same issue on an EC2 instance. I switched to one of our internal servers and that fixed the issue. Same versions of ubuntu. I have no idea what the difference was. I also get no data on the demos listed.\nWhen I ctrl+c my server I would also get all the data updated on the widgets. Weird behavior.\n. Yeah actually something does come up:\nTimestamp: 9/25/2013 12:42:20 PM\nError: Firefox can't establish a connection to the server at http://stats.mysite.com:3030/events.\nSource File: http://stats.mysite.com:3030/assets/application.js\nLine: 15004\nand\nTimestamp: 9/25/2013 12:42:20 PM\nWarning: Unknown property 'zoom'.  Declaration dropped.\nSource File: http://stats.mysite.com:3030/assets/application.css\nLine: 686, Column: 6\nSource Code:\n  zoom: 1; }\nAny reason why /events does not work?\nSame issues on the demo site as well. I tried FF/Chrome\n. Another thing I noticed, when I stop the server, the numbers for widgets will display. \n[26/Sep/2013 17:27:07] \"GET /events HTTP/1.1\" 200 - 1423.9648\n184.xxx.xxx.xxx - - [26/Sep/2013 17:27:07] \"GET /events HTTP/1.1\" 200 - 16.2585\n. I do not have a proxy setup so that is not the issue I am having. It is quite strange, I have two subdomains pointed to the same server. One subdomain works just fine and the other one gives me this issue.\nI switched from an ec2 instance to a local server on my network. Still similar issue with multiple subdomains. I will try webrick instead of thin to see if this works for me.\n. webrick seemed to have fixed the issue\n. I will try that thanks. Sorry for the duplicate issue.\n. ",
    "mordonez": "same problem with last version, my gem-list:\nUsing i18n (0.6.5) \nUsing multi_json (1.8.2) \nUsing activesupport (3.2.15) \nUsing builder (3.0.4) \nUsing activemodel (3.2.15) \nUsing addressable (2.3.5) \nUsing atomic (1.1.14) \nUsing backports (3.3.5) \nUsing coffee-script-source (1.6.3) \nUsing execjs (2.0.2) \nUsing coffee-script (2.2.0) \nUsing daemons (1.1.9) \nUsing rack (1.5.2) \nUsing thread_safe (0.1.3) \nUsing tzinfo (1.1.0) \nUsing rufus-scheduler (2.0.24) \nUsing sass (3.2.12) \nUsing rack-protection (1.5.0) \nUsing tilt (1.4.1) \nUsing sinatra (1.4.3) \nUsing rack-test (0.6.2) \nUsing sinatra-contrib (1.4.1) \nUsing hike (1.2.3) \nUsing sprockets (2.10.0) \nUsing eventmachine (1.0.3) \nUsing thin (1.6.0) \nUsing thor (0.18.1) \nUsing dashing (1.3.1) \nUsing multipart-post (1.2.0) \nUsing faraday (0.8.8) \nUsing htmlentities (4.3.1) \nUsing json (1.8.1) \nUsing mime-types (1.25) \nUsing mini_portile (0.5.1) \nUsing mysql2 (0.3.13) \nUsing net-ssh (2.7.0) \nUsing net-ssh-gateway (1.2.0) \nUsing nokogiri (1.6.0) \nUsing oauth (0.4.7) \nUsing rest-client (1.6.7) \nUsing ruby-trello (1.0.4) \nUsing simple_oauth (0.2.0) \nUsing twitter (4.8.1) \nUsing bundler (1.3.5) \n. ",
    "contentfree": "@pushmatrix Did you ever figure out the 1 pixel gap for widgets that have an icon background? I'm seeing it still in the latest Chrome.\n. @pushmatrix Flipping the order of icon and widget content ala the following moves the 1 pixel gap to the other side of the widget\u2026\n. Thanks. I did end up going with something similar. (Should your @deferred.done been @libraryLoading.done?)\n. ",
    "budhash": "It appears that this is an issue with Rickshaw (https://github.com/shutterstock/rickshaw/pull/170).  Initializing the data with 2 samples (instead of 1) appears to resolve the issue\ne.g.: \njavascript\n     ready: ->\n     ...\n     ...\n    @graph = new Rickshaw.Graph(\n      element: @node\n      width: width\n      height: height\n      renderer : 'bar'\n      series: [\n        {\n        color: \"#fff\",\n        data: [{x:0, y:0}, {x:1, y:0}]\n        }\n      ]\n    )\n. ",
    "promisedlandt": "You mentioned you're using Ubuntu, why not write an Upstart script?\n. ",
    "rakr": "Some comments on this issue.\nFirst: I'm running Mac OS X Mountain Lion and using iTerm2, I should have been aware of the encoding issues of that tool and that OS.\nI'm also using zsh and oh-my-zsh (not relevant here but worth to mention).\nI made several tests: came back to bash still using iTerm2: not working\ncame back to bash and using regular Mac OS X terminal: not working\non bash, the following works:\n$ export LC_ALL=en_US.UTF-8  \n   $ export LANG=en_US.UTF-8\nFinally came back to zsh (oh-my-zsh) and same export: \n$ export LC_ALL=en_US.UTF-8  \n   $ export LANG=en_US.UTF-8\nit works also\nIssue closed\n. ",
    "joopdo": "I have the same environemnt and experience but for me this this didn't help. \nI keep seeing \"Try this: curl -d '{ \"auth_token\": \"YOUR_AUTH...\"\nHowever, if I enter wrong pascode it does give proper feedback. Going to search what causes this...\n. ",
    "zdennis": "Yes it was from curl. \n. ",
    "banafederico": "@dieterdemeyer Yes, will share them as soon as I find some time.\n. @pushmatrix OK. Let me change that.\n. @pushmatrix sorry it took me that long, been busy.\nI added a method to Thor::Util to do the dashing because I couldn't find anything better. Will be sending that in a pull request to the other project and updating this one if it gets accepted.\n. Found out that there's no point in adding that new method to Thor, IMO. Removed patch.\n. @dieterdemeyer Yes sure, which one you want? They're kinda messy as of today I can try and make them a bit better.\n. ",
    "thuiorg": "Hope this help somebody else, but this is what I found and am using:\nhttp://dashboarddude.com/blog/2013/08/16/dashing-dashboard-widget-challenge-the-hotness/\n. ",
    "maxxst": "so I don't need a rakefile ?\n. ",
    "dchymko": "Just use the batman databindings\ninside your sample.erb do:\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n          <div data-view=\"Image\" data-image=\"/logo.png\" data-href=\"http://github.com\" style=\"background-color: #FFFFFF\"></div>\n        </li>\nin widgets/image/image.html do:\n<a data-bind-href=\"href\"><img data-bind-src=\"image | prepend '/assets'\" data-bind-width=\"width\"/></a>\n. I'm getting this same issue deploying the app to elastic beanstalk. None of the widgets update. I've tried both my own dashboard as well as the sample (adding require 'json' to the gemfile) . I've tried various ruby.config setups as well with no luck. \nAny ideas? \n. ",
    "triangletodd": "This might help: http://roo.rubyforge.org/\n. ",
    "thedwm": "Hi,\nThanks will have a look and let you know what i come up with.\n. Awesome stuff. \nThanks alot will give it  go and let you know.\n. ",
    "ggusten": "This seems like a realy usefull thing, i tried to set it up but i am no geinius in linux and that is the platform i use for dashing.\nI tried your sample.rb and i have two problems\n1. kqueue is not supported on linux and you mention to use inotify, and i tried the logical and changed kqueue to inotify in the sample.rb sp i says \n   EM.inotify = EM.inotify?\n   insteed, but it dont work and is probebly all wrong.\nit says\nundefined method inotify? for EventMachine:Module\n1. The other thing that i can not get to work is roo, its installing as it should and is on the GEM list, but it says \n   cannot load such file -- roo\nThankful for any help you can provide\n//Martin\n. ",
    "tschew72": "I follow the example to the dot but I realise that whenever I modify the value in the spreadsheet and save it, the watch_file detects it as \"file_deleted\" instead of \"file_modified\". \nCan someone help me?\n. ",
    "michaelgra": "Could anyone help me with displaying a spreadsheet as text instead of pushing the value to a number?\n. ",
    "rickleigh": "@pushmatrix Is it possible to get a sample that works on linux? I have spent two days trying to reverse engineer the provided above and trying to find something similar with inotify and have not found anything that makes sense to me. I have never coded and trying to use your dashboard as a tool to learn and have something that I can use as a result. Thanks\n. I was able to get this to work in Linux/Ubuntu. See details here: http://stackoverflow.com/questions/29400811/use-with-excel-data-to-display-on-dashing-dashboard/29421179#29421179\n. Thank you for the information and I'll give it a look. \n. This worked perfectly! Thanks again!\n. Thanks, I'll take a look at it.\n. Nope, can't seem to get anyone to give enough info that I can understand. I've asked here as well:\nhttp://stackoverflow.com/questions/29292643/scraping-a-site-that-requires-login-username-and-password-on-two-separate-pages\n. ",
    "JRibeiro13": "Hi, i am getting the following error, can you help me please?\nscheduler caught exception:\nExcel support has been extracted to roo-xls due to its dependency on the GPL'd spreadsheet gem. Install roo-xls to use Roo::Excel.\n/var/lib/gems/1.9.1/gems/roo-2.0.0/lib/roo.rb:19:in const_missing'\n/home/pi/dashboard_project/jobs/sample.rb:9:infetch_spreadsheet_data'\n/home/pi/dashboard_project/jobs/sample.rb:20:in block in <top (required)>'\n/var/lib/gems/1.9.1/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:230:incall'\n/var/lib/gems/1.9.1/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:230:in trigger_block'\n/var/lib/gems/1.9.1/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:204:inblock in trigger'\n/var/lib/gems/1.9.1/gems/rufus-scheduler-2.0.24/lib/rufus/sc/scheduler.rb:430:in call'\n/var/lib/gems/1.9.1/gems/rufus-scheduler-2.0.24/lib/rufus/sc/scheduler.rb:430:inblock in trigger_job'\nThanks in Advance! :)\n. ",
    "nwdude44": "Anyone have any luck with making this work on Windows? Ruby noob here\n. ",
    "tylermauthe": "Please direct support requests to Stack Overflow: https://stackoverflow.com/questions/tagged/dashing\n. Not sure how I feel about this... Seems to go against the spirit of Dashing... Why not just pay for Ducksboard or some other point-and-click thing.\n. We hope to move Dashing to Puma from Rack, there is an open and almost completed PR for this: #427 \n. The change in #427 with -jruby is one of the reasons that PR cannot be accepted. The other changes should be fine, except they break the unit tests.\n. This PR can be closed as it is superseded by #427 -- hopefully that one is merged soon.\n. @pushmatrix and I are taking a look at the memory leak in the next little while. Memory leak aside...\nThis issue is ancient, so it deserves a worthy response! Seems like a two part question to me, with both parts relating to the operation of Dashing's Server Sent Event (SSE).\nThe first is a question that has been asked several times since this issue too: #387 #415 #582. The pages are hanging because each tab requires a persistent connection (SSE).\nA little known fact about browsers is that you can only have a certain amount of connections open to the same host name at the same time. No matter what kind of connection! Firefox has a max of 6 (source: http://browserscope2.org/?category=network&v=top).\nYou can test this out yourself by creating a little web application that just does while(true);. Then make a bunch of AJAX (more than 6...) calls in a loop and watch the other calls sit in pending as the first 6 spin indefinitely. An SSE is effectively a while(true);-type persistent AJAX connection disguised by the EventSource object. That being said, this same problem exists for Web Sockets. Heck, the same problem exists even for the most versatile long-polling mechanism in existence: the Gif Socket.\nThere are workarounds:\n- Traditional AJAX polling ($.getJSON().done(pollAgain)) masks this problem because each connection eventually gets it's turn in the queue after stalling for a period ... this may involve increasing the AJAX timeout values. :godmode: \n- \"Domain Sharding\" - create a bunch of phony subdomains that all point to the same server (dashing1, dashing2, dashing3[.yourdomain.com]) ... This tricks the browser into allowing 6 connections per shard.\n- \"Domain Sharding\" redux - use nginx or haproxy + virtual hosts as a front-end to each shard (could be the same box or multiple)\n- Have multiple servers with different hostnames, split up your dashboards among them (max of 6 simultaneous per host)\nThe second issue cited is heavy data usage. This has also been asked in #439 - possibly others. Admittedly, Dashing is a bit of a heavyweight if you have several dashboards with lots of data-intensive widgets. This is because all events for all widgets on all dashboards are sent in the same HTTP endpoint (the endpoint that you pointed out - /events). This allows Dashing to start receiving data immediately, without having to parse the DOM before polling the SSE.\nIt should be possible to wait for the DOM to load, parse it and determine what data the current dashboard cares about and then selectively request the appropriate data from the SSE. This doesn't really fit in the 80% use case for Dashing though, so such a change should live as a Gem to extend dashing.\n. Do people want this? Not sure I see the value in it... It is kind of nice -- would be cool if this could be an extension somehow... #pipedream.\n. Yeah, Masonry is not free for commercial use. I'd recommend closing this issue.\n. Is this still the idea for Dashing 2.0? :+1: \n. I think there are Additional Widgets that support this use case.\nI like that the default widget is simple.\n. Seems sensible, no breaking changes and consistency FTW. :+1: to merge this.\n. As @gordhawkins has pointed out, this change seems to be a breaking change and as such should wait for the next major release to be merged.\nThe migration path is pretty clear though, simply replace .start_new with .new in all jobs. Perhaps the change is small enough to be merged? Thoughts?\n. I like this PR and the approach taken. Many people don't know how to use the auth token and this leaves their Dashing instances vulnerable to exploits. This PR would make them secure by default (random token).\nI do however prefer @kmayer's syntax but no need to open a block: ENV.fetch('AUTH_TOKEN', SecureRandom.uuid). This is definitely a matter of personal preference though, as ENV['UNKOWN_KEY'] || true will return true just as surely as ENV.fetch('UNKOWN_KEY',true) will.\nThat being said, @pseudomuto brings up a good point: that this would be a (small, but) breaking change. Not sure how to resolve that.\n. Not sure if this is still required, I believe favicons work.\n. I've seen a few PR's that are very similar.\nPerhaps data-status should be moved up the chain, so all widgets support it.\n. This is a cool idea, though it might be nicer to simply persist the history whenever send_event is triggered -- debounced so that it is only written once every minute or so. Somewhere in here maybe: https://github.com/Shopify/dashing/blob/439182f3b91c6c3c0cb5b5c8f5bee2562cfff2d4/lib/dashing/app.rb#L133-L139\nThis depends on how expensive it is to write the history to disk...\n. Yes please! :+1: \n. Please close, superseded by #292.\n. Seems like a sensible change, except for the edge case I bring up in the note above.\n. I am using a 2-way ProxyPass directive inside a vhost to proxy my thin process through Apache.\nThis lets me serve multiple hostnames by adding more vhosts for each DNS entry. I can also run Hudson and Dashing on the same box, each with a different vhost / hostname.\nHere is the relevant docs for this: http://httpd.apache.org/docs/2.2/vhosts/examples.html#proxy\n. This is a desirable feature, I've seen many support requests for this. Not sure how much I like the name subdir, but otherwise I think this should be merged.\n. This is nice -- error handling ftw. :+1: to merge.\n. Moved to here:\nhttps://github.com/SmashingDashboard/smashing/pull/27. Seems like a great change, the graph is misleading without it.\n:+1: to merge.\n. Either this or #322 should be merged. This PR seems to be more comprehensive and well-tested.\nWill have to look at this in greater detail to decide which is better.\n. I would prefer if this were implemented as a widget. However, there are no breaking changes so it could be merged if people think this is desirable.\n. @davejohnston - You can trigger a refresh from the job by running this send_even:\nruby\nsend_event('refresh_sample', {event: 'reload', dashboard: 'sample'}, 'dashboards')\nReplace refresh_sample with whatever you want to call the event, some descriptive name. Replace dashboard: 'sample' with the name of the dashboard you wish to refresh.\n<rant>\nIn general, my suggestion to solve this problem is to create a single widget that scales to the number of data sources you wish to display from multiple jobs and looks like individual widgets. This solution will fit nicely into Dashing.\nDynamically generating the HTML for the Dashboards is another option if you do not want to create your own widget, but it will instead require you to build a backend for dynamically generating the content of the Dashboard ERB files.\nDoing this in a sane way is outside the scope of Dashing IMHO, but could be written as a Sinatra Extension packaged as a Gem that extends your ability to define the view model used for each Dashboard or adds some view helpers for data synchronisation and iteration.\n</endrant>\n. Have you tried @jwalton's Rickshaw Graph widget? It enhances the stock widget with more features.\nIf that doesn't do it for you, the next thing to try is modifying Graph.coffee. The widget is based on Rickshaw, you can find documentation for that here: http://code.shutterstock.com/rickshaw/\nIt has a number of options for Axes and Tick Marks. The Graph widget included in Dashing is generic enough to suit most use cases, but certainly not all. I don't think we want to increase the complexity of this widget, but I'm open to debate on that point.\nAnyone else have any thoughts about whether Dashing should include more customisation capabilities for the stock Graph widget?\n. Based on @rafaelescrich's comment, can someone confirm if this PR works in IE and if so, what versions?\nOtherwise, no breaking changes and this seems like a desirable feature. Even if IE is lame.\n. Just found #310 -- seems like that PR is a better candidate as it includes these fixes as well as other changes.\n. Dashing is a Sinatra app under the hood, you can access an item in the params hash like params[:item].\nYou can also define a custom route, so that you can parse params out of the URL. Alternatively, you could use querystring variables, which will automatically be placed into the params hash.\n. Please close this issue.\n. This PR seems to try to load history from Redis but I don't see where it is saving the history to Redis.\nYou'll probably want to add some code to do this around in this block:\nhttps://github.com/Shopify/dashing/blob/937fcce2dcca8010dbe8e9e26df954cb1330c1e0/lib/dashing/app.rb#L56-L58\n. Are there specific widgets that hang? I think you'd have to deal with this on a widget-by-widget basis, as they all work differently.\nThere are some animations in application.scss that you could disable, but I doubt those are slowing you down. CSS is usually blazing fast...\n. This change is also in #333 -- this PR should be closed as it is superseded by #332.\n. You've also added data-binds for height and width.\nDoesn't seem like there are breaking changes and adds new functionality. Seems like this should be merged.\nAgain, this is a batman change -- so it will be nuked when batman.js is replaced.\n. What is the data-id of your widget? If it isn't Karma, then you are sending the data to the wrong place.\ncurl -d '{ \"auth_token\": \"\", current: 1000, last: 100 }' http://localhost:3030/widgets/widgetID\n. Please close this issue.\n. Duplicates #339\nShould be fixed by #420 \nPlease close this issue.\n. Please close this issue.\n. This is a default of Gridster, not Dashing. However, Dashing should provide a mechanism for overriding these configuration parameters.\n420 should allow this specific functionality.\n. Are there other jobs interacting with the widget? This shouldn't happen.\n. Please close this issue.\n. Can you install any gems? Seems like your ruby environment is not correctly configured.\n. Please close this issue.\n. Are there any breaking changes in this update? Or in the update to 0.5.6?\n. Please close this issue.\n. It looks like you're doing everything correctly, I suspect the widget you've created has some issues. Perhaps this may be of use: https://github.com/Shopify/dashing/wiki/How-To:-Debug-incoming-widget-data\nPlease close this issue.\n. This is way outside of the scope of what Dashing does and should do (IMHO)...\nThis seems like a job for Graphite or similar. Also, why MongoDB?\nThat being said, that's approximately where I'd add such functionality -- though I'd probably break it out into a persist_event_to_db method.\n. There are a number of options in this list: https://github.com/Shopify/dashing/wiki/Additional-Widgets#other-third-party-tools\nPlease close this issue.\n. I agree. It seems that using Omniauth State requires you to implement a CSRF mechanism:\nhttps://github.com/zquestz/omniauth-google-oauth2#omniauth-state\n. Heroku free dynos will spin down if not in use and are generally unreliable. It looks like OpenShift doesn't idle as frequently: http://stackoverflow.com/questions/23795884/how-long-with-no-traffic-before-an-openshift-gear-goes-idle\nYou may have better luck with some gears... Alternatively, you could run it locally. It doesn't need much processing power, a Raspberry Pi would be lots.\nPlease close this issue if it is solved.\n. Please close this issue.\n. You can run a copy of Dashing locally and test your updates like that... I guess I'm not sure what you're asking. I would urge you to develop and test this as web application.\nTo answer your question, you need to require 'dashing'. However, this won't actually do anything as send_event won't update anything anywhere.\nOne solution that may fit your use case is to use an if-statement to branch the code near send_event, something like:\nruby\neventData = { current: current, value: current, points: points }\nif(runFromCommandLine) {\n  p eventData\n} else {\n  send_event 'incoming_target', eventData\n}\nYou can tell if it's being run from the command line with something like this:\nhttp://stackoverflow.com/questions/8990790/run-code-only-if-script-called-from-the-command-line\n. You have a couple syntax errors, you need to add two end's after the client.close.\nIn Ruby, when you say \"do |x, y, z|\" you are beginning a block (kind of like an anonymous function / lambda). You must close it by saying \"end\".\nSo:\n``` ruby\n!/bin/env ruby\nencoding: utf-8\nrequire 'tiny_tds'\nSCHEDULER.every '300s', :first_in => 0 do |job|\n  client = TinyTds::Client.new(:username => 'MYUSER', :password => 'MYPASSWORD', :host => 'MYHOST', :database => 'MYDB', :port => '1433')\n  rows = client.execute(\"SELECT Caption, IP_Address, Description, Vendor, StatusLED, StatusDescription, LastSync, LastSystemUpTimePollUtc\n    FROM [MYDB].[Nodes]\n    WHERE StatusLED LIKE '%down%'\n    ORDER BY LastSystemUpTimePollUtc, Caption;\")\n  rows.each do |row|\n    send_event('list', {value: row['value'] })\n    client.close\n  end\nend\n```\nYou might also find this interesting: https://github.com/bbatsov/ruby-style-guide\n. The first parameter in your send_event call defines the data-id that will receive the event. This must correspond to the data-id value specified in your dashboard.erb file.\n. It doesn't look like send_event is escaping anything... Perhaps on the batman.js side of things?\nIs the data coming out of /events correctly or is it escaped?\nIf you've solved this, please post your solution and close the ticket. Thanks!\n. Please close this issue.\n. application.coffee defines the front-end code, so it is only turning on debugging in the browser. It has no effect on the Rufus jobs.\nWhat is the error that Eclipse throws?\n. Please close this issue.\n. Please close this issue.\n. The changes can be viewed here: http://juhamust.github.io/dashing/\nOverall, I like these changes. My only gripe is with the Widgets section that was added to the bottom of #data -- I've made a note in the source code.\nMy suggestion is:\n- Add a page which lists the widgets in detail, or perhaps create demos of them in the demo app\n- Remove the <ul> -- it looks unfinished to me as it is\n- Link to the page that lists each widget with details instead\n. You have installed font-awesome-rails.\nThis is not a Rails application.\nYou want font-awesome-sass.\nFollow the instructions here: https://github.com/FortAwesome/font-awesome-sass\nIn particular, do not forget to do this in your application.scss:\nsass\n@import \"font-awesome-sprockets\";\n@import \"font-awesome\";\n. I don't see how WebSockets would overcome this, as you would still have a WebSocket per tab.\nYou can solve this by Domain Sharding, which is a technique of adding bogus DNS entries that all point to the same host.\ndashing-1\ndashing-2\ndashing-3\nThis tricks the browser into allowing the connections, because the hostname is different for each.\n. Fork the Number widget and modify the fork to support these features.\n. Please close this issue.\n. Do you get errors in your browser's console? Sounds like Highbar is failing to load.\n. Please close this issue.\n. Add a data-bgcolor property on the widget in your Dashboad .erb file. This enables you to specify different colours for individual widgets.\n. This URL is now protected. I suspect you have solved your issue.\nPlease close this.\n. This is not true for standard Dashing widgets. Perhaps it was true for a dark period of time when Chrome had a ridiculously terrible bug.\nIf this is still happening for the Rickshawgraph widget (although I am dubious of this), you should submit a request for support here: https://gist.github.com/jwalton/6614023\n. This is a good idea. We can definitely grab the local timezone from the user's browser.\n. https://github.com/Shopify/dashing/wiki/How-To:-Change-the-default-dashboard\nBad support request is bad...\n. Have you created any jobs?\nAs you can see in Dashing.coffee, the onData method is called whenever receiveData is called on a widget. receiveData is triggered whenever a message is received from the EventSource. If /events is not returning any data, your widgets won't get any data and the onData function will not trigger.\n. Please close this issue.\n. Makes sense to me, this would be a non-breaking change as triggering it would require events to be sent with a status field. :+1: for merging.\n. As I mentioned in #255 -- perhaps this should be moved up the chain to Dashing.Widget so that all widgets support data-status.\n. Dashing uses Batman.js at its core and you can use Batman's view bindings to achieve this.\nIn the Widget's .html file, you need to add a data-bind-onclick=\"onclick\" attribute.\n. This is a cool idea, any progress made on it? What's the roadmap for Dashing 2.0? How can I help???\n. Cool, I suppose this will be on hold until a replacement for Batman is chosen / implemented?\n. There are two ways that I can think of to do this.\n1) Add an onData handler to the list widget which updates the @items property of the widget instead of replacing it whole-hog.\n2) Add some kind of middle-man which aggregates the results of the disparate sources into a single event that is sent to the dashboard.\n. You can use this as an example: https://gist.github.com/Skeyelab/9bc044bc7f68aa365157\n. Please close this issue.\n. Do you see data coming in from /events inside the Network Panel of Chrome?\nIt may be related to how Thin executes on this environment. The Event service is an SSE endpoint, so it is a bit weird -- the data keeps streaming out and the request never really finishes...\nIf there's no data coming in from the endpoint then the request is never actually leaving the server. There are many possible reasons for this...\nIf using Puma resolves this, that is one more reason that Dashing should make the switch from Thin.\n. Please close this issue.\n. Don't trust that @welsh guy, he's trouble. :wink: \nI'm not sure that I'm clear on what the problem is here... But if I do understand, this is the correct code:\n``` ruby\nrequire_relative 'my_db.rb'\nclients = [\n        {name: 'OS-client1', id: '1'},\n        {name: 'OS-client2', id: '2'},\n        {name: 'OS-client3', id: '3'},\n        {name: 'OS-client4', id: '4'},\n        ]\nSCHEDULER.every '30s', :first_in => 0 do |job|\n  clients.each do |client|\n    db = MyDb.conn\n    sql = (\"SELECT computerid FROM computers WHERE LastContact < DATE_ADD(NOW(),Interval -120 Second) AND os LIKE %Server% AND clientid = #{client[:id]}\")\n    results = db.query(sql)\n    current_client[:name] = results.count\n    send_event(\"#{client[:name]}\", { value: current_client[:name] } )\n    db.close\n  end\nend\n```\n. Please close this as it duplicates #192 \n. I suspect that this is a limitation of the browser.\nBrowsers specify a maximum number of connections per hostname: www.browserscope.org/?category=network\nIf this is the cause, you can skirt this issue through a technique called Domain Sharding. Add a few extra DNS entries that point to the same IP and load each in a separate tab.\ndashing.corp.int\ndashing-1.corp.int\ndashing-2.corp.int\netc...\nYou can automate this by redirecting (via JavaScript or in your protected! helper method) to one of your shards randomly from the base URL...\n. Serve the image from Dashing via HTTP. file:// is flaky at best.\nhttps://en.wikipedia.org/wiki/File_URI_scheme\n. It is the job which injects data into the history.yml file and it is not possible to stop this from happening for a specific job. Furthermore, this is not a desirable feature.\nI recommend increasing the frequency that your job sends events. If there are expensive operations that you perform in this job, you should decouple those actions from the scheduled task which sends the event. So you can have one scheduled task that runs every 5 minutes and stores data in memory and another scheduled task that runs every 5 seconds and shuttles out the data that is stored in memory.\n. send_event also takes a third, mysterious parameter. If you set it to 'dashboard' the history.yml won't be written to.\nIt is witchcraft though, use at your peril.\nPlease close this issue.\n. Maybe a better solution would be to add an optional config object. Store the default config (defaultConfig) in an object, use a deep-copy override overriddenConfig = jquery.extend(true, {}, defaultConfig, Dashing.gridster); and then supply overriddenConfig as the parameter to gridster.\nThis would allow people to override any of gridster's settings on a per-dashboard basis.\nI'd argue that moving into Dashing 2.0, then we should use this approach to customising all aspects of such components. Lodash provides the same extend functionality, if jQuery is undesirable.\nSo instead of setting Dashing.widget_margins in your dashboard to customise, you'd set Dashing.gridster.widget_margins (or Dashing.gridster = {widget_margins: ...})\n. Let me rephrase my last sentence (which was a generalisation, not specific to you):\nSo instead of setting Dashing.numColumns in your dashboard to customise, you'd set Dashing.gridster.max_size_x (or Dashing.gridster = {max_size_x: ...})\nThe reason why I make this suggestion is that you may want this flag, but another developer may want to set a different flag. If we add each one by one, pretty soon we will have replicated Gridster's API and we'll have a mess of flags.\n. I've already said my peace on this PR -- I don't support adding one more flag.\n. Please close this issue.\n. I believe this is happening because the /events service is returning before Batman has parsed all of the Widgets from the DOM. Gotta love concurrency...\nA better solution would be to wait to apply data returned from /events until all the widgets are loaded into Dashing.widgets.\n. http://stackoverflow.com/questions/12520456/execjsruntimeerror-on-windows-trying-to-follow-rubytutorial\nGo with option 3 in the accepted answer.\nPlease close this issue.\n. There really isn't enough information here to provide a solid answer.\nThat being said, the code that is querying the database is assuming that it will be successful. You must modify this code to handle exceptional cases, like network outages.\nAny decent database interface library will provide this capability.\nPlease close this issue.\n. Now that batman is deprecated, this can be closed ( #498 ).\n. Please close this issue. (Duplicates #498)\n. Currently, Dashing can be run as a daemon with dashing start -d ... which is a tricky way of passing -d to thin.\nIt seems that Puma uses a different model, so I think pumactl needs to be used like this:\nbundle exec pumactl -S /path/to/state.file restart\n. Not sure how everyone else feels about this PR, but I think it'd be a positive move once the tests are fixed up to reflect this change.\n. There are a number of requests for this in #183 -- seems like this should be merged after being fixed up.\n. I am going to take this over and get it up to code so we can merge it in, unless there are objections.\n. Batman has a style binding for this: data-style-#{styleAttrName}\nHowever I don't think it supports vendor specific prefixes at this time.\nYou may have success with a custom widget -- I don't think it would be difficult. The approach I would take would be to attach to the onData method and use jQuery to apply the transformation from the data value.\n. Please close this issue.\n. The drag & drop functionality is provided by Gridster.js - the docs for that library may be useful.\nYou can probably just do what is recommended here: https://github.com/ducksboard/gridster.js/issues/58\nSo something like this inside your widget file:\ncoffeescript\n$(@node).data('gridster').disable()\n. You can do this with CSS too: https://github.com/ducksboard/gridster.js/issues/195\nAdding .no-drag to an element would disable dragging.\ncss\n.no-drag .gs-resize-handle-both{\n  display:none;\n}\n. This sounds like a nice feature, though I believe you could accomplish similar behaviour with a mutex -- couldn't you?\nAre there many breaking changes in the upgrade from 2.x to 3.x?\n. Can anyone provide insight on whether the upgrade to 2.x to 3.x has breaking changes in it?\nThis is a critical component of Dashing -- it is important to know what the impact will be on current users and whether this change needs to be held off for a major version release.\n. Someone already tried to do this in #237. Please close this PR as a duplicate.\n. Makes sense to me and the behaviour was added as a flag on the install command (so no breaking changes). :+1: for merging.\nI am a bit of a Docker noob, so forgive me if this is a dumb question, but... In terms of a Dockerized app, is that the standard way for configuring software?\nIE: You put the config in the container before installing and the installation doesn't clobber your config?\n. Dashing supports posting arbitrary data via HTTP POST. This is protected by an auth token, specified within your config.ru. Finally, Dashing is really just a collection of open source tools and at it's core it's really a Sinatra app.\nArmed with this knowledge, you have several options. The simplest is using an AJAX POST request:\n$.post \"/widgets/myWidget\", \"{ \\\"auth_token\\\": \\\"YOUR_AUTH_TOKEN\\\", \\\"value\\\": #{value} }\"\nThis had the distinct disadvantage of exposing the keys to your kingdom on the client side. A better approach would be to perform this post on the server side, thus hiding the auth token. You can expose this server-side post request as a Sinatra route and then post data to the route you define instead.\n. To clarify, this allows a suffix to be added to the Current Value via a data-suffix attribute on the Graph Widget.\nVery small change, seems useful, :+1: for merging.\nThat being said, this change relies on batman.js -- which Dashing will be moving away from due to it's deprecation. So if it is merged, it will be deleted when version 2 finally awakens.\n. To really solve this problem, it would require re-engineering the event service to supply data to various widget endpoints and then have the dashboard subscribe to only those endpoints.\nI don't know Batman well enough to say how difficult that would be, but it certainly would not be a small change. That being said, this sounds like an important and interesting problem to solve.\nIn the mean-time, it seems like your suggestion to gzip the event service output has merit:\n\nConcerned by high overhead of UTF-8 on the wire? An SSE connection is a streaming HTTP \nresponse, which means that it can be compressed (i.e., gziped), just as any other HTTP response \nwhile in flight! While SSE is not meant for delivery of binary data, it is nonetheless an efficient \ntransport: ensure that your server is applying gzip compression on the SSE stream.\nSource: High Performance Browser Networking\n. I've thought about this a bit more, there may be a simpler solution to this problem. Also, the solution I suggested before may actually make the problem worse because of the additional HTTP overhead associated with each request (1 request per widget vs 1 request per dashboard). This would depend on how many widgets you have per dashboard (more than 4 / dashboard and this becomes useless).\n\nFor example, the event service could optionally take a list of widgets as a parameter and supply only data for those widgets. This would impact performance however, as the connection to the SSE endpoint could only be establish once the DOM is parsed and Dashing.widgets is filled with data.\nIf this is implemented, it should be a setting that must be turned on a per-dashboard basis.\n. You can pull out the gridster instance of a widget like this:\ngridster = $(@node).parents('ul').data('gridster')\nFrom there you can resize it with the resize_widget method:\ngridster.resize_widget(1, getRandomInt(1, 4), getRandomInt(1, 4))\n. Have you tried https://gist.github.com/jwalton/6614023#supported-html-data-fields ?\nIt looks like there are a lot of colour configuration options in there.\nYou have changed the colour of the Title of the widget and the colour of the More Info caption -- neither of these are shown in the attached image. What are you trying to change the colour of specifically?\nThe text in the legend can be enlarged by adjusting this value: https://gist.github.com/jwalton/6614023#file-rickshawgraph-scss-L76\nPlease close this issue if you've already solved it.\n. Thanks, that would be great as these issues can act as a knowledge base for others :+1: \n. I just implemented this last night, I reverse engineered this example: http://code.shutterstock.com/rickshaw/examples/lines.html\nThere were two key insights:\n- There is a ton of CSS that you need to copy over\n- call new Rickshaw.Graph.HoverDetail with your @graph before the first @graph.render()\nLet me know how it goes!\n. Perhaps css fits the bill?\nli {\n    border-top: 3px solid #ccc;\n  }\n  li:first-child {\n    border-top: none;\n  }\n. Please close this issue.\n. Why do you want this? I don't think Dashing is really suited to your use case.\nIt is meant for people who like to write code.\n. Dynamic management of Dashboards is way outside the scope of Dashing.\nSounds like one of the paid Dashboard services might be better for you:\nhttps://github.com/Shopify/dashing/wiki#why-use-dashing-when-there-are-plenty-of-cloud-based-dashboards-out-there\n. Also @kaltinril's suggestion will not work unless you add some kind of persistence layer...\n. The comma delimited text file is persistence.\nAs I understand it, @martenpalsson wants to configure the dashboard inside Dashing (not through some CSV file). To do this, the changes made in the browser would have to be written back to the text file (or a database, or some other persistence layer). If they weren't, all changes made in the browser would be lost upon refresh.\nNot sure why you'd prefer to create your dashboards as CSV's instead of HAML / ERB templates... Unless the CSV file is generated by some Hipster Batch or otherwise Dynamic process...\n. Awesome, you are using a Hipster Batch :+1: \n. Please close this issue.\n. To me, the beauty of Dashing is the fact that you can define a Dashboard to be whatever you want. You aren't forced into a mould and you can create whatever crazy thing you can dream up.\nAs @cefigueiredo suggests, you can add custom routes for this. In your config.ru you can add routes:\n``` ruby\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\npost '/custom/form' do\n  puts params[:name]\nend\nrun Sinatra::Application\n```\nYou cannot really add routes like /form, as this will collide with Dashing's default dashboard route (/:dashboard).\nInside the route you can do whatever you want with the data -- which will be available in the params hash.\nI would also suggest using a database instead of a file, even if you use SQLite. You may be able to store the data in memory too, if you do not require persistence. You can set a class variable in your config.ru (@@variable) and its state will be shared across requests.\n. Please close this issue.\n. Dashing comes with a Graph widget that is built with Rickshaw; however Rickshaw doesn't support funnel charts.\nIf you need this functionality, you will have to create it yourself. However, I recommend looking at how the Graph widget was implemented for an example of how you might do it yourself. Personally, I would copy the Graph widget and hack it up until it worked (and then clean it up for contribution!).\n. With Highchart's license it doesn't really make sense for someone to create an Open-Sourced widget based on their libraries. Also, you can use Rickshaw's stacked bar graph to show the same data.\nThis issue can probably be closed.\n. This is intended for the Number widget. A status field can be added to the event data which can be used as a visual indicator of an important metric.\nIf you are annoyed by this feature, I suggest that you do not use it. The template dashboard does not implement this functionality.\nThis issue can be closed.\n. In the protected! helper method of your config.ru you could switch on params[:dashboard] to run different auth code for different dashboards... Maybe. Let me know if that works!\n. I have a cleaner solution for this, although it violates MVC so... Still kind of gross still.\nFirstly, follow this:\nhttps://github.com/Shopify/dashing/wiki/How-to:-Add-authentication\nExcept instead of calling the method protected! call it something else (maybe authenticate!)\nThen inside your .erb file(s), you can just call it at the top: <% authenticate! %>\nMaybe this is an indication that it would be nice to be able to mixin functionality to specific dashboard routes, but still have the standard dashing route execute after (or before).\n. This issue can be closed.\n. Issue can be closed.\n. This is an issue with your Ruby environment configuration (not Dashing). Are you able to install other gems?\nI recommend using RVM or rbenv to manage this configuration for you...\nhttp://cbednarski.com/articles/installing-ruby/\nAlternatively, you can hack up your Ubuntu environment until this works. Yuck...\n. Please close this issue.\n. Alternatively, you can add it as a helper as recommended.\nThis is done in your config.ru... See the example dashboard template if you've removed this section from your dashboard.\nYou can call it from your ERB files like this <%= getGitVersion %>\n. Not sure if you're aware, but /events is an SSE endpoint - it streams as long as the browser will let it.\nTry loading it up in a browser, you will see that as each job runs more data is added to the page... Eventually it might timeout - this is a limitation of the browser mainly. This issue can mostly be skirted by increasing the frequency that events are sent.\nMore info about SSE's: http://en.wikipedia.org/wiki/Server-sent_events\nOther than /events taking so long to load, what other problems are you seeing? Widgets not updating? Initial Dashboard load time is slow? etc?\nI think you might have better luck diagnosing this issue using your browser's network panel than by looking at the server logs -- just a hunch though!\n. Please close this issue.\n. Dashing requires an execjs compatible JavaScript engine:\nhttps://github.com/sstephenson/execjs\nOn Windows, that should be built in (JScript):\nhttp://msdn.microsoft.com/en-us/library/9bbdkx3k.aspx\nMaybe that is an avenue to explore... Is JScript available for ruby to use.\n. https://github.com/gsmedley/thin_service - Use this.\n...\nThe key here is you want to run a Thin-based Ruby application as a Windows service. Try googling \"ruby thin as windows service\".\n. The Dashing Client would need to be located on the same machine as the Dashing Server (otherwise the browser wouldn't be able to load the iFrame contents).\nOtherwise, this should be possible:\nhttp://stackoverflow.com/questions/11152103/displaying-local-htm-file-in-iframe\nHowever, it sounds weird. If possible, put the HTML files into your Dashing app's public folder and reference them like this: (assuming: Dashing/public/SFDC.html)\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n      <div  data-id=\"iframe\" data-url=\"/SFDC.html\"></div>\n    </li>\n. You could also look at running dashing via thin and telling it not to log anything.\nThis has the distinct disadvantage of being impossible to determine what went wrong if things go sideways.\nJust roll your logs with cron as @derwin12 suggests.\n. This is not a Dashing issue. Please close.\n. You can adjust the widgets data-sizex or data-sizey parameters in your dashboard.erb file...\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\nreplaced with:\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"4\" data-sizey=\"4\">\n. From ruby?\nsend_event( \"valuation\", { last: 0, current: 10 } )\n. http://stackoverflow.com/questions/6868507/automatically-adding-proxy-to-all-http-connections-in-ruby\nThis is not a Dashing issue... Please close.\n. This is not a Dashing issue.\nPlease close this, as per this comment.\n. You could make the number widget alternate between two different numbers (changing the title also to reflect the current mode). This could be accomplished by two separate offset Rufus jobs on the backend, though this approach may get strange with certain values:\nSCHEDULER.every '60s', :first_in => 0 do\n   # First Value\n   send_event('number',{title:'First Number', current: 2})\nend\nSCHEDULER.every '60s', :first_in => '30s' do\n   # Second Value -- Offset\n   send_event('number',{title:'Second Number', current: 1})\nend\nAnother approach for alternating values would be to use a mutex, you can see more about that on the Rufus docs: https://github.com/jmettraux/rufus-scheduler\nIf you don't want to alternate between numbers, you might have success by using a data-foreach-#{itemName}. You can read more about how to do this in the Batman docs: http://batmanjs.org/docs/api/batman.view_bindings.html#data-foreach\nIf you do take the approach of using data-foreach and find you want to show more data or start to customise in other ways, you should look into creating your own custom widgets. There are lots of great examples here: https://github.com/Shopify/dashing/wiki/Additional-Widgets\nGood luck and let me know if you have any more questions.\n. Seems to have been answered here too:\nhttp://stackoverflow.com/questions/27167440/dashing-does-not-run-on-heroku\n. Not sure if I see the use case for this, but it's a cool idea. This would need some work if it is going to be carried out.\n. How are you using the padding attribute? I think that is the correct approach to solving it.\nThis solved it for me: http://stackoverflow.com/questions/21708577/rickshaw-graph-max-y-axis-is-cutoff\n. You could send each peer to a different event ID (in my examples, \"peer-#{peer.name}\"). Then go back to using the data-foreach-peer approach, but make the ID of each element dynamic (like this: data-id=\"peer- | append peer.name\").\nYou can also loop over your configuration data when dashing starts to run the Rufus jobs in parallel, so that the widgets would update independently.\n. That is a lot of servers! I would probably create a custom widget for this...\nI would move those getJSON calls to the back end into a Rufus job (or two...) and do as @rmosolgo suggested -- using the data-foreach-#{item_name} Batman binding.\nRead more about Batman bindings here: http://batmanjs.org/docs/api/batman.view_bindings.html\nThere are many examples of it's use in the widgets folder of a Dashing app and there are lots of excellent widgets here: https://github.com/Shopify/dashing/wiki/Additional-Widgets\n. Heroku is starting your app with a config file and it is failing to load...\n2014-12-17T01:40:53.966242+00:00 heroku[web.1]: Starting process with command bundle exec thin start -R config.ru -e production -p 11400\n2014-12-17T01:40:55.580499+00:00 app[web.1]: /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:32:in `read': No such file or directory - config.ru (Errno::ENOENT)\nAny weirdness happening with your config file? (exists, permissions set, no funky characters)\n. A brand new Dashboard can be deployed to Heroku. The logs indicate that config.ru cannot be found when thin is attempting to load.\nThis is not an issue with Dashing and can be closed unless there is an outstanding request for support. Please provide more details or this issue will be closed.\n. Support requests should be directed to Stack Overflow unless there is a specific change that someone can point to be made to Dashing.\nSo far, there is no information to go on and I am unable to reproduce this behaviour.\n. You can achieve this without reaching into poor Dashing's brain like that.\nInside your application.coffee:\nDashing.on 'alert', ->\n  alert(\"Woot!\")\nTest it out in bash:\n$ curl -i -d '{\"auth_token\": \"AUTH_TOKEN\", \"event\": \"alert\"}' http://localhost:3030/dashboards/myDashboard\n. This PR adds new functionality with associated tests -- no breaking changes. :+1: for merging.\n. This question is incredibly vague... I will answer in kind: yes.\n. It has sinatra support -- everything else should be dependant on your environment configuration. So as long as Dashing runs normally for you, it should run from Ruby Mine.\nhttp://blog.jetbrains.com/ruby/2012/06/rubymine-nire-eap-welcome-sinatra/\n. It appears you are on Linux, add therubyracer to your gemfile:\n```\nLinux only Gems\nif RUBY_PLATFORM =~ /x86_64-linux/\n    gem 'therubyracer'\nend\n```\n. You can deploy Dashing to any system with Ruby 1.9+... So yes, it can be deployed to AWS.\nHere is a rubygem for handling oci8:\nhttps://github.com/kubo/ruby-oci8\nDashing is a general library that allows you to display data from any system that ruby can get its hands on. The backend is just a set of jobs that run at intervals and execute ruby code. The front-end is an awesome widget-based system built on top of batman.js.\n. The gem you are using requires the environment to provide some of it's functionality through a dependency. Heroku doesn't have the proper Oracle client libraries installed by default. You would need to use a custom buildpack for this.\nTry something like this:\nhttps://github.com/nasali/oracle-oci8-heroku-buildpack\n. @Mitsumi is the correct value shown when you refresh the page, as it is for @ykyuen ?\n. Perhaps the browsers JavaScript engine is becoming thrashed somehow? That\nshouldn't happen right away under normal circumstances.\nHow long before this starts happening?\n. ~~Perhaps the browsers JavaScript engine is becoming thrashed somehow? That\nshouldn't happen right away under normal circumstances.~~  -- If the console is still outputting stuff, the JS engine cannot be thrashed.\nTry setting a breakpoint inside the number widget's onData and step through... Perhaps it is being updated momentarily and then being overwritten?\nIs this a stock number widget, or does it have modifications?\n. If you can create a publicly available example of this happening I will take a crack at debugging it.\nOtherwise I can only recommend to workaround this issue by sending a refresh every now and then.\nPlease update this issue with a URL to an example of this or close this issue.\n. Please close this issue.\n. Care to elaborate on this issue?\nI think this should be closed.\n. onData: (value) ->\n    meter = $(@node).find(\".meter\")\n    if value >= 85\n        color = '#fff'\n    else\n        color = 'color' # what color do you want to use?\n    end\n    meter.trigger('configure',\n        'fgColor': color\n    )\n. What are the options under evaluation? I am curious about where the project may be headed.\n. Very cool!\n. http://hamlet.coffee/ would get my vote if we're going esoteric...\n. Not sure why React was chosen, but if it was for performance:\nhttp://blog.500tech.com/is-reactjs-fast/\nTo be clear, there are tons of other great reasons to choose React.\n. I love how easy it is to pick up Dashing and start cranking out dashboards with basic knowledge of HTML and ruby. Diving deeper and creating widgets is also quite a pleasant experience.\nIt does seem eerily similar: http://vuejs.org/guide/#A_Quick_Example\nIt has built in support for filtering, views/models, etc.\nThere is a react fork going already: https://github.com/florianz/dashing\nIt hasn't seen much action lately and I'm not sure how I feel about it in general. It doesn't feel like the original Dashing, but it would make it much easier to programmatically generate dashboards. Not sure how I feel about doing that either...\nIt does seem like VueJS would give us a more Dashing-like experience -- if I compare what I see in the existing React fork to the VueJS example above.\n. Is it a Heroku free instance?\nThey go to sleep after 1 hour of inactivity:\nhttps://devcenter.heroku.com/articles/dynos#dyno-sleeping\nYou may be able to skirt this issue for a while with:\nhttps://coderwall.com/p/u0x3nw/avoid-heroku-idling-with-new-relic-pings\nHope this helps!\n. I'm sorry, I should have read the details of your inquiry more closely the first time. The events service streams data to the dashboard via server-sent events, so you are seeing H12 because Heroku is toasting the request.\nhttps://devcenter.heroku.com/articles/request-timeout#long-polling-and-streaming-responses\nYou are probably already using the Cedar stack, as it is the default buildpack. Use it instead if you specified something else.\nOtherwise, I think the issue may actually be that you aren't sending data often enough:\n\nCedar supports HTTP 1.1 features such as long-polling and streaming responses. An application has an initial 30 second window to respond with a single byte back to the client. However, each byte transmitted thereafter (either received from the client or sent by your application) resets a rolling 55 second window. If no data is sent during the 55 second window, the connection will be terminated.\n\nAdd a heartbeat job like this and let me know if it resolves the H12 issues:\nSCHEDULER.every '50s', :first_in => 0 do\n    send_event('heartbeat', { pulse: true })\nend\n. Try asking Heroku support.\n. Not sure if the Timeout issue has been solved -- but maybe this could be solved by trying to recover gracefully when there is a timeout. Your data should be written to a history.yml file when Dashing is shut down gracefully, which on Heroku is deleted because of its Ephemeral Filesystem.\nIf PR #330 were reviewed and merged, then data could be stored Redis, allowing it to persist...\n. @ryanprater Thanks a ton for your insights into this issue! Very helpful information and it sounds like the best theory yet that explains the symptoms described in this issue.\nGood luck resolving this with Heroku! Please create a new issue if you think that Dashing could be improved to play more nicely with Heroku, but it sounds like any old Ruby (2.1+) app would suffer the same problems.\n. Does this issue occur with a brand new dash board?\ntry this:\ndashing new test\ncd test\ndashing start\nHow did you install your gems? You should be using Bundler.\nSeems like something probably went wrong with your ruby / gem installation or that your dashboard has become horribly corrupt since it was created.\n. +1 to this... I'd also recommend adding history.yml and tmp/\nThoughts?\n. I do this on every Dashing project -- probably a sensible default. :+1: for merging.\n. I just created a brand new dashboard and was able to push it to Heroku no problem. You must have changed something either in your Gemfile or your Gemfile.lock.\nPlease compare those files with a fresh instance and see if that helps you track down the issue.\n. The #weekly div doesn't have a .x_tick class, so your CSS rule is wrong.\nI think you probably want #weekly .xtick.\n. Sounds good, that is a more general solution.\nPlease close this issue.\n. I believe the issue is that you are trying to define a route that is already matched by Dashing's /:dashboard route... Although this seems inconsistent with what I see in app.rb -- I'm not a Sinatra expert so I can't say for sure.\nTry doing something like (it worked for me):\n``` ruby\npost '/temperature/details' do\n   # find temp\n   @temperature = temp\n   erb :details\nend\ninside ERB:\n<%= @temperature %>\n```\nNote that you'll also be able to go to /details unless you guard against this in your ERB by analysing the path or something gross like that...\nI found this out by exploring the Dashing source code.\n. It just occurred to me that probably a better solution to this is to create a helper method that calculates the temperature.\nSomething like this (untested):\n``` ruby\n  #config.ru\n  helpers do\n    # ...\n    def getTemperatureDetails(item)\n      # get temperature details for item\n      return temperature\n    end\n  end\n#details.erb\n  <%= getTemperatureDetails(params[:item]) %>\n```\n. This version change would be a breaking change, as outlined here: https://github.com/FortAwesome/Font-Awesome/wiki/Upgrading-from-3.2.1-to-4\nNot that this would be an impossible task, but it certainly makes things a wee bit trickier.\n. You can make the tiles blink by applying a status-warning or status-danger CSS class to them when appropriate. The number widget also takes a status parameter when sending events, in addition to the current parameter.\nSo you can make a number widget blink out of the box with something like:\nruby\nsend_event('my-number-widget',{current: 150, status: 'danger'})\nYou can look at number.coffee in the onData handler to see how you could replicate this functionality for other widgets. Maybe a Dashing 2.0 change could be to do this on the base widget -- as any widget could benefit from this functionality.\n. I'm a bit busy at the moment, but I can take a look at updating this later. Maybe next week.\nWhether or not the PR is accepted... I dunno. It would be a breaking change for anyone using Dashing, not just for the gem itself. Seems like a Dashing 2.0 thing.\n. No idea on ETA, I think @pushmatrix has big ideas for Dashing 2.0 :+1: \nI can certainly fork Dashing and make a PR for the update, I'm not sure if the maintainer will accept it until 2.0. I'm just an enthusiastic user. :neckbeard:\nI'm happy to do the update when I've got time, I bet it's a 1-2 hour job.\n. I use thin. I start dashing like this, with an Apache proxy-pass on a vhost:\nbash\n$BUNDLE_CMD exec thin start -p 3030 -d -R \"$DASHING_DIR/$RACK_FILE\" -P /var/run/dashing/web_console.pid\nWe have a PR waiting to be merged that swaps out Thin for Puma, this would enable us to run Dashing on JRuby. This would also enable people to bring Java data (like JMX) into the mix really easily, as well as improving overall performance for most users. I'm hoping it gets merged.\nI'm not sure if there are other undesirable impacts of switching to Puma, I'm glad to hear that it's working for you. Learning to code is a lifelong process! Everyone is always learning.\n. That's excellent, I wasn't sure if the update changed had breaking styling changes. Sounds like it's a pretty quick job. Which also gives me hope for getting a PR merged before 2.0, as User's customised widgets and dashboards would also be easy to change. Thanks for the info!\nIt's up to you, but I'd support a PR to resolve this issue.\n. As that is an unrelated change, that would be in a different PR. #427 has been started for that -- though the intended goal there is to allow Dashing to run in JRuby out of the box.\n. Any updates on this issue?\n. Are there any breaking changes in the upgrade of rickshaw? Does this commit integrate with #542?\n. Hope this gets merged :+1: \n. This would have breaking changes -- but the migration path is likely a simple Find All & Replace.\n. This hasn't been merged.\nIf you install the dashing gem from that fork, you should be up and rolling with the latest font-awesome.\nIf you had any custom widgets, they would need to be updated to use the new fa- prefixes. This is the main concern with merging this PR, is that 3rd party widgets would need to be updated.\nHowever, we will eventually need to do this...\n. You might have better luck with a Rails based framework, as Figaro is designed to work with Rails.\nTry: https://github.com/gottfrois/dashing-rails\n. Dashing is really just a Sinatra app under the hood.\nHere is the route that defines how the dashboards are accessed: https://github.com/Shopify/dashing/blob/f4b121e8dead69e02223ee9d50e431dbc7f5b3c5/lib/dashing/app.rb#L78-L86\nIn your config.ru, you can add custom routes according to the Sinatra documentation: http://www.sinatrarb.com/intro.html#Routes\n. You can probably just use wildcard routes like get '/dashboards/*/:dashboard' and then use :dashboard to render the correct partial.\n. Any update on this? Can this be closed?\n. It's wonderful to see a company giving back to OpenSource -- cheers!\nAfter sifting through your message, it seems like you have these issues:\n1. jqPlot expects each graph element to have a unique ID\n2. JavaScript dependency load order\nFor # 1:\nAn understanding of how jQuery and jQuery plugins work would be beneficial, specifically this: http://stackoverflow.com/questions/8884463/jqplot-target-that-doesnt-have-a-static-id\nFor # 2:\nDashing uses Sprockets to manage client-side dependencies (like CSS and JS). If you open application.coffee you'll see:\n``` coffeescript\n= require_directory .\n= require_tree ../../widgets\n```\nYou need to add your dependencies above the require_directory line. Something like:\n``` coffeescript\n= require jqueryPlugin1\n= require jqueryPlugin2\n= require_directory .\n= require_tree ../../widgets\n```\n. For # 1:\nI apologise if I assumed your knowledge of jQuery was limited. As you know, proper jQuery plugins should be available on $.fn.<plugin>. This allows them to apply their functionality to a jQuery selection. Load up your Dashboard, in your browser console run console.log($.fn.jqplot). What do you get back? You should see a function.\nIf you get undefined, you may be using an old version, as suggested in the the accepted answer for the SO I linked.\nYou can get the latest code from here:\nhttps://bitbucket.org/cleonello/jqplot/\nBrowsing this source code seems to indicate that the bug in jqPlot that you're referring to has been fixed.\n. Can you paste some code samples or put this up in a public repo? I think I'm just misunderstanding what you're asking for.\n. haha, sounds good. Do you have multiple graph's per Dashing widget? I think you'll need to keep a handle on each of the Graph instances as a class variable of the widget so that you can update them in the onData like this:\nhttp://stackoverflow.com/questions/10459631/jqplot-how-to-live-update-a-chart\n. I'm just taking a quick look at it on my lunch break, but it looks like you're doing everything in a sane way.\nI will make some time this evening to dig deeper into this. What is the undesired behaviour that you're seeing with this code? Is it giving errors or just not doing what you expect?\n. Aha! It was such a small thing, I overlooked it several times before finding the main mistake.\ndrawGraph was not defined as a class method, meaning that it didn't have access to the other instance properties like @node.\nSo this:\n``` coffeescript\ndrawGraph = (val, buckets, bucketColors, reverse, sLabel, pos) ->  \n    bucketColors.reverse() if reverse\nreturn $.jqplot(\"jqmeter\", [[val]],\ngrid: {background: 'transparent'}\nseriesDefaults:\n  renderer: $.jqplot.MeterGaugeRenderer\n  rendererOptions:\n    label: sLabel\n    labelPosition: pos\n    showTickLabels: true\n    intervals: buckets\n    intervalColors: bucketColors\n)\n\n```\nShould be:\n``` coffeescript\n  drawGraph: (val, buckets, bucketColors, reverse, sLabel, pos) ->\n    bucketColors.reverse() if reverse\nblah = $(@node).find('.jqmeter').jqplot([[val]],\ngrid: {background: 'transparent'}\nseriesDefaults:\n  renderer: $.jqplot.MeterGaugeRenderer\n  rendererOptions:\n    label: sLabel\n    labelPosition: pos\n    showTickLabels: true\n    intervals: buckets\n    intervalColors: bucketColors\n)\n\n```\nI've modified div#jqmeter to be div.jqmeter in the HTML and I am using jQuery.fn.find after selecting @node to ensure that the data update is namespaced to the correct DOM element (IE: the widget). I'm also using jqPlot as a selector method, as indicated in the StackOverflow I linked earlier. \nNote that by making drawGraph a class method, you'll have to reference it like this: @drawGraph.\nHope this helps!\n. I'm not sure I'm fulling understanding your request, but I think that this is more of System Administration issue than a Dashing issue...\nI would achieve this by enforcing system permissions on the folder.\n. Oh, I got you. I don't know if it violates the license...\nThere are two approaches I would take to this:\n1) Obfuscation - Make the auth code hard to remove / alter\n2) Container / Appliance - Put the code into a VM or Container that has locked down permissions and 'just works' in their environment\nDashing certainly doesn't provide any functionality for licensing or restricting the number of running copies. You'll have to come up with some magic.\n. Gridster attaches the initialised Gridster object as a data property to the element.\nhttp://gridster.net/#usage - You can retrieve the data values like this once the grid has been initialised:\ncoffeescript\ngridster = $(\".gridster ul:first\").data('gridster');\n. +1\n. Maybe squash your commits? It is not clear what must be done to please the merging overlords... :wink:\n. I do not believe this to be a breaking change... Anyone feel otherwise?\n. What you could do is send all the data to the Widget on the Front-End and have the Widget display only the filtered data. This would be quite simple to write, though if your dataset is very large this may not be feasible. Dashboards should ideally be a presentation layer only -- most of the logic should be in the widgets and dashboards. The jobs should only be doing enough to securely grab data from your reporting services.\nWith that being said, you could use the HTTP API to allow users to \"collaboratively filter\" the data. This means that if one person filters, all people see the same filtered data. If another person changes the filter, the first person's filter will be changed. Remember that Dashing is intended to display the same data to all consumers of the page -- not uniquely filtered data to each consumer. If that works for you, you can send POST requests like this:\ncoffeescript\nfilterStart = $(@node).find('#filterStart').val()\nfilterEnd = $(@node).find('#filterEnd').val()\n$.post \"/widgets/report\", \"{ \\\"auth_token\\\": \\\"TOKEN_FROM_CONFIGRU\\\", \\\"filterStart\\\": #{filterStart}, \\\"filterEnd\\\": #{filterEnd} }\"\nIf neither of these would work for you, you'd have to override Dashing.Widget to not use an SSE EventSource and instead only request & render new data when the filters were set by the user. You'd also have to add Sinatra routes in your config.ru to handle the submission and return the filtered data.\nStart reading the source here to go down this path: https://github.com/Shopify/dashing/blob/v1.3.4/javascripts/dashing.coffee#L34-L63\n. @yogeshrathore15 Why are you pasting that here?\n. Dashing 2.0 is probably going to use React.\nThere are some interesting forks to this end: @FlorianZ - 2dce07309581b04e8f1070517f835a4aa2b7f01c\n. Any updates on this?\nDashing works fine over an unimpeded network connection.\nMy bet is that the browser is failing to render it. Can you see the browser console on either device?\n@nikilster - What browser are you using on the Pi?\n@mattrayner - What browser are you using on your Pi's?\n. Any updates on this? :ski: \n. Dashing is built on Sinatra, sessions are disabled by default: http://www.sinatrarb.com/faq.html#sessions.\nTo enable them, you need to add this to your config.ru:\nruby\nconfigure do\n  # ...\n  use Rack::Session::Pool, :expire_after => 2592000\n  # ...\nend\nYou can access them from a Dashboard view template like this:\nerb\n<%= session['key'] %>\nThe session can only be accessed from a Sinatra route of some kind. So, accessing it from a Job file is different depending on your intent. For example, if I wanted to set a static variable in the session before every request I could do this inside a .rb file in my jobs directory:\n``` ruby\nrequire 'sinatra'\nbefore do\n    session['key'] = \"Hello World!\"\nend\n```\nHope that helps! Please let me know if this solves your issue.\n. Any updates on this?\n. Thanks for asking your question on SO instead. I will endeavour to answer it there. I intend to write up Issue Submission Guidelines that will require support requests to be submitted there.\nCan you please close this issue though? I promise I will connect with you on StackOverflow. :grin:\n. I am unable to reproduce this issue with stock Dashing. Do you have any other customisations? Can you provide any further details?\n. Are you sending the current and last values in your Rufus job?\nFrom the sample project:\n``` ruby\ncurrent_valuation = 0\nSCHEDULER.every '2s' do\n  last_valuation = current_valuation\n  send_event('valuation', { current: current_valuation, last: last_valuation })\nend\n```\nhtml\n<div data-id=\"valuation\" data-view=\"Number\" data-title=\"Current Valuation\" data-moreinfo=\"In billions\" data-prefix=\"$\"></div>\n. Glad to hear you got it sorted. Hopefully once #514 is merged, people won't have this kind of issue again.\n. :+1: - Looking at the D3.js changelog, there are a lot of good fixes, additions, and performance improvements and there does not appear to be any breaking changes.\n. Thanks for updating with a solution, can you please close this issue?\n. Try looking at how the Hotness widget does it:\nhttps://gist.github.com/rowanu/6246149#file-hotness-coffee-L8-L23\n. Have you invoked Bundler to install the bundle from Gemfile?\nIf not, make sure you have Bundler installed: gem install bundler\nThen cd to your dashing directory and run: bundle install\n. You need to actually run bundler to install the bundle though...\nDid you do this:\n\nThen cd to your dashing directory and run: bundle install\n. Can you please paste the output from this:\ncd /path/to/dashingProject && bundle --verbose\n. Great, it looks like your bundle is installed... You should be able to skirt any issues with the environment by running dashing from the bundle:\nbundle exec dashing start\n\nLet me know if that works...\n. Try loading /events in your browser and watch the event stream for a bit. Are the JSON values coming through as you expect?\n. Do you have other jobs that are sending data successfully?\n. What if you create a new project? Does that work?\n. If you are able to run the demo project:\nAre you running Dashing with dashing start? If so, do you have any customisation in your config.ru?\nYou can try deleting your history.yml and ensuring the directory is writable by the user that is executing Dashing.\nAlternatively, create a new project and copy your jobs, dashboards and any custom widgets into the new directory.\n. You should be able to use unicorn. Add it to your Gemfile and reinstall your bundle with bundle install and then run unicorn from the bundle with bundle exec unicorn.\n. Dashing is Sinatra under the hood. You can set up Sinatra routes in your config.ru, as I outlined here: #516.\nI should make up a wiki page with this info, it is a commonly asked question.\n. What widget are you using? Is the data coming in to the browser via SSE correctly?\n. It depends.\n. At the top of the MySQL example, they require 'mysql2'. You need to require 'pg' instead, as per:\nhttps://bitbucket.org/ged/ruby-pg/wiki/Home\nThis will require installing the pg gem (IE: gem install pg or add to your bundle).\nHere is the MySQL example rewritten for Postgres and completely untested:\n``` ruby\nrequire 'pg'\nSCHEDULER.every '15m', :first_in => 0 do |job|\n# Postgres connection\n  db = PG.connect(:hostaddr => \"192.168.1.1\", :user => \"dashing\", :password => \"SECRET\", :port => 3306, :dbname => \"users\" )\n# SQL query - simplified because lazy\n  sql = \"SELECT * FROM users\"\n# Execute the query\n  db.exec(sql) do |results|\n# Sending to List widget, so map to :label and :value\nacctitems = results.map do |row|\n  row = {\n    :label => row['account'],\n    :value => row['count']\n  }\nend\n\n# Update the List widget\nsend_event('account_count', { items: acctitems } )\n\nend\nend\n```\n. I wonder how often @get receives callouts from CoffeeScript code that isn't wrapped in pre-formatted text blocks...\nThis is an awesome idea for a widget -- it's like the Hotness Widget but with relative values instead of absolutes. I suggest taking a look at this code: https://gist.github.com/rowanu/6246149 ... Specifically, finding a way to set warm and cold dynamically based on previous values.\nPlease post back on this thread with any progress you make, I think I might take a crack at it as well.\n. I have a widget which submits data via HTTP POST, triggered by JavaScript in the user's browser -- it works fine for me.\nHow are you sending the request and what kind of response are you expecting back?\nThis is the response header that my jQuery.post happily accepts, resolving the Deferred:\nHTTP/1.1 204 No Content\nDate: Wed, 20 May 2015 00:43:35 GMT\nServer: thin\nX-Content-Type-Options: nosniff\nContent-Length: 0\nConnection: close\nContent-Type: text/plain; charset=UTF-8\n. If this application thinks that a 204 means failure, it is not interpreting HTTP correctly. Please submit a support request to them, this is not an issue with Dashing.\nThank you and good luck with your issue.\n. If #div-id in that context refers to the div you want to scroll, the code you have written should work.\nHere is a simple CodePen which demonstrates the behaviour in simplified form:\nhttp://codepen.io/tylermauthe/pen/xGEEXE\nThis isn't specifically a problem with Dashing, please close this issue and ask the question on StackOverflow or similar. This is almost certainly caused by your CSS rules.\n. Dashing is listed in the most recent edition of ThoughtWorks' Tech Radar as being a technology in the \"Trial\" stage. It's wildly popular and extremely hackable, but there are many more requests for support than there are people to support it...\nThat being said, I won't let this project die if I can help it! I've gone on a bit of a triage spree this morning, trying to comment on whether I think PRs can be merged and asking for more info where required.\n@pushmatrix -- to clarify, when I say a PR could be merged I mean that the features do not have breaking changes and they seem desirable to me. I haven't actually done a merge of it myself and I am assuming the original authors did some level of testing.\nIt will take time to test each merge before accepting them, please bear with us.\n. In short, there isn't a pre-defined order. I suggest trying to implement your widget in such a way that it doesn't matter what order the events occur. For example, the Graph widget will only process the onData event if the @graph is initialised: https://github.com/Shopify/dashing/blob/439182f3b91c6c3c0cb5b5c8f5bee2562cfff2d4/templates/project/widgets/graph/graph.coffee#L35.\nIf this is unreasonable or impossible, I suggest using a jQuery.Deferred to synchronise the asynchronous events.\nSomething like (untested):\ncoffeescript\n...\nlibraryLoading: $.Deferred()\nready:\n  @loadUpMyLibs();\n  // call this when all init completed (might need to go in callback if lib init is async.)\n  @libraryLoading.resolve();\nonData:\n  @deferred.done(@doMyStuff);\ndoMyStuff:\n  // some stuff\n...\nTo elaborate a bit on why there is no order...\nonData is fired when there is a message received from the SSE EventSource: https://github.com/Shopify/dashing/blob/439182f3b91c6c3c0cb5b5c8f5bee2562cfff2d4/javascripts/dashing.coffee#L107-L115\nready is fired when the Batman.js view is 'ready': https://github.com/Shopify/dashing/blob/439182f3b91c6c3c0cb5b5c8f5bee2562cfff2d4/javascripts/dashing.coffee#L55-L56\nA Batman.js view is considered ready when \"the view's bindings have been initialized. The view may or may not be in the DOM.\" (http://batmanjs.org/docs/api/batman.view_lifecycle.html#ready)\n. Yeah, I had initially called it @deferred but decided @libraryLoading was a better name. Glad you were able to resolve your issue and thanks for closing this.\n. In your job file .rb, don't send the last: parameter:\nruby\nsend_event('valuation', { current: current_valuation })\n. Okay, I've incorporated all the feedback (I think) and I've squashed my commits.\nShould we let this stew for a day or two before merging the PR or just go for it?\n. Yeah, I like the way squash commits look because it shows the original history beneath the squash message -- but still shows up as one commit. Nice for fixing up PRs. I should have customised the squash message to be a summary of the squashed commits :+1:.\nI probably didn't even need to squash these... But squashing commits is so much fun! I use SVN on a day-to-day basis so I like to git it up as much as I can when I do.\n. It works fine for me when I freshly install Dashing on my Mac.\nPlease direct support requests to the Stack Overflow tag.\n. I answered this without being sure in #415 - this has prompted me to do some research. You can't open more because of browser limitations on simultaneous connections per hostname. Each Dashboard uses one persistent EventSource connection.\nwww.browserscope.org/?category=network\n. We set the history file on line 32 of app.rb:\nhttps://github.com/Shopify/dashing/blob/937fcce2dcca8010dbe8e9e26df954cb1330c1e0/lib/dashing/app.rb#L32\nNot sure if I would consider this a bug, but it would be quite easy to fix.\nShould be a sensible addition as long as it is added as an optional configuration parameter.\n. Duplicate of #498.\nmustache.js is not an adequate substitute for batman.\n. Duplicate of #592 ... :trollface: \n. Feel free to submit that fork as a pull request. Based on the way it is used in Dashing core, I don't upgrading it being an issue.\n. Thanks for creating this. No breaking changes that I can see.\nThis should be merged.\n. Not that I am aware of.\nIn order to be fully customizable, the backend is always written in (ruby) code. This is core to the philosophy of Dashing. It could certainly be a gem to extend Dashing, that'd be cool...\nThere are seceral cloud based alternatives with pre-baked integrations and nice UI to simplify things.\n. Please close this issue. Support requests like this should be directed to Stack Overflow from now on.\n. The JSON API could be improved in many ways, but I believe this would be better done through a Gem to extend dashing. 80% of Dashing use cases are satisfied by the current API.\nFor yourself, I would define a custom route in config.ru:\nruby\npost '/collectd/:id' do\n  # do something to make event data play nice with Dashing\n  normalized_event_data = normalize_event_data(request.body.read)\n  send_event(params['id'], normalized_event_data)\nend\n. If your OS doesn't have a JS Script Host then you may need to install one. Windows and OSX both have em, Linux often does not.\nThis is a fairly common source of trouble for newcomers to Dashing. If we included therubyracer in the default Gemfile for the template project, it would eliminate this problem -- but we wouldn't always be using your OS's native JS host. We would instead use the native V8 engine bundled with the gem.\n. Please direct support requests to Stack Overflow: https://stackoverflow.com/questions/tagged/dashing\n. This doesn't feel like it should be part of Dashing core, I'm not sure though. Chrome already supports this by entering \"Presentation Mode\" (under the View menu on OSX).\nI would suggest to implement this as a Widget instead. The widget wouldn't take up any space, but when added to a dashboard it would simply enter fullscreen mode when the page loads (no need to hit F).\n. I think what @pushmatrix is getting at is that Dashing is often run without a keyboard / mouse. So if you require user interaction, I don't think this fits into Dashing core.\nI went ahead and made the widget:\nhttps://gist.github.com/tylermauthe/75e70a7bc4ae7c237453\nBam! Feel free to leave feedback for the widget on that Gist.\n. Please direct support requests to Stack Overflow:\nhttps://stackoverflow.com/questions/tagged/dashing\n. People are supposed to add their widgets to this list:\nhttps://github.com/Shopify/dashing/wiki/Additional-Widgets\nI don't see one in the list. Feel free to create one.\n. Thanks for that link, I think I'll use that as my init script :+1: \n. Please direct support requests to Stack Overflow.\n. Please direct support requests to Stack Overflow.\n. @pushmatrix - I believe that @nautilus28 wanted to use WebSockets in a job (on the server side). Dashing doesn't specifically support this, but you could easily write a job to pull data from a WebSocket and send it to a dashboard using something like websocket-ruby.\nThat being said, this is still a support request and it will get better assistance on Stack Overflow.\n. Dashing isn't designed very responsively, as the project was created to be run on TVs of a specific size.\nI guess you could throw a CSS zoom on the body to resize it.\nI think making Dashing resize more automagically via Responsive Design would be a cool feature though. Would that be something you'd be interested in?\n@pushmatrix -- What do you think about responsifying Dashing?\n. This is hard because you are not doing things the way Dashing intends you to.\nDashing jobs are supposed to PULL data into the widgets. The API is more for fun or the odd use case here and there -- it certainly should not be the main way that you pass data to widgets. If you are unable to query your test framework for data, then store it somewhere and poll that thing in your jobs. MySQL, redis, MongoDB or any other Data-storage system would work just fine.\nAlso, please close this issue and direct all future Support Requests to StackOverflow, as defined in the Contribution Guidelines. When you create an issue or pull-request, it is shown in a big yellow box above where you type the title.\n. Please direct support requests to Stack Overflow: stackoverflow.com/questions/tagged/dashing\n. Forcing a refresh, in my opinion, is a hack.\n. Well, I'm not sure that Dashing is really well suited for Dynamic Dashboards. Not without a lot of work.\nHowever, a component itself could be dynamic. This can be achieved by the component JS manipulating the DOM to create and remove tiles which represent the data.\nYou have only one component, but it dynamically generates tiles for each data point.\nI've been meaning to explore the possibility of creating a Meta-Component which comprehends lists of data-points compatible with other widgets. This would allow you to nest other components inside of the container and it would marshal the data automagically to update/create/delete sub-components. This should be possible, though it might not be as nice to use as I'm imagining.\n. I dunno, try asking on Stack Overflow.\n. Looks like a bug, I've committed a fix.\n. Sorry, this is not a bug. I jumped the gun and then cowboyed a pull request.\nYou should set some CSS on your widget to style it. Add a selector to the li tag around your widget and do something like this:\ncss\n.server-widget, .server-widget * {\n  color: white;\n  background-color: black !important;\n}\n. The data attribute is being set on the input element inside the widget, based on the widget's CSS colours. It is used by the jQuery Knob plugin to set the meter's colours.\nPlease close this issue if the solution works for you.\n. This is not a bug.\n. @pushmatrix - We should discuss this issue, something like React would probably minimise this kind of DOM-thrashing.\nEven if Batman doesn't have a memory leak, it definitely doesn't have anything like a Virtual DOM to minimise thrashing.\n@blaffoy - You can't really do that with the DOM, some JavaScript libraries (like React) get around this by having a Virtual DOM which is much faster and then only rendering what actually changed. Batman.js is likely re-rendering everything.\n. @agassner - We're investigating memory leaks in the client side.\n@pushmatrix - Maybe we should update Rufus to the latest? (#237)\n. - [ ] Add therubyracer gem in a sensible fashion to enable JS engine portability on Linux\n. Doing this helped me out, I was hitting memory caps on a Heroku free dyno: https://github.com/Shopify/dashing/wiki/How-To:-Prevent-a-job-from-overlapping-with-itself\nBased on some anecdotal testing of my own, I've become convinced that the memory leak I was experiencing was related to my jobs. If you're doing something like creating an array outside your job and filling it indefinitely during your job, you're going to have problems eventually. However, I couldn't find anything obvious like that -- though it may be that a library I was using does something like that.\n. Also: Sorry about the delays on Puma everyone, life happens. I took the work done in #427 and updated to the latest release here: https://github.com/tylermauthe/dashing/tree/puma_server\nI will endeavour to clean up the outstanding isues (outlined in #427) by the end of Feb.\n. Yeah, sorry about that. We've discussed adding a gem that would enable portability without needing to install a separate JS engine.\n@pushmatrix - This is something else for the todo list, adding therubyracer gem for JavaScript portability on Linux.\n. +1, this is an important issue\nBlocker for next release IMHO.\n. lol - no worries!\nGlad we got that sorted out, for a second I thought we might have to rewrite the thing in Perl 6 to resolve the issue!\n. Would you be able to put together a PR with your fixes?\nIt'd be much appreciated!\n. Awesome! Someone took a shot at this in #427 and I was going to find time to clean that up so it could be merged... but if you've got it going here that's great!\nI don't know that we want to start running the tests with JRuby though, I think the most common use case will still be to run dashing as a Ruby app. My understanding was that switching to Puma will allow us to run in a JVM as well as in a normal Ruby context -- is that correct?\n. At a glance, this looks great. I'll give it a more thorough look at lunch today and let you know if I find any issues. Also, any chance you've tried this on Windows?\nThis is amazing! I've been putting off doing this for ages, thanks so much!\n. Okay, I took a quick peak at this using the generated sample Dashing project -- it looks great. Exactly the behaviour I was hoping for. I thought it might be possible to specify the web server in the config.ru, but this is great!\nI'd like to do some testing to see what happens when you try to start Dashing as a daemon on Windows -- I suspect it fails because Windows doesn't implement fork(). I'd also like to make sure the changeset plays nicely with existing dashboards -- though I don't see how moving to Puma would affect them.\nI should be able to complete the rest of the testing tonight, so unless @pushmatrix finds any issues, we should be able to merge this sucker within the week. Thanks again!! :+1: \n. Yeah, I think the lack of Windows support for that is okay in this case. I believe that Thin didn't support it either:\nhttps://github.com/macournoyer/thin/blob/master/lib/thin/daemonizing.rb#L40\nWindows does not have the concept of a daemon in this sense, so it's okay that the feature doesn't work. It looks like Puma handles this gracefully as well:\nhttps://github.com/puma/puma/blob/33e0fa9999de17e85ed7e064d5f8ede8dc009014/lib/puma/launcher.rb#L73\nI tried this on Heroku and it is working fine so far, though I can't tell if it's actually using Puma -- I don't have a Procfile so I think it's just reading my config.ru and just plugging my code into whatever server is best for their dynos... I may try overriding this behaviour and see what happens.\nI was also able to try this locally with two dashboard applications, they both worked well with dashing start and dashing start -d. However, I was a little sad that the port number changed to 9292. I can live with this.\nThe only issue I've found is that the EventSource is producing constant errors and is essentially being cut off directly after the SSE call returns the first datapoint. This seems to be a problem with Puma itself:\nhttps://github.com/sinatra/sinatra/issues/1035\nThe issue was identified a long time ago in Puma and was essentially closed as \"won't fix\":\nhttps://github.com/puma/puma/issues/3\nSadly, I think that this may require changes to Sinatra to resolve the issue properly. However, I did find an interesting article wherein Aaron Patterson describes how he created a Server Sent Event class for use in Puma:\nhttp://tenderlovemaking.com/2012/07/30/is-it-live.html\nIt might be possible to use this technique to make it work for Dashing, since I am doubtful that Sinatra can be made to support this. The interface of the @io member in the SSE class would need to be adapted for Sinatra's Stream class. Alternatively, we could swap the EventSource for something like SockJS and just do xhr-streaming / long-polling -- not really ideal but it's an option.\n. This is a problem for lots of people, not just us! I've pinged the Sinatra team to see if they're cool with adding in a Puma adapter: https://github.com/sinatra/sinatra/issues/1035#issuecomment-185582945\n. Hey, no worries at all on the SSE stuff -- I am so thankful for your assistance.\nWe can build in our own adapter until Sinatra fixes their Stream class. It could act as a proof of concept for the fix in Sinatra as well, as the adapter would essentially be a re-written copy of their Stream class which has support for EventMachine. This will require the creation of an adapter class which simply blocks the thread for the lifetime of the request. Puma's threading model should handle this gracefully, as proven by the Rails 4 implementation of SSE -- which doesn't rely on EventMachine since the switch to Puma.\nI'll see what I can whip up and try to submit a PR to somewhere. Thanks again for this work! :beers: \n. Okay, I was able to get this working without changes to Sinatra -- making use of the Stream class already provided in sinatra-contrib.\nI'll submit a PR to your PR as soon as I get the test working with the new connection style.\n. I am not sure how I feel about the fact that we now create a queue of events to send to each connection, this increases the memory requirements by at least 2 * connections * total size of history. To be fair, though, this should really only be a couple megabytes.\nAlso, when a connection is dropped we simply let this queue grow to 2 x the length of history and then remove it. I couldn't figure out how to actually respond to the disconnect event :-1:. Again, there's waste and also a chance that poorly performing connections will lose data. I would argue that naturally throttling poor connections is a good idea anyway and that the waste is kept small by the max queue size.\nIn any case, this is the best I've come up with. If it performs well, I am inclined to keep it. If anyone has improvements, especially in the above two areas, I greatly appreciate any and all feedback!\nLet's let this change stew for a while so we can test it thoroughly.\n. As I feared, my dashboard running on an old-school Heroku-free instance is completely unstable with my latest changeset. It was working fine with your changes @qbrossard, though the SSE was failing behind the scenes. It should be noted that the dashboard worked fine, but the browser JS console was strewn with errors and SSE reconnection attempts.\nI see this in the logs:\n2016-02-23T04:08:41.857508+00:00 heroku[web.1]: Process running mem=561M(109.6%)\n2016-02-23T04:08:41.857697+00:00 heroku[web.1]: Error R14 (Memory quota exceeded)\nI haven't tested this theory, but my guess is that the need to keep track of events on a per-connection basis combined with the ad-hoc mechanism for removing dead connections has increased the memory requirements too much.\nOptions I can think of:\n- Find a way to reduce the memory footprint of this change (write to disk, find connection ended event, be smarter, etc)\n- Switch to using a AJAX polling instead of an SSE (super lame)\n- Profile the actual memory difference in running applications -- do we actually care? (pretty lame too)\nHopefully someone else can think of a better idea because I'm not in love with any of those!\n. That is very odd, I can't reproduce the SSE errors when running locally or on Heroku. I only left the connection open for a few minutes though, perhaps it dies after some time?\nI'm starting to think that the memory problem is unrelated to my changes, but I haven't spent much time investigating this further.\nA more worrying aspect of this change is that running in JRuby actually causes scary errors:\n```\nscheduler caught exception:\nDetected invalid array contents due to unsynchronized modifications with concurrent users\norg/jruby/RubyArray.java:1113:in <<'\n/Users/tmauthe/.rvm/gems/jruby-9.0.4.0/gems/dashing-1.3.4/lib/dashing/app.rb:142:inblock in send_event'\norg/jruby/RubyHash.java:1343:in each'\n/Users/tmauthe/.rvm/gems/jruby-9.0.4.0/gems/dashing-1.3.4/lib/dashing/app.rb:138:insend_event'\n/Users/tmauthe/Developer/opensource/test_puma/jobs/buzzwords.rb:8:in block in (root)'\norg/jruby/RubyProc.java:318:incall'\n/Users/tmauthe/.rvm/gems/jruby-9.0.4.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:229:in trigger_block'\n/Users/tmauthe/.rvm/gems/jruby-9.0.4.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:204:inblock in trigger'\norg/jruby/RubyProc.java:318:in call'\n/Users/tmauthe/.rvm/gems/jruby-9.0.4.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/scheduler.rb:430:inblock in trigger_job'\n================================================================================\n```\nThis is happening because in one thread I'm appending objects to a data structure and in another thread I'm draining objects out of it.\nThis page has a fairly good breakdown of what options there are to solve this:\nhttps://github.com/jruby/jruby/wiki/Concurrency-in-jruby\nHopefully there is a clever way to avoid the need to share mutable data across threads as I have implemented. Sharing mutable data across threads is typically the most naive way to implement concurrency -- so maybe if inspiration strikes we can figure a smarter solution.\nThe trouble comes when we need to actually send events from the jobs. How can we ensure that the data acquired in the Rufus threads is shuttled out exactly once to all connections?\n. I took another stab at it:\nhttps://github.com/tylermauthe/dashing/tree/puma_webserver\nI'm going to let it run for a bit see how stable it is. So far, it's looking much better.\nI will submit another Pull Request as soon as I am done trying JRuby, Rubinius and MRI for a while. I would appreciate it if you could rebase the commits afterward to have a bit cleaner history. I'd do it myself, but I believe the owner of this Pull Request must do that.\nI realized that with EventMachine gone, Rufus was also free to spawn many threads -- send_event was being called simultaneously, so by adding a mutex there I was able to send the event directly to the stream instead of needing to queue it. This should drastically decrease the memory requirements.\n. Seems to be running quite stable. It's pretty fun to just crank up the MAX_THREADS and watch the sucker take off.\n. Oh, I just realized that I forgot synchronize access to the history.yml file. This isn't an issue on Heroku because there is no writable file system...\nI'll fix that up too.\n. Oh, sorry my commits could be squashed too. Especially the two that are fix and actually fix - hehe. Oh well!\nI am curious if anyone else has run this for any length of time? My dashboards are running fine with it...\n@qbrossard - Thanks again for all your work on this! It's been super helpful and it gave me the kick in the pants I needed to get it done.\nI think we could probably merge this now if you've given it the Shopify seal of approval @pushmatrix\n. +1 for the Puma branch -- makes sense to me. There are a lot of major changes and I know I don't have the time to deal with the fallout from the impact of those changes on thousands of dashboards in the wild.\nGood thing rubygems are easy to install from a branch :)\nhttps://github.com/gottfrois/dashing-rails - Runs on Rails 4, so that's another option for those looking to get Puma support from Dashing.\n. Looks good to me :+1: \nThanks a lot!\n. You need a JavaScript runtime of some sort, probably just install NodeJS. therubyracer gem is another option to look into.\nPrevious answer: https://github.com/Shopify/dashing/issues/20\n. The problem is that Dashing relies on a history file to maintain persistence across restarts. Heroku filesystems are read-only.\nWhen your dyno idles down, because it's a free dyno, the contents of memory should be safe in the history.yml file -- but on Heroku they are nowhere.\nThis has been solved by some through a persistence layer like Redis or MySQL. IMHO, this isn't the use case of Dashing -- it is a service to pull data from other data stores and visualize it. If you'd like to use Dashing as a storage layer for your application, I suggest implementing the techniques described in #330.\nIn any case, if you'd like to add a cautionary note on the wiki, please do so. Thanks for the report!\n. Make the job collect an array of hashes with values for x and y...\nPlease close this and direct support requests to Stack Overflow.\n. It would be easy to fork that widget and make one that accumulates values in the client... However, you won't persist those values to the history unless you're passing an array to {{send_event}}. If the values aren't persisted to history and only in the client, they'll be lost when you refresh. I would recommend that you instead create an array inside your job and accumulate values in it and send them out to the clients. You might also want to think about whether that array should have a maximum size.\nThe default Convergence job implements the behaviour I am describing, out of the box with a fresh project:\nhttps://github.com/Shopify/dashing/blob/a4a4564f760bb1bcd541366186cd46488d5a569b/templates/project/jobs/convergence.rb\nI'm not sure why we want a more generic way to create arrays than what ruby provides. The upcoming release of Dashing under Puma is also multithreaded, so access to the collection in this generic function you're proposing would need to be synchronized. I don't want to do that, unless it's for a good reason.\n. Thanks for the shout out and all your work creating Dashing and making it the simple, yet powerful tool it is.\nDashing was the first Ruby project I took a real interest in and got involved with -- because I love data, Ruby and visualizations. The simplicity and readability of the source really showed me how elegant Ruby can be. It was immediately evident that this was a tool made with love by developers for developers.\nI'm happy to have been a part of the journey and I'm sure that Dashing will still enlighten a few as to the elegance of Ruby.\n. @micke2k I don't have enough time to spare for that sort of effort at the moment -- maybe in the future (unless someone beats me to it!)\n. Yay! Thanks. Happy to get more folks involved in Smashing.\nThe fork is mentioned at the top of the site, in yellow.\n\nOn Jan 20, 2017, at 12:13 AM, Alex Schwartz notifications@github.com wrote:\nGreat to hear that \"Dashing\" is lives on as \"Smashing\".\nI wonder, could this be told on the dashing.io website?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. This is the existing pattern in the file -- they should all be modified in this way if desired.\n\nMy preference is to leave it as a comment, so that you don't have to look up 204. IMHO it is not a very common HTTP response code.\n. Agreed, the project should remain available as the gem dashing.\nHowever, the remainder of this PR has merit and could be considered. I have no allegiances to Thin.\n. What is this code doing? Is there a Puma equivalent?\n. You can't just remove the ability to stop the thing...\nPlease add in support for stopping Puma as per this Gist: https://gist.github.com/joelmoss/2470666\n. This functionality is there to stop daemonized instances -- for people running it in production who don't use Ctrl-C.\ndashing start -d\nhttps://github.com/Shopify/dashing/wiki/How-To:-Run-on-a-different-port,-or-in-production#run-in-the-background\n. Yes, this seems weird. Maybe this is okay to remove...\nI feel like Thin should already be managing those connections with a graceful shutdown path too...\n. That certainly is not what I am saying... My intent in commenting was to re-spark discussion around this. There are other issues that may be resolved by moving to Puma, so I think this is good even without providing jruby compatibility.\nBut the gem isn't going to be renamed... People are going to type gem install dashing :+1: \n. IMHO, this should read:\nDashing comes with a few re-usable widgets, which can be used as indicated above\n. Yeah, I am going through all the old PRs and trying to triage it a bit for the maintainer(s).\n. Also, I wasn't implying you had to be the one to make the updates -- just that these are the updates I recommend. Thanks!\n. If number has non-numeric digits, this function will assume it is a float.\nFor example: @parseValue(\"15px\") should return 15, but would return the float 15.0 instead.\nNot sure if this is a big deal, but it would be confusing if it happened and you weren't aware of this. Seems like an edge case to me though.\n. Not crazy about the word toolchain -- basically this is for Technical Story commits that don't add features or fixes.\nStuff like adding Travis CI support, ignoring files from git, etc.\n. This list could be reduced to just the emoji if we want, I find that using these guidelines improves the readability of a project's history. I've also called them suggestions, because I don't think we want to be militant about this stuff.\n. Not sure if it needs to be said, but people sometimes get really defensive when criticism is offered after they have slaved away on a PR.\n. I need to actually create Wiki pages for 1 and 3 in this list... :grimacing: \n. Yeah, it provides no value -- strictly a nice to have. Removed.\n. Cool beans, I only added it because I got into a spat with someone once for critiquing his work.\n. Removed.\n. More like there isn't a newline in the next line. I've gone through and broken up run-on lines -- Markdown parses it all as one <p> block.\n. Added.\n. Updated with new wording :+1: \n. Each request gets a thread in the thread pool until Puma hits the max and multiplexes the threads. The loop is basically just \"keep the SSE request open until marked as terminated\".\nThe connection is marked as terminated in send_event when there is an exception caught when trying to send to a dead connection. send_even is triggered from Rufus -- which is multithreaded in Puma.\n. Yes, it signifies the out resource which we are injecting events into inside send_event.\n. I don't think so. I am not sure, but I think this is because Sinatra doesn't properly implement Rack hijack.\nThe while loop stuff comes from this: http://tenderlovemaking.com/2012/07/30/is-it-live.html\n. The idea that Sinatra doesn't implement rack hijack properly comes from smart dudes comments here: https://github.com/sinatra/sinatra/issues/1035#issuecomment-203485499\nBut most of it is over my head.\n. ",
    "KonamiKode": "@JRibeiro13 I'm having the same problem as you! Any luck in finding a solution?\n. ",
    "robertleib": "I see the same thing.  The number is updating every time the job fires, but the underlying graph does not update.  If I refresh the page int he browser, the graph updates.\n. ",
    "skaldrom": "First of all: Thank you very much for this wonderful piece of software! Just great!\nI have the same problem: In the example http://dashingdemo.herokuapp.com/sample, the graph is updated without problems. If I create a new local dashboard on Ubuntu-Linux, the graph only updates on a reload. I tried it with both, firefox and chrome. There are lot of differences in the Gemfile.lock, usually newer versions: https://gist.github.com/skaldrom/5183031\nIt happens with therubyracer and also with nodejs.\nAny help would be greatly appreciated.\n. I can confirm that the graph widget works with coffee-script-source 1.4.0. Thanks a lot!!!\n. ",
    "trullock": "came here to say this, its to do with the receiveData prototype method. When called dashing invokes the base Widget's method instead of the derived class'. Not good enough with coffeescript to debug further :(\n. Yeah, I couldn't work out why the derived method isn't replacing the Widget base method. \n. its broken with coffee-script-source 1.6.1 but works with 1.4.0\n. ",
    "thenayr": "I spent a good amount of time looking into this yesterday, it appears as though the onData event binding is only being fired during the initial page load, I couldn't manage to make it fire continuously upon receiving new data. \n. @davefp I can confirm that switching to your Gemfile.lock indeed fixes the issue of the onData event not firing.  Now to find out which gem is causing the conflict...\n. Thanks @trullock \n. Increasing the timeout in thin fixed this issue for me.   For anyone else having this problem, try starting dashing like so:\ndashing start -t 90\nI used 90 and it seems to work fine.\n. We have a heavily customized theme at my company along with extra graphs and experimental leap motion support.  I imagine we will be open source most of this in the relatively near future.\n. Here's a preview - http://youtube.com/watch?v=fuRn4U8Rkyw&desktop_uri=%2Fwatch%3Fv%3DfuRn4U8Rkyw\n. @pushmatrix I've now fully implemented the ability to have multiple dashboards on one page.  There is no switching of tabs or reloading pages.\nI'll post a new video soon.\nEDIT\nNew video here - https://www.youtube.com/watch?v=kMM2rPX2Rok\nThere are numbers on the top of the dashboard to show the user context as to which dashboard they are currently on.\n. @addamh I'll probably start just by posting individual code pieces to show how it was done, it's nowhere near as robust as I'd like it to be at the moment, but performs great for our use-case at the moment. \n. I'm not seeing a div called chartContainer1 that you are calling .insertFusionCharts on, perhaps that is the issue?\n. ",
    "petermanser": "oh, sure. you're right. I think the best solution would be to use 'em' everywhere.\n. ",
    "EHadoux": "I'm glad you liked it. \nI forgot to bump the version, I guess the change won't be in the gem install dashing gem, right? (I'm relatively new in the Ruby community...) \n. ",
    "alanhussey": "I ran into that issue earlier today. My dashing gem doesn't seem to have the install command, which is documented on the wiki. Should the documentation indicate that install isn't available until a certain version (whatever that version is)?\n. ",
    "idev": "same here, dashing install GIST seems not to be available in the latest gem.\n. ",
    "joergrech": "Same here :-)\n. ",
    "brodo": "Sorry for answering so late. Yes, it's resolved.\n. ",
    "Pomax": "in that case could I request the page be appended to state that it works in the browsers currently listed, and is guaranteed to not work in IE? Knowing that it doesn't work in browser X is as valuable as knowing it does work in browser Y.\n. Snarky jokes aside? yes =) IE9's being windows-update-pushed to IE10 on consumer machines, and IE10 supports virtually everything most devs care about; server sent events is interestingly not in those (webgl's another), but for the most part IE10 is on par in terms of support of modern features, and actually supports the internet (people on XP still stuck with IE8 are shit out of luck, they can go use Firefox or Chrome). And with the \"backport\" for windows 7, my life as a webdev is a lot happier. (IE10 is, like chrome and firefox since forever, on a rapid update cycle now)\n. http://gs.statcounter.com/#browser_version-US-monthly-201111-201302 shows the US is actually still IE9 dominated (going down, we're getting there, but you can't discount IE quite yet)\n. good news! the IE VMs are free to use, fire up a virtualbox with IE10 -- http://www.modern.ie/en-us/virtualization-tools\n. ",
    "jirah": "Woha!\nThanks for the fast reply!\nHere the output:\n[ricardo@iridium sweet_dashboard_project]$ bundle exec thin start\nThe source :rubygems is deprecated because HTTP requests are insecure.\nPlease change your source to 'https://rubygems.org' if possible, or 'http://rubygems.org' if not.\n\n\nUsing rack adapter\n/home/ricardo/.gem/ruby/1.9.1/gems/backports-3.1.1/lib/backports/tools.rb:328:in require': cannot load such file -- json (LoadError)\n    from /home/ricardo/.gem/ruby/1.9.1/gems/backports-3.1.1/lib/backports/tools.rb:328:inrequire_with_backports'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/dashing-1.0.4/lib/dashing.rb:7:in <top (required)>'\n    from /home/ricardo/dev/sweet_dashboard_project/config.ru:1:inrequire'\n    from /home/ricardo/dev/sweet_dashboard_project/config.ru:1:in block in <main>'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/rack-1.5.2/lib/rack/builder.rb:55:ininstance_eval'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/rack-1.5.2/lib/rack/builder.rb:55:in initialize'\n    from /home/ricardo/dev/sweet_dashboard_project/config.ru:1:innew'\n    from /home/ricardo/dev/sweet_dashboard_project/config.ru:1:in <main>'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/rack/adapter/loader.rb:33:ineval'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/rack/adapter/loader.rb:33:in load'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/rack/adapter/loader.rb:42:infor'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/thin/controllers/controller.rb:169:in load_adapter'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/thin/controllers/controller.rb:73:instart'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/thin/runner.rb:187:in run_command'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/lib/thin/runner.rb:152:inrun!'\n    from /home/ricardo/.gem/ruby/1.9.1/gems/thin-1.5.1/bin/thin:6:in <top (required)>'\n    from /home/ricardo/bin/thin:23:inload'\n    from /home/ricardo/bin/thin:23:in `'\n. aaand /home/ricardo/.gem/ruby/1.9.1/gems/backports-3.1.1/lib/backports/tools.rb:328:inrequire_with_backports'\n\n\nruby\nmodule Kernel\n  def require_with_backports(lib)\n    begin\n      return false unless require_without_backports(lib)\n      paths = Backports::StdLib.extended_lib.fetch(lib, nil)\n    rescue LoadError\n      return false if Backports::StdLib::LoadedFeatures.new.include?(lib)\n      raise unless paths = Backports::StdLib.extended_lib.fetch(lib, nil)\n      Backports::StdLib::LoadedFeatures.mark_as_loaded(lib)\n    end\n    if paths\n      paths.each do |path|\n        require_without_backports(path)\n      end\n    end\n    true\n  end\n  Backports.alias_method_chain self, :require, :backports\nend\n. vimdiff says they're exactly the same.\nHere is mine:\n``` bash\nGEM\n  remote: http://rubygems.org/\n  specs:\n    backports (3.1.1)\n    coffee-script (2.2.0)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.6.2)\n    daemons (1.1.9)\n    dashing (1.0.4)\n      coffee-script\n      rack\n      rufus-scheduler\n      sass\n      sinatra\n      sinatra-contrib\n      sprockets\n      thin\n      thor\n    eventmachine (1.0.3)\n    execjs (1.4.0)\n      multi_json (~> 1.0)\n    hike (1.2.1)\n    multi_json (1.7.2)\n    rack (1.5.2)\n    rack-protection (1.5.0)\n      rack\n    rack-test (0.6.2)\n      rack (>= 1.0)\n    rufus-scheduler (2.0.18)\n      tzinfo (>= 0.3.23)\n    sass (3.2.7)\n    sinatra (1.3.6)\n      rack (~> 1.4)\n      rack-protection (~> 1.3)\n      tilt (~> 1.3, >= 1.3.3)\n    sinatra-contrib (1.3.2)\n      backports (>= 2.0)\n      eventmachine\n      rack-protection\n      rack-test\n      sinatra (~> 1.3.0)\n      tilt (~> 1.3)\n    sprockets (2.9.0)\n      hike (~> 1.2)\n      multi_json (~> 1.0)\n      rack (~> 1.0)\n      tilt (~> 1.1, != 1.3.0)\n    thin (1.5.1)\n      daemons (>= 1.0.9)\n      eventmachine (>= 0.12.6)\n      rack (>= 1.0.0)\n    thor (0.18.0)\n    tilt (1.3.6)\n    tzinfo (0.3.37)\nPLATFORMS\n  ruby\nDEPENDENCIES\n  dashing\n. This is rare. My system is a fresh Fedora 17 Install. :(\n. bash\n[ricardo@iridium ~]$ yum info ruby\nInstalled Packages\nName        : ruby\nArch        : i686\nVersion     : 1.9.3.392\nRelease     : 29.fc17\nSize        : 61 k\nRepo        : installed\nFrom repo   : updates\nSummary     : An interpreter of object-oriented scripting language\nURL         : http://ruby-lang.org/\nLicense     : (Ruby or BSD) and Public Domain\nDescription : Ruby is the interpreted scripting language for quick and easy\n            : object-oriented programming.  It has many features to process text\n            : files and to do system management tasks (as in Perl).  It is simple,\n            : straight-forward, and extensible.\n```\n. Hi davefp, the bug stills ocurr on my Fedora machine, as I explain earlier. \nWhat can I do to help on fix this issue?\n. ",
    "alexrwegener": "I'm experiencing the exact same issue.\n$dashing start throws the  -> backports/tools.rb:328:in require': cannot load such file -- json (LoadError) error\n$thin start works appropriately \n$bundle exec thin start throws -> backports/tools.rb:328:in require': cannot load such file -- json (LoadError) error\nGemfile.lock is identical \nThe only difference is I am running dashing on a fresh fedora 18 vm.  \nLet me know if I can help debug this issue.\n. ruby 1.9.3p392 as well.  Tried to manually add json to the Gemfile explicitly to no avail.\n. ",
    "jacksteadman": "I had this issue but was able to resolve it by adding:\ngem 'json'\nto the Gemfile.\n. ",
    "taniki": "same problem here :\n- ubuntu 12.10\n- rbenv/ruby 1.9.3p385\n. $ ruby -v\nruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-linux]\n. ",
    "mblackshaw": "Anybody have any luck on this? I'm not able run Dashing on Ubuntu 12.04 clean install with ruby 1.9.3p392 installed through RVM... :cry: \n. Actually \u2013\u00a0I just fixed it. I was doing a require 'JSON' instead of require 'json', which worked on OS X, but apparently not on Ubuntu.\n. In my case, I think it was due to the case sensitivity of the file system. HFS on OSX is case insensitive by default, whereas EXT4 is case sensitive on Ubuntu, thus the need for 'json' instead of 'JSON'.\nMaybe check for other packages that have a similar case issue?\n. ",
    "shakeelahmed9810": "i am also facing same issue \n/home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/jbuilder-2.2.5/lib/jbuilder.rb:4:in require': cannot load such file -- multi_json (LoadError)\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/jbuilder-2.2.5/lib/jbuilder.rb:4:in'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:76:in require'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:76:inblock (2 levels) in require'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:72:in each'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:72:inblock in require'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:61:in each'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/runtime.rb:61:inrequire'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler.rb:134:in require'\n    from /home/shakeel/rails_projects/test_app/config/application.rb:7:in'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:79:in require'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:79:inblock in server'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:76:in tap'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:76:inserver'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:40:in run_command!'\n    from /home/shakeel/.rbenv/versions/2.1.3/lib/ruby/gems/2.1.0/gems/railties-4.1.1/lib/rails/commands.rb:17:in'\n    from bin/rails:8:in require'\n    from bin/rails:8:in'\n. ",
    "ocontant": "I'm using dashing on a french CentOS 7 install and have the same issue as described.  This date from 2013 and has been closed without a solution. \nMust I understand this project has been abandoned since then and the book i'm reading is just too old to be pertinent anymore?. ",
    "huaxiaozhong1": "Hi, I have just fixed the issue on Fedora 22 with rails 5.0.2. After add \"gem 'json'\" into Gemfile, \"rails server\" got success. localhost:3000 can be displayed on browser. \"cannot load such file -- json (LoadError)\" was dissapeared when running \"rails server\". Thanks!. ",
    "mcfitz2": "That's what I thought. Thanks for the info!\nOn Mar 27, 2013, at 11:54 AM, Daniel Beauchamp notifications@github.com wrote:\n\nYou can also write jobs in any language you want, and use the API to send \nyour data over. \nOn 2013-03-27, at 16:53, David Underwood notifications@github.com wrote: \nNot with the current implementation. However, there are versions of Dashing \ncurrently being written in Python, .NET, and a couple of other languages. \nThat said, the amount of ruby actually required to write a job is minimal. \nIf you're familiar with another scripting language, getting up and running \nwith Dashing should be straightforward. \nOn 27 March 2013 11:46, Micah Fitzgerald notifications@github.com wrote: \n\nIs it possible to write jobs in other languages (Python, Java, \nJavascript)? Yes, I know I could just learn Ruby, but I'm really just \ncurious. \n\u2014 \nReply to this email directly or view it on GitHub< \nhttps://github.com/Shopify/dashing/issues/90> \n. \n\n\u2014 \nReply to this email directly or view it on \nGitHubhttps://github.com/Shopify/dashing/issues/90#issuecomment-15531832 \n.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "GoodEveningMiss": "It doesn't store the data. I would also like this feature.\n. You could do it with nginx. I just finished doing it myself.\nThe Passenger doc describes how, and there's a bunch of StackOverflow questions with exact conf examples.\nhttp://www.modrails.com/documentation/Users%20guide%20Nginx.html#deploying_rails_to_sub_uri\n. ",
    "dsyph3r": "Great, thanks for the example\n. ",
    "jShaf": "Looks like this does the trick, $(\".gridster ul:first\").gridster().data('gridster').disable()\n. ",
    "jasonblewis": "which file do you put that in?\n. Hmm, I gave that a go but it caused the page to not show any widgets. I'm new to coffee script so not really sure how to diagnose\n. Where do I put that? at the end of application.coffee? When I do, the dashboard fails to load any widgets\n``` coffeescript\ndashing.js is located in the dashing framework\nIt includes jquery & batman for you.\n= require dashing.js\n= require_directory .\n= require_tree ../../widgets\nconsole.log(\"Yeah! The dashboard has started!\")\nDashing.on 'ready', ->\n  Dashing.widget_margins ||= [5, 5]\n  Dashing.widget_base_dimensions ||= [300, 360]\n  Dashing.numColumns ||= 4\ncontentWidth = (Dashing.widget_base_dimensions[0] + Dashing.widget_margins[0] * 2) * Dashing.numColumns\nBatman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n        start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {\n  $(\".gridster ul:first\").gridster().data('gridster').draggable().disable();\n}\n```\n. OK, @pushmatrix got your solution to work. I think probably just errors in the coffee script. Thanks.\nWorking application.coffee below for future reference.\n```\ndashing.js is located in the dashing framework\nIt includes jquery & batman for you.\n= require dashing.js\n= require_directory .\n= require_tree ../../widgets\nconsole.log(\"Yeah! The dashboard has started!\")\nDashing.on 'ready', ->\n  Dashing.widget_margins ||= [5, 5]\n  Dashing.widget_base_dimensions ||= [300, 360]\n  Dashing.numColumns ||= 4\ncontentWidth = (Dashing.widget_base_dimensions[0] + Dashing.widget_margins[0] * 2) * Dashing.numColumns\nBatman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n        start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) )\n        $(\".gridster ul:first\").gridster().data('gridster').draggable().disable();\n```\n. to answer my own question, yes it is, you simply call\nsend_event('widget',{moreinfo: \"my new moreinfo string\"})\n. I think a solution could be to round the numbers to 3 significant figures.\nhttp://six-impossible.blogspot.com.au/2011/05/significant-digits-in-ruby-float.html\n. Turns out that the graph widget is expecting time to be seconds since unix Epoch. If you supply the times in that format there is no need to fiddle with the labels as it automatically works the appropriate labels out for you.\nI kind of think this should be noted somewhere, perhaps in the doco or in the convergence example.\n. ",
    "dcollazo": "I disabled dragging by adding an 'items' parameter at the end of assets/javascripts/application.coffee:\ndraggable:\n    stop: Dashing.showGridsterInstructions\n    start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n    items: \"none\"\nthe 'items' parameter takes a string that matches to a CSS selector. It can also take a a collection of HTML elements. Only matching elements will be draggable. You can pass any string, so long as it doesn't match any of your widgets. In this case, no elements are matching, which means that drag isn't enabled for anything.\n. ",
    "trianglegrrl": "Thanks @dcollazo - now it doesn't drive me mental when I use a smaller tablet! The items trick totally worked.\n. ",
    "vastbinderj": "Not without modifying Dashing so that it is using Sinatra-reloader or Rerun...\n. Here is a decent blog post about the issue: http://devver.wordpress.com/2009/12/21/making-rackreloader-work-with-sinatra/\n. martyn,\nAll you are doing is having Apache serve up the erb file and not run the\nruby interpreter.\nDo the following instead to have Apache proxy for Sinatra running under\nthin on port 3030:\nProxyPass /dashing/ http://127.0.0.1:3030/dashing\nProxyPassReverse /dashing/ http://127.0.0.1:3030/dashing/\nOn Wed, Apr 24, 2013 at 8:35 PM, Martyn Keigher notifications@github.comwrote:\n\nHey all,\nI have a lab server at http://lab.martynkeigher.com\nOn this Ubuntu 12.04 server I have both Apache installed (using port 80)\nand dashing (using port 3030).\nI copied the 'sampletv' dashboard and create a new erb file called\ndashing.erb and it is (well, was) available at:\nhttp://lab.martynkeigher.com:3030/dashing\nSo, in an effort to remove the ':3030' from the URL, I have added the\nfollowing to the Apache/sites-available/default file:\nAlias /dashing \"/home/dash/dashing/mklab_dash/dashboards/dashing.erb\"\nOrder allow,deny\nAllow from all\nIf you need to see the full contents of the default file then please go\nhere: http://pastebin.com/k4WViFur\nSo now, if you go to http://lab.martynkeigher.com/dashing it works...but\nnot fully!\nCan you please go to the above URL and let me know why and what I need to\nchange?\nThank you so much! :)\nMartyn.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/111\n.\n. Is this not working?\ngem update dashing\n\nOn Wed, Jun 19, 2013 at 8:59 PM, sikosis notifications@github.com wrote:\n\nHi,\nWe've been running dashing for quite a few months now and I've noticed\nthere are more update to date checkins in the github repo.\nWhat's the best way to now update dashing ?\nDo I just run \"gem install dashing\" and that will update it ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/150\n.\n. If that doesn't work and you want to update it from a specific Github\nrepository,(this is the main dashing repo in my example), do this in your\ngemfile:\n\ngem \"dashing\", :git => \"git://github.com/Shopify/dashing.git\"\nthen run\n\ngem update dashing\n\nOn Wed, Jun 19, 2013 at 9:11 PM, sikosis notifications@github.com wrote:\n\nI don't know just wondering what's the best way to update it. If doing\nthat is what needs to be done, then that's what I'll do.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/150#issuecomment-19729941\n.\n. \n",
    "magicmarkker": "hmm, thanks\n. ",
    "roblight": "I just created a new project and verified that there isn't a default dashboard defined in config.ru and I get 302'ed to /sampletv vs. /sample when I enter 0.0.0.0:3030 in Chrome (or FF).\n. Hi @davefp, it's not necessarily a problem for me, just something unexpected.  I would have expected to be 302'ed to /sample rather than /sampletv based on what's written in the wiki.\nI just verified with 1.2.0 and it's behaving the same way.  I looked into the Dashing code and I think the solutions are:\n1. Change to code.\n   - Add .sort call to the end of line 144 of lib/dashing.rb.  I can send a PR if necessary.\n2. Change the wiki.\n   - From: \"Out of the box, the default dashboard is picked simply as the first one alphabetically.\"\n   - To: \"Out of the box, the default dashboard is picked simply as the first one.\"\nThanks!\n. Somehow I managed to delete my reply to @kevinthompson regarding the version of Ruby I'm using, which is:\nruby 1.9.3p125 (2012-02-16 revision 34643) [x86_64-linux]\n. ",
    "cwc": "I still get this problem. Latest Ruby, Chrome, Cygwin, on Windows 7.\n. ",
    "pbattisson": "Hi Kevin\nSo when a user goes to view a dashboard I want to be able to go away and load the dashboard layout (and some default values) from a third party system. So normally\n```\nget '/sample' do\ncode goes here that loads layout etc.\nend\n```\nShould work however it is not allowing me to do anything at the moment. Does that make sense?\nThanks\nPaul\n. Hey Kevin\nThe before filter seems to be able to do the trick. And to answer your original question hoping to try and load some information regarding the layout which will be parsed by the client to layout the dashboard in a particular way (likely using jQuery).\nThanks for all your help.\nPaul\n. ",
    "wazoo": "Not sure, when I did it I replaced the file in my already existing app so I haven't generated a new app with this gem yet.  I do know it works because the new version of gridster has some features that the current one in this gem doesn't support that I was using successfully.  You might have to shift-refresh or totally restart the app.\n. ",
    "Drefresh": "That's would be awesome. Someone please do that.\nOn Fri, Apr 26, 2013 at 7:24 PM, Martyn Keigher notifications@github.com\nwrote:\n\nYeah i restarted the service but still didnt work.\nI'm thinking it would be nice for them (someone) to upload a new master zip with the modifications that have been made.\nJust my .02 :)\nReply to this email directly or view it on GitHub:\nhttps://github.com/Shopify/dashing/pull/101#issuecomment-17105370\n. \n",
    "masukomi": "+1 for haml support\n. ",
    "kevintuhumury": "+1.\nThe first_dashboard method probably needs an update though.\n. @micpango What exactly do you need to do to get Dashing running under a sub-path? I currently get a blank page (I do see the html of the widgets in the source),because it can't find /assets/application.js or /assets/application.css. Also is a subdomain considered a sub-path? \nI'm trying to get dashing to run under something like dashing.domain.com. Would I need to use dashing from master and use assets_prefix (asset_prefix: \"/dashing/assets/\" ?), more than just that or wouldn't that be possible?\nI'm using Nginx + Passenger btw.\n. ",
    "danielbayerlein": ":+1: for Haml support.\n. Awesome!\n. ",
    "mmzoo": "\nAlso, instead of a condition check, it would probably be best to have a way to register multiple parses\n\n+1 because I wish to get this working with slim :)\n. Sweet, thank you\n. Funny that you commited this just 2 hours ago, I was just beginning to look for exactly that :)\n. ",
    "JeanMertz": "Nice one, :+1: \n. ",
    "renatoornelas": "Here's how i did:\non the coffee script, u need to use both series (index 0 and 1)\n@traffic.series[0].data = data.points_in\n  @traffic.series[1].data = data.points_out\nIn the Job file i feed both values to the send_event. In my case:\n```\npoints_in = q.points graph_id, rra_id, \"IN\"\npoints_out = q.points graph_id, rra_id, \"OUT\"\nsend_event 'traffic', { points_in: points_in, points_out: points_out }\n. coffescript\nclass Dashing.Traffic extends Dashing.Widget\n@accessor 'current_in', ->\n    return @get('displayedValue_in') if @get('displayedValue_in')\n    points_in = @get('points_in')\n    if points_in\n      points_in[points_in.length - 1].y\n@accessor 'current_out', ->\n    return @get('displayedValue_out') if @get('displayedValue_out')\n    points_out = @get('points_out')\n    if points_out\n      points_out[points_out.length - 1].y\nready: ->\n    container = $(@node).parent()\n    # Gross hacks. Let's fix this.\n    width = (Dashing.widget_base_dimensions[0] * container.data(\"sizex\")) + Dashing.widget_margins[0] * 2 * (container.data(\"sizex\") - 1)\n    height = (Dashing.widget_base_dimensions[1] * container.data(\"sizey\")) + Dashing.widget_margins[1] * 2 * (container.data(\"sizey\") - 1)\n    @traffic = new Rickshaw.Graph(\n      element: @node\n      width: width\n      height: height\n      stroke: true\n      series: [\n        {\n        color: \"SeaGreen\",\n        data: [{x:0, y:0}]\n        },\n        {\n        color: \"steelblue\",\n        data: [{x:0, y:0}]\n        }\n      ]\n    )\n@traffic.series[0].data = @get('points_in') if @get('points_in')\n@traffic.series[1].data = @get('points_out') if @get('points_out')\n\ntime = new Rickshaw.Fixtures.Time()\ntime_unit = time.unit('hour')\n\nx_axis = new Rickshaw.Graph.Axis.Time(graph: @traffic, timeUnit: time_unit)\n\ny_axis = new Rickshaw.Graph.Axis.Y(graph: @traffic, tickFormat: Rickshaw.Fixtures.Number.formatKMBT)\n\n@traffic.renderer.unstack = true;\n@traffic.render()\n\nonData: (data) ->\n    if @traffic \n      @traffic.series[0].data = data.points_in\n      @traffic.series[1].data = data.points_out\n      @traffic.render()\n```\n. ",
    "jeroenbegyn": "Good points! I added the Twitter Search to the the Third Party list (https://github.com/Shopify/dashing/wiki/Additional-Widgets). So now it can be removed from the base files.\n. Yes, i think it is a bad thing to do, that's why i suggested to remove it from the basic template (see 2nd commit) and why i added it to the third party list! \nThanks for your input! :)\n. Yes i agree! Removing seemed like the better option at first, but since it is such a popular feature i think it is a better idea to leave it in there. It's definitely better then to add it to the third party list where it might be harder for people to find and integrate. I think \"first time users\" will be able to use it quite easily, especially with the failsafe. :)\n. ",
    "hannesfostie": "@kevinthompson actually with playing around a bit more I've figured out what I was asking. I didn't fully realize it was Batman who was behind the @get('username') methods so figuring that out got me quite far, hah. I simply check if these values are set now and then, if they're not, set them to a sane default.\nWill update my widget in a bit to reflect this.\nThanks!\n. ",
    "splattael": "Do you need anything else to get this PR merged?\n. Great news! Thank you :)\n. ",
    "kivancsahici": "In case anybody is still interested, I wrote a small gist for updating the values inline\nhttps://gist.github.com/kivancsahici/371b0de9752fafa9f4939926c971acf3. ",
    "toddq": "One of my co-workers came up with a workaround I thought I'd share.\nTo application.scss we added \n.gridster li {\n    overflow: hidden;\n    display:  list-item;\n}\nAnd then each widget needs to be wrapped in an extra div element that sets the display to table like:\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n    <div style=\"display: table; width: 100%; height: 100%;\">\n        <div data-id=\"hello\" data-view=\"Text\" data-text=\"Hello World!\"></div>\n    </div>\n</li>\n. ",
    "dydys4444": "Hi everyone\nI would like to re-up that post because I have the same problem, but my goal is different. I would like to keep all datas and other widgets \"go down automatically\".\nI tried to modify application.scss by creating and modifying .gridster li\nI tried to deal with application.coffee : avoid_overlapped_widgets: !Dashing.customGridsterLayout\nHas anybody an idea ?\nThanks\n. ",
    "pferreir": ":+1: for this issue.\nBased on @toddq's solution, I find this less intrusive:\n``` css\n.gridster li {\n    overflow: hidden;\n    display:  list-item;\n}\n.gridster li div {\n     display: table;\n     width: 100%;\n     height: 100%;\n}\n```\n(assuming your widgets are all <div>s wrapped inside <li>)\nStill, a proper fix would be much better.\n. ",
    "mcolak": "What do you want to learn in nginx ? And can you send the configuration file  .../sites-enabled/xxxxfile\n. ",
    "pezholio": "Yeah, to be honest, it's only useful if you've got more than one node and a load balancer. Having a redirect screwed things up for us, but yeah, I agree, for most use cases, it's probably not needed :smile: \n. I pinned the version of rufus-scheduler in the gemfile like so:\nrufus-scheduler, '< 3.0.0'\nBut it would be nice to have a proper fix going forward, even if it's just pinning down the version in the Dashing gemspec.\n. ",
    "buzali": "I'm having the same problem with AWS elastic beanstalk. \n@dchymko Have you figured out how to fix it?\nIf it is a timeout issue, would that need to be configured in nginx?\n. I am experiencing the same issue, but with all browsers.\nWere you able to solve this?\n. ",
    "Fuzzwah": "As a newb who has spent a fair chunk of the last few days trying to get dashing up and running I concur massively.\n. Looking at the source of the samples page I noticed that there was reference to these two files (in layout.erb)\n<script type=\"text/javascript\" src=\"/assets/application.js\"></script>\n<link rel=\"stylesheet\" href=\"/assets/application.css\">\nI found that application.css actually lives in /assets/stylesheets/ but can only see /assets/javascripts/application.coffee and no application.js file.\nRefreshing the page I can see that at least the stylesheet is now applying (since there's no logic going on its ugly, but its not just grey now).\nAs I mentioned I'm a ruby newb, but I've gathered that a .coffee file can be compiled into a js file. I found an online compiler and attempted to convert both the application.coffee and dashing.gridster.coffee files into js's but this didn't work. Looking at them I can see that this conversion has missed out the require calls.\nTrying to get my head around how dashing works with out a working example is kind of rough :(\n. I figured that maybe using an online coffee script compiler wasn't the best idea, so I've downloaded and installed node.js and npm install'd coffee-script. I then tried compiling the .coffee files myself but that had the same exact output.\n. I gave up trying to get this working on windows.\n. I was using chrome and firefox. I could not get anything to display on the page when trying to host dashing on windows.\n. Yes. I've since given up trying to get dashing hosted on a windows box (and have no run into new issues viewing the dashes remotely from a windows box when hosted on linux).\nI can tell you this hasn't made me fall in love with ruby :(\n. I have been digging through other similar issue threads. I attempted to use coffee-script-source 1.4.0 as mentioned in https://github.com/Shopify/dashing/issues/79 but it didn't make any difference.\nI've also noticed that the sample install which is linked to seems to be doing the exact same thing I'm witnessing on my own fresh install. It has the layout, but no data.\nhttp://dashingdemo.herokuapp.com/sample\nI've tested both the demo page and my own fresh dashboard install using the lastest versions of Chrome and Firefox. Same issue everywhere.\nLittle help please? I no longer think this is just some rails newb issue I'm running into, but a larger issue with Dashing.\n. I've installed ubuntu desktop into a VM and run through the set up again. It all works when I'm running the brower on the local vm, but not when I try and view the page from another machine.\nI take it from the fact that the heroku demo exists at all, that at some stage it was expected that viewing a dashboard from a remote machine was meant to work. Is it that this \"feature\" has been broken somewhere along the lines?\n. I found a branch which mentioned remote views, but after installing it I'm still seeing the same thing.\nhttps://github.com/zsalzbank/dashing/tree/remote-views\n. I can successfully get to the site I'm working on (I use virtualbox and have NAT'd port 3030 through form the host OS to the guest). When I view the site locally from within the VM it works fine, /sample updates with its random numbers. But when I view from the host OS /sample has the layout, but no data.\nYour lab is exhibiting the exact same issue as I'm seeing.\n\n. Same thing is happening to the http://dashingdemo.herokuapp.com/sample page.\n. Unfortunately my current test bed isn't externally available over the web.\nAre you saying that http://dashingdemo.herokuapp.com/sample is working fine for you on Win8 + Firefox? Because it isn't for me (Win8 + Firefox 20.0.1). I have no plugs for Firefox installed (I normally use Chrome).\n\nI now have dashing running on the Ubuntu 12.04 LTS server again and can successfully view dashboards from the Ubuntu 13.04 desktop VM using Firefox (so it isn't an outbound firewall issue). However when I view it from Win8 with either Firefox or Chrome I don't see any data. I can confirm that the same lack of data updates happens if I disable the windows firewall.\n. Same issue I was seeing when trying to get dashing running on a windows host.\n. ",
    "fitzx": "In case anyone else comes here after getting this problem - Dashing DOES NOT WORK on Internet Explorer, due to IE not supporting jQuery's EventSource mechanism.   It would perhaps have saved me a lot of time if this had been mentioned on the homepage, but hey.\n. ",
    "sengenbe": "Also Chrome in my similar case (#121).  Fuzzwah were you able to see the background icons of the clock, heart, and twitter logos in your case?\n. I am on a Windows machine but this was occurring on Chrome\n. ",
    "framer8": "The solution is to install a javascript runtime, in my case i installed node.js, made sure node.exe was on the path and dashing sprang to life the next time i ran it.\n. (Cross-post from #117) The solution is to install a javascript runtime, in my case i installed node.js, made sure node.exe was on the path and dashing sprang to life the next time i ran it.\n. ",
    "jrgns": "@Fuzzwah  as @framer8 said, you need to install a JavaScript runtime.\nAFAIK you should only have this issue on Windows Server 2012. You can fix it by installing nodejs using the windows installer. Nothing else necessary.\n. ",
    "RajaCD": "@jrgns  No luck even after installing node.js windows installer.\nIm using windows 7 Enterprise. and tried with ruby 1.9.3 and Ruby 2.0.\n. @sikosis  Maxthon Cloud Browser didn't work for me.\n. . @InTheScript  thakns for your suggestion. Its working for me!!\nI have restarted server couple of times then it worked. thanks\nJust to add - We need Javascript runtime environment. So , I have installed NodeJS latest version and Dashing started working for me.\n. ",
    "R2Developer": "Facing same problem, not working in chrome and firefox, just seeing blank (dark) page..\n. i am using windows, do i know how to check the port ? facing same problem..pls help\n. Able to fix by installing nodejs in window. \n. Install node Js it should get fixed\nOn Monday, April 11, 2016, Zac Grierson notifications@github.com wrote:\n\nI have the same issue, installed gulp.js but nothing changes, rebundled\nand re-served.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/656#issuecomment-208250822\n\n\nThulasiraman.SMK\nMobile: 443-889-0530\n. ",
    "RobotChicken": "Had the same issue, then installed Node.js as recommended here. I installed in the dashboard project directory and it started working. Thanks for the ideas. Using Chrome.\n. ",
    "robknight": "I'm seeing the same thing. It works on some browsers but not others - Firefox on Linux seems fine, but both Chrome & Firefox on Windows 7 don't work.\nIn Chrome developer tools and Firebug, it shows the /events resource as \"pending\" - it seems to hang on this indefinitely without receiving any data.  Quitting dashing via CTRL-C as described by @Fuzzwah causes the connection to close and then the browser receives the data.\nWeirdly, Firefox on Linux on another box does not have this problem, and shows event data arriving incrementally in Firebug's network tab.\nI thought this might be a proxy server issue but even without using any proxy server it still seems to occur.\n. ",
    "jeroenvandijk": "http://dashingdemo.herokuapp.com/sample wasn't working for me either. Application.js was loading forever..\nI've tried this in Chrome 27.0.1453.93, Safari 6.0.3 (8536.28.10) on Mountain Lion. And same for IPad Chrome and Safari. Now all of a sudden it works in all these devices. As if the server finished compiling application.js...?\nThe dashboard is ~~still not~~ working on Google TV Chrome ~~, but I'll try again~~ after clearing the cache\n. ",
    "leonkyneur": "http://dashingdemo.herokuapp.com/sample\nhttp://dashingdemo.herokuapp.com/sampletv \nabove links not working for me - wireshark i can see data data received however nothing presented back to the browser. \nThis also happens to me on a network install accessible on my LAN\nOS: Windows 7 x64\nBrowsers:\nFirefox: 22 (screenshot)\nChrome: Version 27.0.1453.116 m \nOpera: Opera/9.80 (Windows NT 6.1; WOW64) Presto/2.12.388 Version/12.15\n\n\n. ",
    "tmarconi": "Just chiming in to say that we are seeing this exact same issue on our local install.  Chrome is \"pending\" on events, everything else is coming through fine.  Same problem in Firefox and Chrome, doesn't work for me, but does work for 5 of my co-workers.  Was working on this workstation yesterday, not working today... rebooted, disabled firewalls, plugins, used incognito mode, etc.  All using various OS's, but primarily using Windows 7 with Chrome as the browser.  Strange problem.\n. ",
    "Norvares": "Try t use another webserver instead of thin: https://github.com/Shopify/dashing/issues/193#issuecomment-27314226\n. Hi,\nit seems like the bug happens between dashing+thin and Windws 7 Browsers. I hosted the dahing test board on a fresh ubuntu server, tried to connect from Firefox/Chrome and it doesn't work either.\nIt seems like thin doesn't delivers the event-stream for Windows Browser if you don't kill the server.\nPlease try to install another webserver like puma or webrick and use it instead of thin:\nruby\nrackup -p 80 -s webrick\nor\nruby\nrackup -p 80 -s puma\nCheers\nSteffen\n. Maybe try to use another webserver instead of thin: https://github.com/Shopify/dashing/issues/193#issuecomment-27314226\n. ",
    "DSegal92": "Just chiming in to say that I'm experiencing the same issue. I'm running a Webrick server, and to make things even stranger when I check out the server on another computer on the same local network it updates fine (on the remote computer, still nothing locally).\n. ",
    "stuzero": "I solved this by adding 'puma' to my Gemfile \nand ran it with:\npuma config.ru\nI think the problem is with thin.\nFYI - the default port is 9292\n. ",
    "benpatterson": "Could this be related? https://github.com/macournoyer/thin/issues/15\n. ",
    "cmheisel": "I'm experiencing the same thing, I'll try puma as well\n. ",
    "petemyron": "switching to puma also fixed this for me, though I had to fork dashing just to relax the dependency on rack in dashing.gemspec from s.add_dependency('rack', '~> 1.5.2') to 'rack', '~> 1.5' so puma and dashing would play nice together. I now need to make sure the thing doesn't have any issues with a newer version of rack... \n[Update] See below, not working--widgets are not updated\n. I mirrored some of the changes from #427, except I don't want jruby, and it all seems to be working ok--other than the dashboards are requesting 'events' updates every 3 seconds...\n. Other than making sure the thing starts with puma (it does)... actually looking at it today shows that widgets are not updating (via send_event or through curl), though I see the request in the logs:\n[66649] 127.0.0.1 - - [17/Jun/2015 15:04:06] \"POST /widgets/my_id HTTP/1.1\" 204 - 0.0292\nAlso, puma responds immediately to the GET 'events' request instead of leaving it open like Thin did for one minute (Server-Sent Events)--I'm not sure where to go from here. It certainly bloats Puma's log: \n66227] 127.0.0.1 - - [17/Jun/2015 14:54:49] \"GET /events HTTP/1.1\" 200 - 0.0006 (every 3 seconds)\nhistory.yml is only updated when the server is killed (control + c in my case), which I think is weird, though I think I recall that being the case on Thin as well.\nAny ideas?\n. ",
    "aysark": "Ran into this issue, for now my workaround was what @stuzero suggested (using puma as the server).\n. :+1: \n. ",
    "pysysops": "I had this issue with the Docker dashing image from @frvi I farked it and pushed an image up which can be found https://hub.docker.com/r/pysysops/docker-dashing/\nJust uses puma as discussed above. \n. ",
    "drexlma": "I have the same problem :/\n. ",
    "vishwakumba": "I also had the same problem running on the guest Vagrant Ubuntu Xenial(16.04) OS. \nMy host was Mac OS Sierra 10.12.4\nChrome browser did not show the dashing widgets with updating data from my Mac OS. So I used \nwebrick web server\n$ rackup -p 3030 webrick\nSee also\nhttps://github.com/Shopify/dashing/issues/235\n. ",
    "robotmay": "Ah ha, this would explain why my Slim templates did bugger all when I tried them out earlier :D\n. ",
    "ndbroadbent": "+1, would love to use Haml.\n. Oh, whoops, that's what happens when you submit a pull request from master. This PR was only meant to be for b1b0b3c, will reopen\n. ",
    "apeckham": "On a related note, you can use a non-ERB layout with \"Sinatra::Application.set :erb, layout_engine: :haml\" in config.ru.\n. Anything I can do to make this PR more attractive for merging? I don't want it to be forgotten!\n. Maybe you could put a file in the jobs directory that requires the jobs in\nall the subfolders..?\nOn Sunday, June 2, 2013, atrophic wrote:\n\nIt looks like only jobs in the root of the jobs folder are being required.\nTry making the search recursive near the end of lib/dashing.rbhttps://github.com/Shopify/dashing/blob/master/lib/dashing.rbby changing:\nfiles = Dir[File.join(settings.root, job_path, '/*.rb')]\nto this:\nfiles = Dir[File.join(settings.root, job_path, '*', '/.rb')]\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/132#issuecomment-18821914\n.\n. You could do something like this at the bottom of application.coffee\n(untested!):\n\nif window.ontouchstart\n     $('.gridster ul:first').data('gridster').disable()\nhttps://github.com/ducksboard/gridster.js/issues/25\n. What about using $(node).css? http://api.jquery.com/css/\nAlso I think data.background-color is interpreted as subtraction, because of the minus sign.\ncoffeescript\n  onData: (data) ->\n    if data['background-color']\n      $(@get('node')).css 'background-color', data['background-color']\ncurl -d '{\"auth_token\": \"YOUR_AUTH_TOKEN\", \"current\": \"50\", \"background-color\": \"red\" }' \\http://localhost:3030/widgets/tvLRnumberFF\n. I replaced gridster with isotope on a new project and got pretty far: https://github.com/apeckham/dashing-isotope\n\nThe layout is responsive (and animated), but not sure how to put space between widgets and center everything on the page.\n@pushmatrix What is on your list for Dashing 2.0? I'd love to see the ideas.\n. I'm seeing data. Maybe it's related to sleeping dynos? https://blog.heroku.com/archives/2013/6/20/app_sleeping_on_heroku\n. This was deleted because it wasn't being used and conflicted with send_event in lib/dashing.\n. ",
    "Abbie2020": "It worked! Thanks for the speedy reply!\n. ",
    "quedayone": "You need to have the Command line tools installed on the Mac.\nTry:\nxcode-select --install\nThen:\ngem install dashing\n. ",
    "berry2012": "I have same issue on Amazon linux. ",
    "lagsalot": "I JUST starting playing with this Gem and looking for answers for another question.  But coming across this I am wondering if you have found a solution.\nI am thinking you will have to be able to create a Sinatra route to the effect of main/{client_id}, pass that id along to the widget data binding. data-clientid-thingy or some such.  The issue then becomes the job running.  Also, what happens when somebody is viewing main/client-1, and someone else is concurrently viewing main/client-2.\nDepending on the amount of clients and data for each, you could have the job pull the data for all, and loop through call the send_event or what ever it is.  This isn't exactly going to scale.\nPerhaps there is a way to schedule/un-schedule the rufus jobs dynamically?\n. ",
    "thecolorblue": "So, I should have read how updates are getting to the client in more detail. I did not know about server sent events, and it looked liked dashing was polling for updates. With SSE's the updates are in real time. \nSorry for the extra issue. \n. ",
    "atrophic": "It looks like only jobs in the root of the jobs folder are being required.  Try making the search recursive near the end of lib/dashing.rb by changing:\nruby\nfiles = Dir[File.join(settings.root, job_path, '/*.rb')]\nto this:\nruby\nfiles = Dir[File.join(settings.root, job_path, '**', '/*.rb')]\n. ",
    "awashbrook": "Thanks Guys! Not yet a Coffee expert, but this is working as long as you copy/paste exactly as above along with indentation into the end of application.coffee:\ncoffeescript\n  Batman.setImmediate ->\n    $('.gridster').width(contentWidth)\n    $('.gridster ul:first').gridster\n      widget_margins: Dashing.widget_margins\n      widget_base_dimensions: Dashing.widget_base_dimensions\n      avoid_overlapped_widgets: !Dashing.customGridsterLayout\n      draggable:\n        stop: Dashing.showGridsterInstructions\n        start: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) )\n        $(\".gridster ul:first\").gridster().data('gridster').draggable().disable();\nAllows regular browsers to drag but suppresses on the iPad where you can swipe and scroll.\n. Very interested to see this merge, is there we anything we can do to support this PR?\n. We need better documentation for this case...the dashing wiki has nothing today!\ne.g. if creating view named NavigableRickshawGraph then widget folder and filenames must be navigable_rickshaw_graph, and not navigablerickshawgraph.\nThis will help those for whom data attribute naming conventions are not second yet: http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#custom-data-attribute. \nThose slipping up are punished with the cryptic Ruby draw error message.\n. This issue affects me often as well while my team evaluates Dashing. We are thinking of exposing dashing to much wider dev audience to create their own widgets, so avoiding this cryptic string is going to be very important if we adopt dashing as our solution for dashboards!\n. ",
    "markymark292": "Thanks, this works a treat. \n. @kayaj Did you ever implement sound? I am having the same issue you did...How do you do it? \nAny help or Sample ruby code and matching coffee script would be greatly received. \nThanks in advance,.\n. I am getting pretty good with Dashing and I have managed to add a background image quite easily, however, I have a dilemma.\nI have two dashboards with different widgets. On one of them, I simply have a lot of \"text\" widgets displaying targets. I am trying to add a custom background to just some of those widgets, but not all. I have tried adding my own class in the scss file and binding it which I have included in the widget html file as normal and then added the data-backimage=\"backimage\" hookup to the div in the erb file, however, I cannot see the image. \nAny help would be appreciated, even if it is to tell me it cannot be done, which I doubt! :-)\n. ",
    "byroot": "You can configure the compressors you want in your config.ru\n``` ruby\nSinatra::Application.sprockets.js_compressor = :uglifier\nSinatra::Application.sprockets.css_compressor = :scss\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\n```\nOff course you also have to make sure to add the required gems to your Gemfile. \n. ",
    "andrewsavill": "Thank you for your help.  I was very close but not quite there.\nWhen running the above code I get a 404 error.  On investigation it looked like Uglifier is mangling a certain var which cannot then be found.  To resolve this I used the following code.\nGemfile\nruby\ngem \"uglifier\"\nconfig.ru\nruby\nSinatra::Application.sprockets.js_compressor = Uglifier.new(:mangle => false)\nSinatra::Application.sprockets.css_compressor = :sass\nThese minified my assets by the following factors.\n808KB -> 601.9 KB = 74.49% \n22.5KB -> 15.4 KB = 68.44%\nI think the JS file could be compressed more if I could find which var is causing the 404 as you can pass \nruby\n:mangle => {\n  :except => [\"$super\"]\n}\nAs a side note to this, GZIP compression can be enabled by also adding \nconfig.ru\nruby\nuse Rack::Deflater\nThis compressed my assets to:\n808KB -> 153.7KB = 19.02%\n22.5KB -> 3.6KB = 16%\n\n\nI realize that Dashing in its most common use case would not worry too much about the assets sizes as they will be loaded once when the machine is booted, directed to the URL and then left for many hours in the office but I think this might be useful for anyone worried about website response time or bandwicth limits etc.\n. Just for completion and for anyone stubbing upon this at a later date, I wanted to add some more information I found.\nThe above works but it only compiles the assets at run time which means that although every subsequent visitor will have less to download, the first will have to wait for the execution of the compilation.\nTo get around this issue I created a Rake task to be run before deployment instead of at run time.\nRakefile\n``` Ruby\nrequire 'bundler'\nBundler.require\nnamespace :assets do\n  root = File.realdirpath('.')\n  sprockets = Sinatra::Application.settings.sprockets\n  outpath_prefix = File.join(root,'public',Sinatra::Application.settings.assets_prefix)\ndesc 'Compile assets'\n  task :precompile => [:clean, :compile_js, :compile_css] do\n    puts '*** Sucessfuly Precompiled'\n  end\ndesc 'Clean assets folder'\n  task :clean do\n    puts ' Cleaning compiled assets'\n    if File.exist?(File.join(outpath_prefix, 'javascripts/application.min.js'))\n      FileUtils.rm File.join(outpath_prefix, 'javascripts/application.min.js')\n      puts '* JS Removed'\n    end\n    if File.exist?(File.join(outpath_prefix, 'stylesheets/application.min.css'))\n      FileUtils.rm File.join(outpath_prefix, 'stylesheets/application.min.css')\n      puts '* CSS Removed'\n    end\n    puts ' Successfully cleaned assets'\n  end\ndesc 'Precompile JS assets for production'\n  task :compile_js do\n    puts ' Compiling js assets'\n    sprockets = Sinatra::Application.settings.sprockets\n    sprockets.js_compressor = Uglifier.new(:mangle => false)\n    asset = sprockets['application.js']\n    outpath = File.join(outpath_prefix, 'javascripts')\n    outfile = Pathname.new(outpath).join('application.min.js')\n    asset.write_to(outfile)\n    puts \" Successfully compiled js assets\"\n  end\ndesc 'Precompile CSS assets for production'\n  task :compile_css do\n    puts ' Compiling css assets'\n    sprockets.css_compressor = :scss\n    asset = sprockets['application.css']\n    outpath = File.join(outpath_prefix, 'stylesheets')\n    outfile = Pathname.new(outpath).join('application.min.css')\n    asset.write_to(outfile)\n    puts \" Successfully compiled css assets\"\n  end\nend\n```\nYou also have to remove the compilation from config.ru and add a map \"public\" so the assets can be served (For Heroku - explained later).\nconfig.ru\n``` ruby\nrequire 'dashing'\nrequire 'uglifier'\nuse Rack::Deflater\nmap \"/public\" do\n  run Rack::Directory.new(\"./public\")\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n```\nAlso remember to change the linking of your assets\nlayout.erb\n``` HTML+ERB\n<!DOCTYPE html>\n\n\n\n\nAndrew Savill - Dashboard\n\n\n\n\n\n\n      <%= yield %>\n    \n\n\n```\nHere is an example output:\n``` bash\n$ time rake assets:precompile --trace\n Invoke assets:precompile (first_time)\n Invoke assets:clean (first_time)\n Execute assets:clean\n Cleaning compiled assets\n* JS Removed\n* CSS Removed\n Successfully cleaned assets\n Invoke assets:compile_js (first_time)\n Execute assets:compile_js\n Compiling js assets\n Successfully compiled js assets\n Invoke assets:compile_css (first_time)\n Execute assets:compile_css\n Compiling css assets\n Successfully compiled css assets\n Execute assets:precompile\n*** Sucessfuly Precompiled\nreal    0m24.944s\nuser    0m0.015s\nsys     0m0.015s\n```\nAn added benefit to this is that due to the Rake Task name \"assets:precompile\" when you push your repo through to Heroku, it will automatically compile the assets.  This means you can keep you repository clean.  Your assets must be served from public/assets to trigger this rake task.\nGit push output\nbash\n-----> Running: rake assets:precompile\n(in /tmp/build_zcb9s9xpsi6z)\n*** Cleaning compiled assets\n*** Successfully cleaned assets\n*** Compiling js assets\n*** Successfully compiled js assets\n*** Compiling css assets\n*** Successfully compiled css assets\n*** Sucessfuly Precompiled\nAsset precompilation completed (32.78s)\nAs a final tip in compressing your assets, you can remove unused widgets from your source repository so that they do not get joined into the js/css file.  \nHope this saves any developers a few hours and any users a few seconds.\n. ",
    "phaniphani": "Thank you so much, that helped me find a debugger too.\n. ",
    "myusuf3": "@davefp @pushmatrix how do i make the dashboard load on the / route rather than redirect to /foo on load?\nWhat do I need to override in config.ru? Is it possible?\n. So I tried that all I am getting is the path to erb file printed back to me. \n\n. So what I managed to do was push the loading of dashing farther down, so I am able to define my route. Probably super hacky, but it works. \n``` ruby\nrequire 'haml'\nrequire 'sinatra'\nrequire 'sprockets'\nrequire 'sinatra/content_for'\nrequire 'rufus/scheduler'\nrequire 'coffee-script'\nrequire 'sass'\nrequire 'json'\nrequire 'yaml'\nget '/' do\n    render :erb, :fitness\nend\nrequire 'dashing'\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\nhelpers do\n    def protected!\n     # Put any authentication code you want in here.\n     # This method is run before accessing any resource.\n    end\n  end\nend\nget '/' do\n erb :fitness\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n```\n. No lies, page loads but dashing stops updating. :hear_no_evil: \n. ",
    "alexec": "Thanks! It looks like you can set it up, but I've yet to sort it out. \n. It seems to resolve itself after a second update of a widget. It's a problem in Safari for me if you open the dashboard in two windows at the same time.\n. ",
    "kayaj": "Hey guys\nThank you for the responses.\nI haven't had the time to implement the audio trigger yet @bstephenf - but as soon as I have it implemented, I wil let you know with the specific code!\nThanx to @pushmatrix & @davefp - Really nice community!\n. ",
    "micpango": "I believe you can override :assets_prefix in your config.\n. @ibiwan There's more info in the pull request\n. Submitted.\n. Thanks\nThe workaround for #149 was to override the assets_prefix in config, so I guess the issue can be resolved.\nI'll submit a PR with a suggestion to wiki page when the merge is released.\n. This is for sub-path (e.g. domain.com/dashing/). With sub-domain you will still run your app on \"/\", so this wouldn't be necessary I guess.\nOther than changing the assets_prefix, I also had to override the Batman.config.viewPrefix. I did this in application.coffee.\nThen, of course, update the layout with the new assets path.\nI use Rack::URLMap for running app on sub-path.\n. @joscarsson Yes, I definitely need to get around to doing that. Will try to have it out by the end of the week.\n. @davefp Finally got around to creating a small wiki page on this one.\nhttps://github.com/Shopify/dashing/wiki/How-To%3A-Run-dashing-on-a-sub-path\n. ",
    "ibiwan": "micpango, what does that look like?  if I'm hosting at mysite.com/headsup/dashboard1 would I just\nset :assets_prefix, 'headsup'\nwithin my \"configure do\" block?\n. ",
    "allisonmin": "This is what I get now after updating the rescue block:\nTwitter Error: SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed\n[33mFor the twitter widget to work, you need to put in your twitter API keys in the jobs/twitter.rb file.\\e[0m\n. Thanks @davefp, everything is working now.\n. I don't even know where the Hosts file is\n. How do I get to the host file?\n. ",
    "parthibanloganathan": "Thanks. I got this to work by starting a server using dashing start -p 3030 with config.ru set to one dashboard. I then change the default dashboard in config.ru and then start another process on another port. This seems to work, but its cumbersome. I'll try your idea and get back to you. Thanks.\n. The widgets in each dashboard are unique, so I haven't checked that out yet.\n. You can run one server process and direct the browser to the relevant dashboard (eg. http://localhost:3030/dashboard1 and http://localhost:3030/dashboard2).Then use a Chrome tab slideshow extension to switch between dashboards every so often: https://chrome.google.com/webstore/detail/tab-slideshow/loepeenhjndiclafjgoackjblfhonogb?hl=en\n. ",
    "timclipsham": "Just wondering if this approach might also cause a few issues:\n1. Would that mean you'd have two (or more) instances of the scheduler running doing the same work?\n2. Also, will push updates to widgets (a HTTP POST to /widgets/[widget-name] only update the widget in that one instance and not in both (assuming you use push updates in the first place and share the same widget across more than one dashboard).\n. +1 hope this goes through. I also had looked to resolve #13 recently - you beat me to it :)\nThe primary reason I want this functionality is so that when I deploy a new version of our dashboard, all the connected clients automatically refresh. Particularly useful when showing dashboards on several TV's.\n. +1\n```\nI applied the same change (rendering the dashboard in an iframe inside a Samsung SMARTTV app)\n\u2014\n```\nSent from Mailbox for iPhone\nOn Sun, Aug 25, 2013 at 11:46 PM, Daniel Beauchamp\nnotifications@github.com wrote:\n\nHey,\nPut this in your config.ru\nset :protection, :except => :frame_options\nIt allows cross domain embedding.\nI should add this to the default config.\nOn Sunday, August 25, 2013, mintigoYael wrote:\n\nHi,\nI created a new dashing project with a new dashing dashboard, and it works\nwithout any problems.\nI wish to present it in iframe inside html, but I can't. I tried to do it\nin many ways including using your demo link.\nIs there any way do to it?\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/199\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/Shopify/dashing/issues/199#issuecomment-23227970\n. There's a few ways to approach this but both I've suggested require getting your hands dirty with some basic Ruby and Coffeescript code. What I've written below also assumes you have some basic knowledge of how dashing jobs and widgets work.\n\n\nApproach 1\nThe simplest off the top of my head would be to get the server to send the current time to the clock widget every second.\n1. Create a job that takes the server current time and pushes it every second to the clients (using send_event)\n2. Change the clock widget to handle, format and render the datetime received from the server instead of the time taken from the local machine (the onData event might help here)\nNote that this is a very simplistic model and doesn't factor in latency from the server to the client so potentially could be a second or two out. Also if the server crashes time will appear to stop and this approach in general is pretty chatty.\nApproach 2\nMore advanced but I think is a better implementation: change the widget the make a request to the server when it loads to determine the offset of the local laptop time and the server time (also factoring in the time the request took).\n1. Modify the dashboard's sinatra app to expose a GET method that returns the current server time.\n2. Change the clock widget on the ready event to make a request to the server to receive the server time, persist the offset in the widget and then re-use the existing method of getting the time (that comes out of the box) but apply the persisted offset\nWith this model you could potentially make a web request to another 3rd party service that provides the current time instead of the dashing server. Also it might be good to schedule a request (using setInterval) to recalculate the offset to events where your operating system decides to resync the time with the time servers.\n. ",
    "Zyles": "This is really a great project. However I really need to use 2 dashboards and rotate them after X seconds.\n. ",
    "trekr5": "How do you get config.ru to specify a different dashboard?\n. Solved it!\nThere was a problem whereby the :3030 port on my vagrant machine was stuck in waiting mode. I did a vagrant reload and the ports were freed and I immediately saw data flowing through.\n. Hi Tyler,\nThanks for the tip and will do!\n. Ok this is the solution that I worked out:\n1) revert back to dashing 1.3.4\n2) in your assets/stylesheets directory, rename your jquery.gridster.css to jquery.gridster.min.css \nI use Chef as a deployment tool, so I have written code to ensure that this step is part of the building of my dashboard phase.\nHope this helps someone!\n. ",
    "mdi": "It basically allows you to mount/map multiple Sinatra apps to specific URLs. I'm trying to use Dashing with a bigger admin-type app. So the code in config.ru looks something like this:\nrun Rack::URLMap.new(\n  '/' => Rack::File.new('./public/index.html'),\n  '/resque' => Resque::Server.new,\n  '/mongo' => Genghis::Server.new,\n  '/dash' => Sinatra::Application\n)\nMy default dashboard is named dashboard, so if I change '/dash' to '/dashboard' I get a redirect loop. With \"/dash\", it redirects to the correct place, i.e. '/dashboard', but I get this error: File not found: /dashboard\n. ",
    "cjolly": "@davefp good idea. We should be good to go, here! I also included the ability to send the event to all dashboards by including {\"dashboard\": \"*\"} in the JSON payload. \n. @davefp whoops, Good catch. Fixed!\n. @davefp what are the requirements of the history file? To persist the events after starting / stopping the server, or only during runtime to service new dashboard instances? If it's both, usingDir.tmpdir` won't cut it, as it is a truly temporary storage and marked for removal after ruby stops executing, so there's no guarantee that file will be around the next time the server is started.\n. ",
    "bschreck": "Hi- it might have been Google Maps javascript errors. I sort of abandoned\nthe use of Google Maps a month ago because I was hitting the quota limits\nof the free plan (too many Geocode request per second), and since then I\nhaven't encountered the problem. There wasn't any javascript console output\nthough.\nSo what I meant was that refreshing the browser caused it to fail, but\nrestarting the backend ruby project made it come back online. I don't\nremember at this point whether it was a problem with just the initial\nstartup, and further refreshes after restarting the backend caused it to\nwork.\nOn Fri, Aug 9, 2013 at 8:43 AM, Daniel Beauchamp\nnotifications@github.comwrote:\n\nAre there javascript errors caused by Google Maps that might be preventing\nany further javascript from running? Can you provide a javascript console\nlog?\nWhen you say reloading the backend makes it work again, do you also\nrefresh the browser?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/166#issuecomment-22402875\n.\n. \n",
    "amassaad": "@bschreck any chance you had a second tab open? Or at least programmatically Google Maps was holding open something?\n I've seen issues where multiple instances have caused the back-end to stop updating the specific widgets . However in this case re-opening the browser cleared the issue. Closing for now.\n. I've just added this to the wiki @bubbajoelouis so I'll close this out. Thanks for outlining the solution! https://github.com/Shopify/dashing/wiki/Using-New-Relic-with-Dashing\n. Hello Sam, its hard to say (there are many ways to acomplish parsing that asp page => data => dashing)\nIt mostly depends on your ruby/coding skills, have you tried to find a compatible widget here?: https://github.com/Shopify/dashing/wiki/Additional-Widgets\nI often will start with their work, and built on it. \nThe pseudo-code would be (very basic)\n-pull data from conn1.aspx\n-parse columns and headers to generate an ordered list of data\n-push data to widget, the data is pushed to the widget with the same data-id\nDepending on how the data is generated the first 2 steps may be a bit different. For example perhaps the data comes from a csv or other data source, and this could just be used to push data to a widget . . .it depends on your resources :) Hope this helps!\n. Exactly, I think the best approach would be to create the connection to MongoDB with a separate app and send events to your dashboard using the API but you could also write a job similar to: https://github.com/Shopify/dashing/wiki/How-to:-send-mysql-data-to-your-widgets\n. Are you able to run other ruby or rails apps? What command are you running when you get an error?\n. Hmm, odd. What browser are you seeing this with? Since its working elsewhere, and for others, I would say this is not related to Dashing but more about the installation on the windows side or the browser accessing the server.\n. Hi @tithar our focus with gather issues is intended to look into problems with the code in Dashing and not troubleshoot installations. \nI can for sure ping a few more ideas over to solve this on your end possibly, but it doesn't seem to be an issue with the Dashing framework. \nI am thinking there is a problem with your specific installation on the Windows side. Have you been able to run other rails apps successfully? For example how are you managing gems? This may be one of the issues, and testing if another app works will point to the system libraries or your Dashing files as the next avenue to test.\nThe Dashing gem is only providing some basic framework which is used by (previously installed) libraries on your system to create the web server, render the templates, run the jobs etc.\nOnce you verify you have Ruby and Rails setup correctly this might help with some background info as they were able to resolve this by adjusting the file names in the installation: https://github.com/Shopify/dashing/issues/324 \n. Hi Michael,\nIt sounds as if perhaps the widget and job are not aligned, they need to be using the same name to get the data so perhaps something has shifted when you installed the gist, or perhaps the gist requires more setup to actually send data.\nRunning the script specifically will return that error. SCHEDULER is initialized by the Dashing framework as a constant of Rufus scheduler to run jobs. Running just the job wouldn't include that as is done on line 4 and 11 here: https://github.com/Shopify/dashing/blob/master/lib/dashing/app.rb#L11\nPerhaps adding those lines to your scriptname.rb might get it running to show what the issue is? Likely they are running fine and just not sending to a valid dashboard data-id\n. ",
    "warmfusion": "More of a hint than a solution, but the following might help: http://code.shutterstock.com/rickshaw/tutorial/introduction.html\nIt looks like you'd need to change the y_axis line formatter from tickFormat: ..formatKMBT to one of the D3 formatters (https://github.com/mbostock/d3/wiki/Time-Formatting)\nFor example:\ny_axis = new Rickshaw.Graph.Axis.Y(graph: @graph, tickFormat: d3.time.format(\"%Y-%m\"))\nbut this is a guess...\n. ",
    "mcritchlow": "Ah, sorry forgot that step. Commits are now squashed. Cheers.\n. I'd take a look at this wiki page: https://github.com/Shopify/dashing/wiki/How-To%3A-Run-dashing-on-a-sub-path\nI'm currently trying to do the same, and this page has the process pretty well documented. At least for running dashing on a subdirectory. Hope this helps!\nEdit: I should say that I agree, it would be nice to have this be a bit more DRY. But I don't know enough about Batman and Sinatra yet to make this happen. Am looking into it on my end as well.\n. ",
    "awestvik": "Thanks for the reply, yeah I was typing the command kinda from memory! Sorry about that.\nI will have a look at the path stuff, thanks! \n. So I found this:\n\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.9.1/bin\"\nfrom https://library.linode.com/frameworks/ruby-on-rails-apache/debian-6-squeeze\n\nHopefully this will get me somewhere. \n. I kinda gave up this project. Have no clue what to do...\nHere is the original article I found at norwegian broadcasting blog\nhttp://translate.google.com/translate?sl=no&tl=en&js=n&prev=_t&hl=no&ie=UTF-8&u=http%3A%2F%2Fnrkbeta.no%2F2013%2F07%2F24%2Fcontinuous-delivery-i-nrk%2F\n. ",
    "mrmanc": "I got here by searching for command not found, and referring to the executable directly did not work as I could not create a project (got error Could not find \"project\" in any of your source paths. Your current source paths are: /Users/mark/templates). I also could not start the server, despite no error appearing when I tried. However, I'm on OSX, not debian. I found that rbenv was not configured correctly, as I'd missed some of the instructions. After fixing that, uninstalling and reinstalling the dashing gem, and doing an rbenv rehash it all worked fine.\n. ",
    "andytime": "awesome work :thumbsup: \n. ",
    "addamh": "@thenayr cant wait to see your modifications. especially having multiple dashboards on one page. was about to open an issue just for brainstorming ideas for that\n. ",
    "tiefenb": "@thenayr there are any news about leap motion integration for dashing?\n. I didn't made this until yet\n2014-10-13 2:43 GMT+02:00 sbrehm notifications@github.com:\n\nDitto!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/173#issuecomment-58831291.\n. \n",
    "heratech": "@thenayr any news on the leap motion code? Looks amazing. Thanks for sharing the videos.\n. ",
    "zuzzyuk": "@thenayr hi any chance you could share that leap code?\n@thenayr @davefp I'm looking to write my own themes, but I can't help but think I'm reinventing the wheel by trying to work out what I should and shouldnt be changing. Any advice?  I want to change the page background to add a watermark of the company logo, and change the background to all widgets to be one of four corporate colours.  Thanks!\n. Nothing bad in debug at all, just pages of successful posts to both widgets (status 204). Logs just show the same as debug I believe... (?)\n. Ok I think I have resolved it but I'm not sure.  I was sending updates every second which I hadnt realised (it was an accidnetal change), regardless of whether the value had changed.  I fixed that and it seems to be more stable.  I'm not convinced but it seems happier - that said it only now gets an update every few minutes si ot will take ages to reach the point it gave up before\n. ",
    "arronhunt": "@tiefenb Any chance you're still planning on open sourcing your Leap Motion code? I'd love to try it out. \n. ",
    "mrhaiem": "Thanks David for your Quick answer and support.\nLe 1 ao\u00fbt 2013 \u00e0 18:01, David Underwood notifications@github.com a \u00e9crit :\n\nTake a look at the buzzwords.rb example job, it populates a list widget.\nSpecifically, you need to send an items array that contains hashes with label and value keys. It should end up looking a little like this:\nitems: [\n  {'label': 'Incident', 'value': 22},\n  {'label': 'Request', 'value': 1}\n]\n\u2014\nReply to this email directly or view it on GitHub.\n. Hello David,\n\nThanks for return.\nBasically, I need to implement the following example :\nhttp://jsfiddle.net/gh/get/jquery/1.9.1/highslide-software/highcharts.com/tree/master/samples/highcharts/demo/gauge-speedometer/\nbased on the following dashing configuration :\nhttps://github.com/mikechau/titanium_edge\nIssues :\nWhen I add the library : highcharts-more.js on the asset/javascript/\nand launch dashing (dashing start)\nthe dashboard is empty.\nLet me know if you need more information.\nThanks again for your support\nBest Regards\nMehdi\n2013/8/19 David Underwood notifications@github.com\n\n@mrhaiem https://github.com/mrhaiem I need more info before I can help\nyou.\nFirst up: What error are you getting? Please share any output you have.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/190#issuecomment-22895709\n.\n. Many thanks I get the error.Thx David\n\n2013/8/20 David Underwood notifications@github.com\n\nWhen you load the page, open the developer tools (instructions for Chromehttps://developers.google.com/chrome-developer-tools/and\nFireFox https://developer.mozilla.org/en-US/docs/Tools/Web_Console).\nYou should be able to see any warnings/errors emitted there. You should be\nable to fix the problem based on the info provided there.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/190#issuecomment-22948402\n.\n. Hello David,\n\nThanks for your quick answer.\nPlease find attached the both error and also my job and widget error.\nCase : Im a trying to create a basic widget based on fusionchart librairy\nsince 2 week :(\nfusionchart based on jquery :\nhttp://www.fusioncharts.com/jquery/?gclid=CMLRjKeNsLkCFY_KtAodcj8Ayw\n$(\"#chartContainer1\").insertFusionCharts({\ntype: \"Column3D\",\nwidth: \"600\",\nheight: \"300\",\ndataFormat: \"json\",\ndataSource: {\n   \"chart\":{\n      \"caption\":\"Monthly Sales Summary\",\n      \"subcaption\":\"For the first half of 2013\",\n      \"xAxisName\":\"Month\",\n      \"yAxisName\":\"Sales\",\n      \"numberPrefix\":\"$\",\n      \"bgcolor\":\"ffffff\"\n   },\n   \"data\":[\n      { \"label\":\"January\", \"value\":\"14400\" },\n      { \"label\":\"February\", \"value\":\"19600\" },\n      { \"label\":\"March\", \"value\":\"24000\" },\n      { \"label\":\"April\", \"value\":\"15700\" },\n      { \"label\":\"May\", \"value\":\"23700\" },\n      { \"label\":\"June\", \"value\":\"22800\" }\n   ],\n   \"trendlines\":[ {\n         \"line\":[{\n               \"startValue\":\"17100\",\n               \"displayValue\":\"Last year's {br} average\",\n               \"valueOnRight\":\"1\",\n               \"color\":\"999999\"\n            }]\n      }]\n      }});\njob configuration\nSCHEDULER.every '2s' do\ndata = [\n    { label: \"France\", value: \"17\" },\n    { label: \"India\", value: \"12\" },\n    { label: \"Brazil\", value: \"18\" },\n    { label: \"USA\", value: \"8\" },\n    { label: \"Australia\", value: \"10\"},\n    { label: \"Japan\", value: \"16\" },\n    { label: \"England\", value: \"11\" },\n    { label: \"Nigeria\", value: \"12\" },\n    { label: \"Italy\", value: \"8\" },\n    { label: \"China\", value: \"10\" },\n    { label: \"Canada\", value: \"19\" },\n    { label: \"Germany\", value: \"15\" },\n]\nputs data\nsend_event 'fusionchartou', { data: data }\nend\nWidget name : fusionchartou\n\n\nfusionchartou.coffee\n\n\nclass Dashing.fusionchartou extends Dashing.Widget\nready: ->\n createChart: (data) ->\ncontainer = $(@node).find('.fusionchartou-container')\nif $(container)[0]\n @chart = $(container)[0].insertFusionCharts({\n      type: \"Doughnut3D\",\n      width: \"500\",\n      height: \"350\",\n      dataFormat: \"json\"\n      dataSource: {\n            caption: \"Industrial Growth Rate\",\n            data: data\n        }\n    })\nonData: (data) ->\n    @createChart(data.series)\nFusionchartou.html\n\n\n\nFusionchartou.scss\n//\n// Sass declarations\n//\n$background-color:  #ff9618;\n//\n// Widget-text styles\n//\n.widget-fusionchartou {\nbackground-color: $background-color;\n// &.large h3 {\n  //   font-size: 65px;\n  // }\n}\n2013/9/3 David Underwood notifications@github.com\n\nWhat section of the code is failing? In the web inspector in your browser\ngrab a copy of the compiled application.js and see which lines are actually\nfailing.\nAlso, jquery.min might just be a version of jquery in which case you can\nremove it as jquery is already loaded by Dashing\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/216#issuecomment-23742873\n.\n. Awesome!! many thanks David\n\n2013/9/3 David Underwood notifications@github.com\n\nThis site should help you out: http://js2coffee.org/\nHere's what it came up with for your code:\n$(\"#chartContainer1\").insertFusionCharts\n  type: \"Column3D\"\n  width: \"600\"\n  height: \"300\"\n  dataFormat: \"json\"\n  dataSource:\n    chart:\n      caption: \"Monthly Sales Summary\"\n      subcaption: \"For the first half of 2013\"\n      xAxisName: \"Month\"\n      yAxisName: \"Sales\"\n      numberPrefix: \"$\"\n      bgcolor: \"ffffff\"\ndata: [\n  label: \"January\"\n  value: \"14400\"\n,\n  label: \"February\"\n  value: \"19600\"\n,\n  label: \"March\"\n  value: \"24000\"\n,\n  label: \"April\"\n  value: \"15700\"\n,\n  label: \"May\"\n  value: \"23700\"\n,\n  label: \"June\"\n  value: \"22800\"\n]\ntrendlines: [line: [\n  startValue: \"17100\"\n  displayValue: \"Last year's {br} average\"\n  valueOnRight: \"1\"\n  color: \"999999\"\n]]\nThe only thing that jumps out at me is that instead of using the jquery\nselector to grab the widget by ID in the first line you can get it directly\nusing @node. The graph widget does this:\nhttps://github.com/Shopify/dashing/blob/master/templates/project/widgets/graph/graph.coffee#L10\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/217#issuecomment-23742643\n.\n. \n",
    "drubin": "It would be nice to by default strip all html and code from API values. and allow widges to enable it if they would like on a user basis. \nSane secure defaults :)\n. @pushmatrix Thanks. It might be good to update the readme/wiki about this option.\n. @pushmatrix perfect thanks!!\n. ",
    "jondlm": "Agreed, that makes sense to me also. There are probably only a handful of cases where you would want to permit arbitrary HTML to be passed in.\n. ",
    "Sgoettschkes": "I am including the job for the error message above:\n```\nrequire 'rest_client'\nrequire 'json'\ncurrent_facebookfriends = []\nSCHEDULER.every '1m', :first_in => 0 do |job|\n    if current_facebookfriends.length > 10 then\n        current_facebookfriends.shift\n    end\nresponse = RestClient.get 'https://graph.facebook.com/519402844785502', {:params => {'fields' => 'likes'}}\n\ntime = Time.now.hour * 3600 + Time.now.min * 60\nlikes = JSON.parse(response.to_str)[\"likes\"]\n\ncurrent_facebookfriends << { x: time, y: likes }\n\nsend_event('facebookfriends', { points: current_facebookfriends })\n\nend\n```\nAs said, the error message appears for all for jobs I have running, without changing the jobs or the data. And they are running fine on heroku too.\nIf you need anything, please let me know. Thanks for your help!\n. I forgot to mention that if I try to open the dashboard in the browser, the following error message is printed to STDERR and dashing is crashing:\n/var/lib/gems/1.9.1/gems/dashing-1.2.0/lib/dashing.rb:138:in `latest_events': undefined method `inject' for false:FalseClass (NoMethodError)\n        from /var/lib/gems/1.9.1/gems/dashing-1.2.0/lib/dashing.rb:53:in `block (2 levels) in <top (required)>'\n        from /var/lib/gems/1.9.1/gems/sinatra-1.4.3/lib/sinatra/base.rb:430:in `block (2 levels) in stream'\n        from /var/lib/gems/1.9.1/gems/sinatra-1.4.3/lib/sinatra/base.rb:620:in `with_params'\n        from /var/lib/gems/1.9.1/gems/sinatra-1.4.3/lib/sinatra/base.rb:430:in `block in stream'\n        from /var/lib/gems/1.9.1/gems/sinatra-1.4.3/lib/sinatra/base.rb:396:in `call'\n        from /var/lib/gems/1.9.1/gems/sinatra-1.4.3/lib/sinatra/base.rb:396:in `block in each'\n        from /var/lib/gems/1.9.1/gems/eventmachine-1.0.3/lib/eventmachine.rb:1037:in `call'\n        from /var/lib/gems/1.9.1/gems/eventmachine-1.0.3/lib/eventmachine.rb:1037:in `block in spawn_threadpool\n. Normally I'm starting dashing with dashing start. I tried bundle exec dashing start but without any changes. The errors persist. I also checked what's installed through gem, and dashing was installed both in version 1.1.0 and 1.2.0. I removed 1.1.0 but this didn't change anything either.\n. I thought about this. I'll play around a bit and get back to you if I find a solution.\n. It's funy. On my laptop at home everything works even though I am using virtualbox with vagrant so the environment should be exactly the same. It's confusing!\n. It works! Thank you very much @maakuth! I never thought about this, but of course the history.yml is ignored by git so it's different on my dev envs and the prod env.\nHere is the content of my history.yml which seems to cause the problems:\n```\n--- false\n...\n```\nAnyway, thanks again @davefp and @maakuth!\n. ",
    "maakuth": "I am seeing this same behaviour, it works with my Ubuntu 12.04 development virtual machine but not on the server that runs the same Ubuntu version. It happens on the server with both ruby 1.9.3 and with 2.0.0, but doesn't happen with either of them in my development VM.\n. It went away by deleting history.yml though. Might it work with @Sgoettschkes as well?\n. ",
    "petehamilton": "We use Redis for persisting storage in Dashing, but I temporarily switched to the history YML to see how it might work as an alternative.\nI got exactly the same error, fixed in the same way as @Sgoettschkes (deleting the history file), my history.yml contained:\n--- false\n...\n. ",
    "rody": "Same for me, deleting the history file did the work. Thanks guys ! \n. ",
    "bennmapes": "I had the same problem, deleting the history.yaml (with the same contents of  @Sgoettschkes's) fixed it.\nThanks!\n. ",
    "karledurante": "same problem, deleting history.yml worked.\n. ",
    "ksk100": "Same problem and deleting history also worked.\nBetter error reporting would be great.  I'm someone who only uses Github, Ruby and everything else just for dashing, so I had little idea how to solve this problem.\n. ",
    "henrik242": "In https://github.com/Shopify/dashing/issues/323 it says that we can specify Sinatra::Application.settings.history.clear in config.ru to fix this. I get \"undefined method\" when trying, so that doesn't seem to be a workaround...\n. I get config.ru:26:inblock in ': undefined method clear' for false:FalseClass (NoMethodError) when trying to use  Sinatra::Application.settings.history.clear.  Other Sinatra methods (e.g. Sinatra::Application.sprockets) work fine...\n. ",
    "marcin-at-taulia": "Thanks @maakuth ! You saved my day.\n. ",
    "jrboden1": "Just ran into this issue as well. However, deleting the history.yml file isn't correcting it for me. I find it weird how after changing nothing but the .erb files, I get this message. The error is really frustrating.\n. My formatting is completey messed up, however I only had one of the files mentioned above in my stylesheets folder. I deleted it and it messed it up more. So I'm stuck. Any other suggestions on how to fix this?\n. ",
    "nadarashwin": "Worked for me as well, but strange thing is my history.yml was complete blank but the moment i got it deleted everything started working fine. ports below 1024 can only be used a root user. some ports below 1024 are specifically dedicated to some apps like apache. in case if you wanna use, you can use sudo. ",
    "poalcospe": "Worked for me as well thanks :+1: . Thanks for your quick reply :) \nI had a look at the issue #735 , and I tried to be as complient as possible with the environment used to resolve this issue. So first, I have downgraded 'roo' from 2.7 to 2.1 for being able tu run gem 'roo', '~> 2.1.0' in my Gemfile. Then I've modified the sample.rb below: \n``` ruby\nrequire 'roo'\nrequire 'roo-xls'\nSCHEDULER.every '2s', :first_in => 0 do |job|\nfile_path = \"#{Dir.pwd}/spreadsheet.xls\"\ndef fetch_spreadsheet_data(path)\n  s = Roo::Excel.new(path)\n  send_event('valuation',   { current: s.cell(1, 2) })\nend\nmodule Handler\n  def file_modified\n    fetch_spreadsheet_data(path)\n  end\nend\n```\nI don't know which one of both modification resolved this, but anyway, I don't have any exception running 'dashing start' now. \nHowever, nothing is displayed in my dashboard. I have the following code in my sampletv.erb:\n<li data-row=\"1\" data-col=\"7\" data-sizex=\"1\" data-sizey=\"1\">\n      <div data-id=\"valuation\" data-view=\"Number\" data-title=\"Current Valuation\" data-prefix=\"$\"></div>\n</li>\nAm I doing something wrong with this part ? . No it's not the only widget displayed on my dashoard. Here is my complete sampletv.erb:\n```html\n\n$(function() {\n  // These settings override the defaults set in application.coffee. You can do this on a per dashboard basis.\n   Dashing.gridsterLayout('[{\"col\":2,\"row\":1,\"size_x\":1,\"size_y\":1},{\"col\":1,\"row\":1,\"size_x\":0,\"size_y\":0},{\"col\":3,\"row\":1,\"size_x\":1,\"size_y\":1},{\"col\":4,\"row\":1,\"size_x\":1,\"size_y\":1},{\"col\":1,\"row\":2,\"size_x\":1,\"size_y\":1},{\"col\":2,\"row\":2,\"size_x\":2,\"size_y\":1},{\"col\":4,\"row\":2,\"size_x\":1,\"size_y\":1}]')\n  Dashing.widget_base_dimensions = [370, 340]\n  Dashing.numColumns = 5\n});\n\n<% content_for :title do %>1080p dashboard<% end %>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n```\nI am running dashing; by the way, what is smashing exactly compare to dashing ?. Ok, I know why it didn't display any value. I've forgotten one line in the .rb file. Now it's \"almost\" good. \nI can display values but only with line under 9. For exemple, s.cell(8,2,s.sheets[1]) will work but s.cell(9,2,s.sheets[1]) won't. The table has 11 lines, so basically I can display values for lines between 1 and 8, but not between 9 and 11. \nDo you knwo if there is any limitation regarding this ?. Looking for the same tooltip. Any solution found ?. ",
    "evignaux": "Many thanks, it worked for me too ;). ",
    "routetonull": "Thank you for the answer. I got it working with these values:\nDashing.widget_base_dimensions = [290, 270]\n  Dashing.numColumns = 5\nThe problem now is only the \"meter\" widget don't get the correct size (height) and overlaps with the other widgets in the same column. \"List\", \"Text\" and \"Number\" have the correct size and fit well. Is there a way to fix this?\n\nI don't know Ruby, I'm using bash+curl and python to send data to the widgets.\nThank you.\n. setting data-width to 100 reduces the size of the circle but not of the widget itself:\n\n. Thank you for the answers.\n@derwin12 where do you exactly put the .widget-list sintax inside the erb file? It works for me if I set it in the /widgets/list/list.scss file but not in the .erb itself.\nIn my opinion it would be a better choice to set the font size per-list instead of per-widget type. In my dashboard some lists have many items other just a few so different font sizes would fit.\nI tried to put this above the  in the erb file but it doesn't work:\n.widget-list {\nli { \n  margin-bottom: 5px;\n  font-size: 4px; \n}\nI'm sorry if my questions look too basic but I quite new to this sintax.\nThank you @davefp for the kind support.\n. ",
    "pablo808": "Thanks. I am not familiar on how to activate a duplicated widget.  I made a copy of the widget directory from list to listK. \nIn the .erb file I added:\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"2\">\n     <div data-id=\"status\" data-view=\"ListK\" data-unordered=\"true\" data-title=\"Status\" data-moreinfo=\"Status Report\"></div>\n  </li>\nThis is a great project and thanks for the support.\n. I made the changes by making a copy of the list widget directory to a new directory called listK, then renaming all the files within it (as above), activated the new widget by using `data-view=\"ListK\" in the .erb file, then restarted dashing but no luck. Widget shows a blank space.. \nI edited the original list widget's list.html and applied the shortenedNumber filter, and it works.\nI guess my issue is not able to duplicate or activate a new widget.\nThanks.\n. Apologies, had to reopen. No luck.\nI noticed in the console it's putting an underscore even though, there was no underscore in the edits I made to the widget.\naaa.bbb.ccc.ddd - - [14/Aug/2013 15:58:11] \"GET /views/list.html HTTP/1.1\" 200 493 0.0009\naaa.bbb.ccc.ddd - - [14/Aug/2013 15:58:11] \"GET /views/list_k.html HTTP/1.1\" 200 - 0.0010\nThanks.\n. Thank you.\n. Apologies for re-opening this issue I'm having.  The widget display's K's but there's no styling.\n\n. This example got me started:\nhttp://wiki.manageditby.us/2013/08/09/dashing-labtech-agent-count-via-meter-widget/\n. Many thanks. I tried the script but on my system I get the following error:\n/usr/local/rvm/gems/ruby-1.9.3-p448@global/gems/eventmachine-1.0.3/lib/rubyeventmachine.so: [BUG] Segmentation fault\nruby 1.8.7 (2011-06-30 patchlevel 352) [x86_64-linux]\ndashing start works fine when I'm logged into my account but not from the script.\nAny ideas?\nThanks.\n. Thanks for the response. I was hoping that would solve it but no luck.\n/usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:76:in `setup': undefined method `name' for #<Array:0x7f92166813e8> (NoMethodError)\n        from /usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `map'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:76:in `each'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:76:in `map'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:76:in `setup'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:110:in `check'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems-bundler/noexec.rb:117\n        from /usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require'\n        from /usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/rubygems-bundler-1.4.0/lib/rubygems_executable_plugin.rb:4\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/executable-hooks-1.2.6/lib/executable-hooks/hooks.rb:50:in `call'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/executable-hooks-1.2.6/lib/executable-hooks/hooks.rb:50:in `run'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/executable-hooks-1.2.6/lib/executable-hooks/hooks.rb:49:in `each'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/gems/executable-hooks-1.2.6/lib/executable-hooks/hooks.rb:49:in `run'\n        from /usr/local/rvm/gems/ruby-1.9.3-p448/bin/ruby_executable_hooks:10\nIs this similar to yours?\nexport PATH=/usr/local/rvm/gems/ruby-1.9.3-p448/bin:$PATH\nGEM_HOME=/usr/local/rvm/gems/ruby-1.9.3-p448\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\n. ",
    "rafalyesware": "I think your CSS needs to use a list-k class (vs. the original listK or possibly expected-based-on-filenames list_k), then styling should be fine.\n. ",
    "theigl": "+1\n. I have exactly the same effects as #196.\n. I just found the issue. Version 2.0.0 of execjs was released this week and is either broken or not compatible with dashing.\nAdding this to my Gemfile fixed the problem:\ngem 'execjs', '1.4.0'\n. @noahwallach: does your application.js have the same broken content as described in my referenced issue?\n. ",
    "ledesma": "+1\n. ",
    "ducky427": "+1\n. ",
    "padi": "+1\n. ",
    "arvindsankaran": "hi @davefp your solution initially didnt work for me but when I changed it this way, it started working:\nmyWidgetId {\ndiv {\n    font-size: 12px; /* or whatever */\n  }\n}\n. ",
    "pal": "You need to remove the leading identifier (in this case data:) that prepends the JSON string.\nTry:\nJSON.parse(s['na_error_meter'].sub(/^[\\w:]*/,\"\"))\nOr, if you feel quesy about not removing the space as well: JSON.parse(s['na_error_meter'].sub(/^[\\w\\s:]*/,\"\"))\n. ",
    "hasanoa": "Hi,\nIf I have 3 different graphs with different max values. How can I assign differrent yMax values? \nSorry about my English,\nRegards,\nhasanoa\n. Hi again,\nI created different y-scaled graphs with creating different graph-widgets: graph (max:1600), graph2 (max:12000), graph3 (max 5000000000). Problem solved...\nMeters' min-max values are assigned with data-min, data-max values in erb file. But graphs' are not, are they?\n. ",
    "bgood-trada": "I've tried three different distros (all 64 bit).  Linux Mint 15, Xubuntu 13.04, Slackware 14.  I've tested at least Firefox 21-23 and probably a couple earlier iterations of firefox.\nIn chrome, the network counter climbs constantly on this entry:\nhttp://i.imgur.com/P0XKxhH.png\nHovering over it shows:\n(anonymous function)     @  application.js:13690\n(anonymous function)     @  application.js:13728\nFor each cycle through a dashboard, the content size of this entry climbs up to 380kb-500kb.  I can't figure out where so much bandwidth is going.\nIn chrome the dashboard seems to initially load ~180kb and then the data downloaded slowly creeps up to that 380-500 range until the browser cycles to the next dashboard.\n. We're using sinatra_cyclist (http://www.rubydoc.info/gems/sinatra_cyclist/frames) to cycle through eight dashboards.  If I try to open all eight dashboards at once to cycle through the tabs, only 5 dashboard pages open, the 6th opens partially, the 7th and 8th just hang.  Tried in both chrome and firefox.  None of the widgets seem to be data heavy.\n. ",
    "junkyard0": "mrhaiem, do you mind posting the error you received and what you did to resolve it? I'm having an issue with my highcharts bar graphs not displaying bars. I was wondering if my situation is similar to the one you were experiencing. I didn't see any noticeable errors when the dashboard page was loaded.\n. It appears there was an issue with the animation of the Highcharts widgets. The \"easing: 'easeOutBounce'\" animation was causing the bars not to display.\n. ",
    "adiabuk": "I had the same problem and identified by @davefp's solution above.  There error in my case was Uncaught Error: Sprockets::EncodingError:  has a invalid UTF-8 byte sequence.  I fixed by using vim to convert to utf8.\n. +1 I'm occasionally seeing this too - any updates?\nOnce it starts nothing gets updated and the onData/ready functions in the widgets don't appear to be getting executed anymore.\n. ",
    "jcamelon": "This is not just a windows 7 browser issue.  I was seeing the same thing on OS X 10.8.5 w/ Chrome 31, FF 25 & Safari 6.1 \n. OK here is some more info that is weird.  For the sample app on my mac, nothing refreshes. \nOn a Linux VM it is fine. \n. This looks like a duplicate of https://github.com/Shopify/dashing/issues/119 \n. Switching off of using dashing/thin to using webrick made everything work again. \n. ",
    "TimSmith714": "I switched to using puma and it started working immediately\nI did change the port to 3030 so it worked with the same link as previous attempts\n. I use Roo as well.\nI don't keep all the spreadsheets in the same folder because some of them are in shares so I can edit them from another machine. I do make sure that I use the full path for the files\nthus\n  ss = Roo::Excel.new(\"/home/userfolder/statsFolder/stats.xls\")\n  send_event 'thisTotal', { current: ss.cell(2,2,ss.sheets[0]) }\nIt could be a permissions issue\nHope that's helpful - it might be helpful if you could attach some of the code you've written\nTim\n. ",
    "stuartstevenson": "using webrick as recommended by @Norvares worked for us\n. ",
    "netsloh": "Hi,\nI had animation problems on iOS and using puma did the trick. \nI'm now trying to start dashing on startup using puma but that just won't work.\nWhen I start puma with --deamon option the dashing jobs don't work anymore.\nAny suggestions or startup scripts? Thanks in advance! \nbtw: I'm running raspbian\n. ",
    "JC1738": "i experienced this same problem using a docker image and the default dashing project.  Using rackup -p 3030 -s webrick fixed the issue. \n. ",
    "kaburkett": "I was experiencing issues I perceived to be windows based. I have Ubuntu installed on Windows 10 via default Windows features... I was able to see apache over port 80 fine, but every time I tried to connect on any port configured with thin via ruby on my ubuntu instance- the windows browser would time out (firefox, chrome, ie, didnt matter). I tried so many troubleshooting methods...\nI found this thread and decided to give webrick a shot instead of thin and it's working like a charm now.\nThanks all. ",
    "kirankgollakota": "@theigl I'm having the same problem on my end; altering the Gemfile to use version 1.4.0 of execjs helps, though I'm guessing there's a different underlying issue here \n. ",
    "tombell": "execjs 2.0.0 requires Ruby 2.0.0 to function correctly.\n. ",
    "seixasfelipe": "+1 \nI got the same error today starting the sample app and I was using ruby 1.9.3. \nSo if execjs only works well with Ruby 2.0.0, what could we do to avoid this kind of problem to other people that doesn't know this problem with ruby versions and execjs?\nCould we fix execjs of dashing gem to 1.4? Or at least update this sample template to it? Just to avoid future problems.\n. ",
    "garyjyao": "+1\n. ",
    "andrewwatson": "\"updating\" to 1.4 fixed this for me. \n. ",
    "johnavance": "Same behavior after bundle update installed execjs 2.0.1\nFixed by adding to Gemfile\ngem 'execjs', '= 1.4.0'\nThanks guys.\nEDIT: I should add that I'm using Dashing 1.2.0 release and not HEAD.\n. ",
    "divan-moller": "Tried with execjs 2.0.1 and hit the same issue. Had to reference 1.4.0 on both a clean Windows and OSX install.\n. See a similar request was posted https://github.com/Shopify/dashing/issues/11 although not for this specific masonry library but rather a responsive dashboard. Another reason I would like to see something like isoptope or a similar masonry layout used is when a widget is hidden/filtered the dashboard layout is dynamic. If you hide a widget with css in gridster,you have an empty spot in the dashboard where the widget use to be. I would like to show/hide widgets sometimes based on their status.\n. There was definitely an issue, the samples were down earlier in the week, seems to be resolved now.\n. To help minimise the bandwidth consumed could gzip compression be enabled?\nChrome suggested in the audit:\nevents could save ~59.7\u2009MB (this was for a dashboard that ran for ten minutes)\n. ",
    "talsalmona": "Same here. Works well with execjs 1.4.0 but not with 2.0.2\n. ",
    "kaltinril": "Is this still an issue?  Was it ever resolved?  Can we remove this from the gem file configuration?\n. The inherit design appears to be, to change the data-sizex and data-sizey values in the dashboard.erb file for the specific items you want to change.\n. As long as you want it after every single line (Including the last line) its pretty simple.\nin your dashboard directory, edit list.html:\n- /dashboard/widgets/list/list.html\nAdd the  just before the List Item ending \n. One approach is to dynamically build up the yourdashboard.erb file (located in the dashboards directory) by adding new LI and DIV elements.  You could do this many ways, but one way would be from a yourdashboard.rb file (located in the jobs directory).\nThen in the layout.erb file (Located in the dashboards directory),  you could add in a refresh HTML code to have it refresh the HTML so that new widgets added will show up without requiring a user to hit F5 on their keyboard to refresh the page to see the new widget.  This is a fairly low tech way, there are probably better alternatives, but if no one else replies at least you have 1 option.\nCode to add to Layout.erb in the  section:\n<meta http-equiv=\"refresh\" content=\"60\" />\n. Not sure what you mean @tylermauthe .  I did exactly as I stated and I've written code that dynamically builds up the dashboard based on comma delimited text files that are parsed.  Each one is assumed to be a widget, and the type and contents are inside the file.  This works great for us.\nI'm not sure what you mean by Persistence layer?\n. Ah gotcha thanks @tylermauthe , that makes sense.  I must have missed that part of the original request :)\nWe wanted a way to be able to \"fire and forget\", and not require development of the dashboard whenever we wanted a new widget to be displayed.\nSo we wrote code to dynamically build up the erb file, based on the contents of files in a directory.  (I will have to look into HAML/ERB).  The files can be dropped by anything (manually, via automation tools external to dashing, etc.  This means that dashing has no fingers or permissions into databases, applications, processes etc.\nOur automation tool generates files everytime specific automations run.  The file contains the details for the widget, along with the data.\nThe rb file parses the files and creates the .erb file.\nAgain, this is just what worked well for us so we could setup Dashing, and never touch it again.\n. Stick your code into a .rb file in the jobs directory and call send_event passing the value to the object.\nsend_event('uniqueDataIdName', {text:$revision})\nNOTE: You will need to bounce your DASHING (thin) server so that the new .rb code runs.\nuniqueDataIdName has to match the value set in the .erb file that contains the data-id/widget instance, so the Div row.\nExample code for adding the text widget.\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n      <div data-id=\"uniqueDataIdName\" data-view=\"Text\" data-title=\"Git Version\" data-text=\"0\" data-moreinfo=\"anything you want to say\"></div>\n    </li>\n. .rb files are running (usually) all the time in the scheduler (rufus-scheduler), and wouldn't be looking to accept input as a pass in.\nOne way would be to perhaps write to a data or intermediate file to \"pass\" the value.  You could setup your .rb file to check that file for parameter changes, then do its thing that way.\n. Thank you for the suggestion Kevster.\nNot that easy:\nI wish it was that easy.I already tried multiple different ways.  I am asking here for an official Ruby, Dashing, or Thin server methodology for running the process as a service, so a user is not required to remain logged in.  This seems like a core part of a dashboard tool, to be always running.\nWhy won't a straight SC command work?\nYeah, I can ADD any command I want to the Windows Services with that:\n- sc create fakeService binPath= \"anyrandomtext\"\nHowever, that doesn't mean you can start the service once you've created it.  All sorts of errors come up. if you try to run dashing start, or create a batch file and run that.  Or call cmd.exe and then dashing or your batch file.  None of them work because they are not designed to interact with the windows services.\nIf you give me an exact command that you know works, I will gladly use it.\nWhat I've tried:\n\nsc create testService binPath= \"dashing start\"\nsc create testService2 binPath= \"start.bat\nsc create testService3 binPath= \"cmd.exe /C start.bat\"\nsc create testService4 binPath= \"cmd.exe /C ruby.exe dashing start\"\nsc create testService4 binPath= \"cmd.exe /C ruby.exe dashing.rb start\"    (After renaming dashing to add .rb to the file)\n\nAlternatives:\nThe only alternative is to install and run something like NSSM (Non-Sucking Service Manager), or a batch to exe converter.  Which I would prefer not to have to do.\n. Ah, alright, thank you, I'll play with the routes and see if I can get it to do all subfolders, recursively.\n. I tried adding the suggestion to the config.ru and editing the app.rb file, but all it seems to do is add a folder path to the URL, and screw up the data so the data is no longer showing for the widgets.\nI do not know anything about sinatra, and Ruby is still pretty foreign to me as well.\nThe page used to be served like this:   site:3030/simple\nNow the page is served like this:  site:3030/dashboards/simple/simple\nSeems like it just added folders to the URL, but thats it.\nAlso, it destroyed the Data.\n. Sorry I edited dashing.rb apparently.  However, trying app.rb (Which is in a different gem sub folder for ruby), doesn't seem to work either.\nThere are 2 folders:\nc:\\ruby193\\lib\\ruby\\gems\\1.9.1\\gems\\dashing-1.3.4\\lib\\dashing\\app.rb\nc:\\ruby193\\lib\\ruby\\gems\\1.9.1\\gems\\dashing-1.3.1\\lib\\dashing.rb\n. I tried y our code Floppy and can get it most of the way working.   However, it says \"Drats!....\" inside each widget.  Indicating that even though it is correctly parsing the subdirectories, its somehow not correctly rendering the widgets.\n. ",
    "mahoekst": "Any workaround? Can't get it to work. exejs 2.0.2 is installed. No clue how to change this to 1.4.0\n. Using websockets instead of sse's will that make it work on IE?\nSent from Windows Mail\nFrom: Daniel Beauchampmailto:notifications@github.com\nSent: ?Thursday?, ?January? ?22?, ?2015 ?7?:?24? ?AM\nTo: Shopify/dashingmailto:dashing@noreply.github.com\nThanks for your work on this.\nThe goal for Dashing is to be as simple and readable as possible. That's why SSEs were originally favoured over websockets, because they are a ton simpler.\nI want to keep the base installation minimalistic, so I suggest we leave this PR here for people who are curious about adding websockets (or other engine) support to Dashing.\n\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/pull/505#issuecomment-71036841.\n. ",
    "sej7278": "just noticed this today\non raspbian wheezy we have execjs 2.0.2 and ruby 1.9.3, \"updating\" to 1.4.0 doesn't work anymore as dashing seems to require 2.0.2\n```\n$ dashing start\nYou have requested:\n  execjs = 1.4.0\nThe bundle currently has execjs locked at 2.0.2.\nTry running bundle update execjs\nRun bundle install to install missing gems.\n$ bundle update execjs\nFetching gem metadata from https://rubygems.org/...........\nFetching gem metadata from https://rubygems.org/..\nBundler could not find compatible versions for gem \"execjs\":\n  In Gemfile:\n    dashing (>= 0) ruby depends on\n      execjs (~> 2.0.2) ruby\nexecjs (1.4.0)\n\n```\n. ",
    "azak-azkaran": "same as #656\nshould be fixed by installing node.js and rebundling\n. The installation of Node.js fixed it for me too.\nBut you have to rebundel it\n. ",
    "youatbanjo": "I ended up define variables in a file  jobs/variable.rb and add require_relative('variable.rb') to all jobs.\nIt works for now. \nBut still, are there any better ways other than this?\n. My way was kinda hacky since the variable.rb file is not actually a job. It doesn't call the scheduler. All is does is declaring the global vars.\nLet me know if this works or you find other methods around this.\n. ",
    "superbhaal": "Hi,\nI'm trying to do the same thing.\nI try your method without success...\nCan you give me more information about your 'variable.rb' file?\nDid you let the SHEDULER on like the other jobs?\nDid you find another method?\nI want to store paths in globals variables.\nThx\n. ",
    "bettse": "I ran into a very similar problem trying with displaying bus arrival times in a list.  I found a solution that worked well for me, and may help in your case (or others who find this issue as I did):\n1. added livestampjs to assets/javascript/\n2. added //= require moment.min.js to livestamp.min.js (as its first line) to fix console error about moment not being defined\n3. added <span class=\"timestamp\" data-bind-data-livestamp=\"item.timestamp\"></span> to list/list.html inside both foreach-item divs.  \nThe magic is the batmanjs data-bind-data-livestamp which creates a data-livestamp property as livestampjs wants.\n. ",
    "mintigoYael": "Thanks a lot! it works like a magic!\n. ",
    "willjohnson": "Ahh, I can see them on that screen. That must be the problem.\nThanks for the response.\n. ",
    "iancrowther": "/Library/Ruby/Gems/2.0.0/gems/dashing-1.3.4/lib/dashing/cli.rb:1:in require': cannot load such file -- thor (LoadError)\n    from /Library/Ruby/Gems/2.0.0/gems/dashing-1.3.4/lib/dashing/cli.rb:1:in'\n    from /Library/Ruby/Gems/2.0.0/gems/dashing-1.3.4/bin/dashing:6:in require'\n    from /Library/Ruby/Gems/2.0.0/gems/dashing-1.3.4/bin/dashing:6:in'\n    from /usr/bin/dashing:23:in load'\n    from /usr/bin/dashing:23:in'\n. i installed thor\n. i forgotten tbh! if it helps, my gemfile looks like:\nsource 'https://rubygems.org'\ngem 'rake'\ngem 'dashing'\ngem 'json', '~> 1.7.7'\ngem 'dotenv'\ngem 'octokit'\ngem 'faraday', '~> 0.9'\ngem 'faraday-http-cache'\ngem 'activesupport', '~> 3.0.0'\ngem 'rspec'\ngem 'rspec-mocks'\ngem \"sentry-raven\", :git => \"https://github.com/getsentry/raven-ruby.git\"\ngem 'typhoeus'\ngem 'sinatra_cyclist'\ngem 'ruby-trello'\n. one of the dependancies required thor i think.. make note of \"gem 'json', '~> 1.7.7'\"\n. I had this too - thats the json version!  you have to be persistent, I did.. it was v.frustrating\n. ",
    "VanNayer": "@iancrowther what do you mean by \"i installed thor\" ?\nI did:\ngem install thor\nBut stilll\ndashing start\n/usr/local/rvm/gems/ruby-2.1.2/gems/dashing-1.3.4/lib/dashing/cli.rb:1:in require': cannot load such file -- thor (LoadError)\n    from /usr/local/rvm/gems/ruby-2.1.2/gems/dashing-1.3.4/lib/dashing/cli.rb:1:in'\n    from /usr/local/rvm/gems/ruby-2.1.2/gems/dashing-1.3.4/bin/dashing:6:in require'\n    from /usr/local/rvm/gems/ruby-2.1.2/gems/dashing-1.3.4/bin/dashing:6:in'\n    from /usr/local/rvm/gems/ruby-2.1.2/bin/dashing:23:in load'\n    from /usr/local/rvm/gems/ruby-2.1.2/bin/dashing:23:in'\n    from /usr/local/rvm/gems/ruby-2.1.2/bin/ruby_executable_hooks:15:in eval'\n    from /usr/local/rvm/gems/ruby-2.1.2/bin/ruby_executable_hooks:15:in'\n. Grrrrr... \nThanks for the try :) but there is no way...\nDoes anyone know which procedure I could follow to investigate? I am lost...\nThanks\nhere what I have with your gemfile:\ndashing start\n/usr/local/rvm/gems/ruby-1.9.3-p547/gems/backports-3.6.0/lib/backports/tools.rb:343:in require': cannot load such file -- JSON (LoadError)\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/backports-3.6.0/lib/backports/tools.rb:343:inrequire_with_backports'\n    from /opt/find-and-connect-dashboard/lib/graphite.rb:2:in <top (required)>'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/backports-3.6.0/lib/backports/tools.rb:343:inrequire'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/backports-3.6.0/lib/backports/tools.rb:343:in require_with_backports'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing/app.rb:157:inblock in require_glob'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing/app.rb:156:in each'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing/app.rb:156:inrequire_glob'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing/app.rb:166:in <top (required)>'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing.rb:3:inrequire'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/dashing-1.3.4/lib/dashing.rb:3:in <top (required)>'\n    from config.ru:1:inrequire'\n    from config.ru:1:in block in <main>'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/rack-1.5.2/lib/rack/builder.rb:55:ininstance_eval'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/rack-1.5.2/lib/rack/builder.rb:55:in initialize'\n    from config.ru:1:innew'\n    from config.ru:1:in <main>'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:ineval'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:in load'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/thin/controllers/controller.rb:182:inload_rackup_config'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/thin/controllers/controller.rb:72:in start'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/thin/runner.rb:199:inrun_command'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/lib/thin/runner.rb:155:in run!'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/gems/thin-1.6.2/bin/thin:6:in'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/bin/thin:23:in load'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/bin/thin:23:in'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/bin/ruby_executable_hooks:15:in eval'\n    from /usr/local/rvm/gems/ruby-1.9.3-p547/bin/ruby_executable_hooks:15:in'\n. I have to say I am stuck I don't know what to do...\n. Ok... so I fixed my issue by changing the graphite.rb file:\n-require \"JSON\"\n+require 'json'\nAlso I use:\nbundle install --path vendor\nand\nbundle exec dashing start\n. ",
    "keithrbennett": "I had this problem with a different gem, and it turned out the the directory $GEM_HOME/gems/my_gem was empty!  I fixed it by doing a 'gem pristine my_gem'.\n. ",
    "pablomusumeci": "Hi there, I have the same problem to! \n@mikechau could you figure something out?\nthanks!\n. ",
    "smacbeth": "Perfect.  I just had to restart dashing.  I added the new job file, but didn't restart the dashing service.  Thanks for your help.\n. ",
    "InTheScript": "No widgets appearing at all\n. Ok discovered the solution :+1: \nThe current dashing home page lists Ruby 1.9 as the supported version however some functionality is only working on Ruby 2.0. \nSo for me the solution (on Windows 7) was to un-install Ruby v 1.9 (ensuring the PATH environment variables were cleared), then to re-install (using rails installer) which also sorts out issues with installing the DevKit. The link to the latest version of Rails installer is https://github.com/railsinstaller/railsinstaller-windows/releases/download/3.0.0-alpha.2/railsinstaller-3.0.0.exe. \nThen you simply do a fresh install of dashing gem install dashing, you'll be prompted to also install the 'tzinfo-data gem' -  gem install tzinfo-data which is recommended... then simply create a new project dashing new YOUR_PROJECT then cd in,  bundle, and get off to a dashing start.\nHope this helps any one else with this issue on Windows ;)\n. ",
    "JBot": "@RajaCD Thanks for your advise. Installing nodejs package on ubuntu solve the issue !\n. ",
    "joscarsson": "@micpango did you ever find the time to write that wiki post? I would also be interested on how to run this on sub path.\n. Thanks! Great!\n. ",
    "ematthews": "This is very minor, but I would add this to your page of instructions:\nUpdate images path by editing widgets/image/image.html to:\n<img data-bind-src=\"image | prepend '<sub path>/assets'\" data-bind-width=\"width\"/>\n. I ran into this issue myself today and was losing my mind :).  It turns out that my environment is almost identical to yours and here's what I found:\ngem which dashing\n/opt/rh/ruby193/root/usr/local/share/gems/gems/dashing-1.3.2/lib/dashing.rb\nI then perused through the files in /opt/rh/ruby193/root/usr/local/share/gems/gems/dashing-1.3.2/ until I saw this in \n/opt/rh/ruby193/root/usr/local/share/gems/gems/dashing-1.3.2/bin/dashing:\ndef start(*args)\n      port_option = args.include?('-p')? '' : ' -p 3030'\n      args = args.join(\" \")\n      command = \"bundle exec thin -R config.ru start #{port_option} #{args}\"\nI then tried to run it from the command line and sure enough:\n$ bundle exec thin -R config.ru start -p 3030\nUnknown switches '-R, -p'\nI'm sure that someone can provide a cleaner fix, but the solution in my case was to edit the command line to include quotes around the arguments being passed to bundle exec.  I know that this shouldn't be required, but it seems like something in the environment enable script is gobbling up the parameters before it reaches the thin app.\nOriginal Line:\ncommand = \"bundle exec thin -R config.ru start #{port_option} #{args}\"\nUpdated Line that works in my environment:\ncommand = \"bundle exec \\\"thin -R config.ru start #{port_option} #{args}\\\"\"\n. ",
    "nguyenchiencong": "Same trouble here. +1\n. ",
    "knadsady": "CentOS 6.6, Ruby 1.9.3, RubyGems 1.8.29, Puma 2.11.3, and Dashing 1.3.4.\nAny word on this?\nI am also experiencing these same issues on Firefox ESR 38.0.1 and Chrome 43.0.2357.132.\nFirefox console:\n\"Connection opened\" open { target: EventSource, isTrusted: true, currentTarget: EventSource, eventPhase: 2, bubbles: false, cancelable: false, defaultPrevented: false, timeStamp: 1436919726507814, originalTarget: EventSource, explicitOriginalTarget: EventSource, NONE: 0 }\n application.js:15007:11\n\"Connection error\" error { target: EventSource, isTrusted: true, currentTarget: EventSource, eventPhase: 2, bubbles: false, cancelable: false, defaultPrevented: false, timeStamp: 1436919726546253, originalTarget: EventSource, explicitOriginalTarget: EventSource, NONE: 0 }\nChrome console:\nConnection opened Eventbubbles: falsecancelBubble: falsecancelable: falsecurrentTarget: EventSourcedefaultPrevented: falseeventPhase: 0path: Array[0]returnValue: truesrcElement: EventSourcetarget: EventSourcetimeStamp: 1436920393514type: \"open\"__proto__: Event\napplication.js:15011\nConnection error Eventbubbles: falsecancelBubble: falsecancelable: falsecurrentTarget: EventSourcedefaultPrevented: falseeventPhase: 0path: Array[0]returnValue: truesrcElement: EventSourcetarget: EventSourcetimeStamp: 1436920393529type: \"error\"__proto__: Event\n. ",
    "redronin": "Yes, it always happen for me. I'm actually surprised you would continue\ngetting events upon a dashing restart.\n1. I added console.log to the event callback so I see messages coming in.\n2. start up dashing\n3. connect to dashboard and see incoming messages\n4. kill dashing server\n5. see repeated connection error messages\n6. restart dashing\n7. get a connection closed event\n8. never get incoming messages ever again.\nOn Fri, Aug 30, 2013 at 1:36 PM, David Underwood\nnotifications@github.comwrote:\n\nVery interesting. Can you reliably reproduce the case where the dashboard\nnever re-attaches to the server? I restart my server all the time during\ndevelopment and I don't usually have a problem with the Dashboard failing\nto re-connect.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/pull/211#issuecomment-23577420\n.\n\n\nJohn Tajima, PEng\nshopify.com\n. @tahnok might be a good person to review this as well.\n. ",
    "aelse": "As a link to this issue popped up first in my search i'll chime in here.\nI wanted to have a widget displaying server-side time so I can tell at a glance if the display has broken (which has been happening occasionally).\nI did this by modifying the clock widget to comment out the 'ready' event and created a job to push date and time to the clock widget (similar to Approach 1 above).\nruby\nSCHEDULER.every '1s' do\n  time = Time.new\n  send_event('clock', { date: time.strftime('%a %b %-d %Y'), time: time.strftime('%-I:%M:%S') })\nend\nThe dashboard has the same clock as sampletv.erb but with a data-id 'clock' matching the job.\nhtml\n    <li data-row=\"3\" data-col=\"4\" data-sizex=\"1\" data-sizey=\"1\">\n      <div data-id=\"clock\" data-view=\"Clock\"></div>\n      <i class=\"icon-time icon-background\"></i>\n    </li>\nIf you're interested in less granular time then set the job to run less frequently and don't display seconds.\nruby\ntime: time.strftime('%-I:%M')\n. ",
    "prichey": "I'm having problems starting a project (my first) also. I installed Ruby and Dashing as specified, but when I run 'dashing start' I get this error: \n\"Unable to load the EventMachine C extension; To use the pure-ruby reactor, require 'em/pure_ruby'\n/Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/eventmachine-1.0.3/lib/eventmachine.rb:8:in require': cannot load such file -- rubyeventmachine (LoadError)\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/eventmachine-1.0.3/lib/eventmachine.rb:8:in'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/thin-1.5.1/lib/thin.rb:7:in require'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/thin-1.5.1/lib/thin.rb:7:in'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/thin-1.5.1/bin/thin:5:in require'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/gems/thin-1.5.1/bin/thin:5:in'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/bin/thin:19:in load'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/bin/thin:19:in'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/bin/ruby_noexec_wrapper:14:in eval'\n    from /Users/rgeorges/.rvm/gems/ruby-2.0.0-p247/bin/ruby_noexec_wrapper:14:in'\"\nAny suggestions?\n. I ended up reinstalling Ruby, and that solved the problem. Thanks!\n. ",
    "joegiralt": "dashing only works with ruby 1.9\n. ",
    "xander-miller": "@joegiralt That's funny. I had the opposite experience. I was having trouble launching under Ruby 1.9.3 but not under Ruby 2.0.0. In the end it turned out to be a problem with RVM. @prichey I would suggest starting by updating RVM (if you are using it) and then reinstalling Ruby and run -pristine on your gems. \n. @davefp I just submitted a PR with the 3.0.0 fix. It passed all of the existing Dashing tests. \n. K, I fixed it. I think, first time trying to update a fork to an upstream master. \n. ",
    "bradvin": "+1\nwould be great to be able to choose your \"layout engine\" somehow - gridster or isotope etc\n. ",
    "Noqomo": "@pushmatrix Just looking for an update on the status of this great feature. Thanks.\n. @pushmatrix thanks for the reply. As has been mentioned, the ability to scale the interface to a variety of platforms and resolutions is very desirable. \nDashing is a great alternate to the paid services, giving us developers a chance to offer a similar service within our application. The only draw back on almost all Dashboard frameworks, is that they cannot be scaled for mobile applications. \nSome of the frameworks have worked around the issue but creating separate apps and portals for different resolutions, however isotope implementation seams the most appropriate portable feature for Dashing. \n. ",
    "Esya": "Any news on this? :) :+1: \n. ",
    "darkpixel": "Definitely not interested due to the licensing of isotope.  http://isotope.metafizzy.co/license.html\n. ",
    "lynchlee": "Well, i faced the problem same to @InTheScript , but the url can not be opened , http://wiki.manageditby.us/2013/08/09/dashing-labtech-agent-count-via-meter-widget/, should someone can help me ? thx !!\n. ",
    "shaundon": "There may be some way to do this by editing the HTML for the dashboard in real time, maybe with a front end JavaScript framework that can handle incoming data and then add/remove widget HTML and update the DOM as necessary.\n. ",
    "innovationhero": "@davefp by dashboard-level events you meant the event: \"reload\"? \nto add or remove widgets I assume one needs to write some coffeescript in dashing.coffee is that correct?\n. ",
    "shuhaowu": "Looks good! I tried (unsuccessfully) ripping this out too, but this is great!\n. So are there a general outline on how to compile the assets manually? I'm not too familiar with that domain yet or how the code is structured as of right now. \nIt would be really nice if Dashing could be a standalone batmanjs project without additional backends so that one can just extend widgets easily and make other backends for it. See: https://github.com/shuhaowu/monitoring-dashboard\n. ",
    "tijszwinkels": "Thank you for the helpful pointers!\nI needed this as well, so I spend some time picking Dashing apart. \nI created a new project on github. It's keeping everything nice and separated, and uses gulp and browserify to compile all the resources into something that can be uploaded to a webserver. \nIt's available here:\nhttps://github.com/Iperity/Dashing-browser\n. I'm not saying that this solution will work for everybody, but we have chosen to solve a similar problem as following:\n- Real-time data  is published on an XMPP api through pubsub. (running ejabberd)\n- The XMPP api is also exposed through BOSH (so it can be accessed from browsers.)\n- We are using a browser-only version of Dashing. (I've actually just put the source up on Github. ) This also uses browser-side jobs for data gathering.\n- These in-browser dashing jobs connect to the XMPP api using the Strophe.js library. They only subscribe to the pubsub-nodes that are relevant to them.\nAdvantages:\n- This moves the problem of scalable data-distribution to XMPP. XMPP has been designed with scalable data-distribution in mind.\n- We avoid some headaches with having Dashing / Batman deal with different data for different users on the server-side. Instead, we use an existing client-side javascript framework to deal with authorisation and authentication. The jobs only need to know with what authentication data to subscribe to which nodes.\n- Coming from a situation where the XMPP-infrastructure was already in place, it saves us from having to deploy and maintain another piece of infrastructure (the dashing server). The current solution can run from any webserver serving static files to clients. \n. ",
    "razb": "We already had a real-time  Express application utilizing websockets and didn't want to manage another messaging/events layer. We ended up integrating the Express app with dashing js  and using the existing primus library for both.\nIt was pretty straight forward. The clients connect to specific channels for each widget. As an example for the 'welcome'  text widget:\n\nprimus = Primus.connect()\nwelcome = primus.channel('welcome')\nwelcome.on \"data\", (event) ->\n   Dashing.widgets.welcome[0].receiveData event\n\nand the jobs on the server just need to use primus instead of batman:\n\nwelcome.write({text: data });\n\n. ",
    "RaresSalcudean": "@pushmatrix Thank you for the mini-dasbhoard repo, I was really looking for something like this. Is there any chance we can have the mini-dasbhoard without Batman.js? I'm really looking only for the basic dasbhoard with widgets, but no binding, only pure css html and js that is required to have the minimal functionality. Thank you!. ",
    "jwalton": "(Also, hello from Benbria on the other side of Ottawa. :)\n. There's a couple of improvements I should pull from https://gist.github.com/jwalton/6614023 if we want to pull this in.\n. Ok, if anyone is interested in pulling this, this is ready for pulling.\n. I have a gist version of this here: https://gist.github.com/jwalton/6614023\nIt's where I was primarily developing this, so it probably has a few fixes\nthis PR doesn't.\n-Jason\nOn Feb 8, 2014 8:58 AM, \"Peter Daugavietis\" notifications@github.com\nwrote:\n\ni'd love this -- just building new dashboarding solutions for work, and\nthis would save a HUGE amount of pain for me and others in team... Is there\na PR that i can apply to my local?\n\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/pull/224#issuecomment-34544490\n.\n. There's support for graphing data in Graphite series format, if that's what you mean.  You can pass the JSON you get back from Graphite straight to the widget.\n. Hi @wolfspyre.  Sorry for not seeing your comments on my gist; for some reason I never get notifications when someone comments on a gist.\n\nOk, here's what I did:\n- Installed the latest dashing with gem install dashing.\n- Created new dashboard with dashing new db.\n- Copied your dashboard.erb file, created a dummy job that sends the logged data from your gist:\nSCHEDULER.every '2s' do\n      bed_graphite = [{:target=>\"octoprint_bed.temp.actual\", :datapoints=>[[9, 1425294886], ...]}]\n      send_event('octoprint_bed_graph', series: bed_graphite)\n  end\n- Copied the rickshawgraph files into db/widgets/rickshawgraph/*.\nWhen I tried this, I ran into a few problems:\n1) There was a bug in rickshawgraph which was obscuring the real problem here, so I fixed that (along with a couple of other comments people made in my gist.)\n2) The real problem, though, is that you're setting data-renderer=\"multigraph\", but this isn't a valid Rickshaw renderer.  Try setting data-renderer=\"line\" and you'll get graphs like this:\n\n. Hrm...  Was this tabs originally?  Did I accidentally remove all your tabs and replace them with spaces?  :(\n. ",
    "abramsm": "Is this scheduled to move into master at some point?\n. ",
    "karmalicious": "This is a great improvement and easy to use too. I do have one issue though. Is there a way to change the X axis? Like in this example? http://code.shutterstock.com/rickshaw/examples/x_axis.html\nEvery attempt from my side to alter the code results in Dashing displaying no graphs at all.\n. the graph widget uses Rickshaw.Graph.Axis.X. Change that to Rickshaw.Graph.Axis.Time and feed it dates/time/epoch and it should display timestamps instead.\nhttp://code.shutterstock.com/rickshaw/\nlook at \"Axes and Tick Marks\"\n. ",
    "akleiber": "I cannot get the multi renderer to work - http://code.shutterstock.com/rickshaw/examples/multi.html\ndata-renderer=\"multi\" data-view=\"Rickshawgraph\"\nThis is not supported out of the box - or am I doing something wrong?\n. json\n{ \n  \"renderer\":\"multi\",\n  \"series\": [\n    {\n      \"renderer\": \"line\",\n      \"data\": [        \n        {\"x\": 1402736400, \"y\": 5.45},\n        {\"x\": 1404118800, \"y\": 5.45},\n        {\"x\": 1404723600, \"y\": 5.45}\n      ]\n    },\n    {\n      \"renderer\": \"bar\",\n      \"data\": [        \n        {\"x\": 1402736400, \"y\": 3},\n        {\"x\": 1404118800, \"y\": 4},\n        {\"x\": 1404723600, \"y\": 6}\n      ]\n    }\n  ]\n}\n. ",
    "grahamb": "@pushmatrix Hmm. Still nil from the Job file, at least outside the SCHEDULER.every block. Inside that block I can access both settings.auth_token and Sinatra::Application.settings.auth_token. Any idea why?\nHere's my job, in both working and non-working form: https://gist.github.com/grahamb/6502637\n. Still nil\n. I'm wondering if there's some sort of timing issue. If I have my jobs scheduled using, say\nSCHEDULER.every '30s', :first_in => 0 do\nI'll get a NoMethod error right after starting dashing. Subsequent runs of the job are fine. It's also fine if I remove :first_in.\n. Damn, I don't know why the readme and gemfile were deleted in this commit. I'll close this and re-do it.\n. ",
    "gabrielpoca": "Hi, I have the same problem. Looking into the code is obvious it wont work, dashing.rb is loading every file in jobs folder before you have settings.\nYou can rename the jobs folder to something else like my_jobs and then require every job in the end of the config.ru when sinatra is already running, as example:\nrequire File.expand_path(\"../my_jobs/job.rb\", __FILE__)\nHope it helps some looking for it.\n. ",
    "sjernigan": "Seems to work for me..you could include something along the lines of\njob_dir = File.expand_path(\"./my_jobs/\")\nDir.new(job_dir).each do |file|\n  begin\n    require File.join(job_dir,file) if file.match(/.*\\.rb/)\n  rescue Exception =>e\n    puts \"Failed to load job #{file} due to exception #{e}: #{e.backtrace}\"\n  end\nend\n. ",
    "phoet": "@pushmatrix thx, was just looking for this :smile: \n. @amassaad this is also an issue with the dashing job command\non a vanilla generated instance\n``` bash\n\u25cb \u2192 be dashing --help\nCommands:\n  dashing generate (widget/dashboard/job) NAME  # Creates a new widget, dashboard, or job.\n  dashing help [COMMAND]                        # Describe available commands or one specific command\n  dashing install GIST_ID                       # Installs a new widget from a gist.\n  dashing job JOB_NAME AUTH_TOKEN(optional)     # Runs the specified job. Make sure to supply your auth token if you have one set.\n  dashing new PROJECT_NAME                      # Sets up ALL THE THINGS needed for your dashboard project.\n  dashing start                                 # Starts the server in style!\n  dashing stop                                  # Stops the thin server\n|2.2.2| uschis-workstation in ~/jimdo/sweet_dashboard_project\n\u25cb \u2192 be dashing generate job testo\n       exist  jobs\n      create  jobs/testo.rb\n|2.2.2| uschis-workstation in ~/jimdo/sweet_dashboard_project\n\u25cb \u2192 be dashing job testo\n/Users/peter/jimdo/sweet_dashboard_project/jobs/testo.rb:2:in <top (required)>': uninitialized constant SCHEDULER (NameError)\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/cli.rb:106:inrequire'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/cli.rb:106:in require_file'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/cli.rb:78:injob'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/thor-0.18.1/lib/thor/command.rb:27:in run'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/thor-0.18.1/lib/thor/invocation.rb:120:ininvoke_command'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/thor-0.18.1/lib/thor.rb:363:in dispatch'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/thor-0.18.1/lib/thor/base.rb:439:instart'\n    from /Users/peter/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/bin/dashing:9:in <top (required)>'\n    from /Users/peter/.rbenv/versions/2.2.2/bin/dashing:23:inload'\n    from /Users/peter/.rbenv/versions/2.2.2/bin/dashing:23:in `'\n```\nthe code that you linked to should be part of the general bootstrapping of the app.\nwhat i did was wrapping it up an a rake-task (with the addition of loading dotenv):\n```\ndesc \"run your job directly for testing\"\ntask :run_job, [:job_name] do |task, args|\n  require 'dotenv'\n  Dotenv.load\nrequire 'dashing/cli'\n  require 'dashing/downloader'\n  Dashing::CLI.start(['job', args[:job_name]])\nSCHEDULER.join\nend\n```\nfrom my point of view, the dashing job JOB_NAME AUTH_TOKEN(optional) is broken at the moment.\n. ",
    "cob16": "Instead of renaming you can use @sjernigans code at the end of configre do and before add\nENV[\"JOB_PATH\"] = 'dashing can you wait a sec before you load the jobs?'\nat the top of your file\n. Here is one for graphite https://thomasvm.github.io/blog/2012/11/19/bling-dashboards-using-graphite-and-dashing/ is that what you meen?\np.s Questions like this should probably be on stackoverflow\n. ",
    "pallan": "I have done the same thing but it supports both Integers and Floats https://github.com/Shopify/dashing/pull/292\n. I've also put this in place with combined Integer and float support https://github.com/Shopify/dashing/pull/292\n. ",
    "anshprat": "Could it be because of multiple json?\n$ gem list --local|grep json\njson (1.8.0, 1.7.7)\nmulti_json (1.8.0)\nAlso, this is a fresh machine with dashing being the only ruby app.\n. ",
    "akostadinov": "strangely on fedora 22 with rails 5, bin/rails server resulted in this. btw I have lots of gems installed. After adding gem \"json\" to Gemfile and bundle install, it started to work (as somebody mentioned in #89).\nWhat is strange to me is that this is a fresh example app as generated by rails new blog. It is rather strange to me that rails itself generated bogus Gemfile with the tutorial web app.\n. ",
    "d3chapma": "Check out https://gist.github.com/assimovt/5181244\n. ",
    "bubbajoelouis": "To instrument your Dashing implementation with a New Relic Ruby agent:\n1. Add: gem 'newrelic_rpm'  to your $DASHING_HOME/Gemfile then run:  bundle install\n2. Edit $DASHING_HOME/config.ru and add:  require 'newrelic_rpm'\n3. Create $DASHING_HOME/config directory and add your downloaded newrelic.yml file \n4. Edit the newrelic.yml file to add your app_name and any other settings\n5. Restart Dashing and check for the newrelic_agent.log file. Enable Auditing to view what is being sent to New Relic.\n. Is your data-id=\"pie\" ? If not, you will need to change your URL, e.g. http://localhost:3030/widgets/external_sales\nPlease include the full send_event() from job.rb and the data structure you send. :)\n. Solved it. Looks like layout.erb is NOT yet another sample dashboard that should be cleared out of the way ;)\n. ",
    "martinowen": "@joshmmo I'm seeing the same issue on a client's machine which is behind a HTTP proxy. Everything works for me in Firefox without a proxy, so I'm thinking the proxy is modifying the response in some way that Firefox doesn't like. Unfortunately it's difficult for me to debug as I don't have direct access to the client's machine (or proxy).\nI'll let you know if I solve this as I'm working with them on it remotely.\n. ",
    "joekearney": "I've got this to work using webrick instead of thin. I'm running the server on a linux box, clients elsewhere. To do this:\nrackup -p 3030 -s webrick\ninstead of\ndashing start\n-p for port, -s for server choice from {thin, puma, webrick, mongrel}, I've not tried the others.\nI don't know why it doesn't work in thin, something to do with the eventing stuff. Note than when you kill the server all of the events get through to the browser.\n. I've got this to work using webrick instead of thin. I'm running the server on a linux box, clients elsewhere. To do this:\nrackup -p 3030 -s webrick\ninstead of\ndashing start\n-p for port, -s for server choice from {thin, puma, webrick, mongrel}, I've not tried the others.\nI don't know why it doesn't work in thin, something to do with the eventing stuff. Note than when you kill the server all of the events get through to the browser.\n. ",
    "thomaspons": "Same issue here and my environement variable (i'm on windows) HTTP_PROXY is set ... Really Strange\n. ",
    "Oblongmana": "Installing rufus-scheduler 2.0.24 and changing the Gemfile.lock so it pointed specifically to 2.0.24 instead of 3.0.0 then re-running bundle worked, so that's available as a stop-gap measure for anyone else encountering this problem.\n. ",
    "daniellawrence": "@pezholio Thanks for the quick fix. I thought I was doing something wrong.\n. ",
    "monfresh": "Hi. Just checking on the status of upgrading to rufus-scheduler 3.0? I'm not sure I follow the issue with start_new. It looks like Dashing has been using .new for a long time now. Is rufus-scheduler 3.0 still causing breaking changes?\n. ",
    "troelskn": "Just realised that the fonts are referred to as http://localhost:3030/fonts/fontawesome-webfont.woff?v=3.2.1 when they should be http://localhost:3030/assets/fontawesome-webfont.woff?v=3.2.1\n. OK. I fixed this by adding sprockets-helpers to the Gemfile and include Sprockets::Helpers in config.ru helpers-block and finally renaming font-awesome.css to font-awesome.scss.\n. I can confirm that reverting to 1.2.0 resolves the issue. The path to the font files is correctly /assets/fontname.woff rather than ../fonts/fontname.woff\n. ",
    "froschi": "I have the same problem in 1.3 as troelskn. Downgrading to 1.2.0 does not change anything for me.\nStrangely, the font I get in the sample application is the same that I get to see in the demos at http://dashingdemo.herokuapp.com/. The only difference is that in the sample application, the arrows in the Number widget get displayed as squares rather than arrows. This is with latest Chromium on Ubuntu 12.10.\n. ",
    "sangmank": "This seems to be fixed by changing src: url entries in /assets/stylesheets/font-awesome.css to those with ../assets/ in place of ../fonts/.\n. Thank YOU for this beautiful & easy-to-use dashboard system!\n. ",
    "HenryOlson": "Well spotted, and thanks for the quick response.\nIt is indeed 1.3.0.  I installed as per the web page \"gem install dashing\" late last week and assumed I'd have the most current version.\nI'll try to update and verify.\nNew to RoR - if gem install isn't getting me the most current version, how do I get it?\nBest,\nHenry\nOn Oct 7, 2013, at 9:26 AM, David Underwood notifications@github.com wrote:\n\nIs this using Dasing v1.3.1 or v1.3.0? The issue should be fixed in the former.\n\u2014\nReply to this email directly or view it on GitHub.\n. Worked like a champ!\n\nThanks so much.\nOn Oct 7, 2013, at 11:19 AM, David Underwood notifications@github.com wrote:\n\ndo a gem update dashing to update the global version of dashing. Creating new projects will then use the new version \n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "sujaymansingh": "Ah!\nI think it's the ruby version.\nvagrant@bigboard:/opt/bigboard/dashboard$ ruby --version\nruby 1.8.7 (2012-02-08 patchlevel 358) [x86_64-linux]\n. If it helps, it seems that if I don't have any dashboards open in a browser, then it is able to shutdown properly.\nbash\nvagrant@bigboard:/opt/bigboard/dashboard$ dashing start -d\nvagrant@bigboard:/opt/bigboard/dashboard$ dashing stop\nSending QUIT signal to process 2155 ...\nExiting!\nvagrant@bigboard:/opt/bigboard/dashboard$\nBut if I do have dashboards open, it can't shutdown.\nbash\nvagrant@bigboard:/opt/bigboard/dashboard$ dashing start -d\nvagrant@bigboard:/opt/bigboard/dashboard$ dashing stop\nSending QUIT signal to process 2188 ...\nWaiting for 3 connection(s) to finish, can take up to 30 sec, CTRL+C to stop now\nTimeout!\nSending KILL signal to process 2188 ...\nvagrant@bigboard:/opt/bigboard/dashboard$\n. Actually, just doing some more testing, it looks like even if I get dashing to save its data on exit, it's pointless because dashing doesn't read from the history file on start up anyway.\nAt this point it looks like dashing doesn't support persistence of data. Is there a plan to add this feature later?\nI think what might be best is for me to write my own little wrapper around it that accepts data, saves it to a file and then pushes it to dashing.\n(And periodically it can send all data to dashing. Unfortunately this looks like I'll lose the updated_at values, but there is not much I can do at this point.)\n. Ah thanks @LKLG \nIn the end, I did end up using a (python) script to quickly put together an index.html page.\n. ",
    "andygoldschmidt": "Same issue here with ruby 2.0.0p247 from rbenv on Mac OS X 10.8. Removing the inner quotes from the above pasted line solved the problem for me.\n. ",
    "etmjansen": "To fix this, you can try adding this to your .bash_profile or .zshrc file\nexport LANG=en_US.UTF-8\nexport LC_CTYPE=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\nDon't forget to reopen the terminal after editing the profile\n. ",
    "ericraio": ":+1: would really like to persist the results\n. ",
    "pseudomuto": "@grahamb would this create a new token each time the app ran if you didn't set the env var? If so, that could be annoying for people during development and could cause integration issues in production.\nI really like the environment variable bit though!\nMaybe we should:\n- remove the 'YOUR_AUTH_TOKEN' default and use ENV['AUTH_TOKEN'] in templates/project/config.ru\n- update Dashing::CLI#start to raise an error/warning if the environment variable is not set\n@pushmatrix what are your thoughts?\n. @pushmatrix, @redronin ping\n. Hey guys, it's been a couple of weeks. Should I ping someone else for review?\n. Removing/ignoring .ruby-version file and adding Ruby 2.1.0 to travis config\n. Any last comments before I merge?\n. Thanks man!\n. Whoops! That was an accidental check in. I'll remove the file\n. It was just so I could easily stub that method during tests.\n. ",
    "kmayer": "use ENV.fetch('AUTH_TOKEN') in config.ru; it will raise an error. Or add a proc with a better default.\n. ENV.fetch('AUTH_TOKEN') { SecureRandom.uuid }\n. There are subtle differences...\n@y = 0\ndef y\n  @y += 1\nend\n| Example | X is unset | X is anything | X is nil | unset, second call |\n| --- | --- | --- | --- | --- |\n| ENV[\"X\"] || y | 1 | {anything} | 1 | 2 |\n| ENV.fetch(\"X\") { y } | 1 | {anything} | nil | 2 |\n| ENV.fetch(\"X\", y) | 1 | {anything} | nil | 1 |\n. ",
    "martensson": "Having the same problems in Chrome and Firefox.\n. ",
    "stephenyeargin": "I patched my application.css to have the .icon-background class to get top: -40px to bring it inline. Mileage may vary by browser.\n.icon-background {\n  width: 100%!important;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: -40px;\n  opacity: 0.1;\n  font-size: 275px;\n}\n. See #134 \n. ",
    "howardsternisbatman": "@stephenyeargin thank you. Your code saved me just now.\n. I had the same problem. This thread solved the data reloading on a refresh.\nHowever, I also have code that changes the background color, color works on initial load but not after a manual refresh. Once the scheduler picks up the job x mins later the color is back.\nthanks.\n. I found this thread & it solved the color problem\nhttps://github.com/Shopify/dashing/issues/423\n. sorry for the massive delay in replying.  Thank you so much for your help, I was able to get this completed as a result.\n. Thanks for the help.\nYes, I tried the Klimato widget and it does work but it is rather large for my purposes.  I'm at least glad I wasn't missing anything simple with the weather widget. I'll split it in to 3 for my purposes.\nthanks again.\n. Thank you for your help. I've got it working!\n. this just fixed it for me! thanks.\n. Oh for goodness sake as soon as I posted this I figured it out....my widget background was defaulted to black. I added a background-color tag to my .erb file to change the colour and I'm all set.\n. can you try using http://www.cnn.com in your curl command.  If that works I think you are running in to a limitation with iframe, it does not play well with https:// \nAlso make your widget bigger if you want it full screen-ish\nli data-row=\"1\" data-col=\"1\" data-sizex=\"5\" data-sizey=\"5\"\n. Crickets? :-)\n. Playaround with the following in your .erb\ndata-sizex=\"1\" data-sizey=\"1\"\nIncreasing the values will make that particular widget larger.\n. I'm not following.\nin your dashboard.erb file have the one widget that you want full screen and scale up the data-sizex and data-sizey values.\nIs this not what you want?\n. how about control +  in the browser to scale it up a bit so it fits?\n. I worked around this by using the excel 'round' command\nhttp://office.microsoft.com/en-us/excel-help/round-function-HP010062455.aspx\n. Thanks for your info.\nI'd fuddled about a little with a similar idea previously (so mediocre minds think a like ;-) Alas on paper it looks like it might work but the best variation of this method I found only managed to add the text 'agentsurvey' to the widget.\nI'll revisit when time permits as it seems like this should be possible, if not a feature request. I'll post back if I ever resolve it.\n. I fuddled about last week trying to update to font-awesome 4.xxx. I only succeeded in breaking 3.xxx ;-)\nWatching with interest.....\n. I'll give it a bash today....urm, where is it exactly? :-)\n. Thank you, installed and working perfectly.  I really appreciate your effort.\n. Not sure if this is it but those 2 widgets are occupying the same spot on the dashboard.\n. I found the root of my problem.  I had updated Font-Awesome, 'icon-arrow-up' needed to be changed to 'fa fa-arrow-up'\n@tylermauthe thank you for your help.\n. I have resolved my own issue.  Sloppy coding in the .rb file.\nI was opening the the excel file for every send event (and there are many).\nBad:\nSCHEDULER.every '25s', :first_in => 0 do |joC|\ns = Roo::Excel.new(\"/home/administrator/manchvegas/xls/newcases.xls\")\nsend_event('csatmonth', {current: s.cell('H',19)})\ns = Roo::Excel.new(\"/home/administrator/manchvegas/xls/newcases.xls\")\nsend_event('csatyear', {current: s.cell('I',19)})\nGood:\nSCHEDULER.every '25s', :first_in => 0 do |joC|\nfile_path = \"#{Dir.pwd}/xls/newcases.xls\"\ndef fetch_spreadsheet_data(path)\n  s = Roo::Excel.new(path)\nsend_event('csatmonth', {current: s.cell('H',13)})\nsend_event('csatyear', {current: s.cell('I',19)})\n. thanks @tylermauthe I will check that out.\n. Hi, I'm sorry I can't help here but I am interested to know which widget you are using to display a spreadsheet.\nthanks\n. @sash85 thanks! Please post a link here.\n:-)\n. Not sure about embedding the actual javascript but have you looked at the news widget as an alternative?\nhttps://gist.github.com/toddq/5422482\n. It's that time again. Thanks for making the update...where can I grab the files from :)?\n. you look to be trying to run two instances of dashing on the same port (3030)\ntry this for the 2nd command. \ndashing start -p 3031\n. take a look in your widgets html file, you probably have something set there restricting the value.\ntry this line in place of your value\n<h2 class=\"value\" data-bind=\"current | prepend prefix | append suffix\"></h2>\n. did you see this?\nhttps://github.com/Shopify/dashing/issues/271. I have this working...can you post your sample.rb & Gemfile please.\nWhat version of excel is the file created in & what is its file extension xls,xlsx, xlsm etc?\n. I'll assume that an xls file created in LibreOffice is 100% compatible with this solution, I use this method with Excel created files.\nAdditionally I'm assuming that you have read/write permissions to the location of your xls file.\nMake a backup of your smashing folder. \nNow replace the contents of your Sample.rb with the following:\nCopy from below this line\nrequire 'roo'\nrequire 'roo-xls'\nSCHEDULER.every '2s', :first_in => 0 do |job|\nfile_path = \"#{Dir.pwd}/THIS_IS_THE_PATH_LOCATION_TO_THE_XLS_FILE/YOUR_FILENAME.xls\"\ns = Roo::Excel.new(path)\nsend_event('valuation', { current: s.cell ('B',49) })\nend\nmodule Handler\ndef file_modified\nfetch_spreadsheet_data(path)\nend\nend\nto above this line\nAdd the next 2 lines to your Gem file\ngem 'roo', '~> 2.1.0'\ngem 'roo-xls'\nAt the command line run (without the quotes) \"bundle\"\nCheck for errors...if you have any post them back to this thread. Otherwise, start your dashboard.....fingers crossed.\n. you're getting close...\nI'm not on a system I can test this but I think there is a formatting problem, aka something got muddled with the copy and paste.  Replace send_event('valuation', { current: s.cell ('B',49) })\nwith \nsend_event('valuation', { current: s.cell ('B',49) })\nYeah I know it looks exactly the same but humor me..... I'll take a closer look tomorrow and post back.... sorry for the delay. Try this line in your .rb file instead of the line that is there.  I had eyeballed my own job file with multiple cells in one 'send_event', needed to tidy that up.\nsend_event('valuation', {current: s.cell('B',49)}). yes exactly.\nin what directory is your excel file?  Wherever that is you need to replace what I have written in CAPITAL letters with it.\ne.g.\n/home/howardsternisbatman/myfile.xls\n. if you are asking me is that path as you have written it is correct for you, the answer is no.  I'm sensing you are not familiar with Linux's file/folder structure.  You need to read up on it since where you are stuck now has nothing to do with Smashing.\nThis might help\nhttp://www.howtogeek.com/117435/htg-explains-the-linux-directory-structure-explained/\nYou're close, solve the file path and you should be all good.. I have my xls located in\n/home/howardsternisbatman/mydashboard/xls/myfile.xls\nAs long as the file is somewhere within the dashboard file structure I don't see why this wouldn't work.. Take a look at this thread https://github.com/Shopify/dashing/issues/735 I suspect the sample.rb and instructions you followed are a little out of date.. Before we go any further, is that all you have in the sampletv.erb?  Do you have any other widgets showing aka the sample.erb dashboard contains the following\n`<% content_for(:title) { \"My super sweet dashboard\" } %>\n\n\n\n\n\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-id=\"valuation\" data-view=\"Number\" data-title=\"Current Valuation\" data-prefix=\"$\"></div>\n</li>\n\n\n`\nLastly are you running dashing or smashing?\nthanks. Good to hear that you are past the initial problem.  See my previous post with links to Smashing & Dashing, you'll find out what that is all about.\nAs for your new problem, that's beyond the scope of this thread and most likely smashing.  Have a read of the roo documentation http://www.rubydoc.info/gems/roo/2.5.1  Personally I haven't accessed a spreadsheet table in this manner only individual cells. I've used the hotmeter widget and got this this close to what you are looking to doing. Maybe take a look at that widget and lift what you need.\n\n. can you share your code?. ",
    "davidwindell": ":+1: would like to see this resolved too\n. ",
    "craigsheen": "Not sure if this is the issue, but do you not need to have something like the ruby racer gem install?\nhttp://www.railszilla.com/rails-3-coffescript-execjs/rails\n. Both of them links are working fine for me.\nFurther info: Im using Firefox 26.0.\n. ",
    "bassdread": "I had the same issue. I installed coffeescript system wide and everything worked.\n. ",
    "marcopelegrini": "Installing coffee-script did not work for me. I needed to install Node.js (Yeah, I don't know why it would help, but it did).\nWindows 8.1 + Ruby 1.9.3 + Rubygem 1.8.26\n. ",
    "h3xstream": "I did as @marcopelegrini suggest.\n1. Install NodeJs\n2. Install coffee-script : npm install -g coffee-script\nDone!\n\nThe install guide should mention the coffee-script requirement.\n. ",
    "moonchaser": "Thanks, Eric.\nI have been struggling to get this running.\nJust to try it out I have edited my text.coffee for my text widget by\nadding this new section.\n(I know I wanted to see it error out, so tied it to a website, not another\ndashboard)\nWhen I click on my text widget nothing happens at all.\nclick: ->\n    location.href = \"www.google.com\"\nWhen I compile the coffee script to .js it compiles fine. Not sure what is\nwrong. Any help is appreciated.\nOn Fri, Oct 25, 2013 at 12:11 PM, Eric Solomon notifications@github.comwrote:\n\nAll you have to do is add a click event to your widget and change\nlocation.href to your dashboard path.\ne.g. click (event) ->\nlocation.href = \"your dashboard\"\nyou can also look into Sinatra simple navigation\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/252#issuecomment-27118078\n.\n. Great! Thats better and even a better solution than modifying the coffee file. Thanks so much!\n.   onData: (data) ->\n    if data.status\n      # clear existing \"status-*\" classes\n      $(@get('node')).attr 'class', (i,c) ->\n        c.replace /\\bstatus-\\S+/g, ''\n      # add new class\n      $(@get('node')).addClass \"status-#{data.status}\"\n\nIn my jobs/test.rb file\nmyvalue = 50\nif (myvalue > 70.00)\n  test_status = 'danger'\nelse\n  test_status = 'warning'\nend\nsend_event(test_event, { value: myvalue, status: test_status })\nIn your assets/stylesheets/application.scss, danger and warning should already exist.\nThats it!\n. Thanks, all. Will give it a try.\n. Sorry, I didnt tie Twitter, but, I ran into the below error with other widgets\nscheduler caught exception:\nundefined method []' for nil:NilClass\nThis basically means the input that is being streamed is empty and whatever method you are calling on them is erroring out. You need to handle those cases.\nFor example, in my meter widget I was getting the value from a file. And sometimes the value would be empty and I would get the above error because I was doing value.to_i\nI changed my code to do this instead and it fixed those errors.\nif value.nil?\n  # assign default\n  value = -1\nend\noutput = value.to_i\n. Found a solution myself. Closing it.\n. Scratch that, I found a even better solution. \nThis is what I did:\nCreate .js files that create your graphs. See the rickshaw link above to get an idea. The .js and supporting rickshaw .js files need to be physically in 'public' folder of dashing or create a soft link in 'public' folder.\nCreate the erb file in 'dashboards' folder. Call you script and css's in the erb, just like you do in html. Now, to embed graphs as widgets call your .js from within \n<li>\n</li>\nI will try to post an example sometime. \n. ",
    "withoutdelay69": "Would anyone happen to know why port 80 will not work with this?. ",
    "brokamonster": "I will give that a try. I setup the dashing-js and got the same results so lastly I will try apache. After that I'm just going to lean on my web developers :-) I am more of a db guy.\n. ",
    "rbirnie": "webrick should probably be set to the default for dashing start. I had the same issue across windows users.\n. ",
    "mskaraca": "Hi,\nI have solved problem 2 with the following sample.erb dashboard entry\n\n data-id=\"sicaklik\" data-view=\"Number\" data-title=\"SICAKLIK\" current=\"23\" data-suffix=\" \u00b0C\">\n\n. Can anybody help me on this issue..?\nHow can I close gaps inside image widget between widget borders and image..\nThanks...\n. Hi\nI have found the answer..\nfirst chnage padding line to 1 in your\n/root/dashboard/assets/stylesheets \"application.scss\" line 152\n    .widget{\n    padding: 25px 12px;\nNew form:\n    .widget {\n  padding: 1px 1px;\nsecond, You must put a big picture in your image widget..\n. Take it easy, find the apt-get equivalent in RHEL\n. ",
    "jogz": "Are you trying to run this behind a proxy? I'm encountering the same problem.\n. ",
    "markrickert": "I'm encountering this problem as well. Any ideas on what this could be?\n. ",
    "aurelien-git": "Got the same trouble too:\n``\nthin web server (v1.6.4 codename Gob Bluth)\nMaximum connections set to 1024\nListening on 0.0.0.0:3333, CTRL+C to stop\n== DEBUG: Nagios Stats\n== DEBUG: API Services\n== DEBUG: API Hostgroups\n== DEBUG: API Hosts\n== DEBUG: API Servicegroups\n== DEBUG: API Servicegroups Int:0.498149278\n3\n{:servicegroupName=>\"Smarteam Vault Storage Report Test\", :servicegroupCount=>0, :servicegroupMembers=>[], :servicegroupConsolidatedStatus=>0}\n{:hostName=>\"CDSMART1SM.na.corp.cdaero.com\", :hostStatus=>0, :hostAckOrSched=>0, :hostConsolidatedStatus=>0, :hostPublish=>0}\nSystem - Disk Usage S:\n================================================================================\nscheduler caught exception:\nundefined methodkey?' for \"System - Disk Usage S:\":String\n/usr/local/rvm/gems/ruby-2.3.3/gems/dm-core-1.2.1/lib/dm-core/model.rb:754:in scoped_query'\n/usr/local/rvm/gems/ruby-2.3.3/gems/dm-core-1.2.1/lib/dm-core/model.rb:342:inall'\n/home/aurelien/git/area51/smashing-zodiac/jobs/dumpAPI_Servicesgroups.rb:23:in block (3 levels) in <top (required)>'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:187:inblock in each'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:186:in upto'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:186:ineach'\n/home/aurelien/git/area51/smashing-zodiac/jobs/dumpAPI_Servicesgroups.rb:17:in block (2 levels) in <top (required)>'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:187:inblock in each'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:186:in upto'\n/usr/local/rvm/gems/ruby-2.3.3/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node_set.rb:186:ineach'\n/home/aurelien/git/area51/smashing-zodiac/jobs/dumpAPI_Servicesgroups.rb:12:in block in <top (required)>'\n/usr/local/rvm/gems/ruby-2.3.3/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:230:intrigger_block'\n/usr/local/rvm/gems/ruby-2.3.3/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:204:in block in trigger'\n/usr/local/rvm/gems/ruby-2.3.3/gems/rufus-scheduler-2.0.24/lib/rufus/sc/scheduler.rb:430:inblock in trigger_job'\n================================================================================\n== DEBUG: Nagios Stats Done: 0.840704166\n```. ",
    "semdinsp": "I recently installed dashboard into heroku with no issues.\nWhen I parse/peruse the error messages above the key line for me is: read': No such file or directory - config.ru\nI suspect that you did not add config.ru to your git commit.  Please check git status to see if it is missing any files.\nS.\n. ",
    "ozdemircili": "Right,\nAfter adding config.ru and git commit everything works beautifully.\n. ",
    "LKLG": "Alternative you can use jwalton/RickshawGraph .\nThis is the more usefull than the default Graph-Widget.\n. Look at the samplejob \"buzzwords.rb\". \n``` ruby\nbuzzwords = ['Paradigm shift', 'Leverage', 'Pivoting', 'Turn-key', 'Streamlininess', 'Exit strategy', 'Synergy', 'Enterprise', 'Web 2.0']\nbuzzword_counts = Hash.new({ value: 0 })\nSCHEDULER.every '2s' do\n  random_buzzword = buzzwords.sample\n  buzzword_counts[random_buzzword] = { label: random_buzzword, value: (buzzword_counts[random_buzzword][:value] + 1) % 30 }\nsend_event('buzzwords', { items: buzzword_counts.values })\nend\n```\nYou need to send a Array to the widget.\nIn the sample-job it is buzzword_counts.\nIt looks like:\nruby\ntestarray = []\ntestarray[0] = {label: yourlabel, value: yourvalue}\ntestarray[1] = {label: yourlabel2, value: yourvalue2}\n. i have a quick'n'dirty-script for that. -> https://gist.github.com/LKLG/8376c547888fe8dacb00\n. the command redirect('/graph') unless session... is not the command to change the default dashboard. This command is for the authentication. \nThe correct command is set :default_dashboard, 'my_favourite_dashboard' #<==== set default dashboard like this under configure do\n. Yes this is possible.\nThe easiest way is to add this to each .erb just before the first <div> :\nhtml\n<style>\nbody {\n    background-image: url('image.youchoose');\n}\n</style>\n. ",
    "JasonEde": "I modified the twitter.rb file to added error logging to the rescue block\nrescue Twitter::Error => e\n    puts \"Twitter Error: #{e}\"\n    puts \"\\e[33mFor the twitter widget to work, you need to put in your twitter API keys in the jobs/twitter.rb file.\\e[0m\"\n  end\nand I now get\nTwitter Error: execution expired\nFor the twitter widget to work, you need to put in your twitter API keys in the jobs/mentions.rb file.\n. I think I've solved this myself, by going about it a different way. I've changed the code to use the twitter API rather than page scraping. Details below... The auth checking and timeout isn't great so if anyone has hints on making that better they'd be welcome...\n```\nGet your twitter keys & secrets:\nhttps://dev.twitter.com/docs/auth/tokens-devtwittercom\nTwitter.configure do |config|\n  config.consumer_key = 'YOUR_CONSUMER_KEY'\n  config.consumer_secret = 'YOUR_CONSUMER_SECRET'\n  config.oauth_token = 'YOUR_OAUTH_TOKEN'\n  config.oauth_token_secret = 'YOUR_OAUTH_SECRET'\nend\ntwitter_username = 'foobugs'\nMAX_USER_ATTEMPTS = 10\nuser_attempts = 0\nSCHEDULER.every '10m', :first_in => 0 do |job|\n  begin\n    tw_user = Twitter.user(\"#{twitter_username}\")\n    if tw_user\n        tweets = tw_user.statuses_count\n        followers = tw_user.followers_count\n        following = tw_user.friends_count\n    send_event('twitter_user_tweets', current: tweets)\n    send_event('twitter_user_followers', current: followers)\n    send_event('twitter_user_following', current: following)\n\nend\n\nrescue Twitter::Error => e\n    user_attempts = user_attempts +1\n    puts \"Twitter error #{e}\"\n    puts \"\\e[33mFor the twitter_user widget to work, you need to put in your twitter API keys in the jobs/twitter_user.rb file.\\e[0m\"\n    sleep 5\n    retry if(user_attempts < MAX_USER_ATTEMPTS)\n  end\nend\n```\n. Cheers. That works great!\n. ",
    "diegodurante": "I have resolved by substituting this line:\n\nfollowers = /([\\d.]+)<\\/strong> Follower/.match(response.body)[0].delete('.,').to_i\n\nwith these two:\n\nfollowers_count_metadata = /followers_count\":[\\d]+/.match(response.body)\nfollowers = /[\\d]+/.match(followers_count_metadata.to_s).to_s\n\n. ",
    "derrybarry": "have you created a second job to send data to the second widget? you may not need 2 graph widgets (move the newly created one to a different location).  remember the data-view does not need to change that just calls the widget type the data id is the important on because it takes the data from the relevant job.\n. your best bet would be to look at the job which is sending the data to the widget and change the scheduler time to something like 300 minutes, or alternatively dont use a job and send the data via Curl, that way you have total control over when it changes, as it will only change when you send a new value\n. name conflicts seems to fix this issue, it just a matter of getting a working job into it now.\n. try this, in your actual dashboard file (.erb) when you load the meter widget change the data-min to start at \"-10\" e.g. \n\n its worth a try\n. it looks like you need to install them gem first  try: gem install httparty -v '0.12.0'  or run 'bundle install' before starting dashing\n. ",
    "alexminnaar": "It worked when I changed the name of the new widget.  I don;t really understand why.  Maybe it doesn't like underscores in the names.\n. ",
    "jbfarez": "This sounds really really really GREAT !\n. Completely agree !\n. ",
    "relaxdiego": "It appears to be bin/dashing attempting to redefine SCHEDULER via a mock object. Adding the following line to test/cli_test.rb before bin/dashing is loaded removes the warning:\nObject.send(:remove_const, :SCHEDULER) if defined?(:SCHEDULER)\n. ",
    "stevenmccord": "i am having this issue as well locally, and it looks to be that Heroku applications are as well.  Is there a way to get this latest update locally and in Heroku?  Thanks!\n. ",
    "bdeak": "For me, on ubuntu, this resolved this condition:\nsudo apt-get instal nodejs\n. ",
    "martinseener": "But i think neither your nor my solution is the best one and its kind of a bug. hopefully one of the developers will fix that also because nodejs is not a package in wheezy nor squeeze which would make your solution only a ubuntu workaround.\n. ",
    "mbainrot": "This is still happening, though there appears to be a fairly easy way of adding nodejs to the aptitude package editor.\nhttps://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager\n. ",
    "syardumi": "sudo apt-get instal nodejs\nworked for me too. Thanks!\n. ",
    "mario-areias": "The solution proposed by @martinseener is much better than install node. Add the gem is quicker and lighter than install an entire platform only to fix that issue.\n. ",
    "pranavjain02": "@alexminnaar \nYou probably forgot to add \n@graph.series[2].data = data.points[2]\njust before graph rendering\n. ",
    "shushiej": "points_payroll = []\npoints_cusCare = []\npoints_WFM = []\npoints_BF = []\npoints_Personal = []\nallTickets = []\ngraphArray = [\"C:/Users/name/folder/data10.html\", \n\"C:/Users/name/folder/data20.html\",\",\n\"C:/Users/name/folder/data30.html\",\",\n\"C:/Users/name/folder/data40.html\",\"]\nSCHEDULER.every '1m' do\ngraphArray.each do |file|\n    doc = Nokogiri::HTML(open(file))\n    allTickets = doc.xpath(\"//select[contains(@id, 'AreaCode')]/option/text()\").collect {|node| node.text.strip}\nend\nTempTicketCount = Hash.new\nallTickets.each do |ticket|\n    ticket =~ /^(.*) ((\\d+)/  #Match ticket to the regex to get the Area and the Number of Unassigned Tickets\n    $1.rstrip\n    $1.lstrip\n    TempTicketCount.merge!($1 => $2) #Create the entire sets of area codes\nend\nTempTicketCount.each do |key, value|\n    if (key.eql?(\"AU Payroll\"))\n        AUPayrollNum += value.to_i\n```\nelsif (key.eql?(\"US Payroll\"))\n    USNumPayroll += value.to_i\nelsif (key.eql?(\"Customer Care\"))\n    CustomerCareNum += value.to_i\nelsif (key.eql?(\"WFM Billing\"))\n    WFMBill += value.to_i\nelsif (key.eql?(\"WFM Practice Manager\"))\n    WFMPrac += value.to_i\nelsif (key.eql?(\"WFM Support\"))\n    WFMSupport += value.to_i\nelsif (key.eql?(\"WFM Sales\"))\n    WFMSales += value.to_i\nelsif (key.eql?(\"BF Yodlee\"))\n    BFYodlee += value.to_i\nelsif (key.eql?(\"BF Partner\"))\n    BFPartner += value.to_i\nelsif (key.eql?(\"Personal\"))\n    Personal += value.to_i\nelse \n    TempTicketCount.delete(key)\nend\n```\nend\nPayroll = AUPayrollNum + USNumPayroll\nWFM = WFMSales + WFMSupport + WFMPrac + WFMBill\nBankFeeds = BFPartner + BFYodlee\n(1..10).each do |i|\n  points_payroll << { x: i, y: Payroll }\nend\nlast_x_payroll = points_payroll.last[:x]\n(1..10).each do |i|\n  points_cusCare << { x: i, y: CustomerCareNum }\nend\nlast_x_cusCare = points_cusCare.last[:x]\n(1..10).each do |i|\n  points_WFM << { x: i, y: WFM }\nend\nlast_x_WFM = points_WFM.last[:x]\n(1..10).each do |i|\n  points_BF << { x: i, y: BankFeeds }\nend\nlast_x_BF = points_BF.last[:x]\n(1..10).each do |i|\n  points_Personal << { x: i, y: Personal }\nend\nlast_x_personal = points_Personal.last[:x]\npoints_payroll.shift\npoints_cusCare.shift\npoints_WFM.shift\npoints_BF.shift\npoints_Personal.shift\n```\nlast_x_payroll += 1\nlast_x_cusCare += 1\nlast_x_WFM += 1\nlast_x_BF += 1\nlast_x_personal += 1\npoints_payroll << { x: last_x_payroll, y: Payroll }\nsend_event('payroll', points: points_payroll)\npoints_cusCare << { x: last_x_cusCare, y: CustomerCareNum }\nsend_event('custcare', points: points_cusCare)\npoints_WFM << { x: last_x_WFM, y: WFM }\nsend_event('workflowmax', points: points_WFM)\npoints_Personal << { x: last_x_personal, y: Personal }\nsend_event('personal', points: points_Personal)\npoints_BF << { x: last_x_BF, y: BankFeeds }\nsend_event('bankfeed', points: points_BF)\n```\nend\n. yeah that seems to work cheers\nOn Sun, Feb 9, 2014 at 3:04 AM, Peter Daugavietis\nnotifications@github.comwrote:\n\nif you're still having issues - might be syntax on send...\n...\nsend_event('synergy', { value: rand(100) })\n...\nNote that the sending values (2nd clause above) is wrapped in curly-braces\n\"{}\" - and your examples are not...\n\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/281#issuecomment-34544613\n.\n. \n",
    "error454": "Yikes.  This was actually caused by my Leap Motion device.  Evidently it installs something that overrides certain touch events in the browser.  Ultimately affecting gridster.  Also confirmed over here https://github.com/ducksboard/gridster.js/issues/207.\n. ",
    "slyall": "I'm getting the same thing. Using Centos 6.4 and the official backports of Ruby 1.9.3 . Here is what I did:\ncd /etc/yum.repos.d/\nwget http://dev.centos.org/centos/6/SCL/scl.repo\nyum install ruby193 ruby193-rubygem-json ruby193-ruby-devel\ncd /opt/rh/ruby193/\nsource enable\ngem install dashing\nexport PATH=/opt/rh/ruby193/root/usr/local/bin${PATH:+:${PATH}}\ncd /root/\ndashing new test\ncd test\nbundle\nBut then:\n$ dashing start\nUnknown switches '-R, -p'\n$\nperhaps the path?\n$ bundle exec env | grep PATH\nMANPATH=/opt/rh/ruby193/root/usr/share/man:\nLD_LIBRARY_PATH=/opt/rh/ruby193/root/usr/lib64\nPATH=/opt/rh/ruby193/root/usr/local/share/gems/bin:/opt/rh/ruby193/root/usr/local/bin:/opt/rh/ruby193/root/usr/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin\nPKG_CONFIG_PATH=/opt/rh/ruby193/root/usr/lib64/pkgconfig\nGEM_PATH=/opt/rh/ruby193/root/usr/local/share/gems:/root/.gem/ruby/1.9.1:/opt/rh/ruby193/root/usr/share/gems\nBUNDLE_BIN_PATH=/opt/rh/ruby193/root/usr/share/gems/gems/bundler-1.1.4/bin/bundle\n. ",
    "Axylos": "Could you post the code for one of the widgets you're working on or give more info on how to reproduce this error?  Does this pop up when trying to start the server, and if so is there anything else in the error message?\nIf you haven't already, try adding tilt and sass to your gemfile if you haven't already.  Is this error cropping up when you run bundle?\n. While I am fairly new, it seems like you've answered most of the question.  What particular widgets were you trying to extend?   It stands to reason that there should be a way to extent the 'user' widget without sequentially loading each module.  \nWhy not just create the c class before extending it?\n. ",
    "pacey": "I am having a similar problem. I want to extend the Dashing.Rickshaw class but my new widget gets defined in the processed javascript before its super class.\nIs there a way to control the order that the coffee script files are processed?\n. ",
    "austinheap": "Exactly what I was looking for, thanks @pallan!\n. ",
    "jonmadison": "how about you do a pull request? i for one can't really start using this until either myself or someone else makes it mobile friendly!\n. ",
    "jjasghar": "Great idea. Try to get this pushed upstream.\n. ",
    "scopenco": "the same problem in dashing-1.3.4\n. ",
    "tahnok": "Looks good to me! :sheep: :it:\n. ",
    "cbrentharris": "@MartynKeigher Check out the ruby twitter API client. turns out it is super easy. Just replace search with user_timeline\ntweets = twitter.user_timeline(\"handle\")\nC.B.\n. If you change \n$background-color\nat the very top, it will therefore change \n$meter-background\nbecause it is dependent on it. Can you post a snippet of the changed scss that isn't working.\ni.e.\n$background-color:  #888888;\nworks for me\n. Moved up to Dashing.Widget\n. ",
    "ckittel": "I was just looking for (wondering) the same thing.  For some of my manually-maintained dashboard widgets, I was going to write a quick-update utility that would pull the current values down, present them so I can edit it, and then submit it back up.\n. ",
    "ppenpraze": "Just was looking for the something. Does anyone have a solution?\n. Also, you can override it by adding style tag to your individual dashboard erb file in /dashboards\n. @cefigueiredo , I hear you and SASS is awesome for the widgets. \nWas just thinking it would be a way if you wanted to have a specific background color or style per dashboard. How would you implement different styles like background color per dashboard?\n. @cefigueiredo Sorry, I was referring to the entire page background. Thanks for the info, that's awesome...definitely much better than hard coding styles in the erb. Cheers.\n. ",
    "bemosior": "We managed to get it working with Apache and Passenger based on the information in this issue:  https://github.com/Shopify/dashing/issues/19\n. This is a less obtrusive version of the above. Just append a random string to a parameter that isn't used (in this example, 'nocache'). If your widget URL already has parameters, you'd want to use '&nocache' instead of '?nocache' in this example. \nSCHEDULER.every '60s' , :first_in => 0 do |job|\n  send_event('burndowniframe',{ url: \"<actual URL>?nocache=\" + SecureRandom.hex})\nend\n. ",
    "markomo": "I am also having issues with this especially with suburis\n. ",
    "nikilster": "I'm having this same exact issue - @knightsg were you able to figure this out?\n. Ah bummer - which one did you buy?\n. @pushmatrix Thanks for the suggestions!  I had looked at that page earlier - we're serving the site from heroku and are just want to load the dashboard in the browser - I think that the explanation loads it onto the raspberry pi directly.  \nAnyone experienced any issues loading it from a separate server? \n. ",
    "knightsg": "Unfortunately, no...we ended up getting some linux-based stick devices instead, which worked fine with our site. I just didn't have the time to devote to troubleshooting it further.\n. ",
    "mhovan": "We have been testing this fix for several months and it definitely improves the experience of using our dashboard on Chrome. \"Blank widgets\" at startup are much less frequent.\nPlease merge this pull request.\n. We experienced something similar on MacOS X Chrome.  The patch in pull request https://github.com/Shopify/dashing/pull/303 significantly reduced the issue.  It is a one line change that we now make on all of our dashboards.\n. ",
    "jimfdavies": ":+1: \n. ",
    "yllus": "Seems to be up and down - currently, http://dashingdemo.herokuapp.com/sample and http://dashingdemo.herokuapp.com/sampletv are again not displaying data. \nThis is in Chrome version 32.0.1700.77 and Firefox 26.0.\n. I am - that's the reason I was thinking of as well. Odd though considering that for months it ran without issue, and still does run occasionally without a problem.\n. @ssalinas, that seems to have done the trick! It took four steps to switch my free Heroku dyno running Dashing over to Passenger:\n1. I added the following line to Gemfile in my Dashing app's root folder:\ngem 'passenger' # Use Passenger on Heroku instead of Thin.\n2. Next, I ran the following command to install the updated bundle locally:\nbundle install\n3. With that complete, I added, committed and pushed both the updated Gemfile and Gemfile.lock files to my Git repository.\n4. Lastly, I created a new file called Procfile in my Dashing app's root folder:\nweb: bundle exec passenger start -p $PORT --spawn-method conservative\nThat's it - with that complete, I pushed the new code to Heroku and saw the app run immediately.\nReference: http://blog.crowdint.com/2013/11/07/improving-the-performance-of-a-heroku-app-with-passenger.html\n. ",
    "ssalinas": "Are you only using a single dyno on Heroku? I'm seeing the same issue with my dashboard and someone pointed out that I might need both a worker and web dyno to run it effectively. \n. Hey, just wanted to give an update here in case you're still having issues. It seems that the single heroku dyno was just very slow at processing and sending events. So, if it loaded, it would take a few minutes. I ended up switching to running passenger instead of thin and it works great now! just add 'passenger' to the Gemfile and something along the lines of:\nweb: bundle exec passenger start -p $PORT --spawn-method conservative\nin your Procfile\n. ",
    "eddiejaoude": "I have the same issue, Dashing doesn't seem to run on Heroku following the documentation. I tried your suggestion & unfortunately, I get another error....\nheroku logs --tail\n2014-12-03T07:01:38.903478+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `require_relative_dir'\n2014-12-03T07:01:38.903516+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903612+00:00 app[web.1]:   config.ru:1:in `block in <main>'\n2014-12-03T07:01:38.903489+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1.rb:3:in `<top (required)>'\n2014-12-03T07:01:38.903499+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:01:38.903512+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.0.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903515+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:01:38.903520+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.0.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903600+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903608+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `<top (required)>'\n2014-12-03T07:01:38.903629+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:29:in `<module:PhusionPassenger>'\n2014-12-03T07:01:38.903637+00:00 app[web.1]: \n2014-12-03T07:01:38.903621+00:00 app[web.1]:   config.ru:1:in `<main>'\n2014-12-03T07:01:38.903599+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `require'\n2014-12-03T07:01:38.903605+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `<top (required)>'\n2014-12-03T07:01:38.903632+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:28:in `<main>'\n2014-12-03T07:01:38.903618+00:00 app[web.1]:   config.ru:1:in `new'\n2014-12-03T07:01:38.903587+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports.rb:3:in `<top (required)>'\n2014-12-03T07:01:38.903615+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval'\n2014-12-03T07:01:38.903628+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:158:in `<module:App>'\n2014-12-03T07:01:38.903617+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize'\n2014-12-03T07:01:38.903496+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.2.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903518+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:01:38.903519+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:01:38.903526+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.rb:2:in `<top (required)>'\n2014-12-03T07:01:38.903598+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `<top (required)>'\n2014-12-03T07:01:38.903607+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `require'\n2014-12-03T07:01:38.936726+00:00 app[web.1]: [ 2014-12-03 07:01:38.9338 69/7f3a5a830700 agents/HelperAgent/RequestHandler.h:2306 ]: [Client 20] Cannot checkout session because a spawning error occurred. The identifier of the error is f3f68d8d. Please see earlier logs for details about the error.\n2014-12-03T07:01:38.903624+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:112:in `preload_app'\n2014-12-03T07:01:38.903634+00:00 app[web.1]: \n2014-12-03T07:01:38.903494+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:01:38.903623+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:112:in `eval'\n2014-12-03T07:01:38.936091+00:00 heroku[router]: at=info method=GET path=\"/\" host=dial-tone-dashboard.herokuapp.com request_id=c874e9f2-fd2b-49b6-8eab-a731ce57b5c6 fwd=\"80.5.64.178\" dyno=web.1 connect=0ms service=1666ms status=500 bytes=3319\n2014-12-03T07:02:49.376813+00:00 app[web.1]: App 149 stdout: \n2014-12-03T07:02:50.501762+00:00 heroku[router]: at=info method=GET path=\"/\" host=dial-tone-dashboard.herokuapp.com request_id=838845ca-8769-4f54-a62b-449533a073f2 fwd=\"80.5.64.178\" dyno=web.1 connect=4ms service=1199ms status=500 bytes=3319\n2014-12-03T07:02:50.458300+00:00 app[web.1]: App 149 stdout: \n2014-12-03T07:02:50.491773+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `open'\n2014-12-03T07:02:50.491762+00:00 app[web.1]:   Error details saved to: /tmp/passenger-error-RcYqwA.html\n2014-12-03T07:02:50.491754+00:00 app[web.1]: [ 2014-12-03 07:02:50.4915 69/7f3a5c95b700 Pool2/Implementation.cpp:287 ]: Could not spawn process for application /app: An error occured while starting up the preloader.\n2014-12-03T07:02:50.491771+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `close'\n2014-12-03T07:02:50.491775+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491760+00:00 app[web.1]:   Error ID: 9858bb33\n2014-12-03T07:02:50.491769+00:00 app[web.1]:   Message from application: Bad file descriptor - /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb (Errno::EBADF)\n2014-12-03T07:02:50.491783+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `each'\n2014-12-03T07:02:50.491785+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `require_relative_dir'\n2014-12-03T07:02:50.491778+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491780+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:22:in `block in require_relative_dir'\n2014-12-03T07:02:50.491776+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491789+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.491791+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491795+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491798+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:22:in `block in require_relative_dir'\n2014-12-03T07:02:50.491800+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `each'\n2014-12-03T07:02:50.491815+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.2.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491810+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491812+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491818+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491820+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491830+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.3.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491833+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491834+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491803+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `require_relative_dir'\n2014-12-03T07:02:50.491807+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.491836+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491837+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491976+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491971+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491977+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491979+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491987+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491990+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491950+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491970+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.0.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491980+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.491982+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.0.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491992+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.491993+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T07:02:50.491997+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T07:02:50.492059+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval'\n2014-12-03T07:02:50.492029+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.492060+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize'\n2014-12-03T07:02:50.492031+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `require'\n2014-12-03T07:02:50.492062+00:00 app[web.1]:   config.ru:1:in `new'\n2014-12-03T07:02:50.492054+00:00 app[web.1]:   config.ru:1:in `require'\n2014-12-03T07:02:50.492058+00:00 app[web.1]:   config.ru:1:in `block in <main>'\n2014-12-03T07:02:50.492032+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.492046+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `require'\n2014-12-03T07:02:50.492048+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `<top (required)>'\n2014-12-03T07:02:50.492049+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `require'\n2014-12-03T07:02:50.492050+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.492053+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `<top (required)>'\n2014-12-03T07:02:50.492065+00:00 app[web.1]:   config.ru:1:in `<main>'\n2014-12-03T07:02:50.492066+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:112:in `eval'\n2014-12-03T07:02:50.492068+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:112:in `preload_app'\n2014-12-03T07:02:50.492051+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `require'\n2014-12-03T07:02:50.492071+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:158:in `<module:App>'\n2014-12-03T07:02:50.492072+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:29:in `<module:PhusionPassenger>'\n2014-12-03T07:02:50.492076+00:00 app[web.1]:   /app/vendor/bundle/ruby/2.0.0/gems/passenger-4.0.53/helper-scripts/rack-preloader.rb:28:in `<main>'\n2014-12-03T07:02:50.492077+00:00 app[web.1]: \n2014-12-03T07:02:50.492080+00:00 app[web.1]: \n2014-12-03T07:02:50.502818+00:00 app[web.1]: [ 2014-12-03 07:02:50.5026 69/7f3a5a830700 agents/HelperAgent/RequestHandler.h:2306 ]: [Client 20] Cannot checkout session because a spawning error occurred. The identifier of the error is 9858bb33. Please see earlier logs for details about the error.\nScreenshot\n\nAny ideas?\n. I cloned the repo rather than installing via gem\n. I have a similar issue, that I can not deploy to heroku. \nLogs...\nheroku logs --tail\n2014-12-03T06:41:50.223364+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.rb:2:in `<top (required)>'\n2014-12-03T06:41:50.223436+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:41:50.223471+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:41:50.223507+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:41:50.223489+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.rb:2:in `<top (required)>'\n2014-12-03T06:41:50.223542+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports.rb:3:in `<top (required)>'\n2014-12-03T06:41:50.223525+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:41:50.223565+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `require'\n2014-12-03T06:41:50.223591+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `<top (required)>'\n2014-12-03T06:41:50.223610+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `require'\n2014-12-03T06:41:50.223627+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `<top (required)>'\n2014-12-03T06:41:50.223645+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `require'\n2014-12-03T06:41:50.223663+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `<top (required)>'\n2014-12-03T06:41:50.223691+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `require'\n2014-12-03T06:41:50.223710+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `<top (required)>'\n2014-12-03T06:41:50.223729+00:00 app[web.1]:    from config.ru:1:in `require'\n2014-12-03T06:41:50.223801+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize'\n2014-12-03T06:41:50.223748+00:00 app[web.1]:    from config.ru:1:in `block in <main>'\n2014-12-03T06:41:50.223765+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval'\n2014-12-03T06:41:50.223821+00:00 app[web.1]:    from config.ru:1:in `new'\n2014-12-03T06:41:50.223840+00:00 app[web.1]:    from config.ru:1:in `<main>'\n2014-12-03T06:41:50.223859+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:in `eval'\n2014-12-03T06:41:50.223877+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:in `load'\n2014-12-03T06:41:50.223894+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/controllers/controller.rb:182:in `load_rackup_config'\n2014-12-03T06:41:50.223946+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/runner.rb:199:in `run_command'\n2014-12-03T06:41:50.223928+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/controllers/controller.rb:72:in `start'\n2014-12-03T06:41:50.223964+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/runner.rb:155:in `run!'\n2014-12-03T06:41:50.224000+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `load'\n2014-12-03T06:41:50.223982+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/bin/thin:6:in `<top (required)>'\n2014-12-03T06:41:50.224030+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `<main>'\n2014-12-03T06:41:48.262512+00:00 heroku[web.1]: Starting process with command `bundle exec thin start -R config.ru -e production -p 31395`\n2014-12-03T06:41:50.951458+00:00 heroku[web.1]: Process exited with status 1\n2014-12-03T06:41:50.961623+00:00 heroku[web.1]: State changed from starting to crashed\n2014-12-03T06:41:50.962400+00:00 heroku[web.1]: State changed from crashed to starting\n2014-12-03T06:42:01.516671+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `open'\n2014-12-03T06:42:01.516673+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516675+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516677+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516623+00:00 app[web.1]: /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb:2:in `close': Bad file descriptor - /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io/open.rb (Errno::EBADF)\n2014-12-03T06:42:01.516680+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `each'\n2014-12-03T06:42:01.516699+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516678+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:22:in `block in require_relative_dir'\n2014-12-03T06:42:01.516697+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516683+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1/io.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516700+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.2.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516682+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `require_relative_dir'\n2014-12-03T06:42:01.516702+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516685+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516703+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516689+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `each'\n2014-12-03T06:42:01.516708+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516694+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:21:in `require_relative_dir'\n2014-12-03T06:42:01.516707+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516696+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.1.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516710+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516714+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.0.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516711+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516715+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516717+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516686+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516704+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/1.9.3.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516688+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:22:in `block in require_relative_dir'\n2014-12-03T06:42:01.516706+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516720+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516719+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.0.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516722+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516723+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.0.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516725+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516726+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516727+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/2.1.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516729+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require'\n2014-12-03T06:42:01.516730+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports/tools.rb:343:in `require_with_backports'\n2014-12-03T06:42:01.516731+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/backports-3.6.0/lib/backports.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516755+00:00 app[web.1]:    from config.ru:1:in `new'\n2014-12-03T06:42:01.516733+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `require'\n2014-12-03T06:42:01.516734+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/capture.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516736+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `require'\n2014-12-03T06:42:01.516737+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/sinatra-contrib-1.4.2/lib/sinatra/content_for.rb:2:in `<top (required)>'\n2014-12-03T06:42:01.516739+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `require'\n2014-12-03T06:42:01.516741+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing/app.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516744+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `require'\n2014-12-03T06:42:01.516746+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/dashing-1.3.4/lib/dashing.rb:3:in `<top (required)>'\n2014-12-03T06:42:01.516749+00:00 app[web.1]:    from config.ru:1:in `require'\n2014-12-03T06:42:01.516751+00:00 app[web.1]:    from config.ru:1:in `block in <main>'\n2014-12-03T06:42:01.516752+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval'\n2014-12-03T06:42:01.516754+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize'\n2014-12-03T06:42:01.516759+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:in `eval'\n2014-12-03T06:42:01.516760+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/rack/adapter/loader.rb:33:in `load'\n2014-12-03T06:42:01.516762+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/controllers/controller.rb:182:in `load_rackup_config'\n2014-12-03T06:42:01.516763+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/controllers/controller.rb:72:in `start'\n2014-12-03T06:42:01.516765+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/runner.rb:199:in `run_command'\n2014-12-03T06:42:01.516769+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `load'\n2014-12-03T06:42:01.516757+00:00 app[web.1]:    from config.ru:1:in `<main>'\n2014-12-03T06:42:01.516770+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `<main>'\n2014-12-03T06:42:01.516766+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/lib/thin/runner.rb:155:in `run!'\n2014-12-03T06:42:01.516768+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.2/bin/thin:6:in `<top (required)>'\n2014-12-03T06:41:59.633128+00:00 heroku[web.1]: Starting process with command `bundle exec thin start -R config.ru -e production -p 14375`\n2014-12-03T06:42:02.341878+00:00 heroku[web.1]: Process exited with status 1\n2014-12-03T06:42:02.354975+00:00 heroku[web.1]: State changed from starting to crashed\n2014-12-03T06:43:04.703376+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/\" host=dial-tone-dashboard.herokuapp.com request_id=a0851f0d-993b-4cee-91b2-7d97071d97fa fwd=\"80.5.64.178\" dyno= connect= service= status=503 bytes=\n2014-12-03T06:43:05.344155+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/favicon.ico\" host=dial-tone-dashboard.herokuapp.com request_id=45c17e75-0c4c-4921-8ea9-49418dbaa4e4 fwd=\"80.5.64.178\" dyno= connect= service= status=503 bytes=\n2014-12-03T06:45:14.562896+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/\" host=dial-tone-dashboard.herokuapp.com request_id=960e9a80-ed0a-4de5-b36b-8e07a9570943 fwd=\"80.5.64.178\" dyno= connect= service= status=503 bytes=\n2014-12-03T06:45:19.156231+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/\" host=dial-tone-dashboard.herokuapp.com request_id=6fbdc5ea-7334-48fa-8d9f-ad97e9bad51d fwd=\"80.5.64.178\" dyno= connect= service= status=503 bytes=\nAny ideas?\n. Thanks What version do you recommend & how where would I specify it?\n. Thank you! That now deploys, but no data being displayed, but locally running dashing start data is displayed correctly.\nAny ideas?\n. @tylermauthe thanks I will give it a try\n\nI fixed this by running:\nbundle update back ports\nand making sure my Gemfile.lock was updated and committed.\n. \n",
    "abepetrillo": "Passenger didn't help speed up anything for me on Heroku. Although I am using one dyno...\n. I've just gone through a similar process to get it working. Here's what I ended up with\n``` ruby\nrequire 'omniauth/strategies/google_oauth2'\nrequire 'dashing'\nrequire 'yaml'\nconfigure do\n  set :access_token, ENV['AUTH_TOKEN']\n  if Sinatra::Base.production?\n    helpers do\n  def protected!\n    redirect '/auth/google_oauth2' unless session[:user_id]\n  end\n\nend\n\nuse Rack::Session::Cookie, secret: ENV['secret']\n\n\nuse OmniAuth::Builder do\n  provider :google_oauth2, ENV['GOOGLE_CLIENT_ID'], ENV[\"GOOGLE_CLIENT_SECRET\"]\nend\n\nget '/auth/google_oauth2/callback' do\n  if auth = request.env['omniauth.auth']\n    session[:user_id] = auth['info']['email']\n    redirect '/abe'\n  else\n    redirect '/auth/failure'\n  end\nend\n\nget '/auth/failure' do\n  'Nope.'\nend\n\nend\nend\nmap Sinatra::Application.assets_prefix do\n  run Sinatra::Application.sprockets\nend\nrun Sinatra::Application\n```\n. ",
    "tomcoonen": "@ssalinas @yllus old issue, but still relevant, it did the trick on Heroku.\n. ",
    "binarymason": "yep, still works.  thanks @yllus and @ssalinas \n. ",
    "Floppy": "This doesn't work at all at the moment, it breaks event streams. Bear with me.\n. Fixed, just had to make the EventSource path non-relative.\n. Thanks!\n. Verified this is working for me in IE11. I have a branch with both the @liquiddc and @bielfrontera changes in, and it's working just fine: https://github.com/theodi/dashing/tree/ie. Thanks guys!\n. I have a PR open at the moment which supports this. See #306 and add a +1 for a merge if you like it :)\n. Your issue with no data might be the same as mine: the request to the event source needs a leading / on it. Check the PR to see where it goes.\n. ",
    "nnaman": "Floppy, thank you for adding this.  I was wondering if there's any documentation/details on how to use the sub-dir structure and sample use case\n. ",
    "goodbomb": "+1\n. ",
    "jtheoof": "My bad, it's actually looking for files named: long_name. But I'm wondering why there is anything being rendered if no file named long_name.html was found.\n. Can this be merged?. OK closing this one. . ",
    "markwainwright": "Was just about to make the exact same PR :P Please merge!\n. ",
    "bielfrontera": "Hi! \nI think I've found why widgets are not loaded in IE. The problem is that object.constructor.name doesn't work in IE. This property is used at dashing.coffee:\ncoffee\nclass Dashing.Widget extends Batman.View\n  constructor:  ->\n    # Set the view path\n    @constructor::source = Batman.Filters.underscore(@constructor.name)\n    super\nYou can patch IE following this instructions: http://matt.scharley.me/2012/03/09/monkey-patch-name-ie.html (via stackoverflow )\n. The patch I suggested before does not work when code is minified.  I've finally added this method to Dashing.widget class:\n``` coffee\n  getName: () =>\n    funcNameRegex = /function ([^(]{1,})(/;\n    results = (funcNameRegex).exec(@constructor.toString())\n    if (results && results.length > 1) then results[1].trim() else \"\"\n```\nAnd changed constructor.name by getName() at the class constructor method.\nI've tested in Firefox, Chrome and Internet Explorer (10 and 11) and it works with javascript minified (attention, the code is not uglified). \n. I've tried on IE11 after applying @liquiddc changes and constructor.name replacement and it works:\n\n. ",
    "anweiss": "I'm noticing that even the Sample dashboard still does not work in IE11, despite this fix.\n. ",
    "kevster": "@tylermauthe any update? would be nice to have it merged.\n. Tried installing dashing-jruby and replacing in my Gemfile and config.ru, but I get the following error when running \"dashing start\":\n/Library/Ruby/Gems/2.0.0/gems/bundler-1.6.4/lib/bundler/rubygems_integration.rb:256:in block in replace_gem': thin is not part of the bundle. Add it to Gemfile. (Gem::LoadError)\n    from /usr/bin/thin:22:in'\nAm I doing something wrong?\n. Great, works like a charm! By the way, noticed you're using heroku. Did you specify a Procfile for using dashing-jruby (and puma)?\n. Sounds great!\n. $ sudo gem install dashing\nInstalling gems might require administrative privileges.\n. Hi, you should be able to create a Windows Service that starts the process: http://support.microsoft.com/kb/251192\n. Yeah, had the same issue. Same solution as Andrew. Apparently Heroku updated to a new revision of Ruby which didn't work for me, so I specified an earlier revision.\n. I had the issue after updating from rev 481, so I would recommend 481. Start your Gemfile with:\nruby '2.0.0', :patchlevel => '481'\n. Check your heroku logs. Getting any errors?\n. I had the same problem, but in my case downgrading coffee-script-source to 1.8.0 did the trick. Source: http://stackoverflow.com/questions/28312460/object-doesnt-support-this-property-or-method-rails-windows-64bit\n. ",
    "cjdcordeiro": "Hi,\nmany thanks for that fix.\nOne thing though, what about Microsoft Edge? I see this fix does not make it work with Edge...any suggestions?\n. ",
    "lunarose23": "Any news on this? if we decide to go with dashing I may be forking and doing this. But want to make sure before I spend time on it that someone already didn't and it has some sort of block.\n. ",
    "christianhau": "Would love to get an update on this as I have a dashboard that I have to how in IE that currently doesn't work.. Thanks in advance!. This can be fixed by installing node.js.... ",
    "anthroprose": "I use the Meter for this, just don't use the previous value option, you get a single integer displayed in the widget.\n. ",
    "sammarx": "I managed to get this working in the ugliest way possible. \nIn my job definition, I set an array (using the sinatra set method) with my list of monitors, and pass a send_event to each monitor.\nThen in the dashboard, I access the array through the settings.$VARNAME.\nhttps://gist.github.com/sammarx/8806031\nThis is a proof of concept.\nI'm going to look into extending dashing to pass a set_local method or something along those lines.\n. ",
    "dav3860": "Thank you for the workaround!\n. ",
    "davejohnston": "Hi Guys,\nI came across this and the solution works for me.  The problem is that I need to refresh the page to see when new widgets have appeared.\nIs there anyway to trigger a page refresh from the job?  for example if you keep track of the number of roles, if this changes, then trigger a refresh ?\n. ",
    "jiemingw": "I'd love to know too. Did you figure out?\n. ",
    "varunsrin": "+1 for this issue, I haven't found a workaround yet\n. @tylermauthe I think being able to define the axes optionally is good - it adds a bit of flexibility that enables a lot of use cases. \nFor example, we want to display a graph of visitors to site over time, but its a little annoying that the y-axes won't just display the hours but insists on being 1, 2, 3 ... 24. \n. Actually, this is happening on a paid instance with two dynos. \nThe other aspect to the problem is that the timeouts seem completely unrelated to the reboots - ive seen timeouts happen for a few hours before a reboot kicks in, so I think they may be two separate issues now. \nWhat I noticed that's interesting is that Heroku Metrics don't work claiming that two or more dynos are needed to run Metrics, even though the dyno page says there are two 1x dynos running and is billing us $34/month for it. \nThis is my first Sinatra deployment on Heroku, is there anything specific that needs to be configured to get the dashing server to utilize both dynos?\n. Further investigation:\n- Disabling GitHub authentication had no impact\n- The rufus 503's were a red herring, that was a separate issue that I fixed\n- Installed New Relic, but all transactions in New Relic average 300 ms, with the highest being 2k ms. Nothing in New Relic indicates the cause of the H12 errors - in fact, I can't even see any request queueing that takes that long. \nBut I'm still seeing frequent H12 timeout events in the heroku logs that return a 503 with a 30,000 ms wait time. This happens whenever I have any dashboard open.\nI'm assuming that the request is being passed on to my server and Sinatra+Thin are not sending a response back to Heroku routers in < 30s.  \nI'm a little surprised that these long running events are not showing up in New Relic - I'm not very familiar with Sinatra, but I'm going to keep looking into this.... \n. So here's what I've seen so far: \n- I've been using Cedar (have seen some H15 errors occasionally, which are cedar specific) \n- Heartbeat event has not helped\n- Scaling dynos from 1 -> 2 has not helped at all \n- Adding rack-timeout (15s) didn't trigger any timeout exceptions on the dynos\nI think the request is getting lost somewhere between the heroku router and the dyno, because otherwise I'd expect rack-timeout to be raising exceptions. \nI don't fully understand the client-server pattern for how events work in dashing, going to dig into that more today.... perhaps there's something in there that I'm missing. \nI'm copying a few lines over from the latest logs to give you an idea of frequency \n10:50:11.365 2015-01-23 18:50:10.928346+00:00 app web.1 - - 23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net - - [23/Jan/2015 18:50:10] \"GET /events HTTP/1.1\" 200 - 46.9910\n\u00bb 10:50:14.581 2015-01-23 18:50:14.256238+00:00 app web.1 - - source=rack-timeout id=c7a15979-77a8-40ee-b2e8-8f784b1b36c8 wait=4ms timeout=15000ms state=ready at=info\n\u00bb 10:51:01.180 2015-01-23 18:51:00.839525+00:00 heroku router - - at=error code=H12 desc=\"Request timeout\" method=GET path=\"/events\" host=foo.bar.com request_id=c7a15979-77a8-40ee-b2e8-8f784b1b36c8 fwd=\"23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net\" dyno=web.1 connect=1ms service=46582ms status=503 bytes=1387 CriticalHigh Response Time\n\u00bb 10:51:01.265 2015-01-23 18:51:00.838959+00:00 app web.1 - - 23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net - - [23/Jan/2015 18:51:00] \"GET /events HTTP/1.1\" 200 - 46.5814\n\u00bb 10:51:04.382 2015-01-23 18:51:04.074732+00:00 app web.1 - - source=rack-timeout id=ca31ccf4-626a-4f88-bddd-318172b5baad wait=7ms timeout=15000ms state=ready at=info\n\u00bb 10:51:51.235 2015-01-23 18:51:50.847724+00:00 app web.1 - - 23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net - - [23/Jan/2015 18:51:50] \"GET /events HTTP/1.1\" 200 - 46.7719\n\u00bb 10:51:51.452 2015-01-23 18:51:50.842524+00:00 heroku router - - at=error code=H12 desc=\"Request timeout\" method=GET path=\"/events\" host=foo.bar.com request_id=ca31ccf4-626a-4f88-bddd-318172b5baad fwd=\"23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net\" dyno=web.1 connect=3ms service=46769ms status=503 bytes=1387 CriticalHigh Response Time\n\u00bb 10:51:54.393 2015-01-23 18:51:54.085162+00:00 app web.1 - - source=rack-timeout id=c848edc5-086c-4fab-a8f5-527a33d64ca3 wait=9ms timeout=15000ms state=ready at=info\n\u00bb 10:52:41.777 2015-01-23 18:52:41.457082+00:00 app web.1 - - 23.4.18.10/b-34-5-68-10.hdf1.ca.comcast.net - - [23/Jan/2015 18:52:41] \"GET /events HTTP/1.1\" 200 - 47.3707\n. ",
    "juanpaulo": "Which version of Ruby are you using? Also, are you using rbenv or rvm?\n. ",
    "iiro": "I\u00b4m having the same problem - Ubuntu 12.04 LTS. I had to install ruby1.8 too (and ruby1.9.1) to get this far...\n@jemf91 did you find a fix for this?\n. Switched to Ubuntu 14.04 LTS - installs fine there. That\u00b4s fine :)\n. ",
    "xakraz": "we may close the issue ?\n. ",
    "jemf91": "Yes we can. Thanks.\nOn Thu, Oct 30, 2014, 08:11 Xavier Krantz notifications@github.com wrote:\n\nwe may close the issue ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/318#issuecomment-61053248.\n. \n",
    "Sjlver": "Oh, and I forgot to mention that apart from this issue, dashing has worked great so far, and I'm very happy with the framework!\n. @mcritchlow Thanks! I had looked for documentation, but had not found that wiki page.\n. @odrino14 I think with the documentation pointed to by mcritchlow, it should work.. ",
    "mr-deamon": "You can add \"prepend prefix | append suffix\" to the meter-widget and use it in your dashboard:\nSee my commit regarding this:\n76a645b75b0f8173a5e5c7c1e16ea9633ca11e40\n. Yes, now it is writing multiple values, but still, if i restart dashing it deletes them and starts from scratch. Do you do some history-readings in you job in order to send full history after a restart?\nThanks\nChris\n. ",
    "liquiddc": "Thanks for this.  I note that this same fix is used in the dashing.coffee in the node.js port of dashing, which works much better with IE.\n. Hi Rafael,  Sorry for the delayed response.  I moved over to dashing-js, a\nnode.js clone of dashing, and found that the IE fixes have been more\nactively taken on and it works fine in IE11.  I have also noted that in a\ncorporate environment, the corporate network proxy will introduce issues\nthat you just won't see in a less restricted environment.  Cheers, Dan\nOn Thu, Jun 12, 2014 at 12:34 AM, Rafael Escrich notifications@github.com\nwrote:\n\nHello,\ni'm trying to use dashing with the fixes for the IE and i'm not getting\nnothing. I tried in IE9, IE10 and IE11. I even cloned the repo of\nbielfrontera and liquidcc but nothing. Can you help?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/pull/322#issuecomment-45749409.\n. \n",
    "rafaelescrich": "Hello,\ni'm trying to use dashing with the fixes for the IE and i'm not getting nothing. I tried in IE9, IE10 and IE11. I even cloned the repo of bielfrontera and liquidcc but nothing. Can you help?\n. ",
    "StephenTerry": "Rafael,\nHave you installed node.js and the event-source code?  It wasn't working for me until I installed those things.\n. ",
    "mdbxz": "In config.ru:\nconfigure do\n  set :history_file, ''\nend. ",
    "sankethkatta": "check for file name conflicts. I got this error when I copied over the list widget to a new folder. I had changed the folder name and the coffee class name, but not the files. \n. ",
    "Rucknar": "I'd be interested in this too, would save us putting job logic in our jobs and make them more re-usable. \n. ",
    "raimo": "Definitely +1\n. ",
    "bitle": "I copied my code from that tutorial. You can try this code:\nset :history, Redis::HashKey.new('dashing-history',  :marshal => true)\nif you want to experiment. Source: https://github.com/nateware/redis-objects#values\n. Do you see any error in logs?\n. You can use an iframe widget.\n. Hi Sam,\nYou can modify iframe.html file to look like this:\n<iframe src=\"http://helpdesk.eastquayit.net:8080/conn1.aspx\" frameborder=0></iframe>\nYour target page would need to refresh itself in this case.\n. ",
    "and7ey": "Will appreciate if somebody would publish a wiki article with step-by-step tutorial how to enable redis usage (I did something, but not sure if it works correctly... first time use Ruby app). Believe, it will help other users too. \n. The code given in the commit doesn't work well when both history.yml exists and Redis supported: \n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/psych/visitors/to_ruby.rb:334:in `path2class': undefined class/module Redis:: (ArgumentError)\n. I added the following wiki page to demonstrate how to achieve what I was looking for - How-to: Store data to and display from database\n. @pebra, I also expected to have it working, but it doesn't - <title></title> is empty on the generated page.\n. @r0n22, thanks. Looks like your approach is correct one (https://github.com/Shopify/dashing/blob/master/templates/project/dashboards/sample.erb). This is the reason to have it documented. Can I change favicon in the same way - modify layout.erb, add favicon variable there and define it in the dashboard?\n. @latitjuig, something happened with your config.ru file. Probably, you've uploaded the dashing itself instead of dashing project (if you are talking about production).\n. ",
    "mkrakowitzer": "Did you ever figure this out? I need to do the same.\n. ",
    "vorkuta": "@tylermauthe Does this work for you? I get the following response when I try this\n\nInternal Server Error\n\nIf I use the following\ncurl -d '{ \"auth_token\": \"myauthtoken\", \"current\": 1000 }' http://myurl/widgets/karma\nThen it works and updates the value, but obviously doesn't show the difference. I have no idea how to get 'last' to work\n. ",
    "gchendry": "Trying out things as well, cannot get onData event to work after initial startup, all I have is a console log saying that it is \"here\", and no errors in the console when running\n. ",
    "hicolour": "you may extend this script to calculate size \n```\n\n$(function() {\n  // These settings override the defaults set in application.coffee. You can do this on a per dashboard basis.\n  Dashing.gridsterLayout('[{\"col\":2,\"row\":1},{\"col\":1,\"row\":1},{\"col\":3,\"row\":1},{\"col\":2,\"row\":2},{\"col\":3,\"row\":2},{\"col\":1,\"row\":2},{\"col\":5,\"row\":1},{\"col\":4,\"row\":2},{\"col\":2,\"$\n  Dashing.widget_base_dimensions = [370, 340]\n  Dashing.numColumns = 5\n});\n\n```\n. ",
    "stefanahman": "How do you specify more columns? I'd tried Dashing.numColumns = 5 in the console, but nothing happened.\n. Is it possible to set this manually in the application?\n. I meant the possibility to have more than 3 columns.\n. ",
    "JediFreeman": "I think your issue might be related to the one I am also experiencing - for me if I set sizex to be larger than six I get incorrect width sizing on my li elements. See this gist for writeup and details: https://gist.github.com/JediFreeman/10904938\n. Hah! did some more digging on Gridster's issue listing - came across this issue \"Impossible to create a widget bigger than 5 cols\" - https://github.com/ducksboard/gridster.js/issues/16\nSure enough, I was able to fix my dashing issue with sizing by adding the following line to application.coffee inside the gridster initialization (right before the \"draggable\" section:\nmax_size_x: Dashing.numColumns\nSince the default max_size_x is 5 you cannot make a widget bigger than 5 columns unless you set this.\nFYI - I reproduced your dimension issue (swapping your custom widget for text widget and getting same problem) and verified setting max_size_x in the gridster initialization should fix your layout issue.\n. ",
    "meilke": "Amazing! Thanks! It worked. Heureka! If you want, you can head over to Stackoverflow and also put your solution there.\n. ",
    "tolleiv": "Thanks this fix helped a lot - the question is why Dashing needs to introduce this default value?\n. ",
    "sandykadam": "Hi there,\nCan I use DIV instead of ul/liv ?\nI want to show dashing board in circle or honeybee format instead of squares. Any suggestions please let me know.\nThanksm\n. ",
    "egilh": "Have you installed Ruby Devkit? It would seem that's what's missing.\n. ",
    "gauravlanjekar": "@gregschwartz  Hello, can you post what solved ur problem. I am facing the same issue.\n. This worked for me.\nsudo ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future gem install dashing\n. ",
    "sarahduve": "I also have this happening, but with meter widgets and regular rufus scheduled jobs (not curl). I have used one off curl commands in the past though. My job is set to be sent every five minutes (though in reality, it seems to be running more frequently). Right now for instance I'm watch it alternate between values \"Last updated at\" 12:07 and 12:10 at inconsistent intervals (sometimes as short as 3 seconds, sometimes closer to a minute).\n. ",
    "scr512": "I see this as well on my install. I'm running Dashing on an ARM based blade\n(32bit) and I've seen memory leaking on the thin webserver.\n[image: Inline image 1]\nOn Wed, Apr 2, 2014 at 10:23 AM, Darz4 notifications@github.com wrote:\n\nHello\nI am using the Dashing framework to display graphs showing the evolution\nof values during the last 24 hours.\nI fetch new values every 15 seconds, append them to their arrays, and send\nthose arrays to the widgets using the send_event method. So I send very\nlarge arrays.\nHere is the issue : the client's memory load grows of about 4 Mo every 15\nseconds, when he receives my arrays.\nTo reproduce this leak with minimal code I created a fresh new dashboard\nand modified the sample.erb file :\n\n\n\n\n</li>\n<li data-row=\"1\" data-col=\"3\" data-sizex=\"2\" data-sizey=\"1\">\n  <div data-id=\"convergence2\" data-view=\"Graph\" data-title=\"Convergence\" style=\"background-color:#96ff18\"></div>\n</li>\n<li data-row=\"2\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"1\">\n  <div data-id=\"convergence3\" data-view=\"Graph\" data-title=\"Convergence\" style=\"background-color:#9618ff\"></div>\n</li>\n<li data-row=\"2\" data-col=\"3\" data-sizex=\"2\" data-sizey=\"1\">\n  <div data-id=\"convergence4\" data-view=\"Graph\" data-title=\"Convergence\" style=\"background-color:#5555ff\"></div>\n</li>\n\nSo this dashboard contains 4 graphs names convergence1, convergence2,\nconvergence3 and convergence4.\nI removed all jobs except convergence.rb, which I modified :\npoints = .each do |i|\n  points << { x: i, y: rand(50) }endlast_x = points.last[:x]\nSCHEDULER.every '10s' do\n  points.shift\n  last_x += 1\n  points << { x: last_x, y: rand(50) }\nsend_event('convergence1', points: points)\n  send_event('convergence2', points: points)\n  send_event('convergence3', points: points)\n  send_event('convergence4', points: points)end\nWhen I launch this dashing server and open the dashboard in the chrome web\nbrowser, it shows 4 graphs with random values.\nAfter a minute, using the windows task manager (or chrome's) we can see\nthat the memory load is growing every 10 seconds\nI am using dashing in a professional context and we chose this solution to\ndisplay real-time stats on large screens.\nHowever, this issue is preventing us from using it at the moment.\nDo you have any idea how I could fix this issue, even if it's hack\nThank you\n\nReply to this email directly or view it on GitHubhttps://github.com/Shopify/dashing/issues/342\n.\n. \n",
    "Darz4": "I disabled debugMode and the problem seems to be solved. My bad.\n. ",
    "adunaic": "Thankyou.\n. ",
    "mpandiar": "Derwin \nany luck on this effort...? I'm trying to fetch data from Oracle DB and push to Dashing graphs.... any help would be appreciated .... Raj\n. Thank You!\nI have created following job as you have create above:\n!/usr/bin/env ruby\nencoding: utf-8\nrequire 'oci8'\nSCHEDULER.every '15m', :first_in => 0 do |job|\nconn = OCI8.new(apps,apps,\"192.168.56.102:1598/vis\");\u2028\nsql = \"select first_name, last_name  from emp where rownum < 6\"\ncursor = conn.exec(sql) \u2028\ncursor.define(1, String, 30)\u2028\ncursor.define(2, Integer)\u2028\nrowitems = []\nwhile r = cursor.fetch()\u2028\nrowitems << {\u2028\n:label => r[0],\u2028\n:value => r[1]\u2028}\u2028\nend\nsend_event('somewidget', { items: rowitems } )\u2028\nputs rowitems\u2028\ncursor.close()\nend\u2028\nconn.logoff\n\nwhen I executed (tested)\n$ruby oracle_test.rb    I get following errors,  BTW (i'm newbie to Ruby / Gem world)\noracle_data.rb:8: syntax error, unexpected tIDENTIFIER, expecting $end\nmr-macbook-pro:jobs mosesrajan$ ruby  oracle_data.rb\noracle_data.rb:8: syntax error, unexpected tIDENTIFIER, expecting keyword_end\noracle_data.rb:9: syntax error, unexpected tIDENTIFIER, expecting keyword_end\noracle_data.rb:10: syntax error, unexpected tIDENTIFIER, expecting keyword_end\noracle_data.rb:13: syntax error, unexpected tIDENTIFIER, expecting keyword_do_cond or ';' or '\\n'\noracle_data.rb:14: syntax error, unexpected '\\n', expecting tASSOC\noracle_data.rb:15: syntax error, unexpected '\\n', expecting '='\noracle_data.rb:16: syntax error, unexpected tIDENTIFIER, expecting keyword_end\n:value => r[1]\u2028}\u2028\n                 ^\noracle_data.rb:19: syntax error, unexpected tIDENTIFIER, expecting $end\nThanks for the help!\n. ",
    "kondalonline": "I am getting below error. I have oci8 installed.  Can you throw some light as what is wrong here\n\ngem list ruby-oci\n* LOCAL GEMS \nruby-oci8 (2.2.2)\nirb\n2.3.1 :001 > require 'oci8'\nWarning: NLS_LANG is not set. fallback to US7ASCII.\n => true\n\nError\n\n/usr/local/rvm/gems/ruby-2.3.1/gems/backports-3.6.8/lib/backports/std_lib.rb:9:in require': cannot load such file -- oci8 (LoadError)\n    from /usr/local/rvm/gems/ruby-2.3.1/gems/backports-3.6.8/lib/backports/std_lib.rb:9:inrequire_with_backports'\n    from /opt/rundeck/jobs/convergence.rb:2:in `'\n. I have added below line to Gem file. This resolved the problem\ngem 'ruby-oci8'\n. ",
    "scherfnet": "Sorry. This is clearly documented on the main page in the application.coffee script.\nhttp://shopify.github.io/dashing/#data\n. ",
    "andmcgregor": "I commented on the issue you submitted to my repo. I must have missed the notification when the question was initially asked.\n. ",
    "kellyzdude": "Thanks for the response, I'll follow up there!\n. ",
    "jm3": "good idea.\n. ",
    "jrm": "Just use ERB in a dashboard, like so:\nhttps://gist.github.com/jrm/859feb52f6cbedeecbbc\nJust add any file names you want to exclude in the reject filter, i.e. the layout and this dashboard:\nDir.glob(\"./dashboards/*\").reject {|f| f.match 'layout|summary' }\n. ",
    "megatux": "Hi. Copy&paste your code, fixed a little typo\nruby\n    ... && @auth.credentials == ['admin', 'admin'])  # add missing \" ' \" to last 'admin'\nand worked here.\n. ",
    "ChrisZieba": "good call!\n. ",
    "samc123321": "Hi Bitle\nWhat would be the data-view ? Text?\nAnd would I just pop that URL in the html for iframe?\nThanks for your help\nSam\n. Hi Bitle,\nAnd to add the iFrame widget into the dashboard, how would I got about this?\nThanks \nSam\n. Hi Derwin,\nThanks for your help - where would I put the curl?\nThanks,\nSam\n. Hi Guys\nI am still having issues with this, getting really confused on how to edit a certain widget and place it into a dashboard. \nI dont mean to be rude but is there any way you can knock up the dashing default with this iframe widget implemented so I can see how it was setup. Is this possible?\nThanks\nSam\n. ",
    "axboehme": "Hi derwin12,\nnow i am confused. I follow exatly your instructions, but still there is nothing displayed in the iframe. What am i doing wrong?\nHere is my dashboards/sample.erb\n<% content_for :title do %>My super sweet dashboard<% end %>\n<div class=\"gridster\">\n  <ul>\n    <li data-row=\"1\" data-col=\"2\" data-sizex=\"2\" data-sizey=\"1\">\n      <div data-id=\"myiframe\" data-view=\"Iframe\"></div>\n    </li>\n  </ul>\n</div>\nAnd the jobs/iframe.rb\nSCHEDULER.every '20s', :first_in => 0 do |job|\n    url = \"http://www.google.de\"\n    puts url\n    send_event('myiframe', url: url)\nend\nWith that sample.erb the only thing i see is a grey page.\n. sorry, my fault. Using only google.de won't work. \n. ",
    "danggrianto": "add this set :protection, :except => :frame_options on config.ru\n. ",
    "darkmoves": "I figured out the problem. Closing the issue. \n. ",
    "joallard": "\n. Yep, confirming that the same exact file converted to ERB will make the layout work.\n. Safest way to ski? Don't ski.\n. I converted the sample dashboard to Haml.\n```\n- content_for :title do\n  My super sweet dashboard\n.gridster\n  %ul\n    %li{\"data-col\" => \"1\", \"data-row\" => \"1\", \"data-sizex\" => \"1\", \"data-sizey\" => \"1\"}\n      %div{\"data-id\" => \"status\", \"data-moreinfo\" => \"Protip: You can drag the widgets around!\", \"data-text\" => \"\", \"data-title\" => \"Uniprix-Printemps\", \"data-view\" => \"Text\"}\n    %li{\"data-col\" => \"1\", \"data-row\" => \"1\", \"data-sizex\" => \"1\", \"data-sizey\" => \"1\"}\n      %div{\"data-id\" => \"participant_count\", \"data-title\" => \"Participants\", \"data-view\" => \"Number\"}\n    %li{\"data-col\" => \"1\", \"data-row\" => \"1\", \"data-sizex\" => \"1\", \"data-sizey\" => \"1\"}\n      %div{\"data-id\" => \"prize_sum\", \"data-max\" => \"20000\", \"data-min\" => \"0\", \"data-title\" => \"Total des prix\", \"data-view\" => \"Meter\"}\n    %li{\"data-col\" => \"1\", \"data-row\" => \"1\", \"data-sizex\" => \"1\", \"data-sizey\" => \"1\"}\n      / \n    /\n      \n\n\n  <li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n  <div data-id=\"valuation\" data-view=\"Number\" data-title=\"Current Valuation\" data-moreinfo=\"In billions\" data-prefix=\"$\"></div>\n  </li>\n\n  <li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"1\">\n  <div data-id=\"convergence\" data-view=\"Graph\" data-title=\"Convergence\" style=\"background-color:#ff9618\"></div>\n  </li>\n  \\!\n\n/ Try this: curl -d '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"text\": \"Hey, Look what I can do!\" }' \\http://request.host:request.port/widgets/welcome\n```\n. Haml in the Gist is not working.\n. Let me reboot my computer, see if it works.\n. ",
    "llmora": "You can create a custom meter widget which implements a re-configuration trigger for 'max', e.g.:\n``` coffeescript\nclass Dashing.Maxmeter extends Dashing.Widget\n@accessor 'value', Dashing.AnimatedValue\nconstructor: ->\n    super\n    @observe 'value', (value) ->\n      $(@node).find(\".meter\").val(value).trigger('change')\n@observe 'max', (max) ->\n  $(@node).find(\".meter\").trigger('configure', {'max': max})\n\nready: ->\n    meter = $(@node).find(\".meter\")\n    meter.attr(\"data-bgcolor\", meter.css(\"background-color\"))\n    meter.attr(\"data-fgcolor\", meter.css(\"color\"))\n    meter.knob()\n```\nWhenever you need to modify the capacity use 'send_event' with 'max' and the widget maximum range will update automatically, e.g.:\nruby\n  send_event('synergy',   { value: rand(100), max: rand(500) })\n. ",
    "eyemyth": "Hm. I commented out line 146 in assets/stylesheets/application.scss and that fixed it.\n.widget {\n  // padding: 25px 12px;\nI still don't know why, but hey it works. Thanks for your help!\n. Not tested, but try removing or commenting out lines 22 and 23 in dashing.coffee.\nOn my linux box it's at /usr/local/lib/ruby/gems/1.9.1/gems/dashing-1.3.2/javascripts/dashing.coffee but YMMV.\n. I set one up:\nhttp://intense-meadow-7688.herokuapp.com/sampletv#edit\n. ",
    "ancastro": "Did you start the server \"dashing start\"?\n. ",
    "around01": "I did get Dash started, it was PATH issue's.  Once I did that we where up \nand running. \nAnother question if you don't mind , do you have any examples on how to \nsetup an SQL Call to get status updates?  I don't have any experience in \nthis field at all.. \nAlice Round\n IS Operations \n419-629-2311 ext. 3439\nFrom:   ancastro notifications@github.com\nTo:     Shopify/dashing dashing@noreply.github.com, \nCc:     around01 alice.round@crown.com\nDate:   05/15/2014 09:44 AM\nSubject:        Re: [dashing] dash not starting (#358)\nDid you start the server \"dashing start\"?\n\u2014\nReply to this email directly or view it on GitHub.\n. Daniel\nThis is for mysql server, do you have an example for SQL? \nAlice Round\n IS Operations \n419-629-2311 ext. 3439\nFrom:   Daniel Beauchamp notifications@github.com\nTo:     Shopify/dashing dashing@noreply.github.com, \nCc:     around01 alice.round@crown.com\nDate:   05/15/2014 10:13 AM\nSubject:        Re: [dashing] dash not starting (#358)\nThis should help\nhttps://github.com/Shopify/dashing/wiki/How-to%3A-send-mysql-data-to-your-widgets\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes... \nAlice Round\n IS Operations \n419-629-2311 ext. 3439\nFrom:   Daniel Beauchamp notifications@github.com\nTo:     Shopify/dashing dashing@noreply.github.com, \nCc:     around01 alice.round@crown.com\nDate:   05/15/2014 10:27 AM\nSubject:        Re: [dashing] dash not starting (#358)\nAre you talking about MS SQL?\n\u2014\nReply to this email directly or view it on GitHub.\n. We are running on redhat 6 and the apt-get isn't a command for me..\nAlice Round  l  IS Support\nCROWN EQUIPMENT CORPORATION\n419.629.2220  x3439 l alice.round @crown.commailto:matt.schumacher@crown.com\nwww.crown.comhttp://www.crown.com/\n. I have it almost working, I get a startup error on a syntax.  Would you be able to help me?\ntools.rb:343:in `require': /ops_monitor/jobs/mssql.rb:1: syntax error, unexpected tXSTRING_BEG, expecting end-of-input (SyntaxError)\nAlice Round  l  IS Support\nCROWN EQUIPMENT CORPORATION\n419.629.2220  x3439 l alice.round @crown.commailto:matt.schumacher@crown.com\nwww.crown.comhttp://www.crown.com/\n. This worked great.. thank you for all the help \n. Thank you\n. We figured out how to complete this.  Thanks.. Closing the ticket \n. ",
    "jpswade": "Although this can resize the widgets, it does not scale the widget contents.\nThis appears to be related to a much wider problem as outlined in issue #11.\n. ",
    "ChrisSSocha": "Thanks liln, this was very useful.\nIt would be great if this could be merged!\n. ",
    "wolfspyre": "It would indeed be great! I notice gridster is now at 0.5.6. What's preventing an updated version of this from being added to the next release?\n. Hi there,\nThanks for your time!\nCrap! I'd forgotten to fix that in my gist. Sorry for the red herring!!!!\nEven with the data-renderer set to line, I still have completely blank\ngraphs:\nhttps://www.evernote.com/shard/s255/sh/75907b01-8e2b-494a-ad22-d5109a6be9f2/b37349c91821fd1fb5873ef68f871196\nI don't think that's the problem.\nOn Tue, Mar 3, 2015 at 2:26 PM, Jason Walton notifications@github.com\nwrote:\n\nHi @wolfspyre https://github.com/wolfspyre. Sorry for not seeing your\ncomments on my gist; for some reason I never get notifications when someone\ncomments on a gist.\nOk, here's what I did:\n- Installed the latest dashing with gem install dashing.\n- ## Created new dashboard with dashing new db.\nCopied your dashboard.erb file, created a dummy job that sends the\n  logged data from your gist:\nSCHEDULER.every '2s' do\n     bed_graphite = [{:target=>\"octoprint_bed.temp.actual\", :datapoints=>[[9, 1425294886], ...]}]\n     send_event('octoprint_bed_graph', series: bed_graphite)\n  end\n## \nCopied the rickshawgraph files into db/widgets/rickshawgraph/*.\nWhen I tried this, I ran into a few problems:\n1) There was a bug in rickshawgraph which was obscuring the real problem\nhere, so I fixed that (along with a couple of other comments people made in\nmy gist.)\n2) The real problem, though, is that you're setting\ndata-renderer=\"multigraph\", but this isn't a valid Rickshaw renderer\nhttps://github.com/shutterstock/rickshaw#renderer. Try setting\ndata-renderer=\"line\" and you'll get graphs like this:\n[image: screen shot 2015-03-03 at 3 24 27 pm]\nhttps://cloud.githubusercontent.com/assets/1771003/6471498/6f251126-c1b9-11e4-83c8-a2c02ba57560.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/527#issuecomment-77027245.\n. After a little offline back-and-forth, I've successfully gotten this\nworking.\n\nThe problem was that in attempting to integrate the Rickshawgraph plugin, I\nmust have broken something, so it wasn't properly generating graphs.\nI pulled down the exact Rickshawgraph coffee/html/scss files from\nhttps://gist.github.com/jwalton/6614023 and placed them in\nwidgets/rickshawgraph; restarted my  dashboard, and viola\nhttps://www.evernote.com/shard/s255/sh/25fcc9c9-7f73-4206-bc9b-4842a0fbeb78/d163a14714e060a90f3f7e21103986c1\nFunctional Graphs!!!!\nClosing this issue. I'll post another comment once I release the fully\nimplemented/functional dashboard/widget/job collection so that others might\nnot run into the same difficulty I did.\nOn Tue, Mar 3, 2015 at 2:40 PM, Wolf Noble wolf@wolfspyre.com wrote:\n\nHi there,\nThanks for your time!\nCrap! I'd forgotten to fix that in my gist. Sorry for the red herring!!!!\nEven with the data-renderer set to line, I still have completely blank\ngraphs:\nhttps://www.evernote.com/shard/s255/sh/75907b01-8e2b-494a-ad22-d5109a6be9f2/b37349c91821fd1fb5873ef68f871196\nI don't think that's the problem.\nOn Tue, Mar 3, 2015 at 2:26 PM, Jason Walton notifications@github.com\nwrote:\n\nHi @wolfspyre https://github.com/wolfspyre. Sorry for not seeing your\ncomments on my gist; for some reason I never get notifications when someone\ncomments on a gist.\nOk, here's what I did:\n- Installed the latest dashing with gem install dashing.\n- ## Created new dashboard with dashing new db.\nCopied your dashboard.erb file, created a dummy job that sends the\n  logged data from your gist:\nSCHEDULER.every '2s' do\n     bed_graphite = [{:target=>\"octoprint_bed.temp.actual\", :datapoints=>[[9, 1425294886], ...]}]\n     send_event('octoprint_bed_graph', series: bed_graphite)\n  end\n## \nCopied the rickshawgraph files into db/widgets/rickshawgraph/*.\nWhen I tried this, I ran into a few problems:\n1) There was a bug in rickshawgraph which was obscuring the real problem\nhere, so I fixed that (along with a couple of other comments people made in\nmy gist.)\n2) The real problem, though, is that you're setting\ndata-renderer=\"multigraph\", but this isn't a valid Rickshaw renderer\nhttps://github.com/shutterstock/rickshaw#renderer. Try setting\ndata-renderer=\"line\" and you'll get graphs like this:\n[image: screen shot 2015-03-03 at 3 24 27 pm]\nhttps://cloud.githubusercontent.com/assets/1771003/6471498/6f251126-c1b9-11e4-83c8-a2c02ba57560.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/527#issuecomment-77027245.\n. Thank you VERY MUCH for the assistance, @jwalton \n. \n\n",
    "kvadevack": "Create a job that parses your XML data and feeds it to any widget you wish, like so:\n``` ruby\nrequire 'nokogiri'\nrequire 'open-uri'\nSCHEDULER.every '24h', first: :now do |job|\n  doc = Nokogiri::XML(open('http://www.w3schools.com/xml/cd_catalog.xml'))\n  album = doc.xpath('//CD/TITLE/text()').map(&:to_s).sample\nsend_event('album_of_the_day', text: album)\nend\n```\nPing @pushmatrix regarding the Google Group :).\n. Would you mind posting the output of curl -s https://gist.githubusercontent.com/mislav/4728286/raw/rbenv-doctor.sh | bash -x 2>&1? It looks to me like a problem with your Ruby setup rather than a bug. It shouldn't be touching anything in /Library, as that belongs to your pre-installed OS X Ruby. As an rvm user I'm not too familiar with rbenv, but things I'd check for are:\n- that all gem and load paths point to your rbenv-managed Ruby\n- that native gems are linked against the appropriate libruby (e.g. otool -L /path/to/rubyeventmachine.bundle)\nI set up an environment to test your issue, but can't reproduce. clang-built 2.0.0-p247 using rvm:\n``` console\nhyrule:dashing-workshop protomouse$ gem env\nRubyGems Environment:\n  - RUBYGEMS VERSION: 2.2.2\n  - RUBY VERSION: 2.0.0 (2013-06-27 patchlevel 247) [x86_64-darwin13.1.0]\n  - INSTALLATION DIRECTORY: /usr/local/rvm/gems/ruby-2.0.0-p247\n  - RUBY EXECUTABLE: /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/ruby\n  - EXECUTABLE DIRECTORY: /usr/local/rvm/gems/ruby-2.0.0-p247/bin\n  - SPEC CACHE DIRECTORY: /Users/protomouse/.gem/specs\n  - RUBYGEMS PLATFORMS:\n    - ruby\n    - x86_64-darwin-13\n  - GEM PATHS:\n     - /usr/local/rvm/gems/ruby-2.0.0-p247\n     - /usr/local/rvm/gems/ruby-2.0.0-p247@global\n  - GEM CONFIGURATION:\n     - :update_sources => true\n     - :verbose => true\n     - :backtrace => false\n     - :bulk_threshold => 1000\n     - \"install\" => \"--no-rdoc --no-ri\"\n     - \"update\" => \"--no-rdoc --no-ri\"\n  - REMOTE SOURCES:\n     - https://rubygems.org/\n(snip)\n\n```\nand\nconsole\nhyrule:dashing-workshop protomouse$ ruby -e 'puts $LOAD_PATH'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/site_ruby/2.0.0\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/site_ruby/2.0.0/x86_64-darwin13.1.0\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/site_ruby\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/vendor_ruby/2.0.0\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/vendor_ruby/2.0.0/x86_64-darwin13.1.0\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/vendor_ruby\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/x86_64-darwin13.1.0\nand\nconsole\nhyrule:dashing-workshop protomouse$ otool -L /usr/local/rvm/gems/ruby-2.0.0-p247/gems/eventmachine-1.0.3/lib/rubyeventmachine.bundle \n/usr/local/rvm/gems/ruby-2.0.0-p247/gems/eventmachine-1.0.3/lib/rubyeventmachine.bundle:\n    /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5)\n    /usr/local/rvm/rubies/ruby-2.0.0-p247/lib/libruby.2.0.0.dylib (compatibility version 2.0.0, current version 2.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1)\n    /usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0)\n    /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0)\n. @GreatPotato It's unclear to me whether you wanted per-request control over which dashboards are shown, but let me describe our setup. We use a combination of the aforementioned gist and PR #306 (purely to keep things organized).\nPretty straightforward:\ndashboards\n\u251c\u2500\u2500 layout.slim\n\u251c\u2500\u2500 department1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dash1.slim\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dash2.slim\n\u2514\u2500\u2500 department1.slim\n\u251c\u2500\u2500 department2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dash1.slim\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dash2.slim\n\u2514\u2500\u2500 department2.slim\n\u2514\u2500\u2500 company.slim\ndepartment1.slim, department2.slim, [...departmentN.slim] and company.slim are all aggregating dashboards. For example (company.slim):\n``` slim\nscript type=\"text/javascript\"\n  |\u00a0Dashing.on('ready', function() {\n  |   Dashing.cycleDashboards({timeInSeconds: 60});\n  | });\n== Slim::Template.new('dashboards/department1/dash1.slim').render\n== Slim::Template.new('dashboards/department1/dash2.slim').render\n== Slim::Template.new('dashboards/department2/dash1.slim').render\n== Slim::Template.new('dashboards/department2/dash2.slim').render\n```\nWe can trigger individual dashboards (e.g. /department1/dash1) as well as aggregating ones (e.g. /department1). At this point you could add per-request control (e.g. /company?dashboards=department1/dash2,department2/dash1) via a parameter like so:\n```\nscript type=\"text/javascript\"\n  |\u00a0Dashing.on('ready', function() {\n  |   Dashing.cycleDashboards({timeInSeconds: 60});\n  | });\n\n(params[\"dashboards\"] || \"\").split(\",\").each do |dashboard|\n  == Slim::Template.new(\"dashboards/#{dashboard.gsub(/(../)+/, '')}.slim\").render\n```\n\nNote: better escaping of dashboard is necessary. Example is purposely simplistic for brevity.\n. ",
    "lazyfrosch": "Of course this only happens when using the CLI tool and \"start\" to run the server.\nThis shouldn't happen when running thin directly.\n. You can start thin directly, then dashing will only be executed once\nthin -R config.ru -p 3030 start\nor with bundle\nbundle exec thin -R config.ru -p 3030 start\n. Nice fix Daniel, thank you!\n. ",
    "Havelock-Vetinari": "It would be great to include those nice transitions https://gist.github.com/jwalton/6670630 and to create aggregating dashboard which would take list of rotating dashboards as parameter, ie.\nhttp://dashing/cycle/20/dash1/dash2/dash3\nwhere first argument is a time of each slide and following arguments are names of dashboards\nIt may be also suitable to allow passing arguments to dashboards\nhttp://dashing/cycle/20/dash1,param1=foo,param2=bar/dash2,paramFoo=1/dash3,paramBar=true\n. ",
    "yonbergman": "@GreatPotato did you check out cyclist? https://github.com/vrish88/sinatra_cyclist\n. ",
    "cpg": "@protomouse Did you (or anyone else) document anywhere how to run dashboards with slim? I could not find much about that and it would be very useful.\nI tried the obvious, adding slim to the Gemfile and renaming the dashbaords to .html.slim or just .slim,and it does not seem to work. I see that you include the parts of a dashboard, however, how does the layout and the main entry point for a dashboard?\n. ",
    "jessefulton": "+1 Thank you!!!\n. ",
    "artrybalko": "I would really appreciate some guidance on how to set this up properly. I used the code above and got to the point where Dashing would start. Which parts in the code should I substitute with my Google Oauth stuff? When I just put the code unaltered, I assumed it would crash or deny access, without all the necessary credentials in place, but it loads the dashboard just fine. In short, my troubles are very basic and I will be happy with any advice! Thank you.\n. ",
    "olivierlefloch": "+1\n. ",
    "joshpuetz": "I just successfully set this up, and here are my general notes:\nHere are the gems I had to add to support csexton's excellent post (https://github.com/Shopify/dashing/issues/370#issue-34923544):\ngem install \"omniauth-openid\"\ngem install \"omniauth-google-apps\"\ngem install \"omniauth-google-oauth2\"\nThen, you'll need to create a project on Google's Developer Console, give it access to the Google+ API, and create an oAuth service account for your web application (that's what will generate a CLIENT_ID and CLIENT_SECRET to your in your application). In addition, you need to set the callback location of this client to be <your domain>/auth/g/callback\nInstructions on this process are kinda spelled out here: https://developers.google.com/console/help/new/?hl=en_US#serviceaccounts\n. ",
    "snario": "OpenID 2.0 for Google accounts is going away.\nDevelopers should migrate to OpenID Connect by April 20, 2015.\n. Hopefully? I just set up my dashboard with the code in the latest comment\nabove and when I navigated to my login page I had that message pop up.\n\u1427\nOn Thu, Apr 9, 2015 at 2:21 PM, Christopher Sexton <notifications@github.com\n\nwrote:\n@snario https://github.com/snario according to Google's documentation\non Migrating from OpenID 2.0 to OpenID Connect\nhttps://developers.google.com/identity/protocols/OpenID2Migration it\nseems that \"OpenID Connect\" is \"OAuth 2.0\".\nTheir OpenID Connect\nhttps://developers.google.com/identity/protocols/OpenIDConnect docs say:\nGoogle's OAuth 2.0 APIs can be used for both authentication and\nauthorization. This document describes our OAuth 2.0 implementation for\nauthentication, which conforms to the OpenID Connect specification.\nSrsly, Who picks these names? This is confusing as hell.\nI believe everything we are suggesting here has to do with OAuth 2.0 (and\nhopefully would work with OpenID Connect), but am not certain how to find\nout if that is the case.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/370#issuecomment-91317483.\n. +1\n. \n",
    "csexton": "@snario according to Google's documentation on Migrating from OpenID 2.0 to OpenID Connect it seems that \"OpenID Connect\" is \"OAuth 2.0\".\nTheir OpenID Connect docs say:\n\nGoogle's OAuth 2.0 APIs can be used for both authentication and authorization. This document describes our OAuth 2.0 implementation for authentication, which conforms to the OpenID Connect specification.\n\nSrsly, Who picks these names? This is confusing as hell.\nI believe everything we are suggesting here has to do with OAuth 2.0 (and hopefully would work with OpenID Connect), but am not certain how to find out if that is the case.\n. ",
    "EiNSTeiN-": "Please don't use (or give examples of code using) :provider_ignores_state => true. This will make your application vulnerable to CSRF during the oauth process.\n. ",
    "zcarson": "No, the sample dashboard works fine. I also have a piechart widget using data from the same job file, and it's data persists. Only the number widget fails to use the last value.\n. Yes. I just added the Karma widget back to my dashboard, and this is how it looks at initial load. 5 seconds later the job fired, and the upper widget's value was animated and filled in.\n\n. Solved it. Initially had the data being sent in 2 chunks:\n\nsend_event('login_count',{ current: totalLogins })\nsend_event('login_count',{ moreinfo: readyString })  \n\nI guess only the 2nd item was remembered (the readyString is the 'Logins for DATE'). Combined into 1 send_event\n\nsend_event('login_count',{ current: totalLogins, moreinfo: readyString })  \n\nand now everything works. Love the application, thanks!\n. ",
    "jamiereid": "Sorry all, worked it out.\nBy removing the shortenedNumber from the html template, I get what I want.\n. ",
    "drwl": "@AHTOIIIKA is this still an issue? If it is, pasting your logs would be helpful.\n. I believe there are differences between the vanilla rickshaw widget with dashing and @derwin12's suggestion with jwalton's. I might be wrong, but after using jwalton's I was able to get much of the capabilities on the shutterstock site.\n. Nvd3 support would be great. Looks like this was already submitted as an issue #192.\n. ",
    "charlievogt": "I'm new at linux.  When I try to run\napt-get install freetds-dev\nI get the error \"Unable to locate package freetds-dev\".  Any ideas for help?\n. Thanks! That seemed to help, along with a change to my sources.list file. When I try to start dashing, it's giving me this error:\ncvogt@dashboard:~/test_dashboard$ dashing start\n/var/lib/gems/1.9.1/gems/backports-3.6.4/lib/backports/std_lib.rb:9:in `require': /home/cvogt/test_dashboard/jobs/MYJOB.rb:15: syntax error, unexpected $end, expecting keyword_end (SyntaxError)\n    from /var/lib/gems/1.9.1/gems/backports-3.6.4/lib/backports/std_lib.rb:9:in `require_with_backports'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/app.rb:157:in `block in require_glob'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/app.rb:156:in `each'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/app.rb:156:in `require_glob'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/app.rb:167:in `<top (required)>'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing.rb:3:in `require'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing.rb:3:in `<top (required)>'\n    from config.ru:1:in `require'\n    from config.ru:1:in `block in <main>'\n    from /var/lib/gems/1.9.1/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval'\n    from /var/lib/gems/1.9.1/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize'\n    from config.ru:1:in `new'\n    from config.ru:1:in `<main>'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/rack/adapter/loader.rb:33:in `eval'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/rack/adapter/loader.rb:33:in `load'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/thin/controllers/controller.rb:182:in `load_rackup_config'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/thin/controllers/controller.rb:72:in `start'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/thin/runner.rb:200:in `run_command'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/lib/thin/runner.rb:156:in `run!'\n    from /var/lib/gems/1.9.1/gems/thin-1.6.3/bin/thin:6:in `<top (required)>'\n    from /usr/local/bin/thin:23:in `load'\n    from /usr/local/bin/thin:23:in `<main>'\nMy job file looks like this:\n```\n!/bin/env ruby\nencoding: utf-8\nrequire 'tiny_tds'\nSCHEDULER.every '300s', :first_in => 0 do |job|\nclient = TinyTds::Client.new(:username => 'MYUSER', :password => 'MYPASSWORD', :host => 'MYHOST', :database => 'MYDB', :port => '1433')\n rs = client.execute(\"SELECT\u00a0Caption,\u00a0IP_Address,\u00a0Description,\u00a0Vendor,\u00a0StatusLED,\u00a0StatusDescription,\u00a0LastSync,\u00a0LastSystemUpTimePollUtc\n\u00a0\u00a0FROM\u00a0[MYDB].[Nodes]\n\u00a0\u00a0WHERE\u00a0StatusLED\u00a0LIKE\u00a0'%down%'\n\u00a0\u00a0ORDER\u00a0BY\u00a0LastSystemUpTimePollUtc,\u00a0Caption;\")\n rs.each do |row|\n  send_event('list', {value: row['value'] })\n client.close\n```\nIs there something glaringly obvious that I'm doing incorrectly? Thanks again for your help!\n. Thank you very much!  Can anyone offer feedback for how to change this from reporting to the \"Hotness\" widget to get it to go into the \"list\" widget?  Thanks, again!  You are all very helpful!\n. ",
    "MayurMittal": "@MartynKeigher Hello. I hope you are still active on Dashing. I have installed dashing on Windows 7 64bit and running Ruby 2.3.0. I an trying to connect with the MSSQL database using the above code. But as soon as I type Dashing Start the following error comes in, not sure what I am missing, I am new to technology, so please forgive me if something is not correct :- \nC:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:inrequire': cannot load such file -- tiny_tds/tiny_tds (LoadError)\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:in require_with_backports'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/tiny_tds-2.0.0-x86-mingw32/lib/tiny_tds.rb:26:inrescue in '\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/tiny_tds-2.0.0-x86-mingw32/lib/tiny_tds.rb:29:in <top (required)>'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:inrequire'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:in require_with_backports'\n        from C:/Sites/monitorama/jobs/mssql.rb:1:in'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:in require'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/backports-3.8.0/lib/backports/std_lib.rb:9:inrequire_with_backports'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing/app.rb:171:in block in require_glob'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing/app.rb:170:ineach'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing/app.rb:170:in require_glob'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing/app.rb:181:in'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing.rb:3:in require'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/dashing-1.3.7/lib/dashing.rb:3:in'\n        from config.ru:1:in require'\n        from config.ru:1:inblock in '\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/rack-1.5.5/lib/rack/builder.rb:55:in instance_eval'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/rack-1.5.5/lib/rack/builder.rb:55:ininitialize'\n        from config.ru:1:in new'\n        from config.ru:1:in'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/rack/adapter/loader.rb:33:in eval'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/rack/adapter/loader.rb:33:inload'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/thin/controllers/controller.rb:182:in load_rackup_config'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/thin/controllers/controller.rb:72:instart'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/thin/runner.rb:200:in run_command'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/lib/thin/runner.rb:156:inrun!'\n        from C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/thin-1.6.4/bin/thin:6:in <top (required)>'\n        from C:/RailsInstaller/Ruby2.3.0/bin/thin:22:inload'\n        from C:/RailsInstaller/Ruby2.3.0/bin/thin:22:in <main>'\nInstalled various versions of tiny_tds not sure which is the correct one :(\n1. tiny_tds-0.6.2.pre.beta1-x64-mingw32\n2. tiny_tds-1.1.0-x86-mingw32\n3. tiny_tds-2.0.0-x64-mingw32\n4. tiny_tds-2.0.0-x86-mingw32\nBy mssql.rb file is \n`require 'tiny_tds'\nSCHEDULER.every '300s', :first_in => 0 do |job|\nclient = TinyTds::Client.new(:username => 'XX', :password => 'XX', :host => 'dev.test.ab.com', :database => 'Dashboard', :port => '1433')\n rs = client.execute(\"select parentvendor from [dbo].[PulledIntegrationDetails] where live_date is null \")\n rs.each do |row| \n  send_event('test', {value: row['value'] })\n end\n client.close\n end`\nand my gem file is \nsource 'https://rubygems.org'\ngem 'dashing'\ngem 'tiny_tds'\nI have also installed freetds\n`PS C:> tsql -c\n[TinyTds][v2.0.0][tsql]: C:/RailsInstaller/Ruby2.3.0/lib/ruby/gems/2.3.0/gems/tiny_tds-2.0.0-x86-mingw32/ports/i686-w64-mingw32/freetds/1.00.27/bin/tsql.EXE\nC:\\RailsInstaller\\Ruby2.3.0\\lib\\ruby\\gems\\2.3.0\\gems\\tiny_tds-2.0.0-x86-mingw32\\ports\\i686-w64-mingw32\\freetds\\1.00.27\\bin\\tsql.EXE: unknown option -- c\nUsage:  C:\\RailsInstaller\\Ruby2.3.0\\lib\\ruby\\gems\\2.3.0\\gems\\tiny_tds-2.0.0-x86-mingw32\\ports\\i686-w64-mingw32\\freetds\\1.00.27\\bin\\tsql.EXE [-a ] [-S  | -H  -p ] -U  [-P ] [-I ] [-o ] [-t delim] [-r delim] [-D database]\n        C:\\RailsInstaller\\Ruby2.3.0\\lib\\ruby\\gems\\2.3.0\\gems\\tiny_tds-2.0.0-x86-mingw32\\ports\\i686-w64-mingw32\\freetds\\1\n.00.27\\bin\\tsql.EXE -C\nOptions:\n        f       Do not print footer\n        h       Do not print header\n        t       Print time informations\n        v       Print TDS version\n        q       Quiet\n    Delimiters can be multi-char strings appropriately escaped for your shell.\n    Default column delimitor is <tab>; default row delimiter is <newline>`\n\nI will be glad if you can help me in this.. ",
    "cyrus007": "Note that this updates it in all widgets whereas to update it in only this widget ...\n@accessor 'updatedAtMessage', ->\n    if updatedAt = @get('updatedAt')\n      ...\n. ",
    "aaragues": "I was using Graph widget, the one you have to pass a \"points\" array. I performed a modification so I can pass a series array like\nseries << { \n  name: \"Good\",\n  data: points,\n  color: \"steelblue\",\n  renderer: \"bar\"\n}\nThe goal is to have a multigraph with different renderers, like the one in Rickshaw page. Is that possible?\n. ",
    "bacondrake": "I had this problem too. I have OSX 10.9 (Mavericks), which has had some issues with UTF-8 encoding and I think that may be the cause of the issue. I'm not 100% sure, but I managed to find a way to get it to work for me.\nCopy the following to the top of your config.ru file in your dashing project:\nEncoding::default_external = Encoding::UTF_8 if defined? Encoding\nThis got it going and editable for me, though I don't know if it's just a bandaid fix. I haven't had any problems so far.\nI hope it works for you too @santhoshjoy \n. @santhoshjoy  - awesome, glad you got it sorted. Do you mind marking the issue as closed? \n. ",
    "airhorns": "This will interrupt open, normal, not-long-running requests that are in the process of completing right? \nIf so, could we add a timeout or something like that that only closes connections if they are still open after the request timeout? Would that cause 30 seconds of \"downtime\" where we aren't accepting new connections but waiting for old ones to close? Probably. That's less than ideal also. \n. I think the real solution would be a puma or unicorn style rolling restart between processes to load up new code but the in memory event bus architecture of Dashing prevents that. \n. Oh schweet, :shipit: \n. Dastardly mutable iterations. Nice fix. \n. ",
    "dylanahsmith": "\nThis will interrupt open, normal, not-long-running requests that are in the process of completing right?\n\nNope, the connections array is one maintained by the dashing rather than thin or sinatra, so it will only close the connections for the events endpoint.\n\nI think the real solution would be a puma or unicorn style rolling restart between processes to load up new code but the in memory event bus architecture of Dashing prevents that.\n\nYes, this is definitely not a zero downtime restart like we get from unicorn.\n. Sorry for merging before you got to see it @pushmatrix.  I can revert or fix forward based on any feedback you have though.\n. > So my concern here is that some users of Dashing don't use thin. I realize that it's still a hardcoded dependency so they'll have to include it in anyway...\nYa, I would have done this in statly, but I thought it was more appropriate here after noticing that thin was a hard coded dependancy.  I can revert and move it into statly now to make that transition easier though.\n\nI guess this override won't run if they use something different, correct?\n\nYa, it would override the method, but then the method would never get used if they aren't using Thin.\n. This didn't work when there was more than one connection, because the callback on line 74 deletes the connection from the array, which results in .each here skipping connections.  I pushed commit 55f90939eae4d6eb64822fd3590f694418396510 to dup the array before iterating on it here.\n. ",
    "captn3m0": "Facing the same issue. @apsdehal found some workarounds, though.\n. ",
    "maxfields2000": "Martyn,\nHey! Sorry, I haven't had a chance, backlogs here are quite deadly, I'll\nbe getting to it this week, but I super appreciate the suggestion, it gives\nme a place to look.  Thanks!\n-Max\nOn Mon, Jul 21, 2014 at 1:11 PM, Martyn Keigher notifications@github.com\nwrote:\n\nHey @maxfields2000 https://github.com/maxfields2000 ...\nDid this help you out??\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/387#issuecomment-49658603.\n. \n",
    "quentindemetz": "Server-sent events count towards \"open connections to the same origin\", which is usually capped by browsers at 5. Which means that if you have 5 open tabs, there are 5 open connections to the server;  the 6th tab will never load because the browser is waiting for a connection to become available. See here.\nSwitching to websockets should overcome the issue.\n. Read the dashing tutorial - it's fairly straightforward:\n- add a new file in the jobs directory which uses send_event(\"foo\", data) to send data to the front-end\n- add a dashboards/foo.erb file with data-id=\"foo\"\n- write your own widget in widgets/ directory\n. Just put this at the top of your dashboard.erb file:\n$(function() {\n  // These settings override the defaults set in application.coffee. You can do this on a per dashboard basis.\n  Dashing.numColumns = 1\n  Dashing.numRows = 1\n  Dashing.widget_base_dimensions = [(1920 - 10 * (1 + Dashing.numColumns)) / Dashing.numColumns - 10, (1080 - 10 * (1 + Dashing.numRows)) / Dashing.numRows - 8]\n});\nObviously you have to adjust the 1920 and 1080 to your screen size.\n. ",
    "kmmatwork": "Hmm, yes...\nBut if I open http://dashingdemo.herokuapp.com/sample then I see a dashboard with the following width and height settings (obtained by using \"inspector\" in firefox):\n<div class=\"gridster ready\" style=\"width: 1240px;\">\n            <ul style=\"height: 740px; position: relative;\"></ul>\nOn the other hand with the http://dashingdemo.herokuapp.com/sampletv example I do, as you say, get full HD size:\n<div class=\"gridster ready\" style=\"width: 1900px;\">\n        <ul style=\"height: 1050px; position: relative;\"\nThe question is, how does it achieve this? With my own attempts I have so far been unable to get anything bigger than the small version. My thought was that maybe some specific parameters to gridster was neccessary in order to set the size? But maybe I am wrong here?\nbr,\n. Found it out! All that was needed was to add the following to the top of the \"dashboard\" file:\njavascript\n<script type='text/javascript'>\n$(function() {\n  Dashing.widget_base_dimensions = [370, 340]\n  Dashing.numColumns = 5\n});\n</script>\nWill override the default setting in \"application.coffe\". \n. ",
    "skynet": "Works now. That was a temporary problem. Can'r expect 99.999% on a demo. Closing this. Thank you!\n. ",
    "magnosfire": "Hi, try get all files from Titanium-edge Assest and copy to your folder. I guess it will fix your problem.\n. ",
    "njalk": "Same issue here, running on Ubuntu-server, tried Firefox and Chrome. No errors given\n. ",
    "philscott10": "Turns out this was a problem with OpenSSL version compatibility.  I cleared out my old installation of OpenSSL and installed a brand new one from scratch and then it worked perfectly for me.\n. ",
    "phekno": "I did a little more digging, trying to figure out what's causing this or provide more information.\nIt seems like the first list item element in any of my lists is being ignored or laid out differently than the others.  It's usually shifted up compared to the others, and the next list item is usually on top of it.  If I change the layout by dragging the widgets around, get them where I want them, and then save the layout (by updating the dashboard layout), it ignores the new layout.  I've tried creating a new dashboard using just the example dashboard, and the issue doesn't appear.  Could it be an issue with a job that's changing something?\n. I wondered if it was the Progress Bars widget (that's usually the first list item element in my layout), but if I remove that widget from the layout, it just puts whatever the next list item is in the same spot, not lined up where it should be.\nI tried creating a new dashboard entirely, and looking at the samples that come with it, and they seem fine.  I've diffed the files between the two and don't see anything out of the ordinary.\nHere's another screen shot of the issue:\n\nYou can see that, in this case, there are literally 6 widgets stacked on top of each other.  Two of them are not aligned correctly.  You can see that the big one (a 2x2) and one 1x1 widget are shifted towards the top of the page a bit and not in an actual gridster grid.  If I move them, they will snap in to the grid.  Furthermore, I have the Dashing.gridsterLayout function at the top of my layout, and it's completely ignoring that.\n. Here's one of the .erb files I have.  I've scrubbed it a bit.  I guess I didn't know it was a font issue, but I suppose that could be the case.  I'll do a bit of tweaking and see if I can fix it.\n```\n<% content_for :title do %>Some interesting site<% end %>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n``\n. I tweaked some of the font sizes, but that didn't seem to work.  The first widget in the list is always incorrectly aligned, unless I drag it in to the grid.\n. I did more digging, and found that if I switched the data-row and data-col properties in theelements (i.e. data-col first and data-row second) it works and the layout is correct every time the page is reloaded.  I have no idea why the ordering of those would make a difference, but it seems like it does.  Even in the sample dashboards, which have always worked for me, they are set up as row first, column second.\n. And I just realized that there's a typo in my .erb files.  The first twoelements have their first property nameddata_rownotdata-row`.  An UNDERSCORE not a DASH.\n. ",
    "pzula": "I'm also interested in a scrolling list widget.\n. ",
    "hSATAC": "Tested on Chrome 35 and Firefox 28. \nI've deployed a simple example on heroku to demonstrate.\nhttp://dashing-example.herokuapp.com/sample\n. ",
    "aglover": "The demo deployed to Heroku (http://dashingdemo.herokuapp.com/sample) has the same behavior - it never updates. I'm on a Mac and have viewed w/both Chrome and Safari with the same result. \n. @mhovan I made the change referenced in #303 and it didn't work -- I have confirmed that the generated application.js contains that one line fix as well. In my case it is around line 15027:\nif (((_ref1 = widgets[data.id]) != null ? _ref1.length : void 0) > 0) {\n        lastEvents[data.id] = data;\nAlas, the browser isn't ever updated unless you kill the process. \n. FYI, comment regarding using puma in #119 now fixes my problem. Thank you @stuzero\n. ",
    "gurmukhp": "Thank you\n. ",
    "djoos": "Hi @derwin12,\nthanks for your feedback!\nUnfortunately adding --max-conns 1024 and --max-persistent-conns 1024 didn't solve the problem...\nI've tried swapping out Thin for Puma and Puma definitely does a better job - except for the fact there's an issue with the Rufus scheduler when running Puma as a daemon (https://github.com/puma/puma/issues/183)... :-/\nGetting there! :-)\nKind regards,\nDavid\n. Thanks for the tip @m5n!\nFYI: in our setup we make use of (IntuiFace)[www.intuilab.com] on a big touchscreen, so the user can cycle through the different dashboards by swiping on the screen... However, the Sinatra cyclist might come in handy for another dashboard project!\nKind regards,\nDavid\n. ",
    "m5n": "We had the same problem, the thin settings did not help but switching to Puma did the trick.\nHowever, https://github.com/vrish88/sinatra_cyclist/ can cycle through the pages for you--no need to open multiple browser tabs! This also allows some browsers (e.g. Safari) to remove the tabs section when in full-screen, since then there's just one tab in the browser, so there's slightly more real estate.\n. ",
    "sethdippold21": "I'm sorry, but I'm pretty new to this. Could you maybe explain in what way I need to modify it?\nThanks!\n. One more question, how about multiple dashboards? Can you add something to the top of each .erb for each dashboard to have its own background image?\n. ",
    "walshmagger": "see here more about CSS background image....\nhttp://www.corelangs.com/css/text/image.html\nWalsh\n. ",
    "zwergengott": "My background never shows if i try to use a local image file as my background - regardless of whether i use the absolute or relative path. It works perfectly if i use on online-url of an image, though. Has anyone an explanation for this problem?\n. ",
    "headius": "I don't see why dashing wouldn't work in JRuby, but the gem depends on thin as its server :-( If it just used puma, dashing could probably work out of the box.\n. Relates to #417, obviously :-)\n. I now have a JRuby Dashboard running with this modified version of Dashing, released as dashing-jruby: http://jruby-dashboard.herokuapp.com/sample\nSure would be nice to make it standard dashing :-D\n. @kevster Ahh \"dashing start\" must be trying to start thin directly. Will check.\n. Ahh yes, dashing start/stop require that the server be able to daemonize, which can't be done through usual Ruby mechanisms on JRuby. I'm looking at doing something with nohup instead.\n. I've pushed an additional change that removes \"stop\" and makes \"start\" use puma. Because there's no daemonizing on JRuby, start just launches the server and waits for it. I did not rig up something with nohup since it wouldn't work on e.g. Windows (not sure if that's a concern, since I don't think thin/em were reliable on Windows).\nI'm pushing dashing-jruby 1.3.4.1 with this change.\n. I didn't do anything special. The https://github.com/jruby/jruby-dashboard repository is everything.\n. Sorry that I missed the replies in November...busy time for JRuby.\nI've commented on the source comments you provided and I'm looking into ways to spawn puma rather than starting it as a blocking child process. I think the best option will be to use nohup and puma's management interface to spawn and manage the subprocess, but I don't know what the equivalent would be on Windows. I'm also not sure how important Windows support is, since it appears there hasn't been a Windows release of EventMachine since 2013.\n. Right that is where I am at now. Demonization is complicated with JRuby because we can't fork, but the nohup approach plus state file should work well.\n. The puma change runs the server directly rather than spinning up a background process. Stopping the server means Ctrl-C.\nThank you for the input...I figured this would be a change that needed discussion. I will look into the equivalent background-process behavior for Puma.\n. I was not really sure about this :-\\ It appears to monkey-patch Thin to close all open connections during shutdown. I don't think there needs to be an equivalent for Puma, because it already manages those connections and has a graceful shutdown path. Perhaps Thin would refuse to shut down unless all connections were closed?\n. @cefigueiredo I opened this PR as a good faith attempt to work with you to make Dashing work on JRuby. I assumed the PR will evolve as we discuss its changes and find the best way to replace Thin with Puma. If you prefer to only receive fully-formed PRs before discussing them, I will try to do that in the future.\n. ",
    "simzen85": "@tylermauthe I tried to use your suggested witchcraft but it doesn't work, is it updated ?\nI really need this because right now our history.yml is very large and hence the whole dashboard is loading very slow (it seems to load the whole history.yml in memory)\n. This is what dashing does to my MBP https://monosnap.com/file/xHVCgRgST7Qp7U8NjcaHS5NPVs8lbx\n. ",
    "raszi": "This is a bugfix if you want to have more than 6 columns, why should we set that in the application?\n. Maybe it is possible but why should we leave a bug in the dashing?\n. I did not modify the widget_margins.\nI just added the max_size_x property because that was missing from the setup therefore somebody could set the numColumns config in their app but the gridster still used the previous (default) column count.\nWhat is the reason to make numColumns configurable if you cannot set to any value you want?\n. ",
    "aaroncole": "maybe it was just a permissions thing.\nI created a new project and set it's permissions to 777.\nIt's works now.\n. ",
    "Nuru": "This bug is affecting my dashboards a lot. Might be because I'm hosting on Heroku that I'm more affected but I see numbers missing the \"danger\" class often. \n. ",
    "motobeats": "Made the constructor change suggested to number.coffee to insure status for the number widget is accurate when a new user connects (or on browser refresh). Works great. Please include change in next release.\n. ",
    "eddgrant": "Hi @cefigueiredo - I'm experiencing exactly the same issue as described here in a *nix environment. My setup is as follows:\n- Ubuntu 14.04\n- Ruby 1.9.3p3.8.5 (provided by local rbenv install)\nSteps taken:\n- Clone dashing git repo\n- dashing new sweet_dashboard_project\n- cd sweet_dashboard_project\n- bundle\n- dashing start\nI see no errors in the console and exactly the same issue with the screen not displaying and the JS Exception being thrown.\nAlso tried with ruby-2.1.5 but with the same results.\nAny help greatly appreciated as this has completely thrown a spanner in the works of us starting to play with dashing.\nCheers. \n. Gah - immediately after posting the above coment I found https://github.com/Shopify/dashing/issues/249#issuecomment-33990854 . I then installed NodeJS (using nvm) and then used npm to install coffee-script and dashing now works. \nCould this be something to do with certain O/Ses (i.e. Mac) having coffee-script pre-installed and Windows/ *nix not? If this can be confirmed it would be great to update the instructions on http://shopify.github.com/dashing . I'd offer up a pull request but I can't find the source of this page on GitHub.\nCheers,\nEdd \n. ",
    "sapg": "Any chance you could share your config?\n. ",
    "jrcryer": ":+1:  - it would be great to switch to puma for JRuby support\n. ",
    "bicofino": "Nevermind.\nI was trying edit something in production mode.\n. That worked.\nThanks!\n. ",
    "ggrilli75": "1- you must abir file: your dashboard / assets / stylesheets / application.scss\n2 - Look for the following entry:\n\u00a0\u00a0\u00a0\u00a0\u00a0 .widget {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 text-align: center;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 width: inherit;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 height: inherit;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 display: table-cell;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 vertical-align: middle;\n}\n\u00a0 and adds the corresponding font-size line (eg font-size: 20px;)\n3 - Save this file\n4 - Open the corresponding file .scss meter-widgets (/ your dashboard / widgets / meter\n5 - Go to the entrance\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input.meter {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 background-color: $ meter-background;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Color: #fff;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\nand adds the size for your font, in my case font-size: 35px;\n6 - Save and go!\n. ",
    "Navinskumar": "Thanks  cefigueiredo for the inputs , it worked .\n. Hi Guys \nany idea how to  display widgets without any alignment , i want to use all browser space .\ni have attached screenshot , currently widgets are aligned middle  instead i want display them with out wasting any space .\n\n. ",
    "perhallstroem": "Yes, please!\n. ",
    "frvi": "The use case here is when using inside a Docker container, and the widget you install needs modification to the job-file, e g Jenkins Build widget needs to be configured with url and job name.\n. ",
    "somehuman": "I'm sooo stupid.. In the plotOptions:column section I had showInLegend: false\nChanging it to true fixed the issue.\nThanks everyone for trying to assist\n. Must have been a typo. Working OK now.\nThanks\n. @MartynKeigher \nCould expand on this and tell us how NodeJS helped you out running dashing on a windows box? as a service?\nVery shortly I will be trying to do the same thing that kaltinril is trying to do - that is run dashing as a windows service.\nThanks in advance\nsomehuman\n. What was the solution?\nSomeHuman\n. Did you ever find a solution to this? \n. How about having your Powershell code post to your dashboard using Curl for windows? Alternatively, I believe there are methods in Powershell to use HTTP (such as: Invoke-WebRequest).\nUnless I'm missing the gist of your question, gather the data you want using Powershell, then post the result to the dashboard using HTTP. If you need to do this periodically, run the Powershell script via a scheduled task. I do something similar using VBScript.\nIt may also be possible to run your Powershell script from Ruby using System or Exec commands and pass the data via a file dump. Ruby calls a batch file, which runs a Powershell script and dumps data to a temp file, Ruby then reads the temp file data and posts to the dashboard. Have not done this myself but seems possible.\nSomeHuman\n. After many trials and errors, I run Dashing as a windows service using NSSM (Non-Sucking Service Manager which is fantastic and is freely available on the web) and have really have had no problems.\nMake sure you use either the 32 or 64 bit version of NSSM as appropriate. The settings I use for NSSM to run Dashing are: (obviously yours would be different)\nPath: C:\\RailsInstaller\\Ruby2.0.0\\bin\\ruby.exe\nStartup directory: C:\\MyDashboard\nArguments:  C:\\RailsInstaller\\Ruby2.0.0\\bin\\thin start -p 3030\nHope this helps...\nSomeHuman\n. ",
    "saifanam": "I'm looking for something similar. @nandaceg007, please let me know if you've found out something. Thanks.\n. ",
    "rattray": "Hello,\nFigured this out in the end.\nIn the coffeescript you remove the AnimateValue being called.\nSo this;\n  @accessor 'value', Dashing.AnimatedValue\nwould become;\n  @accessor 'value'\nNot sure why it took me so long to work that out but nevermind...\nCheers\n. ",
    "v0lkan": "bump! \nThat's really an important issue for large-scale enterprise usage.\none workaround would be to create multiple dashing sub-sites (i.e., dasbhoard-foo.example.com, dashboard-bar.example.com etc) -- At least that's how I'm planning to solve it, or similar to @tijszwinkels hack the mesage queue and replace with something else.\n. ",
    "rguerrer93": "figured it out. used .to_f at a certain location and it worked.\n. ",
    "jabbrwcky": "Have to check up the padding thing. Will reopen later.\n. ",
    "Sweenj": "Thanks Tyler, I was able to solve the issue, I'll post my code shortly.\n. ",
    "FlorianZ": "Closing this: It looks like the polyfill works very reliably, and the sleep issues may not be related to it after all.\n. ",
    "blainesch": "Can this be closed?\n. On a per-widget basis you could add the class status-warning or remove it when the widget reaches a negative state. Or something that needs attention. In theory you'd fix it before you got annoyed of looking at it.\n. Why not give yourself permissions in that directory?\n. This is not currently supported. What is your use case?\n. a workaround would be to use a generator like thor for your widget? that sounds ick, but would allow you to use erb and convert it to html.\n. ",
    "PeterBi87": "I guess i have nearly the same question:\nI would like to let the user add/remove widgets inside his/her personal dashboard. This process should be possible without touching code. Are there any pre-made dashings on github, where this is realized?\n@kaltinril I guess your solution comes very close to my requirements. Is it possible to load it up? That would be really great.\nI addition to that, i am open for every kind of ideas to make that possible. \n. ",
    "Hackuracy": "Hi,\ndid you solved your problem?\n. ",
    "dimasmir": "Thank you, I will try it!\n. ",
    "lkasa5546": "sorry, but i dont know \ud83d\ude2d\nanyone can help you\ngod bless you of all \ud83d\udc93\n\uc815\uc9c4\uc6b0 \ub4dc\ub9bc\n1. 10. 3. \uc624\ud6c4 10:31 sbrehm notifications@github.com \uc791\uc131:\nCan anyone share code for how to implement a funnel chart. I see that it is\none of the chart types available from highcharts but my attempt to\nimplement was not successful. If anyone has any code/experience (or an\nalternative to highcharts) to share, that would be great. :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/455.\n. ",
    "jacksonofalltrades": "FYI, this happens on both Firefox and Chrome, but unreliably. I've stopped and restarted a few times, and one time randomly things worked.\nOn my macbook this works perfectly reliably. I also checked all the ruby gems. They are almost identical on both machines, certainly the ones that seem most relevant to generating the javascript. I did try saving the generated javascript from the working and non-working ones. I can send you the two, they are definitely different somehow.\n. Hm, seems there is no way to attach non-image files. Please let me know where I can send them\n. Update: I think Perforce messed up some of my dashing files. Not sure how. It made me add newlines and remove tabs before allowing a check-in. Once I moved to git, things have worked fine.\n. ",
    "GunnarLindholm": "Shouldn't doc specify this then?\nAnyway, I tried that and got\nFetching: eventmachine-1.0.3.gem (100%)\nBuilding native extensions.  This could take a while...\nERROR:  Error installing dashing:\n    ERROR: Failed to build gem native extension.\n/usr/bin/ruby1.9.1 extconf.rb\n/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in require': cannot load such file -- mkmf (LoadError)\n    from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:inrequire'\n    from extconf.rb:2:in `'\nGem files will remain installed in /var/lib/gems/1.9.1/gems/eventmachine-1.0.3 for inspection.\nResults logged to /var/lib/gems/1.9.1/gems/eventmachine-1.0.3/ext/gem_make.out\nTrying to install this in Ubuntu\n. ",
    "mckenpd1": "Hit the same issue, install the ruby-dev package which includes mkmf and it will install correctly.\n. ",
    "tooh": "@kaltinril OK, will try this.\n. ",
    "SamLevene": "Ah. I see. Thanks.I'll look into that, then.\n. ",
    "patdowney": "Depending on what widgets you're using I'd also look at the golang port of dashing, I've got an example here where i've added some windows support to an example (created by @gigablah): https://github.com/patdowney/windows-dashing-go-demo - if you build it on windows the exe that is output can be installed as a service using sc.exe.\n. ",
    "barrie0482": "This is a screenshot of my iframe widget.\nCheers, Barrie\n\n. Thank you for your assistance and such a quick response. It is very much appreciated. \nI did try another url, but it was a Google sites page. :-)  Ooops.\nI tried the CNN page and the resizing and it work exactly as I hoped it would.\nI was only using Google as a test and should have tried another site. \nThanks for the info about the X-Frame-Options header. That's something I wouldn't have thought of. \n. ",
    "mikerudolph": "Looks like you want to add a persistence layer to your dashing setup.\nThis is easy to do when creating custom jobs. You're easily able to grab your initial dataset on start and inside your scheduled task query the new data, save to the database, then send your server-side event to dashing.\nThere is a wiki how to showing you a mysql example here\n. ",
    "joeyAghion": "Thanks for clarifying @mikerudolph. For now I've filled this need by querying and sending a few historical data points along with the \"current\" data in each event. If I have to expand that, I'll dig further into this approach.\n. ",
    "wpeterw": "I know. I read the manual:\n\"For data-sizex and data-sizey, these are multiples of the widget dimensions you can configure in application.coffee\" \nWhat I want to achieve is a dashboard with one fullscreen widget. I need to overide the values in application.coffee in the .erb file.\n. Yes. But the size i want is not a (round) multiple of the defined size.\nOn Nov 10, 2014 9:54 PM, \"howardsternisbatman\" notifications@github.com\nwrote:\n\nI'm not following.\nin your dashboard.erb file have the one widget that you want full screen\nand scale up the data-sizex and data-sizey values.\nIs this not what you want?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/475#issuecomment-62453267.\n. Thats not a solution, thats a bad workaround ;)\n\nIt can be overriden with javascript in the erb file. Seen it, can't find it\nback.\nOn Nov 10, 2014 10:07 PM, \"howardsternisbatman\" notifications@github.com\nwrote:\n\nhow about control + in the browser to scale it up a bit so it fits?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/475#issuecomment-62455205.\n. \n",
    "benkirkley": "Moonchaser, can I request you summarise how you solved it? Think of all the poor souls who are going to find this page from a Google search only to find a dead end.\n. ",
    "OS42156": "Is there a way to store data passed over Curl posts?\n. ",
    "andrewlynch": "The issue is caused by Heroku using a wrong Ruby version. Specify the latest version of Ruby that is available on Heroku in the gemfile\n. ",
    "felipefontoura": "Thanks! @tylermauthe I'll check and give a feedback here.\n. Problem fixed! :+1: Thanks!\n. ",
    "nicolnx": "I have a view like\n...\n    <li data-context-peer=\"peer_G4_01\" data-source-class=\"peer.status\">\n        <div data-source=\"peer.name\" class=\"name\"></div>\n        <div class=\"state\"><div data-source-class=\"peer.state\"></div></div>\n    <li data-context-peer=\"peer_G4_02\" data-source-class=\"peer.status\">\n        <div data-source=\"peer.name\" class=\"name\"></div>\n        <div class=\"state\"><div data-source-class=\"peer.state\"></div></div>\n</pre>\n...\nand so on up to peer_G4_99\nI tried data-foreach but in this case if any peer is updated - all of them are going to be re-rendered with flickering, etc, so maybe it would be nice if I could just use some kind of for(...) here\nOr maybe I completely missing the point and this should be done in some another way?\n. ",
    "MiniDigger": "the json was wrong\n. ",
    "7sense": "Update:\nIt seems that when dashing start, javascript only generates the table with attribute referring to another widget, but dashing does not really deem it as a widget. I am thinking maybe we need dashing to rebind the table later on, do not know how to, or if it is possible to do so.\nPlease correct me if I am wrong and advise.\nCheers~\n. Thanks for you reply!\nBelow is a copy of my javascript that dynamically generate tables \n``` javascript\n$.getJSON(\"http://kxu.com:3030/server.json\", function (data) {\n    var newname = document.getElementById('servergroup').getAttribute('data-title');\n    var servers = data[newname];\n    document.getElementById('thetable').id = newname;\n//create table tag class\nvar theTable = document.getElementById(newname);\ntheTable.setAttribute(\"class\", \"table_dash\");\n\nvar tr = document.createElement('tr');\nvar th = document.createElement('th');\nth.setAttribute(\"class\", \"th_dash\");\nth.setAttribute(\"width\", \"105px\");\nth.appendChild(document.createTextNode(newname));\ntr.appendChild(th);\n\nfor (var i = 0; i < servers.length; i++) {\n    var ths = document.createElement('th');\n    ths.setAttribute(\"class\", \"th_dash\");\n    ths.appendChild(document.createTextNode(servers[i]));\n    tr.appendChild(ths);\n}\ntheTable.appendChild(tr);\n\n$.getJSON(\"http://kxu.com:3030/server_details.json\", function (response) {\n    for (var page in response[newname]) {\n        var trs = document.createElement('tr');\n        var tdh = document.createElement('td');\n        tdh.setAttribute(\"class\", \"tdh_dash\");\n        tdh.appendChild(document.createTextNode(page));\n        trs.appendChild(tdh);\n\n        for (var j = 0; j < servers.length; j++) {\n            var tdid = page + \"_\" + servers[j];\n            var td = document.createElement('td');\n            td.setAttribute(\"class\", \"td_dash\");\n            td.setAttribute(\"data-id\", tdid);\n            td.setAttribute(\"data-view\", \"Status\");\n            td.setAttribute(\"data-title\", \"\");\n            trs.appendChild(td)\n        }\n        theTable.appendChild(trs);\n    }\n});\ndocument.getElementById('servergroup').id = newname + \"_view\";\n\n});\n```\nI put this javascript in the htnl of a widget called \"Servertable\" which only contains one single line:\njavascript\n<table id=\"thetable\"></table>\nWhat this javascript does it to read details from two json files and create tables in which each cell is calling another widget (td.setAttribute(\"data-view\", \"Status\")).\nIn the main erb, I have multiple \"Servertable\" widgets with different data-id, the div id will be changed to be the same as data-id by above javascript.\njavascript\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"34\" data-sizey=\"16\">\n     <div id=\"servergroup\" data-id=\"server_1\" data-view=\"Servertable\" data-title=\"Server 1\" ></div>\n</li>\nAs you can see, the widget \"Status\" is actually created on the fly when Dashing is starting, it does not seem to be recognized as a View.\nHope this makes sense to you.\nCheers!\n. ",
    "rmosolgo": "With batman.js, you can't modify the DOM in any way except by batman.js! \nMaybe a few things that might help in writing batman-friendly HTML: \n- data-foreach binding is how batman.js iterates over things\n- You could create different custom views and bind them with data-view bindings \nIf you share the code you're using to modify the DOM, I might be able to make a more specific suggestion!\n. ",
    "toby3d": "@kevster that's all it was.\n. @farski these logs are taken from heroku dashboard. And there is no difference between the 'git push' from a local directory or through Dropbox. If there are other ways to supplement this information, please explain how. :\\\n. @farski, okay, I reinstalled dashing and execute heroku logs:\n2014-12-17T01:39:39.154503+00:00 heroku[api]: Release v2 created by toby3d\n2014-12-17T01:39:39.154401+00:00 heroku[api]: Enable Logplex by toby3d\n2014-12-17T01:40:49.192918+00:00 heroku[api]: Release v3 created by toby3d\n2014-12-17T01:40:49.712393+00:00 heroku[api]: Deploy a25a4cb by toby3d\n2014-12-17T01:40:49.192918+00:00 heroku[api]: Set LANG, RACK_ENV config vars by toby3d\n2014-12-17T01:40:49.586098+00:00 heroku[api]: Scale to web=1 by toby3d\n2014-12-17T01:40:49.712393+00:00 heroku[api]: Release v4 created by toby3d\n2014-12-17T01:40:53.966242+00:00 heroku[web.1]: Starting process with command `bundle exec thin start -R config.ru -e production -p 11400`\n2014-12-17T01:40:55.580523+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/runner.rb:156:in `run!'\n2014-12-17T01:40:55.580520+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:72:in `start'\n2014-12-17T01:40:55.580516+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:32:in `load'\n2014-12-17T01:40:55.580521+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/runner.rb:200:in `run_command'\n2014-12-17T01:40:55.580499+00:00 app[web.1]: /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:32:in `read': No such file or directory - config.ru (Errno::ENOENT)\n2014-12-17T01:40:55.580531+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `<main>'\n2014-12-17T01:40:55.580524+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/bin/thin:6:in `<top (required)>'\n2014-12-17T01:40:55.580518+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:182:in `load_rackup_config'\n2014-12-17T01:40:55.580529+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `load'\n2014-12-17T01:40:56.355694+00:00 heroku[web.1]: State changed from starting to crashed\n2014-12-17T01:40:56.356501+00:00 heroku[web.1]: State changed from crashed to starting\n2014-12-17T01:40:56.346209+00:00 heroku[web.1]: Process exited with status 1\n2014-12-17T01:40:59.525846+00:00 heroku[web.1]: Starting process with command `bundle exec thin start -R config.ru -e production -p 14355`\n2014-12-17T01:41:01.507405+00:00 heroku[web.1]: Process exited with status 1\n2014-12-17T01:41:00.754554+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `<main>'\n2014-12-17T01:41:00.754551+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/bin/thin:6:in `<top (required)>'\n2014-12-17T01:41:00.754515+00:00 app[web.1]: /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:32:in `read': No such file or directory - config.ru (Errno::ENOENT)\n2014-12-17T01:41:00.754545+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/runner.rb:200:in `run_command'\n2014-12-17T01:41:00.754543+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:72:in `start'\n2014-12-17T01:41:00.754552+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/bin/thin:23:in `load'\n2014-12-17T01:41:01.547603+00:00 heroku[web.1]: State changed from starting to crashed\n2014-12-17T01:41:00.754549+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/runner.rb:156:in `run!'\n2014-12-17T01:41:00.754538+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:32:in `load'\n2014-12-17T01:41:00.754540+00:00 app[web.1]:    from /app/vendor/bundle/ruby/2.0.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:182:in `load_rackup_config'\n. ",
    "farski": "@toby3d If you run heroku logs in the app directory, what you included in your ticket is not the server logs\n. In a terminal cd to the app's directory and run heroku logs. It will spit out logs from the sever, not just the build process. If the app is crashing there will be a message about it. It's unclear if you're already doing that, but it would be very unusual if the server logs were only showing what you posted.\n. ",
    "MicroGenio": "what is the answer here\n. ",
    "MeesterMeetch": "Did y'all ever find the answer?\n. ",
    "majianxiong": "Why executive will appear \uff1a\n$ heroku logs --t\nheroku-cli: Adding dependencies... 3.65 MB/3.65 MB\nheroku-cli: Adding dependencies... 3.65 MB/3.65 MB\n !    Get https://heroku-cli-assets.s3.amazonaws.com/npm/v3.8.5.tar.xz: dial tcp 54.231.18.169:443: i/o timeout\n. ",
    "ohiodn8": "I had the same issue... while setting up my devise mailer.\nI created a file called procfile with this dyno:\nweb: bundle exec rails s\nAnd thats when it started. So I added:\nweb bin/rails server -p $PORT -e $RAILS_ENV\nadding both dynos in the procfile makes both work at the same time...\nFixed!\n. @jrnjerin, haven't had that issue, but from what I can tell, it looks like an error in your config file; maybe a development or production file.\nRunning: heroku run rails console may give a better log...\n. ",
    "misoi": "at=error code=H10 desc=\"App crashed\" method=GET path=\"/\" host=cynthiablog.herokuapp.com request_id=91b29b11-37b9-4fc9-bc3d-289cf4a86c6a fwd=\"154.70.39.19\" dyno= connect= service= status=503 bytes=\nam getting such error who knows where the problem might be?\n. ",
    "jrnjerin": "@misoi I am also getting the same issue. Any fix here would be great?\n. @ohiodn8 Yes it was my mistake.  I was referring this link http://x-team.com/2016/04/how-to-get-started-with-facebook-messenger-bots/\nAnd I forgot to modify the package.json file. We should modify it like this\n{\n  \"name\": \"testbot\",\n  \"version\": \"1.0.0\",\n  \"description\": \"TestBot Server App\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"node index.js\"\n  },\n  \"author\": \"jrnjerin\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"body-parser\": \"^1.15.2\",\n    \"express\": \"^4.14.0\",\n    \"request\": \"^2.75.0\"\n  }\n}\nAnd it is worked for me.\nThank you very much for your reply that alerts me to look into the code.\nThanks again.\n. ",
    "Dreamyplayer": "-----> Node.js app detected\n-----> Creating runtime environment\n   NPM_CONFIG_LOGLEVEL=error\n   NPM_CONFIG_PRODUCTION=true\n   NODE_VERBOSE=false\n   NODE_ENV=production\n   NODE_MODULES_CACHE=true\n\n-----> Installing binaries\n       engines.node (package.json):  unspecified\n       engines.npm (package.json):   unspecified (use default)\n   Resolving node version 8.x...\n   Downloading and installing node 8.9.4...\n   Using default npm version: 5.6.0\n\n-----> Restoring cache\n       Loading 2 from cacheDirectories (default):\n       - node_modules\n       - bower_components (not cached - skipping)\n-----> Building dependencies\n       Installing node modules (package.json + package-lock)\n       up to date in 2.649s\n-----> Caching build\n       Clearing previous node cache\n       Saving 2 cacheDirectories (default):\n       - node_modules\n       - bower_components (nothing to cache)\n-----> Build succeeded!\n-----> Discovering process types\n       Procfile declares types     -> worker\n       Default types for buildpack -> web\n-----> Compressing...\n       Done: 158.5M\n-----> Launching...\n       Released v9\n       https://rooster-boot.herokuapp.com/ deployed to Heroku\n. ",
    "xptavares": "you need a js engine, install nodejs\nsudo apt-get install nodejs\nhttp://nodejs.org/\n. ",
    "ykyuen": "i got a similar problem on the number widget, after a period of time the current value is not updated but the more-info value is fine. i have to refresh the page to view the latest value. it happens randomly without any pattern.\n. ",
    "Mitsumi": "Problem still exists, any suggestions?\n. @tylermauthe, When I refresh the page, the correct values are displayed.\nIn console I can see the updated values coming in, but they are not 'refreshed' into the widget.\n. ",
    "rj-reilly": "correction: I do not get a blank screen, but the foreground is not changed either.\n. anyone have a fix for me ? thanks !\n. ",
    "scharissis": ":+1: \nAs Limp Bizkit would say, keep rolling rolling rolling! \n. ",
    "gerwitz": "At least one fork has blazed a little trail: https://github.com/FlorianZ/dashing/commit/84edfc80775c87f679cecad4e68f6c84f67c8023\n. ",
    "thelinuxlich": "Vue.js would be much simpler and nice\nhttp://vuejs.org\n. I took a stab on this but using Node.js and Vue: https://github.com/thelinuxlich/vue-dashing-js\n. I took a stab on this but using Node.js and Vue: https://github.com/thelinuxlich/vue-dashing-js\n. ",
    "waynehoover": "I second vuejs. Its similar to batman, and faster than react.\n. I'm using dashing on a pi (last gen, and current gen) and to get it to work well I had to pre-compile the assets first then serve them from /public on the pi.\n. ",
    "Guillaumichaud": "Is there any estimated implementation date or roadmap at Dashing level? :)\n. Why not closing this issue as it is a duplicate of #498?\n. ",
    "pascalw": "I too took a stab at replacing Batman.js with something else, in my case React. We've been running some dashboards internally at our company for a while where we had a React frontend talking to a Dashing backend. While this worked fine, the development experience was not that great since you'd have to run the backend and frontend separately.\nSo to tackle this I decided to write a Node.JS based backend for our frontend and open source it: https://github.com/pascalw/dashbling. It's a nice integrated tool now, where widgets are written in React and data fetching logic in Javascript too (via Node.JS). Additionally widgets can easily be shared via NPM.\nIf you're looking for a modern replacement, in spirit of Dashing check it out and let me know what you think!. ",
    "tclass": "nvm I solved it\n. I thought I had to pass values via HTML Attributes to the Jobs, but I realized I didn't have to do that, I just can fire up events and the right widget will get the result, so I created a config file and added some information about some widgets and just imported the config in my jobs. So I didn't pass any values from HTML to the Ruby Jobs, but if you have a problem just make an issue and link it here, I'm happy to help.\n. ",
    "kneradovsky": "found some bugs. need to fix them \n. @mahoekst : \n\nUsing websockets instead of sse's will that make it work on IE?\n\nYes, it will work in IE, starting from IE10\n@pushmatrix \n\nI want to keep the base installation minimalistic.. \n\nI use dashing in my project and I have to have websockets support in it. It would be very convinient for me to have that websocket support in the gem. Do you mind if I start a new gem based on dashing which will have that additional functionality \n. ",
    "itgoujie2": "i am having the exact same issue. I got H12+503 error some times, I do have set up New Relic to ping my app to make sure it is not idling. And New Relic will not catch this error. If you have found the solution, please please let me know\n. I switched to aws ec2, never got timeout error even once, same app, Heroku needs to take this issue seriously..\n. ",
    "syednasir": "Did that issue get resolved? We're having similar issues on heroku (with event streams) and we have  tried scaling dynos, rack-timeout, heartbeat etc.\n. ",
    "ryanprater": "I've been experiencing the same issue for the past 6 months but haven't had time to fully address the issue. From my research I believe the issue to be gevent and multi-threading with slow clients. See the following links for context:\nhttps://github.com/benoitc/gunicorn/issues/588\nhttps://discussion.heroku.com/t/gunicorn-dyno-death-spiral/136\nhttp://blog.etianen.com/blog/2014/01/19/gunicorn-heroku-django/\nWill report back once I am able to investigate.\n. Hi all,\nI spent 6+ months this year going back and forth with Heroku Support, and finally got a solid answer out of them. Please have a look at my SO answer here: http://stackoverflow.com/questions/29088113/heroku-sporadic-high-response-time/32465651#32465651 \nHopefully that helps. Good luck!\n. ",
    "nitronick600": "I'm seeing this as well.  I've tried the heartbeat as well as New Relic without luck.  Currently, I'm instructing the customer to refresh the dashboard periodiclly, but there must be a better way.  \nI've contacted Heroku support, we'll see what they say. \n. ",
    "5and33p": "Hi,\nThanks for your reply.\nI am on a PC that does not have direct access to the internet, so I have had to grab the necessary gems from rubygems.org. I initially executed 'gem install dashing' and then went on a wild goose chase, trying to resolve and download each and every dependency. I finally managed to get all the gems I required and got dashing to start up.\nI wasn't able to use the bundle command as it appears to want to go out on to the web.\nI tried, \ndashing new test\ncd test\ndashing start\nand my thin webserver starts up on 0.0.0.0:3030\nI still get the same Tilt:StringTemplate text all across my screen.\n. Got it working!! whoop whoop. Turns out I had the wrong version of Tilt installed - namely 1.3.0 which isn't supported. Thanks!\n. ",
    "kassi": "Sure. I added tmp locally later without checking it in, but history.yml is a good point. Added!\n. ",
    "tjhorner": "Forgot about this issue, it was something in my Gemfile. I have no idea what, but creating a new dashboard and copying over the widgets solved it.\n. ",
    "visser23": "I've figured it out.\nDashing will generate a class object which is based on both the data-id and data-view tags (probably via JS but I may be wrong there).\nThis will come out looking something like widget-data-view.data-id.\nThis means that you can create a new class in your CSS document using the element generated by JS. In my case, this would look something like:\n```\n   .widget-rickshawgraph {\n       / CSS stuff /\n    }\n.widget-rickshawgraph.DATA-ID {\n        .x_tick > .title {\n      / CSS overwrite /\n   } \n```\nHope that makes sense. Thanks :)\n. ",
    "pol0nium": "Thanks, that are definitely the answers I was looking for.\n. ",
    "jmb": "I managed to get the latest font-awesome installed. All I did was put in the new css for font awesome, add the new font files and then edit the css update the reference to the font files (e.g. src:url('../assets/fontawesome-webfont.eot?v=4.3.0')).\nIn a couple of widgets you need to change from the icon-whatever classes to the new fa- versions.\nI don't think it broke anything...\nI can probably put together a pull request if it helps...\n. Here is the PR: https://github.com/Shopify/dashing/pull/514 (for just FontAwesome update)\nPlease let me know if it has issues! :smiley: \n. My fork is here: https://github.com/jmb/dashing/tree/fontawesome-4.3.0 (you can click through from the pull request).\n. :+1: \n. I'm not a GitHub expert in anyway, but if you've cloned from the master, I think you could add my repository as another remote and merge in my changes (after checking out whatever branch you want to merge onto):\ngit add remote jmb git@github.com:jmb/dashing.git\ngit merge jmb/fontawesome-4.3.0\nIn terms of applying the changes to an existing project created with dashing new, then I'm not really sure how you'd do that (but it's really not too difficult to manually install - just take a look at the files I've changed and download the font files from fontawesome.io and replace the existing ones).\n. Doing a merge from my branch shouldn't affect anything other than the fontawesome stuff though - git is pretty good at asking you about any conflicts (if any) and letting you resolve them.\n. Typical! I just tested it though:\n$ git checkout master\n$ git branch test-merge\n$ git checkout test-merge\nHere I made a change to application.coffee (just added a line for debugging in). Then merge from my 'remote' branch (my remote is labelled origin):\n$ git merge origin/fontawesome-4.3.0\nUpdating f4b121e..763d950\nFast-forward\n templates/project/assets/fonts/FontAwesome.otf           |  Bin 0 -> 93888 bytes\n templates/project/assets/fonts/fontawesome-webfont.eot   |  Bin 37405 -> 60767 bytes\n templates/project/assets/fonts/fontawesome-webfont.svg   |  240 ++++-\n templates/project/assets/fonts/fontawesome-webfont.ttf   |  Bin 79076 -> 122092 bytes\n templates/project/assets/fonts/fontawesome-webfont.woff  |  Bin 43572 -> 71508 bytes\n templates/project/assets/fonts/fontawesome-webfont.woff2 |  Bin 0 -> 56780 bytes\n templates/project/assets/stylesheets/font-awesome.css    | 1704 ++++++++++++++++++-------------\n templates/project/dashboards/sampletv.erb                |    8 +-\n templates/project/widgets/number/number.coffee           |    2 +-\n 9 files changed, 1221 insertions(+), 733 deletions(-)\n create mode 100644 templates/project/assets/fonts/FontAwesome.otf\n create mode 100644 templates/project/assets/fonts/fontawesome-webfont.woff2\nSo anything unrelated is definitely not broken by git (as expected).\nHope this helps for next time! :smiley: \n. Just a note to say I've created anew PR #687 for FontAwesome 4.5.0\n. A year on and no merge! :-1: \nThis pull request is out of date itself now as FontAwesome is now at version 4.5.0!\n. Superseded by new PR #687 for FontAwesome 4.5.0\n. Not tried this, but sounds like a brilliant patch. My Google Calendar APIv3 widget suffers from this problem!\n. Just override it in the html of your dashboard with a style=\"background-color: #ffffff\" attribute. There is an example of this on one of the sample dashboards.\n. See comments on #514, but I have made the same changes as before just with the new FA package:\nI have replaced the font files and fontawesome css file (with a minor update for the paths to the fonts).\nI have updated the few places that the old icon- fontawesome class names were used with the new fa- format (and the changed icon names as appropriate).\nPlease let me know if I've missed anything, but this should mean the base install of Dashing works fine - 3rd party widgets may need updating to use the new FontAwesome fa class names - this should be a simple find-and-replace.\n. Just merge from my repository's fontawesome-4.5.0 branch, the same as before. :smile:\n. ",
    "ke4roh": "I've been running it for 3 months and haven't noticed any changes (aside from it working) with the upgrade to Rickshaw.  It will not play well with #542 because it references an even newer version of d3.\n. ",
    "michaelachrisco": "What I have now is: \n``` Ruby\n    load_params = YAML::load_file('config/application.yml')\n    github_params = load_params['github'].symbolize_keys\n@token = github_params[:github_token]\n@user = github_params[:github_user]\n@org = github_params[:github_org]\n\n```\nand a config/application.yml with:\ngithub:\n  github_token: token\n  github_user: me\n  github_org: my_work\n. Ill check it out, thanks.\n. ",
    "ilikenwf": "As far as open source goes, my boss and I are both fans of open source software, and he made the call, though I push for our contributions every time I can.\nFor # 1 I know how jQuery and plugins function, the problem is jqplot doesn't function as expected and I have yet to determine if it is a bug in jqplot or a bug in dashing.\nEven the referenced SO question says that jqplot creates a unique id if one isn't assigned to the object; my problem is that using $(@node).jqplot(...) method of doing things does not work and I am unsure where the bug is.\nWe can't use class based selectors to initiate our plots because each one gets generated as dashing passes the data to it...\nFor # 2: thank you!\n. No need to apologise! My knowledge of coffeescript is limited, though, so I still feel a bit like a caveman in some ways with this process.\n$.fn.jqplot is there, I believe I have the latest milestone release. Maybe it is still behind somehow, I'll try the git version.\nI'll gist the code later - I'm sure I'm doing some things wrong or inefficiently in places because of my lack of coffeescript experience, so I'm a bit self conscious since I write in other languages much more gracefully.\n. I have only a single graph per dashing widget, I have a handle on the one I create for each though, as I call replot after updating the data to redraw.\nFeel free to laugh at my awful coffeescript. I may have an obvious issue here, but I don't see it:\nhttps://gist.github.com/ilikenwf/3583b15c813a0ac2a221\nedit: just updated that gist as I rearranged some things\n. Don't burn your personal time on this unless you really want to...\nThe problem is still that I can't call something like $(@node).jqplot() and am currently having to apply the plot by id, thus preventing me from using this one copy of the widget files for multiple widgets of the same type.\nAs such, my html is this:\n<h1 class=\"jqmetertitle\" data-bind=\"title\"></h1>\n<div id=\"jqmeter\"></div>\n<div class=\"jqmeteropt\"><span data-bind=\"value\"></span></div>\n<p class=\"updated-at-jqm\" data-bind=\"updatedAtMessage\"></p>\n. Ah very nice, thank you! My ignorance of coffeescript seems to be at fault\nhere.\nOn Feb 12, 2015 11:15 PM, \"Tyler Mauthe\" notifications@github.com wrote:\n\nAha! It was such a small thing, I overlooked it several times before\nfinding the main mistake.\ndrawGraph was not defined as a class method, meaning that it didn't have\naccess to the other instance properties like @node.\nSo this:\ndrawGraph = (val, buckets, bucketColors, reverse, sLabel, pos) ->\n    bucketColors.reverse() if reverse\nreturn $.jqplot(\"jqmeter\", [[val]],\ngrid: {background: 'transparent'}\nseriesDefaults:\n  renderer: $.jqplot.MeterGaugeRenderer\n  rendererOptions:\n    label: sLabel\n    labelPosition: pos\n    showTickLabels: true\n    intervals: buckets\n    intervalColors: bucketColors\n)\nShould be:\ndrawGraph: (val, buckets, bucketColors, reverse, sLabel, pos) ->\n    bucketColors.reverse() if reverse\nblah = $(@node).find('.jqmeter').jqplot([[val]],\ngrid: {background: 'transparent'}\nseriesDefaults:\n  renderer: $.jqplot.MeterGaugeRenderer\n  rendererOptions:\n    label: sLabel\n    labelPosition: pos\n    showTickLabels: true\n    intervals: buckets\n    intervalColors: bucketColors\n)\nI've modified div#jqmeter to be div.jqmeter in the HTML and I am using\njQuery.fn.find after selecting @node to ensure that the data update is\nnamespaced to the correct DOM element (IE: the widget). I'm also using\njqPlot as a selector method, as indicated in the StackOverflow I linked\nearlier.\nNote that by making drawGraph a class method, you'll have to reference it\nlike this: @drawGraph.\nHope this helps!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/517#issuecomment-74206497.\n. Thanks! I can confirm this method works, between me not knowing coffee super well and starting at this thing for so long, I was blinded to the issue.\n\nThanks! I'll close the issue and try to get this put on a gist somewhere soon.\n. ",
    "m-baumgartner": "I'll try to explain. I want to make a commercial user of a specific dashboard that i would create and deploy with the rest of our solution. This needs to be installed \"on site\", that basically means that i need to be sure nobody can duplicate the dashboard (and so the work i've put in) to avoid paying for it.\nI think this is not against MIT right?\nI could develop a specific Auth system in my solution but the client could always reset the config.ru and just avoid it.\n. Thank you for your answers, i'll try to find something.\n. Working like a charm Thank you!\nObviously my parameters were different yes but i'd like to give a little advice to anyone going around here\ninstead of starting thin with \n[ruby bin path]\\thin start -p 3030\nyou can start directly dashing with \n[ruby bin path]\\dashing start\nSince the startup directory is your dashboard master folder it contains everything you need to work\n. NB : I kinda made it work with a simple sc screate too but it seems less stable than using NSSM.\n. ",
    "frounzn": "Check the widgets directory. The folders there should have the same name like the files. For example: \nmeter\nmeter/meter.coffee\nmeter/meter.scss\nmeter/meter.html\n. ",
    "tithar": "Yep. Every folder, the files match the name of the folder. \nHere is a directory list:\nC:\\Ruby193\\test\\widgets\\clock\\clock.coffee\nC:\\Ruby193\\test\\widgets\\clock\\clock.html\nC:\\Ruby193\\test\\widgets\\clock\\clock.scss\nC:\\Ruby193\\test\\widgets\\comments\\comments.coffee\nC:\\Ruby193\\test\\widgets\\comments\\comments.html\nC:\\Ruby193\\test\\widgets\\comments\\comments.scss\nC:\\Ruby193\\test\\widgets\\graph\\graph.coffee\nC:\\Ruby193\\test\\widgets\\graph\\graph.html\nC:\\Ruby193\\test\\widgets\\graph\\graph.scss\nC:\\Ruby193\\test\\widgets\\iframe\\iframe.coffee\nC:\\Ruby193\\test\\widgets\\iframe\\iframe.html\nC:\\Ruby193\\test\\widgets\\iframe\\iframe.scss\nC:\\Ruby193\\test\\widgets\\image\\image.coffee\nC:\\Ruby193\\test\\widgets\\image\\image.html\nC:\\Ruby193\\test\\widgets\\image\\image.scss\nC:\\Ruby193\\test\\widgets\\list\\list.coffee\nC:\\Ruby193\\test\\widgets\\list\\list.html\nC:\\Ruby193\\test\\widgets\\list\\list.scss\nC:\\Ruby193\\test\\widgets\\meter\\meter.coffee\nC:\\Ruby193\\test\\widgets\\meter\\meter.html\nC:\\Ruby193\\test\\widgets\\meter\\meter.scss\nC:\\Ruby193\\test\\widgets\\number\\number.coffee\nC:\\Ruby193\\test\\widgets\\number\\number.html\nC:\\Ruby193\\test\\widgets\\number\\number.scss\nC:\\Ruby193\\test\\widgets\\text\\text.coffee\nC:\\Ruby193\\test\\widgets\\text\\text.html\nC:\\Ruby193\\test\\widgets\\text\\text.scss\n. This is my first install on the Windows side, I have it running perfectly on an Ubuntu server.\nI run \"dashing start\" and I get no errors.\nThen when I browse to http://localhost:3030/sample all the widgets are filled with that error text.\n. I don't think I was clear and this was closed prematurely... I have a separate dashing instance on an Ubuntu server that works.\nOn this Windows install, it doesn't work with any browser.\n. ",
    "adambyrtek": "Just to clarify, previously the events coming from history.yml were basically ignored because the dashboard received them before the widgets got initialized.\n. @jmb Exactly, the Calendar widget was an inspiration for this patch :)\n. Any committers around? Looks like there's a demand for this.\n. @pushmatrix @orenmazor @dylanahsmith You seem to have write permissions. Could you review this pull request please?\n. @pushmatrix @serenangai @tahnok @davefp You are listed as maintainers on the webpage. Would you consider merging this? There seems to be a lot of demand.\n. You're welcome!\n. ",
    "FylmTM": "+1\n. ",
    "mbergmann": "+1 this fix works well for our dashboards.\n. ",
    "rentasad": "You will find a Solution at Issue 355\nhttps://github.com/Shopify/dashing/issues/355\nbest regards\nMatthias\n. Hi I resolved my issue self with the follwing addisional line from issou 355:\n@observe 'max', (max) ->\n  $(@node).find(\".meter\").trigger('configure', {'max': max})\nThis JSON-Part have been run successfully\n{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"value\": \"108\", \"max\": \"110\" }\n. ",
    "alexsenxu": "any pointers?\n. ",
    "mattrayner": "I don't want to step on the toes of the Shopify guys here, but I feel like this may be out of scope for the Dashing project?\n\nDashing is a Sinatra based framework that lets you build beautiful dashboards.\n\nI feel like the reporting functions you are after don't really belong inside of Dashing?\n. We're running 4 separate dashboards off of one server with 4 different raspberry pi's displaying each dashboard with no problems.\nWe're running the dashing server in a VM hosted on a private cluster we have but I've ran it on a digital ocean box before with no problems?\nAre you doing anything non-standard as far as the dashboard or widgets is concerned?\n. @tylermauthe I'm using Chromium on Raspbian for each pi\n. This is kind of a side note, and probably not all that helpful... But does it work in ERB? As in is it to do with it being a HAML dashboard as opposed to just ERB?\nI don't know if this would help, but I'd find the answer interesting :P\n. I don't know about the roadmap for Dashing, or about #354 in particular, but if you're using HAML for stylistic reasons and switching to ERB fixes your problem - maybe ERB is the way to go?\n. Touc\u00e8, I watched a keynote from the Dashing guys earlier and they clearly stated that HAML should work\nCan you include your HAML for me to look at?\n. I've had a look at your haml and added an extra DIV element to the last LI tag\nWorking HAML Example\nThe HAML in this gist is working for me - can you test it and let me know?\n. This may be a stupid question, but you have included HAML in your Gemfile?\nAlso, have you tried re-installing dashing & re-creating a project?\n. Why don't you just make a second dashboard?\nWe're running a single Dashing instance on a similar box running 4 separate dashboards\nI.e. they live at:\ndashboards.server.com/dashboard1\ndashboards.server.com/dashboard2\ndashboards.server.com/dashboard3\ndashboards.server.com/dashboard4\nWe then have 4 separate dashboard .erb files and the associated jobs etc\n. Running two instances of dashing in daemon mode with different ports should work for you then.\nIf you set your updates at a decent rate and don't expect too much load on the server then I can't see a problem with your setup. From my testing Dashing seems to be pretty light.\nYou could use some thing like this:\nbash\n$ cd $FIRST_DASHING_PATH && bundle exec dashing start -d -p 3030 -P $FIRST_DASHING_PATH/tmp/pids/dashing.pid\n$ cd $SECOND_DASHING_PATH && bundle exec dashing start -d -p 3031 -P $SECOND_DASHING_PATH/tmp/pids/dashing.pid\nYou could then use NGINX to alias separate domains to the different ports i.e.\ndashboard1.example.com\ndashboard2.example.com\nUsing the above setup you can manage each of the dashing instances separately by killing and starting based on PIDs\nI hope this helps?\n. ",
    "yogeshrathore15": "PS E:\\yogesh1\\chef-repo> gem install knife-windows\nTemporarily enhancing PATH to include DevKit...\nBuilding native extensions.  This could take a while...\nERROR:  Error installing knife-windows:\n        ERROR: Failed to build gem native extension.\nC:/opscode/chef/embedded/bin/ruby.exe extconf.rb\nchecking for main() in -lssl... no\nchecking for rb_trap_immediate in ruby.h,rubysig.h... no\nchecking for rb_thread_blocking_region()... no\nchecking for ruby/thread.h... no\nchecking for inotify_init() in sys/inotify.h... no\nchecking for __NR_inotify_init in sys/syscall.h... no\nchecking for writev() in sys/uio.h... no\nchecking for rb_thread_fd_select()... no\nchecking for rb_fdset_t in ruby/intern.h... yes\nchecking for rb_wait_for_single_fd()... no\nchecking for rb_enable_interrupt()... no\nchecking for rb_time_new()... no\nchecking for windows.h... yes\nchecking for winsock.h... yes\nchecking for main() in -lkernel32... no\ncould not find library: kernel32\n* extconf.rb failed *\nCould not create Makefile due to some reason, probably lack of\nnecessary libraries and/or headers.  Check the mkmf.log file for more\ndetails.  You may need configuration options.\nProvided configuration options:\n        --with-opt-dir\n        --without-opt-dir\n        --with-opt-include\n        --without-opt-include=${opt-dir}/include\n        --with-opt-lib\n        --without-opt-lib=${opt-dir}/lib\n        --with-make-prog\n        --without-make-prog\n        --srcdir=.\n        --curdir\n        --ruby=C:/opscode/chef/embedded/bin/ruby\n        --with-openssl-config\n        --without-openssl-config\n        --with-pkg-config\n        --without-pkg-config\n        --with-ssl-dir\n        --without-ssl-dir\n        --with-ssl-include\n        --without-ssl-include=${ssl-dir}/include\n        --with-ssl-lib\n        --without-ssl-lib=${ssl-dir}/lib\n        --with-ssllib\n        --without-ssllib\n        --with-kernel32lib\n        --without-kernel32lib\nGem files will remain installed in C:/opscode/chef/embedded/lib/ruby/gems/1.9.1/gems/eventmachine-1.0.7 for inspection.\nResults logged to C:/opscode/chef/embedded/lib/ruby/gems/1.9.1/gems/eventmachine-1.0.7/ext/gem_make.out\n. ",
    "JayUK": "Hi there,\nMany thanks for the reply :)\nLike most people, I'm a newbie with all this (my background is not WebDev) :(\nI have created a new widget (List based) and crudely used the following code:\nli data-foreach-item=\"items\">\na href=\"poop2\" onclick=\"location.href=this.href+'?key=';return false;\">\nspan class=\"value\" data-bind=\"item.value\">\nspan class=\"value1\" data-bind=\"item.value1\">\nli>\nThe issue I am stuck with, is how can I use the item.value parameter in my URL, eg:\nonclick=\"location.href=this.href+'?key='+item.value..... Such that the URL is dynamic.\nMany thanks,\nJ.\nps - I have removed the front \"<\" character to make the text appear\n. ",
    "chromerobv": "have you ever figured this out? i was looking into doing something like this as well.\n. ",
    "kkuderko": "I had a similar requirement for the element in the table to be clickable and achived it by generating URLs in the SHEDULER\ntask_url is a URL changing dynamically in each row of a table and depens on a data taken from SQL in my case but it could be any other data\n.rb file:\nim_inc_p1_sql = client.execute(\"sql query here\")\nhrows_string = [ { cols: [ {value: 'Date'}, {value: 'Call ID'}, {value: 'Task ID'}, {value: 'Team'}, {value: 'Subject'}, {value: 'Assigned To'} ] }]\nim_inc_p1_sql.each do |row|\ntask_url = \"<a href='http://host/HEAT/Default.aspx?Scope=ObjectWorkspace&CommandId=Search&ObjectType=Task%23Assignment&CommandData=AssignmentID,%3D,0,#{row['Task ID']},string,AND|' target='_blank'>#{row['Task ID']}</a>\"\nrows_string <<\n{ cols: [ {value: row['AssignedDateTime']}, {value: row['INC ID']}, {value: task_url}, {value: row['OwnerTeam']}, {value: row['Subject']}, {value: row['Owner']} ]}\nend\n`send_event('im_inc_p1', { hrows: hrows_string, rows: rows_string } )``\nand then dsplay it in a Table widget .erb file\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"1\">\n<div data-id=\"im_inc_p1\" data-view=\"Table\" data-title=\"Active P1 Tasks\" data-moreinfo=\"in TSG and EUC queues\" style=\"background-color:#ff5c33;\"></div>\n</li>\n. so edit the below section in dashing.coffee to something like:\nif updatedAt = @get('updatedAt')\n  timestamp = new Date(updatedAt * 1000)\n  year = timestamp.getFullYear()\n  month = timestamp.getMonth()\n  day = timestamp.getDate()\n  hours = timestamp.getHours()\n  minutes = (\"0\" + timestamp.getMinutes()).slice(-2)\n  \"Last updated at #{day}/#{month+1}/#{year} #{hours}:#{minutes}\"`\n\n. ",
    "QingsongYao": "You can use  to build a href . try  where link is one of the name of your item pushed.. ",
    "wlads": "Hi there, let me shout out: ruby 1.8.7 has been EOL on 30 Jun 2013 we-retire-1-8-7 after 5 good years of run ruby-1-8-7-has-been-released.\nIMHO you should try with newer versions (if possible ~> 2.2.0) and shout back any problems :smile: \nRegards\n. ",
    "leonardinius": "+1 I've had the same ftw moment.\nI use standard cli tools to create a working skeleton, only to find out that it does not work as intended\n. ",
    "guckykv": "+1\nSame here. New installation on debian. If I try to start the original \"sample\" job:\n$ dashing job sample\n/srv/dashing/testing-dash/jobs/sample.rb:4:in `<top (required)>': uninitialized constant SCHEDULER (NameError)\n    from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n    from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/cli.rb:106:in `require_file'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/lib/dashing/cli.rb:78:in `job'\n    from /var/lib/gems/1.9.1/gems/thor-0.18.1/lib/thor/command.rb:27:in `run'\n    from /var/lib/gems/1.9.1/gems/thor-0.18.1/lib/thor/invocation.rb:120:in `invoke_command'\n    from /var/lib/gems/1.9.1/gems/thor-0.18.1/lib/thor.rb:363:in `dispatch'\n    from /var/lib/gems/1.9.1/gems/thor-0.18.1/lib/thor/base.rb:439:in `start'\n    from /var/lib/gems/1.9.1/gems/dashing-1.3.4/bin/dashing:9:in `<top (required)>'\n    from /usr/local/bin/dashing:23:in `load'\n    from /usr/local/bin/dashing:23:in `<main>'\nSame problems with my own jobs.\nSystem:\nbash\n$ cat /etc/debian_version \n7.8\n$ ruby -v\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]\n$ gem list | grep dashing\ndashing (1.3.4)\n$ gem list | grep scheduler\nrufus-scheduler (2.0.24)\nSo there is no way to automatically update my dashboard with jobs?\n. ",
    "dacrome": "yes, that's what I realized yesterday when I checked the open issues like https://github.com/Shopify/dashing/issues/498 and the referenced commit https://github.com/alssndro/dashing/commit/17aff6e3942ddd931106783ed0b1b67e68b36ebb. I just wrote a little script that fit my needs. Anyway, thanks for the feedback.\n. ",
    "fgimian": "Just wanted to add a little voice to the crowd here.  Having batman outdated in dashing is really confusing.  I honestly have spent hours today trying to understand why my code wasn't working. I have read the batman documentation at http://batmanjs.org/docs/api/batman.view_filters.html at least a half dozen times.\nI understand that batman is not the way forward, but it would be great to at least have it at the latest version as a stopgap measure until dashing 2.x is released with a new integrated framework.\nCheers\nFotis\n. ",
    "paustindavis": "We are using dashing on a dozen + pi's and it's generally worked well. Each pi boots into kiosk mode and loads the assigned url. The setup we used for each pi is similar to this https://www.danpurdy.co.uk/web-development/raspberry-pi-kiosk-screen-tutorial/. Hope it helps point you in the right direction.\n. ",
    "kinow": "Probably can be closed, as there is some work in progress here: https://github.com/Shopify/dashing/pull/310\n. This issue can be closed. The docs contain some info about it too https://github.com/Shopify/dashing/wiki/How-To:-Change-the-default-dashboard\n. This issue can probably be closed after @tylermauthe comment. Perhaps the documentation could include something about this issue under some section about known issues or so.\n. I used to use Graphite + Dashing in another company (see http://thomasvm.github.io/blog/2012/11/19/bling-dashboards-using-graphite-and-dashing/).\nNow I'm in a new company, with Dashing.JS (moving to Dashing + Ruby soon, TL;DR problems with operating systems), and plan to use InfluxDB + Dashing.\nIn case I can't find any ready-to-use integration, I'd probably look at the one for Graphite, and adapt it to InfluxDB :)\n. Happy to contribute and keep using the fork (that's Dashing-io/dashing right?).\n. @webmaster128 there are some people already involved, talking in GitHub, working on issues, but you are correct none has committed yet (I think).\nThere is already one pull request that I think would be useful, but not sure about security (https://github.com/Dashing-io/dashing/pull/7). I don't want to start committing things without a consensus from the newly formed team and the rest of the community - and I believe others feel the same way.\nDifferent from other projects, where a fork started with some of the previous committers, this fork has been created as the committers stopped working on the code base. So it is expected that there may be a hiatus until the members of the newly created group get to know each other.\nWe are slowly getting to know each other, and talking about the issues we have, and how to fix. You can contribute there if you'd like :smiley: \n. I am probably not the best to answer your questions, but I believe they are valid concerns, and will leave my own opinion here :-)\n\nI am just wondering what the plans for the fork are.\n\nI believe the main goal is to keep the project being maintained, rather than seeing it simply stop the development.\n\nWho the maintainers are, what your plans are.\n\nI was invited to the organisation, but haven't contributed much yet. I have been using Dashing for the last three years I think. Used the NodeJS version too, which is not being maintained any more. My plan is simple; try to help as much as I can (specially given I can use some hours at $work, as they have almost 10 dashboards now, used by different departments).\n\nIs it a one-man show or a team?\n\nThat will probably, and hopefully, a team. But again, it is rather in the beginning of the fork, and as I said before, we are getting to know each other. Expecting that the whole team will start working, as fast and effective as the previous team, is probably asking too much right now. \n\nShould the organization remain Dashing-io when you don't get the domain dashing.io.\n\nFor the time being, shopify is kindly maintaining the domain. I believe we are almost reaching the consensus to use GitHub pages instead. Then options would be find a way to maintain the domain name ourselves (under a group of users, foundation, company, etc), or start redirecting dashing.io to the GitHub page (HTTP 301), inform users, update links and give enough time for people to get used to the new domain.\n\nIs it necessary to give the product a new name to get a new gem entry?\n\nGood question. If you could file an issue we could perhaps discuss it there, as I think we could end up digressing from the question in this issue :smiley: \n. ",
    "kmiller-gh": "I have used the BigImage widget and Weather Underground's API.  Just need to refresh the page or create a job to download the latest images.  There are a few variables you can use to change the image a bit.  Just take a look at their documentation.\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"2\" data-sizey=\"2\">\n  <div data-id=\"picture\" data-view=\"BigImage\" data-image=\"http://api.wunderground.com/api/[MYAPIKEY]/animatedradar/q/NJ/Atlantic_City.gif?width=750&height=690&newmaps=1\" style=\"background-color:transparent;\" data-max=\"true\"></div>\n</li>\n. ",
    "benglerum": "What exactly did you have to do to get this to work? I'm getting a blank screen. Is there a widget that goes along with it that i need to create?\n. ",
    "huyderman": "I had problems with layout and dashboards when using HAML. I had to use HAML for both layout and dashboard to get it to work properly.\n. ",
    "mattb77": "Thanks for replying. No, we definitely want a separate instance for live and non live monitoring, separate code base etc. There's 5+ non live environments, the jobs.rb code could be quite different from live and it doesn't matter if I turn the dev monitoring off and on, but live monitoring must be kept up during business hours. \n. That is helpful. I thought a Linux VM should be able to handle two dashing(s)! Thanks Matt.\n. ",
    "Panzam": "Works for me after adding --servers 1 to the command.\ncd ${FIRST_DASHING_PATH} && bundle exec dashing start --servers 1 -d -p 8080 -e production -P ${FIRST_DASHING_PATH}/tmp/pids/dashing.pid\ncd ${SECOND_DASHING_PATH} && bundle exec dashing start --servers 1 -d -p 8082 -e production -P ${SECOND_DASHING_PATH}/tmp/pids/dashing.pid\nRegards,\nMario\n. ",
    "hpowers": "check out http://railscasts.com/episodes/190-screen-scraping-with-nokogiri\n. ",
    "amitdaniel86": "Fixed !\ndelete the Gemfile.lock\nedit Gemfile file\nadd to Gemfile  : \ngem 'therubyracer'\nSave + Exit & Run bundle install\nGood luck |!\n. ",
    "nickjohnsonm": "Did with both \n    yum install -y rubygem-bundler\nand\n    gem install bundler\nI suspect may be from some items using /usr/share/gems and /usr/local/share.\nI'm trying to follow the instructions without doing any symlinks or anything.\n. Yes, both times.\nFor Ubuntu slide 4 of this http://www.slideshare.net/larrycai/learn-dashing-widget-in-90-minutes works fine, no issues.  \nJust having these issues with installing on CentOS.\nThanks\n. cd /proj && bundle --verbose\nDon't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on this machine.\nUsing backports 3.6.4\n0:  backports (3.6.4) from /usr/local/share/gems/specifications/backports-3.6.4.gemspec\nUsing coffee-script-source 1.9.1\n0:  coffee-script-source (1.9.1) from /usr/local/share/gems/specifications/coffee-script-source-1.9.1.gemspec\nUsing execjs 2.0.2\n0:  execjs (2.0.2) from /usr/local/share/gems/specifications/execjs-2.0.2.gemspec\nUsing coffee-script 2.2.0\n0:  coffee-script (2.2.0) from /usr/local/share/gems/specifications/coffee-script-2.2.0.gemspec\nUsing daemons 1.2.2\n0:  daemons (1.2.2) from /usr/local/share/gems/specifications/daemons-1.2.2.gemspec\nUsing rack 1.5.2\n0:  rack (1.5.2) from /usr/local/share/gems/specifications/rack-1.5.2.gemspec\nUsing thread_safe 0.3.5\n0:  thread_safe (0.3.5) from /usr/local/share/gems/specifications/thread_safe-0.3.5.gemspec\nUsing tzinfo 1.2.2\n0:  tzinfo (1.2.2) from /usr/local/share/gems/specifications/tzinfo-1.2.2.gemspec\nUsing rufus-scheduler 2.0.24\n0:  rufus-scheduler (2.0.24) from /usr/local/share/gems/specifications/rufus-scheduler-2.0.24.gemspec\nUsing sass 3.2.19\n0:  sass (3.2.19) from /usr/local/share/gems/specifications/sass-3.2.19.gemspec\nUsing rack-protection 1.5.3\n0:  rack-protection (1.5.3) from /usr/local/share/gems/specifications/rack-protection-1.5.3.gemspec\nUsing tilt 1.4.1\n0:  tilt (1.4.1) from /usr/local/share/gems/specifications/tilt-1.4.1.gemspec\nUsing sinatra 1.4.6\n0:  sinatra (1.4.6) from /usr/local/share/gems/specifications/sinatra-1.4.6.gemspec\nUsing multi_json 1.11.0\n0:  multi_json (1.11.0) from /usr/local/share/gems/specifications/multi_json-1.11.0.gemspec\nUsing rack-test 0.6.3\n0:  rack-test (0.6.3) from /usr/local/share/gems/specifications/rack-test-0.6.3.gemspec\nUsing sinatra-contrib 1.4.2\n0:  sinatra-contrib (1.4.2) from /usr/local/share/gems/specifications/sinatra-contrib-1.4.2.gemspec\nUsing hike 1.2.3\n0:  hike (1.2.3) from /usr/local/share/gems/specifications/hike-1.2.3.gemspec\nUsing sprockets 2.10.2\n0:  sprockets (2.10.2) from /usr/local/share/gems/specifications/sprockets-2.10.2.gemspec\nUsing eventmachine 1.0.7\n0:  eventmachine (1.0.7) from /usr/local/share/gems/specifications/eventmachine-1.0.7.gemspec\nUsing thin 1.6.3\n0:  thin (1.6.3) from /usr/local/share/gems/specifications/thin-1.6.3.gemspec\nUsing thor 0.18.1\n0:  thor (0.18.1) from /usr/local/share/gems/specifications/thor-0.18.1.gemspec\nUsing dashing 1.3.4\n0:  dashing (1.3.4) from /usr/local/share/gems/specifications/dashing-1.3.4.gemspec\nUsing bundler 1.9.1\n0:  bundler (1.9.1) from /usr/local/share/gems/specifications/bundler-1.9.1.gemspec\nBundle complete! 1 Gemfile dependency, 23 gems now installed.\nUse bundle show [gemname] to see where a bundled gem is installed.\n. bundle exec dashing start\n/usr/local/share/gems/gems/dashing-1.3.4/lib/dashing/downloader.rb:3:inrequire': cannot load such file -- json (LoadError)\n    from /usr/local/share/gems/gems/dashing-1.3.4/lib/dashing/downloader.rb:3:in <top (required)>'\n    from /usr/local/share/gems/gems/dashing-1.3.4/bin/dashing:7:inrequire'\n    from /usr/local/share/gems/gems/dashing-1.3.4/bin/dashing:7:in <top (required)>'\n    from /usr/local/bin/dashing:23:inload'\n    from /usr/local/bin/dashing:23:in <main>'\nThe exception is now \"shorter\"\n. ",
    "ilkerde": "@nickjohnsonm Found a way to get it running? I am facing same issues.\n. ",
    "psychofisch": "Got the same problem...any suggestions?\n. ",
    "Logrythmik": "SAME issue on every OS... . ",
    "delfick": "Nup. When I trace the events they come in as old values. The only thing\nthat makes them update is stopping and starting dashing.\nOn Sat, 4 Apr 2015 19:44 Tyler Mauthe notifications@github.com wrote:\n\nTry loading /events in your browser and watch the event stream for a bit.\nAre the JSON values coming through as you expect?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/547#issuecomment-89529523.\n. It would appear the default jobs are suffering from the same problem.\n\nOn Sat, 4 Apr 2015 at 19:56 Tyler Mauthe notifications@github.com wrote:\n\nDo you have other jobs that are sending data successfully?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/547#issuecomment-89531068.\n. I compared to a new project and nothing really changes other than the new jobs and dashboards.\n\nit does seem however that you've given me the answer.\nI had a setup using unicorn instead of calling dashing start.\nIt would appear that if I call dashing start then the default jobs atleast are updating values.\nI shall change my deployment.\nThankyou.\nStephen.\n. it would appear unicorn's \"preload_app true\" option is causing the data to\nbe stale.\nIf I remove that option then the data refreshes :)\nOn Sat, 4 Apr 2015 at 22:48 Tyler Mauthe notifications@github.com wrote:\n\nYou should be able to use unicorn. Add it to your Gemfile and reinstall\nyour bundle with bundle install and then run unicorn from the bundle with bundle\nexec unicorn.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Shopify/dashing/issues/547#issuecomment-89555329.\n. \n",
    "prwilliams1982": "Clean install resolved issues\n. ",
    "brettrann": "the .erb template has access to params[] which might help you with a quick hack.\nWe have a widget to display all our deployed apps, generally grouped by app.\nI have the metadata for those apps, hosts, and versions stored in a yaml which i read in through config.ru and assign to a Sinatra::Application::VERSIONS namespace.\nThe job uses that structure to build the data for each widget, pulling required bits out from other systems.\nAnd in the .erb will create a widget line for each entry in VERSIONS, and optionally take params[:id] as a comma separated list of IDs so you can specify with URL parameters which ones to display, or using a predefined GROUPSET.\nhtml\n  7 <div class=\"gridster\">\n  8   <ul>\n  9     <%\n 10       widgets =\n 11       params.has_key?('ids')      ? params[:ids].split(',').map {|x| x.to_sym} :\n 12       params.has_key?('groupset') ? GROUPSETS[params[:groupset].to_sym]        :\n 13                                     VERSIONS\n 14     %>\n 15     <% widgets.each do |app| %>\n 16       <% next unless VERSIONSWIDGETS.has_key?(app) %>\n 17       <li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"1\">\n 18         <div data-id=\"versions-<%= app %>\" data-view=\"AppVersion\" data-unordered=\"true\" data-title=\"<%= VERSIONSWIDGETS[app][:title] %>\"></div>\n 19       </li>\n 20     <% end %>\n 21   </ul>\nsomething along those lines would solve your generic dashboard problem.\nMy next step will be to override the routes Dashing uses so it can just be /versions/groupset instead of /versions?groupset=groupname but that's just icing really.\n. ",
    "npavicevic": "I am a couple of years late, but still... the params \"hack\" works perfectly! Thanks @brettrann!. ",
    "gsachane": "You can override it in your dashboard\nfor example :   \ndata-id=\"triage_wip\"   data-view=\"Number\"   data-title=\"Triage - Work in Progress\"   style=\"background-color : #5AC352;\"\n. ",
    "clohtd": "Solved by adding these two lines to the bottom of the Gemfile\ngem 'execjs'\ngem 'therubyracer', :platforms => :ruby\nEntire Gemfile now looks like this:\n```\nsource 'https://rubygems.org'\ngem 'dashing'\nRemove this if you don't need a twitter widget.\ngem 'twitter', '>= 5.9.0'\ngem 'execjs'\ngem 'therubyracer', :platforms => :ruby\n```\n. ",
    "JSzaszvari": "I have the animation working, But color changing does not work across any of my widgets \n. ",
    "mrgoboom": "Did you ever find a solution to this? I am trying to do something similar.\n. ",
    "kitex": "i don't know ruby. I don't seem to be able to modify mysql example.\n. Thanks Nice!\n. ",
    "sseeron": "would love to know this as well...i'm currently pull data from postgres to csv, then dashing reads the csv.\n. ",
    "nozpheratu": "I suggest posting a new question of stackoverflow using the dashing tag.\n. ",
    "ltramos": "Thanks tylermauthe! This worked for me.\n. ",
    "catalinabustam": "When I put a wrong auth_token, I receive the 404 status but when I send the correct one, the widget gets the update but my application (Mirth Connect) say failed, it could be possible that it is expecting a status 204 like the status 404 on failure.\n. ",
    "sash85": "@howardsternisbatman: I'm not a good coder thats why a friend help me to embed the google API. I will ask him to publish the widget asap. \n@tylermauthe: Thank you! I change my first post and paste my complete (not working) code in. I will try your solution.\n. It works! :-).\nIt was a simple bug in css. Thanks for your quick help!\n@howardsternisbatman: @mtempel will post the widget in the next days.\n. ",
    "mtempel": "here is the code to get spreadsheets into dashing https://github.com/mtempel/spreadsheetDemo\n. ",
    "doctorlard": "There's a saying in academia: publish or perish.\n. This would need to be fixed in order to process data from collectd, which posts data as JSON arrays. There doesn't appear to be any way to configure or re-format what collectd sends as JSON (injecting an 'auth_token' key would be jolly handy, for example).\n. ",
    "webmaster128": "Since there has not been a release for years, could someone help out with a couple of commands how to use dashing from the current master? I did setup with the \"Getting Started\" from http://shopify.github.io/dashing/ but have no idea how to upgrade it.\n. And do you agree that some new fork continues to use the current name \"dashing\"?\n. @mgifford Do you consider 3 commits a critical mass? As far as I can see, those 52 comitters are from the original project. AlexMorasUK never contributed anything to the original code.\nWould be great to see some people maintaining a fork, who have been active in the original project and knowing the code structure.\n. @AlexMorasUK @kinow @mgifford I really welcome the effort and as a user of dashing, I'd love to see an active, reliable community around the product.\nI am just wondering what the plans for the fork are. Who the maintainers are, what your plans are. Who is going to get write-access of the repo? Is it a one-man show or a team? Should the organization remain Dashing-io when you don't get the domain dashing.io. Is it necessary to give the product a new name to get a new gem entry?\nI think some kind of announcement that leave space for discussion is just as necessary as working on the code base.\n. > I wonder, could this be told on the dashing.io website?\nSmashing is linked on the website in\n\nHeads-up: Dashing still works great, but is no longer maintained. Read up about it over here.\nYou can also use the fork of the project.. \n",
    "mapledyne": "I think you may have to do some of this by hand. If you get the widget itself from inside a job (if that's where you're running this from), you could:\nwidget = Sinatra::Application.settings.history(\"my_widget\")\nThen get the data itself, delete what you want from there, then use a send_event() to replace the data with the updated list.\nIf I had a better example of what you were wanting to do, I could write up a better example, but hopefully that gets you towards a possible solution.\n. Found the answer to my problem and thought I'd post here if anyone else is curious.\nThis variable:\n  widgets = Sinatra::Application.settings.history\nhas all the widget info (at least the info I was looking for). Looping through that:\n  widgets.each do |key, value|\n   ...\n  end\nlet's you run through all the widgets and do any evaluations desired on them.\n. Coffeescript is Javascript compliant, so you can use the Math.round() function there, though if you want to keep a decimal place you may have to do something silly like Math.round(n*10)/10. \n. We put something like this at the top of our erb template on dashboards we want different sizes. We don't use these on mobile, but the concept should be the same.\nIn addition, we found that some widgets (maxmeter for instance) have minimum sizes they expect. We had to derive from them and make smaller version of the widgets so they looked good in the smaller boxes.\n```\n\n$(function() {\n  // These settings override the defaults set in application.coffee. You can do this on a per dashboard basis.</p>\n<p>Dashing.widget_base_dimensions = [200, 250]\n  Dashing.widget_margins = [5, 5]\n  Dashing.numColumns = 6\n  });\n\n```\n. I agree with @pushmatrix on the scope of Dashing - it handles one-screen layouts quite well. Making it responsive definitely is a bit of a stray away from its core competency. There are lots of things I'd love to see improved in Dashing (but don't get me wrong - it's a fantastic tool), but making it responsive wouldn't help us in the slightest, and we have thousands of widgets and hundreds of dashboards.\n. Yes. I wrote a simple example job that can do just that here:\nhttp://www.mapledyne.com/ideas/2015/6/30/delete-a-dashing-dashboard-widget\nYou basically just want to manipulate the Sinatra::Application.settings.history variable, but the code in that link should get you most of the way to where you want to be.\nOr skip the post and go right to the gist file:\nhttps://gist.github.com/mapledyne/6fb671c17c3f865309f3#file-delete-widget-rb\n. Forcing a refresh may be a hack, as what I do there (I'd agree on both counts, frankly), but what I describe above doesn't refresh the whole stack - in our situation, we only delete the widgets we're wanting deleted. We dynamically create dashboards that look to see what widgets exist to decide what to display. Having certain widget deleted, then, change the look of the dashboards as appropriate.\nIf there was an API call or similar to delete widgets individually, I'd love to hear it. Until then, manually removing them from the history variable has been very successful for us. \nIn other words: do you have a non-hack solution to the problem of removing a widget? I'd love to learn.\n. We use it for dynamic dashboards lots, quite successfully, and I didn't find it to be a lot of work. It actually turned out to be much less than I expected. A job symlinks the appropriate dashboards to a template erb file (essentially one for every environment/set of VMs). This erb then looks up its filename which due to the symlink is the id of the environment. It looks up what VMs belong to that VM, then creates a row for each VM - in each row are all widgets with the appropriate VM id. \nThis way we can create new environments, and dashing doesn't need to know about them (other than the job creating the new symlink automatically), and the template doesn't even need to know what widgets are present for a given VM, so it can report information that's only appropriate to itself.\nWe then deploy with puppet a script to each VM that in turn updates the widgets for the given VM.\nUltimately, QA builds a new set of VMs and within minutes there's a living dashboard for all of the systems in there, all without our intervention.\nHundreds of dashboards and thousands of widgets, and it works fantastically. Sure there's a hack here and there, but as we discover better ways, we can implement them pretty easily - all of those widgets and dashboards are ultimately a result of only three files, all reasonably small in size for the work they do for us.\n. ",
    "hennr": "Phew, that was quick!\n. ",
    "rahulsom": "In the config.ru\nLocate the section that says \nruby\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\n  # ...\nend\nAdd default_dashboard to it.\nruby\nconfigure do\n  set :auth_token, 'YOUR_AUTH_TOKEN'\n  set :default_dashboard, 'sampletv'\n  # ...\nend\n. ",
    "fw42": ":+1: Thanks Oren.\n. ",
    "nii236": "Did exactly the same thing today, and it started working.\nI'll head over to SO if it happens again.\n. @b1nary, yeah not sure what causes it. If it comes up again and is repeatable I'll try and document it properly here.\n. ",
    "b1nary": "interestingly enough i run into the same issue, so i removed the project and generated a new one what just worked. \n. ",
    "ryanbreed": "ran into this and it seems to be a dependency conflict. I fixed by clearing out vendored gems, updating the bundle, and ensuring dashing-1.3.4 was the version being used. Somehow one of my gems that had thor .18.X locked was causing dashing-1.3.2 to be installed.\n. ",
    "tokudan": "For firefox the solution is to set the value of network.http.max-persistent-connections-per-server higher in about:config.\n. ",
    "unlok": "I added to config.ru set about it:\nruby\nconfigure do\n  set :history_file, File.expand_path('../data/dashboard/history.yml')\nend\n``` ruby\nputs settings.history_file # -> history.yml\nif File.exists?(settings.history_file)\n  set history: YAML.load_file(settings.history_file)\nelse\n  set history: {}\nend\n```\nbut saving occurs right.\n. /cc @pushmatrix @davefp @pseudomuto \n. @tylermauthe \nYes we set occurs on line 32, but on line 39 we immediately read by default path history.yml, but not from config ../data/dashboard/history.yml.\nAnd the result is that write to file occurs by ../data/dashboard/history.ym path but reading by ./history.yml path. \nIn my opinion this is bug.\nI fixed this in fork, but i had split config.ru file into two - boot.ru and config.rb.\nhttps://github.com/unlok/dashing/commit/441f989cef6a66cfa0184bf9e86463c926498dc7\nconfig.rb contains only the config section:\nruby\nconfigure do\n  set :history_file, File.expand_path('../data/dashboard/history.yml')\nend\nboot.ru contains all the rest.\n\u0421an you offer more correct approach?\n. ",
    "gwincr11": "+1\n. ",
    "r0n22": "You do not have a javascript runtime installed.  So you would be wanting to install nodejs or alternative to fix this.\nsudo apt-get install nodejs\n. Duplicate of #498.\n. what I had to use was <% content_for :title do %>Page Title<% end %> for it to work\n. @and7ey Yes,  you will have to modify the layout.erb.\n. ",
    "tbaror": "thanks works\n. ",
    "JaiAslam": "So I figured out the issue was simply that I didn't have Node.JS installed so that's why my widgets weren't displaying at all. Now they are displaying and I'm no longer getting the invalid API key error.\n. ",
    "BillyBarbaro": "That's a good concern @pushmatrix.  Do you have any thoughts on how we could solve that?  I've done a little reading on the Fullscreen API, and it appears it can only be triggered by \"user interaction task source.\"  Which means by a click, keypress, or other user action.\nWhile Chrome does have a presentation view, I prefer to use either Firefox or Safari, neither of which have a native presentation mode (although I know there are Firefox plugins available, but it would be more convenient if the feature were just within the framework).  I thought @tylermauthe's widget idea was intriguing, but that would violate the Fullscreen API Standard.\nI'll give some more thought to how it could work on a raspberry pi.  Any chance someone could point me toward some code that demonstrates how it would be run on a pi?  I'm not quite familiar with it.  It seems like there's enough interest to at least get the code up though.  When I get the chance in the next day or two, I'll go ahead and fork the repo and push up my changes.\n. I've been using the widget for a while now.  Seems to work fine for me.  Thanks for the help!  You saved me a little bit of work.  I'll go ahead and close the issue.\n. ",
    "ceinmart": "Hi Push , \nNot work... :(\nI do someting wrong ? \nIs there a \"verbose\" mode ? \nAt first time I run the \"bundle\" I see the warning about not run it with root , but it don't give me chance to give up and install the gems... perhaps this could be a problem ?\n```\nroot@jdivm04:/dados/acesso_restrito/dashboard/Shopify-dashing-5a0bdd9/bin\nls -l\ntotal 4\n-rwxr-xr-x 1 root root 282 Jul 10 15:14 dashing\ndrwxr-x--- 1 root root 166 Jul 23 15:06 vulca1\nroot@jdivm04:/dados/acesso_restrito/dashboard/Shopify-dashing-5a0bdd9/bin\nbundle\n/usr/lib64/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/vendor/thor/shell/basic.rb:355: warning: Insecure world writable dir /dados in PATH, mode 040777\nDon't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on this machine.\nResolving dependencies...\nUsing rake 10.1.1\nUsing backports 3.6.5\nUsing coffee-script-source 1.9.1.1\nUsing execjs 2.0.2\nUsing coffee-script 2.2.0\nUsing daemons 1.2.3\nUsing rack 1.5.5\nUsing thread_safe 0.3.5\nUsing tzinfo 1.2.2\nUsing rufus-scheduler 2.0.24\nUsing sass 3.2.19\nUsing rack-protection 1.5.3\nUsing tilt 1.4.1\nUsing sinatra 1.4.6\nUsing multi_json 1.11.2\nUsing rack-test 0.6.3\nUsing sinatra-contrib 1.4.6\nUsing hike 1.2.3\nUsing sprockets 2.10.1\nUsing eventmachine 1.0.7\nUsing thin 1.6.3\nUsing thor 0.19.1\nUsing dashing 1.3.4 from source at .\nUsing docile 1.1.5\nUsing fakeweb 1.3.0\nUsing haml 4.0.6\nUsing metaclass 0.0.4\nUsing minitest 5.2.3\nUsing mocha 0.14.0\nUsing simplecov-html 0.8.0\nUsing simplecov 0.8.2\nUsing bundler 1.8.4\nBundle complete! 7 Gemfile dependencies, 32 gems now installed.\nUse bundle show [gemname] to see where a bundled gem is installed.\nroot@jdivm04:/dados/acesso_restrito/dashboard/Shopify-dashing-5a0bdd9\nbundle exec dashing start\n/usr/lib64/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/shared_helpers.rb:83: warning: Insecure world writable dir /dados in PATH, mode 040777\n/usr/lib64/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/shared_helpers.rb:83: warning: Insecure world writable dir /dados in PATH, mode 040777\n/usr/lib64/ruby/gems/2.1.0/gems/bundler-1.8.4/lib/bundler/shared_helpers.rb:83: warning: Insecure world writable dir /dados in PATH, mode 040777\nbundler: command not found: thin\nroot@jdivm04:/dados/acesso_restrito/dashboard/Shopify-dashing-5a0bdd9\nbundle show thin\n/usr/lib64/ruby/gems/2.1.0/gems/thin-1.6.3\n```\n. ",
    "lfcaldeira": "encountered the exact same problem. Tried the options above to no avail.. ",
    "JermilaPaulDhas": "You can use a service script for dashing. Link as follows:\nhttps://gist.github.com/gregology/5313326\nAnd the script should be in the /etc/init.d/ folder\nAnd you can issue a 'service dashing start|stop|restart' from any directory.\nIs this what you need?\n. Have your index.html within the dashboards directory.\nAnd in the config.ru file, set the parameter :default_dashboard to 'index'.\nAnd restart dashing. And it should render the index.html page when you hit http:///\nAnd if you want to render dashboards, you can do a http:///\nIs this the behaviour what you are looking for?\n. ",
    "OliPassey": "c:\\Ruby22-x64\\foe>dashing start\nC:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/thin/backends/base.rb:103: warning: epoll is not supported on this platform\nC:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/backports-3.6.6/lib/backports/std_lib.rb:9:in require': cannot load such file -- gibbon (LoadError)\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/backports-3.6.6/lib/backports/std_lib.rb:9:inrequire_with_backports'\n        from c:/Ruby22-x64/foe/jobs/mailchimp.rb:1:in <top (required)>'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/backports-3.6.6/lib/backports/std_lib.rb:9:inrequire'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/backports-3.6.6/lib/backports/std_lib.rb:9:in require_with_backports'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/app.rb:157:inblock in require_glob'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/app.rb:156:in each'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/app.rb:156:inrequire_glob'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing/app.rb:167:in <top (required)>'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing.rb:3:inrequire'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/dashing-1.3.4/lib/dashing.rb:3:in <top (required)>'\n        from config.ru:1:inrequire'\n        from config.ru:1:in block in <main>'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/rack-1.5.5/lib/rack/builder.rb:55:ininstance_eval'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/rack-1.5.5/lib/rack/builder.rb:55:in initialize'\n        from config.ru:1:innew'\n        from config.ru:1:in <main>'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:33:ineval'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/rack/adapter/loader.rb:33:in load'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:182:inload_rackup_config'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/thin/controllers/controller.rb:72:in start'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/thin/runner.rb:200:inrun_command'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/lib/thin/runner.rb:156:in run!'\n        from C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/thin-1.6.3/bin/thin:6:in'\n        from C:/Ruby22-x64/bin/thin:23:in load'\n        from C:/Ruby22-x64/bin/thin:23:in'\nThis is the current error im getting on load after installing gibbon. \nVery confused :(\n. ",
    "justinmartin": "That doesn't seem to fix it.  Now the input.meter color is a light blue, which I don't have set anywhere. The background still isn't changing as well.\n\n. OK. I'll do that.\nWhat is the data-bgcolor for? I'm new to using data attributes.\n. ",
    "blaffoy": "Thanks for the quick feedback!\nIt's a shame, but I think this problem means that Dashing just won't work for me. It was a great tool for prototyping a dashboard really quickly (especially when I have almost no frontend skills).\n. ",
    "andrewho83": "I too was having slow load times with the built in server hosted on Heroku.  I was curious and ran the logs for a while and saw the memory rose as a symptom.  The bandaid solution for fixing the crash was to schedule a daily restart - but this wasn't ideal.  \nDo your jobs have a leak?  IE infinite addition to an array of results ? \n. ",
    "agassner": "+1 for the memory leak issue.\nRunning dashing in a docker container with limited memory has been quite a challenge.\nAfter a quick investigation it seems that rufus scheduler could possibly be the reason - keeping objects referenced and not allowing them to be GC'd\n. @pushmatrix 512MB\n. Box(server) is crashing.\nBrowsers are in multiple screens(separate machines) showing different dashboards and all working fine.\n. ",
    "robacarp": "hey @pushmatrix, you said you're running dashing on puma back at Shopify. I spent some time reading through the puma-related issue chatter and don't see a certain path forward (some people report success, while others don't). What method are you using to launch with puma instead of thin?\n. @MartynKeigher thanks, i'll have a look\n. ",
    "mal": "+1 for server leaks\nI've had to limit the server to 1 gig of memory, it now crashes every hour or so, but previously it was taking out the entire machine it's on! ;(\n. ",
    "davidhrbac": "+1 for the memory leak issue.\n. Sorry, it was dotenv-rails gem causing the issue. I should use just dotenv to not have the rails dependencies built.. ",
    "VAdamec": "What about to use multiple tabs and something like Firefox tab rotator or key shortcuts to walk through multiple dashboards ?\n. ",
    "edent": "Exactly the same issue. Have updated to the latest dashing but still get this error on deploy. Anyone know how to solve it?\n. I ended up uninstalling ruby, reinstalling, upgrading everything and starting afresh. Not a very satisfying answer, I know.\n. ",
    "jschnare": "I tracked this issue down to Ubuntu 14.04.  The ruby-thor package includes a patched version of thor which reports itself as 0.18.1.20140116.  After that they went with 0.19.1-2.\nThat means that current versions of dashing (1.3.7) and dashing-contrib (0.2.4) have incompatible dependency constraints on Thor, unless you happen to be running on that particular platform (at least with the latest bundler).\ndashing:\n- thor > 0.18.1\nubuntu:\n- thor = 0.18.1.20140116\ndashing-contrib:\n- thor ~> 0.18.1\n. ",
    "rmangino": "Thank you @pushmatrix !\n. ",
    "surfi2000": "I'm having the same issue. I'm also using hotness with this. The background colour changes based on the new value but the number displayed remains the same\n. ",
    "gffuentes": "mmk so figured this one out. Its because there are a lot of filepaths that need to be updated to make dashing run when being racked up from outside the root path. So i updated the following paths in config.ru before the application gets racked up\nsettings.root\nsettings.public_folder\nsettings.views\nset :sprockets, Sprockets::Environment.new(root = your new root)\nall paths in sprockets.paths\nI also had to require all files in /jobs and /lib.\nAdditionally, i wrapped the dashing application (Sinatra::Application) in an additional class to make it easier to run in the new config.ru.\nI left the dashing config.ru in the same inner directory, however changed it to config.rb. In the outside directory's config.ru, i required that config.rb, used \"map\" for dashboard routes, and all other required config.ru things.\nso my last config .ru looked like this\n```\nrequire './app1.rb'\nmap \"/\" do\n  run App1\nend\nrequire './dashing-dashboard/config.rb'\nmap \"/dashboard\" do\n  run DashingDashboard\nend\n```\n. ",
    "BassieZ": "Hi Martyn,\nWhat a surprise to get an answer from you here. Thanks for the quick reply!\nSo, now I know your familiar with Labtech too, this can help to get this done.\nMy Query is created to get a health value for one particular customer:\nSELECT IFNULL(ROUND((SUM(healthscore)/COUNT(_))_10),0) as 'total' FROM plugin_sap_latesthealthresults\nSo as you can see, the output is a number, not a bunch of rows. Problem is in your example, the job require a bunch of rows and will count them (current_lollipops = results.count)\nSo what i need to reach is the output of this query translated to \"lollipops\".\nDoes it makes any sense?\nBas\n. Hi Martyn,\nLabTech is a great tool for spreading virusses in a managed and controlled way ;-)\nHowever, the above solution doesn't work. The query in my case returns a value of 93. However, it shows \"1\" in the meter widget. Also tried to use results.echt instead of object.each but that returns a \"[object]\" value in the widget so no good at all.\nGot any other ideas?\nBas\n. Hi Martyn,\nIt was worth waiting for!! It works! Got a beautifull meter widget now. Thanks a million\nBas\n. ",
    "abhin123": "I want to push numeric data from a file to my dashboard.\nI am using the following .rb file as job for pushing the data\nSCHEDULER.every '30s' do\nvar = File.open(\"/dashing/abhi/sample.txt\", \"r\")\nvar.each_line do |line|\n    puts line\nsend_event('polarion', { value: var })\nend\nend\nbut the data is not being displayed in dashboard. THe content of /dashing/abhi/sample.txt is a number.\ncat /dashing/abhi/sample.txt\n54\n. ",
    "ArielCabib": "That solved it. Thanks.\n. ",
    "kovacshuni": "+1\n. ",
    "ravakm": "I found the issue , following syntax works\ncurl -d '{ \"auth_token\":\"YOUR_AUTH_TOKEN\", \"points\": [{ \"x\":\"'\"$T\"'\",\"y\": \"'\"$count\"'\" }] \n                           }' \\http://192.168.46.12:3030/widgets/convergence\n. ",
    "Ostfriese26802": "I think I could resolve the problem.\nI put in the following lines  into the scss file\n```&.blinking {\n        animation: blink 1s linear infinite;\n        animation-iteration-count: 2;\n}\n@keyframes blink {\n        50% { opacity : 0.0; }\n}```\nAnd in the coffee file\nonData: (data) ->\n    node = $(@node)\n    node.addClass(\"blinking\")\n. I could resolve the problem on an easy way.\nIn the job I compare the new and the old data with the help of an hashcode.\nWhen the hashcode is not the same, I put the value \"blink\" in the send_event function.\nthe coffee file looks like:\n```\nif data.blink\n        node = $(@node)\n        node.addClass(\"blinking\")\n        setTimeout ( =>\n                    node.removeClass(\"blinking\")\n        ), 5000\n``````\n. Perhaps the problem is, that you have downloaded an html file?\n. ",
    "machadolab": "Looks like maybe you didnt add the google visualizations library? I wrote a few google viz widgets. Here is my column chart one that you might be able to reference: https://gist.github.com/machadolab/e12f31bf7e6a602f3229\n. Moving PR to point to new repo\n. Thanks guys!\n. ",
    "chasbutt": "commented out everything in mydasb2/jobs/twitter.rb and I was able to get dashing to start. I had tried to not require twitter in the first place, but for some reason, that didn't work. In any case, it is running now without twitter.\n. ",
    "xitude": "I have the same issue, installed gulp.js but nothing changes, rebundled and re-served.\n. ",
    "bombastic1": "Yes, I confirm that even after patching (from #310) this is still an issue.\n. ",
    "mekliches": "still not working after more than a year. ",
    "K3yChain": "Sorry - typo :-/\n. ",
    "jules2689": "I'm using chart.js without issue in my project. (the minified version through some JS errors unrelated to dashing). Do you have the code in a repo?\n. ",
    "Tsynapse": "Martyn, \nSomehuman is correct in using Invoke-Request.  Here is an example of pulling total # of VMs from Virtual Center via PowerCli and posting to Dashing via Rest.\n`if ( !(Get-Module -Name VMware.VimAutomation.Core )) {\n \u201cC:\\Program Files (x86)\\VMware\\Infrastructure\\vSphere PowerCLI\\Scripts\\Initialize-PowerCLIEnvironment.ps1\u201d\n}\nfunction Postto-Dashing {\n<#\n.Synopsis\n   Post text to a Dashing Widget\n.DESCRIPTION\n   Long description\n.EXAMPLE\n   Postto-Dashing -uri \"http://255.255.255.255:3030/widgets/welcome\" -text \u201dNew message from Powershell\u201d -authToken \"Powershell\"\n.INPUTS\n   $uri,$text,$user\n.NOTES\n   All Inputs are Mandatory\n>\n[CmdletBinding()]Param\n(\n    # Incoming Webhook\n    [Parameter(Mandatory=$true\n    )]\n    $uri,\n    # Body of message\n    [Parameter(Mandatory=$true\n    )]\n    $text,\n    # Username to post as\n    [Parameter(Mandatory=$true\n    )]\n    $authToken\n )\n$Payload = @{auth_token=$authToken;current=$text}\nInvoke-RestMethod -Uri $uri -Method Post -ContentType 'application/json' -Body (ConvertTo-Json $Payload)\n\n}\nImport Credential\n$user = ''\n$File = ''\n$creds =New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, (Get-Content $File | ConvertTo-SecureString)\n$vcenters = ('')\n$vms = @()\nforeach ($vcenter in $vcenters) { \n    Connect-VIServer $vcenter -Credential $creds\n    $vms += Get-VM | Where-Object {$_.PowerState -eq \"PoweredOn\"}\n    Disconnect-VIServer -Confirm:$false\n    }\n$totalCPU = \n$authToken = 'YOUR_AUTH_TOKEN'\n$uri = ''\nPostto-Dashing -uri $uri -text $vms.Count.ToString() -authToken $authToken`\n. ",
    "DanielNTX": "For the Graph widget:\nhttps://github.com/Smashing/smashing/wiki/How-To:-Setup-a-Graph\n$DBURL = \"http://dashboardserver:3030/widgets/\"\n$metric=\"yourmetric\"\n$cpuArray = @{x=1980;y=1323},@{x=1981;y=53234},@{x=1982;y=2344}\n$jArray = ConvertTo-Json $cpuArray\n$body = '{ \"auth_token\": \"YOUR_AUTH_TOKEN\", \"points\": ' + $jArray + ' }'\nInvoke-RestMethod -UseBasicParsing $DBURL$metric -ContentType \"application/json\" -Method POST -Body $body\n. ",
    "Skillz0r": "Found it. On meter.html just add ' data-displayInput=\"false\" '.\n. ",
    "pdolinaj": "I figured it out! I had to create a new folder inside assets/jabascripts and assets/stylesheets.\nE.g.: /assets/stylesheets/my-dashboard/styles.css\nThen I just included this file inside the dashboard as: /assets/my-dashboard/styles.css\nSame works for JS.\n. ",
    "cashman04": "My chrome is using a proxy.  Finally found the answer here\n. ",
    "qbrossard": "It's correct, puma works fine on all ruby VMs. Thanks for mentioning the work already done in #427. I will integrate it. \nI think we should be able to solve the daemonizing issue mentioned in the comments to #427, maybe not for java but at least for MRI. Heroku have good setup instructions for puma (https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server) that might help too.\n. I integrated most of the work previously done to support puma. I also used pumactl for supporting daemon mode (-d) for backwards compatibility. There's still one small open point regarding the location of puma's pidfile (needed in daemon mode by pumactl to stop the server). Otherwise I think this would be ready. Can @tylermauthe or @pushmatrix have a look at this? \nNote that I also opened a separate PR (#683) for fixing the travis config.\n. Thanks for taking a look at this. \nRegarding windows support for forking: it's effectively not working, even on JRuby. The puma README has some info on this under https://github.com/puma/puma#platform-constraints. \nI also had a look at how rails configures the puma server, now that it's their default and it seems they generate a puma.rb config file under /config (it gets picked up automatically then). This might be a better long term solution as everything (port, pidfile, # threads) can then be configured in the file. \nI will also update the wiki with information on puma when this PR gets merged.\nYou'll be able to close PRs #609 and #427 when you merge this one as it supercedes them.\n. I missed the SSE related errors when I tested, sorry for that. Then it seems we are blocked by missing sinatra support here. :-(\nRegarding the default port, I will change it so it uses the same as before (9292 is the default puma port). I think the best way would be to use a config/puma.rb file that would be autodetected (as rails does now). Not sure if that can be made backwards compatible with the old -d command line option but I'll try...\n. Cool. \nI merged your PR (in my repo). I will update mine to setup puma similarly to rails, using the config/puma.rb configuration file as this will make server start / stop and general configuration easier. I'll check how to make it backwards compatible with the -d option but otherwise this should be quite easy. \nI'll try to do more testing of the whole too.\n. This memory usage problem looks strange. Make sure you use ruby 2.3.0, as there seem to be unverified memory problems with puma on older (2.2) rubies?\nI cleaned up the configuration to use the standard config/puma.rb config file, including handling of the -d arg to daemonize...\nI can also reproduce the SSE errors in the browser using a newly generated project and your latest commits. I see the same behavior, errors in the js console but application working fine.\n. It looks like JRuby actually checks synchronization on array access, cool. \nI think if you use a Mutex (JRuby supports them) for reading/writing to the client_events you should be good. \n. @tylermauthe Thanks a lot for taking the time to fix the threading issue. I'll squash my commits to make the history cleaner. This is looking really good now...\n. @tylermauthe I squashed all my commits together and left yours as they were. \n. I added a pull request for this: https://github.com/Shopify/dashing/pull/677\nI am not sure how to get travis to use jruby: their doc do not talk about the newer jruby 9.x series (2.x compatibility).\n. @tylermauthe, @pushmatrix This is a pretty simple one, can we get this merged?\n. ",
    "romainschneider": "I wake up the post, anyone can help me ?\n. ",
    "alpha-qu": "I am also facing this issue for shortenedNumber. Let me know if someone finds something useful. Thanks in advance :). ",
    "brijesh27": "thx working fine now\n. ",
    "Guildenstern": "as a quick workaround you can use the widget w/o the % unit\n. I hope someone will adopt this neat piece of FOSS. \nAre there any good alternatives for a self-hosted dashboard?\n. ",
    "nakulpathak3": "My bad, This is after I stopped the first instance and started tmux. I'll update the description\n. ",
    "mach327": "I had to solve this to play with dashing dashboards with greenscreen and dashkiosk.\nI don't know about the proper way, but you can edit your config.ru file to include \nset :protection, :except => :frame_options just before \nrun Sinatra::Application\n. ",
    "nzechmann": "mach327's solution worked for me:\nset :protection, :except => :frame_options. ",
    "pfm4974": "updating lock\n. ",
    "arunnaparna": ":+1: \n. ",
    "zorbash": "This seems like an accidental PR. Close it maybe?. ",
    "pebra": "<% content_for(:title) { \"Title page\" } %> sets the content of the <title></title> element of your Dashboard as far as I can see.\n. ",
    "cweagans": "Not really a support request. I know how I could implement support for this in my jobs - it would be fairly straightforward to do this on my own. I'm saying that it's a reasonably common need, and that having some generic, built-in way to do this inside of Dashing would be helpful, so this is therefore a feature request.\n. ",
    "alexandre-guillaume": "i have solve my probleme with this tuto http://3man.co.za/?p=6\nand particulary with this line : \n gem install bundler\n. ",
    "rogiervisser": "I closed it because I pinpointed the issue to values of null in the JSON.\n. ",
    "n3rdz": "i got it to work when i change the job file like this\nend\n  search_term = URI::encode('#todayilearned')\n    SCHEDULER.every '1m', :first_in => 0 do |job|\n        begin\n          tweets = twitter.search(\"#{search_term}\")\n          if tweets\n          tweets = tweets.map do |tweet|\n        { name: tweet.user.name, body: tweet.text, avatar: tweet.user.profile_image_url_https }\n      end\n      send_event('twitter_mentions', comments: tweets)\n    end\n  rescue Twitter::Error\n    puts \"\\e[33mFor the twitter widget to work, you need to put in your twitter API keys in the jobs/twitter.rb file.\\e[0m\"\n  end\nend\n. i uploaded all the related files\ni hope it helps\nhttps://drive.google.com/folderview?id=0B7w5-DRaKIS-djNqR2wxWlZsSDQ&usp=sharing\nps: i changed the dataview from comments to tweets\n. ",
    "moosemedia": "I have copied your code and it still isnt working for me\n. Awesome that worked! thanks\n. ",
    "chancesmith": "That message is static content. Just comment it out on dashboards/sample.erb line 24.\n. ",
    "casdr": "How is this related to dashing?\n. Thank you for creating this great piece of software. We're running Dashing at 8 displays and I've been working on building widgets for internal tools.\nI think we should set up an \"official\" fork which the current repo will redirect to. This way the Shopify team won't be bothered anymore but it will be still centralized.\n. ",
    "treesloth": "Figured it out.... Found a sample of the meter json, added the status information.  All good.\n. ",
    "brint": "\ud83d\ude22 We've used dashing for tons of dashboards over the years. Thanks for all the work you put in to make dashing a thing.\n. ",
    "micke2k": "So @tylermauthe, when are you forking and continuing development ? :)\nAlso thanks for all the work made so far by everyone!\n. Alright, i will keep a look out :+1: \n. ",
    "pmyjavec": "Devastating,\nThanks for everything thus far.\n. ",
    "jordan-thoms": "Thanks! I think we will be using this for a while yet regardless \ud83d\udc4d \n. ",
    "dragonai": "I had lots of fun with Dashing and very much enjoyed contributing a few widgets myself! Thanks for this awesome little framework. :)\n. ",
    "bscott": "@pushmatrix Thank you for such a awesome project!, have you tried transfering ownership to others as DataDog is a cool product, some folks can't justify the $ to move over to it.\n. ",
    "anatol": "Just found this great project. And also learned that it had been abandoned :(\npushmatrix@, could you hand off the project ownership to some other developer?\n. Agree that such a useful project should live and kept developing.\n@pushmatrix, could you please move dashing to a github organization and add a few current active contributors?\n. ",
    "labynocle": "I created first monitoring dashboards at Deezer with Dashing... Very sad to see this thread :(\nThanks for all @pushmatrix ! Dashing is a great project :)\n. ",
    "knowledgewarrior": "Used Dashing for over 2 years.  If there's enough interest, it should be continued to be maintained.\n. ",
    "krongk": "Dashing\u662f\u6211\u89c1\u8fc7\u7684\u6700\u7b80\u5355\u7684\u4eea\u8868\u76d8\u8bbe\u8ba1\uff0c\u975e\u5e38\u68d2\uff01\n. ",
    "jetrois": "Sad to see it go I didn't know thee well.\n. ",
    "VectreUK": "I've forked it and moved it over to an org. Don't know how useful it will be but here's the link. https://github.com/Dashing-io/dashing. Will be adding contributors soon, just hit me up with who I should be adding.\n. Hey, just wanted to say that I started the org as a way to move everything over to a new place so we could start again, in a sense, by moving away from Shopify. Only reason I haven't taken an active part is because I was planning on doing a little bug-hunting and fixing however work and school took over. Just a little update for y'all.\n. ",
    "fuzzy76": "Would you be willing to link to the new fork on the homepage and in the readme?\n. ",
    "mgifford": "@pushmatrix Seems that there's some critical mass behind https://github.com/Dashing-io/dashing\nCan you point references from http://dashing.io/ & https://github.com/Shopify/dashing to this new organization to help maintain this code base?\nIt seems that there are already 52 people contributing there (which is amazing) but all of the documentation still points to the discontinued code github project page. \nThanks @fuzzy76 @AlexMorasUK and of course the original team (was this entirely a Shopify project that was open-sourced?)! \nps. @pushmatrix looks like most of the developers are in Ottawa. Hopefully we meet in person at some point and I can buy you a beer for this neat project. \n. @webmaster128 It is sad to see a good project die. I think there are ways to revitalize it. \nThere's a much better chance of https://github.com/Dashing-io successfully carrying this forward than anyone else. At least at this time. \nPutting a link to https://github.com/Dashing-io would be a good first step. If there's momentum after an acknowledgement then perhaps you'd want to see switching the domain. \nI've got no idea how gem entries are managed. I'd hope that it wouldn't need a whole re-branding. I wouldn't expect Daniel Beauchamp to relinquish the domain unless this transition is successful.  However, eventually I think it would make sense. \nGiven that there's been no official acknowledgement of either fork, it's encouraging to see that there is any support behind it. Imagine how many folks will be interested if:\n1) the fork is acknowledged\n2) there is a call for developers to sign on to maintain the code\n. Whoops..  I missed that.. \n. ",
    "chrisdwheatley": "I've been working on something similar to Dashing for a while now and wanted to share my initial implementation and hopefully get some feedback.\nIt's called Radiate and you can see a demo at http://radiate.site.\nIt relies on an experimental CSS feature called Grid Layout right now so support is a little patchy but there are instructions on how to get up and running on the site and in the readme.\n. ",
    "jschulenklopper": "For the people visiting this issue (for example via a Google search on \"Dashing\"): the project lives on as \"Smashing\" at https://github.com/Smashing/smashing.. That would be a great change, @alexschwartz. I don't know where the repository for the website behind http://dashing.io/ is though, so don't know where to register a Pull Request.. @webmaster128, Smashing is linked, but only indirectly. Only when forking the project, the fork of https://github.com/dashing-io/dashing is 301-redirected to the Smashing repository... and \"Read up about it over here\" links to... this issue :-)\nI guess it is @alexschwartz's intention that the dashing.io page contains an explicit and comforting notification \"Good news: Dashing lives on as Smashing\", in addition to the implicit redirect that people discover when forking the project.. ",
    "alexschwartz": "Great to hear that \"Dashing\" is lives on as \"Smashing\".\nI wonder, could this be told on the dashing.io website?. ",
    "Jackuna": "You made a very awesome work together, Your Dashboards gives a cool feeling everyday when i see my big monitoring screen.\nHats off to your work.. ",
    "simofacc": "Hi,\nJust had a similar issue. In the .scss file you have .widget-list class name, and you have to change that according to the name of your new widget e.g. if your widget name (or folder) is site_users then the class name should be .widget-site-users in the scss file.\n. ",
    "aming": "See https://github.com/Shopify/dashing/issues/231 for the solution.\n. ",
    "Skeyelab": "try installing RVM first and using a newer version of ruby with a fresh gemset\n. ",
    "litwi1rm": "I was able to get it running without using RVM on CentOS with:\nsudo yum install ruby-devel\n. you need to remove the twitter.rb file from the jobs folder\n. What browser are you using? I.E. is not supported.\n. Looks like your using Internet explorer, try chrome or firefox. Dashing utilizes websockets which is not supported by internet explorer.\n. What command are you trying? Did you enter your auth token? You can find or change your auth code in config.ru file.\n. what environment are you trying to send the curl from?\n. if its windows try this instead:\ncurl -X POST  -H \"Content-Type: application/json\" -d \"{ \\\"auth_token\\\": \\\"YOUR_AUTH_TOKEN\\\", \\\"message\\\": \\\"Hey, Look what I can do!\\\",\\\"type\\\":\\\"alarm\\\" }\" http://localhost:3030/widgets/shoutbox\n. I'm not sure if ruby-develop is a valid package. It should be:\nyum install ruby-devel\n. ",
    "patchie": "For Ubuntu with the same problem, i used this command:\napt-get install ruby-dev\n. ",
    "gokaustubh": "I have raised this on Stack Overflow. \nClosing this one.\n. ",
    "shenbaga2016": "I check with Chrome as well and I am getting the same black screen with that content.\n. After installing Node.js this issue gets resolved.\n. ",
    "ric79": "```\n\nsudo yum install ruby-devel\nPackage ruby-devel-2.0.0.598-25.el7_1.x86_64 already installed and latest version\nNothing to do\n```\n\nIt can be something related to Ruby Version?\nruby 2.0.0p598 (2014-11-13) [x86_64-linux]\n. ```\n\ncurl -sSL https://rvm.io/mpapis.asc | gpg2 --import -\n\\curl -sSL https://get.rvm.io | bash -s stable\nrvm install ruby-2.2.1\nruby --version\n  ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-linux]\ngem install dashing\n```\n\nOK\n. ",
    "kvvadavi": "`sample.erb\n<% content_for :title do %>Storage Dashboard<% end %>\n\n\n<li data-row=\"1\" data-col=\"1\" data-sizex=\"1\" data-sizey=\"0.75\">\n  <div data-id=\"welcome\" data-view=\"Text\" data-title=\"Storage Monitoring\"</div>\n</li>\n\n<li data-row=\"2\" data-col=\"0\" data-sizex=\"0.5\" data-sizey=\"0.5\">\n  <div data-id=\"fases105c_cf\" data-view=\"Hotness\" data-title=\"FASES105C CF\" data-cool=\"2\" data-warm=\"1\"></div>\n\n  <li data-row=\"2\" data-col=\"2\" data-sizex=\"0.5\" data-sizey=\"0.5\">\n    <div data-id=\"fases105e_cf\" data-view=\"Hotness\" data-title=\"FASES105E CF\" data-cool=\"2\" data-warm=\"1\"></div>\n\n    <li data-row=\"2\" data-col=\"3\" data-sizex=\"0.5\" data-sizey=\"0.5\">\n      <div data-id=\"fases105c_cf\" data-view=\"Hotness\" data-title=\"FASES105C CF\" data-cool=\"2\" data-warm=\"1\"></div>\n\n      <li data-row=\"2\" data-col=\"4\" data-sizex=\"0.5\" data-sizey=\"0.5\">\n        <div data-id=\"fases105e_cf\" data-view=\"Hotness\" data-title=\"FASES105E CF\" data-cool=\"2\" data-warm=\"1\"></div>\n</li>\n\n\n\n`. ",
    "thefixxxer75": "sample.rb\n!/usr/bin/env ruby\nrequire 'roo'\nSCHEDULER.every '2s' do\nfile_path = \"/path/to/spreadsheet.xls\"\ndef fetch_spreadsheet_data(path)\n  s = Roo::Excel.new(path)\n  send_event('valuation',   { current: s.cell('B',49) })\nend\nmodule Handler\n  def file_modified\n    fetch_spreadsheet_data(path)\n  end\nend\nGemfile\nsource 'https://rubygems.org'\ngem 'smashing'\ngem 'nagiosharder', :git => 'https://github.com/railsmachine/nagiosharder.git'\nRemove this if you don't need a twitter widget.\ngem 'twitter', '>= 5.9.0'\n. extension is xls, done with LibreOffice Calc\n. thanks for your reply!!\nI've tried but here's results\nSyntaxError: /home/xxxxxx/xxxxxxxxx/jobs/sample.rb:8: syntax error, unexpected ( arg, expecting '}'\nsend_event('valuation', { current: s.cell ('B',49) })\n                                           ^\n/home/xxxxxx/xxxxxxxx/jobs/sample.rb:8: syntax error, unexpected ',', expecting ')'\nsend_event('valuation', { current: s.cell ('B',49) })\n                                               ^\n/home/xxxxxx/xxxxxxxx/jobs/sample.rb:16: syntax error, unexpected end-of-input, expecting keyword_end\n/var/lib/gems/2.3.0/gems/thin-1.6.4/lib/rack/adapter/loader.rb:33:in eval'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/lib/rack/adapter/loader.rb:33:inload'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/lib/thin/controllers/controller.rb:182:in load_rackup_config'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/lib/thin/controllers/controller.rb:72:instart'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/lib/thin/runner.rb:200:in run_command'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/lib/thin/runner.rb:156:inrun!'\n  /var/lib/gems/2.3.0/gems/thin-1.6.4/bin/thin:6:in <top (required)>'\n  /usr/local/bin/thin:23:inload'\n  /usr/local/bin/thin:23:in `'\nany idea about it? Syntax seems fine or am I wrong?\nthx in advance. same error here...I don't know where the problem is.\nI'm pointing to the right path of the xls file but seems that this sample.rb has something wrong. It's quite weird.... thanks sooooooooooooo much for your time. Now error is changed\nSmashing start but this log\nscheduler caught exception:\nundefined local variable or method path' for main:Object\nDid you mean?  patch\n/home/xxxxx/xxxxxxxxx/jobs/sample.rb:7:inblock in '\n/var/lib/gems/2.3.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:230:in trigger_block'\n/var/lib/gems/2.3.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/jobs.rb:204:inblock in trigger'\n/var/lib/gems/2.3.0/gems/rufus-scheduler-2.0.24/lib/rufus/sc/scheduler.rb:430:in `block in trigger_job'\n================================================================================\nMaybe refer to this one? \nfile_path = \"#{Dir.pwd}/THIS_IS_THE_PATH_LOCATION_TO_THE_XLS_FILE/YOUR_FILENAME.xls\"\n. my excel file is in /home/username/dashing/myfile.xls.\nIs it correct?. Thanks mate! I'm quite confident with folder structure. My only \"concern\" is that I've understand - reading a post - the the spreadsheet should be present in the dashboard/smashin \"root\" dir (so /home/xxxxx/smashing/). My fault :) I'll try and send u a feedback. Thanks so much. error persist. File moved as suggested.\nundefined local variable or method path' for main:Object Did you mean? patch /home/xxxxx/xxxxxxxxx/jobs/sample.rb:7:inblock in '. ",
    "cflinspach": "In application.coffee add items: \"none\" so your Batman.setImmediate -> looks like:\ndraggable:\nstop: Dashing.showGridsterInstructions\nstart: -> Dashing.currentWidgetPositions = Dashing.getWidgetPositions()\nitems: \"none\"\n94 has more info..",
    "qthatswho": "This worked for me to disable dragging, but not to enable text selection. Anyone else having an issue where the text in widgets cannot be selected (even though the I-bar cursor shows up)?. For anyone interested, I ended up adding the following to Batman.setImmediate ->, and it enabled text selection:\ngridster.data('gridster').disable().resize_disable(). ",
    "jamesontriplett": "Or is there a way to add a coffeescript thing to be the submit logic?. ",
    "Diluke": "You can set widgets in data-row and data-col in your dashboard file dashboards/*.erb, like it's used in sample.\n\n< li data-row=\"1\" data-col=\"2\" data-sizex=\"1\" data-sizey=\"1\" >\n\nThis widget will be put in first row, and second column\nRemember to remove script (Dashing.gridsterLayout) from your dashboard if you have any, it's overwriting positions on dashboard load.\nYou can change widget margins in assets/javascripts/application.coffee\nDashing.on 'ready', ->\n  Dashing.widget_margins ||= [5, 5]. Check this Dashing Workshop from Monitorama, Part about data binding at ~30min mark might solve your question.\nhttps://vimeo.com/95307499. ",
    "laurentTVB": "Okay, I finally found an answer. I've recreated the DOM structure of the List Widget in the coffeescript file using JQuery.. Yes, of course : \nMy list.coffee file (when I receive some data, I use JQuery to recreate the DOM and avoid the blinking): \n```\nclass Dashing.List extends Dashing.Widget\nready: ->\n    if @get('unordered')\n      $(@node).find('ol').remove()\n    else\n      $(@node).find('ul').remove()\nonData: (data) ->\n    console.log($(@node).find('ul.list-nostyle').find('li'))\n    $(@node).find('ul.list-nostyle').find('li').remove()\nfor elt in data.items\n    s = '<li>\n            <div data-bind-class=\"item.color\" class=\"' + elt.color + '\">\n                <span class=\"label\" data-bind=\"item.label\">' + elt.label + '</span>\n                <span class=\"value\" data-bind=\"item.value\">' + elt.value + '</span>\n            </div>\n        </li>'\n    $(s).appendTo($(@node).find('ul.list-nostyle'));\n\n```\nMy list.html file : \n```\n\n\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n```. ",
    "slowjoe007": "Hi Kalyan,\nmaybe I missed it, but where is the dynamic part of it?\nIf you specify a static ID in your .erb file, then you always will see the data for that ID, e.g. Team A in your example.\nWhat is your goal?\n\nA single widget showing the tasks of all teams, e.g. rotating (showing one team at a time)\nA dedicated widget for each team\nA widget on a universal dashboard that displays the tasks of a team based on some context information\n\n(1) and (2) are trivial. For (1) you can send the corresponding data by the server's background job on a schedule. For (2) you would have a dedicated widget ID for each widget and the job sends the corresponding data to the widget IDs.\nFor (3) you could work with a request parameter that dynamically sets the ID of the widget in the .erb file, e.g. data-id=\"tasklist_<%= params[:team] %>\". The background job would send data (send_event) to IDs it can generate from the data it read, e.g. targetWidgetID = \"tasklist_\" + $team.\nHope this helps,\nJohannes. ",
    "lepetitcreole": "Hi, I had the same issue. To solve it :\nsudo apt-get install ruby-dev. ",
    "alonsomaniaco": "Repository from that user seems to be deleted so this issue does not needed anymore.. ",
    "juhamust": "Thanks for the feedback. I surely can update the PR - assumed no one was interested merging it (as this is almost year old)\n. Yes, I'm pretty much fine with any additional change (while still holding the original idea of three items mentioned in PR). So go ahead, you have my blessing :+1: \n. "
}