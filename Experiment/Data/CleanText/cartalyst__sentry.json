{
    "bencorlett": "Thank you for this @spamoom \n. Hi @noherczeg,\nI'd just like to take this time to thank you for the pull request! There's nothing at all wrong with the way you've done it. In fact, separating it out into separate, smaller commits is ideal as it allows us to have a look through them :)\nI think we shall merge this in, I'll do this now.\nThanks again,\nBen\n. Thanks mate, merging now.\nThanks a lot :)\n. Thanks so much!\n. Hi @noherczeg,\nI've actually changed a number of things in the Sentry repo today and as a result the tests have changed. I've taken your suggestions in this pull request into consideration however I can no longer merge it due to the changes.\nThanks so much and looking forward to PDO drivers :)\n. Hi,\nThat's correct, @taylorotwell has been changing a lot of stuff over the last 18 hours regarding namespaces and classes and we're just in the process of catching up with him now.\nIt will be remedied in the next hour or so :)\nOn 12/01/2013, at 8:49 AM, Andrew Ryno notifications@github.com wrote:\n\nNot sure when it was updated, but the CookieJar class in Laravel is under Illuminate\\Cookie\\CookieJar instead of Illuminate\\CookieJar.\nFixes:\nCatchable Fatal Error: Argument 1 passed to Cartalyst\\Sentry\\Cookies\\IlluminateCookie::__construct() must be an instance of Illuminate\\CookieJar, instance of Illuminate\\Cookie\\CookieJar given, called in /vendor/cartalyst/sentry/src/Cartalyst/Sentry/SentryServiceProvider.php on line 77 and defined in /vendor/cartalyst/sentry/src/Cartalyst/Sentry/Cookies/IlluminateCookie.php line 54\nYou can merge this Pull Request by running\ngit pull https://github.com/andrewryno/sentry master\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/63\nCommit Summary\nUpdate namespace for Illuminate\\CookieJar to Illuminate\\Cookie\\Cookiejar.\nFile Changes\nM src/Cartalyst/Sentry/Cookies/IlluminateCookie.php (2)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/63.patch\nhttps://github.com/cartalyst/sentry/pull/63.diff\n. :) good stuff.\n\nI'm in the process as I write this of updating Sentry to be compatible :)\nOn 12/01/2013, at 9:18 AM, Andrew Ryno notifications@github.com wrote:\n\nNo worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Give it a whirl now by updating.\n\nOn 12/01/2013, at 9:18 AM, Andrew Ryno notifications@github.com wrote:\n\nNo worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey mate,\n\nI'm sorry I did not realise this was a pull request, I was replying to emails and I thought it was just an issue. Sorry I would have liked to have merged your contributions as we really appreciate it. \nThanks, Ben. \n. Hi @duellsy,\nThanking you - this is great :)\n. Hi @dbohn,\nThank you very much for this! Good stuff here. I'll check with @antonioribeiro in issue #60 to see if he's having issues after this.\nMuch appreciated,\n\nBen\n. Hi @natedog550,\n\nThanks as always!!\n. @natedog550 - I will let you know when I write tests for this and show you how I do it :)\n. Thanks mate,\nLooks like tests are failing because the other exception is expected first. I can make new tests for this. Ill merge it when I am at my computer to make the tests. Thank you,\nBen. \n. HI @JonoB,\nI just put the correct tests in for this. You're a legend, thanks for the patch!\n\nBen\n. This is great!! Thank you :)\n\nYou don't need to test the parent method because that is part\nOf Eloquent which has its own tests :)\nThanks, merging. \n. Hi @noherczeg,\nThanks heaps. I've merged it to feature/pdo-drivers on this repo but it doesn't recognise the pull request merged. I'm manually closing this now however if you checkout feature/pdo-drivers you'll see it.\nThanks as always :)\n. Stuff Travis, getting suck as per always.\nThanks heaps Dan as always :)\n. Haha, this is great. I didn't even realise this!\nThanks mate :)\n. Hi @bstrahija,\nThanks so much for your time with this, but we feel that foreign keys are an overkill for most people using Sentry. They add complexity to databases and while they are there for speed and data integrity we feel that we do not want to ship them with Sentry.\nI really appreciate your time though. What I'd suggest doing is having your own migration which looks something like this:\n``` php\npublic function up()\n{\n    \\Command::call('migrate', array('--package' => 'cartalyst/sentry'));\n\\Schema::table('users', function($table)\n{\n     // Add foreign keys\n});\n\n}\n```\n. Yep, can you put in a pull for that please :)\nSent from my iPhone\nPlease excuse my brevity\nOn 05/02/2013, at 6:54 PM, Boris Strahija notifications@github.com wrote:\n\nWhat about just making is ID fields unsigned? Would make it easier to create foreign keys later on.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks mate! :)\n. Awesome stuff! Can you do one thing though, where you've manually written the serialised data in the unit test can you put in the serialize() function instead. That way we aren't testing the result of PHP's serialising features but rather we're asking PHP to serialize. \n\nWill merge right away after this amendment :)\nThanks mate,\nBen\n. Legend!\n. Thanks for the feedback, yes we're pretty proud of it. Took a while to decide exactly how we'd engineer it but we're all happy with it here at @cartalyst :)\nThanks mate, love your contributions they're much appreciated!\n. Cheers @robclancy \n. Hi,\nI think I understand where you are going with this. Could you please add some unit tests it you're familiar with unit testing which shows some examples in action?\nThanks for your time :)\n. Just \"phpunit\", it will run all the tests including setting up the composer autoloading\nOn 15/03/2013, at 3:51 PM, aleemb notifications@github.com wrote:\n\nI wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n\u2014\nReply to this email directly or view it on GitHub.\n. And you do it from the root folder sentry is installed to. You must also run \"composer update\" before you do it\n\n\"cd path/to/sentry\"\n\"composer update\"\n\"phpunit\"\nThen add the other test into the EloquentUserTest. You'll see a bunch of other permissions tests in there\nOn 15/03/2013, at 3:51 PM, aleemb notifications@github.com wrote:\n\nI wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n\u2014\nReply to this email directly or view it on GitHub.\n. @aleemb I think we're good to go!.\n\nMerging.\n. Hi there,\nI'm not sure you've grasped the concept of dependency injection & facades, two patterns which are used in the context of Laravel 4. We don't use Facades in the context of Sentry at all. This PR would need to be completely refactored to make it work I'm afraid.\nAlso, unit tests need to be updated as the build is failing.\nYou can change the models used (as a config option) and do:\nphp\nprotected $table = 'my_users_table';\nIn each model you have sub-classed.\n. Thanks!\n. I told you I'd merge it fast. Regarding no data inserting, I'll need to look into that later today, I'll need to test Sentry.\nWe're also looking making a bunch of demo apps which you can download, showing usage of Sentry in various frameworks / with no framework :)\nOn 20/03/2013, at 9:50 AM, Steve Edson notifications@github.com wrote:\n\nWow that was fast :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah that should work. \n\nIll setup an app this morning and test it. \nSent from my iPhone\nPlease excuse my brevity\nOn 22/03/2013, at 6:47 AM, Steve Edson notifications@github.com wrote:\n\nUsing just sentry, no frameworks or anything else. This is my test script, showing the result: https://gist.github.com/SteveEdson/5216084.\nBut nothing shows up in my database\n\u2014\nReply to this email directly or view it on GitHub.\n. No, that's fine keep this one.\n\nIt all seems to work for me, I'm not sure where it's going wrong for you.\nCan you try updating Sentry and see if it fixes it? I made some changes yesterday.\nWe are in the process of preparing sample apps to show usage.\nAlso, consider our Arsenal - http://www.cartalyst.com/arsenal - subscribers get priority support with all of our products, both free and paid (subscriber only).\nSent from my iPad\nPlease excuse my brevity\nOn 23/03/2013, at 5:50 AM, Steve Edson notifications@github.com wrote:\n\nDid you manage to recreate my issue? Would love to be able to use Sentry\n\u2014\nReply to this email directly or view it on GitHub.\n. I think what he's saying Bruno Is he thought sentry would create the schema for him. \n\nHe's imported it now and it's fine. We can close the issue. However, we should open one on illuminate/database (laravel/framework) about Eloquent handling non existent database tables, if I can reproduce it. \nSent from my iPhone\nPlease excuse my brevity\nOn 25/03/2013, at 5:12 AM, Bruno Gaspar notifications@github.com wrote:\n\nWell you don't need to use the users table that we provide, but you will need to have the other tables if you want to use all the features.\nMaybe your table wasn't setup correctly?\nIf you want, you can post your SQL here and we'll try to debug it.\n\u2014\nReply to this email directly or view it on GitHub.\n. Cheers Ryan. Please align the equals signs as Bruno suggested and we'll merge it in\n. Hmm, not fully understanding why you would need this to build an interface for editing a super user's perms. \n\nYou can use getMergedPermissions() even on a super user. \nCould you provide more information please on how this helps you (code samples, etc)? IMO the whole idea of a super user is that they have access to everything, all the time. \nSent from my iPhone\nPlease excuse my brevity\nOn 28/03/2013, at 4:51 AM, Bruno Gaspar notifications@github.com wrote:\n\nHi,\nYeah, i'm seeing your point and like i said, i like the PR but i wasn't to sure of the usage of this.\nIm fine with this, it just needs some tweaks to not call the getMergedPermissions() everytime you call this method and some tests, but wait for @bencorlett opinion on this one!\nThanks again!\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. Legend!\n. Hi,\n\nThere's many other spots = signs are found I believe. Also, you will need to update unit tests to reflect this. \nI'm not sold on removing the = sign yet, i intentionally put it there though I don't use it in my apps. \nIll keep you updated on my thoughts \n. Yeah, probably...\nIll sleep on it :)\nThanks for contributing! It's really appreciated\nSent from my iPhone\nPlease excuse my brevity\nOn 10/04/2013, at 9:50 PM, Julien Moreau notifications@github.com wrote:\n\nThere's about 11 matches across 5 files.\nBut I think that you're probably right, maybe would it be easier for LMongo to add this behavior\n\u2014\nReply to this email directly or view it on GitHub.\n. Yep, thought about this, I am going to close this PR. Thanks though, and we look forward to hearing from you in the future!\n. Cheers DB\n. Thanks!\n. You know what, this isn't breaking anybody's app. I'm in.\n. Awesome!\n. Awesome\n. Good work!\n. Cool, we will have a discussion about this today... Tests need to be made and interfaces modified if its going to be merged in. I'll keep you updated \n\nSent from my iPad\nPlease excuse my brevity\nOn 07/06/2013, at 6:33 AM, Adam Jenkins notifications@github.com wrote:\n\nFrom what I understand this has been inquired about before, I propose a removeAllGroups() method be added to the User Model.\n```\n/*\n * Removed the user from all groups.\n *\n * @return bool\n /\npublic function removeAllGroups()\n{\n    foreach ($this->getGroups() as $group)\n    {\n        $this->removeGroup($group);\n    }\nreturn true;\n\n}\n```\nYou can merge this Pull Request by running\ngit pull https://github.com/adamcole83/sentry master\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/208\nCommit Summary\nAdded method to remove user from all groups\nFile Changes\nM src/Cartalyst/Sentry/Users/Eloquent/User.php (16)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/208.patch\nhttps://github.com/cartalyst/sentry/pull/208.diff\n. Hey @adamcole83, just giving you an update.\n\nI'm currently working on Sentry 3.0. We are focusing on simplicity, and we're stripping out a lot of methods which Sentry doesn't require, and are encouraging developers to use their own classes to do custom things :)\nThanks! \n. Hmm, it's not at all. That's another one that's failing. Thanks for that!\n. We actually have a plan for a refactor of throttling. The reason we added IP in is otherwise it exposes your site to a DDOS attack whereby anybody can suspend a login by attempting from any IP. \nThere is a couple of issues regarding this. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 15/06/2013, at 4:51 am, Robert Reinhard notifications@github.com wrote:\nIt currently creates a loop hole in logging in where a banned user can successfully login from another IP. Since the $throttle->check() call is what ACTUALLY verifies if a user is suspended or banned, lets let that class be responsible for dealing with IP addresses. The throttle provider should purely return throttle instances given a user's unique key.\nThis is what @max-online suggested in #159.\nYou can merge this Pull Request by running\ngit pull https://github.com/weotch/sentry patch-1\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/214\nCommit Summary\nRemoving ipAddress lookup option from throttle provider\nFile Changes\nM src/Cartalyst/Sentry/Sentry.php (2)\nM src/Cartalyst/Sentry/Throttling/Eloquent/Provider.php (18)\nM src/Cartalyst/Sentry/Throttling/ProviderInterface.php (6)\nM tests/SentryTest.php (8)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/214.patch\nhttps://github.com/cartalyst/sentry/pull/214.diff\n. Oh I like your first idea. Ill incorporate functionality for that. \n\nETA, not sure. We are prioritising our subscriber packages just now, so I can't give an accurate timeframe sorry. I don't call the shots, I develop what I'm told :P\nSent from my iPhone\nPlease excuse my brevity\n\nOn 15/06/2013, at 6:42 am, Robert Reinhard notifications@github.com wrote:\nI see, thanks for the quick reply. My particular use case is I don't care particularly about suspending people based on attempts, just having my manual bans enforced.\nAny ETA on when that new code will get rolled out?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey @weotch, I'm currently working on implementing a whole new throttling structure to fix all the oversights.\n\nThanks for your input and I'm taking it into account with the new version of Sentry that we're working on!\n. Hi,\nI think your best shot here is running your own fork of Sentry possibly. I think this is coupling Sentry to LDAP, which I think is a niche market.\nAlso, we definitely cannot update our read me to say SentryLdap is a fork of Cartalyst Sentry library. Added new features like ldap authentication.SentryLdap :P \nI'd be interested in hearing @brunogaspar and @drsii's thoughts on this.\n. Just regarding throttling, in Sentry 3 we\u2019ve completely overhauled how it works.\nIn Sentry 3, there\u2019s configurable thresholds for global throttling (DDoS), IP throttling (DDoS or some little shit trying to hack multiple accounts) and account throttling. It\u2019s pretty awesome.\nOn 18 Feb 2014, at 8:02 am, Dustin Graham notifications@github.com wrote:\n\n@anndro I am using ldap to authenticate. I was trying to figure out how to check the throttle before checking the user. I looked at your implementation and I see you forcefully disable the throttle.\nI also like the idea of creating the user if no user is found, but I'm trying to think about how to keep throttling around as well. Could be a bit tricky. I guess this also exposes an issue with the master Sentry branch -- throttling may not be used if the user does not exist. I don't think there's a solution for this, just something to be aware of. So throttling protects against brute forcing a password, but not from guessing usernames.\nIn any case, I did want to say that I do use ldap. You're not the only one. I enjoyed reviewing how you implemented this, and I may do something similar.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. @jtgrimes, working on implementing a whole new version of Sentry, with awesome eager loading etc..\n\nI'm stripping out a lot of the bloat that's currently sitting in Sentry. Once it is in place, feel free to add your own methods.\nThanks though, really :)\n. Yeah, not a fan. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 20 Jul 2013, at 10:49 am, \"J.T. Grimes\" notifications@github.com wrote:\nI think Sentry::user()->findById() is confusing, since people would probably expect a user() function to return a User object. The way I implemented this was just to have the Sentry class call its providers directly instead of sending them back to the user. For example:\nclass Sentry {\n...\n   public function findUserById($id)\n   {\n       return $this->userProvider->findById($id);\n   } \n...\n}\n\u2014\nReply to this email directly or view it on GitHub.\n. I should clarify, I like this PR by @jtgrimes, not a fan of $sentry->user() to return a provider.\n. Thanks!\n. Perfect!\n. Mate! This PR looks AWESOME!\n\nIf you could just take a stab at the little things which hit my OCD ill be more than happy to merge it in!\n. You're the best! We <3 community contributions!\n. Unfortunately, it's not as simple as that :(\nThe Config class is tied to Laravel and that only represents a portion of Sentry's users. It needs to be set by the SentryServiceProvider in a similar way to how the login column is.\n. If you'd like to modify the PR and have a stab at that, it would be awesome!\n. @cryode, that\u2019s how to do it, inject the model name. submit a PR and it\u2019ll happen faster :)\nOn 30 Oct 2013, at 6:13 am, cryode notifications@github.com wrote:\n\nJust ran into this issue myself as well. Overwriting the relationship methods fixes it no problem, but I agree that it should inherit the model specified in the config.\nIt seems that we could use a similar convention as defining the model in Eloquent\\Provider::setModel() -- set a property with the default value, and a setter method, which would then be called via the service provider.\nIf that seems like an ideal way to go, I'd be happy to provide a pull request.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\n\nJust closing this out now as it will be fixed in an upcoming release of Sentry :) Thanks :)\n. Could you use \"4.*\"? That's the advantage of ~?\nSent from my iPhone\nPlease excuse my brevity\n\nOn 24 Sep 2013, at 7:56 pm, mbeech notifications@github.com wrote:\nRequire illuminate ~4 packages to allow use with versions > 4.0\nYou can merge this Pull Request by running\ngit pull https://github.com/mbeech/sentry patch-1\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/280\nCommit Summary\nUpdate composer.json\nFile Changes\nM composer.json (6)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/280.patch\nhttps://github.com/cartalyst/sentry/pull/280.diff\n. Cool!\n. I'll take a review on this before we merge it in when I am on my MacBook. \n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Oct 2013, at 5:16 pm, Weeblewonder notifications@github.com wrote:\nFixed me being an idiot and a naughty boy :(\nToo used to coding in my own bubble\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey,\n\nI'd suggest that you extend Sentry's models and put these methods in your own models.\nI'm working on a new version of Sentry which will focus on speed and simplicity, including minimal code and encouraging people to write their own packages for extended functionality or just overriding models with their required functionality.\nThanks for the pull request though, but for now, I'd suggest override models. If you get stuck, hit us up!\n. This is coming! See #317.\n. I thank you greatly for your pull request! Unfortunately, I am going to say \"no\" to this. I don't think we should ever encourage using md5 as a hashing strategy. Maybe in the 80's, when it wasn't super easy to hack, but not now. \nYou can of course use your own hasher, in a couple of ways. \n(1) drop it in an autoload folder and call Cartalyst\\Sentry\\Users\\Eloquent\\Ussr::setHasher(new MyMd5Hasher);\n(2) do the above, but package it up and push it to packagist :)\nSent from my iPhone\nPlease excuse my brevity\n\nOn 24 Oct 2013, at 12:45 am, Koss notifications@github.com wrote:\nMany systems use md5 encrypting passwords.\nFor example, you need old project move to the new (Laravel + Sentry)\nthere is a need to move your database and with it the users table.\nIf users table have many records (> 3k) very difficult to change their password with a new method of hashing passwords.\nWith md5 encryption password in Sentry, we will not do this.\n\u2014\nReply to this email directly or view it on GitHub.\n. @KossShtukert Heads up, in Sentry 3.0, we've made our hashing strategies configurable. You will be able to use any strategy that you would like - see #317 for the PR for 3.0 :)\n. I agree. Never use it. It could be handy if you\u2019re migrating from an old system\nOn 19 Nov 2013, at 11:48 am, Graham Campbell notifications@github.com wrote:\n@KossShtukert Please don't use MD5 hashing for passwords though...\n\u2014\nReply to this email directly or view it on GitHub.\n. This looks great! Thanks!\n. This is cool. I love it!\n. I'm very sorry I missed this come through 12 days ago!\n. Nice! Two things:\n1. I'd call it findByUser() not findByUserModel(). \n2. Unless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about. \n\nSo, if we can add this method as well, not to replace, the original method, I'm all for it. \nYou can refactor the original method to utilise this new method, but Apis can not change :)\n. I could take a look at it this morning at work. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Nov 2013, at 3:46 am, Bruno Gaspar notifications@github.com wrote:\nSure no worries and we appreciate the effort =)\n@bencorlett Looks good to merge? \n\u2014\nReply to this email directly or view it on GitHub.\n. Oh, i must have read the diff wrong, i thought you removed it. \n\nWell, with that method rename, I'm for it \nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Nov 2013, at 7:56 am, Marc van der Meulen notifications@github.com wrote:\nI'd call it findByUser() not findByUserModel().\nI guess that would be a better name for it.\nUnless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about.\nI did not remove the function, i merely changed it so it calls the new function.\nIn the Sentry->check() function i changed which function it calls but everyone is still free to call the findUserById method . Its result stays the same.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. Hey, Not sure what's happening here but it appears your merge hasn't happened cleanly.\n\nAre you able to remove your repo, do a fresh fork and copy in your changes, to concatenate the 30-ish commits? Just trying to keep the repo history clean if possible.\n. Hey,\nI'll actually cherry-pick your commits into the working branch and merge your PR in the command line :)\n. Honestly, 3.0 would be called 2.1 if I wasn't strictly following Semver versioniong.\nThe database will stay identical, it's just the API may not be backwards compatible with reference to User methods (I'm stripping a bunch methods not used by Sentry).\nI'm also rewriting the throttling and that's not backwards compatible. However, if your extent of Sentry usage is just methods through the Sentry class (i.e., Sentry::authenticate(), Sentry::register() [essentially what's documented] etc), then the upgrade path should be completely benign. If not, I'll document here how to upgrade and of course we'll have new docs for 3.0 :)\n. @philsturgeon will be happy about multiple login columns and custom hashing strategies, two features he's been nagging me about for quite a while, in particular through pyrocms/pyrocms#2884.\n. Sounds awesome! I like that.\nJust fork sentry, work on the \u201cDevelop\u201d branch and send through a PR. If you could do tests that would be great (I haven\u2019t done tests yet, but it will help explain in code how your permissions model works).\nIf you send through a PR to develop, once I merge it, it will sit in this PR :)\nOn 19 Nov 2013, at 6:56 am, Marc van der Meulen notifications@github.com wrote:\n\nTo continue on the #287 discussion.\nI can make a driver called 'StrictPermissions' and have the implementation i explained in there!\nBasically you first check the user for the permission! if the user's permission is set (true or false) there is no need to check the user groups for the permission.\nIf the permission is not set on the user you loop through the groups and when a true is found you return that after the loop or when a false is found you return that straight away.\nI'll try and make a pull request tomorrow if needed\n\u2014\nReply to this email directly or view it on GitHub.\n. @marcvdm, I've restructured permissions to make creating new drivers very easy. I've also prepared for your StrictPermissions implementation. The great thing about how I've structured it is, you only need to override one method from BasePermissions, which is preparePermissions(). That will return a flat array of permissions, using whatever logic it wants. This is where you'll build the array of group permissions, and then remove the group permissions who are present in the user object :) Just return that array, and everything will work :) Cool, eh?\n. @marcvdm the idea is that this object is populated once, whenever permissions are requested. At this stage, the object is initialised with all user and group permissions (which will load fast through our eloquent drivers as we'll use full eager loading and query caching where possible).\n\nYou need to iterate through and give back a flat array of permissions. So, the way I'd do it is, loop through all user permissions and put them in the flat array. Then, loop through groups. Only add the group if the permission doesn't exist in the user permissions (regardless of it's value).\nI'd stash what you have done and pull in the latest stuff I pushed, you'll see the method there to override :)\n. You're making it hard on yourself. You just need to pull in and modify this.\nIt would only require something like this for the logic you're after. I'd like you to put in the PR though if you're comfortable :)\n. The other way would be something like this. This way, group permissions are still an opt-in system where any opt-out (false) value will deny the permission.\nOtherwise, the order of the groups matters, because only the first group with the permission has the value which is required.\nFood for thought...\n. Release date? No.\nOnce Laravel 4.1's API stops changing daily, we will add support to Sentry 2 (which involves just adjusting cookies and sessions).\n. A PR for 4.0 and 4.1 support is always welcome for Sentry 2 :)\n. We could make 2 session classes. Look at the Laravel version and return a different class. \nOr, remove the type check and do an if() statement in the constructor to check the Jar is a valid instance. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 22 Nov 2013, at 5:59 pm, John Maguire notifications@github.com wrote:\nSure. Looking deeper into it, it seems like if switching to the 4.1 cookie \nsyntax is not backwards compatible with 4.0 which I actually expect it will \nbe, there is a variable defined within Laravel to check the version of the \nframework running. \nOn Nov 22, 2013 1:20 AM, \"Bruno Gaspar\" notifications@github.com wrote: \n\nWell, yeah the way you mentioned on IRC on how you would tackle the issue \nis a bit hacky for me, that's why i said it would most likely not be \nmerged, but to be honest i care less on how it is done, as long as it is \nfixed and works with both versions i'm \"ok\" with it. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29051250 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi guys,\n\n\nProud to present the first alpha of Sentry 3. It's tested in a real app, I haven't pushed all the unit tests yet.\nPlease download the demo app and:\n1. Install dependencies through composer\n2. Configure database and migrate with --package=cartalyst/sentry option.\n3. Visit /register on the virtual host you setup.\nBy default, we are using throttling and activation checks. To enable SwiftIdentity, simply register on their site, then publish Sentry's config and follow the instructions there (be sure to configure the swift component and also enable it as a checkpoint).\nDocs coming soon, but would love to get the public involved in the early testing of Sentry 3!\n. Demo coming within a day or so as well of the whole setup, with SwiftIdentity enabled.\n. @marcvdm  - yes - you will need to configure your database, we can't do that for you\n. Sure, that's because we're loading (in that specific app) things from the database -- normally you'd start your app without sentry installed and configured.\n. A stock Laravel app with a dependency of cartalyst/sentry (or any* other package) shouldn't touch the database, only if something is hooked on each request to hit it.\n. Yep, so there's 3 ways to go about it... Haven't really decided on a \"recommended\" way, because I don't care much for conventions :p \nFirst:\nphp\n$user = Sentry::findByCredentials(['login' => 'foo@bar.com']);\nSentry::getUserProvider()->update($user, ['password' => 'haha', 'first_name' => 'Quz']);\nSentry::update($user, ['password' => 'haha', 'first_name' => 'Quz']); // New\nSecond:\nphp\nSentry::getUserProvider()->update(14, ['password' => 'haha', 'first_name' => 'Quz']);\nSentry::update(14, ['password' => 'haha', 'first_name' => 'Quz']); // New\nThird:\nphp\n$user = User::find(14);\n$user->password = Hash::make('haha');\n$user->save();\nI kinda like the ability to use Sentry's wrappers to hash passwords, but I also like the fact that you don't HAVE to use Sentry to do anything, except authenticating.\n. @brunogaspar see 96a25f8453b0078b1ace01e831b476803c6f48dd\n. Comes down to finishing unit tests and documenting changes really. \nAt this point though Tom we're hard set on getting platform 2 RC3 out the door :)\nFor a demo, see the Cartalyst/sentry-3-demo repo. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 15 Dec 2013, at 7:46 am, Tom Schlick notifications@github.com wrote:\nWhats the timeline on this? It looks from the checklist and the builds passing that you've taken care of what you set out to do...\n\u2014\nReply to this email directly or view it on GitHub.\n. NOOOOO. Sentry doesn\u2019t need a method, it\u2019s not going in. Use your own implementations \u2014 User::all();. Use Eloquent directly. \n\nOn 6 Jan 2014, at 7:31 am, Bruno Gaspar notifications@github.com wrote:\n\nAdded.\n\u2014\nReply to this email directly or view it on GitHub.\n. To expand, Bruno, let's remove that method.\n\nOverride the model (In Laravel. php artisan config:publish cartalyst/sentry). Rename the model class to a class of your own (you can implement it all or just extend Cartalyst\\Sentry\\Users\\EloquentUser).\nThen, build fancy queries directly with your Eloquent model, or another interface you design that your model implements (if you want to switch Eloquent out in the future).\nIf Sentry doesn't need a method, don't add it. It's up to the implementor to implement.\n. Schweeet :) I just want to be really strict on the extra code we add to Sentry if it\u2019s not required, you know?\nOn 6 Jan 2014, at 7:41 am, Bruno Gaspar notifications@github.com wrote:\n\nRemoved\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, 2 mins\n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 20 Jan 2014, at 9:07 am, Graham Campbell notifications@github.com wrote:\nCould we have a v3.0.0-alpha5 tag with the latest fixes in?\n\u2014\nReply to this email directly or view it on GitHub.\n. Just making a couple of tweaks first\nOn 20 Jan 2014, at 9:07 am, Graham Campbell notifications@github.com wrote:\nCould we have a v3.0.0-alpha5 tag with the latest fixes in?\n\u2014\nReply to this email directly or view it on GitHub.\n. Started adding some events. Feel fee to PR some more that you see appropriate. Keep each set of hooks in a separate PR so we can evaluate each one, just don't want to have like 1000 hooks all of a sudden :)\n. When what? When does the moon rise? :)\n. It is pretty stable, doing the change log is kind of on the back of our priority list right now. There\u2019s a lot of people using the 3.0 version, anybody is free to submit patches for documentation and all that jazz, @drsii may even have a little something special to give away :)\n\nOn 25 Jan 2014, at 6:38 pm, Aleksander Kalnoy notifications@github.com wrote:\n\nThe release! When it's going to be stable? The changelog? Api changes?\n\u2014\nReply to this email directly or view it on GitHub.\n. @mapb1990, it just comes down to having the resources to fully document it. We'd love community contributions!\n\nOnce we're documented it, we're pretty much ready to go :)\n. There's a reason for why it is. I'll try remember to update you tomorrow morning when I'm on my MacBook. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 23 Mar 2014, at 9:19 pm, Varghese Jacob notifications@github.com wrote:\nis there anyway to throw the ThrottlingException after the number of invalid logins has passed the threshold number? Right now, the ThrottlingException is thrown only after the invalid logins has passed the threshold number AND the user attempts a valid login, otherwise it will just return invalid username/password no matter how many number of invalid logins have been attempted.\n\u2014\nReply to this email directly or view it on GitHub.\n. That\u2019s separate, we\u2019re already immune from that bug that Laravel had :)\nOn 16 Apr 2014, at 11:20 am, Dwight Watson notifications@github.com wrote:\nWill any change be required here for the remember_token column that comes in Laravel 4.1.26, or is that completely separate from the token used by Sentry?\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. We're in a bit of a pickle here. Laravel 4.1 requires that we attack it this way.\n\nThanks for the PR, but I don't think we can accept this in. See #325 for more :)\n. There is no $this->jar->get() method. It's purely a Facade for the request now.\n. What you said Bruno. We have already had an issue on this haven't we? If so, I'd suggest the author checks existing issues first. If not, my apologies. \nWe are not requiring a package to run migrations in a framework we optionally have support for. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 5 Jan 2014, at 3:21 am, Bruno Gaspar notifications@github.com wrote:\nHi and thanks.\nI agree with you, but this is one of those situations, because, Sentry is not only used on Laravel, therefore we shouldn't require it but either suggest it, like how Laravel has on their composer.json, but i'm ok on having it directly on the require as it solves the issue for lazy people, what's your input @bencorlett?\n\u2014\nReply to this email directly or view it on GitHub.\n. Wait, not what you said. \n. We are not requiring it. I'm not bloating the shit out if our deps (the reason Laravel has removed it, there's like 14 packages which have to be downloaded) just to support migrations in Laravel. \n\nPersonally, my opinion is, Laravel has messed with a lot of third party packages this way, it's their problem to address or educate people on. \n. Ah okay. But, we are not adding it. Heck, we don't require illuminate/database which all of our models use. In fact, I need to check, but I don't even think we need illuminate/events. And if I do some magic we could potentially remove illuminate/support, though I'm not too stressed about it being there. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 5 Jan 2014, at 7:08 am, Bruno Gaspar notifications@github.com wrote:\n@bencorlett was on Sentry Social, because it requires, Sentry.\n\u2014\nReply to this email directly or view it on GitHub.\n. Passing false is not valid though?\n. Passing \"true\" is a backwards compatible thing to activate a user. Passing a closure is a callback. Passing \"false\" is an invalid argument. \n. Just wondering, is there a use-case for passing \"false\"? If so, could be open to having this merged however we wouldn't need that check anymore so the whole exception could be removed...\n. Valid use-case!\n. Awesome!\n. Thanks!\n. What\u2019s the potential issues?\n\nOn 21 Jan 2014, at 10:39 am, Graham Campbell notifications@github.com wrote:\n\nUse && rather than and and || rather than or to avoid some potential issues.\nYou can merge this Pull Request by running\ngit pull https://github.com/GrahamCampbell/sentry logical-operator-fixes\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/350\nCommit Summary\nLogical operator fixes\nFile Changes\nM src/Cartalyst/Sentry/Checkpoints/ThrottleCheckpoint.php (2)\nM src/Cartalyst/Sentry/Laravel/SentryServiceProvider.php (6)\nM src/Cartalyst/Sentry/Native/SentryBootstrapper.php (4)\nM src/Cartalyst/Sentry/Permissions/BasePermissions.php (4)\nM src/Cartalyst/Sentry/Sentry.php (8)\nM src/Cartalyst/Sentry/Sessions/NativeSession.php (2)\nM src/Cartalyst/Sentry/Users/BaseUserRepository.php (2)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/350.patch\nhttps://github.com/cartalyst/sentry/pull/350.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. Of course they do, very aware of that :)\n\nBut I\u2019ve written everything to work, there\u2019s only potential issues if people start putting \u201c=\u201c without brackets\nOn 21 Jan 2014, at 10:55 am, Graham Campbell notifications@github.com wrote:\n\nSee http://php.net/manual/en/language.operators.precedence.php.\n&& and || have a higher precedence over and and or.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks, I'd like to review this when I'm on my laptop before merging :)\n. Also, all other drivers need an implementation\n\nSent from my iPad\nPlease excuse my brevity\n\nOn 14 Feb 2014, at 6:38 am, Bruno Gaspar notifications@github.com wrote:\nYeah, fix tests and fix code standards as well.\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome!\n. Thanks!\n. I feel that would be a lost cause because why would Sentry 3 be maintained if we released just a refractored Sentry 4. But, having said that I can see the merit in your ideas\n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 3 Mar 2014, at 9:16 am, Paul Dixon notifications@github.com wrote:\nI understand the desire to move to 5.4 and a cleaner code base (traits are awesome) but if sentry 3.0 works with 5.3, can we not have a 3.0 release with 5.3, then a 4.0 release (immediately after if needed) for 5.4? That way the upgrade path will be a little easier and people stuck on 5.3 wont miss out on the new release.\n\u2014\nReply to this email directly or view it on GitHub.\n. So I've given careful consideration to all the opinions here, and moving forward, I believe PHP 5.4 is the way to go.\n\nPHP 5.5 is an overkill as it severely limits the market and there's no features that are going to aid development and simplify the codebase (like those available in PHP 5.4).\nSentry 2.* will be maintained for the foreseeable future with bug fixes and community-supplied features, so don't fret that you're going to just lose support!\n. Love this!\n. Thanks mate, I'll pull this down soon\n. Thanks!\n. Thank you for this @spamoom \n. Hi @noherczeg,\nI'd just like to take this time to thank you for the pull request! There's nothing at all wrong with the way you've done it. In fact, separating it out into separate, smaller commits is ideal as it allows us to have a look through them :)\nI think we shall merge this in, I'll do this now.\nThanks again,\nBen\n. Thanks mate, merging now.\nThanks a lot :)\n. Thanks so much!\n. Hi @noherczeg,\nI've actually changed a number of things in the Sentry repo today and as a result the tests have changed. I've taken your suggestions in this pull request into consideration however I can no longer merge it due to the changes.\nThanks so much and looking forward to PDO drivers :)\n. Hi,\nThat's correct, @taylorotwell has been changing a lot of stuff over the last 18 hours regarding namespaces and classes and we're just in the process of catching up with him now.\nIt will be remedied in the next hour or so :)\nOn 12/01/2013, at 8:49 AM, Andrew Ryno notifications@github.com wrote:\n\nNot sure when it was updated, but the CookieJar class in Laravel is under Illuminate\\Cookie\\CookieJar instead of Illuminate\\CookieJar.\nFixes:\nCatchable Fatal Error: Argument 1 passed to Cartalyst\\Sentry\\Cookies\\IlluminateCookie::__construct() must be an instance of Illuminate\\CookieJar, instance of Illuminate\\Cookie\\CookieJar given, called in /vendor/cartalyst/sentry/src/Cartalyst/Sentry/SentryServiceProvider.php on line 77 and defined in /vendor/cartalyst/sentry/src/Cartalyst/Sentry/Cookies/IlluminateCookie.php line 54\nYou can merge this Pull Request by running\ngit pull https://github.com/andrewryno/sentry master\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/63\nCommit Summary\nUpdate namespace for Illuminate\\CookieJar to Illuminate\\Cookie\\Cookiejar.\nFile Changes\nM src/Cartalyst/Sentry/Cookies/IlluminateCookie.php (2)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/63.patch\nhttps://github.com/cartalyst/sentry/pull/63.diff\n. :) good stuff.\n\nI'm in the process as I write this of updating Sentry to be compatible :)\nOn 12/01/2013, at 9:18 AM, Andrew Ryno notifications@github.com wrote:\n\nNo worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Give it a whirl now by updating.\n\nOn 12/01/2013, at 9:18 AM, Andrew Ryno notifications@github.com wrote:\n\nNo worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey mate,\n\nI'm sorry I did not realise this was a pull request, I was replying to emails and I thought it was just an issue. Sorry I would have liked to have merged your contributions as we really appreciate it. \nThanks, Ben. \n. Hi @duellsy,\nThanking you - this is great :)\n. Hi @dbohn,\nThank you very much for this! Good stuff here. I'll check with @antonioribeiro in issue #60 to see if he's having issues after this.\nMuch appreciated,\n\nBen\n. Hi @natedog550,\n\nThanks as always!!\n. @natedog550 - I will let you know when I write tests for this and show you how I do it :)\n. Thanks mate,\nLooks like tests are failing because the other exception is expected first. I can make new tests for this. Ill merge it when I am at my computer to make the tests. Thank you,\nBen. \n. HI @JonoB,\nI just put the correct tests in for this. You're a legend, thanks for the patch!\n\nBen\n. This is great!! Thank you :)\n\nYou don't need to test the parent method because that is part\nOf Eloquent which has its own tests :)\nThanks, merging. \n. Hi @noherczeg,\nThanks heaps. I've merged it to feature/pdo-drivers on this repo but it doesn't recognise the pull request merged. I'm manually closing this now however if you checkout feature/pdo-drivers you'll see it.\nThanks as always :)\n. Stuff Travis, getting suck as per always.\nThanks heaps Dan as always :)\n. Haha, this is great. I didn't even realise this!\nThanks mate :)\n. Hi @bstrahija,\nThanks so much for your time with this, but we feel that foreign keys are an overkill for most people using Sentry. They add complexity to databases and while they are there for speed and data integrity we feel that we do not want to ship them with Sentry.\nI really appreciate your time though. What I'd suggest doing is having your own migration which looks something like this:\n``` php\npublic function up()\n{\n    \\Command::call('migrate', array('--package' => 'cartalyst/sentry'));\n\\Schema::table('users', function($table)\n{\n     // Add foreign keys\n});\n\n}\n```\n. Yep, can you put in a pull for that please :)\nSent from my iPhone\nPlease excuse my brevity\nOn 05/02/2013, at 6:54 PM, Boris Strahija notifications@github.com wrote:\n\nWhat about just making is ID fields unsigned? Would make it easier to create foreign keys later on.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks mate! :)\n. Awesome stuff! Can you do one thing though, where you've manually written the serialised data in the unit test can you put in the serialize() function instead. That way we aren't testing the result of PHP's serialising features but rather we're asking PHP to serialize. \n\nWill merge right away after this amendment :)\nThanks mate,\nBen\n. Legend!\n. Thanks for the feedback, yes we're pretty proud of it. Took a while to decide exactly how we'd engineer it but we're all happy with it here at @cartalyst :)\nThanks mate, love your contributions they're much appreciated!\n. Cheers @robclancy \n. Hi,\nI think I understand where you are going with this. Could you please add some unit tests it you're familiar with unit testing which shows some examples in action?\nThanks for your time :)\n. Just \"phpunit\", it will run all the tests including setting up the composer autoloading\nOn 15/03/2013, at 3:51 PM, aleemb notifications@github.com wrote:\n\nI wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n\u2014\nReply to this email directly or view it on GitHub.\n. And you do it from the root folder sentry is installed to. You must also run \"composer update\" before you do it\n\n\"cd path/to/sentry\"\n\"composer update\"\n\"phpunit\"\nThen add the other test into the EloquentUserTest. You'll see a bunch of other permissions tests in there\nOn 15/03/2013, at 3:51 PM, aleemb notifications@github.com wrote:\n\nI wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n\u2014\nReply to this email directly or view it on GitHub.\n. @aleemb I think we're good to go!.\n\nMerging.\n. Hi there,\nI'm not sure you've grasped the concept of dependency injection & facades, two patterns which are used in the context of Laravel 4. We don't use Facades in the context of Sentry at all. This PR would need to be completely refactored to make it work I'm afraid.\nAlso, unit tests need to be updated as the build is failing.\nYou can change the models used (as a config option) and do:\nphp\nprotected $table = 'my_users_table';\nIn each model you have sub-classed.\n. Thanks!\n. I told you I'd merge it fast. Regarding no data inserting, I'll need to look into that later today, I'll need to test Sentry.\nWe're also looking making a bunch of demo apps which you can download, showing usage of Sentry in various frameworks / with no framework :)\nOn 20/03/2013, at 9:50 AM, Steve Edson notifications@github.com wrote:\n\nWow that was fast :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah that should work. \n\nIll setup an app this morning and test it. \nSent from my iPhone\nPlease excuse my brevity\nOn 22/03/2013, at 6:47 AM, Steve Edson notifications@github.com wrote:\n\nUsing just sentry, no frameworks or anything else. This is my test script, showing the result: https://gist.github.com/SteveEdson/5216084.\nBut nothing shows up in my database\n\u2014\nReply to this email directly or view it on GitHub.\n. No, that's fine keep this one.\n\nIt all seems to work for me, I'm not sure where it's going wrong for you.\nCan you try updating Sentry and see if it fixes it? I made some changes yesterday.\nWe are in the process of preparing sample apps to show usage.\nAlso, consider our Arsenal - http://www.cartalyst.com/arsenal - subscribers get priority support with all of our products, both free and paid (subscriber only).\nSent from my iPad\nPlease excuse my brevity\nOn 23/03/2013, at 5:50 AM, Steve Edson notifications@github.com wrote:\n\nDid you manage to recreate my issue? Would love to be able to use Sentry\n\u2014\nReply to this email directly or view it on GitHub.\n. I think what he's saying Bruno Is he thought sentry would create the schema for him. \n\nHe's imported it now and it's fine. We can close the issue. However, we should open one on illuminate/database (laravel/framework) about Eloquent handling non existent database tables, if I can reproduce it. \nSent from my iPhone\nPlease excuse my brevity\nOn 25/03/2013, at 5:12 AM, Bruno Gaspar notifications@github.com wrote:\n\nWell you don't need to use the users table that we provide, but you will need to have the other tables if you want to use all the features.\nMaybe your table wasn't setup correctly?\nIf you want, you can post your SQL here and we'll try to debug it.\n\u2014\nReply to this email directly or view it on GitHub.\n. Cheers Ryan. Please align the equals signs as Bruno suggested and we'll merge it in\n. Hmm, not fully understanding why you would need this to build an interface for editing a super user's perms. \n\nYou can use getMergedPermissions() even on a super user. \nCould you provide more information please on how this helps you (code samples, etc)? IMO the whole idea of a super user is that they have access to everything, all the time. \nSent from my iPhone\nPlease excuse my brevity\nOn 28/03/2013, at 4:51 AM, Bruno Gaspar notifications@github.com wrote:\n\nHi,\nYeah, i'm seeing your point and like i said, i like the PR but i wasn't to sure of the usage of this.\nIm fine with this, it just needs some tweaks to not call the getMergedPermissions() everytime you call this method and some tests, but wait for @bencorlett opinion on this one!\nThanks again!\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. Legend!\n. Hi,\n\nThere's many other spots = signs are found I believe. Also, you will need to update unit tests to reflect this. \nI'm not sold on removing the = sign yet, i intentionally put it there though I don't use it in my apps. \nIll keep you updated on my thoughts \n. Yeah, probably...\nIll sleep on it :)\nThanks for contributing! It's really appreciated\nSent from my iPhone\nPlease excuse my brevity\nOn 10/04/2013, at 9:50 PM, Julien Moreau notifications@github.com wrote:\n\nThere's about 11 matches across 5 files.\nBut I think that you're probably right, maybe would it be easier for LMongo to add this behavior\n\u2014\nReply to this email directly or view it on GitHub.\n. Yep, thought about this, I am going to close this PR. Thanks though, and we look forward to hearing from you in the future!\n. Cheers DB\n. Thanks!\n. You know what, this isn't breaking anybody's app. I'm in.\n. Awesome!\n. Awesome\n. Good work!\n. Cool, we will have a discussion about this today... Tests need to be made and interfaces modified if its going to be merged in. I'll keep you updated \n\nSent from my iPad\nPlease excuse my brevity\nOn 07/06/2013, at 6:33 AM, Adam Jenkins notifications@github.com wrote:\n\nFrom what I understand this has been inquired about before, I propose a removeAllGroups() method be added to the User Model.\n```\n/*\n * Removed the user from all groups.\n *\n * @return bool\n /\npublic function removeAllGroups()\n{\n    foreach ($this->getGroups() as $group)\n    {\n        $this->removeGroup($group);\n    }\nreturn true;\n\n}\n```\nYou can merge this Pull Request by running\ngit pull https://github.com/adamcole83/sentry master\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/208\nCommit Summary\nAdded method to remove user from all groups\nFile Changes\nM src/Cartalyst/Sentry/Users/Eloquent/User.php (16)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/208.patch\nhttps://github.com/cartalyst/sentry/pull/208.diff\n. Hey @adamcole83, just giving you an update.\n\nI'm currently working on Sentry 3.0. We are focusing on simplicity, and we're stripping out a lot of methods which Sentry doesn't require, and are encouraging developers to use their own classes to do custom things :)\nThanks! \n. Hmm, it's not at all. That's another one that's failing. Thanks for that!\n. We actually have a plan for a refactor of throttling. The reason we added IP in is otherwise it exposes your site to a DDOS attack whereby anybody can suspend a login by attempting from any IP. \nThere is a couple of issues regarding this. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 15/06/2013, at 4:51 am, Robert Reinhard notifications@github.com wrote:\nIt currently creates a loop hole in logging in where a banned user can successfully login from another IP. Since the $throttle->check() call is what ACTUALLY verifies if a user is suspended or banned, lets let that class be responsible for dealing with IP addresses. The throttle provider should purely return throttle instances given a user's unique key.\nThis is what @max-online suggested in #159.\nYou can merge this Pull Request by running\ngit pull https://github.com/weotch/sentry patch-1\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/214\nCommit Summary\nRemoving ipAddress lookup option from throttle provider\nFile Changes\nM src/Cartalyst/Sentry/Sentry.php (2)\nM src/Cartalyst/Sentry/Throttling/Eloquent/Provider.php (18)\nM src/Cartalyst/Sentry/Throttling/ProviderInterface.php (6)\nM tests/SentryTest.php (8)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/214.patch\nhttps://github.com/cartalyst/sentry/pull/214.diff\n. Oh I like your first idea. Ill incorporate functionality for that. \n\nETA, not sure. We are prioritising our subscriber packages just now, so I can't give an accurate timeframe sorry. I don't call the shots, I develop what I'm told :P\nSent from my iPhone\nPlease excuse my brevity\n\nOn 15/06/2013, at 6:42 am, Robert Reinhard notifications@github.com wrote:\nI see, thanks for the quick reply. My particular use case is I don't care particularly about suspending people based on attempts, just having my manual bans enforced.\nAny ETA on when that new code will get rolled out?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey @weotch, I'm currently working on implementing a whole new throttling structure to fix all the oversights.\n\nThanks for your input and I'm taking it into account with the new version of Sentry that we're working on!\n. Hi,\nI think your best shot here is running your own fork of Sentry possibly. I think this is coupling Sentry to LDAP, which I think is a niche market.\nAlso, we definitely cannot update our read me to say SentryLdap is a fork of Cartalyst Sentry library. Added new features like ldap authentication.SentryLdap :P \nI'd be interested in hearing @brunogaspar and @drsii's thoughts on this.\n. Just regarding throttling, in Sentry 3 we\u2019ve completely overhauled how it works.\nIn Sentry 3, there\u2019s configurable thresholds for global throttling (DDoS), IP throttling (DDoS or some little shit trying to hack multiple accounts) and account throttling. It\u2019s pretty awesome.\nOn 18 Feb 2014, at 8:02 am, Dustin Graham notifications@github.com wrote:\n\n@anndro I am using ldap to authenticate. I was trying to figure out how to check the throttle before checking the user. I looked at your implementation and I see you forcefully disable the throttle.\nI also like the idea of creating the user if no user is found, but I'm trying to think about how to keep throttling around as well. Could be a bit tricky. I guess this also exposes an issue with the master Sentry branch -- throttling may not be used if the user does not exist. I don't think there's a solution for this, just something to be aware of. So throttling protects against brute forcing a password, but not from guessing usernames.\nIn any case, I did want to say that I do use ldap. You're not the only one. I enjoyed reviewing how you implemented this, and I may do something similar.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. @jtgrimes, working on implementing a whole new version of Sentry, with awesome eager loading etc..\n\nI'm stripping out a lot of the bloat that's currently sitting in Sentry. Once it is in place, feel free to add your own methods.\nThanks though, really :)\n. Yeah, not a fan. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 20 Jul 2013, at 10:49 am, \"J.T. Grimes\" notifications@github.com wrote:\nI think Sentry::user()->findById() is confusing, since people would probably expect a user() function to return a User object. The way I implemented this was just to have the Sentry class call its providers directly instead of sending them back to the user. For example:\nclass Sentry {\n...\n   public function findUserById($id)\n   {\n       return $this->userProvider->findById($id);\n   } \n...\n}\n\u2014\nReply to this email directly or view it on GitHub.\n. I should clarify, I like this PR by @jtgrimes, not a fan of $sentry->user() to return a provider.\n. Thanks!\n. Perfect!\n. Mate! This PR looks AWESOME!\n\nIf you could just take a stab at the little things which hit my OCD ill be more than happy to merge it in!\n. You're the best! We <3 community contributions!\n. Unfortunately, it's not as simple as that :(\nThe Config class is tied to Laravel and that only represents a portion of Sentry's users. It needs to be set by the SentryServiceProvider in a similar way to how the login column is.\n. If you'd like to modify the PR and have a stab at that, it would be awesome!\n. @cryode, that\u2019s how to do it, inject the model name. submit a PR and it\u2019ll happen faster :)\nOn 30 Oct 2013, at 6:13 am, cryode notifications@github.com wrote:\n\nJust ran into this issue myself as well. Overwriting the relationship methods fixes it no problem, but I agree that it should inherit the model specified in the config.\nIt seems that we could use a similar convention as defining the model in Eloquent\\Provider::setModel() -- set a property with the default value, and a setter method, which would then be called via the service provider.\nIf that seems like an ideal way to go, I'd be happy to provide a pull request.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\n\nJust closing this out now as it will be fixed in an upcoming release of Sentry :) Thanks :)\n. Could you use \"4.*\"? That's the advantage of ~?\nSent from my iPhone\nPlease excuse my brevity\n\nOn 24 Sep 2013, at 7:56 pm, mbeech notifications@github.com wrote:\nRequire illuminate ~4 packages to allow use with versions > 4.0\nYou can merge this Pull Request by running\ngit pull https://github.com/mbeech/sentry patch-1\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/280\nCommit Summary\nUpdate composer.json\nFile Changes\nM composer.json (6)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/280.patch\nhttps://github.com/cartalyst/sentry/pull/280.diff\n. Cool!\n. I'll take a review on this before we merge it in when I am on my MacBook. \n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Oct 2013, at 5:16 pm, Weeblewonder notifications@github.com wrote:\nFixed me being an idiot and a naughty boy :(\nToo used to coding in my own bubble\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey,\n\nI'd suggest that you extend Sentry's models and put these methods in your own models.\nI'm working on a new version of Sentry which will focus on speed and simplicity, including minimal code and encouraging people to write their own packages for extended functionality or just overriding models with their required functionality.\nThanks for the pull request though, but for now, I'd suggest override models. If you get stuck, hit us up!\n. This is coming! See #317.\n. I thank you greatly for your pull request! Unfortunately, I am going to say \"no\" to this. I don't think we should ever encourage using md5 as a hashing strategy. Maybe in the 80's, when it wasn't super easy to hack, but not now. \nYou can of course use your own hasher, in a couple of ways. \n(1) drop it in an autoload folder and call Cartalyst\\Sentry\\Users\\Eloquent\\Ussr::setHasher(new MyMd5Hasher);\n(2) do the above, but package it up and push it to packagist :)\nSent from my iPhone\nPlease excuse my brevity\n\nOn 24 Oct 2013, at 12:45 am, Koss notifications@github.com wrote:\nMany systems use md5 encrypting passwords.\nFor example, you need old project move to the new (Laravel + Sentry)\nthere is a need to move your database and with it the users table.\nIf users table have many records (> 3k) very difficult to change their password with a new method of hashing passwords.\nWith md5 encryption password in Sentry, we will not do this.\n\u2014\nReply to this email directly or view it on GitHub.\n. @KossShtukert Heads up, in Sentry 3.0, we've made our hashing strategies configurable. You will be able to use any strategy that you would like - see #317 for the PR for 3.0 :)\n. I agree. Never use it. It could be handy if you\u2019re migrating from an old system\nOn 19 Nov 2013, at 11:48 am, Graham Campbell notifications@github.com wrote:\n@KossShtukert Please don't use MD5 hashing for passwords though...\n\u2014\nReply to this email directly or view it on GitHub.\n. This looks great! Thanks!\n. This is cool. I love it!\n. I'm very sorry I missed this come through 12 days ago!\n. Nice! Two things:\n1. I'd call it findByUser() not findByUserModel(). \n2. Unless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about. \n\nSo, if we can add this method as well, not to replace, the original method, I'm all for it. \nYou can refactor the original method to utilise this new method, but Apis can not change :)\n. I could take a look at it this morning at work. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Nov 2013, at 3:46 am, Bruno Gaspar notifications@github.com wrote:\nSure no worries and we appreciate the effort =)\n@bencorlett Looks good to merge? \n\u2014\nReply to this email directly or view it on GitHub.\n. Oh, i must have read the diff wrong, i thought you removed it. \n\nWell, with that method rename, I'm for it \nSent from my iPhone\nPlease excuse my brevity\n\nOn 12 Nov 2013, at 7:56 am, Marc van der Meulen notifications@github.com wrote:\nI'd call it findByUser() not findByUserModel().\nI guess that would be a better name for it.\nUnless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about.\nI did not remove the function, i merely changed it so it calls the new function.\nIn the Sentry->check() function i changed which function it calls but everyone is still free to call the findUserById method . Its result stays the same.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. Hey, Not sure what's happening here but it appears your merge hasn't happened cleanly.\n\nAre you able to remove your repo, do a fresh fork and copy in your changes, to concatenate the 30-ish commits? Just trying to keep the repo history clean if possible.\n. Hey,\nI'll actually cherry-pick your commits into the working branch and merge your PR in the command line :)\n. Honestly, 3.0 would be called 2.1 if I wasn't strictly following Semver versioniong.\nThe database will stay identical, it's just the API may not be backwards compatible with reference to User methods (I'm stripping a bunch methods not used by Sentry).\nI'm also rewriting the throttling and that's not backwards compatible. However, if your extent of Sentry usage is just methods through the Sentry class (i.e., Sentry::authenticate(), Sentry::register() [essentially what's documented] etc), then the upgrade path should be completely benign. If not, I'll document here how to upgrade and of course we'll have new docs for 3.0 :)\n. @philsturgeon will be happy about multiple login columns and custom hashing strategies, two features he's been nagging me about for quite a while, in particular through pyrocms/pyrocms#2884.\n. Sounds awesome! I like that.\nJust fork sentry, work on the \u201cDevelop\u201d branch and send through a PR. If you could do tests that would be great (I haven\u2019t done tests yet, but it will help explain in code how your permissions model works).\nIf you send through a PR to develop, once I merge it, it will sit in this PR :)\nOn 19 Nov 2013, at 6:56 am, Marc van der Meulen notifications@github.com wrote:\n\nTo continue on the #287 discussion.\nI can make a driver called 'StrictPermissions' and have the implementation i explained in there!\nBasically you first check the user for the permission! if the user's permission is set (true or false) there is no need to check the user groups for the permission.\nIf the permission is not set on the user you loop through the groups and when a true is found you return that after the loop or when a false is found you return that straight away.\nI'll try and make a pull request tomorrow if needed\n\u2014\nReply to this email directly or view it on GitHub.\n. @marcvdm, I've restructured permissions to make creating new drivers very easy. I've also prepared for your StrictPermissions implementation. The great thing about how I've structured it is, you only need to override one method from BasePermissions, which is preparePermissions(). That will return a flat array of permissions, using whatever logic it wants. This is where you'll build the array of group permissions, and then remove the group permissions who are present in the user object :) Just return that array, and everything will work :) Cool, eh?\n. @marcvdm the idea is that this object is populated once, whenever permissions are requested. At this stage, the object is initialised with all user and group permissions (which will load fast through our eloquent drivers as we'll use full eager loading and query caching where possible).\n\nYou need to iterate through and give back a flat array of permissions. So, the way I'd do it is, loop through all user permissions and put them in the flat array. Then, loop through groups. Only add the group if the permission doesn't exist in the user permissions (regardless of it's value).\nI'd stash what you have done and pull in the latest stuff I pushed, you'll see the method there to override :)\n. You're making it hard on yourself. You just need to pull in and modify this.\nIt would only require something like this for the logic you're after. I'd like you to put in the PR though if you're comfortable :)\n. The other way would be something like this. This way, group permissions are still an opt-in system where any opt-out (false) value will deny the permission.\nOtherwise, the order of the groups matters, because only the first group with the permission has the value which is required.\nFood for thought...\n. Release date? No.\nOnce Laravel 4.1's API stops changing daily, we will add support to Sentry 2 (which involves just adjusting cookies and sessions).\n. A PR for 4.0 and 4.1 support is always welcome for Sentry 2 :)\n. We could make 2 session classes. Look at the Laravel version and return a different class. \nOr, remove the type check and do an if() statement in the constructor to check the Jar is a valid instance. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 22 Nov 2013, at 5:59 pm, John Maguire notifications@github.com wrote:\nSure. Looking deeper into it, it seems like if switching to the 4.1 cookie \nsyntax is not backwards compatible with 4.0 which I actually expect it will \nbe, there is a variable defined within Laravel to check the version of the \nframework running. \nOn Nov 22, 2013 1:20 AM, \"Bruno Gaspar\" notifications@github.com wrote: \n\nWell, yeah the way you mentioned on IRC on how you would tackle the issue \nis a bit hacky for me, that's why i said it would most likely not be \nmerged, but to be honest i care less on how it is done, as long as it is \nfixed and works with both versions i'm \"ok\" with it. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29051250 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi guys,\n\n\nProud to present the first alpha of Sentry 3. It's tested in a real app, I haven't pushed all the unit tests yet.\nPlease download the demo app and:\n1. Install dependencies through composer\n2. Configure database and migrate with --package=cartalyst/sentry option.\n3. Visit /register on the virtual host you setup.\nBy default, we are using throttling and activation checks. To enable SwiftIdentity, simply register on their site, then publish Sentry's config and follow the instructions there (be sure to configure the swift component and also enable it as a checkpoint).\nDocs coming soon, but would love to get the public involved in the early testing of Sentry 3!\n. Demo coming within a day or so as well of the whole setup, with SwiftIdentity enabled.\n. @marcvdm  - yes - you will need to configure your database, we can't do that for you\n. Sure, that's because we're loading (in that specific app) things from the database -- normally you'd start your app without sentry installed and configured.\n. A stock Laravel app with a dependency of cartalyst/sentry (or any* other package) shouldn't touch the database, only if something is hooked on each request to hit it.\n. Yep, so there's 3 ways to go about it... Haven't really decided on a \"recommended\" way, because I don't care much for conventions :p \nFirst:\nphp\n$user = Sentry::findByCredentials(['login' => 'foo@bar.com']);\nSentry::getUserProvider()->update($user, ['password' => 'haha', 'first_name' => 'Quz']);\nSentry::update($user, ['password' => 'haha', 'first_name' => 'Quz']); // New\nSecond:\nphp\nSentry::getUserProvider()->update(14, ['password' => 'haha', 'first_name' => 'Quz']);\nSentry::update(14, ['password' => 'haha', 'first_name' => 'Quz']); // New\nThird:\nphp\n$user = User::find(14);\n$user->password = Hash::make('haha');\n$user->save();\nI kinda like the ability to use Sentry's wrappers to hash passwords, but I also like the fact that you don't HAVE to use Sentry to do anything, except authenticating.\n. @brunogaspar see 96a25f8453b0078b1ace01e831b476803c6f48dd\n. Comes down to finishing unit tests and documenting changes really. \nAt this point though Tom we're hard set on getting platform 2 RC3 out the door :)\nFor a demo, see the Cartalyst/sentry-3-demo repo. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 15 Dec 2013, at 7:46 am, Tom Schlick notifications@github.com wrote:\nWhats the timeline on this? It looks from the checklist and the builds passing that you've taken care of what you set out to do...\n\u2014\nReply to this email directly or view it on GitHub.\n. NOOOOO. Sentry doesn\u2019t need a method, it\u2019s not going in. Use your own implementations \u2014 User::all();. Use Eloquent directly. \n\nOn 6 Jan 2014, at 7:31 am, Bruno Gaspar notifications@github.com wrote:\n\nAdded.\n\u2014\nReply to this email directly or view it on GitHub.\n. To expand, Bruno, let's remove that method.\n\nOverride the model (In Laravel. php artisan config:publish cartalyst/sentry). Rename the model class to a class of your own (you can implement it all or just extend Cartalyst\\Sentry\\Users\\EloquentUser).\nThen, build fancy queries directly with your Eloquent model, or another interface you design that your model implements (if you want to switch Eloquent out in the future).\nIf Sentry doesn't need a method, don't add it. It's up to the implementor to implement.\n. Schweeet :) I just want to be really strict on the extra code we add to Sentry if it\u2019s not required, you know?\nOn 6 Jan 2014, at 7:41 am, Bruno Gaspar notifications@github.com wrote:\n\nRemoved\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, 2 mins\n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 20 Jan 2014, at 9:07 am, Graham Campbell notifications@github.com wrote:\nCould we have a v3.0.0-alpha5 tag with the latest fixes in?\n\u2014\nReply to this email directly or view it on GitHub.\n. Just making a couple of tweaks first\nOn 20 Jan 2014, at 9:07 am, Graham Campbell notifications@github.com wrote:\nCould we have a v3.0.0-alpha5 tag with the latest fixes in?\n\u2014\nReply to this email directly or view it on GitHub.\n. Started adding some events. Feel fee to PR some more that you see appropriate. Keep each set of hooks in a separate PR so we can evaluate each one, just don't want to have like 1000 hooks all of a sudden :)\n. When what? When does the moon rise? :)\n. It is pretty stable, doing the change log is kind of on the back of our priority list right now. There\u2019s a lot of people using the 3.0 version, anybody is free to submit patches for documentation and all that jazz, @drsii may even have a little something special to give away :)\n\nOn 25 Jan 2014, at 6:38 pm, Aleksander Kalnoy notifications@github.com wrote:\n\nThe release! When it's going to be stable? The changelog? Api changes?\n\u2014\nReply to this email directly or view it on GitHub.\n. @mapb1990, it just comes down to having the resources to fully document it. We'd love community contributions!\n\nOnce we're documented it, we're pretty much ready to go :)\n. There's a reason for why it is. I'll try remember to update you tomorrow morning when I'm on my MacBook. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 23 Mar 2014, at 9:19 pm, Varghese Jacob notifications@github.com wrote:\nis there anyway to throw the ThrottlingException after the number of invalid logins has passed the threshold number? Right now, the ThrottlingException is thrown only after the invalid logins has passed the threshold number AND the user attempts a valid login, otherwise it will just return invalid username/password no matter how many number of invalid logins have been attempted.\n\u2014\nReply to this email directly or view it on GitHub.\n. That\u2019s separate, we\u2019re already immune from that bug that Laravel had :)\nOn 16 Apr 2014, at 11:20 am, Dwight Watson notifications@github.com wrote:\nWill any change be required here for the remember_token column that comes in Laravel 4.1.26, or is that completely separate from the token used by Sentry?\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n. We're in a bit of a pickle here. Laravel 4.1 requires that we attack it this way.\n\nThanks for the PR, but I don't think we can accept this in. See #325 for more :)\n. There is no $this->jar->get() method. It's purely a Facade for the request now.\n. What you said Bruno. We have already had an issue on this haven't we? If so, I'd suggest the author checks existing issues first. If not, my apologies. \nWe are not requiring a package to run migrations in a framework we optionally have support for. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 5 Jan 2014, at 3:21 am, Bruno Gaspar notifications@github.com wrote:\nHi and thanks.\nI agree with you, but this is one of those situations, because, Sentry is not only used on Laravel, therefore we shouldn't require it but either suggest it, like how Laravel has on their composer.json, but i'm ok on having it directly on the require as it solves the issue for lazy people, what's your input @bencorlett?\n\u2014\nReply to this email directly or view it on GitHub.\n. Wait, not what you said. \n. We are not requiring it. I'm not bloating the shit out if our deps (the reason Laravel has removed it, there's like 14 packages which have to be downloaded) just to support migrations in Laravel. \n\nPersonally, my opinion is, Laravel has messed with a lot of third party packages this way, it's their problem to address or educate people on. \n. Ah okay. But, we are not adding it. Heck, we don't require illuminate/database which all of our models use. In fact, I need to check, but I don't even think we need illuminate/events. And if I do some magic we could potentially remove illuminate/support, though I'm not too stressed about it being there. \nSent from my iPhone\nPlease excuse my brevity\n\nOn 5 Jan 2014, at 7:08 am, Bruno Gaspar notifications@github.com wrote:\n@bencorlett was on Sentry Social, because it requires, Sentry.\n\u2014\nReply to this email directly or view it on GitHub.\n. Passing false is not valid though?\n. Passing \"true\" is a backwards compatible thing to activate a user. Passing a closure is a callback. Passing \"false\" is an invalid argument. \n. Just wondering, is there a use-case for passing \"false\"? If so, could be open to having this merged however we wouldn't need that check anymore so the whole exception could be removed...\n. Valid use-case!\n. Awesome!\n. Thanks!\n. What\u2019s the potential issues?\n\nOn 21 Jan 2014, at 10:39 am, Graham Campbell notifications@github.com wrote:\n\nUse && rather than and and || rather than or to avoid some potential issues.\nYou can merge this Pull Request by running\ngit pull https://github.com/GrahamCampbell/sentry logical-operator-fixes\nOr view, comment on, or merge it at:\nhttps://github.com/cartalyst/sentry/pull/350\nCommit Summary\nLogical operator fixes\nFile Changes\nM src/Cartalyst/Sentry/Checkpoints/ThrottleCheckpoint.php (2)\nM src/Cartalyst/Sentry/Laravel/SentryServiceProvider.php (6)\nM src/Cartalyst/Sentry/Native/SentryBootstrapper.php (4)\nM src/Cartalyst/Sentry/Permissions/BasePermissions.php (4)\nM src/Cartalyst/Sentry/Sentry.php (8)\nM src/Cartalyst/Sentry/Sessions/NativeSession.php (2)\nM src/Cartalyst/Sentry/Users/BaseUserRepository.php (2)\nPatch Links:\nhttps://github.com/cartalyst/sentry/pull/350.patch\nhttps://github.com/cartalyst/sentry/pull/350.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. Of course they do, very aware of that :)\n\nBut I\u2019ve written everything to work, there\u2019s only potential issues if people start putting \u201c=\u201c without brackets\nOn 21 Jan 2014, at 10:55 am, Graham Campbell notifications@github.com wrote:\n\nSee http://php.net/manual/en/language.operators.precedence.php.\n&& and || have a higher precedence over and and or.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks, I'd like to review this when I'm on my laptop before merging :)\n. Also, all other drivers need an implementation\n\nSent from my iPad\nPlease excuse my brevity\n\nOn 14 Feb 2014, at 6:38 am, Bruno Gaspar notifications@github.com wrote:\nYeah, fix tests and fix code standards as well.\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome!\n. Thanks!\n. I feel that would be a lost cause because why would Sentry 3 be maintained if we released just a refractored Sentry 4. But, having said that I can see the merit in your ideas\n\nSent from my iPhone\nPlease excuse my brevity\n\nOn 3 Mar 2014, at 9:16 am, Paul Dixon notifications@github.com wrote:\nI understand the desire to move to 5.4 and a cleaner code base (traits are awesome) but if sentry 3.0 works with 5.3, can we not have a 3.0 release with 5.3, then a 4.0 release (immediately after if needed) for 5.4? That way the upgrade path will be a little easier and people stuck on 5.3 wont miss out on the new release.\n\u2014\nReply to this email directly or view it on GitHub.\n. So I've given careful consideration to all the opinions here, and moving forward, I believe PHP 5.4 is the way to go.\n\nPHP 5.5 is an overkill as it severely limits the market and there's no features that are going to aid development and simplify the codebase (like those available in PHP 5.4).\nSentry 2.* will be maintained for the foreseeable future with bug fixes and community-supplied features, so don't fret that you're going to just lose support!\n. Love this!\n. Thanks mate, I'll pull this down soon\n. Thanks!\n. ",
    "dlpetrie": "Will look into adding this in the future.  Not very useful in its current state as it won't grab metadata or groups at all.\n. Since we use laravel's session class ( which is using cookies ), this should already be maintainable through application/config/session.php in the 'path' and 'domain' settings.\n. Hm.. that's odd. I will take a look at it then when I get a chance.\n. While we love this idea, but adding it in may cause some confusion as it operates differently than every other Laravel bundle, so we decided against it for now.  I believe this Laravel issue is being fixed in Laravel 4.\n. I will look into this, but I'm not too sure it's the best idea to have from a security standpoint.\n. Interesting idea, will look into it\n. We decided not to merge this in. While the idea is interesting, we think this is more application specific and don't really see a need for a default group on a per user basis.\n. Will look into adding this in the future.  Not very useful in its current state as it won't grab metadata or groups at all.\n. Since we use laravel's session class ( which is using cookies ), this should already be maintainable through application/config/session.php in the 'path' and 'domain' settings.\n. Hm.. that's odd. I will take a look at it then when I get a chance.\n. While we love this idea, but adding it in may cause some confusion as it operates differently than every other Laravel bundle, so we decided against it for now.  I believe this Laravel issue is being fixed in Laravel 4.\n. I will look into this, but I'm not too sure it's the best idea to have from a security standpoint.\n. Interesting idea, will look into it\n. We decided not to merge this in. While the idea is interesting, we think this is more application specific and don't really see a need for a default group on a per user basis.\n. ",
    "charlie-hadden": "Ah yes, of course. I completely forgot about that as I didn't need it in\nthe case I implemented it.\nOn Tue, Aug 14, 2012 at 8:30 PM, Daniel Petrie notifications@github.comwrote:\n\nWill look into adding this in the future. Not very useful in its current\nstate as it won't grab metadata or groups at all.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/12#issuecomment-7737360.\n. Ah yes, of course. I completely forgot about that as I didn't need it in\nthe case I implemented it.\n\nOn Tue, Aug 14, 2012 at 8:30 PM, Daniel Petrie notifications@github.comwrote:\n\nWill look into adding this in the future. Not very useful in its current\nstate as it won't grab metadata or groups at all.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/12#issuecomment-7737360.\n. \n",
    "noherczeg": "I'd like to let you know that I'm aware of the fact that this wasn't the best way to do a pull, but this was my first feature contribution ever so please keep that in mind :>\n. Happy to hear you liked it, now I'm relieved that maybe I can expect that code to stay, so future extensions/additions won't recommend constant modification for me :)\n. np :)\n. I'll repost, this has my session rampage as well :P\n. I'd like to let you know that I'm aware of the fact that this wasn't the best way to do a pull, but this was my first feature contribution ever so please keep that in mind :>\n. Happy to hear you liked it, now I'm relieved that maybe I can expect that code to stay, so future extensions/additions won't recommend constant modification for me :)\n. np :)\n. I'll repost, this has my session rampage as well :P\n. ",
    "eazuka": "thanks @noherczeg \n. thanks @noherczeg \n. ",
    "spencerdeinum": "Cool, thanks @dlpetrie :)\n. Cool, thanks @dlpetrie :)\n. ",
    "papi83dm": "I tried to add the domain there, but the cookie wasn't setting the domain.\nOn Mon, Sep 24, 2012 at 10:56 AM, Daniel Petrie notifications@github.comwrote:\n\nSince we use laravel's session class ( which is using cookies ), this\nshould already be maintainable through application/config/session.php in\nthe 'path' and 'domain' settings.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8821586.\n. I made two changes to two files,  I didn't know how I could make one pull\nrequest with both files.\n\nOn Mon, Sep 24, 2012 at 11:31 AM, Daniel Petrie notifications@github.comwrote:\n\nHm.. that's odd. I will take a look at it then when I get a chance.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8822861.\n. Hello,\n\nI'm having the remember_me issue, my site doesn't tend to remember me.\nOn Mon, Sep 24, 2012 at 11:32 AM, Jose Medina papi83dm@gmail.com wrote:\n\nI made two changes to two files,  I didn't know how I could make one pull\nrequest with both files.\nOn Mon, Sep 24, 2012 at 11:31 AM, Daniel Petrie notifications@github.comwrote:\n\nHm.. that's odd. I will take a look at it then when I get a chance.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8822861.\n. I tried to add the domain there, but the cookie wasn't setting the domain.\n\n\nOn Mon, Sep 24, 2012 at 10:56 AM, Daniel Petrie notifications@github.comwrote:\n\nSince we use laravel's session class ( which is using cookies ), this\nshould already be maintainable through application/config/session.php in\nthe 'path' and 'domain' settings.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8821586.\n. I made two changes to two files,  I didn't know how I could make one pull\nrequest with both files.\n\nOn Mon, Sep 24, 2012 at 11:31 AM, Daniel Petrie notifications@github.comwrote:\n\nHm.. that's odd. I will take a look at it then when I get a chance.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8822861.\n. Hello,\n\nI'm having the remember_me issue, my site doesn't tend to remember me.\nOn Mon, Sep 24, 2012 at 11:32 AM, Jose Medina papi83dm@gmail.com wrote:\n\nI made two changes to two files,  I didn't know how I could make one pull\nrequest with both files.\nOn Mon, Sep 24, 2012 at 11:31 AM, Daniel Petrie notifications@github.comwrote:\n\nHm.. that's odd. I will take a look at it then when I get a chance.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/40#issuecomment-8822861.\n. \n\n",
    "weotch": "+1 on c684d5b, I ran into this same issue.\n. I see, thanks for the quick reply.  My particular use case is I don't care particularly about suspending people based on attempts, just having my manual bans enforced.\nAny ETA on when that new code will get rolled out?\n. Awesome, cool to hear.\n. +1 on c684d5b, I ran into this same issue.\n. I see, thanks for the quick reply.  My particular use case is I don't care particularly about suspending people based on attempts, just having my manual bans enforced.\nAny ETA on when that new code will get rolled out?\n. Awesome, cool to hear.\n. ",
    "samhernandez": "Yes please. c684d5b is a real issue. The feature request is reasonable.\n. Yes please. c684d5b is a real issue. The feature request is reasonable.\n. ",
    "demogar": "+1 for the force_login issue... thanks for providing a fix\n. +1 for the force_login issue... thanks for providing a fix\n. ",
    "fitztrev": "From a security standpoint, there's no difference from the current code. Only if their email account is compromised is either method insecure.\nThis fixes a usability issue. I don't think you should make users enter their email address and password when you have already verified their identity (which they did by clicking the link in email).\nAlso, I don't think I've ever seen a password reset request form that asks you to enter your new password before you verify your identity. This alone may confuse users and seem insecure to them.\n. From a security standpoint, there's no difference from the current code. Only if their email account is compromised is either method insecure.\nThis fixes a usability issue. I don't think you should make users enter their email address and password when you have already verified their identity (which they did by clicking the link in email).\nAlso, I don't think I've ever seen a password reset request form that asks you to enter your new password before you verify your identity. This alone may confuse users and seem insecure to them.\n. ",
    "jonagoldman": "+1\n. +1\n. ",
    "chriscandy": "+1\n. +1\n. ",
    "loic-sharma": "My pleasure :)\n. My pleasure :)\n. ",
    "drsii": "Thanks, looks good, I'll have Ben review and merge.\n. @GrahamCampbell that is the case. You can continue to use Sentry 2.* series, plenty of other options out there as well. Confide, Authority, etc.\n. of course.\n. @tomschlick good question... quick edit the blog post!  I know we had a reason, i struggle to answer it right now.\n. Really? 30 packages in 14 months to slow?\n. @joshuajabbour I really do appreciate the feedback. This is one reason we are bringing sentry into the arsenal. It was hard to justify resources into a free package, i have invested considerably into Sentry over the past 2 years and I want to see it succeed. Now we can make that happen. \nIn regards to the API I completely understand. The issue behind the reasons for that have been resolved. @suwardany will be taking the lead on the package, and seeing it through where we wanted it to be. \nThis is indeed a tricky model. We're forging new ground, and we are doing it purely bootstrapped. I hope we do nail it soon, as I believe wholeheartedly that it can work. In the mean time I am adding you back to the subscribers for another 3 months. I hope by then we have addressed your concerns and you see value in the service once again. \n. @nasaorc we have no plans to offer discounts. We essentially gave it away to 500 people as it is. However we might have a few promotions near stable release. There are definitely plenty of great options out there for you.\n. Please don't waste the points. we only have so many.\n. We're considering how best to handle the situation. Accepting means a breaking change and a major version bump.\n. Thanks, looks good, I'll have Ben review and merge.\n. @GrahamCampbell that is the case. You can continue to use Sentry 2.* series, plenty of other options out there as well. Confide, Authority, etc.\n. of course.\n. @tomschlick good question... quick edit the blog post!  I know we had a reason, i struggle to answer it right now.\n. Really? 30 packages in 14 months to slow?\n. @joshuajabbour I really do appreciate the feedback. This is one reason we are bringing sentry into the arsenal. It was hard to justify resources into a free package, i have invested considerably into Sentry over the past 2 years and I want to see it succeed. Now we can make that happen. \nIn regards to the API I completely understand. The issue behind the reasons for that have been resolved. @suwardany will be taking the lead on the package, and seeing it through where we wanted it to be. \nThis is indeed a tricky model. We're forging new ground, and we are doing it purely bootstrapped. I hope we do nail it soon, as I believe wholeheartedly that it can work. In the mean time I am adding you back to the subscribers for another 3 months. I hope by then we have addressed your concerns and you see value in the service once again. \n. @nasaorc we have no plans to offer discounts. We essentially gave it away to 500 people as it is. However we might have a few promotions near stable release. There are definitely plenty of great options out there for you.\n. Please don't waste the points. we only have so many.\n. We're considering how best to handle the situation. Accepting means a breaking change and a major version bump.\n. ",
    "andrewryno": "No worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n. That fixed it. I guess I didn't think about updating all the comments. Closing this PR as it's working fine.\n. No worries. I'm trying out Sentry for the first time and finding some small stuff with L4. Just figured I'd help out on this one. :)\n. That fixed it. I guess I didn't think about updating all the comments. Closing this PR as it's working fine.\n. ",
    "natedog550": "I appreciate that very much.  And great job on Sentry btw, it's an awesome package.\n. Ah ok makes sense. Thanks.\n. I appreciate that very much.  And great job on Sentry btw, it's an awesome package.\n. Ah ok makes sense. Thanks.\n. ",
    "brunogaspar": "Thanks\n. @dannewns Thanks!\n@bencorlett Should be fixed now..\n. Hi Steve, i'm not following the problem here.\nYou say that your user is created then you get the activation code, but when you look into the database the user is not stored?\n. Not sure what the problem is, you are using Sentry outside a Framework?\n. Well you don't need to use the users table that we provide, but you will need to have the other tables if you want to use all the features.\nMaybe your table wasn't setup correctly?\nIf you want, you can post your SQL here and we'll try to debug it.\n. Hi,\nSeems good to me, but can you please add in some spaces so that the equal signs (=) stays in line like on the clearLoginAttemptsIfAllowed() ?\n. Thank you =)\n. Hi,\nI like what you want to achieve here, but i \"don't\" agree with you, if im a super user, i don't need to have permissions assigned to me, i should be able to access everything, thats the whole point of the super user, but let's wait for @bencorlett opinion.\nBut can you explain what your use case for this is?\nThanks!\n. Hi,\nYeah, i'm seeing your point and like i said, i like the PR but i wasn't to sure of the usage of this.\nIm fine with this, it just needs some tweaks to not call the getMergedPermissions() everytime you call this method and some tests, but wait for @bencorlett opinion on this one!\nThanks again!\n. @bencorlett His use case is somewhat to what we've done on the Platform 2 User Management extension, and my guess is that he wants to loop through his own permissions and check if a user has that permission or not to make the checkbox or radio button checked/selected.\nEven though he is a super user we can assign permissions to him, in case we drop this flag from the user.\n. Thanks\n. Yes, this is perfectly acceptable, and makes sense, but let's wait for @bencorlett input!\n. @nikoskip You can always submit a PR to the docs.\n. Ah ok i see, that docs link is outdated the new link is this one https://cartalyst.com/manual/sentry/users/find#find-all-the-users-in-a-group we need to do a redirect on the old ones, but we have been a bit \"lazy\".\n. Fixed!\n. No worries :)\n. Thanks\n. You need to send the PR again, but to the master branch instead, because the 1.1/develop is for Sentry 1\n. Thanks :)\n. Thanks man, we will look into this soon!\n. Thanks :)\n. Hi,\nThanks for the PR, but is it possible for you to fix the unit tests?\n. Thanks, you're awesome :)\n. Thanks man!\n. No, but we are aware of this, and will be fixed as soon as possible.\n. Thanks, i will have @bencorlett to have a look at it, but i think we could have this on the inGroup method instead of a new method\n. Not sure what @bencorlett input is but going to give you mine again, with some code, so i prefer to have only one method, but to have the option to still passing an object, so my idea is, we could check that if the $group is an intance of GroupInterface, if true we use the object method, otherwise we check against the normal var\nphp\npublic function inGroup($group)\n{\n    foreach ($this->getGroups() as $_group)\n    {\n        if ($group instanceof GroupInterface)\n        {\n            if ($_group->getId() == $group->getId())\n            {\n                return true;\n            }\n        }\n        else\n        {\n            if ($_group->getName() == $group)\n            {\n                return true;\n            }\n        }\n    }\n}\nSomething like this, it can be tidied up a bit, but just to give an idea.\n. Interesting, i kinda like it to be honest.\nNot sure if it is doable to implement this though, but i like it, and what about having methods like\nuser() which returns the getUserProvider()\ngroup() which returns the getGroupProvider()\nthrottle() which returns the getThrottleProvider()\nSo this way we could use it like Sentry::user()->findByID(1)\nMore cleaner imo, but not sure..\ncc @bencorlett \n. Can you please take a look at the tests?\n. Thanks :)\n. Can you please take a look at the tests?\n. Thanks again\n. The only issue as i mentioned on IRC is the use of Config::get() will let Ben review but i believe we need to do it in another way :)\n. @bencorlett maybe we could inject the app container into sentry somehow? through the __constructor? bad idea? But this is something im wondering for best practices for other packages aswell that can/should work outside laravel itself but using laravel components.\n. After some \"discussion\" on irc, maybe we need a getter/setter method somewhere to set the correct model to use the correct model name, even if we change it on the sentry config.\n. Thanks dude.\n. Thanks\n. Thanks\n. Looks awesome, can you just fix the docblocks a bit? They just need one space before each *, so that all the * get's aligned, this is on the header notice and on the various docblocks.\n. Thanks\n. Cool thanks.\n. Thanks!\n. Awesome, thanks!\n. Thanks.\n. Thanks\n. Thanks, i will have a play on see if i can manage to tweak it out a bit later =)\n. Thanks,\n. Thanks!!\n. Hi,\nIn my honest opinion, i don't feel on integrating MD5 hashing functionality on Sentry is a good thing, mostly because, MD5 is bad, week and can be easily decrypted nowadays.\nI understand that you are now using Sentry with an old users database, but you should consider upgrading those passwords to a use a better and more secure hasher..\nYou can do it on a large scale, where you force your users to reset their passwords, it's not a bad thing, since you are improving security.\nOr, when a user tries to login, you check if the password you have on the database, for that user is an MD5 hash, if yes, you compare the password the user input with the password you have on the database, if they match, you update the user with the inputted password, so that it stores the password with the new hash format.\nBut anyway, like i mentioned, i'm not going to merge this in, if @bencorlett wants to merge it in is up to him.\n. Looks good to me, there are some code style changes needed but i guess we can do them after unless you want to tackle them =P\n. Sure no worries and we appreciate the effort =)\n@bencorlett Looks good to merge? :+1: \n. Well, yeah the way you mentioned on IRC on how you would tackle the issue is a bit hacky for me, that's why i said it would most likely not be merged, but to be honest i care less on how it is done, as long as it is fixed and works with both versions i'm \"ok\" with it.\n. Found an issue\n- When updating a user password, the password doesn't get hashed automatically;\nEdit:\nActually, we now need to use Sentry::getUserRepository()->update($this->user, Input::all()); where $this->user is a User object\n. Thanks, that cleans the code a bit =)\n. Yeah probably, i can add that really quickly\n. Added.\n. it's the end of the wooooorld xD\n. Removed\n. Yeah i'm following.\n. Once we have time to finish the docs and tests, not a big priority atm.\n. Fixed.\nTo get a list of users, $users = Sentry::getUserRepository()->createModel()->get(); then you just iterate over it.\n. @rydurham you probably have an outdated version, because that migration has a where clause https://github.com/cartalyst/sentry/blob/develop/src/migrations/2013_11_26_023945_migration_cartalyst_sentry_rename_alter_groups.php#L54\n. Yeah, i'll tag in a few.\n. @tomschlick We've thought about it, but not everyone has the same opinion, so we're leaving Sentry 2 Open and since Sentry 3 wasn't released we took the opportunity to rebrand it and make it Paid Source.\n. Hi and thanks.\nI agree with you, but this is one of those situations, because, Sentry is not only used on Laravel, therefore we shouldn't require it but either suggest it, like how Laravel has on their composer.json,  but i'm ok on having it directly on the require as it solves the issue for lazy people, what's your input @bencorlett?\n. @bencorlett was on Sentry Social, because it requires, Sentry.\n. Fixed.\n. Thanks :+1: \n. Thanks!\n. I think i've fixed the composer.json issue, waiting for it to finish, as it was passing locally.\n. The change you're pull requesting is for Sentry 3 but you are doing the pull request on the master branch which is Sentry 2.\n. We don't have the docs updated but we have a very basic Sentry 3 demo here https://github.com/cartalyst/demo-sentry.\n. Thanks.\n. Yeah, fix tests and fix code standards as well.\n. 10000 points to Hufflepuff :+1: \n. Yeah, i'm with @bencorlett, it doesn't make any sense to release the version 3 then version 4.\nThis should be merged into develop :+1: \n. Thanks\n. Thanks, you forgot to squash!\nJk =P\n. ahaha i was joking =)\n. This should be fixed.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks, let's hope it works now hah\n. I'm ok with the change, but what's the benefit of using Carbon over DateTime?\n. What's the point of having two extra methods to set properties as null?\n. Thanks.\n. Thanks.\n. This should be sent to the docs/2.1 branch.\nThanks.\n. Tests are failing\n. Sorry but i don't see where this helps anyone, if you need such change, you should create your own User model, extend the base Sentry User model, they update it on the Sentry config file on this line https://github.com/cartalyst/sentry/blob/master/src/config/config.php#L123\n. If you want to create test PR/Issues create on your repository, next time you'll be blocked.\n. Sorry but i'll have to decline this, Sentry is feature freeze.\n. Please send this to the 2.1 branch and make the if statement to look the same as the other if's\nphp\nif ($ci->db->pconnect)\n{\n    $pdo = $ci->db->db_pconnect(); \n}\nelse \n{\n    $pdo = $ci->db->db_connect(); \n}\nor something like\n``` php\n$method = $ci->db->pconnect ? 'db_pconnect' : 'db_connect';\n$pdo = $ci->db->{$method}();\n``\n. The tests for this are failing.\n. If this is still required, please send the patch to the2.1` branch with the tests updated.\n. The tests are failing.\n. If this is still required, please reopen and update the tests.\n. I understand your use case, but the code you submitted is not done properly and you should do something like the following which is very simple otherwise create a function somewhere on your application to achieve this\n``` php\n$groupName = 'Administrators';\n$group = Sentry::findGroupByName($groupName);\n$inGroup = Sentry::inGroup($group);\n``\n. Thanks!\n. We are not supporting Laravel 5 at this time.\n. @a3gis Check the feature/laravel-5 branch, we don't have any release date though.\n. Sorry for not getting back to you, will add some comments on lines that are not correct and if you can update them awesome. Also after the changes please squash to one commit.\n. What does this fix?\n. This is on the wrong branch sorry.\n. To the same branch you did the changes from,feature/laravel-5.\n. Send this to the2.1branch instead.\n. :+1: \n. You've updated the name of the package on thecomposer.json`, which you shouldn't.\nBut i don't believe i'll be able to merge this, while it fixes the behaviour it introduces a breaking change..\n. @aleemb Sentinel is already open source.\n. I don't think you need to use empty() here as a simple if check can perform the same and keeps consistency.\nphp\nif ( ! $resetCode)\n{\n    return false;\n}\nAlso update the Kohana User class as well please to also return false instead of throwing the exception.\n. @BackEndTea It's tagged.. I don't think merging would make it work on Laravel 5.* since the dependencies are locked to Laravel 4.0.9 till 4.2. Thanks\n. @dannewns Thanks!\n@bencorlett Should be fixed now..\n. Hi Steve, i'm not following the problem here.\nYou say that your user is created then you get the activation code, but when you look into the database the user is not stored?\n. Not sure what the problem is, you are using Sentry outside a Framework?\n. Well you don't need to use the users table that we provide, but you will need to have the other tables if you want to use all the features.\nMaybe your table wasn't setup correctly?\nIf you want, you can post your SQL here and we'll try to debug it.\n. Hi,\nSeems good to me, but can you please add in some spaces so that the equal signs (=) stays in line like on the clearLoginAttemptsIfAllowed() ?\n. Thank you =)\n. Hi,\nI like what you want to achieve here, but i \"don't\" agree with you, if im a super user, i don't need to have permissions assigned to me, i should be able to access everything, thats the whole point of the super user, but let's wait for @bencorlett opinion.\nBut can you explain what your use case for this is?\nThanks!\n. Hi,\nYeah, i'm seeing your point and like i said, i like the PR but i wasn't to sure of the usage of this.\nIm fine with this, it just needs some tweaks to not call the getMergedPermissions() everytime you call this method and some tests, but wait for @bencorlett opinion on this one!\nThanks again!\n. @bencorlett His use case is somewhat to what we've done on the Platform 2 User Management extension, and my guess is that he wants to loop through his own permissions and check if a user has that permission or not to make the checkbox or radio button checked/selected.\nEven though he is a super user we can assign permissions to him, in case we drop this flag from the user.\n. Thanks\n. Yes, this is perfectly acceptable, and makes sense, but let's wait for @bencorlett input!\n. @nikoskip You can always submit a PR to the docs.\n. Ah ok i see, that docs link is outdated the new link is this one https://cartalyst.com/manual/sentry/users/find#find-all-the-users-in-a-group we need to do a redirect on the old ones, but we have been a bit \"lazy\".\n. Fixed!\n. No worries :)\n. Thanks\n. You need to send the PR again, but to the master branch instead, because the 1.1/develop is for Sentry 1\n. Thanks :)\n. Thanks man, we will look into this soon!\n. Thanks :)\n. Hi,\nThanks for the PR, but is it possible for you to fix the unit tests?\n. Thanks, you're awesome :)\n. Thanks man!\n. No, but we are aware of this, and will be fixed as soon as possible.\n. Thanks, i will have @bencorlett to have a look at it, but i think we could have this on the inGroup method instead of a new method\n. Not sure what @bencorlett input is but going to give you mine again, with some code, so i prefer to have only one method, but to have the option to still passing an object, so my idea is, we could check that if the $group is an intance of GroupInterface, if true we use the object method, otherwise we check against the normal var\nphp\npublic function inGroup($group)\n{\n    foreach ($this->getGroups() as $_group)\n    {\n        if ($group instanceof GroupInterface)\n        {\n            if ($_group->getId() == $group->getId())\n            {\n                return true;\n            }\n        }\n        else\n        {\n            if ($_group->getName() == $group)\n            {\n                return true;\n            }\n        }\n    }\n}\nSomething like this, it can be tidied up a bit, but just to give an idea.\n. Interesting, i kinda like it to be honest.\nNot sure if it is doable to implement this though, but i like it, and what about having methods like\nuser() which returns the getUserProvider()\ngroup() which returns the getGroupProvider()\nthrottle() which returns the getThrottleProvider()\nSo this way we could use it like Sentry::user()->findByID(1)\nMore cleaner imo, but not sure..\ncc @bencorlett \n. Can you please take a look at the tests?\n. Thanks :)\n. Can you please take a look at the tests?\n. Thanks again\n. The only issue as i mentioned on IRC is the use of Config::get() will let Ben review but i believe we need to do it in another way :)\n. @bencorlett maybe we could inject the app container into sentry somehow? through the __constructor? bad idea? But this is something im wondering for best practices for other packages aswell that can/should work outside laravel itself but using laravel components.\n. After some \"discussion\" on irc, maybe we need a getter/setter method somewhere to set the correct model to use the correct model name, even if we change it on the sentry config.\n. Thanks dude.\n. Thanks\n. Thanks\n. Looks awesome, can you just fix the docblocks a bit? They just need one space before each *, so that all the * get's aligned, this is on the header notice and on the various docblocks.\n. Thanks\n. Cool thanks.\n. Thanks!\n. Awesome, thanks!\n. Thanks.\n. Thanks\n. Thanks, i will have a play on see if i can manage to tweak it out a bit later =)\n. Thanks,\n. Thanks!!\n. Hi,\nIn my honest opinion, i don't feel on integrating MD5 hashing functionality on Sentry is a good thing, mostly because, MD5 is bad, week and can be easily decrypted nowadays.\nI understand that you are now using Sentry with an old users database, but you should consider upgrading those passwords to a use a better and more secure hasher..\nYou can do it on a large scale, where you force your users to reset their passwords, it's not a bad thing, since you are improving security.\nOr, when a user tries to login, you check if the password you have on the database, for that user is an MD5 hash, if yes, you compare the password the user input with the password you have on the database, if they match, you update the user with the inputted password, so that it stores the password with the new hash format.\nBut anyway, like i mentioned, i'm not going to merge this in, if @bencorlett wants to merge it in is up to him.\n. Looks good to me, there are some code style changes needed but i guess we can do them after unless you want to tackle them =P\n. Sure no worries and we appreciate the effort =)\n@bencorlett Looks good to merge? :+1: \n. Well, yeah the way you mentioned on IRC on how you would tackle the issue is a bit hacky for me, that's why i said it would most likely not be merged, but to be honest i care less on how it is done, as long as it is fixed and works with both versions i'm \"ok\" with it.\n. Found an issue\n- When updating a user password, the password doesn't get hashed automatically;\nEdit:\nActually, we now need to use Sentry::getUserRepository()->update($this->user, Input::all()); where $this->user is a User object\n. Thanks, that cleans the code a bit =)\n. Yeah probably, i can add that really quickly\n. Added.\n. it's the end of the wooooorld xD\n. Removed\n. Yeah i'm following.\n. Once we have time to finish the docs and tests, not a big priority atm.\n. Fixed.\nTo get a list of users, $users = Sentry::getUserRepository()->createModel()->get(); then you just iterate over it.\n. @rydurham you probably have an outdated version, because that migration has a where clause https://github.com/cartalyst/sentry/blob/develop/src/migrations/2013_11_26_023945_migration_cartalyst_sentry_rename_alter_groups.php#L54\n. Yeah, i'll tag in a few.\n. @tomschlick We've thought about it, but not everyone has the same opinion, so we're leaving Sentry 2 Open and since Sentry 3 wasn't released we took the opportunity to rebrand it and make it Paid Source.\n. Hi and thanks.\nI agree with you, but this is one of those situations, because, Sentry is not only used on Laravel, therefore we shouldn't require it but either suggest it, like how Laravel has on their composer.json,  but i'm ok on having it directly on the require as it solves the issue for lazy people, what's your input @bencorlett?\n. @bencorlett was on Sentry Social, because it requires, Sentry.\n. Fixed.\n. Thanks :+1: \n. Thanks!\n. I think i've fixed the composer.json issue, waiting for it to finish, as it was passing locally.\n. The change you're pull requesting is for Sentry 3 but you are doing the pull request on the master branch which is Sentry 2.\n. We don't have the docs updated but we have a very basic Sentry 3 demo here https://github.com/cartalyst/demo-sentry.\n. Thanks.\n. Yeah, fix tests and fix code standards as well.\n. 10000 points to Hufflepuff :+1: \n. Yeah, i'm with @bencorlett, it doesn't make any sense to release the version 3 then version 4.\nThis should be merged into develop :+1: \n. Thanks\n. Thanks, you forgot to squash!\nJk =P\n. ahaha i was joking =)\n. This should be fixed.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks, let's hope it works now hah\n. I'm ok with the change, but what's the benefit of using Carbon over DateTime?\n. What's the point of having two extra methods to set properties as null?\n. Thanks.\n. Thanks.\n. This should be sent to the docs/2.1 branch.\nThanks.\n. Tests are failing\n. Sorry but i don't see where this helps anyone, if you need such change, you should create your own User model, extend the base Sentry User model, they update it on the Sentry config file on this line https://github.com/cartalyst/sentry/blob/master/src/config/config.php#L123\n. If you want to create test PR/Issues create on your repository, next time you'll be blocked.\n. Sorry but i'll have to decline this, Sentry is feature freeze.\n. Please send this to the 2.1 branch and make the if statement to look the same as the other if's\nphp\nif ($ci->db->pconnect)\n{\n    $pdo = $ci->db->db_pconnect(); \n}\nelse \n{\n    $pdo = $ci->db->db_connect(); \n}\nor something like\n``` php\n$method = $ci->db->pconnect ? 'db_pconnect' : 'db_connect';\n$pdo = $ci->db->{$method}();\n``\n. The tests for this are failing.\n. If this is still required, please send the patch to the2.1` branch with the tests updated.\n. The tests are failing.\n. If this is still required, please reopen and update the tests.\n. I understand your use case, but the code you submitted is not done properly and you should do something like the following which is very simple otherwise create a function somewhere on your application to achieve this\n``` php\n$groupName = 'Administrators';\n$group = Sentry::findGroupByName($groupName);\n$inGroup = Sentry::inGroup($group);\n``\n. Thanks!\n. We are not supporting Laravel 5 at this time.\n. @a3gis Check the feature/laravel-5 branch, we don't have any release date though.\n. Sorry for not getting back to you, will add some comments on lines that are not correct and if you can update them awesome. Also after the changes please squash to one commit.\n. What does this fix?\n. This is on the wrong branch sorry.\n. To the same branch you did the changes from,feature/laravel-5.\n. Send this to the2.1branch instead.\n. :+1: \n. You've updated the name of the package on thecomposer.json`, which you shouldn't.\nBut i don't believe i'll be able to merge this, while it fixes the behaviour it introduces a breaking change..\n. @aleemb Sentinel is already open source.\n. I don't think you need to use empty() here as a simple if check can perform the same and keeps consistency.\nphp\nif ( ! $resetCode)\n{\n    return false;\n}\nAlso update the Kohana User class as well please to also return false instead of throwing the exception.\n. @BackEndTea It's tagged.. I don't think merging would make it work on Laravel 5.* since the dependencies are locked to Laravel 4.0.9 till 4.2. ",
    "bstrahija": "What about just making is ID fields unsigned? Would make it easier to create foreign keys later on.\n. What about just making is ID fields unsigned? Would make it easier to create foreign keys later on.\n. ",
    "RickvdP": "Good catch! Indeed forgot to put the proper serialize() in the test, small fix.\nSentry 2.0 looks very nice by the way. Love the decoupled elements and the facades are very much appreciated! \nThanks,\nRick\n. Good catch! Indeed forgot to put the proper serialize() in the test, small fix.\nSentry 2.0 looks very nice by the way. Love the decoupled elements and the facades are very much appreciated! \nThanks,\nRick\n. ",
    "dannewns": "thanks for this @brunogaspar great work and quick updating. \n. thanks for this @brunogaspar great work and quick updating. \n. ",
    "aleemb": "Sorry, you may want to squash those. It's late here where I am.\n. I wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n. Hmm, complains about Illuminate\\Model not found. Called phpunit from within laravel\\vendor\\cartalyst\\sentry.\nWill poke around but in the mean time the test above covers the wildcard permissions settings and is symmetrical to wildcard permissions check so hopefully good to push?\n. FYI, this is related: https://github.com/laravel/framework/issues/573\nThe dot notation on both platforms works quite well together.\nCurrently I have setup a permissions filter (with some ugly code to get the named route) and call if ( ! $user->hasAccess($routeName)). This makes life quite easy since it automatically checks user permission on every controller.action.\n. Yeah I did a commit after the PR which the PR automatically seems to have picked up.\nFair enough comment re breaking changes. Closing this off, will work off my branch for now.\nLook forward to Sentinel release.\nCheers!\n. Sorry, you may want to squash those. It's late here where I am.\n. I wrote the above test without verifying but would like to have a local setup going anyway.\nI installed phpunit and mockery, then from within tests folder I ran phpunit EloquentUserTest. I got an error complaining Eloquent\\User not found. What's the correct way to run the test from the command prompt?\n. Hmm, complains about Illuminate\\Model not found. Called phpunit from within laravel\\vendor\\cartalyst\\sentry.\nWill poke around but in the mean time the test above covers the wildcard permissions settings and is symmetrical to wildcard permissions check so hopefully good to push?\n. FYI, this is related: https://github.com/laravel/framework/issues/573\nThe dot notation on both platforms works quite well together.\nCurrently I have setup a permissions filter (with some ugly code to get the named route) and call if ( ! $user->hasAccess($routeName)). This makes life quite easy since it automatically checks user permission on every controller.action.\n. Yeah I did a commit after the PR which the PR automatically seems to have picked up.\nFair enough comment re breaking changes. Closing this off, will work off my branch for now.\nLook forward to Sentinel release.\nCheers!\n. ",
    "SteveEdson": "Wow that was fast :)\n. Yeah no kidding. Thanks, appreciate the quick response.\n. Any update on this? I can run the code to register a user without any errors. I can then get the activation code for the user, which returns a value as well. Yet nothing is saved to the database. \n. That's right yes\n. Using just sentry, no frameworks or anything else. This is my test script, showing the result: https://gist.github.com/SteveEdson/5216084. \nBut nothing shows up in my database\n. Appreciate it\n. Did you manage to recreate my issue? Would love to be able to use Sentry\n. I've figured it out. Its probably extremely obvious to you guys, but nowhere in the docs does it say that the database table structure should already be in place. I imported the mysql.sql to my database and the data is now being saved.\nThe docs need to reflect this step, and sentry should provide some sort of feedback when it cannot find the tables.\n. @bencorlett yeah thats spot on.\n. Wow that was fast :)\n. Yeah no kidding. Thanks, appreciate the quick response.\n. Any update on this? I can run the code to register a user without any errors. I can then get the activation code for the user, which returns a value as well. Yet nothing is saved to the database. \n. That's right yes\n. Using just sentry, no frameworks or anything else. This is my test script, showing the result: https://gist.github.com/SteveEdson/5216084. \nBut nothing shows up in my database\n. Appreciate it\n. Did you manage to recreate my issue? Would love to be able to use Sentry\n. I've figured it out. Its probably extremely obvious to you guys, but nowhere in the docs does it say that the database table structure should already be in place. I imported the mysql.sql to my database and the data is now being saved.\nThe docs need to reflect this step, and sentry should provide some sort of feedback when it cannot find the tables.\n. @bencorlett yeah thats spot on.\n. ",
    "rydurham": "Sure thing. \n. All set. Thanks!\n. I ran into an issue with the rename_alter_groups migration - the slug/json permission update query is missing a where() option.  This fixed it: \nphp\nDB::table('groups')\n    ->where('name', $group->name)\n    ->update(array(\n        'slug' => Str::slug($group->name),\n        'permissions' => (count($permissions) > 0) ? json_encode($permissions) : '',            \n));\n. In looking through the source, I don't see an equivalent to the Sentry 2 ban()/unban()  - is it still possible to intentionally ban a user with Sentry 3?\n. Sure thing. \n. All set. Thanks!\n. I ran into an issue with the rename_alter_groups migration - the slug/json permission update query is missing a where() option.  This fixed it: \nphp\nDB::table('groups')\n    ->where('name', $group->name)\n    ->update(array(\n        'slug' => Str::slug($group->name),\n        'permissions' => (count($permissions) > 0) ? json_encode($permissions) : '',            \n));\n. In looking through the source, I don't see an equivalent to the Sentry 2 ban()/unban()  - is it still possible to intentionally ban a user with Sentry 3?\n. ",
    "joakimkejser": "Hi,\nMy use case just slipped through my fingers with your arguments.\nIt's of course not necessary to assign permissions to super users.\nMy use for this was to show and edit permissions assigned to a user, even a super user.\nThe only example i can come up with, is if you want to make a user super user for a short period of time, and in that period be able to alter the users \"real permissions\". That might be a bit far-fetched though.\n. Spot on @brunogaspar , sorry if I was unclear about it.\n. I'd like to be able to loop over them and do something like (using L4 form builder):\nphp\n{{ Form::checkbox(\"perm[$permission]\", 1, $user->hasPermission($permission)) }}\n. Why would you want to make a user a superuser through a group permission?\nIsn't it desired to assign this on a per user basis?\n. Hi,\nMy use case just slipped through my fingers with your arguments.\nIt's of course not necessary to assign permissions to super users.\nMy use for this was to show and edit permissions assigned to a user, even a super user.\nThe only example i can come up with, is if you want to make a user super user for a short period of time, and in that period be able to alter the users \"real permissions\". That might be a bit far-fetched though.\n. Spot on @brunogaspar , sorry if I was unclear about it.\n. I'd like to be able to loop over them and do something like (using L4 form builder):\nphp\n{{ Form::checkbox(\"perm[$permission]\", 1, $user->hasPermission($permission)) }}\n. Why would you want to make a user a superuser through a group permission?\nIsn't it desired to assign this on a per user basis?\n. ",
    "thomaslarsson": "I really have no idea how commits/similar work here guys, so hope this is how you want it done. I've only used Github as fancy backup-functionality before. haha\n. I really have no idea how commits/similar work here guys, so hope this is how you want it done. I've only used Github as fancy backup-functionality before. haha\n. ",
    "thylo": "There's about 11 matches across 5 files.\nBut I think that you're probably right, maybe would it be easier for LMongo to add this behavior\n. There's about 11 matches across 5 files.\nBut I think that you're probably right, maybe would it be easier for LMongo to add this behavior\n. ",
    "travisolbrich": "@joakimkejser, I've got an 'administrators' group that I want to have access to everything without me having to assign each permission automatically.\nRegardless, this function worked differently than the other similar functions in Sentry, so I felt it should be modified to work in a similar way.\n. @joakimkejser, I've got an 'administrators' group that I want to have access to everything without me having to assign each permission automatically.\nRegardless, this function worked differently than the other similar functions in Sentry, so I felt it should be modified to work in a similar way.\n. ",
    "nikoskip": "I'm checking the docs right now and this commit is not reflected. Still says:\n$users = Sentry::findAllUsersInGroup(array('administrator', 'users'));\n. I know, but I checked docs in master branch and this changes are already there, but not in the site docs.\nhttp://docs.cartalyst.com/sentry-2/users/find#find-all-the-users-in-a-group\n. Oh! Thx for the new link :D \nIt was Google fault for taking me to that page.\n. I'm checking the docs right now and this commit is not reflected. Still says:\n$users = Sentry::findAllUsersInGroup(array('administrator', 'users'));\n. I know, but I checked docs in master branch and this changes are already there, but not in the site docs.\nhttp://docs.cartalyst.com/sentry-2/users/find#find-all-the-users-in-a-group\n. Oh! Thx for the new link :D \nIt was Google fault for taking me to that page.\n. ",
    "nosykretts": "I'm sorry but somehow I cannot edit my commit. I still learning using git\n. I'm sorry but somehow I cannot edit my commit. I still learning using git\n. ",
    "vesparny": "thanks\n. thanks\n. ",
    "AlexDanault": "I see the build failed but I don't understand how this is related to my PR. Any suggestions?\n. I see the build failed but I don't understand how this is related to my PR. Any suggestions?\n. ",
    "PunKeel": "You're welcome, love the app, and sorry for the commit-rollback ... Didn't understood some failure on Jenkins.\n. You're welcome, love the app, and sorry for the commit-rollback ... Didn't understood some failure on Jenkins.\n. ",
    "anndro": "Haha, Thanks for comment,, I know you can't update readme but I am new at github and pulled everything which i write :)\nI forked it for my project and I am using it with ldap and works very good,, I will continue to improve it if someone need but still I didnt get any message or comment. I think nobody use ldap, except me :)\n. Haha, Thanks for comment,, I know you can't update readme but I am new at github and pulled everything which i write :)\nI forked it for my project and I am using it with ldap and works very good,, I will continue to improve it if someone need but still I didnt get any message or comment. I think nobody use ldap, except me :)\n. ",
    "dustingraham": "@anndro I am using ldap to authenticate. I was trying to figure out how to check the throttle before checking the user. I looked at your implementation and I see you forcefully disable the throttle.\nI also like the idea of creating the user if no user is found, but I'm trying to think about how to keep throttling around as well. Could be a bit tricky. I guess this also exposes an issue with the master Sentry branch -- throttling may not be used if the user does not exist. I don't think there's a solution for this, just something to be aware of. So throttling protects against brute forcing a password, but not from guessing usernames.\nIn any case, I did want to say that I do use ldap. You're not the only one. I enjoyed reviewing how you implemented this, and I may do something similar.\n. Beautiful Ben. Thanks for the heads up.\n. @anndro I am using ldap to authenticate. I was trying to figure out how to check the throttle before checking the user. I looked at your implementation and I see you forcefully disable the throttle.\nI also like the idea of creating the user if no user is found, but I'm trying to think about how to keep throttling around as well. Could be a bit tricky. I guess this also exposes an issue with the master Sentry branch -- throttling may not be used if the user does not exist. I don't think there's a solution for this, just something to be aware of. So throttling protects against brute forcing a password, but not from guessing usernames.\nIn any case, I did want to say that I do use ldap. You're not the only one. I enjoyed reviewing how you implemented this, and I may do something similar.\n. Beautiful Ben. Thanks for the heads up.\n. ",
    "ronaldcastillo": "Sure, I will be committing the changes to the unit tests this evening.\n. Done. I also added 2 new unit tests which check that false is returned whenever the user is suspended or banned.\n. Sure, I will be committing the changes to the unit tests this evening.\n. Done. I also added 2 new unit tests which check that false is returned whenever the user is suspended or banned.\n. ",
    "stevemo": "With this fix every time you call the check method you make several database call ( 1 for the user + 1 for throttle) even if the user is already logged in. Is this suppose to be like this?\n. With this fix every time you call the check method you make several database call ( 1 for the user + 1 for throttle) even if the user is already logged in. Is this suppose to be like this?\n. ",
    "fbingha": "Ah, found my way here after wondering why my query count shot up and traced it back to Sentry::check() calls. I just updated and this hasn't been resolved.\n. Ah, found my way here after wondering why my query count shot up and traced it back to Sentry::check() calls. I just updated and this hasn't been resolved.\n. ",
    "jtgrimes": "I think having a separate function named inGroupNamed() makes for slightly more readable code, but that's an aesthetic preference.  Both ways work well.\n. I think Sentry::user()->findById() is confusing, since people would probably expect a user() function to return a User object.  The way I implemented this was just to have the Sentry class call its providers directly instead of sending them back to the user.  For example:\nclass Sentry {\n...\n   public function findUserById($id)\n   {\n       return $this->userProvider->findById($id);\n   } \n...\n}\n. I think having a separate function named inGroupNamed() makes for slightly more readable code, but that's an aesthetic preference.  Both ways work well.\n. I think Sentry::user()->findById() is confusing, since people would probably expect a user() function to return a User object.  The way I implemented this was just to have the Sentry class call its providers directly instead of sending them back to the user.  For example:\nclass Sentry {\n...\n   public function findUserById($id)\n   {\n       return $this->userProvider->findById($id);\n   } \n...\n}\n. ",
    "PhiloNL": "Fixed!\n. Np :) Thanks for accepting!\n. Fixed tests in #248 \n. Fixed!\n. Np :) Thanks for accepting!\n. Fixed tests in #248 \n. ",
    "happyDemon": "Sure, I'll fix it up tomorow, heading to bed atm.\nThanks for the quick reply :D\n. got groups added and tested, all that's left is testing the permissions and a final check for code style mistakes and it's ready to go ^^\n. seems like 29 previous commits got included here o.O\n. thanks man, appreciate it ^^\nYeah, next time I'll use a clean fork, I merged new commits before on my local fork before pushing mine, won't be doing that again -.-'\n. I'm willing to implement this for the Kohana driver if the tests get fixed ^^\n. Had to get to it some time xD took me long enough\nthanks for the merge ^^\nDoes it get linked in the readme when it's added to the site?\n. 5.5 doesn't seem like a good option, looking at its adoption rate amongst shared hosting providers.  Yaay for 5.4 support though\n. Sure, I'll fix it up tomorow, heading to bed atm.\nThanks for the quick reply :D\n. got groups added and tested, all that's left is testing the permissions and a final check for code style mistakes and it's ready to go ^^\n. seems like 29 previous commits got included here o.O\n. thanks man, appreciate it ^^\nYeah, next time I'll use a clean fork, I merged new commits before on my local fork before pushing mine, won't be doing that again -.-'\n. I'm willing to implement this for the Kohana driver if the tests get fixed ^^\n. Had to get to it some time xD took me long enough\nthanks for the merge ^^\nDoes it get linked in the readme when it's added to the site?\n. 5.5 doesn't seem like a good option, looking at its adoption rate amongst shared hosting providers.  Yaay for 5.4 support though\n. ",
    "kwolniak": "I still have a double query. How we see in the file: https://github.com/cartalyst/sentry/blob/master/src/Cartalyst/Sentry/Throttling/Eloquent/Provider.php there is a still old buggy code.\n. I still have a double query. How we see in the file: https://github.com/cartalyst/sentry/blob/master/src/Cartalyst/Sentry/Throttling/Eloquent/Provider.php there is a still old buggy code.\n. ",
    "mapb1990": "related with #197 \n. The repositories should not have a findAll() method?\n. Models override a \\Illuminate\\Database\\Eloquent/Model::__call method and preclude the use of some methods (\\Illuminate\\Database\\Eloquent\\Builder).\nthis is deliberate?\n. +1.\nHow far off is Sentry 3 from release?\n. yes, for example, when a user creates an instance, if the backend and there is an option to activate it during the creation or to create random test users via seeder.\nsorry my english.\n. related with #197 \n. The repositories should not have a findAll() method?\n. Models override a \\Illuminate\\Database\\Eloquent/Model::__call method and preclude the use of some methods (\\Illuminate\\Database\\Eloquent\\Builder).\nthis is deliberate?\n. +1.\nHow far off is Sentry 3 from release?\n. yes, for example, when a user creates an instance, if the backend and there is an option to activate it during the creation or to create random test users via seeder.\nsorry my english.\n. ",
    "AkenRoberts": "Just ran into this issue myself as well. Overwriting the relationship methods fixes it no problem, but I agree that it should inherit the model specified in the config.\nIt seems that we could use a similar convention as defining the model in Eloquent\\Provider::setModel() -- set a property with the default value, and a setter method, which would then be called via the service provider.\nIf that seems like an ideal way to go, I'd be happy to provide a pull request.\n. > Setup is one word\n\"Setup\" as a noun, as in \"That's a sweet computer setup!\", is one word. To set up something, as a verb, is two.\nThanks for the :+1: :)\n. Just ran into this issue myself as well. Overwriting the relationship methods fixes it no problem, but I agree that it should inherit the model specified in the config.\nIt seems that we could use a similar convention as defining the model in Eloquent\\Provider::setModel() -- set a property with the default value, and a setter method, which would then be called via the service provider.\nIf that seems like an ideal way to go, I'd be happy to provide a pull request.\n. > Setup is one word\n\"Setup\" as a noun, as in \"That's a sweet computer setup!\", is one word. To set up something, as a verb, is two.\nThanks for the :+1: :)\n. ",
    "GrahamCampbell": "I was going to do this before, but i held off because i wondered if you'd decided to do that on purpose.\n. Why would we want to hash passwords with md5?\n. @KossShtukert Please don't use MD5 hashing for passwords though...\n. This should be part of your previous pull request.\n. This should be part of your previous pull request.\n. +1 for this!\n. Looks good!\n. Can I just confirm that there will be an upgrade path from 2.0 to 3.0. Also, will there not be a 2.1 release?\n. I agree with @bencorlett. It's better to write your own implementations so you can access eager loading of relations and all kind or query methods before you send a request to the database server.\n. Could we have a v3.0.0-alpha5 tag with the latest fixes in?\n. How far off is Sentry 3 from release? Will swipe identity integration be going to a separate package?\n. Is a 2.1.2 release and a 3.0 alpha 6 release coming soon with the recent fixes?\n. @RyanThompson I think the issue holding the release is outdated docs.\n. What's going on here?\n. Hmmmm. I guess that means I'm going to have a to find another solution for my open source projects because I can't rely on people having access to sentry.\n. So is sentry 2 still going to be maintained?\n. Great. Thanks.\n. @kaamaru Please read https://medium.com/@Cartalyst/sentinel-by-cartalyst-b304d5e7ed87.\n. The description of the error in the exception is still wrong. It says \"true boolean\" instead if just \"boolean\".\n. See #339.\n. Cool.\n. Hmm. Those broken tests seem to be due to an upstream change, not my commit.\n. See http://php.net/manual/en/language.operators.precedence.php.\n&& and || have a higher precedence over and and or.\n. I just like to use those over the other ones to ensure I don't get caught out.\n. Squashing these commits into 1 would be good.\n. Tests are broken here. Also, probably better to submit this to the develop branch.\n. :+1: for moving to php 5.4.\n. I like the idea of moving straight to php 5.4. It has major advantages. \nA lot of people stuck on php 5.3 seem to be taking the jump to php 5.5.\nOn 02/03/2014 22:18, Ben Corlett wrote:\n\nI feel that would be a lost cause because why would Sentry 3 be \nmaintained if we released just a refractored Sentry 4. But, having \nsaid that I can see the merit in your ideas\nSent from my iPhone\nPlease excuse my brevity\n\nOn 3 Mar 2014, at 9:16 am, Paul Dixon notifications@github.com wrote:\nI understand the desire to move to 5.4 and a cleaner code base \n(traits are awesome) but if sentry 3.0 works with 5.3, can we not have \na 3.0 release with 5.3, then a 4.0 release (immediately after if \nneeded) for 5.4? That way the upgrade path will be a little easier and \npeople stuck on 5.3 wont miss out on the new release.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/cartalyst/sentry/pull/370#issuecomment-36469359.\n. I've also updated the tests for the new mockery too...\n. Lol. I tend not to bother for only two commits. I'd have squashed it if it was 3 or more.\n. Yeh, I know. :P\n. Ping @bencorlett.\n. Yep. That fixed it on travis.\n. I was going to do this before, but i held off because i wondered if you'd decided to do that on purpose.\n. Why would we want to hash passwords with md5?\n. @KossShtukert Please don't use MD5 hashing for passwords though...\n. This should be part of your previous pull request.\n. This should be part of your previous pull request.\n. +1 for this!\n. Looks good!\n. Can I just confirm that there will be an upgrade path from 2.0 to 3.0. Also, will there not be a 2.1 release?\n. I agree with @bencorlett. It's better to write your own implementations so you can access eager loading of relations and all kind or query methods before you send a request to the database server.\n. Could we have a v3.0.0-alpha5 tag with the latest fixes in?\n. How far off is Sentry 3 from release? Will swipe identity integration be going to a separate package?\n. Is a 2.1.2 release and a 3.0 alpha 6 release coming soon with the recent fixes?\n. @RyanThompson I think the issue holding the release is outdated docs.\n. What's going on here?\n. Hmmmm. I guess that means I'm going to have a to find another solution for my open source projects because I can't rely on people having access to sentry.\n. So is sentry 2 still going to be maintained?\n. Great. Thanks.\n. @kaamaru Please read https://medium.com/@Cartalyst/sentinel-by-cartalyst-b304d5e7ed87.\n. The description of the error in the exception is still wrong. It says \"true boolean\" instead if just \"boolean\".\n. See #339.\n. Cool.\n. Hmm. Those broken tests seem to be due to an upstream change, not my commit.\n. See http://php.net/manual/en/language.operators.precedence.php.\n&& and || have a higher precedence over and and or.\n. I just like to use those over the other ones to ensure I don't get caught out.\n. Squashing these commits into 1 would be good.\n. Tests are broken here. Also, probably better to submit this to the develop branch.\n. :+1: for moving to php 5.4.\n. I like the idea of moving straight to php 5.4. It has major advantages. \nA lot of people stuck on php 5.3 seem to be taking the jump to php 5.5.\n\nOn 02/03/2014 22:18, Ben Corlett wrote:\n\nI feel that would be a lost cause because why would Sentry 3 be \nmaintained if we released just a refractored Sentry 4. But, having \nsaid that I can see the merit in your ideas\nSent from my iPhone\nPlease excuse my brevity\n\nOn 3 Mar 2014, at 9:16 am, Paul Dixon notifications@github.com wrote:\nI understand the desire to move to 5.4 and a cleaner code base \n(traits are awesome) but if sentry 3.0 works with 5.3, can we not have \na 3.0 release with 5.3, then a 4.0 release (immediately after if \nneeded) for 5.4? That way the upgrade path will be a little easier and \npeople stuck on 5.3 wont miss out on the new release.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/cartalyst/sentry/pull/370#issuecomment-36469359.\n. I've also updated the tests for the new mockery too...\n. Lol. I tend not to bother for only two commits. I'd have squashed it if it was 3 or more.\n. Yeh, I know. :P\n. Ping @bencorlett.\n. Yep. That fixed it on travis.\n. \n",
    "ghost": "Fixed :).\n. Fixed :).\n. ",
    "mbeech": "I took it from https://github.com/JeffreyWay/Laravel-4-Generators/blob/master/composer.json\nIt seems like a good cover for all future versions. Shall I change it to 4.*?\nThanks for the merge.\n. I took it from https://github.com/JeffreyWay/Laravel-4-Generators/blob/master/composer.json\nIt seems like a good cover for all future versions. Shall I change it to 4.*?\nThanks for the merge.\n. ",
    "petercoles": "For reference, this is the offending Laravel commit: https://github.com/laravel/framework/commit/22fc89fa1db3fe42b4dccd28f5dce124be88d46e\n. What are you passing into the method as a parameter? More specifically, are you passing in a group (rather than just the name of a group) and have you checked that the group exists?\nThis might help: https://cartalyst.com/manual/sentry/users/find#find-all-the-users-in-a-group\n. For reference, this is the offending Laravel commit: https://github.com/laravel/framework/commit/22fc89fa1db3fe42b4dccd28f5dce124be88d46e\n. What are you passing into the method as a parameter? More specifically, are you passing in a group (rather than just the name of a group) and have you checked that the group exists?\nThis might help: https://cartalyst.com/manual/sentry/users/find#find-all-the-users-in-a-group\n. ",
    "dambridge": "Why do I get a \"Call to a member function users() on a non-object\" on this function?\n. @petercoles Yep, you got it, I was just passing in the name from a URI segment. Somewhere along the line I missed the plot on needing to pass in the actual object.\n. Why do I get a \"Call to a member function users() on a non-object\" on this function?\n. @petercoles Yep, you got it, I was just passing in the name from a URI segment. Somewhere along the line I missed the plot on needing to pass in the actual object.\n. ",
    "Weeblewonder": "Fixed me being an idiot and a naughty boy :(, thanks @brunogaspar for pointing it out.\nToo used to coding in my own bubble\n. Fixed me being an idiot and a naughty boy :(, thanks @brunogaspar for pointing it out.\nToo used to coding in my own bubble\n. ",
    "koss-shtukert": "Many systems use md5 encrypting passwords.\nFor example, you need old project move to the new (Laravel + Sentry)\nthere is a need to move your database and with it the users table.\nIf users table have many records (> 3k) very difficult to change their password with a new method of hashing passwords.\nWith md5 encryption password in Sentry, we will not do this.\n. Great news, thanks!\nThis is very much simplify the migration to a new system.\n. Many systems use md5 encrypting passwords.\nFor example, you need old project move to the new (Laravel + Sentry)\nthere is a need to move your database and with it the users table.\nIf users table have many records (> 3k) very difficult to change their password with a new method of hashing passwords.\nWith md5 encryption password in Sentry, we will not do this.\n. Great news, thanks!\nThis is very much simplify the migration to a new system.\n. ",
    "marcvdm": "Sorry for the code styles! I think it would be better if you did it after. Still trying to get a hang of the whole pull request method.\n. > I'd call it findByUser() not findByUserModel().\nI guess that would be a better name for it.\n\nUnless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about.\n\nI did not remove the function, i merely changed it so it calls the new function.\nIn the Sentry->check() function i changed which function it calls but everyone is still free to call the findUserById method . Its result stays the same.\n. I see i totally forgot about the kohana implementation! Doing that as we speak!\nAre there any other changes you guys would like beside the naming of findByUserModel to findByUser?\n. To continue on the #287 discussion.\nI can make a driver called StrictPermissions and have the implementation i explained in there!\nBasically you first check the user for the permission! if the user's permission is set (true or false) there is no need to check the user groups for the permission.\nIf the permission is not set on the user you loop through the groups and when a true is found you return that after the loop or when a false is found you return that straight away.\nI'll try and make a pull request tomorrow if needed\n. I was already working on an implementation for the strict driver.\nWhat i was doing is separating the userPermissions from the groupPermissions this because if you check a permission that exists in the userPemissions there is no need to get the group permissions.\n. https://gist.github.com/marcvdm/7536701\nThat's what i made so far!\n. the code in the gist was before your commit :)\nYour right about the fact that it is simpler to implement but now you always get the groups regardless if it's needed or not.\nI think i have to ease down on my nitpicking when it comes to less queries. :p\nI'll put in the code and make a pull request\n. You have been very busy i see! Good job @bencorlett \n. While installing the sentry demo app i got the following error\nGenerating autoload files\njson\n{\"error\":{\"type\":\"PDOException\",\"message\":\"SQLSTATE[HY000] [1049] Unknown database database'\",\"file\":\"C:\\\\localhost\\\\www\\\\sentry\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connectors\\\\Connector.php\",\"line\":47}}\nScript php artisan optimize handling the post-install-cmd event returned with an error\nThis was before setting up the database config\nfixed it by editing the config and updating it again! will test the app now\n. @GrahamCampbell https://medium.com/@Cartalyst/sentinel-by-cartalyst-b304d5e7ed87\n. Sorry for the code styles! I think it would be better if you did it after. Still trying to get a hang of the whole pull request method.\n. > I'd call it findByUser() not findByUserModel().\nI guess that would be a better name for it.\n\nUnless we release Sentry 3.0 (which we are not), the findByUserId() method can not be removed - for backwards compatibility. We need to be careful to stick to semver versioning, which is something we spruke about.\n\nI did not remove the function, i merely changed it so it calls the new function.\nIn the Sentry->check() function i changed which function it calls but everyone is still free to call the findUserById method . Its result stays the same.\n. I see i totally forgot about the kohana implementation! Doing that as we speak!\nAre there any other changes you guys would like beside the naming of findByUserModel to findByUser?\n. To continue on the #287 discussion.\nI can make a driver called StrictPermissions and have the implementation i explained in there!\nBasically you first check the user for the permission! if the user's permission is set (true or false) there is no need to check the user groups for the permission.\nIf the permission is not set on the user you loop through the groups and when a true is found you return that after the loop or when a false is found you return that straight away.\nI'll try and make a pull request tomorrow if needed\n. I was already working on an implementation for the strict driver.\nWhat i was doing is separating the userPermissions from the groupPermissions this because if you check a permission that exists in the userPemissions there is no need to get the group permissions.\n. https://gist.github.com/marcvdm/7536701\nThat's what i made so far!\n. the code in the gist was before your commit :)\nYour right about the fact that it is simpler to implement but now you always get the groups regardless if it's needed or not.\nI think i have to ease down on my nitpicking when it comes to less queries. :p\nI'll put in the code and make a pull request\n. You have been very busy i see! Good job @bencorlett \n. While installing the sentry demo app i got the following error\nGenerating autoload files\njson\n{\"error\":{\"type\":\"PDOException\",\"message\":\"SQLSTATE[HY000] [1049] Unknown database database'\",\"file\":\"C:\\\\localhost\\\\www\\\\sentry\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connectors\\\\Connector.php\",\"line\":47}}\nScript php artisan optimize handling the post-install-cmd event returned with an error\nThis was before setting up the database config\nfixed it by editing the config and updating it again! will test the app now\n. @GrahamCampbell https://medium.com/@Cartalyst/sentinel-by-cartalyst-b304d5e7ed87\n. ",
    "JohnMaguire": "Is there any estimated release date for Sentry 3? I saw that Sentry 2 will not be updated to support Laravel 4.1, which should be coming out before the end of the month. I desperately need one of the features in Laravel 4.1 and am currently held back only by Sentry.\n. I've been told by multiple people on IRC that Sentry 2 will not be getting\nLaravel 4 support. I offered to do it myself and submit a pull request.\nOn Nov 20, 2013 5:40 AM, \"Ben Corlett\" notifications@github.com wrote:\n\nRelease date? No.\nOnce Laravel 4.1's API stops changing daily, we will add support to Sentry\n2 (which involves just adjusting cookies and sessions).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-28877681\n.\n. I was told it would likely not be accepted upstream due to the way it would\nlikely need to be implemented by BrunoG, since Sentry 3 would be available\nsoon. Anyway I'll see what I can do, if for my own benefit at least. :)\nOn Nov 22, 2013 1:04 AM, \"Ben Corlett\" notifications@github.com wrote:\nA PR for 4.0 and 4.1 support is always welcome for Sentry 2 :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29050828\n.\n. Sure. Looking deeper into it, it seems like if switching to the 4.1 cookie\nsyntax is not backwards compatible with 4.0 which I actually expect it will\nbe, there is a variable defined within Laravel to check the version of the\nframework running.\nOn Nov 22, 2013 1:20 AM, \"Bruno Gaspar\" notifications@github.com wrote:\nWell, yeah the way you mentioned on IRC on how you would tackle the issue\nis a bit hacky for me, that's why i said it would most likely not be\nmerged, but to be honest i care less on how it is done, as long as it is\nfixed and works with both versions i'm \"ok\" with it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29051250\n.\n. @bencorlett My thought was originally to check whether the get() method existed on the CookieJar, but that seemed like a dirty hack. Instead, if necessary, we can check the Laravel version and instance it properly based on that. However, it is possible that the new preferred method for Laravel 4.1 will be backwards compatible with Laravel 4.0, in which case it would simply require an update to to the current class. Again, I haven't had a ton of time to look at it yet.\n. As I understand it that error should not be thrown on install though. That\ndoesn't happen on Sentry 2, e.g.\nOn Nov 26, 2013 11:05 PM, \"Ben Corlett\" notifications@github.com wrote:\n@marcvdm https://github.com/marcvdm - yes - you will need to configure\nyour database, we can't do that for you\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29358808\n.\n. Oh, I see what you're saying. It's due to the way the demo app is setup.\nOn Nov 26, 2013 11:29 PM, \"Ben Corlett\" notifications@github.com wrote:\nA stock Laravel app with a dependency of cartalyst/sentry (or any* other\npackage) shouldn't touch the database, only if something is hooked on each\nrequest to hit it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29359492\n.\n. Is there any estimated release date for Sentry 3? I saw that Sentry 2 will not be updated to support Laravel 4.1, which should be coming out before the end of the month. I desperately need one of the features in Laravel 4.1 and am currently held back only by Sentry.\n. I've been told by multiple people on IRC that Sentry 2 will not be getting\nLaravel 4 support. I offered to do it myself and submit a pull request.\nOn Nov 20, 2013 5:40 AM, \"Ben Corlett\" notifications@github.com wrote:\nRelease date? No.\nOnce Laravel 4.1's API stops changing daily, we will add support to Sentry\n2 (which involves just adjusting cookies and sessions).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-28877681\n.\n. I was told it would likely not be accepted upstream due to the way it would\nlikely need to be implemented by BrunoG, since Sentry 3 would be available\nsoon. Anyway I'll see what I can do, if for my own benefit at least. :)\nOn Nov 22, 2013 1:04 AM, \"Ben Corlett\" notifications@github.com wrote:\nA PR for 4.0 and 4.1 support is always welcome for Sentry 2 :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29050828\n.\n. Sure. Looking deeper into it, it seems like if switching to the 4.1 cookie\nsyntax is not backwards compatible with 4.0 which I actually expect it will\nbe, there is a variable defined within Laravel to check the version of the\nframework running.\nOn Nov 22, 2013 1:20 AM, \"Bruno Gaspar\" notifications@github.com wrote:\nWell, yeah the way you mentioned on IRC on how you would tackle the issue\nis a bit hacky for me, that's why i said it would most likely not be\nmerged, but to be honest i care less on how it is done, as long as it is\nfixed and works with both versions i'm \"ok\" with it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29051250\n.\n. @bencorlett My thought was originally to check whether the get() method existed on the CookieJar, but that seemed like a dirty hack. Instead, if necessary, we can check the Laravel version and instance it properly based on that. However, it is possible that the new preferred method for Laravel 4.1 will be backwards compatible with Laravel 4.0, in which case it would simply require an update to to the current class. Again, I haven't had a ton of time to look at it yet.\n. As I understand it that error should not be thrown on install though. That\ndoesn't happen on Sentry 2, e.g.\nOn Nov 26, 2013 11:05 PM, \"Ben Corlett\" notifications@github.com wrote:\n@marcvdm https://github.com/marcvdm - yes - you will need to configure\nyour database, we can't do that for you\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29358808\n.\n. Oh, I see what you're saying. It's due to the way the demo app is setup.\nOn Nov 26, 2013 11:29 PM, \"Ben Corlett\" notifications@github.com wrote:\nA stock Laravel app with a dependency of cartalyst/sentry (or any* other\npackage) shouldn't touch the database, only if something is hooked on each\nrequest to hit it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/cartalyst/sentry/pull/317#issuecomment-29359492\n.\n. \n",
    "tomschlick": "Whats the timeline on this? It looks from the checklist and the builds passing that you've taken care of what you set out to do...\n. Ok awesome. I'll give it a shot. Thanks!\n. Why the change to something separate instead of including it in arsenal? I have no problem with the change to paid, just wondering why its not bundled like the rest of the packages...\n. @drsii awesome, thanks!\n. Whats the timeline on this? It looks from the checklist and the builds passing that you've taken care of what you set out to do...\n. Ok awesome. I'll give it a shot. Thanks!\n. Why the change to something separate instead of including it in arsenal? I have no problem with the change to paid, just wondering why its not bundled like the rest of the packages...\n. @drsii awesome, thanks!\n. ",
    "lazychaser": "When?\n. The release! When it's going to be stable? The changelog? Api changes?\n. Thanks, I'll try it.\n. When?\n. The release! When it's going to be stable? The changelog? Api changes?\n. Thanks, I'll try it.\n. ",
    "shakaraba": "There is a typo in the file src/Checkpoints/ThrottleCheckpoint.php\nIn the Line 125: \nif ($ipDelay > 0)\nmust be:\nif ($userDelay > 0)\nSomeone knows how to get an userlist from Sentry 3? Thanks.\n. There is a typo in the file src/Checkpoints/ThrottleCheckpoint.php\nIn the Line 125: \nif ($ipDelay > 0)\nmust be:\nif ($userDelay > 0)\nSomeone knows how to get an userlist from Sentry 3? Thanks.\n. ",
    "varghesejacob": "is there anyway to throw the ThrottlingException after the number of invalid logins has passed the threshold number? Right now, the ThrottlingException is thrown only after the invalid logins has passed the threshold number AND the user attempts a valid login, otherwise it will just return invalid username/password no matter how many number of invalid logins have been attempted.\nI guess the way it is set up now, the throttling checkpoint is only checked when user provides valid username and password, I'd like it to check when the user provides just a valid username\n. is there anyway to throw the ThrottlingException after the number of invalid logins has passed the threshold number? Right now, the ThrottlingException is thrown only after the invalid logins has passed the threshold number AND the user attempts a valid login, otherwise it will just return invalid username/password no matter how many number of invalid logins have been attempted.\nI guess the way it is set up now, the throttling checkpoint is only checked when user provides valid username and password, I'd like it to check when the user provides just a valid username\n. ",
    "dwightwatson": "Will any change be required here for the remember_token column that comes in Laravel 4.1.26, or is that completely separate from the token used by Sentry?\n. Awesome, great to hear. Thanks!\n. Will any change be required here for the remember_token column that comes in Laravel 4.1.26, or is that completely separate from the token used by Sentry?\n. Awesome, great to hear. Thanks!\n. ",
    "RyanThompson": "Hey @bencorlett  what's up with this? Ready to rock n roll?\n. Ya we got some things cleared up that will help out movement forward with docs now - there are a couple minor things in 2.3-beta1 that are outstanding and then I need to update the streams section of docs and away we go.\n. Lol wait a tick.. Im in the damn wrong thread. How did I get here from PyroCMS!? Old docs = same issue with our 2.3 release.\nCarry on ^_^\n. Hey @bencorlett  what's up with this? Ready to rock n roll?\n. Ya we got some things cleared up that will help out movement forward with docs now - there are a couple minor things in 2.3-beta1 that are outstanding and then I need to update the streams section of docs and away we go.\n. Lol wait a tick.. Im in the damn wrong thread. How did I get here from PyroCMS!? Old docs = same issue with our 2.3 release.\nCarry on ^_^\n. ",
    "joshuajabbour": "Kinda disappointing, considering how slow and uncommunicative the development and release process was for this (and other Arsenal packages). Not sure it's something I'd pay for. I understand the need for a revenue stream, but when paying for code I do expect better than what I received while an Arsenal subscriber.\n. @drsii You're mistakenly using quantity as a useful metric. Many of the packages are only really useful when using the entire Platform app. And while I could use some separately, with the relatively poor documentation, I need to figure out what each even does and how to use it on my own. Not what I expect from a paid product.\nAs for \"too slow\"... all one has to do is read back through this thread. For the last 3-6 months this package has been \"relatively stable\" and will be released \"once we have time to finish the docs and tests, not a big priority atm\". This is really frustrating when the support model is time-based subscriptions.\nDuring my three-month subscription, relatively little development occurred on the two packages I was most interested in (API and Sentry), and communication was always of the sort \"it's coming soon\". Not something that is useful to me when I'm trying to build client projects, and need to make reliable estimates. Furthermore, even though contributions are appreciated, the subscription model means that I'm hesitant to get too invested in these packages, or to spend too much time contributing my development resources for something I'll still need to continually pay for. Sorta the worst of both worlds (open source vs. paid/closed source)...\nUltimately I did not use either package, because stable releases did not look to be coming soon. And therefore let my subscription expire. Anyway, this is just meant as feedback on why I'd be hesitant to sign up again without a clear value proposition. I'm glad you are experimenting with ways to make open-source development sustainable, and I applaud and fully support that, I just don't think you've nailed it yet...\n. Oh, and I tested in MySQL as well, so everything still works as expected there. Not that anything really fundamentally changed...\n. Kinda disappointing, considering how slow and uncommunicative the development and release process was for this (and other Arsenal packages). Not sure it's something I'd pay for. I understand the need for a revenue stream, but when paying for code I do expect better than what I received while an Arsenal subscriber.\n. @drsii You're mistakenly using quantity as a useful metric. Many of the packages are only really useful when using the entire Platform app. And while I could use some separately, with the relatively poor documentation, I need to figure out what each even does and how to use it on my own. Not what I expect from a paid product.\nAs for \"too slow\"... all one has to do is read back through this thread. For the last 3-6 months this package has been \"relatively stable\" and will be released \"once we have time to finish the docs and tests, not a big priority atm\". This is really frustrating when the support model is time-based subscriptions.\nDuring my three-month subscription, relatively little development occurred on the two packages I was most interested in (API and Sentry), and communication was always of the sort \"it's coming soon\". Not something that is useful to me when I'm trying to build client projects, and need to make reliable estimates. Furthermore, even though contributions are appreciated, the subscription model means that I'm hesitant to get too invested in these packages, or to spend too much time contributing my development resources for something I'll still need to continually pay for. Sorta the worst of both worlds (open source vs. paid/closed source)...\nUltimately I did not use either package, because stable releases did not look to be coming soon. And therefore let my subscription expire. Anyway, this is just meant as feedback on why I'd be hesitant to sign up again without a clear value proposition. I'm glad you are experimenting with ways to make open-source development sustainable, and I applaud and fully support that, I just don't think you've nailed it yet...\n. Oh, and I tested in MySQL as well, so everything still works as expected there. Not that anything really fundamentally changed...\n. ",
    "asoorm": "Half baked packages with no concistent docs\n. @nasaorc - \"For 30 Days we will be accepting free access applications from all those currently using Sentry.\"\n. Aaah... Ok - that explains why everything appears to be broken when I installed. There is no mention of sentry3 in the docs / on github. I am having problems installing. e.g.  \n[BadMethodCallException]                                         \n  Call to undefined method Cartalyst\\Sentry\\Sentry::createGroup()\nIs there any documentation on how to do stuff like creating a group or a user with sentry 3?\n. Personally, I am happy with whatever, however please consider the following in relation to PHP stability, testing and security before making a decision:\nEnterprise or Server distributions of Linux tend to lag behind on\nversion numbers of software like PHP.  This reflects the need for a well\ntested and stable platform to ensure that the services provided will not\nexperience unexpected downtime.  As a result, the latest versions of\nRedhat and CentOS currently include PHP version numbers up to 5.3, and\neven the yet-to-be-released RedHat Enterprise 7 is only expected to ship\nPHP 5.4.  The same is true of other major Enterprise distributions -\nthey do not include the 5.5 series of PHP because it was not considered\nsufficiently tested at the time of release.\nThis means that for some hosting servers, PHP 5.4 and 5.5 would have to be manually compiled / updated and would not come in the form of official RPM packages, but in the form of 3rd party packages.\nDepending on the data stored within the application - e.g. those which require compliance / audit / certification such as HIPAA or PCI - Many hosting providers will not be able to provide any form of guarantee of stability or security for 3rd party package installations of PHP because they were not released as part of the official Linux distribution.\nFurther, do you really want to force people to have to install a newer version of PHP from a 3rd party repo because it is not actually available in their native Linux Distribution?\n. Half baked packages with no concistent docs\n. @nasaorc - \"For 30 Days we will be accepting free access applications from all those currently using Sentry.\"\n. Aaah... Ok - that explains why everything appears to be broken when I installed. There is no mention of sentry3 in the docs / on github. I am having problems installing. e.g.  \n[BadMethodCallException]                                         \n  Call to undefined method Cartalyst\\Sentry\\Sentry::createGroup()\nIs there any documentation on how to do stuff like creating a group or a user with sentry 3?\n. Personally, I am happy with whatever, however please consider the following in relation to PHP stability, testing and security before making a decision:\nEnterprise or Server distributions of Linux tend to lag behind on\nversion numbers of software like PHP.  This reflects the need for a well\ntested and stable platform to ensure that the services provided will not\nexperience unexpected downtime.  As a result, the latest versions of\nRedhat and CentOS currently include PHP version numbers up to 5.3, and\neven the yet-to-be-released RedHat Enterprise 7 is only expected to ship\nPHP 5.4.  The same is true of other major Enterprise distributions -\nthey do not include the 5.5 series of PHP because it was not considered\nsufficiently tested at the time of release.\nThis means that for some hosting servers, PHP 5.4 and 5.5 would have to be manually compiled / updated and would not come in the form of official RPM packages, but in the form of 3rd party packages.\nDepending on the data stored within the application - e.g. those which require compliance / audit / certification such as HIPAA or PCI - Many hosting providers will not be able to provide any form of guarantee of stability or security for 3rd party package installations of PHP because they were not released as part of the official Linux distribution.\nFurther, do you really want to force people to have to install a newer version of PHP from a 3rd party repo because it is not actually available in their native Linux Distribution?\n. ",
    "calumks": "\"For 30 Days we will be accepting free access applications from all those currently using Sentry. That\u2019s right, free access for life if you sign up during the grace period (limited to 500 users).\"\nWhen will this grace period be? How do I sign up?\nThanks!\n. @GrahamCampbell  Noscript made it hard to see the link :P. I think I need to get some more sleep! \nThanks again!\n. \"For 30 Days we will be accepting free access applications from all those currently using Sentry. That\u2019s right, free access for life if you sign up during the grace period (limited to 500 users).\"\nWhen will this grace period be? How do I sign up?\nThanks!\n. @GrahamCampbell  Noscript made it hard to see the link :P. I think I need to get some more sleep! \nThanks again!\n. ",
    "nasaorc": "Will you adjust the price, or give a discount to those who already using Sentry package? $99 USD is a bit expensive and I might will migrate to another authentication library.\n. @MangoMM Yes, I saw it, but only 500 quota only and all filled\n. Will you adjust the price, or give a discount to those who already using Sentry package? $99 USD is a bit expensive and I might will migrate to another authentication library.\n. @MangoMM Yes, I saw it, but only 500 quota only and all filled\n. ",
    "trideout": "According to the 4.1 changelog, the get method in the jar object will still work as expected, however the new method is recommended. Can we use $this->jar->get() for the time being until the functionality is depricated?\n. According to the 4.1 changelog, the get method in the jar object will still work as expected, however the new method is recommended. Can we use $this->jar->get() for the time being until the functionality is depricated?\n. ",
    "suwardany": "Thanks @joshuajabbour \n. Hello @briedis, thanks for your PR.\nThis shouldn't be handled by Sentry, that is dependent on your environment.\n. Thanks @joshuajabbour \n. Hello @briedis, thanks for your PR.\nThis shouldn't be handled by Sentry, that is dependent on your environment.\n. ",
    "Anahkiasen": ":+1: \n. :+1: \n. ",
    "dmlogic": "Absolutely. I actually think 5.5 is an option worth considering\n. Absolutely. I actually think 5.5 is an option worth considering\n. ",
    "akashivskyy": ":+1:\n. :+1:\n. ",
    "Gavrisimo": ":+1: on 5.4 and totally agree with @dmlogic\n. :+1: on 5.4 and totally agree with @dmlogic\n. ",
    "rauanmayemir": "+1\n. +1\n. ",
    "levacic": "+1\nI'm perfectly fine with 5.5 as well (since I have it available both in development and production environments), but I wouldn't go there unless it's an actual dependency and you use some of its features.\n. +1\nI'm perfectly fine with 5.5 as well (since I have it available both in development and production environments), but I wouldn't go there unless it's an actual dependency and you use some of its features.\n. ",
    "maximebeaudoin": "I think you should always follow the minimum supported version of PHP, if you want to bump the PHP version required. For now, the minimum supported php version is 5.4 so, go on !\n. I think you should always follow the minimum supported version of PHP, if you want to bump the PHP version required. For now, the minimum supported php version is 5.4 so, go on !\n. ",
    "huglester": "One problem about this is that we won't be able run this with hiphop-vm, but we can always stick to laravel 4.1 and sentry 2.* untill 5.4 is available in hiphop-vm\nThanks for your efforts\n. I see thanks. You are right, then probably only the forget() method should be altered. Anyway I can't make the remember thing work, my remember_me field is empty thenever I pass true/false to $remember param.\n. One problem about this is that we won't be able run this with hiphop-vm, but we can always stick to laravel 4.1 and sentry 2.* untill 5.4 is available in hiphop-vm\nThanks for your efforts\n. I see thanks. You are right, then probably only the forget() method should be altered. Anyway I can't make the remember thing work, my remember_me field is empty thenever I pass true/false to $remember param.\n. ",
    "mintbridge": "I understand the desire to move to 5.4 and a cleaner code base (traits are awesome) but if sentry 3.0 works with 5.3, can we not have a 3.0 release with 5.3, then a 4.0 release (immediately after if needed) for 5.4? That way the upgrade path will be a little easier and people stuck on 5.3 wont miss out on the new release.\n. It does have major advantages but none of them are needed in the 3.0 api as yet. It doesn't seem like it would be much work to publish a 3.0 then immediately deprecate it and publish a 4.0. That way if the community wanted to maintain and support a forked version for 5.3 they could do\n. I understand the desire to move to 5.4 and a cleaner code base (traits are awesome) but if sentry 3.0 works with 5.3, can we not have a 3.0 release with 5.3, then a 4.0 release (immediately after if needed) for 5.4? That way the upgrade path will be a little easier and people stuck on 5.3 wont miss out on the new release.\n. It does have major advantages but none of them are needed in the 3.0 api as yet. It doesn't seem like it would be much work to publish a 3.0 then immediately deprecate it and publish a 4.0. That way if the community wanted to maintain and support a forked version for 5.3 they could do\n. ",
    "dbrmr": ":+1: for php 5.4\nVPS-es are as cheap as Shared Hosting or cheaper.\n. :+1: for php 5.4\nVPS-es are as cheap as Shared Hosting or cheaper.\n. ",
    "ssx": "No problem Bruno, was showing a fellow dev the docs and noticed it then. :)\n. No problem Bruno, was showing a fellow dev the docs and noticed it then. :)\n. ",
    "Lavoaster": "@brunogaspar http://laravel.com/docs/eloquent#date-mutators\nWithout actually checking this. It could be that after those methods are called if they attempt to use the properties as a Carbon object, it will fail.\n. @brunogaspar http://laravel.com/docs/eloquent#date-mutators\nWithout actually checking this. It could be that after those methods are called if they attempt to use the properties as a Carbon object, it will fail.\n. ",
    "sjamaan": "The reason I did that is because the test suite is mocking so much that I had a very difficult time writing tests which verify correct behaviour of the cache. IMHO it would be better to mock out only the storage backend implementations so that the relationships are also tested correctly, but that would require a complete rework of the tests.\nBy putting the cache clearing into separate methods, the tests can check that those methods get invoked. If you have some other way to make the tests actually verify that the data is cleared, that would be fine too, of course.\n. The reason I did that is because the test suite is mocking so much that I had a very difficult time writing tests which verify correct behaviour of the cache. IMHO it would be better to mock out only the storage backend implementations so that the relationships are also tested correctly, but that would require a complete rework of the tests.\nBy putting the cache clearing into separate methods, the tests can check that those methods get invoked. If you have some other way to make the tests actually verify that the data is cleared, that would be fine too, of course.\n. ",
    "Dexus": ":+1: \n. :+1: \n. ",
    "paulofreitas": "Glad to be contributing here again! :)\n. Glad to be contributing here again! :)\n. ",
    "anhskohbo": "Sr, my fault. ^^\n\n. Sr, my fault. ^^\n\n. ",
    "naumanjkhan": "@brunogaspar \n. @brunogaspar \n. ",
    "stefanmajoor": "The actual error is in the put method. This fix fixes only half the problem, and does this badly. Rather than fixing the problem, this fixes one of the symptoms. The change should be made in the put method. I created a pull request for this, which somehow did not pass the unit tests,  because the CI driver failed. Maybe you could have a look at that (https://github.com/cartalyst/sentry/pull/471)\n. The actual error is in the put method. This fix fixes only half the problem, and does this badly. Rather than fixing the problem, this fixes one of the symptoms. The change should be made in the put method. I created a pull request for this, which somehow did not pass the unit tests,  because the CI driver failed. Maybe you could have a look at that (https://github.com/cartalyst/sentry/pull/471)\n. ",
    "xjchengo": "I cannot figure out why Cartalyst\\Sentry\\Tests\\NativeHasherTest::testExceptionIsThrownIfHasherFails failed when php version is less than 5.5.0.\n. I cannot figure out why Cartalyst\\Sentry\\Tests\\NativeHasherTest::testExceptionIsThrownIfHasherFails failed when php version is less than 5.5.0.\n. ",
    "hmaurer": "Hello! What about now since Laravel 5 has been released? \n. Hello! What about now since Laravel 5 has been released? \n. ",
    "StarpTech": "Otherwise, the Facade cannot be resolved by Laravel 5. An Exception is thrown Sentry::authenticate could not be found.\n. Oh, that was my mistake. During the migration to L5 I forgot to import the ServiceProvider.\n. Otherwise, the Facade cannot be resolved by Laravel 5. An Exception is thrown Sentry::authenticate could not be found.\n. Oh, that was my mistake. During the migration to L5 I forgot to import the ServiceProvider.\n. ",
    "briedis": "I'm sorry, I'm new to this. To which branch should I request a pull request for Laravel 5?\n. I'm sorry, I'm new to this. To which branch should I request a pull request for Laravel 5?\n. ",
    "addelindh": "I would very much appreciate some indication of whether this patch will be considered at all, or if you are simply not accepting commits because Sentry is deprecated (last commit Nov 26, 2015).\nCheers,\nAndreas\n. I would very much appreciate some indication of whether this patch will be considered at all, or if you are simply not accepting commits because Sentry is deprecated (last commit Nov 26, 2015).\nCheers,\nAndreas\n. ",
    "mdwheele": "If I modify to return false rather than throw exception does this resolve the BC issue? I feel like accepting null reset tokens is more of an oversight rather than a feature. Returning false maintains the current contract unless allowing null reset codes was part of that contract to begin with. \nThoughts?\n. @drsii I went ahead and changed the mitigation to return false if an empty reset code is provided. This maintains a boolean return contract while patching the security hole that seems incidental from a schema choice made long ago. I think this is a reasonable compromise and I (as a user of this product, still) would not take issue with this change being in current major releases.\n. > I don't think you need to use empty() here as a simple if check can perform the same and keeps consistency.\nSounds good. I've modified as suggested and updated Sentry\\Users\\Kohana\\User as requested in 006b476.\n. If I modify to return false rather than throw exception does this resolve the BC issue? I feel like accepting null reset tokens is more of an oversight rather than a feature. Returning false maintains the current contract unless allowing null reset codes was part of that contract to begin with. \nThoughts?\n. @drsii I went ahead and changed the mitigation to return false if an empty reset code is provided. This maintains a boolean return contract while patching the security hole that seems incidental from a schema choice made long ago. I think this is a reasonable compromise and I (as a user of this product, still) would not take issue with this change being in current major releases.\n. > I don't think you need to use empty() here as a simple if check can perform the same and keeps consistency.\nSounds good. I've modified as suggested and updated Sentry\\Users\\Kohana\\User as requested in 006b476.\n. ",
    "BackEndTea": "Would it be possible to add a release tag for this? \nCurrently if i have \"cartalyst/sentry\": \"2.1.*\" in my composer.json i don't get this security patch.. Thanks\n. Would it be possible to add a release tag for this? \nCurrently if i have \"cartalyst/sentry\": \"2.1.*\" in my composer.json i don't get this security patch.. Thanks\n. "
}