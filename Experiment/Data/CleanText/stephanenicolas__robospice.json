{
    "jeromevdl": "Don't think we'll merge because of too many diff (between octo git and github). You should do the fix on github, not on octo. Or we'll do it.\n. https://developers.google.com/protocol-buffers/docs/overview?hl=fr\n. duplicate of #108 \n. OK, sorry for the issue ;) Maybe we should upgrade our version :)\n. ",
    "stephanenicolas": "Hello,\nthank you for submitting this issue (and trying robospice) and using RoboSpice. We are actually actively hacking RoboSpice. There are gonna be substantial changes in the persistence layer. We will take you feature request into account. \nWhat do you think if we had a second constructor to RequestProcessor in order to provide the instance with a given ExecutorService ?\nThen we could add a factory method inside the ContentService class (that's gonna be renamed to SpiceService) in order to create the RequestProcessor. Creating a custom service would allow to override this factory method and supply the request processor a custom ExectuorService ?\nSorry for the delay, I must redirect my emails from git hub to my professional account to be more reactive.\n. That's fine though. We will include this feature in 1.1, it's planned to be released for Droid Con.\nThx for your interest. \nAnd what did you think of the lib as a whole ? V1.0 gives a pretty good idea of RoboSpice, but we think V1.1 will really rock :)\n. Thanks for this feedback Riccardo.\nWe have begun a talk on a logging solution. We want to keep spice simple\nand lightweight, but if you know of a good logging framework, let us know.\nPersonnaly, I really like the one inside roboguice, but it comes with all\nRoboguice and not as a separate module and it's too heavy as a dependency.\nWe will open a discussion group on google.\nThanks,\n S.\n2012/10/19 Riccardo Ciovati notifications@github.com\n\nAs far as i used it i think it's a great library! I'll provide more\nfeedbacks during the next weeks. Meanwhile, thanks very much! :)\nA couple thing i'm thinking about:\n- it would be useful a way to disable logcat logging.\n- it would be useful to create a Google Group where discuss about\n  library usage.\n\u2014\n  Reply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/2#issuecomment-9599591.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Ricardo, \nthe RoboSpice discussion group is now up and running : \nhttps://groups.google.com/forum/?fromgroups#!forum/robospice\nYou are more than welcome :)\nSt\u00e9phane\n. This feature is part of the V1.1 release. \n. You are absolutely right. There is something to do here. I got the feeling that take() would be solution, and calling interrupt() would be a nice solution just after setting the isStopped boolean flag to true. That could be a gracefull way to stop the thread while it is in its waiting state.\nWhat do you think of it ? I am gonna try it if I can find some time to code during DroidCon Uk.\nThanks for reporting this issue Riccardo :)\n. Yes ! That worked. Cpu usage is kept low (0%) is no request are sent. Thanks for finding this. In will be part of 1.1.1\n. Yes, I hope to release V1.2 this week, before sunday on maven central.\n2012/11/15 Riccardo Ciovati notifications@github.com\n\nAny plan for pushing 1.1.1 on maven central?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/5#issuecomment-10408982.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. It is released ;)\nIt should be on maven cenrtal within minutes now.\nSt\u00e9phane\n2012/11/15 Riccardo Ciovati notifications@github.com\n\nGreat, thanks very much :-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/5#issuecomment-10410966.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. St\u00e9phane, not St\u00e9phanie ;)\nlol\nThanks again for your feedback, I hope you will like this version as well.\nSt\u00e9phane\n2012/11/15 Riccardo Ciovati notifications@github.com\n\nThanks very much Stephanie :-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/5#issuecomment-10428605.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. No trouble ;)\n2012/11/15 Riccardo Ciovati notifications@github.com\n\nMy phone's T9 screwed up the name and i posted without checking... sorry\n:-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/5#issuecomment-10428886.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi pommedeterresautee,\nwould you mind to give some sample code.\n we are pretty open to new features but would like to get a clear idea of what you need.\nJust provide a sample asynctask of yours.\ns.\n. Hi Patateo,\nin robospice motivations we tried to limit the size of the examples :\n- one activity for json\n- one activity for xml + orm lite (that is maybe too much)\n- one activity for binary requests.\nIf you have a suggestion to make it lighter, tell us. We would be\ninterested.\nThanks for your comments. Thanks also for ShowCaseView. It inspired me a\nlot for RoboDemo btw.\nSt\u00e9phane\n2012/11/2 El Potaeto notifications@github.com\n\nHi, thank you for your answer.\nI ve searched a lot yesterday and it is managed at the spring level...\nThere is already a setter for httprequestfactory.\nThank you anyway for this library.\nPs:did you think about simplify the sample? By example in Sherlock\nactionbar there is one function only per activity... In yours there are\nseveral function, injection... A real user doesnt need to make the request\nin xml AND in json too. It's just a suggestion.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/6#issuecomment-10007425.\n. Hello Patateo,\n\nthanks for all your feedback. I will get into all that this week.\nActually, you are right, the robospice motivations app may be too big. But\nit's meant to explain why RoboSpice fills a need in Android. It's also a\nsample, but not only a sample.\nI now code all my apps using roboguice and abs and some other libs. So, it\nwould be difficult to get a satisfactory code for me without using all\nthese.\nAbout the code, it's really a good idea to put it inside, I have thinking\nabout it. What I would like would be to let the user browse the real source\ncode of the app, but I couldn't find a way to do it. Maybe the best option\nwould be to redirect the user to the right page of the git hub repo and let\nit see the source code, prettyfied by git hub. What do you think ?\n2012/11/2 El Potaeto notifications@github.com\n\nOh, I just noticed you are the author of RoboDemo! Well done.\nAbout the simplification, here\nhttps://github.com/octo-online/robospice/blob/master/robospice-sample/src/com/octo/android/robospice/sample/SampleContentActivity.javathere is some injection.\nA good simplification would be to remove all of them.\nI've implemented in the past Roboguice in my app (a big one), it made my\napplication very slow at the launch and add the injection layer complexity\n(complexity to understand when you want to do something a little bit\nspecial, even if at the end it simplifies the code). Is it not possible to\nget rid off it? Because right now, it looks like you need it to make to\nmake your lib work.\nFor the sample, I would make one activity per function, and use only the\nlibraries absolutely needed to make it work. Look here:\nhttps://github.com/octo-online/robospice/blob/master/robospice-sample/src/com/octo/android/robospice/sample/SampleContentActivity.javatoo much things I think...\nIf an activity needs several particular class, I would made different\npackage, one per activity, and one folder for the shared classes. The idea\nis like : I want to use this lib, I need this function, I search my case in\nthe packages, I copy past, I make it work and finally I personalize and\nmake things more optimal.\nI think sherlockactionbar is a good start point for that. There is a\nlistview pointing to each activity, you search the effect you want on your\nphone, and finish on your computer.\nI understand you want to limit the size of the sample but if you divides\nthe complexity in independent packages, it's not anymore an issue. You will\nhave the simplicity and give a complete information.\nAnother thing I've seed which is a good idea also, is to include the main\npart of the code for a particular request in the documentation displayed in\nthe application. You have already some description text. It won't be a big\nchange to add some code in the description. You know you are in the subway,\nand you are thinking about the REST layer... It can help...\nAnd finally you should improve your website documentation.\nLots of comments I know, it's already very well done, but you ask for some\nremarks, and to make it short your lib looks like... too much professional\n:-)\n++\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/6#issuecomment-10018596.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi pomme de terre saut\u00e9e,\nsorry for the delay. It took me quite a lot of time to read your mail. Thanks for taking time to write it.\nActually, you convinced me. I'll talk about this to other co-authors and come back to you. But I believe we will get rid of roboguice, abs and other librairies in a simpler and more complete sample. Motivations can remain as it is I believe and we shall now focus on a simple sample program. A better version of the sample.\nIn RoboSpice, there is no obligation to use any module like the Spring Android Module or the new comer Goole Http Java Client to be released in 1.3.0. We provide those modules as proof of concepts, more robust and usable but they are just examples of good usage of RoboSpice. \nWe never thought about using an HttpUrlConnection in a sample. This technology as drawbacks. The biggest one is maybe that it doesn't work well on older versions of Android. And we don't want to encourage people to use a tech that we wouldn't use.\nFrom this perspective, we made modules for Spring Android and Google Http Java Client as they provided a reliable and backward compatible REST Client with parsing of JSON (using other specialized, more efficient technologies than the built-in ones). \nWe even think of extending those experiments to other technologies we would like to test like restfix of Square or jersey client for android. Again, these are experiments and proofs of concepts and show how far we can go using RoboSpice. \nOn an different perspective, the kernel of RoboSpice is completely REST agnostic and we even worked on it to make it network agnostic. It can now be used to execute any ind of long running background task with caching capabilities. In that meaning, the kernel of RoboSpice will not try to provide a unified abstraction layer for all REST clients. \nWe prefer this diversity and let people who are familiar with a tech play directly and freely with it. If you know Spring Android, you will fill confortable with the RoboSpice Spring Android Module, same for Google Http Java Client. If you don't, just keep the cache and core modules and DIY. That's our philosophy and up to now we see a lot of benefit to include new technologies as modules only.\nThis degree of freedom in RoboSpice allows for other refinement. One of them is as simple as : you can do what you usually do (I mean within the example you gave in your comment), using robospice. Nothing prevents you from doing that. We don't think it's the easiest and more robust way to it, but if you like it, do it this way. All we want, in the kernel of RoboSpice, is that devs can get their hand on a lib that makes it easy to use a service for networking. That's a good practice and we want to contribute to widespread it.\nOther modules are extensions, plugins. We added a new page in the wiki to talk about this idea.\nBTW, did we meet finally ? I need some refresh, I met far too many people last month..\n. I pomme de terre saut\u00e9, our discussion samples was quite off topie. I have searched a lot where we talked about that to answer you. Release 1.4.0 of RoboSpice will include a lot of new samples, all of them have been refactored to be more simple, they are even in a new repo. We will have a more flexible release live cycle as well, and the library is now more modular and more tested. Thanks for your feedback, it was tough but we adopted a lot of your recommandations now.\nAbout the initial topic of self signed certificates, I don't know how to tackle that. If you or someone else does know, a fork and a pull request would be appreciated. Otherwise, I will close the issue in a few days now.\n. Our libs are better now :)\nAbout SSL, really, feel free to do you best to answer your own question. I\njust don't know this topic at all but some people told me it would be\ninteresting to allow a feature like this, so if you want to contribute to a\nsample, or modify RoboSpice, go ahead.\nSt\u00e9phane\n2013/1/5 El Potaeto notifications@github.com\n\nHi Nicolas,\nIt is very funny as I followed your advice to not use directly\nHttpUrlConnection (I switched to the Google Lib).\nAbout the SSL thing, what do you need exactly? The code to create a SSL\nfactory?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/6#issuecomment-11919684.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Daniele,\nwe used RS in a couple of professional applications since last year and we\nfound different ways to verify SSL certificates by ourselves.\nFor instance, using spring android, you can set the connection factory to\nuse URLConnection more than the apache http client and then use SSLContext\nto pass it a keychain and accept certificates or not.\nIf you use Retrofit, there are also differerent possibilities to do that,\nsame for Google Http Java Client.\nRS has been designed to be protocole agnostic. The extensions of RS (Spring\nAndroid, Google Http Java Client, or Retrofit) have their own way to handle\nSSL certificates. We don't plan to support, and most probably never do it,\nSSL certificates in RS directly. It's really yours to customize any library\nyou use within RS to accept or not SSL certificates.\nSt\u00e9phane\n2013/10/30 Daniele Poggi notifications@github.com\n\nAny news on supporting SSL certificates within robospice?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/6#issuecomment-27423747\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi @Menkveldj, RS is protocole agnostic. It doesn't relu on neither on http nor hppts.\nWe offer extensions for common use cases, including networking. Spring Android is one of them. If you want more than the default we offer, customize a RS service to achieve it. It's easy for you to build your own service to get support for this kind of feature.\n. Actually, I would propose the following addition to RoboSpice. Tell me what\nyou think Pierre :\n- Remove the network related code \"hard coded\" from the request processor\n- add an interface such as\n  public interface NetworkStateFilter {\n    public boolean isNetworkAvailable();\n  }\n- inject an implementation of that interface in the RequestProcessor via\n  the SpiceService. One could easily provide its one implementation. For you\n  Pierre, it would just always return true. For other people, they could only\n  accept WIFI or 3G connections.. It would also allow to change the network\n  state dynamically, that could be usefull for testing, for instance to\n  simulate a metro/tube journey where network state is always unstable.\nWould that fit your need Pierre ?\nApart from this change, yes, RoboSpice is ready to receive non-network\nrelated tasks.\nS.\n2012/11/6 Pierre Durand notifications@github.com\n\nIs it possible to use RoboSpice for an asynchronous task? (no http request\nor cache)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/7.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. You gonna have it so ;)\nNext release, next week probably.\nS.\nLe 6 nov. 2012 22:47, \"Pierre Durand\" notifications@github.com a \u00e9crit :\n\nI just need a better AsyncTask system :P\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/7#issuecomment-10129134.\n. Your feature has been added to the current master branch. It will be part of release 1.2.0 that should be published this week. To use it : \n\nin your RoboSpiceService, override the method getNetworkStateChecker and return a NetworkStateChecker that always consider the network to be available. Your requests will always be executed.\nThx for your contribution to RoboSpice.\n. Let us now if it suits your needs.\nThx. S.\n2012/11/15 Pierre Durand notifications@github.com\n\nOk, thank you :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/7#issuecomment-10406775.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Thank you for the bug correction, I will merge your patch next week. We should add more tests for this part apparently...\n. Thanx !\n. Done.\n. Hello Nabil,\nthanks for contributing to RoboSpice. \nI am wondering why you want to set up RoboSpice Motivations ? \nThis app is our Demonstration app, it should not be used as a library. If you want to use RoboSpice in your app, you should use robospice jars (robospice-xxx.jar, robospice-cache-xxx.jar and robospice-spring-android-xxx.jar). But not the demonstration app.\nSo, what you explain is not RoboSpice started guide for eclipse for normal users but how to set up your environment to contribute to Robospice and compile RoboSpice motivations, maybe in order to change it.\nIs that what you meant ?\n. Hi Nabil,\nyou are right. It's a very good idea to provide support to help potential\ncontributors. What bugs me is that we end up writing a tutorial to install\nABS properly in eclipse.\nNot only, it's not a reasonable content for a wiki page on RoboSpice, but\nwe will have a lot of maintenance on the topic as it depends of eclipse\nmaven plugin, android connector and ABS itself. You see the 4.2 release\ndoesn't import well in eclipse, I think Jake Wharton made a mistake by\nadding the support library both in the libs folder and in the pom. The\nsupport jar is added twice during eclipse compilation and the dexing\nfails...\nI would prefer not to include such a page on RoboSpice web site. I feel\nreally sorry as you spent some time to help the project and I can't reward\nit. I am an open source minded dev and I appreciate your effort to\ncontribute to RoboSpice, but it was not the best way to do it. I can just\nencourage you to contribute to it in a different direction, maybe\nsubmitting your idea to the forum or as an issue before starting to work.\nSorry again, hope to hear from you soon,\n St\u00e9phane\n2012/11/15 Nabil Hachicha notifications@github.com\n\nHi Stephane,\nYou're definitely right\nI just thought the best way to start explore the API and contributing is\nto begin with the motivation app, since the project didn't import correctly\nin Eclipse due to the ABS dep, I figured that I can spare the dev some\nfrustration by providing a quick tip on this matter.\nBut like I said this wiki make sense if you plan to write in the future a\nfull walk-trough guideline for the potential contributors.\nNabil.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/10#issuecomment-10409141.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. https://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven\n. Here is the link to Mark's approach : http://www.mentby.com/mark-murphy/detecting-if-activity-is-running-from-service.html\n. This issue is becoming urgent. Release 4.2.2 doesn't register spice services as foreground services with the invisible hack.\n. Fixed in dfb2d2078a9be80c80c9c3956063385596cef943. \nA SpiceService can now create its own foreground notication.\n. Thanks for reporting this bug, we will investigate it soon and try to solve\nit for release 1.3.0.\nSt\u00e9phane\n2012/12/2 kombucha notifications@github.com\n\nHi,\nAccording to the javadoc, using spiceManager.addListenerIfPending is\nsupposed to do absolutely nothing if there's no actual request pending.\nHowever when I use it, the method onRequestProgressUpdate of my listener\ndoes get called with a PENDING status, even if I haven't launched any\nrequest at all.\nThis happens on the latest 1.2.1-SNAPSHOT.\nCheers\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. This bug has been corrected in 1.3.0. It's planned to be released this week.\nA test has been added to ensure no events are received by a listener when invoking addListenerIfPending.\nThx for reporting the bug.\n. Looks good for me too. It's merged in 1.3.2. \nThx Fernando\n. You should not be able to plugin a request listener that way but always use\nthe spice manager to link requests and listeners, may they be progress\nlisteners or not. So yes, there is a problem I believe here. Would you mind\nto fill an official issue in the github repo for this  ?\nThanks for finding this,\n St\u00e9phane\n2012/12/31 sospartan notifications@github.com\n\nfound a workaround in the sample project:\nexecute with the listener both implemented RequestListener and\nRequestProgressListener\nbut it's still a issue ,right?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/16#issuecomment-11774086.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Could you be more clear, I can't understand exactly.\nGive an example please.\nSt\u00e9phane\n2012/12/31 sospartan notifications@github.com\n\nThanks for reply , this #16https://github.com/octo-online/robospice/issues/16is already post , what do mean by\nWould you mind to fill an official issue in the github repo for this ?\nIn my project , I want listen all the progress update in Activity( control\nthe progress bar in action bar), and listen every request result in\nseparate fragment .Should I link all the requests in Activity and notify\nfragment manually ? Is there any best practice for this kind of job ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/16#issuecomment-11776237.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. There are obviously different design that could be used.\nMy intuition would be somthing like\npublic class BrowserContainerActivity extends Activity implements\nProgressNotifier {\n   @Override\n   public void setProgress( int progress ) {\n       //update progressbar\n   }\n}\npublic class BaseBrowserFragment extends Fragment {\nprivate class UrlRequestListener implements RequestListener,\nRequestProgressListener {\n       public void onSuccess(InputStream result) {\n       }\n       public void onFailure(SpiceException exception) {\n       }\n       public void onRequestProgressUpdate( RequestProgress progress ) {\n-        ((ProgressNotifier) getActivity()). setProgress( 100 \n  progress.getProgress());\n     }\n  }\nAnd then you could perform your queries inside your fragments. I would\ndefinitely handle the results of requests as InputStream to be able to\nhandle large pages.\nSt\u00e9phane\n2012/12/31 sospartan notifications@github.com\n\nMy app is just like a browser , single Activity with fragments . The\nActivity's content view is a ProgressBar ,address EditText and a fragment\ncontainer view where to display pages content by different fragments.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/16#issuecomment-11779678.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. The initial issue was to be able to register a RequestProgressListener directly on a SpiceRequest. This bug is corrected in current state of repo so I close the issue. Please continue on Google Group for further on your specific problem.\n. Hi ramjet,\nwould you mind to test our new procedure for non maven users :\nhttps://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven-2\nFor it to work, as we didn't release the examples yet, you will need to\nclone our github repo for both RoboSpice and samples.\nIf you find this document as is, is it understandable ? Does it bring any\nnew question ?\nThanks for the follow up since Stack Over Flow.\n St\u00e9phane\n2013/1/1 ramjet69 notifications@github.com\n\nHello,\nI am a long time C# developer and trying to get my feet wet with android\nand java. I have written a workflow web service and published it. Calling\nthe service from .NET architectures is not a problem. I would like to call\nit from my android app (my first app aside from the typical hello world).\nI am developing to android 2.3.3 using Eclipse. Looking at the 30 second\nimage I understand the concept of RoboSpice and the failings of other\ntechnologies. But I am swimming in information on where to start. I figured\ngetting the jar's I needed would be a good start then looking at some\nexamples....but I got lost in the downloads as to which jars are needed.\nSo that would be my first request. How do I determine what jar's I need to\ncommunicate with a WCF web service that is returning a string??\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. You didn't answer yet so maybe this is still confusing. And don't worry about the service, RoboSpice does it for you.\nHere is what you have to do :\n- clone the sample repo of robospice\n- install maven\n- in the folder where you cloned the samples do a : mvn clean install \n- look at the spring android sample project, it has a libs-for-ant that contains all jars\n- copy those jars to the libs folder of your project : you can now use them\n- follow the sample to know how to write a RoboSpice request and execute it from inside an activity\n- add a RoboSpice to your AndroidManifest.xml file, get inspired by the AndroidManifest of the sample if you don't know how to do it.\nThat's the most simple way to use RoboSpice if you don't know anything about maven and just want to use eclipse and the adt plugin.\n. Hi Arif,\nif you look at the repo, we now have a RoboSpice-samples folder containing\nsamples for RoboSpice for all modules.\nThe simples can easily be converted to ant projects (see the wiki\nherehttps://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven-2\n).\nSo, with next release, it's gonna be very easy for non maven users to get\nan up and running sample with both core and extensions of RoboSpice. The\nsample will have a ant/ADT configuration that works and that can be copied\nto developer's projects.\nWould that be enough ? Can we make it even simpler ?\nWe believe it's an important issue too.\nSt\u00e9phane\n2013/1/8 Arif Amirani notifications@github.com\n\nIs it possible to provide a download bundle for non Maven users? I've used\nMaven and Ant in my past projects hence it was trivial but I can understand\nthe conundrum of others.\nA bundle with dependencies should do the trick. I'll be more than glad to\nvolunteer to build such a bundle and deploy on GitHub.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-11991915.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I don't think there is any standard procedure to store jars on GitHub right\nnow and I doubt there will be as storing binaries seemed to be the\nproblem.\nNevertheless, woud you like to have a try at the document I gave you and\nsee if that would be enough for non maven users ?\nSt\u00e9phane\n2013/1/9 Riccardo Ciovati notifications@github.com\n\nYou are right @kontinuity https://github.com/kontinuity.\nWe were providing binaries too in the Github download section but that\nsection has been removed from Github and we should link the jar in another\npage.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-12056618.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Ok, I am sensitive to your argument but the only to type damn sample\ncommand. Is that really too much ?\nWe could also have the libraries include in the libs-extra folder for them,\nthat's also possible but I got the feeling that it's gonna be error-prone\nto maintain the jars before every release of the samples.\nAs a programmer, I don't use bitbucket or mercurial but I got them\ninstalled just to checkout others' repositories. But you might be right for\na beginner, that could be discouraging.\nSt\u00e9phane\n2013/1/9 Arif Amirani notifications@github.com\n\nNot trying to nitpick here but the intent is to not have users deal with\nMaven if they are either not used to it or just don't want and the steps in\nthe document need Maven. Kind of defeating the purpose.\n2. use maven to copy dependencies to the libs-for-ant folder\nmvn clean install -Pant\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-12061128.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I agree, I think that's one of the points that makes it difficult for\nRoboSpice to become more widespread, that and the lack of simple samples.\nBut we worked hard on those points and want non-maven users to get it\nsimple.\nSo, you suggest we just put the jars in the samples and that's it ?\n(I mean they will be in a libs-extra folder, not libs so that they\ndon't ***ck up eclipse configurations for maven users - that would make dex\nfail as it would include jars twice-).\nReally, it's nice to take time to give us feedback and guidance on that\npoint.\nSt\u00e9phane\n2013/1/9 Moritz Pfeiffer notifications@github.com\n\nJust to put in my 10 cents.\nI agree that having to use Maven is a big deterrent from using Robospice\nfor people that aren't familiar with it.\nIf there were libraries that could be included into an existing Android\nproject by simply dropping them into the libs folder that would go a very\nlong way in simplifying the process of getting to know Robospice.\nI believe it took me 2 days to fumble through the dependencies to get\nRobospice up and running.\nOn 09.01.2013, at 20:29, Arif Amirani notifications@github.com wrote:\n\nOk, I am sensitive to your argument but the only to type damn sample\ncommand. Is that really too much ?\nIsn't Maven not available on every machine by default? This means even\nto type those simple commands the user has to install Maven. Tall order\ngiven the title of the issue is \"Rank NOOB wants to use RoboSpice and needs\nhelp\" :)\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-12063608.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I agree, each extension should have its wiki page. This is added to milestone 1.4.0 (see issue 26)\nThe whole point of this issue was a better documentation of RoboSpice setup for non maven users, this is integrated to milestone 1.4.0.\nIf we could find a way to expose the jars from within github or point to them by a set of links that would be interesting too (this is not part of release 1.4.0).\n. They are only available in the 1.4.0 / current state of repo.\nWe are rushing to release 1.4.0 asap. Meanwhile, you can use a simpler\nSpringAndroidService. JacksonSpringAndroidService is just an helper to get\na fully equiped SpringAndroidService with cache manager using a jackson\npersister.\nSt\u00e9phane\n2013/1/14 Afzal Najam notifications@github.com\n\nAm I missing something? JacksonSpringAndroidSpiceService class is not\nactually in the robospice jar files?\nThe robospice spring android sample can't compile.\n(I'm posting in this thread because I'm also a noob to maven)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-12202753.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. If you want to build the library, you only need a device to run the tests of RoboSpice (over 140 tests..that can be long). Then you can use this command line to skip them : \nbash\nmvn clean install -DskipTests=true\nIs it possible to close this issue ?\nAs of release 1.4.0 (to be released next week), RoboSpice has improved its documentation in a couple of ways to help new RoboSpice users : \n- new samples for every extension of RoboSpice\n- new setup pages for maven and non maven users (should be ready soon)\nIs there any thing we can do to make it even easier to use RoboSpice ?\n. Its seems to be hard question.\nJava coding conventions prohibits the\n[testMethodUnderTest_details_about_the_test] pattern, but I find it very\nclear.\nI found this thread to reflect diversity of test naming conventions :\nhttp://stackoverflow.com/questions/96297/what-are-some-popular-naming-conventions-for-unit-tests\nS.\n2013/1/7 Riccardo Ciovati notifications@github.com\n\nIn our tests a few classes have non-standard class name (for instance,\nunderscore inside class name).\nOur checkstyle configuration has been teaked (in commit c048fc1https://github.com/octo-online/robospice/commit/c048fc1)\nfor allowing these names but those classes should be fixed to be compliant\nwith the standard naming.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/18.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. We could just not activate it inside the tests packages.\nAnother option (favored) would to create to maven profiles with specific\ncheckstyle options : one for main source code and one for test source code.\nSt\u00e9phane\n2013/1/7 Benoit Lafontaine notifications@github.com\n\nIs it possible to ignore checkstyle configuration for specific packages ?\nOn Mon, Jan 7, 2013 at 5:52 PM, stephanenicolas notifications@github.comwrote:\n\nIts seems to be hard question.\nJava coding conventions prohibits the\n[testMethodUnderTest_details_about_the_test] pattern, but I find it very\nclear.\nI found this thread to reflect diversity of test naming conventions :\nhttp://stackoverflow.com/questions/96297/what-are-some-popular-naming-conventions-for-unit-tests\nS.\n2013/1/7 Riccardo Ciovati notifications@github.com\n\nIn our tests a few classes have non-standard class name (for instance,\nunderscore inside class name).\nOur checkstyle configuration has been teaked (in commit c048fc1<\nhttps://github.com/octo-online/robospice/commit/c048fc1>)\nfor allowing these names but those classes should be fixed to be\ncompliant\nwith the standard naming.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/18>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/18#issuecomment-11959566>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/18#issuecomment-11959909.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. If you can refactor and make it work, I am fine. Sometimes annotations to\nchange a class name of field are rather messy from one framework to\nanother, but I agree, it's worth it.\nSt\u00e9phane\n2013/1/7 Riccardo Ciovati notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas I think that\nunderscore in test methods is fine.\nI was talking about classes like this one:\nhttps://github.com/octo-online/robospice/tree/master/extensions/robospice-spring-android-parent/robospice-spring-android-test/src/com/octo/android/robospice/springandroid/test/model/jsonthat should be easy to fix (quite long but easy).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/18#issuecomment-11964811.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I tackle that task and enhance pom of tests projects at the same time.\n. All done. Poms of tests projects are also simpler now. Checkstyle has been added to tests as well (we don't add checkstyle checks to samples to keep them simple).\n. Can you point to the line containing @Inject in Ln ? I can't see it and we\nhave no compilation issue.\nOr maybe be more precise, I may have been missing something.\nThx for your interest in RoboSpice,\n St\u00e9phane\n2013/1/8 Arif Amirani notifications@github.com\n\nThis would require a dependency of Guice.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/19#issuecomment-11986325.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Arif, other team members have been struggling hard to remove dependencies of RoboSpice and I am pretty sure they would vote against this one. RoboGuice is quite a big dependency when actually all we want is to Log..\nNevertheless, can you explain better what this annotation would allow or disallow, I don't really understand. I just hacked this class quickly to get something working but I would very interested in understanding exactly what I did ... :)\n. We need a use case to solve a bug, or some process that we can repeat,\nideally a test.\nI strongly believe that you this passing inside the logcat console but it's\nnot logged as an error, only a verbose log that RS prints out to tell it\nhas been stopped while it was in its main loop (globally). If you believe\nthe issue to be more severe, please feel a real bug report by providing us\nadditional and more usefull information so that we can clear the case.\nThanks,\n S.\n2013/2/25 Arif Amirani notifications@github.com\n\nThis issue is back in 1.4\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/21#issuecomment-14050626.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Ankush,\n1.3.2-SNAPSHOT is going to become release 1.4.0 of RoboSpice. It is planned\nto be released in a few days.\nMeanwhile you can clone the repo, run a\nmvn clean install\ncommand in the root folder and get all jars of 1.3.2-SNAPSHOT in your local\nrepo.\nWe don't use maven central's snapshot repositories.\nThe code is pretty much in the state we would like to publish it, we just\nhave a few more things to do before releasing (like getting a better\njavadoc generated and put in git hub's pages or better documenting\nRoboSpice setup).\nSt\u00e9phane\n2013/1/10 Ankush Gupta notifications@github.com\n\nIs it possible to access 1.3.2-SNAPSHOT in a project of mine? All of the\nexamples reference 1.3.2 and use new features of it, but it isn't actually\navailable in Maven from what I can tell.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/22.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. What do you mean by \" set your github repository up to be a custom repo\" ? \nThis issue has been integrated to milestone 1.4.0\n. All snapshots have been released to sonatype. You were right, that's gonna be easier for  developers to test cutting edge versions of RoboSpice. Indeed, we had nothing to do, our configuration was already good for this task.\nThanks @unkzdomain \n. Javadocs and maven site are exposed to github's pages.\nFind them here and here\nStill a bit of work to close the issue:\n- Improve maven lifecycle and integrate github-site plugin to maven site phase\n- Add a symbolic link on github's pages to latest javadoc version.\n. New maven site and javadocs are in the right folder. \nJavadocs and maven site are exposed to github's pages.\nFind them here and here\n- life cycle for site and site-deploy is simpler\n- Github's wiki page for contributor has been updated\n. The setup could focus on core and add a mention for extensions, usin a\ngeneral mechanism (such as this\nonehttps://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven-2\n).\nSt\u00e9phane\n2013/1/14 Riccardo Ciovati notifications@github.com\n\nProject setup with the usage of RoboSpice core module? or also with the\nusage of extensions?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/25#issuecomment-12218739.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Good work team. Our new doc rocks. :)\n. Hi El Potaeto,\nwhat do you think of ? RoboSpice motivations didn't change. But we could\nrelease the ui spice list sample...\nSt\u00e9phane\n2013/2/10 El Potaeto notifications@github.com\n\nGood doc. You should think about updating the application on the market.\nIt will give a more fresh view about the app.\nRegards\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/25#issuecomment-13363205..\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Nice point.\nWe will also had a sample of RoboSpice UI List..\nS.\n2013/2/11 El Potaeto notifications@github.com\n\nSorry instead of uploading read updating. I was speaking about the example\napplication on the Play Store.\nAn update will remind/inform some people about the update of your library.\nRegards\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/25#issuecomment-13370285..\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Not right now. But that could be an interesting feature.\nI was thinking this days of adding some extra API to retrieve the list of\nall current pending requests. You feature would be needed for mine as well.\nWould you mind to had a feature request in our issue page ?\nAlso, feel free to hack RoboSpice to provide it as well.\nSt\u00e9phane\n2013/1/15 papo2608 notifications@github.com\n\nIs it possible to check with the class an request cache key the status of\na executed request?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/27.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi @papo2608 , the issue is added. \nI don't see the point of having a DB for that. \nThere is already an enum for requests statuses.\nActually, I think you can already have the desired feature by using : \njava\nspiceManager.addListenerIfPending( Class, CacheKey, Listener )\nwhere you listener would implement the RequestProgressListener interface. That would work for every pending request, but not for completed requests. \nIf the feature would be implemented in a syncrhonous way like:\njava\nspiceManager.getStatus( Class, CacheKey) : RequestStatus\nwe would have to use Future as the returned type due to the asynchronous nature of calls to a bound service. That would make the feature more difficult to use.\nAnother option would be to have something like \njava\nspiceManager.checkRequestStatus( Class, CacheKey, CheckStatusListener)\nWhere the call back interface CheckStatusListener would define methods like\njava\npublic interface CheckStatusListener extends RequestProgressListener{\n   onNoSuchRequestFound();  \n}\nSo that you could know when no such requests is actually pending.\n. I have been thinking to this issue for the last days but couldn't understand it.\nIf we had some kind of \"records\" (in a file / database/ etc) for request results, when would you reset them ?\nBy this I mean that a SpiceManager has limited life cycle, basically the same as an Activity. When you create a new instance of an Activity, you get a new SpiceManager. Would this new instance consider that it has not completed any request yet or that previous instances of SpiceManager completed some requests ? In the latter case, how could you distinguish a Request that was run during the same Application launch or during a previous launch ?\nMaybe our best option here is to ask you to explain what you want to achieve, and we can advise you how RoboSpice can be used to address it.\n. From SonaType docs:\nNote :  Once your artifacts are released, they will be synced to The Central Repository and you will not be allowed to update or delete them.\nI tried, and couldn't. Not that important to my mind. There are just 2 artefacts to remove, and RoboSpice changed a lot since then..\n. Can you provide us with an example and its results ?\nAlso, be aware that there used to be a bug using Gson Persisters in 1.3.1 release. Release 1.4.0 fixes it.\n. Was you spiceManager started before reaching this line ?\nAlso, please consider the asynchronous nature of a call to\ngetDataFromCache. When you call this method, it will return a future as the\nspiceManager must bind to the spiceService and, when bound, ask for the\ncache content.\nWhen you call the method get() of that future, it will block until the\ngetDataFromCache actually completes. This operation should not be called on\nthe main thread but inside an AsyncTask. Otherwise, get will block your UI\nthread and create an ANR. There is no workaround for it.\nSt\u00e9phane\n2013/1/19 papo2608 notifications@github.com\n\nYou can reproduce this issue with:\n1. checkout robospice-sample-spring-android\n2. I'm using Gson instead of Jackson\n3. put following lines of code in your MainActivity class:\n@Override\nprotected void onResume() {\n    super.onResume();\n    ListTweets tweets;\n    try {\n        Future<ListTweets> task = contentManager.getDataFromCache(ListTweets.class, \"tweets.android\");\n        tweets = task.get();\n    } catch (CacheLoadingException e) {\n        e.printStackTrace();\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    } catch (ExecutionException e) {\n        e.printStackTrace();\n    }\n}\n4 search with the query \"android\"\n5 you get an ANR error\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/30#issuecomment-12455292.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Right. Thx Ricardo. ;)\n2013/1/19 Riccardo Ciovati notifications@github.com\n\nI was writing what stephanenicolas said.\nBTW, you can use the getFromCachemethod wich is async. ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/30#issuecomment-12455417.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Bojanv55,\nI am gonna close this issue as RoboSpice is actually giving you the right behavior it should have. There is no bug here : \nwhen activity is stopped (inactive as you said) then all of its requests listeners are removed, they won't be notified. \nListeners are only notified as long as the activity than owns them is still alive. That's the whole point of RoboSpice : to prevent memory leaks of listeners or activities.\nIf you want to \"go on listening\" the result of a request  even when the activity that launched it has gone inactive, then you must adopt a different strategy. You should use a more stable context like the application or a service and launch your request form it or maybe just listen to the request result from that context (using addListenerIfPending, not execute). \n. What we would need for such a feature is to keep the whole exception received in case of failure and I believe we should also keep the time of the last failure. We should also keep those records in sync with requests' successes : when a request a request succeeds, we should remove failure entries. And that would not be true the other way around : a failure should not remove anything already present in cache.\nSuch a system would endup with two caches indeed : one for results obtained from a successful request, one for failures.\nSyncing of those two caches could be tricky (though maybe not).\nI think one big problem of this approach, that would actually be interesting to provide an history of requests results, is too keep a record of failures. Failures are exposed as exceptions and there is no easy way to serialize them. All exceptions are Serializable in Java but relying on this system on Android looks like a very bad idea to me. Version management would have huge limitations and it would put strong constraints on custom exceptions that can be thrown by a request processing.\nI can't see any easy way to implement this feature in RoboSpice. \nNevertheless, I think you could easily have something that would suit your need if:\n- you would launch you request from an android service and not an activity (so that you would always get notified of request results, independently from Activity lifecycles)\n- use a common mechanism to all your requests to keep track of their results, may they be successes or failures. \n. Hi @jeffdgr8, \nthis problem is not really related to RoboSpice itself but to a limitation of the Java syntax : there is no litteral that you can use to get the class/type of a parametrized generic type in Java.\nIf you want to do something like \n``` java\npublic class ListTweetRequest extends SpiceRequest> {\npublic ListTweetRequest(Object cacheKey ) {\n       super( , cacheKey );\n   }\n}\n```\nthen you can't pass the class List<Tweet>.class to you parent constructor. That's really a Java limitation as generics are realized using type erasure and List<Tweet>.class has no real meaning in Java.\nThe best and cleanest work around is to use an intermediate type like : \n``` java\npublic class ListTweet extends List {\n}\npublic class ListTweetRequest extends SpiceRequest {\npublic ListTweetRequest(Object cacheKey ) {\n       super( ListTweet.class, cacheKey );\n   }\n}\n```\nThis has the advantage to provide you with a real type that you can pass to the SpiceRequest's constructor. But beware of obfuscation. In thoses cases, proguard will try to remove the ListTweet class, you have to explicitly preserve it from obfuscation.\n. Hi nilkashid,\nit's normal to define the ANDROID_HOME path when using maven. I just added\nthat to the wiki\npagehttps://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven-2\n.\nThanks for this feed back. If you see anything else that needs to be added\nto the wiki, please tell us.\nSt\u00e9phane\n2013/1/22 nilkashid notifications@github.com\n\nHi Rciovati Thank you for Help. Its working fine.. but I need to make some\nchanges in pom file like I have to give my SDK folder file. And also have\nto change targeted platform version. And its working fine....\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/33#issuecomment-12532235.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi mark,\nit's strange you get this error. When did you clone our repo ? What command\ndid you type exactly ?\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nHi,\nThis looks like a very useful library, but I can't get started. I've\ndownloaded Maven and followed the rest of the instructions and get errors\non mvn clean install from the robospice-master directory.\nI'm new to Maven. Can you see what's wrong? I tried the non-maven users's\ninstructions and that failed too. I saw mention on another issue about\ngetting 1.3.1 but how do I get through Git?\nThanks!\nMark\n[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-cache:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-cache-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-core-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-core-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-ormlite:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @ line 470,\ncolumn 12\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they\nthreaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support\nbuilding such malformed projects.\n[WARNING]\n[INFO]\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Robospice - Parent\n[INFO] Robospice - Persistence Module Parent\n[INFO] Robospice - Persistence Module\n[INFO] Robospice - Persistence Module tests\n[INFO] Robospice - Core Module Parent\n[INFO] Robospice - Core\n[INFO] Robospice - Core Module tests\n[INFO] Robospice - Extension Spring Android Module Parent\n[INFO] Robospice - Extension Spring Android Module\n[INFO] Robospice - Extension Spring Android Module tests\n[INFO] Robospice - Extension Google Http Java Client Module Parent\n[INFO] Robospice - Extension Google Htpp Java Client Module\n[INFO] Robospice - Extension Google Http Java Client Module tests\n[INFO] Robospice - Extension ORMLite Module Parent\n[INFO] Robospice - Extension ORMLite Module\n[INFO] Robospice - Extension ORMLite Module tests\n[INFO] Robospice - Extension UI SpiceList Parent\n[INFO] Robospice - Extension UI SpiceList Module\n[INFO] Robospice - Extension UI SpiceList Module tests\n[INFO]\n[INFO]\n[INFO] Building Robospice - Parent 1.3.2-SNAPSHOT\n[INFO]\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-parent ---\n[INFO] Installing C:\\programs\\robospice\\robospice\\pom.xml to C:\\Users\\Mark\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-parent\\1.3.2-SNAPSHOT\\robospice-parent-1.3.2-SNAPSHOT.pom\n[INFO]\n[INFO]\n[INFO] Building Robospice - Persistence Module Parent 1.3.2-SNAPSHOT\n[INFO]\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-cache-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-cache-parent ---\n[INFO] Installing\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\pom.xml to\nC:\\Users\\Mark\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-cache-parent\\1.3.2-SNAPSHOT\\robospice-cache-parent-1.3.2-SNAPSHOT.pom\n[INFO]\n[INFO]\n[INFO] Building Robospice - Persistence Module 1.3.2-SNAPSHOT\n[INFO]\n[WARNING] The artifact org.apache.commons:commons-io:jar:1.3.2 has been\nrelocated to commons-io:commons-io:jar:1.3.2\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache ---\n[INFO] Deleting\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\robospice-cache\\target\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache ---\n[INFO]\n[INFO] --- maven-checkstyle-plugin:2.9.1:check (default) @ robospice-cache\n[INFO]\n[INFO] There are 16 checkstyle errors.\n[INFO]\n[INFO] Reactor Summary:\n[INFO]\n[INFO] Robospice - Parent ................................ SUCCESS [1.652s]\n[INFO] Robospice - Persistence Module Parent ............. SUCCESS [0.025s]\n[INFO] Robospice - Persistence Module .................... FAILURE [2.250s]\n[INFO] Robospice - Persistence Module tests .............. SKIPPED\n[INFO] Robospice - Core Module Parent .................... SKIPPED\n[INFO] Robospice - Core .................................. SKIPPED\n[INFO] Robospice - Core Module tests ..................... SKIPPED\n[INFO] Robospice - Extension Spring Android Module Parent SKIPPED\n[INFO] Robospice - Extension Spring Android Module ....... SKIPPED\n[INFO] Robospice - Extension Spring Android Module tests . SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module Parent SKIPPED\n[INFO] Robospice - Extension Google Htpp Java Client Module SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module tests SKIPPED\n[INFO] Robospice - Extension ORMLite Module Parent ....... SKIPPED\n[INFO] Robospice - Extension ORMLite Module .............. SKIPPED\n[INFO] Robospice - Extension ORMLite Module tests ........ SKIPPED\n[INFO] Robospice - Extension UI SpiceList Parent ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module tests ... SKIPPED\n[INFO]\n[INFO] BUILD FAILURE\n[INFO]\n[INFO] Total time: 5.434s\n[INFO] Finished at: Mon Jan 28 18:46:01 PST 2013\n[INFO] Final Memory: 12M/21M\n[INFO]\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-checkstyle-plugin:2.9.1:check (default) on\nproject robospice-cache: You have 16 Checkstyle violations. -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the\n-e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the\ncommand\n[ERROR] mvn -rf :robospice-cache\n\u0097\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/34.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Mark,\ngit can be used to get the latest state of RoboSpice, not a released\nversion (you could but it would be complex for nothing).\nIf you want a release version, look at maven central and get the jars of\nrelease 1.3.1. We are working to make it easier to get the jars &\ndependencies for non maven users. We are almost done and this will be an\nimportant \"feature\" of release 1.4.0.\nIf you want a snapshot version (like 1.3.2-SNAPSHOT), we also have\nsnapshots on sonatype snapshots repo.\nIf you want to get the latest latest latest state of the sources, then use\ngit.\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nThanks St\u00e9phane!\nI cloned yesterday afternoon. At the robospice-master directory I used mvn\nclean install.\nThere was a mention in your issues about not using snapshots and that\n1.3.1\n(I think) was the latest actual release. I couldn't see how to get the\n1.3.1 version. (Not fluent in Git yet).\nLooking forward to getting at the code!\nBest,\nMark\nOn Mon, Jan 28, 2013 at 11:38 PM, stephanenicolas\nnotifications@github.comwrote:\n\nHi mark,\nit's strange you get this error. When did you clone our repo ? What\ncommand\ndid you type exactly ?\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nHi,\nThis looks like a very useful library, but I can't get started. I've\ndownloaded Maven and followed the rest of the instructions and get\nerrors\non mvn clean install from the robospice-master directory.\nI'm new to Maven. Can you see what's wrong? I tried the non-maven\nusers's\ninstructions and that failed too. I saw mention on another issue about\ngetting 1.3.1 but how do I get through Git?\nThanks!\nMark\n[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-core-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-core-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-spring-android-test:apk:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-spring-android-parent:pom:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-google-http-client:jar:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-google-http-client-test:apk:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-google-http-client-parent:pom:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-ui-spicelist-test:apk:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\n\ncom.octo.android.robospice:robospice-ui-spicelist-parent:pom:1.3.2-SNAPSHOT\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @ line 470,\ncolumn 12\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they\nthreaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer\nsupport\nbuilding such malformed projects.\n[WARNING]\n[INFO]\n\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Robospice - Parent\n[INFO] Robospice - Persistence Module Parent\n[INFO] Robospice - Persistence Module\n[INFO] Robospice - Persistence Module tests\n[INFO] Robospice - Core Module Parent\n[INFO] Robospice - Core\n[INFO] Robospice - Core Module tests\n[INFO] Robospice - Extension Spring Android Module Parent\n[INFO] Robospice - Extension Spring Android Module\n[INFO] Robospice - Extension Spring Android Module tests\n[INFO] Robospice - Extension Google Http Java Client Module Parent\n[INFO] Robospice - Extension Google Htpp Java Client Module\n[INFO] Robospice - Extension Google Http Java Client Module tests\n[INFO] Robospice - Extension ORMLite Module Parent\n[INFO] Robospice - Extension ORMLite Module\n[INFO] Robospice - Extension ORMLite Module tests\n[INFO] Robospice - Extension UI SpiceList Parent\n[INFO] Robospice - Extension UI SpiceList Module\n[INFO] Robospice - Extension UI SpiceList Module tests\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Parent 1.3.2-SNAPSHOT\n[INFO]\n\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-parent ---\n[INFO] Installing C:\\programs\\robospice\\robospice\\pom.xml to\nC:\\Users\\Mark\n\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-parent\\1.3.2-SNAPSHOT\\robospice-parent-1.3.2-SNAPSHOT.pom\n\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Persistence Module Parent 1.3.2-SNAPSHOT\n[INFO]\n\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-cache-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-cache-parent ---\n[INFO] Installing\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\pom.xml to\nC:\\Users\\Mark\n\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-cache-parent\\1.3.2-SNAPSHOT\\robospice-cache-parent-1.3.2-SNAPSHOT.pom\n\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Persistence Module 1.3.2-SNAPSHOT\n[INFO]\n\n[WARNING] The artifact org.apache.commons:commons-io:jar:1.3.2 has\nbeen\nrelocated to commons-io:commons-io:jar:1.3.2\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache ---\n[INFO] Deleting\n\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\robospice-cache\\target\n\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache ---\n[INFO]\n[INFO] --- maven-checkstyle-plugin:2.9.1:check (default) @\nrobospice-cache\n[INFO]\n[INFO] There are 16 checkstyle errors.\n[INFO]\n\n[INFO] Reactor Summary:\n[INFO]\n[INFO] Robospice - Parent ................................ SUCCESS\n[1.652s]\n[INFO] Robospice - Persistence Module Parent ............. SUCCESS\n[0.025s]\n[INFO] Robospice - Persistence Module .................... FAILURE\n[2.250s]\n[INFO] Robospice - Persistence Module tests .............. SKIPPED\n[INFO] Robospice - Core Module Parent .................... SKIPPED\n[INFO] Robospice - Core .................................. SKIPPED\n[INFO] Robospice - Core Module tests ..................... SKIPPED\n[INFO] Robospice - Extension Spring Android Module Parent SKIPPED\n[INFO] Robospice - Extension Spring Android Module ....... SKIPPED\n[INFO] Robospice - Extension Spring Android Module tests . SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module Parent\nSKIPPED\n[INFO] Robospice - Extension Google Htpp Java Client Module SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module tests\nSKIPPED\n[INFO] Robospice - Extension ORMLite Module Parent ....... SKIPPED\n[INFO] Robospice - Extension ORMLite Module .............. SKIPPED\n[INFO] Robospice - Extension ORMLite Module tests ........ SKIPPED\n[INFO] Robospice - Extension UI SpiceList Parent ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module tests ... SKIPPED\n[INFO]\n\n[INFO] BUILD FAILURE\n[INFO]\n\n[INFO] Total time: 5.434s\n[INFO] Finished at: Mon Jan 28 18:46:01 PST 2013\n[INFO] Final Memory: 12M/21M\n[INFO]\n\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-checkstyle-plugin:2.9.1:check (default)\non\nproject robospice-cache: You have 16 Checkstyle violations. -> [Help\n1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with\nthe\n-e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with\nthe\ncommand\n[ERROR] mvn -rf :robospice-cache\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34#issuecomment-12823669>.\n\n\nMark Murphy, 503-809-1141, LinkedIn <\nhttp://www.linkedin.com/in/markkmurphy>\n, murphysw.com\n\u0097\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/34#issuecomment-12841703.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. That is the same issue. ORM Lite can't store a collection directly, it can only store objects that have collections.\n. Hi Vincent,\ncould you provide more details about the problem ? I don't clearly understand what's wrong..\nS.\n. Could you be more explicit about the conditions to reproduce he bug ? It's really hard to imagine what can lead to such a result. Or even better, could you write a test that fails and should not ?\n. Hi Alessio,\nSorry for the late answer, I could find some moment to read my RS mails\nonly this week-end.\nthank you very much for this detailed information. I started investigating\nthe bug. The details you provide will allow me to setup a real test to\nreproduce the bug and correct it. I got an intuition of the problem, I hope\nto correct it today / tonight in master branch.\nThat's really a very good bug report ;) Thanks for your perseverance.\nSt\u00e9phane\n2013/2/26 Alessio Bianchi notifications@github.com\n\nHi St\u00e9phane,\nI have some more information on this issue. I suspect this is a\nsynchronization issue between SpiceManager start() and execute() methods.\nIf I start the SpiceManager in my activity's onStart() method and execute()\na request in onResume(), I will experience the issue. But if I delay the\nexecute() call in onResume by a couple of seconds via\nHandler.postDelayed(), I am not able to reproduce the issue.\nHere are some logs of both scenarios:\nShowing error, immediate execute() in onResume():\nhttp://pastebin.com/Arp3wjHB\nNot showing error, delayed execute() in onResume():\nhttp://pastebin.com/piQmeHQW\nI updated my sample app to allow you to replicate this issue (\nhttps://github.com/venator85/RoboSpiceTestApp).\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/36#issuecomment-14141723\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Solved in commit b520683df96623055aee58b4b6ddc8daa87d378f.\nPatch is now available on master branch.\nCan you confirm it works for you Alessio ?\n. My pleasure.\nSt\u00e9phane\n2013/3/4 Alessio Bianchi notifications@github.com\n\nI confirm the fix is working. Thanks St\u00e9phane!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/36#issuecomment-14368205\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. You found a hole in actual RoboSpice implementation for SpiceRequests that are executed without using cache !\nI am gonna add a test to reproduce this bug and fix it. I hope I can fix it today. Bugfix will be released in 1.4.0.\nThanks for pointing this out.\nS.\n. Bug has been fixed in TDD style.\nWould you like to test it against our snapshot jars ?\nIf you use Eclipse + ADT without maven : \nI believe you should just have to take those jars and put them in your libs folder.\nRoboSpice : \nhttps://oss.sonatype.org/content/repositories/snapshots/com/octo/android/robospice/robospice/1.3.2-SNAPSHOT/robospice-1.3.2-20130202.094831-16.jar\nRoboSpice-cache : \nhttps://oss.sonatype.org/content/repositories/snapshots/com/octo/android/robospice/robospice-cache/1.3.2-SNAPSHOT/robospice-cache-1.3.2-20130202.094752-16.jar\nRoboSpice-spring-android :\nhttps://oss.sonatype.org/content/repositories/snapshots/com/octo/android/robospice/robospice-spring-android/1.3.2-SNAPSHOT/robospice-spring-android-1.3.2-20130202.094941-19.jar\nIf you use maven, just point to the SonaType snapshot repo in your pom and change RoboSpice version to 1.3.2-SNAPSHOT :\nxml\n     <repositories>\n       <repository>\n         <id>snapshots-repo</id>\n         <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n         <releases><enabled>false</enabled></releases>\n         <snapshots><enabled>true</enabled></snapshots>\n       </repository>\n     </repositories>\n. Woopa supa cool. It will be in 1.4.0 so. ;)\nS.\n2013/2/4 Justin notifications@github.com\n\nFirst off: sorry for my late response!\nSecondly thank you for fixing the bug i can confirm this solved my\nproblems.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/37#issuecomment-13067774.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hello all,\nIndeed, RoboSpice is doing what you are asking for : you pass\nDurationInMillis.ALWAYS as a parameter to execute. This means that the data\nin cache will always be considered expired. Thus, the SpiceRequest will\nalways perform a network call. You should just use a different\ncacheDuration value when invoking execute.\nI agree that our javadoc was really unclear on this important parameter. I\njust updated it to make it more clear. Find it below and feel free to\nsuggest any improvement.\nSt\u00e9phane\n- cacheDuration : duration in millisecond after which the content of the cache will be considered to be expired. For instance DurationInMillis.ALWAYS means that data in cache will always be considered expired, thus requests will always perform their network operations to get new data. DurationInMillis.NEVER means data will never be considered as expired, requests will never perform network operations to refresh data but will always return cached data. (see {@link DurationInMillis}).*\n2013/2/2 Ankush Gupta notifications@github.com\n\n+1, having this issue as well\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/38#issuecomment-13019896.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I also renamed the parameter to cacheExpiryDuration\n. Yes, there was a problem with offline requests. Just execute your requests\nusing a cache key. RoboSpice 1.4.0 will correct the above.\nSt\u00e9phane\n2013/2/5 Robb Shecter notifications@github.com\n\nAh hah. This may be a duplicate of #37https://github.com/octo-online/robospice/issues/37\nIf so, this is a known bug and the workaround is to use cached requests.\nWill give that a try.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/39#issuecomment-13107500.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi,\nIt may be related to the network state of your device. But anyhow, that's\nstrange. Do you have any additional  information ? Any warning in log cat\nduring binding ?\nS.\nLe 8 f\u00e9vr. 2013 14:58, \"jdegroot\" notifications@github.com a \u00e9crit :\n\nUnfortunately I can't provide you with the actual code and I don't have\ntime to create a new project to reproduce the problem the coming\ndays/weeks. I can tell you that the error so far only occurs when I start\nthe app with the device screen off, using the maven goals android:run and\nandroid:deploy. Hopefully this helps indentifying the problem.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/40#issuecomment-13291184.\n. No activity on that thread for the last 8 days. We can't solve a bug with so little information.\n. Issue has been fixed in master branch with commit 66b9bf928d45bfe93c0d77be280bf8327df126b5. \nCan you confirm it works for you ?\n\nUnfortunately, I couldn't write a test to simulate the bug, but I could fix it and check manually.\n. SNAPSHOT was not deployed yet. You can try it now. It was only committed /\npushed on master branch when you tried.\nS.\n2013/3/4 Benoit Billington notifications@github.com\n\nI was still able to reproduce it with the 1.4.1-SNAPSHOT\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/40#issuecomment-14371109\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Which sample did you get that error in ?\nThx for reporting it.\n(Also if you have a few minutes, would you mind to add (if\nspiceManager.isStarted() ) around the spiceManager.shouldStop() to see it\nthe problem is solved), we would add the patch quickly.\nS.\n2013/5/13 alberovalley notifications@github.com\n\nHi, I just cloned the samples last night and this issue keeps reproducing.\nThese are the logs I get (no warnings, though)\nhttp://pastebin.com/1UY4b1qh\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/40#issuecomment-17798830\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi albero,\nall you say looks good. I just wonder how you can get a call to shouldStop\n(so a call to your onStop method in your activity..) before onStart can\nhave been executed. Is there any special case in your app ? Something we\nmight not have thought of ? (like a startActivityForResult..) What can\nexplain this strange activity life cycle ?\nS.\n2013/5/13 alberovalley notifications@github.com\n\nYes, using \"if (spiceManager.isStarted()) \" it prevents exceptions, though\nit seems it won't load data.\nI've taken spicelist sample (the one with the tweets list) and used it to\nbuild a feed reader. I use the simpletextrequest and the\nSpringAndroidSpiceService that came along with the sample. My base activity\nhad only the spiceManager start and stop calls.\nAnything else that can be of help?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/40#issuecomment-17802028\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. This issue comes from an old version of Support with a bug that has been reported and corrected in latest versions (unfortunately not available on maven central). Until a better solution is found to distribute newer releases of the support library, the best solution is to use maven sdk deployer to get latests artifact. Then exclude the groupId and artifact of the support library of RS and use the groupdId and artifact Id of you own support library.\nSt\u00e9phane\n. Hi all,\nI am currently integrating your pull request. I should publish it today on github. Thanks for your work, there are plenty of nice ideas.\nI am having an issue with one of the tests though : \nbash\n[INFO]     junit.framework.AssertionFailedError: expected:<400> but was:<200>\nat com.octo.android.robospice.persistence.binary.InFileBitmapObjectPersisterTest.assertBitmapSizeEquals(InFileBitmapObjectPersisterTest.java:42)\nat com.octo.android.robospice.persistence.binary.InFileBitmapObjectPersisterTest.testLoadDataFromCacheNonDefaultDecoding(InFileBitmapObjectPersisterTest.java:81)\nAfter a deep investigation, it seems to me that this can't be tested : we can't assume anything about the size of the bitmap returned. The [Android docs](http://developer.android.com/reference/android/graphics/Bitmap.html#compress(android.graphics.Bitmap.CompressFormat, int, java.io.OutputStream) clearly states that  : \n\nNote: not all Formats support all bitmap configs directly, so it is possible that the returned bitmap from BitmapFactory could be in a different bitdepth, and/or may have lost per-pixel alpha (e.g. JPEG only supports opaque pixels).\n\nSo there is no real way to know about the size of a given bitmap when it is compressed and stored in cache. So, when we uncompress it using a bitmap factory, the BitmapConfig may differ from the original's bitmap's config.\nDo you agree with this ? Can I remove both tests about Bitmap size testing ? After all, we are more or less testing the BitmapFactory code here...\nOtherwise, I got checkstyle working on your code, and improved the code to fit with RoboSpice coding style.\nI also changed the loading mechanism of the Bitmap persister to comply with the general contract of persisters (in case of file miss for instance, there should be no exception thrown).\nI still wanna take time to think about the architecture of your pull request as I feel that something even more generalized could be derived from it. \nOh, and about the support version, I would prefer not to include anything just because support's artifact are not up-to-date on maven central. If people really want a cutting edge version of the support lib, they can change the RS poms and get the new release in a local nexus. That's the maven way to deal with third party artifacts usually, and it would be quite difficult to apply the same reasoning to other libs (like android jars themselves for instance).\nI will come back to you today. Again, thx for this idea --> patch, good job. ;) \nSt\u00e9phane\n. One last thing : please, don't update you code from this pull request anymore. I got a local branch with quite a lot of changes right now. And the formatting issue makes it more difficult to have a fluid fork / pull / merge cycle.\nSo don't worry if this pull request gets rejected, it will, as your code will be merged more manually.\nI will publish ASAP so that you can update your code by updating again your repo from our central github repo in case you wanna change things. \n. About BitmapFactoryOptions, the problem was using RGB565 as a BitmapConfig. This produced an image that the PNG formatter could not save \"as is\", it changed the bitdepth of the image automatically. \nNeverthless, I realized that we could keep the tests using only the large image, checking if it had been downsampled or not according to the BitmapFactoryOptions passed to the persister.\nThis only works with the largest bitmap\njava\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        TEST_BITMAP_LARGE.compress(Bitmap.CompressFormat.PNG, 0, out);\n        out.close();\n        byte[] data = out.toByteArray();\n        Bitmap bitmap = BitmapFactory.decodeByteArray(data, 0, data.length, null);\n        assertBitmapSizeEquals(TEST_BITMAP_LARGE_SIZE, bitmap);\n--UPDATE\nAll this is confirmed by the libpng doc : PNG format only supports RGB 888 (or RGB 161616) format (w/o alpha), so this seems logical.\n. Hi David and Mike,\nit seems to me that, except a couple of changes, merely with respect the original contract of ObjectPersister, the LruCacheObjectPersister and descendants, and the InFileBitmapObjectPersisterdo work. There was also a bit of over engineering that I cut off.\nNevertheless, diving deeper into the code, I faced a couple of problems when using a LruCacheObjectPersister  as a decorator around a real ObjectPersister. I know I submitted the idea to you, and I feel sorry as I think it might not work in general. Neither can the idea of a general fallback ObjectPersister can work. BUT, it approximately works for Bitmaps, and the approximation is good enough.\nLet me detail further what bugs me : \n- one core feature of LruCache is its ability to measure the size of an item in cache in order to control it's size and apply a LRU strategy. For a Bitmap, it's a good approximation to say that \"the size of a bitmap in memory\" is equivalent to the size of its pixels. So, OK, for bitmaps, it works. For Strings also, but not for other java objects as there is no way to know the size of a java object inside a JVM or a dalvik. \n- second, it can not work for InputStreams : it is not possible to recycle InputStream, I mean read the same input stream twice. Once an InputStream is read, it can't be rewinded and read again. Thus, it's pretty bad for a cache. We could make it work, but we would have to copy stream contents or re-read them from cache files... and the LruCache would be useless or inefficient.\n- third, when the LruCache gets a \"miss\" (not a \"hit\"), we should look at fallback ObjectPersister and refill the LruCache. The LruCache can have been wiped out after memory got cleaned by the system and we must check the disk cache to check if we already have this Object. That's fine actually. But, to achieve that in a clean way, the \"creation date\" of the item in the LruCache should be set to the \"creation date\" of the file in cache. And this feature is missing right now in RoboSpice : there is no way to know when some content has been created. We could add this feature, but up to now, we don't have it.\nSo, to sum things up, it seems to me that : \n- LruCacheObjectPersister works fine without any fall back mechanism, but it is only limited to a very narrow subset of classes you can put in the cache.\n- InFileBitmapObjectPersister works just fine and I believe it can be very useful to avoid bitmap decoding on the UI thread as proposed by Google. But I also feel that this can be quite tricky when dealing with images received from the network : when performing the RoboSpice request, developers will have to down sample the image before passing to the CacheManager (before returning the bitmap). We should help and build a BitmapSpiceRequest for that.\n- LruCacheBitmapObjectPersisterworks fine with its persister. It's based on an approximation and will need some work to get the \"creation date\" right but it will work fine and be very highly optimized.\nWhat do you guys think ?\nSt\u00e9phane\n. LRU patch has been merged on github. \nFinally : \n- I added the missing feature to get the creation date of an item in cache to RoboSpice\n- I integrated most of your classes \n- I added a BitmapRequest as well\n- and tested.\nI would be happy to get your feedback.\n. Hi David,\nwe are definitly having a very deep talk on this module :)\nAnswer\n- LruCacheObjectPersister 's constructors are 2. They represent the 2 modes of this persister. In the first one, the persister is working standalone, in the second one, it needs a fallback mechanism. The application context is generally required by persisters as they will want to either create files or databases, and then need an app context for that. In the case of this class, there is no such persistence scheme, only a RAM \"persistence\" and there is no need of an app context to put things in RAM. I don't think it might get a source of troubles for subclasses as they should not require it either and I find it more clear for devs (ok, some javadoc is missing) not to have to give a useless parameter that could give the feeling of a \"strong/file\" persistence.\nComments\n- I was pretty sure tests were working for you on your test target. Nevertheless it doesn't on mine. I just hope the new tests run as well on your test target ! But really, it would be hard to investigate as this is done natively in android, there isn't any java code to decode a bitmap... So we might just never know if an underlying lib changed (I use a cutting-edge cyanogen rom that could also be a source of differences).\n- I think it would be almost impossible to provide an approximation for an average POJO. It comes down to deep Java questions about the JVM, aggregation, composition, garbage collection, in memory object graphs etc... Really, I would not recommand to any one to follow this track.\n- on the master branch of the repo, you can find an update of the SpiceList sample. It uses the new BitmapRequest and InFileBitmapObjectPersister, and really, it allows to go further that anything done previously in that area. I really believe we have something very close to the most optimal ever implementation of a list with image management.\n- Even if I was eager to test this, please, do provide a more simple sample for using the library with Bitmaps. I am curious about a use case for LruCaching. I like the way it's done, but I got reserve on the use case. Make something simple and enlighten me ;)\nTests & Javadoc\nPlease go ahead. I agree test coverage is not right yet and RoboSpice is becoming so rock solid, I would blush if the code remained in that state, I poorly tested that part. \nBitmap request based on Spring Android and google http clients\nI don't think so. The only advantages of those libs (without respect to parsing of POJOs, but that's not the point here) is the switch between the Apache client impl and HttpUrlConnection. But here, even a \"buggy\" HttpurlConnection is good enough to download bytes.\nThanks for your meticulous peer review and comments.\nPS : inline more stuff please (Error messages, local variables)\nPS 2 : we got a release branch and a master=dev branch now. Please code on master for both lib and samples. You could consider reforking your repo if you are not that much used to git  (I am still learning personaly).\n. Hi David,\nif that kind of approximation can be useful to developers, why not. I really wonder how fine it would work, but it could. ;)\nWould you like to document that, maybe just repeating what you just wrote ? Give me some text to add to a RoboSpice Wiki page (in the markdown format). The idea would be to explain how to use the LruCache stuff to developpers, and how to \"build approximations\". A sample would also be great. This will be added in a 1.4.1 release of both core and cache modules.\nBtw, wouldn't it be worth adding a mechanism to get the size of cache file created by the fall back ObjectPersister ?\nGreetings,\n St\u00e9phane\n. Yes. I would have loved to get rid of this too. \nBut the actual reason for this is is :\nas they can handle large binary streams, they don't store any data in memory but write down the result in a file directly. But the problem is that requests are cache agnostic, they don't even know whether or not they will be cached, or there if there will be any cache. So I ended up providing them a storage destination file directly.\nAny better approach is welcome.\n. @Mark Shipton the IBitmapRequest.getCacheFile will be used to store the\ndata of a large bitmap request. The problem is that many images are too\nheavy to be stored twice in memory : once when downloading and once when\nuncompressed. So the idea is to avoid storing the downloaded data in memory\nand this cache file is used to store data directly on disk.\n2013/8/1 Mark Shipton notifications@github.com\n\nIn the case of the BitmapRequest the Bitmap result is always be loaded\ninto memory. Whether it is done through decodeFile or decodeStream. It's\nprobably less efficient to do it via decodeFile because you have the extra\nfile r/w overhead.\nSince the requests are cache agnostic is IBitmapRequest.getCacheFile\npresent to give some sort of basic cache in case the SpiceService doesn't\nprovide one?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/41#issuecomment-21922486\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. David Stemmer has been working on an LruCache in memory that is supported by a file based ObjectPersister. It is integrated to master github's branch for now. We are waiting for a sample from David to integrate this new tech and realeasing RoboSpice cache 1.4.1.\n. The problem I got with this approach is that you can never know on Android\nwhen your process is gonna get killed by memory pressure.\nIn that case, we have no hook to get notified and put the data to disk\nbefore the RAM cache get garbage collected.\nS.\n2013/2/17 andaag notifications@github.com\n\nIs there a pull request/discussion about this somewhere?\nHis approach is very simple and clean, and one I've seen used many places.\nsave:\nput to memory cache\nput in disk cache\nHowever, I'd like an option to do this instead:\nput in memory cache\nif memory cache full (on entryRemoved(evicted=false)) drop to disk cache.\nIt might be a good idea to try to group up the cache cleanups as well, to\nreduce disk io as much as possible and extend battery life. I don't know if\nit's a better idea, and it's more complicated, but I think it's worth\nconsidering.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/42#issuecomment-13682512.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Ok, I would be open to an implementation. Do you wanna fork RS ?\nS.\n2013/2/17 andaag notifications@github.com\n\nYou can monitor onTrimMemory, I believe that's a pretty sure way of\ncatching it. And you can do that in the service itself, so the activity\nknows as little about the caching/background stuff as possible.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/42#issuecomment-13689628.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Fine ;)\n2013/2/19 andaag notifications@github.com\n\nBuilding something that sticks with memory cache by default and monitors\nonTrimMemory is on my todo list, but we're not quite there yet. When we get\nthe application I'm working and move on to the polishing stage we'll do\nsome performance measurements in the caching system and see if we want to\nreplace it. If we get it working well you can expect a pull request :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/42#issuecomment-13761163.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Issue is closed to clean up the list of issues. It can be reopened by anyone to submit a pull request.\n. You are right, but is that possible with github ?\n2013/5/16 StingerAJ notifications@github.com\n\nWouldn't it be better to assign a new label \"needs contribution\" or\nsomething like that instead of closing?\nI don't think people will easily contribute to closed issues.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/42#issuecomment-17988251\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Execution of a request will overwrite former cache entries if and only if it has something to save. If there is no result from a request, nothing goes into the cache and an older result, but expired, would be preserved.\n. That's a very good point and I am glad RoboSpice starts being mocked ;)\nCan you precise your question ? There are actually plenty of publicly exposed methods that you can mock. Which part is more difficult / interesting to mock ?\n. I am not sure of what you want to achieve : \n1. create a mock of a spice manager and inject it into your own class dependencies\n2. create a mock of the spice manager dependencies and inject them into the spice manager class to test it ?\nIt seems to me you want to achieve the first goal. So why can't you mock the SpiceManager class ? What kind of partial mocking are you looking for ?\n. RoboSpice request's support progress. If you are interested in progress, let you RequestListener implement RequestProgressListener. You will receive different callbacks : \n- state change inside RoboSpice framework (getting data from cache, networking, saving data to cache)\n- progress of network operations.\nBut note that this last feature is not supported by every module. SpringAndroid doesn't offer to get callback when downloading for instance. Nevertheless it works well for the basic simple request provided by RoboSpice itself (like BinaryRequest, StringRequest, etc.).\n. Which version of RoboSpice are you using. The stack trace doesn't match actual code state.\n. You'r right, I took the wrong class. Bug is being investigating. Supporting null listener was not part of the specs of the RequestProcessor. But after all, it should be possible as well. \nNevertheless, would you have a test for the bug to appear using cancel ?\n. Bug has been solved and a new test has been added. It is available on master branch and has been cherry picked to release branch for next release.  \nThx for your help. Let's investigate the mocking problem now ;)\n. If you want to by pass this mechanism, that is offered as convenience by\nRS. Simply use a binary request, save your data in the original format\n(json, but considered as binary stream) and parse your data in the way you\nwant, but you will be on your own for parsing it.\nSt\u00e9phane\n2013/2/17 andaag notifications@github.com\n\nWe have our own ObjectPersisters, but the data passed in to that class is\nthe type returned from loadDataFromNetwork. An alternate way would be to\nignore the data returned, and do the caching manually within\nloadDataFromNetwork, but that's far from optimal.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/49#issuecomment-13687085.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I am sorry for your effort, but the source tree of RoboSpice is and will remain IDE agnostic. That's the easy way to encourage diversity of IDE for contributors.\nNevertheless, I didn't understand your motivations for this pull request. Is there any way in which we can help ?\nSt\u00e9phane\n. There is no problem with such an approach. That's the current state of the\nart on Android :\n1. either you use ant / eclipse adt and you put ABS (for instance) in\n   the same workspace and put RS in the libs folder. RS will benefit from the\n   support library of ABS.\n2. or you use maven and then you have all conflict resolution from maven\n   and don't have any problem.\nThe only trouble is that you can often get some mixed configuration and\nsome jars can be doubled. For instance ABS puts its jars in libs, and\nthat's a bad practice IMHO, people should do it in their own projects. The\nresult with ABS approach is that your android maven project also inherits\nthe libs folder of project libraries  under eclipse and jars get doubled.\nThere is a patch of ADT to prevent this from happening, but it has been\naccepted yet.\nSt\u00e9phane\n2013/2/25 Arne Jans notifications@github.com\n\nFYI: The only problem I have with the library-project approach is: two\nlibrary-projects having the same dependency which is forbidden by the\nAndroid build-system (in my case android-support-v4.jar, which is required\nby robospice-cache and actionbarsherlock). Which I solved by putting the\nrobospice-jars in the libs-dir.\nBut this doesn't mean the library-projects approach isn't useful, neither\nthe \"put the jar-files in the libs-dir\" approach.\nBTW: if you feel that this discussion would be better placed in the Google\nGroup, then let me know and I would paste my part there.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/50#issuecomment-14034551.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I had though about this as I am a big fan/user of Square libs too. Who\nisn't ? ;)\nTape could be interesting, mostly in the use case Christopher emphasized.\nNevertheless, I don't know much of it and it would be interesting to see in\nwhich way it could be mixed with RoboSpice, maybe in an extension module. I\nonly fear it's gonna enforce some constraints on requests (such as beeing\nserializable), and that would be far too strong as RS gives more freedom in\nbuilding requests.\nS.\n2013/2/28 Christopher Jenkins notifications@github.com\n\nI was thinking about this when I get around to it, Its only really useful\nfor posting data making sure it isnt lost. For standard requests I would\nuse the GoogleClient combined with retry policy.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/52#issuecomment-14251034\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. If any one is interested to contribute to such a module, that would be a good contribution. Otherwise I would postpone it.\n. Fine for me. Feel free to knock again when you are ready to work on that. I\ntend to prefer talking with people before they submit a pull request so\nthat we can agree on a new feature, the way to implement and test it.\nRegards,\n St\u00e9phane\n2013/3/4 El Potaeto notifications@github.com\n\nHi Nocholas,\nI am still playing with the library, I need to have some experience with\nit before doing that. You may close this thread if you want, this task is\nalready in my TODO list, just not yet at the top.\nRegards\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/52#issuecomment-14371431\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Not at all. Would you like to submit a PR & become an enthousiastic RS contributor ?\n. Any link @chrisjenx ?\n. I finally got some time to process my robospice email. This pull request looks really great. I look into it.\n. Hi fernando, I am gonna pull your branch to try it. I read your commit diffs but couldn't understand the details. It seems to me that you are doing other things than advertised : if the data is expired, listeners won't get the data in cache, exactly as it used to be. You will perform a network request, that's ok, but I believed you wanted to return any data in cache.\nMaybe I couldn't understand what you meant exactly but it seems to me that you wanted to get the data in cache, expired or not, and then perform request anyway. To achieve that, I believe it could parametrized at the request level more than at the request processor level.\nDo you have any tests to assert you get the right behavior ? \n. Hi Fernando, I am still in your code. I am bugged by the lack of tests as I can't truly understand what you really wanted to achieve.\nIf it was about getting data from cache and sending a request. Wouldn't it be simpler to just invoke : \n- spiceManager.getDataFromCache()\n- then spiceManager.execute(..., CacheDuration.NEVER, ...)\n  ?\nI would feel much more confortable if we introduced a mechanism to achieve the same result as your pull request, but at the SpiceRequest level, more than at the RequestProcessor itself. You are right, the behavior is quite \"standard\" and it should be possible to do it with a single statement. I am gonna try something in that direction.\n. I could achieve the same behavior with the method I proposed a bit earlier. There is now a new request called : \n- getFromCacheButLoadFromNetworkAnyway\nI tested and had the feeling it matched exactly what you wanted to achieve, Fernando. @ffgiraldez , can you confirm it works ?\n. @Christopher\nThe method will always check for fresh data from the network, but, before\nthat, it would return data in cache, with respect to a maximum cache\nduration. There is nothing really new in this method, it's more a use case\nthan a new feature as far as I understand it.\nSt\u00e9phane\n2013/3/2 Fernando Franco G\u00edraldez notifications@github.com\n\nTomorrow i will check it thanks a lot\nEl mar 2, 2013 5:42 p.m., \"Christopher Jenkins\" notifications@github.com\nescribi\u00f3:\n\nSounds like it should be called.\ngetFromCacheAndLoadFromNetworkIfExpired as my understanding is it will\nonly\nhit the network if it's expired cache ?\nOn 2 Mar 2013 16:26, \"stephanenicolas\" notifications@github.com\nwrote:\n\nI could achieve the same behavior with the method I proposed a bit\nearlier. There is now a new request called :\n- getFromCacheButLoadFromNetworkAnyway\nI tested and had the feeling it matched exactly what you wanted to\nachieve, Fernando. @ffgiraldez https://github.com/ffgiraldez , can\nyou\nconfirm it works ?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/pull/53#issuecomment-14330699>\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/pull/53#issuecomment-14330941>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14331922\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I didn't understand Fernando. Could you explain using a \"user story\napproach\" : if the data in cache is valid, then ... etc...\nS.\n2013/3/4 Fernando Franco G\u00edraldez notifications@github.com\n\nThe problem I see to method \"getFromCacheButLoadFromNetworkAnyway it\nalways makes a network call, and is not good for the battery and bandwidth,\nthe approach would be more correct if the cache checking is performed\noutside the method loadDataFromCache like in InFileObjectPersister with the\nmethod isCachedAndNotExpired but at CacheManager level, so\n\"getFromCacheButLoadFromNetworkAnyway can add the condition to make the\ncall network only when necessary\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14369674\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Don't worry Fernando, it's not my mother tongue neither. We are all more or less speaking an international degraded dialect of english ;)\nI am sorry, it really took me a while to figure it out. I got it now. :)\nReally, java pseudo code is my favorite esperanto ;)\nCan I just assume you wanna go to the network if cache content is expired or empty ?\nI am gonna think about it and propose something to you pretty soon, restarting from your work.\nSt\u00e9phane\n. Thx @chrisjenx  :)\n@ffgiraldez, let's see if our new lingua franca is better for mutual understanding  : \nWould you mind to try the new spiceManager.getFromCacheAndLoadFromNetworkIfExpired method ?\nIt is on git master branch and has been deployed to sonatype's snapshot repo.\n. Ok, I believe I understand : if result is found and not expired, then listeners should receive it. Otherwise, if request accepts dirty cache, then we look for some content in cache (regardless of expiry). And in that case (data is expired and request accepts dirty cache), data will be updated from network as well.\nIs that it ?\nMaster branch has been updated. We wait for your validation before including this feature in release 1.4.1.\n. Wow, great news. So this should be released pretty soon now :)\nThanks for you patience and determination to get that feature into RS.\n. Do you have any concrete example ? \n. Ok, so what exactly would you like to change in RS to do that more easily ?\nS.\n2013/3/2 Christopher Jenkins notifications@github.com\n\nWell I am using a shared executor pool between a few things.\nSo I have ~4 Threads, There are a few different ideas around execution\npolicys that would be handy for a few cases.\nThe one I'm looking at is loading images in a list, generally you want to\nkeep 1 thread free out of the ~4 to make sure that you can pull from the\ndisk while the others are waiting for a http response. So the request\nprocessor would not execute until it had > 1 threads free.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/54#issuecomment-14327276\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Closed in 23aee7a012cfb4bd10b2f9d0970325e0165946b0.\nThanks for this feature.\n. Hi El patateo,\nyou can't really switch from one parser to another one. Just because those\nparsers are not (yet) compatible or don't rely on a common convention (such\nas JPA for ORMs). Indeed they differ in the way they parse objects and on\nthe annotations they recognize while parsing. The major part of a\nswitch-work would be that.\nWe don't detail this kind of things in RoboSpice as it is up to developers\nto get information on how to use the lib they choose to use within\nRoboSpice.\nThanks for your continuous interest in RoboSpice,\nSt\u00e9phane\n2013/3/4 El Potaeto notifications@github.com\n\nHi,\nFor some unknown reason, on a project I compiled the Google HTTP example\nwhich worked, I modified it to use my own JSON which is a simple array of\nbeans (few strings per objects).\nFor an unknown reason the result was an array of tons of null objects\n(tried Jackson 1, 2, and GSon).\nI switch to Spring example, compiled it, switch to my JSON, made the\nneeded modification and it worked in less than 30 minutes.\nHowever, I need Google HTTP for other things, so I want to switch back to\nGoogle HTTP.\nEach source code examples are implemented in a very different manner (more\ncode in Google HTTP). I have not so much experience in Robospice, but I\nnoticed that to switch from Jackson to Gson, I just needed to change of\nRobospice factory and very few other things, and it worked automagically.\nMay be I am doing something wrong, but it seems to me that this method\ndoesn't work to switch from Spring to Google HTTP. Am I right? Does the use\nof one of these library implies a kind of implementation not compliant with\nthe other, or am I stupid enough to not have found all the equivalent\nRobospice factories of Spring in Google HTTP Robospice implementation?\nIn other word, does the support of these library is symmetric in Robospice?\nRegards\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/56\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Could you confirm it happens with RoboSpice 1.4.1-SNAPSHOT ?\nIt is available on sonatype's snapshots repo.\nSt\u00e9phane\n2013/3/4 Sergej Ko\u0161\u010dejev notifications@github.com\n\nHi,\nI'm trying to implement a list with dynamically loaded images. After\nintensive scrolling back and forth (which involves cancelling old requests\nand creating new ones) RoboSpice has crashed my app, stack trace is below.\nI'm using RoboSpice 1.4.0.\n03-04 11:17:26.803: ERROR/AndroidRuntime(2533): FATAL EXCEPTION: main\n        java.lang.NullPointerException\n        at com.octo.android.robospice.request.RequestProcessor$ResultRunnable.run(RequestProcessor.java:496)\n        at android.os.Handler.handleCallback(Handler.java:615)\n        at android.os.Handler.dispatchMessage(Handler.java:92)\n        at android.os.Looper.loop(Looper.java:137)\n        at android.app.ActivityThread.main(ActivityThread.java:4921)\n        at java.lang.reflect.Method.invokeNative(Native Method)\n        at java.lang.reflect.Method.invoke(Method.java:511)\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1027)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\n        at dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/57\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi sergej, I re-deployed a new snapshot for this issue. Just now. Can you try it ?\nAlthough this bug is quite valuable for us, wouldn't you better served by a SpiceList btw ?\nThanks, \n St\u00e9phane\n. Stinger, you can either compile the current master branch or use the\nsnapshot repo of sonatype.\nRelease 1.4.1 should be out by the end of the month.\nSt\u00e9phane\n2013/3/6 StingerAJ notifications@github.com\n\nOh, one important thing I remember, The related HashMap-iterating code was\nabout notifying the OctoImageRequestListener-instances on the main\nUI-thread, so the app crashed because of this.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/58#issuecomment-14486385\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I released a new snapshot (both sonatype and our own repo on github) to get\nthe line numbers right. Would you mind logging a new stack trace ?\nIs there any way I can reproduce the problem ? / Write a test for TDD ?\n(all jars are gonna finish uploading within 10 mn after this mail is sent)\nSt\u00e9phane\n2013/3/11 Sergej Ko\u00b9\u00e8ejev notifications@github.com\n\nGot the same exception in ProgressRunnable.run (using 1.4.1-SNAPSHOT):\nFATAL EXCEPTION: main\njava.util.ConcurrentModificationException\nat java.util.HashMap$HashIterator.nextEntry(HashMap.java:792)\nat java.util.HashMap$KeyIterator.next(HashMap.java:819)\nat\ncom.octo.android.robospice.request.RequestProcessor$ProgressRunnable.run(RequestProcessor.java:402)\nat android.os.Handler.handleCallback(Handler.java:615)\nat android.os.Handler.dispatchMessage(Handler.java:92)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:4921)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1027)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\nat dalvik.system.NativeStart.main(Native Method)\n\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/58#issuecomment-14718239\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi to all people who wanna participate on this issue.\nWe need :\n- the version of RoboSpice you tried (actually we got a wonderful\n  snapshot repo on sonatype and our own snapshot repo on github - repository\n  branch of RoboSpice - for ant users)\n- ideally, a test that we can run to find the problem and correct it.\n- if you don't have a test, a simple app / procedure to reproduce the\n  issue.\nOtherwise, we sincerly can't do much.\nSt\u00e9phane\n2013/3/14 gcacace notifications@github.com\n\nI got the same problem when I register and unregister some listeners\nduring a spice request execution.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/58#issuecomment-14896913\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Would you like to submit a pull request to indicate which accesses are\npossibly dangerous and patch them ?\nS.\n2013/3/19 gcacace notifications@github.com\n\nI see that in RequestProcessor.java there are concurrent accesses to the\nMap \"mapRequestToRequestListener\", outside synchronized blocks, so the\nConcurrentModificationException happens when the map is iterating and some\nconcurrent task is putting or removing something inside the map. To fix\nthis bug I think it's necessary to add some synchronized blocks or to use a\nSynchronized Map. Anyway I'm using the latest RoboSpice version\n1.4.1-SNAPSHOT.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/58#issuecomment-15110409\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi nilkashid, this issue is postponed to a next release as we want 1.4.1 out quickly now. \nThe ORM lite module of RoboSpice is not yet as mature as other solutions of persistence. It would require some additional work no to be in beta anymore. \nBut you are right, RoboSpice only uses Database as a cache. You are on your own if you want to manipulate the database out of RoboSpice and ORM Lite.\n. RoboSpice makes it more easy and robust to use Spring Android or Google Http Client.\nYou can find examples of this kind of requests on their respective web site or samples or mailing lists.\n. Indeed all Spring Android Modules dependencies are optional. If you want to\nuse Jackson 2 with the SpringAndroid Module, just use it as a dependency\nfor maven (or libs folder for ant/adt) within your project. Be sure not\ninclude the Jackson 1 dependency (or jars) and Spring Android will switch\nto Jackson 2.\nWe made the jackson 2 dependency optional in the Spring Android Module and\nadded some support classes to create a Jackson2 based SpringAndroidService.\nThis all is in the master branch and will be released in version 1.4.1.\nI don't close the issue as :\n- docs need to be updated\n- it would be nice to get a sample. Do you feel like writing one ? It\n  should be easy if you start from the first spring android module sample and\n  create a new one using jackson 2.\nThanks for this feature.\nS.\n2013/3/7 James Campbell notifications@github.com\n\nPlease could you add support for Jackson 2.1 in the Spring Module.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/61\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. A snapshot has been deployed on sonatype maven repo.\nI also uploaded the jars to our internal repo for maven users :\nhttps://github.com/octo-online/robospice/tree/repository/dependencies/1.4.1-SNAPSHOT/robospice-spring-android\nTake all the needed jars, remove the unneeded ones and it should work.\nSt\u00e9phane\n2013/3/9 James Campbell notifications@github.com\n\nI don't use maven yet but if there is a tutorial to switch over to it\nthat would be very useful :)\nAnd awesome I will take a look and write a doc / a sample if I can get\nit working.\nOn Sat Mar 9 10:53:41 2013, stephanenicolas wrote:\n\nIndeed all Spring Android Modules dependencies are optional. If you\nwant to\nuse Jackson 2 with the SpringAndroid Module, just use it as a dependency\nfor maven (or libs folder for ant/adt) within your project. Be sure not\ninclude the Jackson 1 dependency (or jars) and Spring Android will switch\nto Jackson 2.\nWe made the jackson 2 dependency optional in the Spring Android Module\nand\nadded some support classes to create a Jackson2 based\nSpringAndroidService.\nThis all is in the master branch and will be released in version 1.4.1.\nI don't close the issue as :\n- docs need to be updated\n- it would be nice to get a sample. Do you feel like writing one ? It\nshould be easy if you start from the first spring android module\nsample and\ncreate a new one using jackson 2.\nThanks for this feature.\nS.\n2013/3/7 James Campbell notifications@github.com\n\nPlease could you add support for Jackson 2.1 in the Spring Module.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/issues/61\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/octo-online/robospice/issues/61#issuecomment-14661226>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/61#issuecomment-14662366\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. typo  :  also uploaded the jars to our internal repo for maven users :\n--->for non maven users\n\n\nS.\n2013/3/9 St\u00e9phane Nicolas snicolas@octo.com\n\nA snapshot has been deployed on sonatype maven repo.\nI also uploaded the jars to our internal repo for maven users :\nhttps://github.com/octo-online/robospice/tree/repository/dependencies/1.4.1-SNAPSHOT/robospice-spring-android\nTake all the needed jars, remove the unneeded ones and it should work.\nSt\u00e9phane\n2013/3/9 James Campbell notifications@github.com\n\nI don't use maven yet but if there is a tutorial to switch over to it\nthat would be very useful :)\nAnd awesome I will take a look and write a doc / a sample if I can get\nit working.\nOn Sat Mar 9 10:53:41 2013, stephanenicolas wrote:\n\nIndeed all Spring Android Modules dependencies are optional. If you\nwant to\nuse Jackson 2 with the SpringAndroid Module, just use it as a dependency\nfor maven (or libs folder for ant/adt) within your project. Be sure not\ninclude the Jackson 1 dependency (or jars) and Spring Android will\nswitch\nto Jackson 2.\nWe made the jackson 2 dependency optional in the Spring Android Module\nand\nadded some support classes to create a Jackson2 based\nSpringAndroidService.\nThis all is in the master branch and will be released in version 1.4.1.\nI don't close the issue as :\n- docs need to be updated\n- it would be nice to get a sample. Do you feel like writing one ? It\nshould be easy if you start from the first spring android module\nsample and\ncreate a new one using jackson 2.\nThanks for this feature.\nS.\n2013/3/7 James Campbell notifications@github.com\n\nPlease could you add support for Jackson 2.1 in the Spring Module.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/issues/61\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/octo-online/robospice/issues/61#issuecomment-14661226\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/61#issuecomment-14662366\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Docs have been updated on wiki to take Jackson2 into account when using the Spring Android module.\n. Answered on sof.\nLe 11 mars 2014 18:02, \"NammariVIP\" notifications@github.com a \u00e9crit :\n\nhttp://stackoverflow.com/questions/22331514/using-robospice-with-jackson2-and-spring\n\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/61#issuecomment-37320822\n.\n. You are right. We had some copy paste artifact in the javadocs of\naddListenerIfPending.\n\ndocs have been updated on master branch and will be released in version\n1.4.1.\nThanks,\n St\u00e9phane\n2013/3/7 Dorian Cussen notifications@github.com\n\nHi, not really an issue but this has caused some confusion amoungst my\ncolleages and I. The SpiceManager.addListenerIfPending()http://octo-online.github.com/robospice/site/latest/apidocs/com/octo/android/robospice/SpiceManager.html#addListenerIfPending(java.lang.Class,%20java.lang.String,%20com.octo.android.robospice.request.listener.RequestListener)\ndoc description is a little unclear I feel.\nthe listener to notify when the request will finish. If nothing is found\nin cache, listeners will receive a null result on their\nRequestListener.onRequestSuccess(Object) method. If something is found in\ncache, they will receive it in this method. If an error occurs, they will\nbe notified via their\nRequestListener.onRequestFailure(com.octo.android.robospice.persistence.exception.SpiceException)\nmethod.\nThe bold above seems to suggest this method will attach a listener a\npending request while also performing the function that is covered by\nSpiceManager.getFromCache()http://octo-online.github.com/robospice/site/latest/apidocs/com/octo/android/robospice/SpiceManager.html#getFromCache(java.lang.Class,%20java.lang.String,%20long,%20com.octo.android.robospice.request.listener.RequestListener\n)\nIn the situation where you want to be able to leave an activity and be\nable to return to it and get the last response (or if it has not arrived\nyet attach the listener for the pending request) you seem to need to use a\nsimilar approach used in the example apps onStart methodhttps://github.com/octo-online/RoboSpice-samples/blob/release/robospice-motivations/src/com/octo/android/robospice/motivations/robospice/tweeter/xml/TweeterXmlSpiceActivity.javacombined with a unique key for each request that can be saved in the saved\nstate bundle for an activity / fragment.\nHave I understood this correctly? If so a tweak to the docs to reflect\nthis would be great :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/62\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I can't reproduce the issue. All works well within the emulator (HAX) and\nmy 2 devices (cyanogen nightly builds of Android 4.2.1).\nWhat version of the Android platform do you observe this bug on ?\nS.\n2013/3/8 StingerAJ notifications@github.com\n\nThis is noticeable in our own app with a GridView often not showing\npictures the first time the cells are displayed, but only on the second or\nthird time you revisit the specific page.\nThe images are cached fine in the app's cache-directory and are simply not\ndisplayed, as it seems.\nThe same behaviour can be observed in the robospice-sample-ui-spicelist,\nwhere often avatar-pictures aren't loaded the first time.\nThe logcat-output doesn't state any error messages regarding those\nspecific pictures, except those AsynTask-messages for the SpiceArrayAdapter\nand messages like \"Modification time of file could not be changed normally\"\nbut those don't seem related to the nonloading pictures.\nAssuming it would be a concurrency-problem, I also tried with setting the\nDEFAULT_NUM_THREADS to 1 but this had no effect.\nIf you need anymore information, please let me know.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/63\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Ok, let me know. I redeployed everything to check this out.\n(jars will be uploaded in sonatype SNAPSHOT repo and our own github repo\nwithin a few minutes)\nS.\n2013/3/11 StingerAJ notifications@github.com\n\nI will test this again with latest master-version and let you know if it\nis reproducable there.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/63#issuecomment-14706637\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Any follow up on that thread ?\n. Cleaning up issues. The problem seems to be solved in 1.4.1 release.\n. Other Options are interesting to create a Content Provider like this project : \nhttps://github.com/stoyanr/Feeder/wiki/Content-Provider-Framework\n. And this one https://github.com/foxykeep/ContentProviderCodeGenerator\n. This one https://github.com/BoD/android-contentprovider-generator\n. And this https://github.com/jakenjarvis/Android-OrmLiteContentProvider/blob/master/README.md\n. This one was missing : https://github.com/mitmel/SimpleContentProvider\n. A new module is now in place. This issue was a reminder. Let's close it.\n. It looks like a duplicate of issue #66 :\nhttps://github.com/octo-online/robospice/issues/66\nWas you context life cycle a problem too ?\nS.\n2013/3/11 Mathieu Hausherr notifications@github.com\n\nI got a NPE on HAX emulator. This issue can't be reproduce on real devices.\n03-09 10:26:42.756: E/AndroidRuntime(2203): java.lang.NullPointerException\n03-09 10:26:42.756: E/AndroidRuntime(2203): at\nandroid.content.ComponentName.(ComponentName.java:75)\n03-09 10:26:42.756: E/AndroidRuntime(2203): at\nandroid.content.Intent.(Intent.java:3491)\n03-09 10:26:42.756: E/AndroidRuntime(2203): at\ncom.octo.android.robospice.SpiceManager.checkServiceIsProperlyDeclaredInAndroidManifest(SpiceManager.java:1058)\n03-09 10:26:42.756: E/AndroidRuntime(2203): at\ncom.octo.android.robospice.SpiceManager.run(SpiceManager.java:172)\n03-09 10:26:42.756: E/AndroidRuntime(2203): at\njava.lang.Thread.run(Thread.java:856)\nLook like context is null.\nThe WeakReference contextWeakReference is garbage collected.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/65\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. A snapshot has been deployed on sonartype and github repo. Please confirm bug is solved. A new test has been added.\n. If I may, this should be allowed by RoboSpice : you can fire a request before starting the spicemanager, it should keep it until it can bind to the service. The spice manager checks permissions when it starts running, after being started. So, this shouldn't fail... Thx for finding this bug.\n. A snapshot has been deployed on sonartype and github repo. Please confirm bug is solved. A new test has been added.\n. I got no idea of what is a sure-fire mwe..\nS.\n2013/4/21 Paul Lammertsma notifications@github.com\n\nI'm having an incredibly difficult time finding a way of reproducing this.\nIf anybody has a sure-fire MWE, I'm willing to test it against both\nversions.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/66#issuecomment-16745757\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Added to 1.4.2 milestone. Thx for this bug report.\n. you are right, failOnCacheError should also impact getFromCache\n. Added to version 1.4.2-SNAPSHOT. Snapshot is available on sonatype's RS repo.\n. Hi bjornz,\nthe way you annotate your pojo is the only problem to my mind.\nIf you follow the tutorial of simple xml serializer :\nhttp://simple.sourceforge.net/download/stream/doc/tutorial/tutorial.php#nested\nthen you will see that you both need to\n1. annotate the ListReview class a Root (as you did)\n2. annotate its whisky field using @Element (missing)\n3. annotate the whisky class itself to define what to persist (can't say\n   if done or not, but you say so)\nYour just not saying to xml serialize to seralize the whisky field of a\nreview.\nSt\u00e9phane\n2013/3/18 bjornz notifications@github.com\n\nThat's great, but it's still not working. It might have something to do\nwith Simple XML. I am getting the following errors in logcat:\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.newInstance, referenced from method org.simpleframework.xml.stream.StreamProvider.\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve static method 5870: Ljavax/xml/stream/XMLInputFactory;.newInstance ()Ljavax/xml/stream/XMLInputFactory;\n03-18 19:44:55.895: D/dalvikvm(27582): VFY: replacing opcode 0x71 at 0x0003\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to find class referenced in signature (Ljavax/xml/stream/XMLEventReader;)\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to find class referenced in signature (Ljavax/xml/stream/XMLEventReader;)\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.createXMLEventReader, referenced from method org.simpleframework.xml.stream.StreamProvider.provide\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve virtual method 5868: Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader (Ljava/io/InputStream;)Ljavax/xml/stream/XMLEventReader;\n03-18 19:44:55.895: D/dalvikvm(27582): VFY: replacing opcode 0x6e at 0x0002\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.createXMLEventReader, referenced from method org.simpleframework.xml.stream.StreamProvider.provide\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve virtual method 5869: Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader (Ljava/io/Reader;)Ljavax/xml/stream/XMLEventReader;\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/68#issuecomment-15074155\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. It all depends on the library you use to parse the data you receive from the server. If you use Spring Android, then you should consider using RestTemplate's getEntitiy*() methods instead of getForObject. Those methods give you a finer grained control over requests and response processing.\n. Yes, you're right. That's a bug. It's been added to the 1.4.2 todo list.\n. A fix has been pushed to master. It prevents non processable requests to go create an entry in map request-->listeners.\nNon-processable requests are also handled faster thanks to that fix, and I also enlarged the contract of equals()to include possible subclasses of CachedSpiceRequests. 2 new tests were also added.\nThis fix will be part of RS 1.4.3.\nThanks for this bug report, sorry to have lost your pull request in the wild.\n. Hi Alexander,\nit's really strange has the code you mention changed a lot and I even added\nsome tests to prevent this from happening again.\nBTW, RS 1.4.4 is available on maven central, although the bug you mention\nshould have been fixed in 1.4.3 already.\nWould you just mind providing a snippet of code about the issue, if you\ndon't have time for a real sample ?\nSt\u00e9phane\n2013/6/6 alexander-mironov notifications@github.com\n\nI tried Robospice 1.4.3 and the issue is still there. I'm going to create\nsample project in my spare time.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/70#issuecomment-19057209\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. My pleasure.\nSt\u00e9phane\n2013/6/6 alexander-mironov notifications@github.com\n\nI'm sorry, It's my fault. I've mistakenly used RS 1.4.2. The issue is\nfixed in RS 1.4.3 indeed. Thank you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/70#issuecomment-19062405\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I like the idea too but it seems to me that we should digg out more details\nbefore starting implementing stuff. I am particularly concerned about the\nlifecycle of such a request and its listeners.\n2013/3/27 Christopher Jenkins notifications@github.com\n\nI like the idea of this, We are looking at web sockets for the future\nimplementation. Will be nice.\nYour right RS is based on restful implementation.\nSo I think a noteable change in framework for effective 'stream' as\nopposed to 'request'.\nSomething like SocketListener and SpiceSocket which are initialised on\nstart stop.\nI guess the larger difference is that SocketListener is a bit more\ninvolved due to it needing to handle events.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/71#issuecomment-15548653\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. This topic should be adressed within a month. It is planned for next issue. If people wish to help, let's see if something can be done with RS in that matter.\n. I would enjoy if anyone could start the process of design thinking with the\ntool mentioned by David or not.\nI come back from holidays and try to pile off my mails first, then patch\nbugs and later only I will be able to think of such a feature.\nBenoit is right a large amount of thinking and design is needed before\ngoing into any coding effort.\nS.\nLe 8 juil. 2013 23:30, \"David Stemmer\" notifications@github.com a \u00e9crit :\n\nI recently tried out LucidChart https://www.lucidchart.com/ for\nsoftware architecture sketching and I was very pleased with it. It seems\nlike it would be good tool for collaborative design.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/71#issuecomment-20637552\n.\n. Damn, would that still be RS ?\n\nHow RS can help to make it better than any other impl ?\nAnd where do types come from : ConnectionType and ResultType ?\n2013/7/9 David Stemmer notifications@github.com\n\nOK, I'll take the first stab at it.\nAs an application developer, I know I would like the API for obtaining a\npersistent connection to resemble a SpiceRequest. But I also know that the\nSpiceService will need to differentiate between persistent and\nnon-persistent connections. Here is what the interface looks like in my\nhead:\nCONFIGURATION\n1. Implement a SpiceConnection class. This class has two abstract methods:\npublic void open()\npublic void close()\n1. Implement a SpiceConnection.Listener class. This class has three\n   abstract methods:\npublic void onConnectionOpened()\npublic void onConnectionClosed()\npublic void onConnectionFailure()\n1. Implement a SpiceConnection.Transmitter class. This class has one abstract method:\npublic void transmit(ConnectionType connection)\n1. Implement one or more SpiceConnection.Receiver classes.\n   These classes have one abstract method:\npublic void receive(ResultType result)\nUSAGE\n1. Create an instance of SpiceConnection\n2. Create an instance of SpiceConnection.Listener.\n3. Create an instance of SpiceConnection.Transmitter.\n4. Create an instance of SpiceConnection.Receiver\n5. To open the connection, call SpiceManager.openConnection(SpiceConnection\n   connection).\n6. To register for callbacks from the connection, call SpiceManager.registerReceiver(SpiceConnection\n   connection, SpiceConnection.Receiver receiver).\n7. To send data through the connection, call SpiceManager.transmit(SpiceConnection\n   connection, SpiceConnection.Transmitter transmitter).\nCOMMENTS\n- If the SpiceConnection is in an connection state, Calls to\n  SpiceManager.transmit() would be queued until the connection has\n  opened.\n- One peculiar aspect of web sockets (and two-way connections in\n  general) is that requests may or may not be mapped to responses. From what\n  I've read it looks like the basic web socket protocol does not map requests\n  to responses, but some subprotocols (such as WAMP http://wamp.ws/)\n  do. For this approach I've assumed no relationship between requests and\n  responses, but it's worth considering whether this approach would be\n  extensible to support that scenario.\n- I've decoupled the actual connection object from the data\n  transmission object. It's a little clumsy, but it addresses Stephen's\n  comment about String and Json types.\nThoughts/comments/critiques? What am I missing, how would you do it\ndifferently?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/71#issuecomment-20705507\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Wow David, it looks like a birdie is flying on its own wing. +5 for your\nargumentation.\nI just wonder if this design could grow 'in the onion way' like RS, by\nadding higher levels of abstraction to deal with JSON parsing or other\nPOJO-based tech. But it should. :)\nI may suggest that :\n- spiceManager for websocket should get a better name. It's quite\n  distinct from the usual spiceManager.\n- the websocket stuff should have a module of its own and not interfere,\n  as far as possible, with the actual core, at least at first.\n- classes and or interfaces should not be inner classes. They are strong\n  concepts and deserve classes of their own.\n- some additional thinking about caching should be made. I got the\n  feeling that most of RS-cache would still hold.\n- dev should definitely start on a separate shared remote branch on\n  github.\n- There should be tests and at least a sample, of course.\nThat's really fine for me.\nSt\u00e9phane\n2013/7/17 David Stemmer notifications@github.com\n\nConnectionType is a generic type that extends SpiceConnection. For example\nthe concrete type could be a WebSocketConnection. When Robospice is ready\nto initiate a queued request, the WebSocketConnection would be passed to\nthe Transmitter, which would be responsible for sending the message. It's a\nsimilar idea doInBackground(). A Transmitter is basically the equivalent\nof a SpiceRequest when dealing with an open SpiceConnection.\nResultType is simply the type of data returned from the server, e.g.,\nJSON, String, etc.\nFrom a philosophical perspective, I think Robospice is a good match for\nweb sockets for a few reasons:\n- Robospice is designed to facilitate long-running, asynchronous\n  networking tasks. Web sockets fit naturally into this definition.\n- One of the tenants in the Design of Robospicehttps://github.com/octo-online/robospice/wiki/Design-of-RoboSpicedocument is protocol-agnosticism. So I don't think it should be limited to\n  request/response type connections.\n- It was designed with multithreading, which would be helpful when\n  managing several open web socket connections.\n- Most existing web socket libraries are fairly low-level and are not\n  aware of the Android lifecycle. Robospice could help ease the burden on the\n  developer by closing the connection when the application moves into a\n  background state. It could also potentially re-open the connection when the\n  application wakes up again.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/71#issuecomment-21145250\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. +1 Christopher\nLe 12 mai 2014 20:30, \"Christopher Jenkins\" notifications@github.com a\n\u00e9crit :\n\nRobospice doesn't really fit the socket paradigm.\nReactive Extensions and observables very neatly fit the channel\nsubscription paradigm.\nHave a look at RxJava and you'll see what I mean.\nOn 12 May 2014 19:19, \"Ivo Cazemier\" notifications@github.com wrote:\n\nHi guys,\nPlease look at: https://github.com/Gottox/socket.io-java-client in\ncombination with: sailsjs.org\nThis combination and the environment of RoboSpice would be very nice!\nSails uses http+socket.io with authentication together, one is able to\nmake models in a blink of an eye at the server side.\nLooking at :\nhttp://milanito.github.io/web%20mobile/2013/12/29/sockets-with-android-and-sails/,\nI was able to create a connect to Sails and was able to receive messages\nby means of socket.io (websockets).\nSo, yeah, RoboSpice and Websockets, would be very nice to have!\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/stephanenicolas/robospice/issues/71#issuecomment-42868201>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/71#issuecomment-42869526\n.\n. This lib is also interesting on that matter : https://github.com/stanfy/enroscar\n. Hi Nicolas,\n\nI believe that you may be using pure Gson annotation when annotating your POJOs. Did you notice that Google Http Client proposes a unified annotation mechanism of its own : https://code.google.com/p/google-http-java-client/wiki/JSON (mainly using the single @Key annotation).\nIf you sticked to pure Gson annotations, your POJOs won't be parsed by the modified Gson used internally by Google Http Client lib. \nApart from this, this questions definitly belongs to Google Http Client and should be asked on their forum more than on RS.\n. Yes !! That's all what RS is about.\nYou should have a look at the samples\nhttps://github.com/octo-online/RoboSpice-samplesusing one of our json\nmodule : either Spring Android or Google Http Client.\nS.\n2013/3/25 antoine-shadow notifications@github.com\n\nIs there a way to add an Object class to SpiceRequest instead of a\nspecific object ?\nI want to do this :\npublic class SpiceRequest extends GoogleHttpClientSpiceRequest {\n@Override\npublic Object loadDataFromNetwork() throws IOException {\n}\n}\nthen cast the object with my own object in my RequestListener.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/73\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Antoine,\n1) the RoboSpice google group is more suited than opening an issue here. Issues are defect / feature enhancement requests. On google group, you can ask question and ask for support.\n2) Yes, again, that's all what RS is about : you can launch a request in an activity. The request will be executed whatever happens to the activity. A second activity (and technically speaking, after a rotation, you got a real second activity) can plug to it by using methods of SpiceManager like addListenerIfPending for instance.\nS.\n. Hi Christopher, \nthat feature could be interesting. I suggest the method would have a signature like : \nmSpiceManager.addDataToCache(TaskResponse.class, mCacheKey, mResponse);\nas you don't need any cache duration when adding something to cache. Cache duration is only used to consider whether something read from cache is expired or not.\nI believe that an easy way to add this feature would be to add a request through the spice manager. This request wouldn't actually perform any network call, but simply return the response in its load data from network method. The request would be configured not to read from cache (using param ALWAYS_EXPIRED with execute method).\nWhat do you think of this implementation idea ? \nAnd definitly yes, we would be happy of such a contribution, plus testing.\n. Hi christopher,\nI am actually trying to implement the feature you requested. It happens that our team @octo-online currently needs this feature as well in order to mock a post request inside our current project.\nI hope to get it working and pushed and deployed to snapshot repo by the end of the day.\nSt\u00e9phane\n. Feature has been added o SpiceManager via methods : addDataToCache. \nIt will be released in RoboSpice 1.4.2.\nA snapshot of 1.4.2 will be deployed within minutes.\n. Your patch has been added to RS. You introduced a bug in tests that has been corrected. \nRS-samples has been updated to support this new API.\nThx for this patch.\n. You will get a good introduction to testing techniques by looking at the current RS tests.\nIf you try, we can help.\n. Hi all, \nwhat is the status of this ?\n. Why don't you just call only spiceManager.execute(new EventsRequest(mProjectId), getJsonCacheKey(), DurationInMillis.ONE_DAY, new EventsRequestListener()); during onStart() ?\n. Actually, this answer is a bit fuzzy to me.\nAdding a listener to a pending request actually triggers a request in RS.\nThe only difference with execute is that this request will never get really\nprocessed but will plug its listeners to a running request if any.\nIf you use cache, there should be no problem to trigger a request for each\nfragment.\n2013/3/30 bogdanzurac notifications@github.com\n\nBecause I don't want to start a new request on every single fragment\nstart,\nobviously....\nOn Mar 30, 2013 9:41 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nWhy don't you just call only spiceManager.execute(new\nEventsRequest(mProjectId), getJsonCacheKey(), DurationInMillis.ONE_DAY,\nnew\nEventsRequestListener()); during onStart() ?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15670969>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671354\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Bogdan,\n1) if you don't use cache then it looks normal to me that you perform a new\nrequest every time you need data to be displayed\n2) every rotation will create a new instance of your fragment. So, if you\ndon't use cache, how do you want this instance to get the data without\ngoing to the network.\nI mean, I agree, it can look heavy to fetch data all the time.\nNevertheless, Android spends its time destroying and recreating UI pieces\nlike activities and Fragments. If you want those instances to share a\nnetwork request and its result, I do believe RS and caching is the best\nsolution.\nWhat I usually do is\n1) execute a request when needed\n2) onStart, use a combination of getDataFromCache and addListenerIfPending\nto get the latest data and give users the feeling that the new instance of\nUI is still the same, at least still holding its data.\nSt\u00e9phane\n2013/3/30 bogdanzurac notifications@github.com\n\nAnd if I don't use cache for the respective fragment? Why should it make a\nnetwork request on every orientation change?\nOn Mar 30, 2013 10:53 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nActually, this answer is a bit fuzzy to me.\nAdding a listener to a pending request actually triggers a request in\nRS.\nThe only difference with execute is that this request will never get\nreally\nprocessed but will plug its listeners to a running request if any.\nIf you use cache, there should be no problem to trigger a request for\neach\nfragment.\n2013/3/30 bogdanzurac notifications@github.com\n\nBecause I don't want to start a new request on every single fragment\nstart,\nobviously....\nOn Mar 30, 2013 9:41 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nWhy don't you just call only spiceManager.execute(new\nEventsRequest(mProjectId), getJsonCacheKey(),\nDurationInMillis.ONE_DAY,\nnew\nEventsRequestListener()); during onStart() ?\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15670969>\n\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671354>\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671527>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671764\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I don't have much time for this right now. But this topic is interesting and we should address fragments at least with a sample and maybe change the API if needed.\nNevertheless, I re read all this thread, and I just want to clarify things. The actual solution you propose is not feasible. Most of RS is asynchronous and this is a large constraint in RS. It is due to the asynchronous nature of binding between a context and service in Android. \nThus, it would not be possible to get the number of listeners associated to a request with precision. By the time you would get the answer in your thread, the request could have been fully processed and have no more listeners.\nIn the same way, it would be nice to have some method to replace the listeners of a pending requests by new listeners (that could be a work around your actual problem). But again, it is not possible to know when such a method would be invoked and interact with the processing of the former request. This means that sometimes the first listener would be triggered as substitution would occur lately and some times not as the substitution would have occurred on time. The problem would remain, maybe occur less often, but still.\nThe actual solution of adding listeners seems like a contract that can be fully respected, in a deterministic way.\n. Hi @bogdanzurac ,\nI just pushed a robospice sample with fragments. It uses in memory caching and seems to work pretty well. It demonstrates : using RS and fragments, persisting instance state.\nhttps://github.com/octo-online/RoboSpice-samples/tree/master/robospice-sample-core-fragment\nIs there anything to add ?\n. Cleaning up in issues. Re-open if the sample is not answering your feature enhancement request.\n. Is the sample accessible somewhere ?\n2013/5/29 bogdanzurac notifications@github.com\n\nHello.\nUnfortunately, the sample doesn't really answer my problem. It does answer\nit perfectly for that use case, but not for mine.\nIn the sample use case, in onStart(), you check to see if the EditText has\nsomething written inside. On first run, of course it doesn't (even if you\nquickly change device orientation), so the check is perfect. Therefore, it\nwon't add another request.\nIn my use case, in onCreate(), I spawn a request to download a list of\nitems and then add the results inside a ListView. On first run, in\nonStart() I don't want to add another request, obviously, so I check if the\nListView has content. Only if it does, I spawn another request.\nHowever, If I create the fragment and BEFORE the initial request finishes,\nI change the device orientation, then the list is still empty, so onStart()\nwon't add another request, even though it should... After this, the initial\nrequest finishes, but we can't see any results inside the ListView.\nSo I can't rely on the empty ListView adapter check (like you did in the\nsample), because it's misleading. Therefore, I need to use a isFirstRun\nboolean. Now can you see why I find this feature request important ? I mean\nsure, I can use the boolean hack, but it's not as fluent as a built-in\nmethod. Anyway, thanks again for your time !\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-18612891\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Bogdan,\nthis thread begins to be long to read. But I re-read it and our new app\nallows me answer you more directly.\nIn our app, that uses a lot of fragments, we execute requests during\nonStart().\nThis is a much better place that onCreate. I think this is a part of RS\nthat should be tested more as if you execute a requests before starting the\nspiceManager, requests should be cached. That may be a functional bug to RS\ninitial specifications. Would you mind to fell an issue to ask for\ninvestigation on that point ?\nIs that a good answer and does it work for you ?\nSt\u00e9phane\n2013/6/19 bogdanzurac notifications@github.com\n\nUnfortunately, no. If you move the request to the onCreate() method, and\nadd quite some load for it to download, thus taking a couple of seconds to\ncomplete, you'll see that my test case is correct.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-19678110\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Bogdan,\nthanks for these detailed explanations.\nI think you got 2 choices :\n- with the new apis of RS 1.4.7, you can now know if addListenerIfPending\n  found a request or not.\n- you could flag you activity when it calls onActivityResult in order to\n  prevent addListenerIfPending from being called. Example here :\n  http://stackoverflow.com/a/15555263/693752\n- even a third one, flag the first call inside your listener, and reject\n  the second :)\nSt\u00e9phane\n2013/9/30 bogdanzurac notifications@github.com\n\nHello.\nThis is still a problem. See use case below. I'm sorry, but I'm not able\nto share full code, because the project is for the firm that I work in, so\nit's not up to me to share code-base.\nNo details needed, just try to follow the methods being called and you can\ntrace the problem.\n1) I have MainActivity with EventsListFragment in it.\n2) EventsListFragment.onStart():\nmSpiceManager.addListenerIfPending(EventsList.class, KEY_JSON_CACHE, new\nEventsRequestListener());\n3) I start EventDetailActivity from EventsListFragment with\nstartActivityForResult(x,y);\n4) EventDetailActivity finishes => MainActivity.onActivityResult() is\ncalled. Here, I want to refresh the list in EventsListFragment. So I call\nthere:\nmSpiceManager.execute(new GetEventsRequest(),\nKEY_JSON_CACHE, DurationInMillis.ALWAYS_EXPIRED, new\nEventsRequestListener());\nNothing hard until here, problem is below.\n5) Right after the execute() is called, EventsListFragment.onStart() is\ncalled again, because, well, the fragment started again. Therefore, calling\nthis again:\nmSpiceManager.addListenerIfPending(EventsList.class, KEY_JSON_CACHE, new\nEventsRequestListener());\nHence, 2 calls are redirected at EventsRequestListener.\nAlso, don't ask for a sample because I can assure you, it works as\nexpected. As in, not the Fragment's fault, nor the Activity, nor RoboSpice.\nEverything works as expected, but, because of RoboSpice's architecture for\naddListenerIfPending, it just adds another listener instead of checking\nfirst. This causes EventsRequestListener to receive 2 calls, even though I\nonly need the one from onActivityResult().\nSo, I can't remove the execute() call from onActivityResult(), because I\ndo actually need the fresh data. And I can't remove the\naddListenerIfPending from fragment's onStart(), because I also need to add\nthe listener if the request is pending on orientation changes. So I need to\nhave both. But apparently both are quite deadly in combination for this\ntest case. Any ideas ?\nDo you have a workaround for this ? Have you encountered issues like this\nin your implementations ? I find it sad to see that this use case, which is\nrelatively trivial, is so hard to fix from the library's point of view.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-25354432\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Thank you finding this bug. Patch has been added to master branch and will be released in 1.4.1.\n. Hi Stinger,\nwe would be interested in a github fork and pull request so that we can\nunderstand your changes and reproduce the problem.\nSt\u00e9phane\n2013/4/2 StingerAJ notifications@github.com\n\nAs I outlined in #58 https://github.com/octo-online/robospice/issues/58,\nthe SpiceArrayAdapter that is backing the SpiceListView is always loading\ncached bitmaps from the cache-directory without looking at their age.\nIt would be nice if the BitmapRequest-class would provide some option to\nset its cache-duration, which would be passed up by the SpiceArrayAdapter\nto the underlying RoboSpice-frramework.\nI have tried to fix this myself (patchfile available if you want), but\nusing the framework-cachelogic doesn't work correctly e.g. in airplane-mode\nwith the setting ALWAYS_EXPIRED, some not all cached bitmap-files are\nloaded and shown in the listview disregarding this setting.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/81\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. This bug is old and too fuzzy to be solved. It is marked as won't fix and will be cleared if no more info is provided.\n. Hi Christopher,\nRS has been designed to be \"protocole-agnostic\". It means that it can work with HTTP, HTTP, FTP, whatever network protocol you want, even with no protocole at all (as illustrated by the offline example inside the samples).\nWith that perspective in mind, the design you propose is not feasible. \nNevertheless, it is always possible for a dev to \n1. obtain the http headers using either Spring Android or Google Http Client module\n2. wrap the header inside a pojo and return it from the request\n3. use that value to determine the duration of cache when executing the next request.\nWe know about the embedded http cache but : \n1. we would have much less control on it that with actual implementation\n2. the cache mechanism would be different from one version of Android to another\n3. the actual cache uses the same format to receive data from network and store them and that's a very convenient design both for devs and maintainers.\nSt\u00e9phane\n. Hello S\u00e9gol\u00e8ne,\nit would be better if you could write in english on this list. It allows\ncontributors to write less mails to provide support for everyone as we\nbuild a knowledge base about RoboSpice.\nThe bug you mention has been solved a few weeks ago. It will be patched in\nversion 1.4.1 of RoboSpice.\nMeanwhile, feel free to clone the repo and build the project, you will get\nthe jars.\nIf you use maven, our snapshot repo already contains a patch version to\ntry. If you use ant, snapshots are available in our repository branch on\ngithub as explained in the wiki.\nRelease 1.4.1 should be released soon, but we are all too loaded to tell\nexactly when.\nThx for your interest in RoboSpice,\nSt\u00e9phane\nLe 9 avril 2013 10:10, segolene notifications@github.com a \u00e9crit :\n\nBonjour la RobospiceTeam,\nJ'ai un ptit soucis avec getFromCache(...) qui a besoin que l'\u00e9l\u00e9ment\nrequestCacheKey soit un String. Mon probl\u00e8me est qu'\u00e0 l'\u00e9tape d'avant, on\nm\u00e9morise les donn\u00e9es dans le cache avec execute(...) qui n\u00e9cessite un\nrequestCacheKey de type Object.\nLorsque je passe un Integer \u00e0 execute, cela fonctionne et quand je passe\nun String, rien ne se passe.\nLa requ\u00eate ne passe ni par le sucess, ni par le failure.\nN'ayant pas de log pour m'aider, je me demandais si on vous avait d\u00e9j\u00e0\nremonter ce bug ou s'il serait possible que j'utilise mal ces m\u00e9thodes.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/83\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. You may be right. Actually the ORM Lite module is a bit of an orphan looking for a maintainer..\nWith this constraint, it is easy to create DAO requests to get access to the underlying ORM Lite database for reading and writing from/to the cache.\nHow would you map the pojo's id (in the orm lite meaning) into the cache key inside ORM Lite module ?\nYou are welcome to contribute to RS in that direction, or to present a detailed analysis of the modifications to include to RS.\nSt\u00e9phane\n. Closed in https://github.com/octo-online/robospice/pull/145 by Jasco.\n. We really need more information, like a way to reproduce the bug, to solve\nit. Thanks for reporting this, any further information would help.\nMeanwhile, I close that issue.\n2013/4/20 irgendeinich notifications@github.com\n\nNo, the crash reporter I'm using sadly doesn't attach the logcat.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/86#issuecomment-16702721\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. +1 That should become a test. It will soon.\n. I think there might be something wrong in the way you bind RS (the SpiceManager) the activity that uses it. Do you really execute requests after starting the SpiceManager and are you sure you start it inside the onStart method of your activity ?\nNeverthless, I added a lock check to ensure that no requests can be executed when the SpiceService is being bound or unbound. That should protect the use case that creates the problem you mention.\nCan you confirm that current RS-1.4.6 snapshot solve the problem ?\nSnapshots have been deployed both on our sonatype snapshot repo and our internal jars repo (for ant users).\n. Should have been fixed by latests commits. Please reopen the bug if not.\nThis is available in current master branch and current snapshots.\n. Let's say, 1.4.6 will be out by the beginning of next week, at (the very)\nmost.\nSt\u00e9phane\n2013/7/16 Valentin R. notifications@github.com\n\nDo you have an idea when 1.4.6 will be out ? We need this bugfix, and as\nI'm working on an entreprise app, using a snapshot version isn't really\npossible...\n(just to know if I need to make my own fork of 1.4.5 or if 1.4.6 is just\naround the corner)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/86#issuecomment-21047192\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. And the interface NetworkStateChecker can be implemented by a class of your\nchoice. This class can check network state or perform any other operation\nto get sure network is working when a request is gonna be executed.\nSt\u00e9phane\n2013/4/22 Riccardo Ciovati notifications@github.com\n\nRoboSpice internally already performs a network connectivity check with\nthis class:\nhttps://github.com/octo-online/robospice/blob/release/robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/87#issuecomment-16814467\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Moritz,\nIn RS, a request is identified by a compound key : the class name of the request's result and a cachekey. Requests that share those 2 attributes will be aggregated automatically by RS. Otherwise, those requests will be considered different and can be 'listened to' using different listeners.\nSo, a short answer is : use different cache keys to identifiy your 2 requests and use those cache keys to distinguish them when you invoke addListenerIfPending.\nAs a last word, the use case you describe is rare. I don't think it has not been tested extensively. You might encounter a bug but this should definitly work, normally.\nAlso, please note that RS has a mailing list that is better suited to ask questions than the issue list of RS github.\nThanks for your interest in RoboSpice,\n S.\n. Hi Moritz,\nthe class is declared final as a parameter but this has nothing to see with\nobjects being immutable or not.\nIn RoboSpice, you get POJOs either from cache or from a json/xml request on\nthe network. And POJOs are just POJOs, they are not persisted\nautomatically. As you are using the ORM Lite module, you should have a look\nat ORM Lite to see how to persist an object after it has been modified.\nSt\u00e9phane\n2013/4/30 Moritz Pfeiffer notifications@github.com\n\nThe onRequestSuccess callback in the ormlite sample has as the single\nargument the Weather class marked final.\nDoes this mean that the Weather object is immutable?\nOr can the objects be changed and the changes be persisted to the ormlite\ncache?\nGreetings\nMoritz\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/89\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. To be honest, the ORM Lite module is not my favorite. :S\nThis module is in beta as we generally don't use it in our projects\nanymore. We used it once and it worked but it's not a familiar tool to me.\nSo, in 2 words, yes, it should be possible but I think you will have to\nadjust the parameters passed to the dao to get sure you use the same table\nas RoboSpice's cache inside ORM Lite's data bases.\nThe POJOs will be stored inside an ORM Lite managed database, but it may\nnot be trivial to reach their exact location using ORM Lite separetly from\nRS. The only updates we needed with our POJOs in our project using\nRS-ORMLite were performed during a network request, so I can't say I am 100\n% sure you can achieve it outside of RS, but I strongly believe so.\nSomeone deeply understanding the ORM Lite module and willing to maintain it\nwould be fast tracked to get inside RS team... ;)\nS.\n2013/5/1 Moritz Pfeiffer notifications@github.com\n\nHi Stephane\nThank you for your reply. I will hit the mailing list for future inquiries\nbut will stay on GitHub for this since it's already here.\nI'm familiar with ormlite and how objects are persisted with ormlite.\nMy question is this:\nWhen I use the ormlite cache in Robospice and get POJOs back\nonRequestSuccess then make changes to those POJOs and call\nmyDao.update(myPOJOwithChanges), are those changes persisted to the\nrobospice cache?\nWill I my modifications be stored in the robospice ormlite cache, so that\nnext time I hit the cache my modifications still exist?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/89#issuecomment-17271648\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Eurig,\nI don't think this belongs to RS, even maybe not to Spring Android. I often\nuse both libs and never face this problem.\nIsn't there any problem with your request ?\nSt\u00e9phane\n. When does the exception raise ?\n. We are open to any enhancement. Your proposal could be interesting but is vague. We can't reproduce that bug until you tell more about conditions to reproduce it.\n. I need time to think about this issue. Thanx for sharing your ideas and\nexperience on this.\n2013/5/15 StingerAJ notifications@github.com\n\nI also get this issue if I modify the method\nSpiceArrayAdapter.ThumbnailAsynTask.doInBackground like so and have 6\nthreads in the service:\n- out-comment if (!tempThumbnailImageFile.exists()) { and its closing\n  brace\n- set the number of threads for the BitmapSpiceService to 6\nSo, I guess maybe you could reproduce it with the\nrobospice-sample-ui-spicelist. I would have tried, but my modifications of\nrobospice-ui-spicelist extension maybe have a sideeffect, so it would be a\nhassle for me to try.\nThis exception also doesn't always come, even with this modifications, but\nI just had this crash on app-startup showing a spicelist with this modified\nSpiceArrayAdapter and the\nLruCacheBitmapObjectPersister/InFileBitmapObjectPersister combo from David\nStemmer.\nI think the more threads are loading pictures in a big listview, the more\nlikely you will get this exception.\nI have a patchfile with a proposed modification of RequestProcessor to use\nConcurrentHashMap and my own version of ConcurrentHashSet (as\nlistRequestListenerForThisRequest needs to be a set apparently and there is\nno concurrent version of HashSet in the Collections-framework), how can I\nsend the patchfile to you for testing without going through the hassle ov\nhaving to setup a branch for a pull request?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/91#issuecomment-17941918\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi all,\nStinger, sorry for that late answer, but I would be pleased to get your\npatch.\nCan you create a gist maybe ?\nThat's a one click thing : https://gist.github.com/\nSt\u00e9phane\n2013/6/18 Prildy notifications@github.com\n\nI also got the same issue.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/91#issuecomment-19586575\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Oh, and I think there a git button directly close to files in the new git\ninterface. For a single file, that could be handy.\nIt's \"a pull request in one click\" as far a I understood.\nSt\u00e9phane\n2013/6/22 St\u00e9phane Nicolas snicolas@octo.com\n\nHi all,\nStinger, sorry for that late answer, but I would be pleased to get your\npatch.\nCan you create a gist maybe ?\nThat's a one click thing : https://gist.github.com/\nSt\u00e9phane\n2013/6/18 Prildy notifications@github.com\n\nI also got the same issue.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/91#issuecomment-19586575\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. We will fix this. It's really a priority issue. Nevertheless, I don't have\nmuch time to check it right now. However, I would be very glad to accept a\npull request solving the problem (and that would pass all tests of RS).\nSt\u00e9phane\n2013/10/24 AndyFrench notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas I seem to be\ngetting this now using 1.4.8.\nHashMap.java:792 \u2022 java.util.HashMap$HashIterator.nextEntry\nHashMap.java:819 \u2022 java.util.HashMap$KeyIterator.next\nDefaultRequestListenerNotifier.java:168 \u2022\ncom.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run\nHandler.java:725 \u2022 android.os.Handler.handleCallback\nHandler.java:92 \u2022 android.os.Handler.dispatchMessage\nLooper.java:137 \u2022 android.os.Looper.loop\nActivityThread.java:5227 \u2022 android.app.ActivityThread.main\nMethod.java:-2 \u2022 java.lang.reflect.Method.invokeNative\nMethod.java:511 \u2022 java.lang.reflect.Method.invoke\nZygoteInit.java:795 \u2022\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run\nZygoteInit.java:562 \u2022 com.android.internal.os.ZygoteInit.main\nNativeStart.java:-2 \u2022 dalvik.system.NativeStart.main\nIs there any fix?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/91#issuecomment-26968233\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Sorry for the long delay to answer that thread.\nI just added @softwaremaverick 's changes to RS. All tests seem to pass locally (even if Travis still has some pain on some tests). I am deploying a new snapshot right now. Does one of you wanna try it ?\nI could release today if receive a go from one of you.\nThanks @softwaremaverick, @deisold , @siyamed and @ffgiraldez for finding and patching the bug. \n. Can you try our 1.4.13 snapshots and see problem persists ?\nThx,\n S.\n2014-07-01 15:54 GMT+02:00 sayah-y notifications@github.com:\n\nHello,\nI'm using 1.4.12. I do the network call many times and I'm getting:\nE/AndroidRuntime(4234): java.util.ConcurrentModificationException\nE/AndroidRuntime(4234): at\njava.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\nE/AndroidRuntime(4234): at\njava.util.HashMap$KeyIterator.next(HashMap.java:833)\nE/AndroidRuntime(4234): at\ncom.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nThanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-47658520\n.\n. Hi escarti,\n\n1.4.13 is planned to be released soon. We just have one feature branch to\nreview before leaving.\nOther contributors are working on it.\nLook at the RS wiki, you will find how to use the 1.4.13 snapshots.\nStephane\nLe 7 juil. 2014 13:43, \"escarti\" notifications@github.com a \u00e9crit :\n\nI'm having the same issue as sayah-y. 1.4.13 is not on maven.\nWill it be available there at some point?\nThnx.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48168310\n.\n. You also need to upgrade to 1.4.13-SNASPHOT version of RS ! :)\n\n2014-07-07 17:49 GMT+02:00 escarti notifications@github.com:\n\nHi Stephane,\nthanks for the info, I managed to use the 1.4.13-SNAPSHOT but there are\nserveral things:\n1.\nOn the wiki for using snapshots you write:\n   Add this configuration to your build.gradle file, in the dependencies\n   ( <- I think this should be repositories ) block:\n   maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\"\n   }\n   2.\nThe error still occurs:\n   Process: net.appbounty.android, PID: 27894\n   java.util.ConcurrentModificationException\n   at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n   at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n   at\n   com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nLooking at the code\nsynchronized (listeners) {\nfor (final RequestListener<?> listener : listeners) {\nif (listener != null) {\nMy guess is that you are synchronizing the Set> listeners but not the\nRequestListener<?> inside it. I think adding\nsynchronized (listeners) {\nfor (final RequestListener<?> listener : listeners) {\nsynchrnoized(litener) {\nif (listener != null) {\nwill solve the problem, but I might be wrong and I didn't have the chance\nto test it.\nHope to be of some help.\nThanks for the amazing work!\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48196899\n.\n. I mean, not only to add the snapshot repo.\n\n2014-07-07 18:19 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nYou also need to upgrade to 1.4.13-SNASPHOT version of RS ! :)\n2014-07-07 17:49 GMT+02:00 escarti notifications@github.com:\nHi Stephane,\n\nthanks for the info, I managed to use the 1.4.13-SNAPSHOT but there are\nserveral things:\n1.\nOn the wiki for using snapshots you write:\n   Add this configuration to your build.gradle file, in the dependencies\n   ( <- I think this should be repositories ) block:\n   maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\"\n   }\n   2.\nThe error still occurs:\n   Process: net.appbounty.android, PID: 27894\n   java.util.ConcurrentModificationException\n   at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n   at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n   at\n   com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nLooking at the code\nsynchronized (listeners) {\nfor (final RequestListener<?> listener : listeners) {\nif (listener != null) {\nMy guess is that you are synchronizing the Set> listeners but not the\nRequestListener<?> inside it. I think adding\nsynchronized (listeners) {\nfor (final RequestListener<?> listener : listeners) {\nsynchrnoized(litener) {\nif (listener != null) {\nwill solve the problem, but I might be wrong and I didn't have the chance\nto test it.\nHope to be of some help.\nThanks for the amazing work!\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48196899\n.\n. Always use the same versions for all RS modules.\n\n\nthough, in this case, I doubt it changes anything. But would you mind to\ntry again and report here ?\nSt\u00e9phane\n2014-07-07 18:24 GMT+02:00 escarti notifications@github.com:\n\nOf course I upgraded.\nI used:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.12'\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48201774\n.\n. @escarti,\n\nI may have found the potential cause of this problem. I redeployed a\nsnapshot. Please retry (latest version will used by maven, just use\nsnapshot still).\nI got a very slow internet connection these days, please wait around 15\nminutes after this comment appears.\nS.\n2014-07-07 21:10 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nAlways use the same versions for all RS modules.\nthough, in this case, I doubt it changes anything. But would you mind to\ntry again and report here ?\nSt\u00e9phane\n2014-07-07 18:24 GMT+02:00 escarti notifications@github.com:\nOf course I upgraded.\n\nI used:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.12'\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48201774\n.\n. I am really not sure to have fixed the bug. But FYI, it can't be related to\nthe fix your suggested : a concurrent modification exception means some\nthread has modified THE COLLECTION while some other thread was looping\nthrough it. It can also happen when the collection is modified by the same\nthread that is iterating over it.\n\n\nDoes it happen in some very special circumstance, like fast repeated calls\nto execute as pointed out by sarah-y ?\nS.\n2014-07-07 21:30 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\n@escarti,\nI may have found the potential cause of this problem. I redeployed a\nsnapshot. Please retry (latest version will used by maven, just use\nsnapshot still).\nI got a very slow internet connection these days, please wait around 15\nminutes after this comment appears.\nS.\n2014-07-07 21:10 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\nAlways use the same versions for all RS modules.\n\nthough, in this case, I doubt it changes anything. But would you mind to\ntry again and report here ?\nSt\u00e9phane\n2014-07-07 18:24 GMT+02:00 escarti notifications@github.com:\nOf course I upgraded.\n\nI used:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.12'\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48201774\n.\n. Can I have more details on the way you get this exception ? If I get a\nlittle time today, I will push a version with a hacked synchronized set so\nthat you can send me a better stack trace.\n\n\n\nCan you just confirm that you used the snapshots that I deployed yesterday\nevening ?\nStephane\nLe 8 juil. 2014 09:20, \"escarti\" notifications@github.com a \u00e9crit :\n\nHi St\u00e9phane,\nI also updated the spring module as you suggested:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.13-SNAPSHOT'\nbut sadly still:\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n        at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n        at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48279861\n.\n. Could you check the class of the set of listeners inside the runnable ?\n\nI wonder if it is truly a synchronized set and if so, the bug is somewhere\nelse or if it's not a synchronized set and then the problem is that it\nshould be : somewhere in the code we use a wring set.\nThx for all your efforts, we will a special 1.4.13 for you when it works\nand snapshots so that you can test our patches.\nSt\u00e9phane\nLe 8 juil. 2014 12:51, \"escarti\" notifications@github.com a \u00e9crit :\n\nHi St\u00e9phane,\nI did a project clean and a gradle sync so I assume that the\n1.4.13-snapshot is the new one.\nWith an exception breakpoint I saw that the listeners collection has just\none item and that item is created in here:\nspiceManager.execute(postOfferClick, \"offer_click\",\nDurationInMillis.ALWAYS_EXPIRED, new PostOfferClickRequestListener());\nThe full stack trace is:\n07-08 12:46:12.448 22861-22861/net.appbounty.android E/AndroidRuntime\ufe55\nFATAL EXCEPTION: main\nProcess: net.appbounty.android, PID: 22861\njava.util.ConcurrentModificationException\nat java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\nat java.util.HashMap$KeyIterator.next(HashMap.java:833)\nat\ncom.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nat android.os.Handler.handleCallback(Handler.java:733)\nat android.os.Handler.dispatchMessage(Handler.java:95)\nat android.os.Looper.loop(Looper.java:136)\nat android.app.ActivityThread.main(ActivityThread.java:5001)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:515)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\nat dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48321852\n.\n. BTW,\n\nIf you could find which OTHER thread is modifying the listener set while\nthis thread is iterating over it, that would tremendously help. You IDE\nshould provide this data to you...\nS.\nLe 8 juil. 2014 12:55, \"St\u00e9phane NICOLAS\" steff.nicolas@gmail.com a \u00e9crit\n:\n\nCould you check the class of the set of listeners inside the runnable ?\nI wonder if it is truly a synchronized set and if so, the bug is somewhere\nelse or if it's not a synchronized set and then the problem is that it\nshould be : somewhere in the code we use a wring set.\nThx for all your efforts, we will a special 1.4.13 for you when it works\nand snapshots so that you can test our patches.\nSt\u00e9phane\nLe 8 juil. 2014 12:51, \"escarti\" notifications@github.com a \u00e9crit :\n\nHi St\u00e9phane,\nI did a project clean and a gradle sync so I assume that the\n1.4.13-snapshot is the new one.\nWith an exception breakpoint I saw that the listeners collection has just\none item and that item is created in here:\nspiceManager.execute(postOfferClick, \"offer_click\",\nDurationInMillis.ALWAYS_EXPIRED, new PostOfferClickRequestListener());\nThe full stack trace is:\n07-08 12:46:12.448 22861-22861/net.appbounty.android E/AndroidRuntime\ufe55\nFATAL EXCEPTION: main\nProcess: net.appbounty.android, PID: 22861\njava.util.ConcurrentModificationException\nat java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\nat java.util.HashMap$KeyIterator.next(HashMap.java:833)\nat\ncom.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nat android.os.Handler.handleCallback(Handler.java:733)\nat android.os.Handler.dispatchMessage(Handler.java:95)\nat android.os.Looper.loop(Looper.java:136)\nat android.app.ActivityThread.main(ActivityThread.java:5001)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:515)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\nat dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48321852\n.\n. Ahhhhh :)\n\n\nI was really wondering what else could cause the bug. Nice !\nThx for your continuous feedback and testing.\nSt\u00e9phane\n2014-07-08 16:10 GMT+02:00 escarti notifications@github.com:\n\nHi St\u00e9phane,\nafter:\n- app deletion\n- project clean\n- gradle resynch\n- usage of the latest 1.4.13-snapshot from yesterday\nI haven't experience the crash for quite some time. Sadly I cannot\nguarantee that it's not there since I cannot reproduce it, but so far so\ngood.\nI tried to reproduce the error on debug mode for 45 minutes and didn't\nhappen.\nThanks a lot for your support and if I experience it again I will send you\nthe thread causing the issue and as much info as I possibly can.\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48340820\n.\n. So this bug is solved in 1.4.13 and its snapshot.\n. Nuts ! ;)\n\nI look at the screenshot.\n2014-07-09 10:59 GMT+02:00 escarti notifications@github.com:\n\nHi St\u00e9phane,\nI'm sorry to bring bad news again, but the bug re-appeared. I gathered\nsome new info that might help.\nThe error apparently appears when I do 2 times the same API call from\ndifferent locations.\nI call my API call from a background service and from a fragment.\nThe exact point where the exception is thrown is\nHashMapEntry nextEntry() {\nif (modCount != expectedModCount)\nthrow new ConcurrentModificationException();\nthe expectedModCount is 2 whereas the modCount is 3\nI will send you the full Thread export and a screenshot of the variables.\nHopefully it will help.\nCheers,\nEdu.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48445614\n.\n. Yes I do. I really don't get it.\n\n2014-07-09 15:53 GMT+02:00 escarti notifications@github.com:\n\nI implemented a workaround and now I have a \"lock\" and manually\nsynchronize the api calls to ensure that only one either the service or the\nfragment are using robospice.\nSo far so good.\nIf you need more info let me know.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48472091\n.\n. On which time zone are you ?\n\nReally, I can't find anything that could explain this bug..\n2014-07-09 16:38 GMT+02:00 escarti notifications@github.com:\n\nSince I now know what is causing it I managed to reproduce it pretty\nconsistently.\nI got the service performing a GET Api call every second and I can force\nthe fragment to do an api call on click. In this way I manage to get the\ncrash pretty consistently.\nHow should we proceed? Skype and screen share?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-48479636\n.\n. Eduardo and I could finally find the cause of the problem. \n\nIf you get this exception, it is highly probable that you are either : \n- cancelling a request\n- stopping the SpiceManager\nfrom within a request listener's callback method. And you simply can't do this. That's not an RS design problem but more a limitation of java language itself : while iterating through the synchronized set of listeners associated to a request, this set of listeners can't be modified. \nA workaround could have been to use an CopyOnWriteArray but it comes with performance penalty. Moreover, there is no reason to stop the SpiceManager after a request is complete: RS does it automatically for you, it will shutdown once there are no requests to execute and restart if a new request is executed.\nNote that a FAQ entry has been added on this matter.\n. Thx @softwaremaverick , but that is exactly what my last commit changes ;)\n(addRequest)\nAnd you're perfectly right, that caused the bug. This plus the explanation given in my last comment.\nBtw, you really strong in java concurrency ;)\n. I guess that from a broadcast receiver you don't expect to do something in\nthe callback (listener) of the request.\nIf you want to do so, follow @softwaremaverick advice then and delegate to\nanother entity with a lifecycle.\nIf not, they fire your request and stop the manager afterwards, your\nrequest will be executed but no call back will be triggered, you can for\ninstance fill a cache that way.\nSt\u00e9phane\n2014-08-20 13:13 GMT-04:00 softwaremaverick notifications@github.com:\n\nYeah you should do very little in a broadcast receiver. I recommend\nsending the intent to a service to do further processing\nOn 20 August 2014 13:06:41 BST, nugmanovagulnaz notifications@github.com\nwrote:\n\nI have BroadcastReceiver. I'm calling start of spiceManager in\nonReceive method:\npublic void onReceive(Context context, Intent intent) {\nspiceManager.start(context);\n...\n}\nWhen should i call the shouldStop method? There are no onStop() method\nin BroadcastReceiver.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-52766249\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-52809949\n.\n. IntentService is almost the same as broadcast receiver, a simple life\ncycle.\nWhat do you want to do when you get your data from the network ?\n\nSt\u00e9phane\n2014-08-21 7:38 GMT-04:00 nugmanovagulnaz notifications@github.com:\n\nWell, i created IntentService that handles my broadcastReceivers result.\nBut there is no onStop() in IntentService too. Where should i call\nspiceManager.shouldStop() in IntentService?\nI'm sorry for bothering you\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-52908563\n.\n. Please, see FAQ entry about this exception. Chances are it comes from your code (trying to modify the list of listeners during the call back. For instance by stopping the spice manager).\n. Can you confirm the bug with RS 1.4.1-SNAPSHOT ?\n(I mark the thread as invalid until you can confirm it).\n. Thanks. Both issues have been adressed and included to master branch.\n. Thanks for those remarks. \nStarter guide has been updated.\n. Hi @hetii , \n\nthe starter guide has been updated again : the spice manager needs to be protected, but the cachekey, and the request listener class need to be defined by subclasses.\nWhen you say you need a link to an article, do you refer to some specific page of the wiki or something else ?\nS.\n. Hi Heti,\nyou will find good examples on RoboSpice samples repo.\nI think most coders can google \"pojo\" and learn this by themselves, we\ndon't need an authoritative link here.\nSt\u00e9phane\n2013/5/10 hetii notifications@github.com\n\nYes, defined it as protected are fine.\nAbout link I means some good article/wiki where users could read what is a\nPOJOs class and how to create it.\nAs far i try implement more REST methods i found:\nhttp://static.springsource.org/spring-android/docs/1.0.x/reference/html/rest-template.html\nWe can see there that we can use for eg. postForObject, but beginner like\nI can try call that in main UI threads\nand this will raise android.os.NetworkOnMainThreadException.\nI`m not sure if it exist already, but could be great to have\nimplementation that will show how to use all REST methods.\nRegards.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/94#issuecomment-17693219\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Can't you use Void as generci type : MyDeleteRequest extends\nSpiceRequest\n2013/5/10 hetii notifications@github.com\n\nCurrently i have such class:\npublic class SpringJsonRequest extends SpringAndroidSpiceRequest <\nPojoStation > {\nprivate String host = \"http://example.com/\";\nprivate String uri=\"\";\nprivate Uri.Builder uriBuilder;\npublic SpringJsonRequest(String uri) {\n    super(PojoStation.class);\n    this.uri = uri;\n}\nprivate String getUrl(){\n    uriBuilder = Uri.parse(host + uri).buildUpon();\n    return uriBuilder.build().toString();\n}\npublic void addArg(String key, String value){\n    uriBuilder.appendQueryParameter(key, value);\n}\n@Override\npublic PojoStation loadDataFromNetwork() throws Exception {\n    //return getRestTemplate().getForObject( getUrl(), PojoStation.class );\n    getRestTemplate().delete(getUrl());\n    return new PojoStation();\n}\n}\nloadDataFromNetwork need return the same type as it is implemented in\nclass definition.\ngetRestTemplate().delete(getUrl()) return void so its incompatible type;\nHow such request should be implemented ?\nRegards.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/95\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. You can't do it that way with RoboSpice. It is strongly typed and will want you to Java type your results. As there is no super class between PojoStation and Void, you can't do that. You could maybe divide your requests in a hierarchy : a common abstract super class, a sublcass that returns a PojoStation and a second one that returns Void. But I would find it more clear to have four classes here.\n. Hello Bobby,\nthis bug seems to be related to this : http://stackoverflow.com/q/7581986/693752. \nThe support library that is available on maven central is release 7, the latest is release 12 and may correct that bug.\nCan you do the following to see if it solves the bug : \njava\n@Override\npublic void onStop() {\n    if( spiceManager.isStarted() ) {\n       spiceManager.shouldStop();\n    }\n}\nIf so, I will update the samples and documentation of RS.\nThanks for your interest in RoboSpice.\n S.\n. Yes it does, definitely. It looks like the fragment is started and stopped very quickly at 10.18.15:936 and the binding occurs after the unbinding. Then a new binding occurs 10.18.16.025 and results in this and the previous binding to be successful. \nThis cycle happens again on back button and that fails dramatically the second time. \nDo you use a fragment inflated from XML or created by code ? If the latter case, would you mind to post your fragment related code and its location in the activity ?\nSt\u00e9phane\n. Hi again Bobby-Jackson,\nthx a lot for all the feedback on this issue. I just updated the fragment\nsample for RoboSpice so that RS users can have a better reference on RS\nusage with fragments.\nAgain, this bug is related to a bad fragment life cycle inside Support\nlibrary r7. The bug seems to have been solved with r12, but unfortunately,\nit ain't available on maven central yet. Let's hope that graddle support in\nandroid will motivate Google Androiders to update their artifact more often.\nAs a complement, if people want to use r12 in their project then they can :\n- use maven sdk deployer and get their local support jar deployed in\n  their local maven repo / local nexus.\n- add an exclusion to robospice dependency, excluding support\n- adding back their local support lib (that will a different groupId /\n  artifcatId)\nThat should definitely solve this \"bug\" in RS until Support r12+ is\navailable on central.\nSt\u00e9phane\n. Fragment sample and start guide have been updated to reflect this issue.\n. I agree that it would save trouble. Nevertheless, this is a support bug.\nThere are others and I don't wanna add code to RS to patch some deficiency\nof an absolete version of support.\nSt\u00e9phane\n2013/6/14 StingerAJ notifications@github.com\n\nWhy don't you move the if-clause into the shouldStop-method to save the\nRS-users some trouble?\nNevertheless, I don't know why, but I accidentally included this if-clause\nat some point myself after getting this bug.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/96#issuecomment-19453917\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. @kjsolo Which version of RS are you using, it looks like this bug has been patched a while ago.\n. I agree with gcacace, the cachekey, when converted to String should be\nsanitized to get sure it can be used safely to create a cacheFile.\nIf you know of any light library that can help to achieve this quickly,\nthat could help implementing this feature.\nThanks for reporting that bug.\nS.\n2013/5/15 Riccardo Ciovati notifications@github.com\n\nWe could implement some kind of hash function but this would lead to a\nread/write overhead.\nI'm wondering if it would be easier checking on your side to use a proper\nstring as cache key.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/97#issuecomment-17933769\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. +1 for gcacace.\nI just read this :\nstackoverflow.com/questions/1184176/how-can-i-safely-encode-a-string-in-java-to-use-as-a-filename\nAnd I would Aldo favor a SHA-1 encoded cache key. Thought, this should be\noptional as it makes debugging much harder.\nThis should be released pretty soon.\nIf any one is interested to contribute this feature plus tests, that would\nbe awesome.\nWe are still recruiting...\n;)\nThx all for this collective problem solving.\nLe 16 mai 2013 15:08, \"gcacace\" notifications@github.com a \u00e9crit :\n\n@mdumrauf https://github.com/mdumrauf I think that this way of\nsanitization can produce collisions (for example, what happens when I'm\nusing \"cache/key\" and \"cache_key\"? Maybe a simple chars replacement it's\nnot enough to guarantee an unique association between cacheKey and the real\nfilename on disk. A hybrid way can be to use a string sanitizer with a hash\n(SHA1 or MD5) appended in the filename (example:\nsanitized_cache_key_b7dba5a1bc3605a87b59ac8147512c97)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/97#issuecomment-17999709\n.\n. Quite a good idea. :)\n\nI understand that it would allow a more readable cache_key that just using a hash. If they become readable this way, then it could not be optional.\nDo you want to do it by your self (fork, code, test, pull request ) ?\nI think it should be implemented around  :\njava\n//com.octo.android.robospice.persistence.file.InFileObjectPersister<T> : line 110\npublic File getCacheFile(Object cacheKey) {\n    return new File(getCacheFolder(), getCachePrefix() + cacheKey.toString());\n}\nWe should only make the change for file based ObjectPersisters and not interact with DataBase or InMemory persisters.\n. Eager to :)\nWith tests please !! That's quite a core feature.\n. The only solutions are : \n- to save the original (dirty) keys on disk \n- or to have a bijective way to sanitize keys\n- or to lock that feature (throw an exception) when the key sanitation has been activated.\nI would prefer a bijection, but is that possible ?\n. That's fine for me. This should be optionally set at the SpiceService level. The implementation should check if SDK is > 8 as Base64 is not available under this SDK. An other option is to include our own base 64 impl, such implementations are available on the net. RS is still compatible with SDK 1.6, but it tends to be old now.\n. Wiki has been updated to include that feature.\nTesters are welcome, issue is closed.\n. Do you have any working workaround ?\nS.\n2014-04-01 13:00 GMT+02:00 gcacace notifications@github.com:\n\nThe DefaultKeySanitizer.java implements a base64 encoding that, in some\nconditions, could fail because the filename is too long:\n04-01 10:05:29.504    2182-2253/it.subito.debugVinz E//ManagedPersister.java:54\ufe55 10:05:29.506 Thread-178 An error occured on saving request .image_/storage/emulated/0/Android/data/it.subito.debugVinz/cache/c00d21a9_9051_4072_8c8c_209fe6be8590.jpg.user_logged_false.user_pro_false data asynchronously\n    java.io.FileNotFoundException: /data/data/it.subito.debugVinz/cache/robospice-cache/ManagedObjectPersisterFactory_ManagedPersister_AdInsertAddImageResponse_LmltYWdlXy9zdG9yYWdlL2VtdWxhdGVkLzAvQW5kcm9pZC9kYXRhL2l0LnN1Yml0by5kZWJ1Z1ZpbnovY2FjaGUvYzAwZDIxYTlfOTA1MV80MDcyXzhjOGNfMjA5ZmU2YmU4NTkwLmpwZy51c2VyX2xvZ2dlZF9mYWxzZS51c2VyX3Byb19mYWxzZQ: open failed: ENAMETOOLONG (File name too long)\n            at libcore.io.IoBridge.open(IoBridge.java:409)\n            at java.io.FileOutputStream.(FileOutputStream.java:88)\n            at java.io.FileOutputStream.(FileOutputStream.java:73)\n            at it.subito.services.ManagedPersister$1.run(ManagedPersister.java:52)\n     Caused by: libcore.io.ErrnoException: open failed: ENAMETOOLONG (File name too long)\n            at libcore.io.Posix.open(Native Method)\n            at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n            at libcore.io.IoBridge.open(IoBridge.java:393)\n            at java.io.FileOutputStream.(FileOutputStream.java:88)\n            at java.io.FileOutputStream.(FileOutputStream.java:73)\n            at it.subito.services.ManagedPersister$1.run(ManagedPersister.java:52)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/97#issuecomment-39193040\n.\n. What bugs me with this approach is that you can't start a new instance of\nyour application and hope to remove all data that was cached by previous\ninstance(s).\n\nBut I don't have any better idea 'till now...\nAnyone ?\n2013/5/20 David Sobreira Marques notifications@github.com\n\nA few ideas on this topic:\nSame approach as CacheManager.getObjectPersister(..) which throws a\nRuntimeException if no persisters are found;\nAnother option would be to verify if there is at least one persister added\nto the cache manager after calling the overriden method\nSpiceService.createCacheManager(..) during initialization? I like the\nlatter better...\nThoughts?\nDavid\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/98#issuecomment-18127010\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi David,\nI like the first solution better than the second. It seems to me we shall\nhave had this dedicated cache folder since the beginning. It should also be\ncustomizable.\nIf the problem could be solved that way for file persisters, and doesn't\nreally mean anything for in memory persisters, what about database\npersisters ?\nThx for your contribution,\nSt\u00e9phane\n2013/5/20 David Sobreira Marques notifications@github.com\n\nIf all we need is to remove all cached data do we even need persisters at\nall?\nI would think that we should remove all cached data without invoking any\npersister. In order to accomplish that we'd need to either.\n1.\nchange the caching folder to use a sub folder for the cache manager\n   inside the app cache folder. Then it would be easy to just delete the\n   folder.\n   2.\nAdd a known prefix to all files created by the cache manager and then\n   remove all files in the current cache folder matching the prefix.\nNot sure how to solve the backwards compatibility issue to clear the\nexisting data after upgrade. Seems that if we call the registered\npersisters they will clean old data and then we can use one of the new\nstrategies?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/98#issuecomment-18145304\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. I came up with the idea this morning that the spice service knows the table\nit uses to cache data, from the beginning of the app.\nWe could just drop them and recreate them. Or, may be better, read the\ncache entry table and remove the cached records as others may have been\nadded outside of RoboSpice caching system. But, maybe devs would want to\nwipe out the tables anyway....\nWhat do you think ?\nSt\u00e9phane\n2013/5/21 David Sobreira Marques notifications@github.com\n\nSqlite databases are a little trickier since they by default all live in\nthe apps databases folder. I would think that for the database based\npersisters we either should use a name prefix to allow resolving the\ndatabases to clear or somehow track them in a persistent registry?\nThoughts? Once we come up with a solution I'll be happy to contribute.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/98#issuecomment-18210430\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi David,\nsorry for the delay, I suggest that we don't worry about the migration and\nlet developers perform the migration, a cache clean up in most cases.\nSimply asking users to wipe their cache / data should be enough.\nYou approach for the data base is interesting, wiping out individual\nrecords is also nice, and removing the databases doesn't look to me as an\nugly solution.\nI can't see clearly the respective benefits / drawbacks (including in\ncomplexity) of each approach.\nSt\u00e9phane\n2013/5/22 David Sobreira Marques notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas I am not quite sure\nwe are on the same page on this topic so let's exchange some more thoughts\nhere :)\nMy understanding is that this bug is about the\nCacheManager.removeAllDataFromCache(); API does not clear the cache if\nthere are no persisters registered? What use cases would get to this state\nwhere there are no persisters anymore and stale cached content?\nIn case we want to move on with the cache specific folder for the file\npersisters, I am wondering if we would like to support the migration of the\nalready cached content into this new folder when the application upgrades\nto use the library after these changes?\nCached content in the /cache/ folder would need to be migrated into\n/cache/robospice/. Now the question is how? The current code base does not\nallow us to determine which files are created by robospice and which ones\nare not? Maybe we can just decide not to perform migration?\nRegarding the sqlite based persisters I had an idea. We could take\nadvantage of the method:\nRoboSpiceDatabaseHelper.onCreate(..) and create a marker file matching the\nrespective database name on the databases folder. The marker is just an\nempty file to allow tracking the robospice cached dbs. This would create\nsomething like this in the file system:\n/databases/\n/ database1.db\n/ database1.db.robospicedb\n/ database2.db\nThe cache manager would then look into this folder for *.robospicedb files\nand remove these along with their marked databases. This would keep the\nother databases intact and allow cleaning the robospice cache dbs.\nThoughts?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/98#issuecomment-18278294\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Cache clean up is working fine for InFileObjectPersisters. For memory, as there is no factory, problem didn't apply. For data bases, a solution needs to be found still.\n. I was thinking, originally, to implement it at both spice manager and\nrequest processor level.\nI still think that's a good approach as it should not be such a big change\nto RS.\n@David, I don't see how/why spice manager early ness could be taken into\naccount.\nI plan to release RS tomorrow and start working on this feature right away.\nS.\nLe 19 mai 2013 19:28, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\nIHMO priority management should be handled by the request processor.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ok, that's fine. If you guys agree, I will try to implement that tomorrow.. \n\nWe might need beta testers though :)\n. On a natural ordering of CachedSpiceRequest + delegation to SpiceRequest.\nI would define a few constants, I don't like Volley's approach of an enum,\nI would prefer an integer. Devs would be more free and the constants could\njust be shorteners.\n2013/5/19 David Sobreira Marques notifications@github.com\n\nSure! Let me know if you need any help. I might write some test cases for\nit as well.\nHow are u planning to shape the priority api. On the spice request class?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/99#issuecomment-18122065\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. The priorization system has been pushed. I had to dig quite deep into the code of ThreadedPoolExecutor and PriorityBlockingQueue to implement and understand tests. But it works in a predictible way now. \nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/concurrent/ThreadPoolExecutor.java\nThere are some inherent limitations to this mechanism. For instance, the first runnable/callable passed to the executor doesn't go in the queue. Thus the priority mechanism will only apply when tasks are queued, and this happens when the number of current runners is exceeds the number of max thread in the pool size. \nIt can look like the implementation is not working, but it actually is and tests work at a rate of 100% (hopefully in CI on a slow emulator as well). \nThis feature gets all its meaning in the case you load A LOT of requests into RoboSpice. For instance, you load  images in a listview AND some data from a Pojo. Then you can decide to give a small priority to images, and you will get your Pojo asap.\n. Actually that was exactly the way I did it. :) Still, the spice manager's queue should also take priority into account that would limit the impact of the first N < #core priorisation problem.\nAnd RetryPolicy + back off alg also remain.\n(Note to self ;) )\n. Thx. README has been updated.\n. Code has been updated. We can now inject RestAdapter and retrofit service instances directly and they will get recycled to handle all requests of same type.\nSample is here : \nhttps://github.com/octo-online/RoboSpice-samples/tree/master/robospice-sample-retrofit/src/com/octo/android/robospice/sample/retrofit\n. Hi Jake, if you ever read this in one of your 80+ open tabs, would you mind to check if the new design looks good to you ?\nGreetings, \n St\u00e9phane\n. Released in 1.4.3\n. Hi David, \nI will review your code tonight. Formatting problems make it hard to see the difference. Also, there are some aspects of the implementation that I would like to refactor but globally, it looks like all 2 features are working.) \nI shall be able to publish it tonight on master, if you could review the changes after I merge them, I would appreciate it.\nA simple question : how different is sanitation for cache keys in the cases of Databases and Files ?\nThanks for this contribution, \n St\u00e9phane\n. Sorry, I am pretty busy. It will take more time to merge these new features. But it's a top priority !\n. The pull request could not be integrated as such. Feature has been reimplemented, extended and tested. It will be part of release 1.4.3.\nIt would have been much easier to use RS formatting, commits were big and a lot of lines appeared to have change.\nThx for your contribution, sorry not to have been able to use more of your work.\n. Thanks, this will be added in next release. \n. Missing jars have been mentioned in setup procedure on wiki and jars have been added to repository branch (from 1.4.3-SNAPSHOT and above).\nThx for this issue.\n. Look at the cause of the exception you catch.\n. Ok, issue is reoponed. You should normally receive a no network exception, but we will take time to dig into it.\n. I am not sure to understand the issue really. Looking at the code of the RequestProcessor, you will get \n``` java\npublic class MyListener implements RequestListener {\n   public void onRequestSuccess( Something something) {\n   }\npublic void onRequestFailure( SpiceException exception ) {\n      if( exception instanceof NoNetworkException) {\n           //Toast \"you got no connection\n      } \n   }\n}\n```\nYou could also use the DefaultNetworkStateChecker used by RoboSpice to say whether or not network conditions are considered valid for the library.\nI am pretty sure I don't get your point. If so, could you be more clear, take the time to format your code properly and explain exactly what you get, what you don't want and what you would like to get. I may have some time to work a bit more by the end of the day before releasing RS 1.4.3.\nSt\u00e9phane\n. Line 551 of RequestProcessorTest checks that we receive the right exception as proposed above.\nRS works as expected with respect to this. I may still be missing the whole point. Please comment out and ask to re-open if needed.\nMeanwhile this issue is blocking release 1.4.3, and it gets closed for this reason.\n. Post your code, you must have missed something.\n. As there is no-follow-up, I close this issue.\n. Christopher is right, mavenized configuration are a charm... but it takes\nquite a lot of time to get used to it.\nMeanwhile, look on maven central, the jars you are looking for are there,\nincluding sources and javadocs.\nGreetings,\n S.\n2013/5/30 Christopher Jenkins notifications@github.com\n\nThese are built onto available when using maven, I suggest you switch to\nMaven or Gradle this will improve your build process infinitely (and your\nlife)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/107#issuecomment-18682876\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. No one is actually implementing this. I had a vague idea about adding it in some extent to RS but I don't know enough of okhttp to say anithing about feature overlapping (like with the cache), or even if RS is the right layer for adding support to ok http. I think it could also be (maybe should ?) be added at the google client level or Spring Android, but I  may be wrong and RS would the right place.\nIf you feel like adding a module supporting okhttp, let's go. We will need both tests and samples. Testing can be a trouble as it looks like you need vogar which has no maven plugin.\n. A new OkHttp Client module has been initiated on master branch. \nThere is still some reflexion needed to make the OkHttpService interact in the RS way with respect to caching, but base ground is here. See this document for OkResponseCache details.\nTests and a sample has been added as well.\n. The UI Spice list module also uses the okhttp client now. Sample has been updated to reflect this change. Everything seems to be working fine, although I am still thinking about a better design to modularize stuff in a more elegant way.\n. The issue is closed. The new okhttp module is now offcialy part of RS. \n. Fine. Thx for the feedback.\nS.\n2013/9/1 Christopher Jenkins notifications@github.com\n\nCool good to hear I did have a play and it seemed to work fine.\nOn 1 Sep 2013 15:28, \"stephanenicolas\" notifications@github.com wrote:\n\nThe issue is closed. The new okhttp module is now offcialy part of RS.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/108#issuecomment-23625877>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/108#issuecomment-23627093\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Thanks, you are right. \nIs the new version of the Wiki page better ?\n. Wiki has been updated. Thanks for mentionning that point.\n. Hi papo, this looks like a bug but can you re-write your mail a bit and be more clear, maybe adding an exemple somewher on gist.\n. I couldn't follow every inner detail of the story but if there is no problem, issue is closed.\n. Wiki has been updated. https://github.com/octo-online/robospice/wiki/Advanced-RoboSpice-Usages-and-FAQ\n. You can use the spiceManager's method : getFromCacheAndLoadFromNetworkIfExpired(). It will do exactly this.\n. Yes, that's it. Documentation is poor for this method, I agree.\nSt\u00e9phane\n2013/6/1 Ankush Gupta notifications@github.com\n\nThanks!\nJust making sure I understand what\ngetFromCacheAndLoadFromNetworkIfExpired() does since it seems to be\nbarely documented.\nIf I use getFromCacheAndLoadFromNetworkIfExpired() and the data is cached\nand expired, it will result in the Listener being called twice, once for\nbeing returned from the cache even though it is expired, and a second time\nwhen it retrieves the fresh data from the network?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/112#issuecomment-18785048\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Travis is working again. Do we keep Cloudbees too ?\n. @rciovati @jeromevdl I suggest we drop CloudBees support and concentrate on a single CI server : Travis. Any vote for or against this ?\n(BTW, I can't say how that would impact Nemo's instance usage for RS, but as Sonar is still hard to get working exactly as we want for Android projects, that question could be postponed as well).\n. Fine for me.\nLet's transfer that into a kanban ticket.\nS.\nLe 9 juil. 2013 10:41, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\nI agree with you to keep just Travis.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/113#issuecomment-20660597\n.\n. README has been updated and does mention Travis only.\nAll jobs have been deactivated on jenkins : https://robospice.ci.cloudbees.com/\n. Yes, if you want to decorrelate the lifecycle of a request listener and an activity, use a service.\nCreate your own service that will use a spiceManager bound to the spiceService.\n. Such a behavior could be useful for some developers, and awful for others. \nIf you want to accept any date from cache and try to get fresher one given an expiray delay, use : \n\nspiceManager.getFromCacheAndLoadFromNetworkIfExpired()\n. Did this exception have a cause that you didn't post ?\n1.4.5 is actually a snapshot. We outta work on it before releasing it.\nA more complete stack would definitely help.\nS.\nLe 8 juin 2013 13:01, \"Mathieu Hausherr\" notifications@github.com a\n\u00e9crit :\n\nMy StackTrace\njava.util.concurrent.RejectedExecutionException: Task\ncom.octo.android.robospice.SpiceManager$16@42624cc8 rejected from\njava.util.concurrent.ThreadPoolExecutor@419d91chttps://github.com/java.util.concurrent.ThreadPoolExecutor/robospice/commit/419d91c8[Terminated,\npool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]\n1 at\njava.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1967)\n2 at\njava.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:782)\n3 at\njava.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1303)\n4 at\njava.util.concurrent.Executors$DelegatedExecutorService.execute(Executors.java:600)\n5 at\ncom.octo.android.robospice.SpiceManager.removeAllDataFromCache(SpiceManager.java:944)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116\n.\n. There used to be a bug in SNAPSHOT release when multiple threads would create the same cache folder simultaneously. It's been fixed.\n. Does the pbm happen on Android 2.3 as Daniel reported it ? Or on any\nversion of android ?\n\nSt\u00e9phane\n2013/7/7 Andrew Branch notifications@github.com\n\nHaving the same problem with 1.4.5. Downgraded to 1.4.4 to fix.\nI have a button that allows you to manually clear the cache. Here's the\n1.4.5 stack trace:\njava.util.concurrent.RejectedExecutionException: Task\ncom.octo.android.robospice.SpiceManager$9@429f7ca0 rejected from\njava.util.concurrent.ThreadPoolExecutor@4294bc4https://github.com/java.util.concurrent.ThreadPoolExecutor/robospice/commit/4294bc48[Terminated,\npool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]\nat\njava.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1967)\nat\njava.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:782)\nat\njava.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1303)\nat\ncom.octo.android.robospice.SpiceManager.cancelAllRequests(SpiceManager.java:773)\nat\ncom.winewize.merlot.SettingsActivity.clearCache(SettingsActivity.java:247)\nat com.winewize.merlot.SettingsActivity.access$1(SettingsActivity.java:245)\nat\ncom.winewize.merlot.SettingsActivity$3$1.onClick(SettingsActivity.java:121)\nat\ncom.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:4745)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\nat dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-20572966\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. We can't reproduce the bug in 1.4.5 and 1.4.6-SNAPSHOT. Unless someone can\nprovide more information, I will close the bug within a few days.\nS.\n2013/7/8 Andrew Branch notifications@github.com\n\nI saw it on 4.1.2. Didn't test beyond that.\nAndrew\nOn Mon, Jul 8, 2013 at 1:38 AM, stephanenicolas notifications@github.comwrote:\n\nDoes the pbm happen on Android 2.3 as Daniel reported it ? Or on any\nversion of android ?\nSt\u00e9phane\n2013/7/7 Andrew Branch notifications@github.com\n\nHaving the same problem with 1.4.5. Downgraded to 1.4.4 to fix.\nI have a button that allows you to manually clear the cache. Here's\nthe\n1.4.5 stack trace:\njava.util.concurrent.RejectedExecutionException: Task\ncom.octo.android.robospice.SpiceManager$9@429f7ca0 rejected from\njava.util.concurrent.ThreadPoolExecutor@4294bc4<\n\nhttps://github.com/java.util.concurrent.ThreadPoolExecutor/robospice/commit/4294bc48>[Terminated,\n\npool size = 0, active threads = 0, queued tasks = 0, completed tasks =\n2]\nat\n\njava.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1967)\n\nat\n\njava.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:782)\n\nat\n\njava.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1303)\n\nat\n\ncom.octo.android.robospice.SpiceManager.cancelAllRequests(SpiceManager.java:773)\n\nat\n\ncom.winewize.merlot.SettingsActivity.clearCache(SettingsActivity.java:247)\n\nat\ncom.winewize.merlot.SettingsActivity.access$1(SettingsActivity.java:245)\nat\n\ncom.winewize.merlot.SettingsActivity$3$1.onClick(SettingsActivity.java:121)\n\nat\n\ncom.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)\n\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:4745)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat\n\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\nat dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/octo-online/robospice/issues/116#issuecomment-20572966>\n\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/116#issuecomment-20586488>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-20600365\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. The issue has been reported with more details here :\nhttps://github.com/octo-online/robospice/issues/128\nIt is solved in current snapshot. Release 1.4.6 is around the corner.\nS.\n2013/7/15 Valentin R. notifications@github.com\n\nI reproduce it, I call cancelAll to cancel loading, and got the exception\ntoo.\nHere is a gist with the log and the stacktrace :\nhttps://gist.github.com/bishiboosh/6000690\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-20975787\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Can you provide a sample ? Or better, a failing test..\n2013/8/1 Mat\u00edas Dumrauf notifications@github.com\n\nI tried 1.4.6 and still tackle with this issue. Anyone else having the\nsame problem too?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-21963368\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Mat\u00edas,\nthank you very much for this snippet. I will try to turn it into a sample\nand inspect RS behavior.\nNevertheless, I see that you are using a BigBinaryRequest. Those requests\nneed a cache file by their own and don't rely on RS cache mechanism. The\nfile they use is not handled by RS cache manager and it can't delete it.\nCan you confirm that removeDataFromCache works or breaks for other types of\nrequest or only fail for BigBinaryRequests ? For all other requests, it\nshould work though.\nThe later scenario wouldn't be a bug, but more \"a surprising detail\" that\nit's not really possible to correct with actual RS design.\nSt\u00e9phane\n2013/8/12 Mat\u00edas Dumrauf notifications@github.com\n\nDon't have time to provide an automated failing test, but the way I\nchecked it was:\n1- Fetch data this way:\nspiceManager.execute(new BigBinaryRequest(url, cacheFile), cacheFile.getName(), DurationInMillis.ALWAYS_RETURNED, requestListener);\n2- Clear the cache:\n@Override\n    protected void onDestroy() {\n        firebase = null;\n        spiceManager.removeAllDataFromCache();\n        super.onDestroy();\n    }\nI understand that *removeAllDataFromCache() returns a Future that will be\nexecuted. But if a check the cache directory of the app, files are stil\nthere.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-22514498\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi Mathias,\nthe situation is more clear now. I will add a note inside the BigBinaryRequest's Javadoc to let devs know that they have to handle the cache file erasure by themselves and that this cache file is not handled by RS caching mechanism in the \"normal way\". \nThx for clearing things out.\nI, and others, are worried about this \"exceptional behavior\" in RS. But our actual design is that requests are cache agnostic, and this provides many advantages from a design point of view. Unfortunately the draw back is that it's not possible for requests to \"get a reference\" to a cache location via the cache manager, and if they handle a cache file of their own (like bigrequests) then the cache manager won't have any knowledge of it neither. \nThings could be improved in some obvious ways (like injecting the cache manager inside a spicerequest, or hard coding some special behavior in RS for request that handle cache by themselves, but I don't see any of these solutions as fully satisfying from a software design point of view. But I am pretty sure there is a clean and neat way of implementing this in RS, I just hadn't time to fully think about it.\n. Doc updated in commit : d6ccebc088b00f175e900d471b17027056a333da\n. This issue has been tested and getFromCacheAndLoadFromNetworkIfExpired works as expected : \n- it doesn't depend on the state of your server.\n- it will trigger two events if something older than max expiry is found in cache : one for the old cache content, and one for the network. First event if fired as soon as data is loaded from cache.\n- it will trigger only one event if data is found in cache and satisfy max expiry or data is not found in cache at all and request succeeds on network. \n- and no events other wise.\nAm I missing something here ?\nCurrrent test runs fine against 1.4.5-SNAPSHOT.\nSt\u00e9phane\n. Hi Sebastian,\nI am currently releasing RS 1.4.5, I hope it can hit maven central today. I\ncan't run the test on 1.4.4 as I am leaving for holidays within a few hours.\nWhen 1.4.5 is out, please re-report any issue, either on the mailing list\nor, preferred, on the github issue board.\nSt\u00e9phane\n2013/6/24 Sebastian Harder notifications@github.com\n\nI work with 1.4.4.\nI agree that the behaviour is like you describe it, IN CASE that the\nserver is reachable. When it is not reachable (shut down) the data from\ncache is only loaded after the network call timed out. It also works as\nexpected when I am in flight mode.\nCould you run your test against 1.4.4 please? If it is successful there, I\nwill digg into your code to see what's going wrong.\nRegards\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/117#issuecomment-19892757\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Please do, and re-open if needed, I really can't see the problem.\n. Hi Sebastian,\nthis is very very very late to answer you.\nBut nothing has changed and this method works as expected. A test has been\nadded/refined in order to proove it.\ngetFromCacheAndLoadFromNetworkIfExpired works exactly as you detailed it.\nhttps://github.com/octo-online/robospice/commit/4c63ad8b417445e430fd5691a262d92e8d62c503\n2013/8/7 Sebastian Harder notifications@github.com\n\nNow on 1.4.6 I had a look into the source code.\nWhat I would expect from the method is, that\n1) it reads the cache\n2) calls the RequestListener with the data from cache (no matter how old\nthe data is)\n3) it loads the data from network (if cache is dirty)\n4) calls the RequestListener with the data from network.\nAs far as I can see, the method is implemented differently. Should I use\ntwo calls instead, like so?\nspiceManager.getFromCache()\nspiceManager.getFromCacheAndLoadFromNetworkIfExpired();\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/117#issuecomment-22239056\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. This issue can't be reproduced. Upcoming release 1.5.0 is more targeted\ntoward efficiency and multi-threading. Does the snapshot that is currently\navailable on our snapshot repository solve the problem ?\nSt\u00e9phane\nPS : Ok, it has to be more related to Spring Android than to RS itself, so.\n2013/6/18 alexkazakov notifications@github.com\n\nSeems like this kind of crash occurs only when using RestTemplate inside\nrequest's loadFromNetwork method.\nMoved away to apache httpclient and this kind of problem is gone.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/118#issuecomment-19593036\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi, \nHandy, but it would encourage devs not to handle an exception, async but still.\nFor sure, it deserves a better treatment than an empty catch clause. :)\nSt\u00e9phane\n. Duplicate of https://github.com/octo-online/RoboSpice-samples/issues/8.\n. You should, in your onResume method, call both :\n- getFromCache()\n- addLIstenerIfPending\nThat should allow you to get any pending request, whether it completed\nalready or not.\nProviding a boolean could be interesting, but the nature of RS, almost\ncompletely asynchronous, would make the boolean returned inaccurate. The\nonly solution to get an accurate request would be to stop processing\nrequests while answering the \"isThereAnyRunningRequest, ifSoPlugMeOnIt()\",\nand that's less efficient than the solution above.\nSt\u00e9phane\n2013/6/19 DanielNovak notifications@github.com\n\nA simple usecase - user starts a long running request, and loading dialog\nis shown and rotates the display, the activity/fragment gets recreated.\nThere is now way how check if the request is still running and whether I\nshould show the loading dialog again.\nI can subscribe a new listener to the running request but I won't know if\nit's still running until I get the onRequestSuccess (or failure) callback.\nMaybe if at least the addListenerIfPending method would return true in\ncase it was subscribed to an existing request...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/122\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Why don't use simply invoke execute. RS will aggregate similar requests\nautomatically.\nSimilar meaning 2 requests with same result class and same cache key.\nSt\u00e9phane\n2013/6/23 DanielNovak notifications@github.com\n\nSt\u00e9phane, thansk for the answer. The addLIstenerIfPending won't help much\nbecause after orientation change you can subscribe to the pending request\nbut you don't know if the request pending. I could wait for a progress\nupdate from the request but this might come too late in case I want to show\na progress dialog right after orientation change.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/122#issuecomment-19878118\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Commit 334dbac3e00c9d4b9998b3f84ba2f30395124cb6 solved the issue. SpiceManager.isDataInCache has been added + tests.\nA snapshot will be available in a few minutes on our snapshot repo.\n. Commit 0d3254749814f505aee156e9cac7ddc1dd034126 also adds getDateOfDataInCache.\nPublished on master branch. A snapshot is being redeployed.\n. Hi bobby,\nThanks for the feedback. I am actually in holidays. Please fill an issue on\nour github board.\nS.\nLe 25 juin 2013 11:05, \"Bobby-Jackson\" notifications@github.com a \u00e9crit :\n\nIn addition, there's an issue with getDateOfDataInCache\nIf there's no cache key or no data in cache, the method returns Thu Jan\n01 01:00:00 UTC+01:00 1970 instead of null\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/123#issuecomment-19959373\n.\n. You must have mispelled groupIds or artfeactIds. RS has nothing special\ncompared to an artefact deployed on maven central and used with graddle.\n\nNote that Jackson 2 is much faster.\nLe 23 juin 2013 07:11, \"Philippe David\" notifications@github.com a \u00e9crit :\n\nHi, i'm trying to add Robo Spice Maven dependencies from the guide :\nhttps://github.com/octo-online/robospice/wiki/Setup-for-Maven-users\nI tried to convert :\n\nx.y.z\n\n\ncom.octo.android.robospice\nrobospice\n${robospice.version}\n\nto gradle syntax :\nbuildscript {\n    repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:0.4'\n    }\n}\napply plugin: 'android'\nrepositories{\n    mavenCentral()\n}\ndependencies {\n    compile files('libs/android-support-v4.jar')\n    compile group:'com.octo.android.robospice', name:'robospice-spring-android', version:'1.4.4'\n    compile group:'org.codehaus.jackson', name:'jackson-mapper-asl', version:'1.9.11'\n}\nandroid {\n    compileSdkVersion 17\n    buildToolsVersion \"17.0.0\"\ndefaultConfig {\n    minSdkVersion 11\n    targetSdkVersion 16\n}\n}\nI'm getting this error :\nGradle: A problem occurred configuring project ':NumericMenu'.\n\nFailed to notify project evaluation listener.\nCould not resolve all dependencies for configuration ':NumericMenu:compile'.\n      > Could not find com.octo.android.robospice:robospice-spring-android:1.0.0.\n        Required by:\n            NumericMenuProject:NumericMenu:unspecified\n      > Could not find org.codehaus.jackson:jackson-mapper-asl:1.9.11.\n        Required by:\n            NumericMenuProject:NumericMenu:unspecified\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/124\n.\n. Hi Philippe,\n\nI mark the issue as invalid for now as I don't think it can come from RS settings. But I may be wrong, please reopen the issue if it still applies. I am going to try to get a working gradle configuration for our samples using your gradle build file as a base.\n. A prototype of gradle configuration can be found in issue \nhttps://github.com/octo-online/robospice/issues/124\n. @Bobby-Jackson We need some feedback from you. @rciovati I assigned this issue to you so that you can feel free to close it and related issues and pull requests.\n. I personally prefer mvn clean install and keep all checks on.\nSnapshots on sonatype include latest changes if you wanna try them.\n@Riccardo can't you deploy snapshots ? Are you missing any password / key ?\nS.\nLe 9 juil. 2013 10:13, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\n@Bobby-Jackson https://github.com/Bobby-Jackson here you are the\ninstructions :)\ngit clone git@github.com:octo-online/robospice.gitcd robospice\ngit checkout master\nmvn clean install -DskipTests=true -Dmaven.javadoc.skip=true -Dfindbugs.skip=true -Dcheckstyle.skip=true -Dandroid.dex.optimize=false\nAnd then in your project replace your current RS version with\n1.4.6-SNAPSHOT.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/128#issuecomment-20659443\n.\n. If I understand everything here, the issue can be closed.\nPlease re-open if needed, I just try to things a bit more clear in the issue list.\n. It's strange, the following test works fine since the introduction of this feature (from SpiceManagerTest) : \n\n``` java\n public void test_getDateOfDataInCache_when_there_is_no_data_in_cache() throws InterruptedException, SpiceException, ExecutionException, TimeoutException {\n        // given\n        // we use double to get some in memory cache implementation\n        spiceManager.start(getInstrumentation().getTargetContext());\n        spiceManager.removeDataFromCache(TEST_CLASS, true);\n    // when\n\n    // test\n    assertNull(spiceManager.getDateOfDataInCache(TEST_CLASS, TEST_CACHE_KEY).get(SPICE_MANAGER_WAIT_TIMEOUT, TimeUnit.MILLISECONDS));\n}\n\n```\n. Hi Mathieu,\nDoes it still happen with 1.4.6-snapshot ?\nWhen you get the NPE, can we get the stack trace ?\nDid you protect your fragment's nonstop method's call to spice\nmanager.should stop() (as explained in the starter guide , by checking that\nthe spice manager is started).\nS.\nLe 12 juil. 2013 09:42, \"Mathieu Castets\" notifications@github.com a\n\u00e9crit :\n\nI have also this problem with:\n- removeDataFromCache\n- getAllCacheKeys\n- ...\nand maybe more methods from the SpiceManager.\nI'm pretty sure that comes from the same point: a binding problem.\nMy test case again:\nA fragment that use spiceManager.onStart(getActivity()); in onStart().\nNow after getting my result successfully once, for instance, I lock my\nscreen, unlock it and when coming back to the fragment, going through\nonStart() and onResume(), the above methods don't work (\nNullPointerException or no errors for removeDataFromCache) and these logs\nare missing:\n07-10 14:13:24.895: D//SpiceManager.java:1110(23854): 14:13:24.899 Thread-5230 Waiting for service to be bound.\n07-10 14:13:24.895: D//SpiceManager.java:1117(23854): 14:13:24.900 Thread-5230 Bound ok.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/128#issuecomment-20862764\n.\n. Bug is reproduced, thanks for this @Bobby-Jackson . I am working on that bug.\n. Thanks @Bobby-Jackson , that was a good one. A change introduced in 1.4.5 prevented the spiceManager from being restarted. The life cycle you proposed showed that pretty well. A bug fix is pending, a snapshot should be released within a few minutes to correct the bug. \n\nCan you confirm it, please ?\n. Personal note : TODO : add a test to stop and restart a spicemanager.\nDon't close the issue until it's done.\n. Test added in commit 5d049b158c5a7b184f5eb606a7c5c5430c84d6f5.\nThanks for reporting it. That has been a real regression !\n. This class had been only used once (in robospice motivations). I am glad it could be useful to someone else. \nThanks for the fix.\n. Really nice piece of code. Personnally, I don't know how to unit test something like this in a predictible way.\nYou have any test to submit, please go ahead. Eager to see other patches, this one is really neat.\n. I agree but that would not be predictable. Multiple loops (I mean a large\none with many iterations) could help to get more \"predictable\"...\nThe best way could that a listener that is being fired itself modifies the\nlist of listeners it belongs to. That would get predictable.\nWDYT ?\n2013/7/11 softwaremaverick notifications@github.com\n\nOh and as for unit testing it. I imagine that two threads running where\none is iterating over the request listeners but where a request listener is\npurposely slow, whilst another addListenerIfPending request is happening\nshould pretty much do it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/140#issuecomment-20841491\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. @Bobby-Jackson answered in the right way. \nI know this brings confusion when getting started with RS but it's an important concept of the library : \n- the delay of expiry you pass as parameter to RS does impact loading data from cache\n- but it doesn't impact saving data from cache : it is always saved unless you use the cache-less execute overload (as @Bobby-Jackson mentionned it).\nThe expiry delay doesn't impact subsequent execute invokations. That's the way RS is built and it really keeps the lib simpler (as we don't have to handle cache cleaning/purging/pruning).\n. @DanielNovak I re-ran the tests on a 2.3 emulator and it looks like there is no issue with cache cleaning. I can't reproduce the issue mentioned here.\nThe issue is marked as invalid and will be cleared within a few days if you can't provide more information on it.\nBTW, using RS 1.4.5, removeAllDataFromCache will return a Future that can be used to get notified of the completion of the async invocation : create a new thread that will get the result of the future, an asynctask may be well suited here. Providing a more RS oriented listener (for all those SpiceManager commands) is seen as long term feature and we are not going to implement it soon.\n. Hi @Amorgos ,\nthe SpiceManager must be stopped when the context that started it doesn't exist anymore. Thus, your question is very relevant for an IntentService.\nAs SpiceRequest's executions are asynchronous, it would be wrong to stop the spicemanager right after executing a request as you couldn't be sure that the request has been executed (and chances are it wouldn't yet).\nSo, if you want to implement a one-shot spicemanager to execute a single request, the best way is to \n- start a manager\n- execute a request using a listener\n- await for a lock (ReentrantLock or CountDownLatch) that would prevent the onStartCommand method from terminating\n- whether the request succeeds or fails, the listener should signal the lock holder\n- after the lock holder is signaled, it should stop the SpiceManager and the IntentService can finish properly its onStartCommand and its lifecycle properly.\nCountDownLatch is really a class to be familiar with, it's a smashing feature when dealing with multi-threading.\n. I think there might be something wrong in the way you bind RS (the SpiceManager) the activity that uses it. Do you really execute requests after starting the SpiceManager and are you sure you start it inside the onStart method of your activity ?\nNeverthless, I added a lock check to ensure that no requests can be executed when the SpiceService is being bound or unbound. That should protect the use case that creates the problem you mention.\nCan you confirm that current RS-1.4.6 snapshot solve the problem ?\nSnapshots have been deployed both on our sonatype snapshot repo and our internal jars repo (for ant users).\n. Should have been fixed in 1.4.6-SNAPSHOT on current master branch and snapshots.\nRe-open if needed.\n. That had been asked for a while but we never had time to dig that. It looked so simple ! :) \nThanks for that contribution.\n. I don't get that error at all : \n``` java\npublic class Clazz {\n    interface A {\n    }\ninterface B extends A {\n}\n\n@Deprecated\npublic void met(A a) {\n}\n\npublic void met(B b) {\n}\n\npublic static void main(String[] args) {\n    new Clazz().met(new B() {});\n}\n\n}\n```\nThe compiler chooses the most specific overload and I get the expected behavior with a param of type A (met invokation is lined through in eclipse).\n. @DanielNovak we need some follow up from you. @rciovati I assign the issue to you so that you can feel free to merge needed code, and administrating the issue and related pull requests.\n. Issue closed. Thanks for reporting it.\n. Thanx for that contribution.\n. Hi Mark,\nI agree that it be easy to create a custom request processor to achieve this kind of things but your need seems too specific to be part of the library itself. Although it is pretty well coded (but not tested unfortunately), I would only keep part of it (hooks in core RS but not the extensions you propose).\nWould it seem appropriate to you and feel your needs ? If you want to convince me that I am wrong, please do, I am open to a discussion here.\nSt\u00e9phane\n. Hi \"Maverick\",\nthanks for your reply and your neat argumentation about the notifications need. \nYou are right, I was talking about protected methods when I said I would add hooks with pleasure to the request processor.\nI need more reflection about this. I can understand your need and you convinced me that it could be a mainstream requirement also I never faced it before.\nIt seems to me that it's very close to an issue I opened myself to add the ability to follow the status of each requests inside RoboSpice and provide a UI to monitor that all : https://github.com/octo-online/robospice/issues/55\nThere are some issues that I would like to tackle before going into this but I think that maybe both your needs and the feature I wanted to add may be merged BUT instead of creating a separate RequestProcessor to add notifications, I would prefer an Observable-Observer design pattern. It would avoid the need to add a second, specific and hard to maintain RequestProcessor : the main request processor could simply send events that would be listened to by another component, and this component could, for instance, but not only, create notifications for each request.\nProviding the core event mechanism would be part of the lib, and creating a custom listener like a notification factory, could be a sample.\nI think such an implementation would be much better and more generalist than the one you actually proposed, although I found your code very very clean.\nDo you think such a design would be interesting to you and fill your requirements ? If so, would you be interested to contribute to it ?\nAs you can see RS is growing and its usage is growing even faster. Riccardo, Jerome and I have troubles coping with that pace and we are looking for new contributors. If you are interested in joining the team, providing a clean point of extension, with tests, would be a fast-tracked dubbing ceremony ;)\n. Yes , such a code, the obs-obs pattern would be included.\n.the idea is to provide something extensible.\nS.\nLe 5 juil. 2013 10:57, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nIf this code should be incorporated into the main SpiceService then I'll\ndo that. Otherwise you just need to override createRequestProcessor() and\nreturn the NotificationRequestProcessor object.\nYou can merge this Pull Request by running\ngit pull https://github.com/softwaremaverick/robospice enhanced-notifications\nOr view, comment on, or merge it at:\nhttps://github.com/octo-online/robospice/pull/153\nCommit Summary\n- Added support for notifications customisable per request and managed\n  in the worker thread\nFile Changes\n- M\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/SpiceService.javahttps://github.com/octo-online/robospice/pull/153/files#diff-0(9)\n- A\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/notification/NotificationFactory.javahttps://github.com/octo-online/robospice/pull/153/files#diff-1(19)\n- A\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/notification/NotificationRequestProcessor.javahttps://github.com/octo-online/robospice/pull/153/files#diff-2(119)\n- A\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/notification/RequestNotification.javahttps://github.com/octo-online/robospice/pull/153/files#diff-3(8)\n- A\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/notification/SpiceRequestNotificationService.javahttps://github.com/octo-online/robospice/pull/153/files#diff-4(23)\n- M\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProcessor.javahttps://github.com/octo-online/robospice/pull/153/files#diff-5(10)\nPatch Links:\n- https://github.com/octo-online/robospice/pull/153.patch\n- https://github.com/octo-online/robospice/pull/153.diff\n. Hi Maverick,\n\nAs a sample, the notification factory and notification manager would be\njust perfect.\nS.\nLe 9 juil. 2013 12:07, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nHi Stephane, sure that sounds good to me.\nI'll look into that and produce sample observers to demonstrate.\nAndrew\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/153#issuecomment-20664515\n.\n. Hi Maverick,\n\nDon't worry about the release schedule. It's loose on our side ;)\nDo your stuff, code it well, test it as far as possible, and start it from\nmaster branch.\nIt will be part of next release when merged.\nYou can ask for feedback early in order to adjust and be confident on the\npath you follow.\nRS is based on quality as far as possible, there is no rush due to a\nclient's constraint ;)\nS.\nLe 10 juil. 2013 17:19, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nAlthough actually ignore the spiceservice/requestprocessor changes in the\ncurrent issue as I'm about to add ObserverManager to the list of parameters\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/153#issuecomment-20749370\n.\n. As far as I remember the whole issue, that should now be demonstrated inside a new sample.\n. Merged. Thx for the fix.\n. Looks great !\n\nI got the feeling that it would be cleaner than our jars repo but would\nstill require some job to be done manually except if a github plugin could\nbind to the release cycle of maven.\nBut sure, I +1 your idea ric !\nS.\nLe 9 juil. 2013 10:50, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\nFor the next release we could use the new release feature of Github:\nhttps://github.com/blog/1547-release-your-software\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/156\n.\n. I opened an issue on GitHub maven plugin for automatic release support during release life cycle.\nhttps://github.com/github/maven-plugins/issues/43\n. @rciovati \nIs there any solution to automate this at present time ? If not, we should close that issue.\n. The Google Http Client handles protobuf, it could be a good starting point. We need a protobuf service though. Does any one know an open & free service that could be used for a sample and testing ?\n. Follow-up : http://stackoverflow.com/q/17776350/693752 and https://code.google.com/p/protobuf/issues/detail?id=536&thanks=536&ts=1374646155\n. +1. Wire looks good to. If someone wants to take that in charge, we would thankfully accept a PR / new module.\n. Hi Andrew,\n\nI'm away fromage keyboard this weekend. Your commit looks promising but I\nwill need time to go through it for sure.\nHow would you enhance the bottleneck of map request to listeners.\nS.\nLe 13 juil. 2013 17:54, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nAlthough actually think I'd like to move some classes into new packages\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/158#issuecomment-20921870\n.\n. Hi Andrew,\n\nI don't think so. RequestListeners are often instances of inner classes and\nembed a pointer to living context. Binding that context to a request would\nbreak the whole thing about RS : there is no memory leak as no context is\nretained when requests are executed.\nAn implementation with WeakRefs would be possible though but, to be honest,\nI really wonder how much of a bottleneck that map is.\nS.\n2013/7/13 softwaremaverick notifications@github.com\n\nHi Stephen,\nEffectively once a request is underway it should store it's own set of\nlisteners which are still able to be modified concurrently when an\naddlistener if pending request comes in. However, it shouldn't have to\nquery the map when updating progress as it should just pass it's set of\nlisteners to the reporter.\nOnly when the request is starting or finished (failed or succeeded) should\nit hit the map to add/remove from it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/158#issuecomment-20925821\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Ok, I hope to get this code merged today. Please don't modify it for now. Tests are passing, I am just reviewing the code.\n. Request has been merged and will be part of next release. Thx a lot for these contributions.\n. Done. Thanks.\n2013/7/17 Mathieu Castets notifications@github.com\n\nYou should update the Advanced RoboSpice Usages section\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/160#issuecomment-21109275\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. That's the way it should be done inside an app. But really, I wonder what we should with that inside RS as a library ? Support is not available on central after R7. So, what to do ?\nThis is really a question from a gradle newbie.\nS.\n. After getting a bit more used to Gradle, I know think that as long as RS is based on maven, we should not change the support version. \nIf/when we migrate to Gradle, then we could depend on a newer version of support. This would really bug me at first to have to diffferent builds depending on the build tool used but the problem comes from the fact that support is not updated on maven central. And although I begin to appreciate Gradle, I persist to think this is a wrong choice from the SDK team.\nThe workaround you explained is, very unfortunately, the only way to go.\nIssue is closed. Please reopen if needed.\n. Issue has been solved just now. Thanks for this contribution.\n. Thanks Mathieu. Documentation has been updated.\n2013/7/19 Mathieu Castets notifications@github.com\n\nThere's still a mistake here\nDurationInMillis.ALWAYS_EXPIRED. Use this parameter to specify when data\nwill be taken from the cache without invoking retrieval of new data from\nthe network.\nThat should be DurationInMillis.ALWAYS_RETURNED\nBut, IMHO, I would remove that whole sentence as you repeat it in the next\nparagraph.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/162#issuecomment-21239635\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Bug was solved in commit 46760478 on June 6th, and released in version 1.4.5 of RS.\n. This version wouldn't fit, too buggy for fragments as you do. 1.4.6 is for you. :)\n. Done in 2820d87522e76c266bd3c911a650a474ce383d4f.\n. Hi langxangvn,\nthe stacktrace you give is just a log inside RoboSpice, but nothing is happening.\nRoboSpice just tells you that the SpiceManager's main thread has been stopped (by shouldStop), nothing more.\n. I assigned the PR to myself. I will have time to review it this week. Seems big (again ;) ) but it looks like great stuff. That feature is the last feature that was desired for 1.5.0, so master may soon upgrade its number version.\nThanks for that job Andrew.\n. Hi Andrew, thx for the feedback and follow up.\nThere was no critics at all. I just meant to notify it will take a few days\nto review the code.\nThx for testing as well.\nI am not convinced by a link from requests to listeners yet. I would like\nto get a clear vision of that change before going that way. I fear that\nsuch a link could lead to memory leaks.\nS.\nLe 24 juil. 2013 10:23, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nI believe it's actually deceptively large. There's LOADS of test code in\nthere to try and hit all the scenarios. The actual main code is quite flat.\nHowever, over time I'll look to flatten this further in line with how I\nwant to flatten the Listener to Request mapping. However, that'd be a Proof\nof concept thing.\nYou should also note that whilst there's a lot of code, there's very\nlittle change to the existing codebase. It's more adding to what I've done\npreviously with the Request Progress Reporters.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-21470248\n.\n. I am working on it today.\n\nhttp://huboard.com/octo-online/robospice/board\n. Hi Andrew,\nit's really a lot of work that you did on that pull request.\nI think I understood the whole thing now, and I would like to submit a few changes to simplify things. I feel like we have to many entities with very strict roles to achieve the feature, and it brings complexity.\nI would see things like this : \nyou can add a SpiceServiceListener to a SpiceService via the SpiceManager like : \n``` java\n    spiceManager.addSpiceServiceListener( new SpiceServiceListener() {...} );\n//or maybe we could just extend the mechanism already present with\n\n//otherwise we rename the following listener to RequestProcessorListener\n    public void addSpiceServiceListener(final SpiceServiceListener spiceServiceListener) {\n        requestProcessor.addSpiceServiceListener(spiceServiceListener);\n    }\npublic void removeSpiceServiceListener(final SpiceServiceListener spiceServiceListener) {\n    requestProcessor.removeSpiceListener(spiceServiceListener);\n}\n\n```\nThe spiceManager would execute a command as usual, and pass the Observer to the service (and manage a proper life cycle with binding/unbinding).\nThe SpiceServiceListener would be something like : \n``` java\n public interface SpiceServiceListener {\n    void onRequestCompleted(CachedSpiceRequest<?> request);\nvoid onRequestFailed(CachedSpiceRequest<?> request);\n\nvoid onRequestCancelled(CachedSpiceRequest<?> request);\n\nvoid onRequestProgressUpdated(CachedSpiceRequest<?> request);\n\nvoid onRequestAdded(CachedSpiceRequest<?> request);\n\nvoid onRequestNotFound(CachedSpiceRequest<?> request);\nvoid onSpiceManagerBound(SpiceManager<?> spiceManager);\nvoid onSpiceManagerUnBound(SpiceManager<?> spiceManager);\n }\n```\nAs you can see, it would be notified of all events related to every request. This entity would have to filter requests it is not interested in (you did that via the RequestObserverFactory).\nThen I would suggest that all RequestProgressReporter (renamed to RequestListenerNotifier) should have a RequestManagerObserver (renamed to SpiceServiceListenerNotifier). Both notifiers will share the structure to fire events to a specified listener, on the UI thread.\nThis design would get rid of : \n- ObserversNotSupportedException\n- RequestObserverFactory\n- DefaultRequestProgressReporterWithObserverSupport\n- RequestTracker\n- RequestTrackerService\nAnd rename : \n- RequestProgressReporter -->RequestListenerNotifier\n- DefaultRequestProgressReporter --> DefaultRequestListenerNotifier\n- RequestManagerObserver --> SpiceServiceListenerNotifier (on ui thread)\n- old SpiceServiceListener --> RequestProcessorListener\n- RequestObserver --> SpiceServiceListener\nAdd : \n- SpiceServiceAdapter (with default, empty implementation of SpiceServiceListener)\nAs an example, we could provide a second service that would bind to SpiceService and create a notification for each event, or a fragment that would display the list of all events related to a service.\n. I don't know if we shouldn't have a more complete listener interface like : \n``` java\n public interface SpiceServiceListener {\n    void onRequestCompleted(CachedSpiceRequest<?> request, Thread thread);\nvoid onRequestFailed(CachedSpiceRequest<?> request, Thread thread);\n\nvoid onRequestCancelled(CachedSpiceRequest<?> request, Thread thread);\n\nvoid onRequestProgressUpdated(CachedSpiceRequest<?> request, Thread thread);\n\nvoid onRequestAdded(CachedSpiceRequest<?> request, Thread thread);\n\nvoid onRequestNotFound(CachedSpiceRequest<?> request, Thread thread);\nvoid onSpiceManagerBound(SpiceManager<?> spiceManager);\nvoid onSpiceManagerUnBound(SpiceManager<?> spiceManager);\nvoid onSpiceManagerExecuteCommand(SpiceManagerCommand command, Thread thread);\n}\n```\nTo also be notified of command's execution inside the SpiceManager and to get the information about the thread executing a request or a command (that would be awesome to display in some UI).\n. I refactored the changes proposed by that pull request in https://github.com/octo-online/robospice/tree/observers2.\nI had to drop a few methods in SpiceServiceListener (mainly bind/unbind as the spicemanager is not know of the service, and this could be added to a SpiceManagerListener). But the implementation is working and passes tests.\n@softwaremaverick , would you mind to review it ?\n. Hi Andrew,\nI saw that you created a new ThreadHandler to dispatch all those events on\na different thread. I was thinking about an immediate need (creating a list\nwith all processing information) and thus I needed that on the UI Thread.\nBut still, I wonder if it's the best option.\nHow could we rename RequestProcessorManager, the name is to generic for me.\nMaybe RequestProcessorEventsNotifier ?\nSt\u00e9phane\n2013/7/29 softwaremaverick notifications@github.com\n\nNo problem I'll check it out tonight.\nWill all listeners have to work on the UI thread? I originally wanted non\nUI tasks to be processed on a separate worker thread which is why the\nObserverManager created it's own thread.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-21710727\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Would there be a way to easily change the thread on which events are\nreceived ? Maybe we could have two classes so...\nFor the name, I was also thinking of RequestProcessorObservable. No that\nfunky, but some android classes have this convention (like\nFragmentPagerAdapter). I think notifier is better as almost all methods\nstart with notify.\nSt\u00e9phane\n2013/7/29 softwaremaverick notifications@github.com\n\nDo you mean RequestProgressManager?\nOriginally I had it as RequestProgressBroadcaster but\nRequestEventsNotifier or RequestEventsBroadcaster ?\nThe use of placing code into the non-UI thread was effectively so that\nAndroid Notifications could be managed on a non UI thread. Taking as much\nwork away from the UI thread as possible improves the UI performance. This\nis especially noticeable on a BinaryRequest which uses the\nRequestProgressListener to upgrade the request progress after every 4K of\ndata.\nAdd a few binary downloads running at the same time along with Android\nNotifications showing the progress and you'll soon realise the impact it\nhas on the UI thread.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-21717218\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Yes, that mechanism was nice to handle posting events on non UI Thread, but is not needed on UI Thread. It should be reimplemented when we use a non UI Thread, I agree. But my question is more to find an elegant way to say RS to use UI Thread or not, without having to pass a whole new Notifier to a service, I found that API too complex for devs and prefer something simpler.\n. A sample has been added to monitor a spice service, things are getting better. Everything is pushed.\n. I don't know exactly what RequestContext could look like, but I guess it\nwould contain more information than the current thread.\nI just fear that, as we don't have a real definition of requirements and\nneeds, we had useless stuff.\nSo I propose that we let this be driven by a need, inside samples for\ninstance, or better, by real life examples. It we need stuff to display a\ncomplex view with a tree for request processing, then fill the interface of\nthe listener with what is needed.\nThat would allow not to go to deep in defining stuff that wouldn't be used.\nS.\n2013/8/9 softwaremaverick notifications@github.com\n\nI still need to look at this and hopefully will do so tomorrow. I'm\nstarting to think that there could be a lot added to a service listener.\nOne of the things I'm considering is having a RequestContext to things like\nonRequestProgress, onRequestCompleted, etc, etc.\nThis could be created by the service listener in onRequestAdded and used\nby the service listener to do custom things for different requests\nincluding posting notification eunnables to a separate message queue\nrunning on a separate thread.\nWhen the service has finished the service listener could then clear down\nthe queues.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-22383450\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. @softwaremaverick Ok, I will introduce a RequestProcessingContext that will provide additional data about request execution. But, for now, this class will not take listeners into account as I fear to introduce a memory leak by keeping contexts (as listeners are often inner classes of contexts). If we go in that directions, the listeners should be referenced via WeakReferences.\n. Done, the branch observers2 is ready to be merged. @softwaremaverick, @rciovati , I would appreciate a peer review.\nTo sum up, this branch introduces a SpiceService monitoring API.\nThe idea is that all SpiceService can be monitored. They will provide some information to their listeners via a new class named RequestProcessingContext that contains info about request processing like execution thread and current progress of a request. (This class can evolve later on to add more data)\nA sample named robospice-sample-core-monitor has been added to master branch of sample repo.\nThis sample displays notifications about the status of requests that are processed for a given SpiceService. The monitoring service goes to foreground automatically (it should have at least the same life cycle as the monitored spice service, so I put it in foreground by default).\nI believe that this API should suit most needs, but it has been designed to evolve with time if new data need to be reported. That's a good base I believe.\nActually, this breaks the sample master branch, so the sooner we can merge this, the better.\n. I agree that context should be created once and only once by the runner.\nThat would be a better implementation. But for now, I think it's good\nenough...\nS.\n2013/8/16 softwaremaverick notifications@github.com\n\nViewing the differences using the following\nhttps://github.com/octo-online/robospice/compare/master...observers2seems interesting.\nI'll definitely look into it further. I'm especially interested in seeing\nif RequestProcessingContext can be created once, possibly as part of the\nrequest runner which will be created when a request is processed. I'll look\nfurther into it but like you say I need to create a sample project to show\nhow I'd use it for it to be understandable. I'm keen for RS to be in a\nposition where I can use it for everything and it bends according to my\nspecific requirements.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-22766123\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. This topic branch has been merged in commit 5e114fc04e787262bf26f976bae6a8476e0feafa.\nThanks Andrew ! That's a really nice feature. The sample robospice-sample-core-monitor illustrates a basic usage.\n. You could invoke the addListenerIfPending during onStart and, as @softwaremaverick and @Mathieu-Castets  mentioned it, if there is no pending request, you can take it from the cache and/or decide to execute a new request.\nIf you don't care about sending a new request, you can just call execute, your new request would be aggregated to a pending request, if any.\n. Hi Tyler,\nhow do you manage to synchronize you fragments life cycle and your spice\nmanager ? Do you stop it ?\nWhen stopped the spice manager should not notify your listeners any more.\nIt may also happen that you face an issue to an old version of the support\nlib. R7 is buggy in some ways and r13 corrects many issues of fragment life\ncycle.\nAnd last but not least, you can check if your fragment us attached in your\nlistener before trying to update your ui.\nS.\nLe 24 juil. 2013 09:08, \"Tyler Treat\" notifications@github.com a \u00e9crit :\n\nI've run into an issue where I am canceling a request after an orientation\nchange in a Fragment. The problem is that the Fragment is no longer\nattached after the orientation change, so when onRequestFailure fires\nwith a RequestCancelledException, I cannot update my UI to hide progress\nindicators.\nI show progress indicators in my onStart() if there is a pending request\n(cache key saved in savedInstanceState), so the indicators are enabled\nafter orientation and before cancelation. Essentially, I need to pass the\ncancelation event to the new Fragment, but it's returning to the old,\ndetached one.\nIs there a good way to handle this kind of scenario?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/168\n.\n. I can't clearly see the problem.\n- When you receive a failure, assign -1 to the mPendingSearchId (that\n  you save in onSaveInstanceState).\n- In onCreate, add an else close to hide the UI if mPendingSearchId is\n  -1.\n- When you receive the failure, if the fragment is attached, hide the UI.\n\nIsn't it ?\n2013/7/24 Tyler Treat notifications@github.com\n\nHi Stephane, thanks for the prompt reply.\nMy Fragment's onStart() and onStop() look something like this:\n@Overridepublic void onStart() {\n    super.onStart();\n    mSpiceManager.start(getActivity());\n    if (mPendingSearchId != -1) {\n        mSpiceManager.addListenerIfPending(Search.class, mPendingSearchId, new SearchRequestListener());\n        setSearchState(true); // Notify UI that request is in progress\n    }}\n@Overridepublic void onStop() {\n    if (mSpiceManager.isStarted()) {\n        mSpiceManager.shouldStop();\n    }\n    super.onStop();}\nI am indeed using android-support-v4 r7 (unfortunately, this is the latest\nversion in Maven Central Repository). I will try r13 this evening and see\nif that fixes anything.\nI am currently calling isAdded() to check if the Fragment is attached\nbefore trying to update the UI from the listener, but the problem is that\nmy progress indicators do not get removed when it is not attached.\nOne thing I thought of was detaching the listener from my Fragment when it\nis removed and attaching it to the new Fragment that is added. That way, I\nwould ensure the UI is updated properly. Do you see any problems with doing\nthis?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/168#issuecomment-21494394\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Caching or even requesting.. For sure, we can't propose all technologies as\nRS extensions, but a few well choosen ones would be interesting.\nI would love to try kryo and some binary json or protobuf, but we also need\nsome server side sample (un less we can make that work with mock web server\n???)\nSt\u00e9phane\n2013/7/29 Riccardo Ciovati notifications@github.com\n\nIn your opinion how do this would be implemented? As an extention to the\ncache module?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/169#issuecomment-21703724\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Cool. :)\nI have been expecting for around 1 year now. I had a discussion on Stack Over Flow about hiding notifications with Mark Murphy and RS used \"a hack\", till then. We now have to face our responsabilities and decide, whether or not, the service has to be in foreground, or better, as @softwaremaverick  said: when it should be.\nAnd it would be nice to have that behavior as customizable as possible as not all apps will want to keep a service in foreground and display a notification.\nWe're all invited to submit a pull request for this, or to plan the functional requirements & shape an API collectively.\n :)\nSt\u00e9phane\n. Does that currently work ? I had a quick look yesterday and had the feeling\nit was not exactly taken into account.\nS.\n2013/7/29 Riccardo Ciovati notifications@github.com\n\n@g123k https://github.com/g123k meanwhile a better solution is\nprovided, to do not start the service in foreground (thus do not show the\nnotification), in your SpiceService subclass you can ovverride the\ncreateDefaultNotification method returning null:\n@Overridepublic Notification createDefaultNotification() {\n    //Returning null we won't start the service in foreground.\n    return null;}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/170#issuecomment-21702958\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi Paul,\nif a service is not in foreground :\n- it can be garbage collected more easily by the system under memory\n  pressure\n- I did a few experiments :\n  https://play.google.com/store/apps/details?id=com.snicolas.mixedservicelifecycle&hl=fr.\n  And as far as I can remember, a service that is started (not only bound but\n  started, as in RS where services are started and bound), will be killed\n  when it is not bound anymore and will then be restarted.\n  -\nAnd this really sucks for RS... :S But such a behavior can have been fixed\nin Android 4.3. If so, we could have a different behavior for different SDK\nversions. I would not be keen on that, I would prefer the service to be in\nforeground always and keep running as long as either someone is bound to it\nor as long as a request is \"living\".\nWe definitly have to experiment, another acceptable solution would be to\nhave the service running normally as long as an activity is running and get\nit to foreground if a request is still living, then displaying a\nnotification. That would seem the more Android-like to me as the user will\nbe notified that the app is doing something either by displaying an\nactivity or by displaying a notification. But I don't know exactly in which\nextent that is feasible.\nSt\u00e9phane\n2013/7/29 Paul Lammertsma notifications@github.com\n\nWhat are precisely the implications of dropping Service.startForeground()altogether?\nCan we not assume that when the service is destroyed, the application has\nbeen as well, and that we're no longer interested in receiving the\nresponses? Perhaps Robospice should provice a facility to attach the\nservice to a notification for background apps (such as media players), and\ndefault to not calling startForeground() at all?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/170#issuecomment-21726113\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. START_STICKY can't be used in RS. A spice service should not be restarted automatically by the system. This wouldn't have any meaning as we don't command the service via intents but by binding. \nThe service is started to get sure that is not stopped when unbound, but when both unbound and when no requests are pending. Such a behavior would be the default life cycle of bound only service. A started and bound service survives to unbinding and gives us the opportunity to stop the service when not used any more.\nUsing START_STICKY would lead to have a service restarted by the system, even when no spicemanager is instanciated to pilot it, and this would lead to memory wastage.\n. So, to sum things up in that thread :\n- we already handle notifications so that devs can override createNotification to create their own custom notification. When no notification is used, the service doesn't go in foreground.\n- by default RS displays no notification until 4.3. And in 4.3, the default notification is malformed and triggers an android default notification. But, by default, the RS services go in foreground.\n- having a service in foreground prevents a service to be stopped/wiped by the system when requests are still pending.\n- we could have a mechanism to set the service in foreground (and displays a notification in 4.3) only on demand, for instance, when there is no more activity using it but for as long as requests are pending. And that would be fair for users (not devs, but users as they would see when RS/the app is doing something even when not shown on screen).\n- we could switch to a default behavior that displays no notification and doesn't set the service in foreground at all.\nThere are our options so far. Any suggestion to get a neat API will be appreciated.\n. @StingerAJ I didn't clearly see what Astrid was doing and I can't see how it would help in our case.\n. I can't understand what you say. Do you have some working solution for it ?\nOr you just second this idea ?\nS.\n2013/8/1 sarmadali20 notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas I have some\nservices using spicemanager from \"we could have a mechanism to set the\nservice in foreground (and displays a notification in 4.3) only on demand,\nfor instance, when there is no more activity using it but for as long as\nrequests are pending. And that would be fair for users (not devs, but users\nas they would see when RS/the app is doing something even when not shown on\nscreen).\" I can assume that when ever there are pending requests we will\nhave a notification & when there are no more requests but activity/service\nis still bound to RS service then notification will disappear.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/170#issuecomment-21961138\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Fine. I am having a break with RS development but still thinking about it. I take a few days to think of project building via Maven and Gradle and will be back on this thread soon. Meanwhile, feel free to explore how we can achieve this. Even just a StackOverFlow link would be a contribution.. :)\n. Hi @rciovati , that looks nice. @softwaremaverick , I bet you got something pretty close to what we want but I didn't find time to review your solution. Sorry for the delay.\nS.\n. @rciovati , @softwaremaverick Ok. I think I got all the features we want, starting from Andrew's work : \n- by default SpiceServices will have a notification and go to foreground. That's the more robust way to download data, it is the usual RS way, and @rciovati also agrees on that. @softwaremaverick, are you ok with this ?\n- when some activity/fragment is bound to the service (i.e. displayed/started), all notifications are hidden, service is not in foreground. Proposed by @softwaremaverick , I second as there is no chance the service is garbage collected when the activity is running (remember, in RS the service and activity are in same process). @rciovati , do you agree with this ?\n- when no activity/fragment is bound, the nofitication will be shown if and only if a request is pending. Part of @softwaremaverick pull request, @rciovati do you agree with this ? I believe this is the contract of foreground services and fair for users.\n- when no activity/fragment is bound and no request is to be processed anymore the service itself will stop itself. (RS way, implemented since neolithic). This makes RS memory usage clean.\nI got all that implemented in (yet) another branch in RS repo : foreground-fix.\nAll this can be tested in RoboSpice sample core on master branch. Some code has been added just for testing and should be removed after merging the topic branch foreground-fix .\nPS: Please Andrew, refork from this branch if needed.\n. The foreground-fix branch has been corrected a bit for tests and checkstyle + PMD. It has also been tested in a large app with many requests and works pretty well so far... \nPeer review still requested ;)\n. Hi Andrew,\nThx for the review.  I just didn't understand the last sentence. I still\nuse that method. The sample monitor actually uses it to display the request\nprogress (and that's quite cute and useful IMHO).\nSt\u00e9phane\n2013/8/18 softwaremaverick notifications@github.com\n\nAlthough if you no longer wish to use the requestsInProgress() method in\nthe RequestProcessorListener then you might as well remove it from the\ninterface and remove the bit that populates it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/170#issuecomment-22829338\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Solved by commit : f21072024d2c9e04b868d38fe856d0af521624bb\n. Thx for the feedback Sebastian.\nD\nLe 20 ao\u00fbt 2013 14:07, \"Sebastian Harder\" notifications@github.com a\n\u00e9crit :\n\nWorks in my application without problems. Thanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/170#issuecomment-22940292\n.\n. So fast, Andrew :)\n\nBut is the service still in foreground or not ? It really needs to be. For\ninstance, download a large binary, RS request should go on, and it should\nbe possible to \"re-plug\" a listener to it. Otherwise, that would be a\ntremendous change on the contract of RS.\n2013/8/4 softwaremaverick notifications@github.com\n\nThe service will only show a notification if you override\ngetDefaultNotification with a valid notification and if requests are active\nYou can merge this Pull Request by running\ngit pull https://github.com/softwaremaverick/robospice foreground-fix\nOr view, comment on, or merge it at:\nhttps://github.com/octo-online/robospice/pull/172\nCommit Summary\n- Initial Foreground Service/Notification Changes\nFile Changes\n- M\n  robospice-core-parent/robospice-core-test/src/main/java/com/octo/android/robospice/request/RequestProcessorTest.javahttps://github.com/octo-online/robospice/pull/172/files#diff-0(4)\n- M\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/SpiceService.javahttps://github.com/octo-online/robospice/pull/172/files#diff-1(34)\n- M\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProcessorListener.javahttps://github.com/octo-online/robospice/pull/172/files#diff-2(2)\n- M\n  robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProgressManager.javahttps://github.com/octo-online/robospice/pull/172/files#diff-3(8)\nPatch Links:\n- https://github.com/octo-online/robospice/pull/172.patch\n- https://github.com/octo-online/robospice/pull/172.diff\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. Hi @softwaremaverick and @rciovati , sorry but I am not inclined to disagree with one of view. :)\nI would really appreciate if all our brains could agree on a common solution. I don't really think IT is a matter of opinion, at least not at all in that case.\nI reviewed Andrew's code and I like that solution. The service is only going to foreground when a request is being processed, other it doesn't. I still fear some side effects (like the service being restarted when unbound) and need more testing.\nNevertheless, I also agree that a simple an elegant solution like @rciovati 's one would be enough and fully compliant with Android's spirit.\nAnd, to make it even more complicated, I had the feeling that in issue #170 , we started to agree on the fact that the notification should be displayed only when there are no activities are currently binding the service, and should be hidden otherwise.\nThat feature is important to me. I am not sure everything is fully documented on the Android system to answer quickly and, again, I would really like all 3 of us to agree on both the direction to take and an implementation.\n. Please follow up discussion in issue #170 .\n. Hi Guillaume,\nThis is really a spring android question.\nBut, I would try too postforentity or getforentity with the rest template\nto catch the http status.\nStephane\nLe 7 ao\u00fbt 2013 16:03, \"GuillaumeBo\" notifications@github.com a \u00e9crit :\n\nHello, i am using robospice with springAndroid, and i need to catch a 204\nhttp status code.\nBut by default robospice consider this as an error and retry 2 times, my\nwebservice return a 403 on the 2 other tries cause sames arguments sent. So\ni must catch this 204 like a 200OK\nhave you an idea how to do this?\nthanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/173\n.\n. I don't know why but an answer from @rciovati didn't make it on Github. Here it is : \n\nTry creating your own JacksonSpiceService, in order to configure the object mapper to don't fail on unknown properties.\n``` java\npublic class JacksonSpringAndroidSpiceService extends SpringAndroidSpiceService {\n    @Override\n    public CacheManager createCacheManager(Application application) throws CacheCreationException {\n        CacheManager cacheManager = new CacheManager();\n        cacheManager.addPersister(new JacksonObjectPersisterFactory(application));\n        return cacheManager;\n    }\n@Override\npublic RestTemplate createRestTemplate() {\n    RestTemplate restTemplate = new RestTemplate();\n\n    // web services support json responses\n    MappingJacksonHttpMessageConverter jsonConverter = new MappingJacksonHttpMessageConverter();\n    jsonConverter.getObjectMapper().configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    final List<HttpMessageConverter<?>> listHttpMessageConverters = restTemplate.getMessageConverters();\n\n    listHttpMessageConverters.add(jsonConverter);\n    restTemplate.setMessageConverters(listHttpMessageConverters);\n    return restTemplate;\n}\n\n}\n```\n. If you use spring android use @jsonignoreproperties to annotate your class.\nS.\nLe 10 ao\u00fbt 2013 12:08, \"Jonathan Garcia\" notifications@github.com a\n\u00e9crit :\n\nI am trying to integrate using your library (awesome job btw) and ran into\nan issue. My requests keep failing to unknown json properties in my\nresponse body. Is there a way to ignore unknown json properties in my\nresponse without having to and an annotation in my model object ( I do not\nhave access to them). Thanks again\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/175\n.\n. The status of this issue is passed to close. If the problem remain, please ask your question on Jackson's mailing list. We can't provide deep support for all those technologies.\n. Please ask question on the mailing list. this looks more like a Jackson question than a RS question.\n. Hello,\n\nThe problem you faced might interest the spring android team. It looks like\nthe list of converters is not thread safe inside the rest template.\nFeel free to report it on their mailing list, that will be a nice contrib.\nS\nLe 13 ao\u00fbt 2013 12:15, \"xbezdeka\" notifications@github.com a \u00e9crit :\n\nProblem solved! It was caused by this:\ngetRestTemplate().getMessageConverters().add(new\nMappingJackson2HttpMessageConverter());\ngetRestTemplate().getMessageConverters().add(new\nStringHttpMessageConverter());\nWhen I removed the StringHttpMessageConverter() it started work as it\nshould. I don't know why you can't have more than one converter though.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/176#issuecomment-22555169\n.\n. No. Wrong statement.\n. Hi @tomkoptel , \n\nI am not so sure such a question can be answered easily. I don't think it should be mentionned as an RS issue, and even on the RS discussion group it would more or less be the right place to analyze the performance of your app.\nI will do my best to answer, but your need is really closer to a performance audit than RS support.\nFirst, what bugs me if that you don't mention the amount of data you parse. Of course, 2-3 minutes is far too long but how much data do you parse ? If it's around 2-3 Mb, then that may be the cause of the problem...\nYou may need an initial bootstrap of a large amount of data, and then maybe only take deltas into account, but this has to be solved on the server side. For instance you could send the date of the last data received to the server that would only send you the difference with actual data. That's a possible design.\nAnother solution would be to send much less data, first only the name of \"athletes\" and use other requests to get details on each athletes. This is more a server side design again. That is probably the best solution.\nAlso, I can note that you don't use much of Gson capability to parse annotated Pojos, you do most of the parsing manually, and generally this leads to more complex code and loss of time. Refer to Gson site to know how to parse your POJOs in a more automatic way.\nIf you are looking for performance you should consider : \n- trying to get more data about time spent by your request : how long does parsing take and how long does DB writing take ? Then you will be able to target optimization where time is really lost.\n- usually, Jackson 2 is considered faster than Gson. If parsing takes time.\n- ORMLite performance issues should be addressed to ORMLite mailing list, there are no experts on ORM Lite here.\nSorry not to be able to help you more. I will close the issue as I don't think there is anything here close to a RS issue. If you need more support, I would really recommend you to get your app audited on a profesionnal basis.\n. The method spiceManager.getFromCacheAndLoadFromNetworkIfExpired() does exactly this. \nThe issue list is on GitHub is the best place to report bugs. If you have questions, it is better to address them to our Google discussion group.\n. You should exclude the android support that is shipped with robospice.\n. Thanks for the work-around. That's the best solution for now.\n. Hi @seva-ask ,\nI am going to have a look at your code this week. It may take me a little time, but I think you found a bug I had the feeling of in https://github.com/octo-online/robospice/issues/177 .\nThanks for this contribution. I will let you know about the status of this request as soon as I review it.\n. The feature has been added in commit 4e051308f3d05742914a2f218401fd6dbaba179b.\nThe review pointed to some interesting new features like a new event to distinguish when request is really added or just aggregated.\nThe new feature provides a more robust SpiceManager when many requests are triggered and are aggregated by the spice service (requestProcessor).\nThx seva-ask. I am going to deploy snapshots. if you could try the new snapshots and approve the new feature works for you, that would be awesome.\n--UPDATE : snapshots are deployed.\nSt\u00e9phane\n. Thanks. That should be the last step before releasing version 1.4.7 . :)\nEager to hear your feedback.\n. Hi Ivanov,\nreally nice bug again. I will solve it, don't worry, altough I got\nabsolutely no idea now about the way I will. But it should be around\ntomorrow.\nHow do you get so precise data about what happens in RS ? That's very\ninteresting, you got very accurate bugs and pinpoint exactly to the\nproblems.\nDo you run RS in debug ?\nS.\n2013/9/2 Vsevolod Ivanov notifications@github.com\n\nAt the moment I don't know how to fix this bug quickly, but I am thinking\nabout it. Maybe you will find the solution faster.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-23665467\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Quickly thinking about it :\n- we could add a spicemanager to the requestprocessingcontext and check if\n  it is == this in spicemanager when we receive an event\n- we could remove the request from the map of request to launch when\n  request is added, and cancelled and aggregated and add it to the map of\n  pending request if and only if was contained in the previous map\n- we could return something when adding a request to the spiceservice, like\n  a boolean\nthe third way seems poor to me as may need other information as well in the\nfuture and a boolean doesn't hold that much information\nthe first way looks interesting but I fear about memory leaks (as always).\nThe second way seems to be more difficult to achieve in a full and complete\nway.\nWe should also add a test to get sure the bug you just found doesn't come\nback.\nIf you feel like fixing it yourself, then I would appreciate the test and a\nreasoning/justification for your preferred solution.\nSt\u00e9phane\n2013/9/2 St\u00e9phane Nicolas snicolas@octo.com\n\nHi Ivanov,\nreally nice bug again. I will solve it, don't worry, altough I got\nabsolutely no idea now about the way I will. But it should be around\ntomorrow.\nHow do you get so precise data about what happens in RS ? That's very\ninteresting, you got very accurate bugs and pinpoint exactly to the\nproblems.\nDo you run RS in debug ?\nS.\n2013/9/2 Vsevolod Ivanov notifications@github.com\n\nAt the moment I don't know how to fix this bug quickly, but I am thinking\nabout it. Maybe you will find the solution faster.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-23665467\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi Vselod,\nthanks for sharing those ideas and for the pull request. The only thing\nthat bugs me in this request is that the set of pending requests is going\nto grow and the get shrinked down.\nI am wondering if there couldn't be a shared form of aggregation both at\nthe spiceservice level and at the spicemanager level. That would be a\nbetter design. It would prevent, in spicemanager, both maps (requests to\nlaunch and pending) to grow in case of repetitive requests.\nDon't you think so ?\n2013/9/3 Vsevolod Ivanov notifications@github.com\n\nYes, of course I run RS under debugger. I have some problems with it,\nbecause I use Android Studio and gradle projects which are not compatible\nwith maven. So I have created gradle project for RS and attached sources\nfrom repository to it. But in this scheme I don't have test projects, so\nsometimes I can open original project in IDEA and run tests.\nAlso I inspect hprof dumps when I meet memory leaks.\nThe main problem that I see in this bug and around it - almost everything\nin robospice is operating with requests, but in my case I operate with\nlisteners. Suppose we have two instances of SpiceManager and we are\nexecuting the same request in them with different listeners. Every\ncallbacks are operating with Set, but listeners in this set may have come\nfrom different SpiceManagers. So if we are stopping one of SpiceManager\ninstances, we actually want that request executing will continue and in the\nend listeners, that have come from all other SpiceManager instances will be\nrun, and from stopped instance will not.\nMaybe we should introduce new class that aggregates RequestListener and\nSpiceManager from where it came from.\nSo on I think that 1 and 3 ways will not work because they don't match\nListener to SpiceManager.\nSecond way should work.\nIn #186 https://github.com/octo-online/robospice/issues/186 I\nimplemented some solution that is simpler and should work too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-23682899\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Snapshot has been deployed on sonatype and repo branch.\n. Fine, thanks.\nWould you be interested in writing a small wiki entry on the github repo to\nhelp us tracking memory leaks ?\nSt\u00e9phane\n2013/9/20 Vsevolod Ivanov notifications@github.com\n\nThank you for fixing. We are comparing memory usage of two variants of\nfixes. I am going to post results here tomorrow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-24781501\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi vsevolod,\nI am impressed by the measures you deploy to test your app. I would be\ninterested to know which app you re talkin' about.\nI think I will release 1.4.7 soon. It's already late a bit. I can release a\nbug fix quickly if there us any problem left yo correct.\nS.\nLe 20 sept. 2013 20:06, \"Vsevolod Ivanov\" notifications@github.com a\n\u00e9crit :\n\nAs I can see, new build works well.\nBut on Sony Tablet S our testers could reproduce OutOfMemory again, and I\ncan get this device and investigate the problem only next week. I suppose\nthat this problem is not caused by robospice but I'm not sure now.\nI will try to write some text for wiki. When it is ready, I will inform\nyou.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-24829491\n.\n. Hi Vselod,\n\nthanks for these informations. I am eager to see your app getting accepted\nat Sony's QA. I have no doubt you can reach this level of robustness when I\nsee the way you found the last bugs in RS :) If you need any additional\npatch or feature in RS, please let me know. RS has already passed quite a\nfew audits of performance, robustness and security.\nYou are right a cross platform framework is more than often disappointing,\nI don't think it's really possible to get things as well done as with a\nnative app. There are quite a lot of subtlities to take into account when\ndevelopping for a mobile OS...\nI have always wanted to add a section to RS about apps using it. Would you\nmind to let me know when you will pubilsh the app so I can add its icon ?\nThe app looks really nice and well done by the way.\n(I could see it on the store and it looks possible to install it, I stay in\nFrance).\nGreetings,\n St\u00e9phane\n2013/9/21 Vsevolod Ivanov notifications@github.com\n\nIt is a good idea to release 1.4.7.\nWe are developing this app:\nhttps://play.google.com/store/apps/details?id=ru.stream.droid\nMaybe you can't download it because it is only for Russia, but I'm not\nsure. If you are interested, I can send you .apk or we can invent another\nway for giving it to you.\nVersion, that is in market now, is written in Xamarin (\nhttp://xamarin.com/monoforandroid). Our company had been developing apps\nwith this framework for two years but now we faced great problems with it.\nIn MonoForAndroid garbage collection is implemented in very strange way, so\nit has great lags, pauses and even many crashes. I tried to explain problem\nto their support, attached some simple projects with great pauses but they\nhaven't suggested any suitable solutions, they only suggested not to hold\nreferences for UI objects, what can't be done in projects with complex UI.\nSo we had no other way except full rewriting our app in Java without\nXamarin. Version written in Java is not published in market yet, we are\ngoing to do it in one-two months.\nWhen we were writing in C# with Xamarin, we had to develop some kind of\nlibrary for executing requests like robospice, but we had to do it\ncrossplatform to work on iOS too. It was really bad idea because requests\nwere not connected to activity lifecycle, but I got some experience in such\nlibraries and in solving problems with random crashes and memory leaks.\nOne more thing: our app may become preinstalled into new Sony devices in\nRussia, so it has to pass Sony's QA. It is very strict, for example, app\nshould have no crashes and anrs during 5 hours of special monkey test.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/182#issuecomment-24860765\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Andrew's right. Thx anyway @seva-ask \n. That's gonna the most awesome feature of RS 1.6, isn't it ?\n;) \n. That feature may be strongly related to getting RS working with a SyncAdapter. \nIssue https://github.com/octo-online/robospice/issues/179\n. Merged in commit 32b2d38e730fde22f616acc0b00fc447705995b3\nThanks for the fix.\n. Hi @DanielNovak , @seva-ask , \nfor the last days I have been pretty busy codin' a new library.\nI am sorry not to have replied earlier.\nI just spent some times inside your pull request @seva-ask  and I didn't agree with one aspect of the pull request : \nIn case of multiple aggregatable requests, mapPendingRequestToRequestListener is going to grow as every request from mapRequestToLaunchToRequestListener is going to be added directly. I don't like this approach as I would have preferred the mapPendingRequestToRequestListener to hold only requests that are really pending. \nI just found a new approach, pretty close to yours and added a few tests (4-5) to get sure that this bugs never happen again.\nI will submit it today so that you can peer review it.\nSt\u00e9phane\n. This really looks more like a Google Http Java Client question than a RS question. Did you try their forum ?\nDon't mention you use RS and ask them directly. I guess they will also need an excerpt from your XML.\n. Hi vselod,\nthank you for finding this bug. It's a nice one. :)\nI couldn't reproduce the bug, that's normally a \"won't fix\" show stopper for me, but an analysis of the code indicates this bug is possible. Which device do you use ?\nNevertheless, I disagree with your fix. It seems to me that you are absolutely right : the old thread should die but a new one appears and reset the isStopped flag to false, then preventing the old thread to die, and letting the new one live as well. But you fix is to suppose that the operation that takes time and will fail is sendRequestToService, the fail will be caught but on next iteration of the core loop, the flag will have been reset and the loop will continue.\nIt gives me the feeling that we will be using the failure of sendRequestToService for 2 different things : effectively catch a problem when sending a request to the service and to mark that a thread should have died properly. I understand that this fix might be the simplest effective way to achieve the desired behavior but I find it difficult to understand. Moreover it means that if sending a request fail in a running spiceManager then it will stop. This could be desirable but it's not part of actual spec and I don't see any reason to go this way.\nI would propose a different fix : both shouldStop methods set the interrupted flag of the actual running thread. This flag should be used inside the inner loop to state whether the actual thread should die or not. I think this is cleaner as it doesn't impact the handling of a failure of sendRequestToService, and this flag (interrupted) will be held by each thread, more than globally with the isStopped flag.\nI will submit the patch in a few minutes, that with code cleaning. I would be tremendously happy to add a test to prevent this bug from coming back in a future release but can't find any way to reproduce the bug inside a deterministic test. _Do you have any idea on that matter ? _\n. My mistake. I didn't know a few things about interrupt(). http://stackoverflow.com/a/6699006/693752\nYour solution is great and exactly what is needed. I added a minor overcheck with interrupted(), but this itself is not enough if our thread is in a blocking state.\nI could reproduce the bug, and I am actually polishing a test that should prevent regressions on that point.\nThanks for this patch Vsevolod !\nI only knew @rciovati  with this ability to find such precise multi-threaded, rarely-occurring bugs and patch 'em :)\n. I am redeploying snapshots on central and repo branch for you to test and accept both the fix and the new test.\n. Hi Vsevolod,\nI run my tests on genymotion, the blazing fast emulator from genymobile.\nLess often, I run them on devices.\nTo test on emulator, Google images, I leave this job to Travis. RS is under\nCI using a matrix build of 4 emulators using different versions of the SDK.\nAnd all tests pass. I noticed some instability yesterday and thought I had\ncorrected them on master with latest commits...\nAny patch to make tests more stables is welcome as well. RS now includes\naround 200 tests and they are a keystone of the quality of the project.\nS.\nLe 20 sept. 2013 20:01, \"Vsevolod Ivanov\" notifications@github.com a\n\u00e9crit :\n\nI was using Samsung GT-P6210.\nI had a little trouble with snapshots, maven didn't think that files had\nbeen changed.\nBut I took new snapshots from repository and tested them.\nAs I can see, everything is OK now.\nNew test is good.\nOne more trouble: have you tried to run tests on android emulator? On\ndevice all tests pass, but on emulator I have about 5 tests failing. When I\nincrease timeouts, many of them will pass, but not all. It will be good if\nyou try.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/189#issuecomment-24829155\n.\n. There is one. Inside the spring android module, based on simple XML\nserializer. But according to previous posts, you are looking for something\nbased on Jackson 2 XML parser. And this doesn't exist yet.\nSuch a contribution would be interesting.\nIt would not be that hard to code.\nLe 23 sept. 2013 15:20, \"sooraj-e\" notifications@github.com a \u00e9crit :\nis there any XML persist class for robospice?\nre-posting from Google group\nhttps://groups.google.com/forum/#!topic/robospice/ScAQnUBWuCY\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/190\n.\n. @sooraj-e\n\nRS is open source for you to play with. Try what you want or can and submit\nany pull request you want.\n2013/9/24 sooraj-e notifications@github.com\n\nIm using Simple XML via google http client like this for parsing html\nSerializer serializer = new Persister();\nreturn serializer.read(getResultType(), request.execute().getContent());\ncan i use the spring android persist-or for simple XML to achieve caching\nfor this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/190#issuecomment-24974921\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Could you make it ?\n. Hi Vselod, \nI really need a test to know when the bug is activated and solved. There is something that bugs me in your first commit : \nwe should not add, in mapPendingRequests, all the listeners received in the event). Actually, even the code or master, as well as yours, will add all listeners. But that is wrong. If we want those listeners to be removed when the fragment dies, then we should add only our own listeners, those who are related to the fragment, and not others.\nOtherwise, a fragment will die, and remove all listeners in all fragments.\nSo, I think it would be better to take all listeners from the map of requests to launch, as they belong to current spice manager, and put them inside the list of listener of the map of pending requests. And then we should do it as you did, by aggregating new and previous listeners.\nI think this implementation would be right, but I really need a test to validate it.\nAbout the second commit. I am not sure, I still have to think about it.\n. I think the second commit is right 4bf12d7.\nThe only problem could be to cancel a request AND setting listeners to it at the same time. But that would be hard to achieve with current API of SpiceManager. \nYour implementation is better, it will allow to notify all listeners that a request has been cancelled, even the previously registered ones.\nI will cherry pick this commit and merge it to master branch.\n. Hi Vselod,\nsorry to have taken so much time to answer. I just merge your pull request as the review is good for me. I trust you if you say that everything is much better and nothing broke.\nI will run the tests and commit to master, and deploy snapshots that you can try before I release. \nIdeally, I would recompile an app of mine to get sure that even complex app works fine, and then I would release.\nThank you very much for your last 2 contributions to 1.4.8.\nSt\u00e9phane\n. You got snapshots to test :)\nI must admit I really reviewed your changes quickly. Some seemed nice (in the spice manager), but I had no really in-depth look. But tests work :)\nCan you check the snapshots and confirm it works for you. I will try to review code better tomorrow and recompile my test app. And if everything OK, I could release tomorrow.\n. The travis job fail on request aggregation. Would you have time to check if it is related to latest commit ?\nI really don't have much time, sorry.\n. Pushing a release on central takes 2 hours, but I think that this delay is shortened for snapshots. Instant ?\nI am working on the tests too this morning. Please pull (and rebase) often when you start working, and submit any pull request in a new branch.\n. All test pass. I will compile today my complex app as I told before. \nI would like both of us to give a \"GO\" before releasing. I will follow up the issue here.\n. Take your time, I couldn't do as much time as I want on my side neither.\nI really to wait a few more days before releasing and getting something\nrock solid.\nS.\n2013/10/8 Vsevolod Ivanov notifications@github.com\n\nI'm sorry, but we have some troubles on server-side now.\nSo we can't check requests good enough, because server responses are too\nslow.\nFor now all works fine, but it would be good if you give me some more time\nfor testing.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/191#issuecomment-25858947\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi Vselod, \nthanks for your feedback. On my side I compile the app and tried it. All works well. --> I am releasing.\nThe artifacts of RS 1.4.8 should be available on maven central within 2 hours more or less.\nThanks for your very interesting contributions to RS on this version. I don't know if you are already in my circles on G+, that's where I usually announce the releases. If not, please add me to be notified of future releases.\n. What do you want to do ?\n. Hi Ilya,\nThat's a FAQ, commun pitfall. When you execute a request , you specify\nexactly what you want : the time acter which cache content is considered\nexpired.\nPeople often think it is the other way around : they think they specify the\nmax time after which the result of the current request will be unavailable.\nBut, again, you specify the time after which the content of a previous\nrequest will be considered valid or expired.\nYour problem is, thus, straightforward. Just pass the time you received\nfrom the previous request to a new request.\nS.\nLe 3 oct. 2013 11:49, \"Ilya Mizus\" notifications@github.com a \u00e9crit :\n\nI'm asking for a tip.\nI need a special caching mechanism for my project. When I request\nsomething from the server, it sends a response with a field in HTTP header\nwhich contains \"best before\" time. And I need to save the cached version of\ndata for that particular time, which I don't know at the moment when I make\nthe request.\nBut I need to specify cache duration when creating CachedSpiceRequest\nobject, not later. And I don't know how to correct that time when the\nresponse is received.\nThe question is: how can I change cacheDuration from loadDataFromNetwork()\nfunction, or if this is an ugly idea, what can I do else to achieve my goal\nusing RoboSpice?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/194\n.\n. @bigfatbrowncat I understand your point now. \n\nThis can't be achieved via RS directly. RS won't erase the cache when data is expired.\nBUT, you could save the lifetime of the data with the data itself (wrapper class or additional attribute) and then, before sending a request, you can check if the data you have is still valid or not. If not, clean the cache and send a new request. I think that this is even better than using a separate data warehouse in the shared preferences.\n@moritzpfeiffer Yes, there are some method to change the content of the cache directly via a SpiceManager. Most of those methods now have an async version with a listener as well, or sync with a future.\n@moritzpfeiffer There are several ways to handle a 304 with RS. First, you could use the method getDataFromCacheButRequestDataFromNetwork anyway (or something like this). You will get old data and the new request could just silently fail... Or, you can also handle the 304 in try/catch block inside the SpiceRequest, and in that case, return some value that the listener will handle as \"get data from cache\". \nI am actually thinking of injecting the spice service into requests so they would be able to use its cache manager directly for instance...\nAs RS is protocol agnostic, it really depends of the way you create your requests, and the lib you use and how they handle a 304. RS can't help more on HTTP errors.\n. Hi Bogdan,\nI don't have much time to dedicate to RS right now but I would like to help you, as moreover you are the only person reporting a bug on RS 1.4.7 for now. ;)\nIt looks like we have a dependency now on support. I don't remember that it had been added. I will further investigate this week. But meanwhile, can't you just exclude this dependency when you add RS to your classpath via gradle ?\n. Ok, I remember now. The problem comes from usage of LRUCache. This class has been added to Android SDK 12, and as RS is compatible from SDK 10+, we had to add this dependency.\nSo the solution is to add RS to your classpath in this way via gradle : \ngroovy\ncompile(\"com.octo.android.robospice:robospice:1.4.7\") {\n        exclude module: 'support-v4'\n    }\nThat should do it.\n. @jeromevdl , @rciovati \nMaybe a better solution for us (RS dev team) would be to import the code of LRUCache in RS directly and remove the dependency on support. \nThat would be a better shot to my mind, as this class as almost no dependency at all. It would make it easier to import RS. Moreover, we already did it for some stuff related to Base 64 (as far as I remember).\n. My pleasure @Bogdan ;)\nI still think that this all distribution of support library on local repos is a bad idea. I mean, the world was much simpler when we used a global repo..\nWould you mind to send me the exact line you put in your build.gradle file so that I can add it to the FAQ of RS please ?\n. In parallel, I have also tried to remove the dependency to support and put the lrucache inside RS itself. I had to hack a bit more, but everything seems fine. \nI am gonna deploy a snapshot of RS 1.4.8 on our snapshots repo. Would you mind to have a try with it and tell me if RS is as stable with this new code base ? It's gonna be there, let's say in 10 minutes.\n(repo url is in the wiki)\n. Snapshots are there. Feedback would be appreciated. Please also confirm you can remove the exclude from gradle statement.\n. Thank you very much Bogdan. We still have some test issues, but that should be minor. I will let you know when 1.4.8 is released. Meanwhile, if your app are in production, you can go on using 1.4.7 with the exclude gradle statement.\n. Do you use batches to insert your data in bulk ?\nLe 6 oct. 2013 18:35, \"Moritz Pfeiffer\" notifications@github.com a \u00e9crit :\n\nCan you give us a bit more information to go on?\nJuneLeGency notifications@github.com wrote:\n\nI dont know why it takes so long to cache my data to databse.\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/196#issuecomment-25771334\n.\n. This thread is closed as no follow up is provided by @JuneLeGency .\n. Do you use batch updates ?\nLe 23 oct. 2013 14:47, \"JuneLeGency\" notifications@github.com a \u00e9crit :\nsorry for forgetting check my email.\nI just folllow the sample \"robospice-sample-ormlite-content-provider\".\nMy model is\n->Unit\nMatchResult->Match->DotaPlayer->Ability\n                    ->BanPick\n100matches each match 10 player\nbut it seems just insert data one by one not as one commit.\nIt takes more than 2min to cache things.\nLog\n10-23 20:21:04.544: D//RequestRunner.java:274(12274): 20:21:04.556 Thread-509 It tooks 904 ms to process request CachedSpiceRequest [requestCacheKey=userprofilecach, cacheDuration=86400000, spiceRequest=studio.lc.dotaanalysis.dataservice.ISteamUser.FriendRequest_@42816280].\n10-23 20:21:05.445: D//SpiceManager.java:293(12274): 20:21:05.455 main SpiceManager stopping.\n10-23 20:21:05.445: V//SpiceManager.java:738(12274): 20:21:05.458 main Cleared listeners of all requests to launch\n10-23 20:21:05.445: V//SpiceManager.java:769(12274): 20:21:05.461 main Cleared listeners of all pending requests\n10-23 20:21:05.455: V//SpiceManager.java:1171(12274): 20:21:05.465 main Unbinding from service start.\n10-23 20:21:05.455: V//SpiceManager.java:1175(12274): 20:21:05.467 main Unbinding from service.\n10-23 20:21:05.465: D//SpiceManager.java:1177(12274): 20:21:05.473 main Unbound from service : SampleSpiceService\n10-23 20:21:05.465: D//SpiceManager.java:303(12274): 20:21:05.476 main SpiceManager stopped.\n10-23 20:21:05.475: D//SpiceManager.java:256(12274): 20:21:05.482 SpiceManagerThread 0 Interrupted while waiting for new request.\n103ms+5ms, total 83ms\n10-23 20:21:44.907: D/dalvikvm(12274): GC_CONCURRENT freed 5089K, 37% free 11807K/18499K, paused 13ms+6ms, total 92ms\n10-23 20:21:45.588: D/dalvikvm(12274): GC_CONCURRENT freed 5159K, 37% free 11757K/18499K, paused 14ms+7ms, total 88ms\n10-23 20:21:46.228: D/dalvikvm(12274): GC_CONCURRENT freed 4979K, 37% free 11784K/18499K, paused 13ms+4ms, total 90ms\n10-23 20:21:46.839: D/dalvikvm(12274): GC_CONCURRENT freed 5126K, 37% free 11811K/18499K, paused 13ms+16ms, total 96ms\n10-23 20:21:47.480: D/dalvikvm(12274): GC_CONCURRENT freed 5269K, 37% free 11767K/18499K, paused 14ms+5ms, total 94ms\n10-23 20:21:48.120: D/dalvikvm(12274): GC_CONCURRENT freed 4975K, 37% free 11794K/18499K, paused 14ms+5ms, total 86ms\n10-23 20:21:48.741: D/dalvikvm(12274): GC_CONCURRENT freed 5182K, 37% free 11830K/18499K, paused 4ms+6ms, total 85ms\n10-23 20:21:49.352: D/dalvikvm(12274): GC_CONCURRENT freed 5381K, 37% free 11779K/18499K, paused 3ms+5ms, total 84ms\n10-23 20:21:49.952: D/dalvikvm(12274): GC_CONCURRENT freed 5043K, 37% free 11811K/18499K, paused 13ms+15ms, total 103ms\n10-23 20:21:50.603: D/dalvikvm(12274): GC_CONCURRENT freed 5128K, 37% free 11824K/18499K, paused 14ms+6ms, total 79ms\n10-23 20:21:51.224: D/dalvikvm(12274): GC_CONCURRENT freed 5253K, 37% free 11785K/18499K, paused 13ms+8ms, total 97ms\n10-23 20:21:51.844: D/dalvikvm(12274): GC_CONCURRENT freed 5099K, 37% free 11815K/18499K, paused 13ms+4ms, total 81ms\n10-23 20:21:52.495: D/dalvikvm(12274): GC_CONCURRENT freed 5215K, 36% free 11842K/18499K, paused 14ms+16ms, total 93ms\n10-23 20:21:53.126: D/dalvikvm(12274): GC_CONCURRENT freed 5349K, 37% free 11793K/18499K, paused 5ms+17ms, total 85ms\n10-23 20:21:53.786: D/dalvikvm(12274): GC_CONCURRENT freed 5127K, 37% free 11823K/18499K, paused 13ms+4ms, total 97ms\n10-23 20:21:54.457: D/dalvikvm(12274): GC_CONCURRENT freed 5345K, 37% free 11771K/18499K, paused 13ms+16ms, total 100ms\n10-23 20:21:55.178: D/dalvikvm(12274): GC_CONCURRENT freed 5377K, 37% free 11804K/18499K, paused 4ms+7ms, total 101ms\n10-23 20:21:55.878: D/dalvikvm(12274): GC_CONCURRENT freed 5360K, 36% free 11853K/18499K, paused 4ms+4ms, total 96ms\n10-23 20:21:56.519: D/dalvikvm(12274): GC_CONCURRENT freed 5338K, 37% free 11780K/18499K, paused 14ms+6ms, total 85ms\n10-23 20:21:57.130: D/dalvikvm(12274): GC_CONCURRENT freed 5053K, 37% free 11821K/18499K, paused 13ms+5ms, total 79ms\n10-23 20:21:57.771: D/dalvikvm(12274): GC_CONCURRENT freed 5164K, 36% free 11848K/18499K, paused 14ms+5ms, total 83ms\n10-23 20:21:58.371: D/dalvikvm(12274): GC_CONCURRENT freed 5237K, 37% free 11801K/18499K, paused 13ms+5ms, total 75ms\n10-23 20:21:59.032: D/dalvikvm(12274): GC_CONCURRENT freed 5266K, 36% free 11843K/18499K, paused 3ms+6ms, total 83ms\n10-23 20:21:59.713: D/dalvikvm(12274): GC_CONCURRENT freed 5211K, 36% free 11865K/18499K, paused 13ms+4ms, total 88ms\n10-23 20:22:00.463: D/dalvikvm(12274): GC_CONCURRENT freed 5401K, 37% free 11808K/18499K, paused 4ms+17ms, total 87ms\n10-23 20:22:01.124: D/dalvikvm(12274): GC_CONCURRENT freed 5200K, 36% free 11843K/18499K, paused 14ms+7ms, total 85ms\n10-23 20:22:01.805: D/dalvikvm(12274): GC_CONCURRENT freed 5515K, 37% free 11790K/18499K, paused 6ms+5ms, total 96ms\n10-23 20:22:02.486: D/dalvikvm(12274): GC_CONCURRENT freed 5480K, 37% free 11826K/18499K, paused 7ms+9ms, total 116ms\n10-23 20:22:03.146: D/dalvikvm(12274): GC_CONCURRENT freed 5165K, 36% free 11893K/18499K, paused 15ms+16ms, total 97ms\n10-23 20:22:03.777: D/dalvikvm(12274): GC_CONCURRENT freed 5368K, 37% free 11810K/18499K, paused 13ms+6ms, total 82ms\n10-23 20:22:04.418: D/dalvikvm(12274): GC_CONCURRENT freed 5101K, 37% free 11835K/18499K, paused 13ms+5ms, total 86ms\n10-23 20:22:05.088: D/dalvikvm(12274): GC_CONCURRENT freed 5475K, 36% free 11874K/18499K, paused 3ms+15ms, total 101ms\n10-23 20:22:05.759: D/dalvikvm(12274): GC_CONCURRENT freed 5271K, 37% free 11835K/18499K, paused 14ms+15ms, total 104ms\n10-23 20:22:06.410: D/dalvikvm(12274): GC_CONCURRENT freed 5256K, 36% free 11851K/18499K, paused 13ms+5ms, total 82ms\n10-23 20:22:07.070: D/dalvikvm(12274): GC_CONCURRENT freed 5402K, 36% free 11890K/18499K, paused 5ms+4ms, total 91ms\n10-23 20:22:07.751: D/dalvikvm(12274): GC_CONCURRENT freed 5220K, 36% free 11941K/18499K, paused 13ms+6ms, total 101ms\n10-23 20:22:08.412: D/dalvikvm(12274): GC_CONCURRENT freed 5466K, 36% free 11887K/18499K, paused 13ms+7ms, total 98ms\n10-23 20:22:09.083: D/dalvikvm(12274): GC_CONCURRENT freed 5436K, 36% free 11858K/18499K, paused 14ms+5ms, total 94ms\n10-23 20:22:09.733: D/dalvikvm(12274): GC_CONCURRENT freed 5438K, 36% free 11872K/18499K, paused 5ms+5ms, total 90ms\n10-23 20:22:10.404: D/dalvikvm(12274): GC_CONCURRENT freed 5281K, 36% free 11890K/18499K, paused 15ms+16ms, total 101ms\n10-23 20:22:11.065: D/dalvikvm(12274): GC_CONCURRENT freed 5402K, 37% free 11833K/18499K, paused 3ms+5ms, total 80ms\n10-23 20:22:11.715: D/dalvikvm(12274): GC_CONCURRENT freed 5129K, 36% free 11865K/18499K, paused 13ms+4ms, total 80ms\n10-23 20:22:12.366: D/dalvikvm(12274): GC_CONCURRENT freed 5230K, 36% free 11906K/18499K, paused 14ms+7ms, total 87ms\n10-23 20:22:13.037: D/dalvikvm(12274): GC_CONCURRENT freed 5477K, 36% free 11848K/18499K, paused 15ms+5ms, total 86ms\n10-23 20:22:13.687: D/dalvikvm(12274): GC_CONCURRENT freed 5167K, 36% free 11890K/18499K, paused 15ms+4ms, total 85ms\n10-23 20:22:14.398: D/dalvikvm(12274): GC_CONCURRENT freed 5633K, 37% free 11820K/18499K, paused 14ms+16ms, total 114ms\n10-23 20:22:15.049: D/dalvikvm(12274): GC_CONCURRENT freed 5163K, 36% free 11855K/18499K, paused 13ms+5ms, total 81ms\n10-23 20:22:15.720: D/dalvikvm(12274): GC_CONCURRENT freed 5198K, 36% free 11974K/18499K, paused 14ms+4ms, total 93ms\n10-23 20:22:16.390: D/dalvikvm(12274): GC_CONCURRENT freed 5746K, 37% free 11831K/18499K, paused 4ms+9ms, total 77ms\n10-23 20:22:17.061: D/dalvikvm(12274): GC_CONCURRENT freed 5141K, 36% free 11882K/18499K, paused 13ms+18ms, total 104ms\n10-23 20:22:17.752: D/dalvikvm(12274): GC_CONCURRENT freed 5270K, 36% free 11921K/18499K, paused 13ms+15ms, total 92ms\n10-23 20:22:18.443: D/dalvikvm(12274): GC_CONCURRENT freed 5642K, 36% free 11870K/18499K, paused 4ms+5ms, total 89ms\n10-23 20:22:19.093: D/dalvikvm(12274): GC_CONCURRENT freed 5265K, 36% free 11895K/18499K, paused 15ms+5ms, total 84ms\n10-23 20:22:19.764: D/dalvikvm(12274): GC_CONCURRENT freed 5259K, 36% free 11939K/18499K, paused 15ms+5ms, total 84ms\n10-23 20:22:20.465: D/dalvikvm(12274): GC_CONCURRENT freed 5359K, 36% free 11894K/18499K, paused 14ms+15ms, total 103ms\n10-23 20:22:21.095: D/dalvikvm(12274): GC_CONCURRENT freed 5349K, 36% free 11914K/18499K, paused 14ms+5ms, total 83ms\n10-23 20:22:21.796: D/dalvikvm(12274): GC_CONCURRENT freed 5514K, 36% free 11860K/18499K, paused 13ms+9ms, total 98ms\n10-23 20:22:22.497: D/dalvikvm(12274): GC_CONCURRENT freed 5430K, 36% free 11905K/18499K, paused 16ms+16ms, total 118ms\n10-23 20:22:23.198: D/dalvikvm(12274): GC_CONCURRENT freed 5320K, 36% free 11984K/18499K, paused 14ms+5ms, total 89ms\n10-23 20:22:23.898: D/dalvikvm(12274): GC_CONCURRENT freed 5671K, 36% free 11876K/18499K, paused 13ms+5ms, total 90ms\n10-23 20:22:24.579: D/dalvikvm(12274): GC_CONCURRENT freed 5270K, 36% free 11917K/18499K, paused 13ms+15ms, total 94ms\n10-23 20:22:25.270: D/dalvikvm(12274): GC_CONCURRENT freed 5398K, 36% free 11962K/18499K, paused 13ms+15ms, total 99ms\n10-23 20:22:26.011: D/dalvikvm(12274): GC_CONCURRENT freed 5682K, 36% free 11906K/18499K, paused 4ms+5ms, total 86ms\n10-23 20:22:26.711: D/dalvikvm(12274): GC_CONCURRENT freed 5467K, 36% free 11990K/18499K, paused 5ms+7ms, total 112ms\n10-23 20:22:27.402: D/dalvikvm(12274): GC_CONCURRENT freed 5738K, 36% free 11866K/18499K, paused 3ms+4ms, total 80ms\n10-23 20:22:28.113: D/dalvikvm(12274): GC_CONCURRENT freed 5542K, 36% free 11920K/18499K, paused 3ms+5ms, total 95ms\n10-23 20:22:28.774: D/dalvikvm(12274): GC_CONCURRENT freed 5391K, 36% free 11998K/18499K, paused 14ms+8ms, total 95ms\n10-23 20:22:29.494: D/dalvikvm(12274): GC_CONCURRENT freed 5630K, 36% free 11915K/18499K, paused 14ms+6ms, total 87ms\n10-23 20:22:30.145: D/dalvikvm(12274): GC_CONCURRENT freed 5358K, 36% free 11964K/18499K, paused 14ms+16ms, total 106ms\n10-23 20:22:30.886: D/dalvikvm(12274): GC_CONCURRENT freed 5367K, 36% free 12019K/18499K, paused 13ms+5ms, total 96ms\n10-23 20:22:31.597: D/dalvikvm(12274): GC_CONCURRENT freed 5796K, 36% free 11940K/18499K, paused 13ms+16ms, total 106ms\n10-23 20:22:32.287: D/dalvikvm(12274): GC_CONCURRENT freed 5527K, 36% free 11979K/18499K, paused 3ms+6ms, total 74ms\n10-23 20:22:33.058: D/dalvikvm(12274): GC_CONCURRENT freed 5722K, 36% free 11908K/18499K, paused 13ms+5ms, total 89ms\n10-23 20:22:33.729: D/dalvikvm(12274): GC_CONCURRENT freed 5361K, 36% free 11953K/18499K, paused 13ms+15ms, total 93ms\n10-23 20:22:34.430: D/dalvikvm(12274): GC_CONCURRENT freed 5365K, 36% free 12005K/18499K, paused 14ms+17ms, total 99ms\n10-23 20:22:35.230: D/dalvikvm(12274): GC_CONCURRENT freed 5877K, 36% free 11943K/18567K, paused 3ms+6ms, total 90ms\n10-23 20:22:35.931: D/dalvikvm(12274): GC_CONCURRENT freed 5634K, 36% free 11981K/18567K, paused 6ms+9ms, total 97ms\n10-23 20:22:36.652: D/dalvikvm(12274): GC_CONCURRENT freed 5691K, 36% free 11924K/18567K, paused 3ms+6ms, total 86ms\n10-23 20:22:37.323: D/dalvikvm(12274): GC_CONCURRENT freed 5245K, 36% free 11968K/18567K, paused 13ms+16ms, total 100ms\n10-23 20:22:38.003: D/dalvikvm(12274): GC_CONCURRENT freed 5399K, 35% free 12115K/18567K, paused 13ms+6ms, total 110ms\n10-23 20:22:38.744: D/dalvikvm(12274): GC_CONCURRENT freed 6295K, 38% free 11940K/19015K, paused 3ms+5ms, total 95ms\n10-23 20:22:39.475: D/dalvikvm(12274): GC_CONCURRENT freed 5532K, 37% free 11996K/19015K, paused 4ms+6ms, total 84ms\n10-23 20:22:40.326: D/dalvikvm(12274): GC_CONCURRENT freed 5368K, 37% free 12061K/19015K, paused 15ms+5ms, total 90ms\n10-23 20:22:41.097: D/dalvikvm(12274): GC_CONCURRENT freed 5828K, 38% free 11977K/19015K, paused 13ms+15ms, total 109ms\n10-23 20:22:41.838: D/dalvikvm(12274): GC_CONCURRENT freed 5406K, 37% free 12141K/19015K, paused 14ms+4ms, total 101ms\n10-23 20:22:42.718: D/dalvikvm(12274): GC_CONCURRENT freed 6577K, 39% free 11966K/19335K, paused 13ms+19ms, total 152ms\n10-23 20:22:43.449: D/dalvikvm(12274): GC_CONCURRENT freed 5642K, 38% free 12005K/19335K, paused 14ms+6ms, total 92ms\n10-23 20:22:44.170: D/dalvikvm(12274): GC_CONCURRENT freed 5499K, 38% free 12060K/19335K, paused 13ms+5ms, total 86ms\n10-23 20:22:44.921: D/dalvikvm(12274): GC_CONCURRENT freed 5983K, 38% free 11997K/19335K, paused 13ms+17ms, total 113ms\n10-23 20:22:45.672: D/dalvikvm(12274): GC_CONCURRENT freed 5566K, 38% free 12119K/19335K, paused 13ms+14ms, total 107ms\n10-23 20:22:46.412: D/dalvikvm(12274): GC_CONCURRENT freed 5966K, 39% free 11979K/19335K, paused 13ms+6ms, total 85ms\n10-23 20:22:47.113: D/dalvikvm(12274): GC_CONCURRENT freed 5474K, 38% free 12033K/19335K, paused 14ms+4ms, total 88ms\n10-23 20:22:47.844: D/dalvikvm(12274): GC_CONCURRENT freed 5630K, 38% free 12079K/19335K, paused 14ms+5ms, total 85ms\n10-23 20:22:48.595: D/dalvikvm(12274): GC_CONCURRENT freed 5876K, 38% free 12031K/19335K, paused 13ms+9ms, total 105ms\n10-23 20:22:49.376: D/dalvikvm(12274): GC_CONCURRENT freed 5633K, 38% free 12104K/19335K, paused 13ms+7ms, total 97ms\n10-23 20:22:50.156: D/dalvikvm(12274): GC_CONCURRENT freed 6104K, 39% free 11985K/19335K, paused 3ms+9ms, total 106ms\n10-23 20:22:50.897: D/dalvikvm(12274): GC_CONCURRENT freed 5577K, 38% free 12063K/19335K, paused 4ms+17ms, total 103ms\n10-23 20:22:51.688: D/dalvikvm(12274): GC_CONCURRENT freed 5797K, 38% free 12114K/19335K, paused 14ms+17ms, total 109ms\n10-23 20:22:52.439: D/dalvikvm(12274): GC_CONCURRENT freed 6013K, 38% free 12048K/19335K, paused 13ms+15ms, total 108ms\n10-23 20:22:53.170: D/dalvikvm(12274): GC_CONCURRENT freed 5632K, 38% free 12103K/19335K, paused 14ms+6ms, total 93ms\n10-23 20:22:53.910: D/dalvikvm(12274): GC_CONCURRENT freed 5964K, 38% free 12016K/19335K, paused 13ms+4ms, total 90ms\n10-23 20:22:54.631: D/dalvikvm(12274): GC_CONCURRENT freed 5767K, 38% free 12062K/19335K, paused 13ms+5ms, total 104ms\n10-23 20:22:55.432: D/dalvikvm(12274): GC_CONCURRENT freed 5763K, 38% free 12172K/19335K, paused 13ms+5ms, total 95ms\n10-23 20:22:56.233: D/dalvikvm(12274): GC_CONCURRENT freed 6157K, 38% free 12056K/19335K, paused 4ms+16ms, total 103ms\n10-23 20:22:57.064: D/dalvikvm(12274): GC_CONCURRENT freed 5667K, 38% free 12150K/19335K, paused 13ms+7ms, total 93ms\n10-23 20:22:57.815: D/dalvikvm(12274): GC_CONCURRENT freed 6165K, 38% free 12010K/19335K, paused 13ms+5ms, total 108ms\n10-23 20:22:58.565: D/dalvikvm(12274): GC_CONCURRENT freed 5440K, 38% free 12097K/19335K, paused 13ms+17ms, total 109ms\n10-23 20:22:59.386: D/dalvikvm(12274): GC_CONCURRENT freed 5764K, 38% free 12165K/19335K, paused 13ms+6ms, total 100ms\n10-23 20:23:00.157: D/dalvikvm(12274): GC_CONCURRENT freed 6076K, 38% free 12055K/19335K, paused 13ms+15ms, total 103ms\n10-23 20:23:00.898: D/dalvikvm(12274): GC_CONCURRENT freed 5445K, 38% free 12147K/19335K, paused 14ms+16ms, total 108ms\n10-23 20:23:01.689: D/dalvikvm(12274): GC_CONCURRENT freed 6100K, 38% free 12051K/19335K, paused 14ms+5ms, total 88ms\n10-23 20:23:02.430: D/dalvikvm(12274): GC_CONCURRENT freed 5671K, 38% free 12109K/19335K, paused 13ms+5ms, total 94ms\n10-23 20:23:03.220: D/dalvikvm(12274): GC_CONCURRENT freed 5790K, 37% free 12192K/19335K, paused 15ms+5ms, total 92ms\n10-23 20:23:04.001: D/dalvikvm(12274): GC_CONCURRENT freed 6232K, 38% free 12126K/19335K, paused 13ms+5ms, total 102ms\n10-23 20:23:04.822: D/dalvikvm(12274): GC_CONCURRENT freed 5882K, 37% free 12182K/19335K, paused 13ms+17ms, total 105ms\n10-23 20:23:05.623: D/dalvikvm(12274): GC_CONCURRENT freed 6096K, 38% free 12071K/19335K, paused 14ms+16ms, total 104ms\n10-23 20:23:06.404: D/dalvikvm(12274): GC_CONCURRENT freed 5694K, 38% free 12159K/19335K, paused 15ms+5ms, total 94ms\n10-23 20:23:07.195: D/dalvikvm(12274): GC_CONCURRENT freed 6054K, 37% free 12205K/19335K, paused 15ms+7ms, total 102ms\n10-23 20:23:08.045: D/dalvikvm(12274): GC_CONCURRENT freed 6292K, 38% free 12134K/19335K, paused 4ms+5ms, total 82ms\n10-23 20:23:08.796: D/dalvikvm(12274): GC_CONCURRENT freed 5903K, 37% free 12227K/19335K, paused 14ms+5ms, total 93ms\n10-23 20:23:09.617: D/dalvikvm(12274): GC_CONCURRENT freed 6188K, 38% free 12121K/19335K, paused 15ms+18ms, total 122ms\n10-23 20:23:10.448: D/dalvikvm(12274): GC_CONCURRENT freed 5796K, 37% free 12184K/19335K, paused 13ms+17ms, total 108ms\n10-23 20:23:11.199: D/dalvikvm(12274): GC_CONCURRENT freed 6163K, 38% free 12085K/19335K, paused 13ms+5ms, total 91ms\n10-23 20:23:11.960: D/dalvikvm(12274): GC_CONCURRENT freed 5768K, 38% free 12151K/19335K, paused 14ms+5ms, total 99ms\n10-23 20:23:12.761: D/dalvikvm(12274): GC_CONCURRENT freed 6010K, 37% free 12239K/19335K, paused 4ms+6ms, total 94ms\n10-23 20:23:13.601: D/dalvikvm(12274): GC_CONCURRENT freed 6643K, 38% free 12152K/19591K, paused 3ms+5ms, total 101ms\n10-23 20:23:14.442: D/dalvikvm(12274): GC_CONCURRENT freed 5825K, 38% free 12208K/19591K, paused 13ms+8ms, total 92ms\n10-23 20:23:15.333: D/dalvikvm(12274): GC_CONCURRENT freed 6360K, 38% free 12174K/19591K, paused 13ms+7ms, total 117ms\n10-23 20:23:16.274: D/dalvikvm(12274): GC_CONCURRENT freed 5934K, 38% free 12215K/19591K, paused 15ms+5ms, total 101ms\n10-23 20:23:17.115: D/dalvikvm(12274): GC_CONCURRENT freed 5997K, 38% free 12285K/19591K, paused 14ms+6ms, total 96ms\n10-23 20:23:18.006: D/dalvikvm(12274): GC_CONCURRENT freed 6410K, 38% free 12256K/19591K, paused 14ms+19ms, total 140ms\n10-23 20:23:18.887: D/dalvikvm(12274): GC_CONCURRENT freed 6185K, 38% free 12293K/19591K, paused 5ms+5ms, total 84ms\n10-23 20:23:19.718: D/dalvikvm(12274): GC_CONCURRENT freed 6440K, 38% free 12190K/19591K, paused 4ms+5ms, total 82ms\n10-23 20:23:20.549: D/dalvikvm(12274): GC_CONCURRENT freed 6102K, 38% free 12259K/19591K, paused 14ms+16ms, total 111ms\n10-23 20:23:21.390: D/dalvikvm(12274): GC_CONCURRENT freed 6336K, 38% free 12163K/19591K, paused 14ms+7ms, total 95ms\n10-23 20:23:22.201: D/dalvikvm(12274): GC_CONCURRENT freed 5898K, 38% free 12235K/19591K, paused 14ms+5ms, total 92ms\n10-23 20:23:23.031: D/dalvikvm(12274): GC_CONCURRENT freed 6190K, 37% free 12367K/19591K, paused 4ms+5ms, total 87ms\n10-23 20:23:23.862: D/dalvikvm(12274): GC_CONCURRENT freed 6521K, 38% free 12231K/19591K, paused 13ms+5ms, total 99ms\n10-23 20:23:24.673: D/dalvikvm(12274): GC_CONCURRENT freed 6203K, 38% free 12299K/19591K, paused 14ms+5ms, total 104ms\n10-23 20:23:25.614: D/dalvikvm(12274): GC_CONCURRENT freed 6600K, 38% free 12246K/19591K, paused 3ms+5ms, total 95ms\n10-23 20:23:26.495: D/dalvikvm(12274): GC_CONCURRENT freed 6170K, 38% free 12309K/19591K, paused 14ms+16ms, total 108ms\n10-23 20:23:27.386: D/dalvikvm(12274): GC_CONCURRENT freed 6421K, 38% free 12205K/19591K, paused 14ms+15ms, total 110ms\n10-23 20:23:28.207: D/dalvikvm(12274): GC_CONCURRENT freed 6111K, 38% free 12290K/19591K, paused 14ms+5ms, total 108ms\n10-23 20:23:29.118: D/dalvikvm(12274): GC_CONCURRENT freed 6334K, 37% free 12378K/19591K, paused 14ms+7ms, total 114ms\n10-23 20:23:29.979: D/dalvikvm(12274): GC_CONCURRENT freed 6387K, 38% free 12279K/19591K, paused 13ms+16ms, total 111ms\n10-23 20:23:30.910: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 37% free 12411K/19591K, paused 13ms+7ms, total 102ms\n10-23 20:23:31.871: D/dalvikvm(12274): GC_CONCURRENT freed 6440K, 38% free 12271K/19591K, paused 13ms+4ms, total 95ms\n10-23 20:23:32.692: D/dalvikvm(12274): GC_CONCURRENT freed 6315K, 38% free 12338K/19591K, paused 13ms+6ms, total 97ms\n10-23 20:23:33.563: D/dalvikvm(12274): GC_CONCURRENT freed 6544K, 38% free 12249K/19591K, paused 15ms+5ms, total 101ms\n10-23 20:23:34.424: D/dalvikvm(12274): GC_CONCURRENT freed 6211K, 37% free 12351K/19591K, paused 13ms+7ms, total 95ms\n10-23 20:23:35.285: D/dalvikvm(12274): GC_CONCURRENT freed 6130K, 37% free 12437K/19591K, paused 13ms+17ms, total 118ms\n10-23 20:23:36.125: D/dalvikvm(12274): GC_CONCURRENT freed 6570K, 38% free 12334K/19655K, paused 5ms+16ms, total 97ms\n10-23 20:23:36.996: D/dalvikvm(12274): GC_CONCURRENT freed 6324K, 37% free 12423K/19655K, paused 13ms+17ms, total 112ms\n10-23 20:23:37.867: D/dalvikvm(12274): GC_CONCURRENT freed 6757K, 38% free 12363K/19847K, paused 4ms+9ms, total 107ms\n10-23 20:23:38.748: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 38% free 12421K/19847K, paused 15ms+7ms, total 103ms\n10-23 20:23:39.639: D/dalvikvm(12274): GC_CONCURRENT freed 6540K, 38% free 12319K/19847K, paused 13ms+17ms, total 118ms\n10-23 20:23:40.530: D/dalvikvm(12274): GC_CONCURRENT freed 6411K, 38% free 12460K/19847K, paused 15ms+5ms, total 105ms\n10-23 20:23:41.421: D/dalvikvm(12274): GC_CONCURRENT freed 6579K, 38% free 12353K/19847K, paused 13ms+5ms, total 106ms\n10-23 20:23:42.272: D/dalvikvm(12274): GC_CONCURRENT freed 6264K, 38% free 12404K/19847K, paused 13ms+16ms, total 115ms\n10-23 20:23:43.173: D/dalvikvm(12274): GC_CONCURRENT freed 6365K, 38% free 12495K/19847K, paused 13ms+5ms, total 104ms\n10-23 20:23:44.054: D/dalvikvm(12274): GC_CONCURRENT freed 6551K, 38% free 12433K/19847K, paused 13ms+15ms, total 117ms\n10-23 20:23:44.965: D/dalvikvm(12274): GC_CONCURRENT freed 6612K, 38% free 12492K/19847K, paused 13ms+18ms, total 131ms\n10-23 20:23:45.876: D/dalvikvm(12274): GC_CONCURRENT freed 6496K, 38% free 12381K/19847K, paused 13ms+7ms, total 102ms\n10-23 20:23:46.747: D/dalvikvm(12274): GC_CONCURRENT freed 6190K, 38% free 12495K/19847K, paused 13ms+16ms, total 137ms\n10-23 20:23:47.598: D/dalvikvm(12274): GC_CONCURRENT freed 6523K, 38% free 12388K/19847K, paused 13ms+6ms, total 118ms\n10-23 20:23:48.479: D/dalvikvm(12274): GC_CONCURRENT freed 6423K, 37% free 12565K/19847K, paused 13ms+5ms, total 104ms\n10-23 20:23:49.400: D/dalvikvm(12274): GC_CONCURRENT freed 6663K, 38% free 12351K/19847K, paused 13ms+17ms, total 116ms\n10-23 20:23:50.301: D/dalvikvm(12274): GC_CONCURRENT freed 6265K, 38% free 12499K/19847K, paused 13ms+6ms, total 106ms\n10-23 20:23:51.182: D/dalvikvm(12274): GC_CONCURRENT freed 6257K, 37% free 12566K/19847K, paused 13ms+5ms, total 103ms\n10-23 20:23:52.072: D/dalvikvm(12274): GC_CONCURRENT freed 6441K, 38% free 12428K/19847K, paused 13ms+7ms, total 100ms\n10-23 20:23:52.963: D/dalvikvm(12274): GC_CONCURRENT freed 6318K, 37% free 12542K/19847K, paused 14ms+16ms, total 115ms\n10-23 20:23:53.864: D/dalvikvm(12274): GC_CONCURRENT freed 6624K, 38% free 12429K/19847K, paused 3ms+17ms, total 103ms\n10-23 20:23:54.745: D/dalvikvm(12274): GC_CONCURRENT freed 6324K, 37% free 12534K/19847K, paused 13ms+6ms, total 104ms\n10-23 20:23:55.656: D/dalvikvm(12274): GC_CONCURRENT freed 6574K, 38% free 12415K/19847K, paused 3ms+9ms, total 101ms\n10-23 20:23:56.497: D/dalvikvm(12274): GC_CONCURRENT freed 6212K, 37% free 12527K/19847K, paused 16ms+7ms, total 107ms\n10-23 20:23:57.388: D/dalvikvm(12274): GC_CONCURRENT freed 6618K, 37% free 12625K/20039K, paused 4ms+7ms, total 107ms\n10-23 20:23:58.319: D/dalvikvm(12274): GC_CONCURRENT freed 6575K, 38% free 12506K/20039K, paused 13ms+17ms, total 113ms\n10-23 20:23:59.230: D/dalvikvm(12274): GC_CONCURRENT freed 6670K, 38% free 12617K/20039K, paused 14ms+9ms, total 128ms\n10-23 20:24:00.191: D/dalvikvm(12274): GC_CONCURRENT freed 6754K, 38% free 12508K/20039K, paused 14ms+15ms, total 154ms\n10-23 20:24:01.072: D/dalvikvm(12274): GC_CONCURRENT freed 6462K, 38% free 12614K/20039K, paused 5ms+7ms, total 100ms\n10-23 20:24:02.053: D/dalvikvm(12274): GC_CONCURRENT freed 6858K, 38% free 12506K/20167K, paused 13ms+5ms, total 123ms\n10-23 20:24:02.934: D/dalvikvm(12274): GC_CONCURRENT freed 6390K, 38% free 12610K/20167K, paused 13ms+6ms, total 102ms\n10-23 20:24:03.865: D/dalvikvm(12274): GC_CONCURRENT freed 6790K, 39% free 12490K/20167K, paused 6ms+5ms, total 118ms\n10-23 20:24:04.786: D/dalvikvm(12274): GC_CONCURRENT freed 6372K, 38% free 12604K/20167K, paused 13ms+5ms, total 107ms\n10-23 20:24:05.707: D/dalvikvm(12274): GC_CONCURRENT freed 6535K, 39% free 12485K/20167K, paused 14ms+5ms, total 105ms\n10-23 20:24:06.578: D/dalvikvm(12274): GC_CONCURRENT freed 6087K, 38% free 12591K/20167K, paused 14ms+16ms, total 112ms\n10-23 20:24:07.459: D/dalvikvm(12274): GC_CONCURRENT freed 6291K, 38% free 12690K/20167K, paused 13ms+5ms, total 102ms\n10-23 20:24:08.380: D/dalvikvm(12274): GC_CONCURRENT freed 6642K, 38% free 12573K/20167K, paused 13ms+5ms, total 113ms\n10-23 20:24:09.291: D/dalvikvm(12274): GC_CONCURRENT freed 6308K, 37% free 12735K/20167K, paused 13ms+5ms, total 104ms\n10-23 20:24:10.182: D/dalvikvm(12274): GC_CONCURRENT freed 6717K, 38% free 12594K/20167K, paused 5ms+5ms, total 101ms\n10-23 20:24:11.173: D/dalvikvm(12274): GC_CONCURRENT freed 6213K, 38% free 12690K/20167K, paused 14ms+6ms, total 123ms\n10-23 20:24:12.084: D/dalvikvm(12274): GC_CONCURRENT freed 6550K, 38% free 12562K/20167K, paused 13ms+6ms, total 121ms\n10-23 20:24:12.965: D/dalvikvm(12274): GC_CONCURRENT freed 6393K, 38% free 12677K/20167K, paused 15ms+7ms, total 105ms\n10-23 20:24:13.886: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 37% free 12774K/20167K, paused 14ms+7ms, total 109ms\n10-23 20:24:14.797: D/dalvikvm(12274): GC_CONCURRENT freed 6634K, 38% free 12649K/20167K, paused 13ms+5ms, total 105ms\n10-23 20:24:15.698: D/dalvikvm(12274): GC_CONCURRENT freed 6116K, 37% free 12762K/20167K, paused 14ms+7ms, total 105ms\n10-23 20:24:16.529: D/dalvikvm(12274): GC_CONCURRENT freed 6560K, 38% free 12638K/20167K, paused 13ms+5ms, total 98ms\n10-23 20:24:17.430: D/dalvikvm(12274): GC_CONCURRENT freed 6369K, 37% free 12763K/20167K, paused 15ms+16ms, total 124ms\n10-23 20:24:18.341: D/dalvikvm(12274): GC_CONCURRENT freed 6614K, 38% free 12615K/20167K, paused 13ms+5ms, total 102ms\n10-23 20:24:19.251: D/dalvikvm(12274): GC_CONCURRENT freed 6552K, 37% free 12739K/20167K, paused 4ms+6ms, total 103ms\n10-23 20:24:20.132: D/dalvikvm(12274): GC_CONCURRENT freed 6632K, 38% free 12634K/20167K, paused 13ms+5ms, total 106ms\n10-23 20:24:21.013: D/dalvikvm(12274): GC_CONCURRENT freed 6401K, 37% free 12771K/20167K, paused 13ms+6ms, total 104ms\n10-23 20:24:21.874: D/dalvikvm(12274): GC_CONCURRENT freed 6334K, 37% free 12845K/20167K, paused 4ms+15ms, total 110ms\n10-23 20:24:22.795: D/dalvikvm(12274): GC_CONCURRENT freed 6641K, 37% free 12733K/20167K, paused 13ms+16ms, total 130ms\n10-23 20:24:23.726: D/dalvikvm(12274): GC_CONCURRENT freed 6618K, 37% free 12831K/20231K, paused 4ms+19ms, total 120ms\n10-23 20:24:24.627: D/dalvikvm(12274): GC_CONCURRENT freed 6713K, 38% free 12709K/20231K, paused 14ms+5ms, total 110ms\n10-23 20:24:25.618: D/dalvikvm(12274): GC_CONCURRENT freed 6649K, 37% free 12842K/20231K, paused 7ms+6ms, total 127ms\n10-23 20:24:26.569: D/dalvikvm(12274): GC_CONCURRENT freed 6773K, 38% free 12715K/20231K, paused 5ms+16ms, total 122ms\n10-23 20:24:27.490: D/dalvikvm(12274): GC_CONCURRENT freed 6604K, 37% free 12824K/20231K, paused 5ms+10ms, total 107ms\n10-23 20:24:28.451: D/dalvikvm(12274): GC_CONCURRENT freed 6787K, 38% free 12707K/20295K, paused 6ms+19ms, total 136ms\n10-23 20:24:29.362: D/dalvikvm(12274): GC_CONCURRENT freed 6387K, 37% free 12818K/20295K, paused 13ms+16ms, total 118ms\n10-23 20:24:30.283: D/dalvikvm(12274): GC_CONCURRENT freed 6327K, 37% free 12944K/20295K, paused 13ms+5ms, total 111ms\n10-23 20:24:31.204: D/dalvikvm(12274): GC_CONCURRENT freed 6670K, 37% free 12814K/20295K, paused 4ms+7ms, total 98ms\n10-23 20:24:32.125: D/dalvikvm(12274): GC_CONCURRENT freed 6099K, 37% free 12936K/20295K, paused 13ms+16ms, total 112ms\n10-23 20:24:33.066: D/dalvikvm(12274): GC_CONCURRENT freed 6633K, 37% free 12803K/20295K, paused 13ms+10ms, total 123ms\n10-23 20:24:33.997: D/dalvikvm(12274): GC_CONCURRENT freed 6237K, 37% free 12960K/20295K, paused 4ms+20ms, total 113ms\n10-23 20:24:34.948: D/dalvikvm(12274): GC_CONCURRENT freed 6588K, 37% free 12847K/20295K, paused 14ms+18ms, total 147ms\n10-23 20:24:36.119: D/dalvikvm(12274): GC_CONCURRENT freed 6396K, 36% free 12996K/20295K, paused 14ms+5ms, total 123ms\n10-23 20:24:37.010: D/dalvikvm(12274): GC_CONCURRENT freed 6313K, 36% free 13027K/20295K, paused 13ms+5ms, total 112ms\n10-23 20:24:37.911: D/dalvikvm(12274): GC_CONCURRENT freed 6576K, 37% free 12880K/20295K, paused 13ms+17ms, total 122ms\n10-23 20:24:38.993: D/dalvikvm(12274): GC_CONCURRENT freed 6328K, 36% free 13014K/20295K, paused 14ms+5ms, total 113ms\n10-23 20:24:39.924: D/dalvikvm(12274): GC_CONCURRENT freed 6621K, 37% free 12878K/20295K, paused 15ms+16ms, total 120ms\n10-23 20:24:40.865: D/dalvikvm(12274): GC_CONCURRENT freed 6354K, 36% free 13028K/20295K, paused 13ms+5ms, total 122ms\n10-23 20:24:41.846: D/dalvikvm(12274): GC_CONCURRENT freed 6852K, 37% free 13074K/20487K, paused 5ms+8ms, total 133ms\n10-23 20:24:42.837: D/dalvikvm(12274): GC_CONCURRENT freed 6639K, 37% free 13017K/20487K, paused 4ms+15ms, total 114ms\n10-23 20:24:43.778: D/dalvikvm(12274): GC_CONCURRENT freed 6706K, 38% free 12892K/20487K, paused 14ms+22ms, total 131ms\n10-23 20:24:44.679: D/dalvikvm(12274): GC_CONCURRENT freed 6198K, 37% free 12989K/20487K, paused 13ms+15ms, total 121ms\n10-23 20:24:45.640: D/dalvikvm(12274): GC_CONCURRENT freed 6296K, 37% free 13109K/20487K, paused 14ms+16ms, total 118ms\n10-23 20:24:46.631: D/dalvikvm(12274): GC_CONCURRENT freed 6850K, 38% free 12971K/20615K, paused 4ms+16ms, total 126ms\n10-23 20:24:47.642: D/dalvikvm(12274): GC_CONCURRENT freed 6623K, 37% free 13106K/20615K, paused 7ms+10ms, total 120ms\n10-23 20:24:48.603: D/dalvikvm(12274): GC_CONCURRENT freed 6875K, 37% free 13003K/20615K, paused 5ms+7ms, total 117ms\n10-23 20:24:49.554: D/dalvikvm(12274): GC_CONCURRENT freed 6491K, 37% free 13103K/20615K, paused 14ms+5ms, total 116ms\n10-23 20:24:50.505: D/dalvikvm(12274): GC_CONCURRENT freed 6653K, 38% free 12965K/20615K, paused 13ms+6ms, total 113ms\n10-23 20:24:51.476: D/dalvikvm(12274): GC_CONCURRENT freed 6647K, 37% free 13124K/20615K, paused 14ms+6ms, total 139ms\n10-23 20:24:52.427: D//RequestProgressManager.java:75(12274): 20:24:52.441 Thread-516 Sending progress COMPLETE\n10-23 20:24:52.427: D//SpiceServiceListenerNotifier.java:149(12274): 20:24:52.442 Thread-516 Message queue is Handler (android.os.Handler) {42803a18}\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:131(12274): 20:24:52.444 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42ba41a0\n10-23 20:24:52.437: D//SpiceServiceListenerNotifier.java:149(12274): 20:24:52.446 Thread-516 Message queue is Handler (android.os.Handler) {42803a18}\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:166(12274): 20:24:52.447 main Notifying 1 listeners of request success\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:172(12274): 20:24:52.451 main Notifying\n10-23 20:24:52.447: V//RequestProgressManager.java:153(12274): 20:24:52.453 Thread-516 Removing CachedSpiceRequest [requestCacheKey=matchcache, cacheDuration=0, spiceRequest=studio.lc.dotaanalysis.dataservice.BaseDataAdapter$1@42b71730]  size is 1\n10-23 20:24:52.447: D//RequestProgressManager.java:84(12274): 20:24:52.455 Thread-516 Sending all request complete.\n10-23 20:24:52.447: V//SpiceService.java:390(12274): 20:24:52.456 Thread-516 Pending requests : 0\n10-23 20:24:53.338: I/Choreographer(12274): Skipped 31 frames!  The application may be doing too much work on its main thread.\n\u0097\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/196#issuecomment-26901494\n.\n. What's your request ? If it returns a list, then you should consider\ndefining a custom persister that would use a batch to put all list entries\ninside the DB.\n\nAnd sorry, I don't think you can find an example for that. That would not\nbe very difficult though. You should :\n- first, get used to batch works with ORM Lite.\n- second, see how you can register a custom persister for a given class\n- combine the above codes and register a custom provider for a given class\n  that uses batches to insert data in DB.\nSt\u00e9phane\n2013/10/24 JuneLeGency notifications@github.com\n\nNo,I may show you some of my code.\nI think it's normal code.\nService\nJacksonObjectPersisterFactory jacksonObjectPersisterFactory = new JacksonObjectPersisterFactory( application );\n        List< Class< ? >> classCollection = new ArrayList< Class< ? >>();\n```\n    // add persisted classes to class collection\n    classCollection.add( Hero.class );\n    classCollection.add( Heros.class );\n    classCollection.add( MatchResult.class );\n    classCollection.add( Match.class );\n    classCollection.add( DotaPlayer.class );\n    classCollection.add( BanPick.class );\n    classCollection.add( Ability.class );\n    classCollection.add( Unit.class );\n// init\nRoboSpiceDatabaseHelper databaseHelper = new RoboSpiceDatabaseHelper( application, \"dotasteam\", 1 );\nInDatabaseObjectPersisterFactory inDatabaseObjectPersisterFactory = new InDatabaseObjectPersisterFactory( application, databaseHelper, classCollection );\ncacheManager.addPersister( inDatabaseObjectPersisterFactory );\ncacheManager.addPersister( jacksonObjectPersisterFactory );\nreturn cacheManager;\n\n```\nCallMethod\ngetSpiceManager().execute(request, JSON_CACHE_KEY,\n                DurationInMillis.ALWAYS_RETURNED, requestListener);\nThe Request and requestListener is quite simple.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/196#issuecomment-26973999\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi @fernandocamargoti , can you get sure that the listener is invoked inside the old activity ? Just log their memory adress to check it out. \nThat would be really strange as it is one of the main principle of RS. \nAlso, you seem to use fragments, did you read this : http://www.androiddesignpatterns.com/2013/08/fragment-transaction-commit-state-loss.html ?\n. It looks like you found the cause on the problem is the other issue you opened. Can we close this one ?\n. Coule you close the issue then ? We use issues as a kanban/backlog and maintaining it clean is our duty ;)\n. The error message has been replaced by : \nThe class  is not handled by any registered ObjectPersister. Please add a Persister for this class inside the CacheManager of your SpiceService.\nI close the bug now. I didn't you could see the close button (at this end of this issue).\n. I don't think you are using the latest RS version. Please try it and report the stack trace here. You can reopen this issue if it persists.\n. Hi @Mathieu-Castets, \nI can't reproduce the bug easily as I got no device with this specific version of android. But I can add your fix for this version. \nI am currently deploying a snapshot for you to try. \nWith this fix, is the notification still invisible ? It should be on ICS 4.0.4. But, as @DanielNovak told it, all of this relies on a hack. \n. What about visibility of notification ?\nI would like to release this early.\n. Thx @danielNovak for this explanation. That's exactly the point.\nI agree with you @softwaremaverick, ideally I would prefer every user of RS\nyo know that they are using a service and provide a valid notification for\nthis.\nWhat bugs me though is that 1) services are an advanced topic for many\ndevelopers and I fear that having to deal with a service correctly would\nrefrain the adoption of RS, and 2) there is no clean way to inject stuff\ninside a service. Overriding the create notification hook is a workaround\nbut not that clean as it obliges to define a service and prevents usage of\nprebuilt services.\nIf there was an elegant way to inject the notification factory or the\ntarget of the pending intent into the service that would be awesome. I\nwould love to get something that respects the open closed principle and\nbeing simple to use.\nMeanwhile I can't see any better solution that trying to hide the\nnotification even if it's an evil hack.\nS.\nLe 22 oct. 2013 09:31, \"DanielNovak\" notifications@github.com a \u00e9crit :\n\nIn my tests, the icon is shown on 4.0.4 after you leave the application\nand robospice service is still running, and it disappears after all\nrequests are finished. No more crashes are happening after the fix. So this\nis a correct behaviour.\n@Mathieu-Castets https://github.com/Mathieu-Castets the icon can't be\nhidden on 4.0.4 and 4.3+ versions. But it will eventually disappear after\nthe robospice service finishes it's jobs. Robospice is a foreground service\n- that's why you are seeing the icon. You could make it a \"background\"\n  service (override createDefaultNotification and return null), but there\n  would be a bigger chance that the service will get killed by Android.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26782454\n.\n. That could be @Girogos, I think that this is possible too. Would you mind\nto test the new snapshots and tell us if you find any bug. There are quite\nhard to reproduce as they depend on specific android versions and devices.\n\nAnd please report all stack traces, with version number of Android SDK on\nthe device.\nMaybe something is still missing when creating notification without the\nbuilder as you said and we should be able to reproduce what the builder\ndoes manually. (BTW, the builder has been removed as it created a\ndependency on support and that was quite annoying for many users).\nS.\n2013/10/22 Giorgos Kylafas notifications@github.com\n\n@all https://github.com/all, I too used 1.4.8 in my app and saw many\ncrashes in Android 4.0.x.\nHowever, I once received a crash report for 4.1.1 as well, so I am not so\nsure this is ICS only, though it could be that the specific device was\nbuggy.\nAt the moment, I downgraded my app to 1.4.7 and have seen no such crashes\nanymore. From what I see, 1.4.7 used a Notification.Builder to create the\nnotification, while 1.4.8 creates one directly. Could it be that the\nBuilder does necessary background work which is skipped when creating a\nNotification with \"new\"?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26784593\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. I got no idea how to remove you, you should check the issue page yourself\nand try to remove your subscription to that topic.\n2013/10/22 hoangtuanhai notifications@github.com\n\nplease remove me from group !!!!\nOn Tue, Oct 22, 2013 at 3:28 PM, DanielNovak notifications@github.comwrote:\n\n@stephanenicolas https://github.com/stephanenicolas\nI think you could call \"setLatestEventInfo\" in all Android versions just\nto be sure. It's really device specific and it happened only on Samsung\nNote 4.0.4 and only very rarely during our testing. It could maybe\nhappen\non different versions too.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/200#issuecomment-26785323>\n.\n\n\nTuan Hai HOANG\nVMODEV - CEO & Founder\nPhone: +84 906 685 966\nE-mail: hai@vmodev.com\nwww.vmodev.com\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26785358\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. @DanielNovak, I don't understand you point. It looks like the figure you\ngive us clearly show that this bug is device / brand / overlay specific.\nI will add the setLatestInfo call to all versions as soon as I get sure\nthat the call that I introduced in the snapshot is not enough for you. But\nreally, the most specific the better. If you could isolate the problem,\nthat would be great.\nSt\u00e9phane\n2013/10/22 St\u00e9phane Nicolas snicolas@octo.com\n\nI got no idea how to remove you, you should check the issue page yourself\nand try to remove your subscription to that topic.\n2013/10/22 hoangtuanhai notifications@github.com\n\nplease remove me from group !!!!\nOn Tue, Oct 22, 2013 at 3:28 PM, DanielNovak notifications@github.comwrote:\n\n@stephanenicolas https://github.com/stephanenicolas\nI think you could call \"setLatestEventInfo\" in all Android versions\njust\nto be sure. It's really device specific and it happened only on Samsung\nNote 4.0.4 and only very rarely during our testing. It could maybe\nhappen\non different versions too.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/200#issuecomment-26785323>\n.\n\n\nTuan Hai HOANG\nVMODEV - CEO & Founder\nPhone: +84 906 685 966\nE-mail: hai@vmodev.com\nwww.vmodev.com\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26785358\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Here they are :\nhttps://oss.sonatype.org/content/repositories/snapshots/com/octo/android/robospice/\nBut if we follow what you say, we would just need the code (setLatest...)\n14 & 15, isn'it ?\nSt\u00e9phane\n2013/10/22 Giorgos Kylafas notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas, OK I think I\nunderstand what is happening. According to\nhttp://developer.android.com/guide/topics/ui/notifiers/notifications.html#Required,\na Notification must contain at least a small icon, a title and a detail\ntext.\nIn 1.4.7, only the icon was set explicitly and the Notification.Builder\ntook care of the rest.\nIn 1.4.8, again only the icon is set explicitly and by not using a\nBuilder, the others were null. This is what the exception is complaining\nabout, the contentView (which presumably needs a title and a detail text)\nis null.\nSo, I see two solutions:\n- Use the ctor Notification(Context context, int icon, CharSequence\n  tickerText, long when, CharSequence contentTitle, CharSequence contentText,\n  Intent contentIntent). It is public, however it is hidden (you won't find\n  it in the docs).\n- Use setLatestEventInfo(), i.e. I agree with @DanielNovakhttps://github.com/DanielNovakthat it should\n  always be called. (This is also what the above ctor uses. And\n  setLatestEventInfo() in platform/frameworks/base master, uses a Builder\n  internally. See\n  https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/core/java/android/app/Notification.javafor details)\nFor ther record, I tested 1.4.8 using simulators with APIs 14, 15, 16 and\n17.\n- In 14 & 15, I had no trouble triggering the crash: just issue a\n  request and press 'Home' to put the app into background.\n- In 16 & 17, no crash was experienced.\nOn the other hand, I could not find any post-1.4.8 snapshots to test them.\nCould you point me to them?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26792799\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. @Giorgos and all, I will release tonight or tomorrow a bug fix release from\nthe snapshots.\nPlease let me know if we need to extend the bug fix to other versions.\nS.\nLe 22 oct. 2013 16:24, \"Giorgos Kylafas\" notifications@github.com a \u00e9crit\n:\n\n@stephanenicolas https://github.com/stephanenicolas, I repeated the\nsame tests I did for 1.4.8 with 1.4.9-SNAPSHOT.\nNo crashes, and the notification is only briefly shown in 4.0.x (with\nempty title and detail text) for as long as the request is executed.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26807210\n.\n. Releasing, RS should hit central within 2 hours.\n. Can you try putting this request in onStart. Whether it works or not this\nbehavior is not normal, could you write a little sample and put it in a\ngist ?\n\n2013/10/18 deisold notifications@github.com\n\nHi,\nI'm using Robospice version 1.4.8.\nFrom Activity.onResume() I invoke:\nfinal Future dataInCacheFuture = isDataInCache(request.getResultType(),\nrequestCacheKey, DurationInMillis.ONE_WEEK);\nfinal Boolean dataInCache = dataInCacheFuture.get();\non second line I get an ANR: Reason: Executing service\ncom.xxx.xxx/.common.SpiceService\nwith output:\n10-18 16:27:47.685 745-824//SpiceManager.java:1195\ufe55 16:27:47.690\nSpiceManagerThread 0 Waiting for service to be bound.\n10-18 16:27:47.690 745-825//SpiceManager.java:1195\ufe55 16:27:47.691\nThread-276 Waiting for service to be bound.\nThe SpiceManager is started in Activity.onStart():\nand the service was bound successfully just before my call:\n10-18 16:27:47.665 745-824//SpiceManager.java:1148\ufe55 16:27:47.670\nSpiceManagerThread 0 Binding to service succeeded.\nDo you have any idea?\nThanks, Dirk\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/201\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. And please, send the full stack trace, it's really hard o figure out what causes the ANR.\nAnd, do you use the Future . get() method in the UI Thread ? If so, you shouldn't, this will block the thread executing it.\n. Within RS, cache is always considered with respect to expiry of content.\nUsing this parameter you can ask to RS \"is something more recent than 5 mn\nin the cache ?\" If you just want to know if something is in the cache,\nwhenever it has been added, just use isDataInCache(\nDurationInMillis.ALWAYS_RETURNED).\nThe API is very consistent with the execute method that way.\nS.\n. @vitaminwater \nIn RS, many calls are indeed executed by a service, including this one. \nThis means that the calling context will not receive the response immediatly, but after some time. So, for all those methods, there are 2 options available in RS : \n- use methods that return result synchronously\n- use methods that return result asynchronously\nif you the method returns a Future object, then it is synchronous : when you call future.get, this call will block until data is acquired. Such a call should be performed in an asynctask. \nAsync methods allow you to invoke the methods in the UI Thread, and you will be notified when the result is available in a listener, that will be called back later, in the UI Thread as well.\n. The official RS way is to have one listener per request. But it's a common\nuse case to share listeners.\nIn that case, you should at least add different instances of the same\nlistener class and pass each instance a parameter to distinguish it from\nthe other ones.\nspiceManager.execute( request0, new MyListener(0) );\nspiceManager.execute( request1, new MyListener(1) );\n2013/10/19 rey5137 notifications@github.com\n\nonRequestFailed() and onRequestSuccess() of interface RequestListener\nshould have SpiceRequest parameter, so we can handle accordingly base on\nrequest.\nCurrently I have to write a wrapper class hold all request and response\ndata, that way I can get back the request data on onRequestSuccess().\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/202\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Does that work ? If so, please close the issue.\n. There could be some major issues with this. For instance if devs override\nthe equals method of their request, I am really not sure aggregation would\nget side affected...\nIt may look trivial but I am still not sure about this. But that's a good\nidea I need to dig in.\nS.\nLe 22 oct. 2013 11:06, \"rey5137\" notifications@github.com a \u00e9crit :\n\nif the activity made request lost when screen orientation changed, and\nlater I call getFromCacheAndLoadFromNetworkIfExpired() on new activity, how\ndo I pass the same parameter to listener as lost one. With this way, I\nthink I have to save the request data by myself and pass it to new\nactivity, that is more complex than just make listener return the request\n(like Android listener return the source view trigger listener).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/202#issuecomment-26787413\n.\n. Hi rey,\n\nI don't think it is such a bad practice but you are right, it is more\noptimal to share a common listener.\nThe issue is now a proper issue in our backlog. It has to be estimated and added to a release milestone.\nSt\u00e9phane\n2013/10/23 rey5137 notifications@github.com\n\nYes, It may look trivial, but it can help us saving time to write code and\nmemory for request data. Imagining if View.OnClickListener() doesn't return\na View parameter , you have to pass a listener instances for each view (a\nbad practice) rather than pass to single instance and using view.getId()\nfor further handling.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/202#issuecomment-26876171\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. That issue would require too deep a change in RS api. If more devs upvote/reopen it, we could reconsider this.\n. Hi llya,\nhow do you start and stop your service ? Are you sure it is related to using a cachemanager ? Which version of RS do you use. Brief, we need more details.\n. Hi @bigfatbrowncat , this will take some time. Next week I should find some time to dig into this issue. I will first setup a test and if it fails, I will try to resolve it and submit a new snapshot that you can try.\nThis issue is close to another that I am aware of since a few days. I will detail it here as a reminder.\nFire and forget requests don't work.\nIf you execute a request and finish the activity right after execute, the request is not launched.\n. Hi @bigfatbrowncat and @rpk98c , not sure if this all still applies. Sorry for the delay, I took some time off.\nCan one of you provide a working (or better, a bugging) example somewhere on git ?\nAlso, @rpk98c , getAllCacheKeys will block, and should not be called from the UI Thread.\nMeanwhile I close that thread.\n. Hi Daniel, it is not possible to check network state during call to execute as requests are processed async. Network state  could change between execute and actual request processing.\nNevertheless it is really strange that it takes 10 secs. It should take < 100 ms to actually process the request.\nDo you have any idea of what is causing such a delay ? \n. Please don't send pull request for the repo branch. We use our own release system. Thx nevertheless.\n. Hi @fernandocamargoti ,\nwe really need a more simple use case or test to reproduce the bug. It's quite hard to deal with that bug with so little information. If you had a sample demonstrating the problem, or even better a test, that would be awesome. Otherwise, we can't real address a problem we can't reproduce.\nSt\u00e9phane\n. After having a new look at the crash. It looks like the problem can come from the FragmentPagerAdapter's life cycle. I am aware of some strange lifecycles for fragments managed by this adapter. Which version of support do you use ?\nCan you reproduce that bug with RS newest version ? \nCan you reproduce that bug with support newest version ?\nIf so, can you try to check wether the activity is still alive or not inside your listener ?\n. Hi Fernando,\nI am not that sure : it is possible that fragments life cycle are managed\nby the adapter. I think that is the case as the stack trace mentions a\ncommit after state loss invocation. This means fragments are not really in\nsync with their activity, they have a slight delay when attached and\nremoved. And this can occur after activity being destroyed.\nMy problem is that I would like to be sure that all calls are synchronous\nin the bug you mention. If not then the listener could be fired at the\nright time but trigger some action that is postponed and, when executed,\ncrashes as the activity is dead meanwhile.\nI got the feeling that something may be missing in my understanding of the\nfragment life cycle, especially with respect to the commit after state loss\nmethod.\nDo you use latest version of the support lib ?\nS.\nLe 31 oct. 2013 15:05, \"Fernando Camargo\" notifications@github.com a\n\u00e9crit :\n\n@stephanenicolas https://github.com/stephanenicolas, I can't really\nreproduce the bug. I unfortunatly have only some user logs of the error.\nI think it's not about the FragmentPagerAdapter, because it just creates\nthe pages of my ViewPager. The request is handled by the Activity and after\nit's done, the Activity updates the list and notifies the\nFragmentPagerAdapter.\nI'm logging the lifecycle of the Activity and I can see that the error\nhappens after the onDestroy has been called.\nFor now, I've created a workaround that saves a boolean indicating that\nthe Activity has been destroyed. If this boolean is true, I doesn't execute\nthe onSuccess. To do so, I had to wrap my listeners and I created a class\nthat wraps every call to RoboSpice. I just published this version of the\napp and I'll see the results soon. If no more users have this error, the RS\nwas really calling the listener in the wrong state.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/207#issuecomment-27488008\n.\n. Do you know of\n\nhttp://www.androiddesignpatterns.com/2013/08/fragment-transaction-commit-state-loss.html?m=1\nLe 29 oct. 2013 12:36, \"Fernando Camargo\" notifications@github.com a\n\u00e9crit :\n\nSince the last release of RoboSpice, I'm seeing reports of this error:\nhttp://crashes.to/s/918b0d1ad07\nFatal Exception java.lang.IllegalStateException\nActivity has been destroyed\nI'm using RoboSpice 1.5.0 and using a Handler to send the onRequestSuccess\nto the main thread, so that I can update the screen safely. But some users\nare having this kind of exception where the listener is called after the\nActivity has been destroyed.\nI think these exceptions weren't happening before the latest release of\nRoboSpice, but I'm not totally sure.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/207\n.\n. Did you also try this : http://stackoverflow.com/a/15656428/693752 ?\n. Hi Fernando,\n\nLooking at alex Lockwood article more in depth could give a clue on what's\nhappening.\nI think that you are experiencing this bug as the activity passed through\nonSaveInstanceState but not onStop yet.\nThus, it would throw an exception in this very critical phase of activity\nlife cycle. I don't think there is any way to work around this bug\ndirectly. The only solution is to avoid committing any fragment transaction\ninside an async callback as explained in Alex's article...\nS.\nLe 1 nov. 2013 17:25, \"Fernando Camargo\" notifications@github.com a \u00e9crit\n:\n\nHello @stephanenicolas https://github.com/stephanenicolas,\nThanks for your attention.\nI'm using the version 18 of the support library. I understand your point\nthat it could be calling at the right time and it would be executing\nsomething later. But looking at the stacktrace, I can see that the\nexception occurs in the same stacktrace and thread of the listener:\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction\nandroid.support.v4.app.BackStackRecord.commitInternal\nandroid.support.v4.app.BackStackRecord.commitAllowingStateLoss\nandroid.support.v4.app.FragmentPagerAdapter.finishUpdate\nandroid.support.v4.view.ViewPager.dataSetChanged\nandroid.support.v4.view.ViewPager$PagerObserver.onChanged\nandroid.database.DataSetObservable.notifyChanged\nandroid.support.v4.view.PagerAdapter.notifyDataSetChanged\ncom.soongz.ui.adapter.BuscavelPagerAdapter.notifyDataSetChanged\ncom.soongz.ui.TrendsActivity$TrendsRequestListener.onRequestSuccess\ncom.soongz.ui.TrendsActivity$TrendsRequestListener.onRequestSuccess\nSince the UI Thread is occupied running my onRequestSuccess(), it's not\npossible for the Activity to be destroyed at the same time. So, looking at\nthis stacktrace, when the onRequestSuccess() was called, the Activity was\nalready destroyed.\nRemember that I have a listener that wraps this listener, passing the job\nof updating the screen to the UI Thread. Earlier, there wasn't that\nwrapper. I was wrongly updating the screen in the background thread. But,\nthe error was happening, too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/207#issuecomment-27578304\n.\n. The thread is considered close as inactive for 2 months. Feel free to reopen if further support is needed.\n. What is returning null exactly ? You mean the parameter of onRequestSuccess is null ?\nCan you distinguish the listeners used in onActivityCreated and in onCreate to be more precise about what's really happening ?\nIs the listener called twice ? \nIs there any pending request when you rotate the device ?\n. Bug is closed to clean the kanban. Sorry to say so but we don't have a full working example to reproduce the bug. I would be pleased to investigate the bug further with more details, a git sample would be amazing.\n. Thread is considered closed. Thx to @moritzpfeiffer and @rciovati for user support.\n. You can also use inheritance to make a spice manager accessible in all your\nactivities. If you don't use it, it's quite light weight.\n\nThe problem with an application based spicemanager is that application\ndon't have an end on Android. Or, more precisely, you can't get notified of\ntheir end. So, as you said, there is no real way to know the context is\ngoing to die and stop the spice service. You won't be able to stop the\nspice service explicitly.\nNevertheless, If the application gets killed, it will also kill its binding\nand you can get notified of that. if the binding context dies, it should\nstop the service due to some safe guard implemented in RS. So, that should\nwork, check your logs and see if the service is destroyed properly.\nAlso, I must add that what is really beneath your question is \"how to\naccess something common in all activities ? \". For this, you should have a\nlook at Dependency Injection Frameworks on Android : namely either\nRoboGuice or Dagger. Dagger is much faster but RoboGuice is much easier to\nuse. Anyhow, it looks like it's a good time for you to have a look at these.\nSt\u00e9phane\n2013/11/6 rey5137 notifications@github.com\n\nI usually using one MainActivity with many Fragment, so you can create a\nSpiceManager in MainActivity and share it with all Fragment.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/211#issuecomment-27840923\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. If you start the same service twice, only one instance will be started. I\ndon't think there is much performance difference in either approaches.\n2013/11/6 Mathieu Castets notifications@github.com\n\n@stephanenicolas https://github.com/stephanenicolas For performance\nsake, is it ok to start and stop a SpiceManager in almost every fragments?\nOr would you recommend to go @rey5137 https://github.com/rey5137's way?\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/211#issuecomment-27856300\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. I don't use static keyword generally speaking. It makes code hard to test\nand breaks OO design.\nNo, just provide each activity a spiceManager and manage the life cycle in\nthe super class. That's it.\n2013/11/6 Mathieu Castets notifications@github.com\n\nSo, if I understand, using inheritance, I'd better add the static keyword\nto declare the spiceManager? static final SpiceManager spiceManager = new\nSpiceManager(SpiceService.class)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/211#issuecomment-27861055\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. @novemberox , yes RS is definitely a good choice for the use case you mention in the end. Although I must warn you that the ormlite module is a bit difficult to handle and as it remained orphan for a long time now, you will be more on your own than with any other module.\nI definitely recommend you to use RS from within an context component like an Activity or a Fragment (or a service) more than the application. I don't think it's really a good idea to want to de-couple things as much as you want to. I mean, yes it would be great, but life cycle is really a big part of Android and you can't really circumvent it. We spent a lot of time tackling that whole issue in a correct way in RS and that's why the lib is so useful on Android. But I would be happy to hear about working alternatives.\nI close the thread now as I think it was all a \"talk/chat/discussion\" rather than an issue per say. And after a few weeks off, I need to clean the backlog/issue board.\n. http://stackoverflow.com/q/8968611/693752\nLook at the server side, it is cutting your connection abruptly. You have\nto find out why.  If you follow our samples, there is no reason RS is the\nproblem.\nSt\u00e9phane\n2013/11/8 Philipe Steiff notifications@github.com\n\nGuys,\nI dont know what to do anymore :(\nIm receiving this message every time..\nAn exception occured during request network execution :stream closed\nI tried making with GSON, GsonFactory etc ...\nMy response:\n{ \"access_token\": \"87sha782h\" }\nMy classes:\nExecute\nexecute(new IWSessionRequest(), \"json\", DurationInMillis.ONE_MINUTE,  new IWSessionRequestListener());\nIWSessionResponse.java\npublic class IWSessionResponse {\n```\n@Key\nprivate String access_token;\npublic IWSessionResponse(final String access_token) {\n    this.access_token = access_token;\n}\npublic final String getAccessToken() {\n    return access_token;\n}}\n```\nIWSessionRequest.java\npublic class IWSessionRequest extends\n GoogleHttpClientSpiceRequest {\npublic IWSessionRequestis(final Context context, final String resource, final                                    HttpContent content) {\n  super(IWSessionResponse.class);\nfinal String theBaseUrl = context.getString(R.string.base_url);//  final String basePath = context.getString(R.string.base_path);\n  final String basePath = \"\";\nbaseUrl = \"http://\"  + theBaseUrl;\n    this.resource = resource;\n    gson = new Gson();}\n@Overridepublic IWSessionResponse loadDataFromNetwork() throws IOException {\nLog.d(this.getClass().getName(), \"Call web service \" + getFullUrl());\n// final HttpRequest request = getHttpRequestFactory().buildGetRequest(new  GenericUrl(baseUrl + \"/\" + resource));\nfinal HttpRequest request = getHttpRequestFactory().buildGetRequest(new GenericUrl(baseUrl));\n request.setParser(new GsonFactory().createJsonObjectParser());\n request.setSuppressUserAgentSuffix(true);\nfinal HttpResponse response = request.execute();\n// return gson.fromJson(response.parseAsString(), IWSessionResponse.class);return response.parseAs(getResultType());\n }}\nIWSessionRequestListener.java\npublic class IWSessionRequestListener implements RequestListener {\n```\n@Override\npublic void onRequestFailure(final SpiceException spiceException) {\n    Log.d(\"IW\", \"every time drops here :(\");\n}\n@Override\npublic void onRequestSuccess(final IWSessionResponse iwSessionResponse) {\n    Log.d(\"IW\", \"Result: \" + iwSessionResponse);\n}\npublic static RequestListener newIWSessionRequestListener() {\n    return new IWSessionRequestListener();\n}\n```\n}\nFull error log:\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517): 18:29:59.537 pool-2-thread-1 An exception occured during request network execution :stream closed\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517): java.io.IOException: stream closed\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at libcore.net.http.AbstractHttpInputStream.checkNotClosed(AbstractHttpInputStream.java:68)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at libcore.net.http.FixedLengthInputStream.read(FixedLengthInputStream.java:41)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.io.InputStreamReader.read(InputStreamReader.java:244)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.gson.stream.JsonReader.fillBuffer(JsonReader.java:825)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.gson.stream.JsonReader.nextNonWhitespace(JsonReader.java:884)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.gson.stream.JsonReader.consumeNonExecutePrefix(JsonReader.java:405)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.gson.stream.JsonReader.peek(JsonReader.java:364)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.json.gson.GsonParser.nextToken(GsonParser.java:165)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.json.JsonParser.startParsing(JsonParser.java:194)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.json.JsonParser.parse(JsonParser.java:288)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.json.JsonObjectParser.parseAndClose(JsonObjectParser.java:76)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.json.JsonObjectParser.parseAndClose(JsonObjectParser.java:71)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.google.api.client.http.HttpResponse.parseAs(HttpResponse.java:495)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.navent.realestate.network.request.IWSessionRequestis.loadDataFromNetwork(IWSessionRequestis.java:73)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.navent.realestate.network.request.IWSessionRequestis.loadDataFromNetwork(IWSessionRequestis.java:28)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.octo.android.robospice.request.CachedSpiceRequest.loadDataFromNetwork(CachedSpiceRequest.java:27)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.octo.android.robospice.request.RequestProcessor.processRequest(RequestProcessor.java:230)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at com.octo.android.robospice.request.RequestProcessor$2.run(RequestProcessor.java:154)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:390)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.util.concurrent.FutureTask.run(FutureTask.java:234)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n11-08 18:29:59.526: E//RequestProcessor.java:234(15517):    at java.lang.Thread.run(Thread.java:841)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/212\n.\n. For sure, in that case you just hit the server but don't care about the reply. Again, error is on server side, or maybe you had a mistake in parsing.\n. Thx for the update. Sorry for the delay.\n\nS.\n2013/11/14 Philipe Steiff notifications@github.com\n\nOk @stephanenicolas https://github.com/stephanenicolas, im rebuild a\npiece of code and works fine! :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/212#issuecomment-28478576\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi vitaminwater,\nthe orm lite module is really more an experiment than a mature module.\nThere is no real maintainer for this module. I use it myself these days but\nI have to code quite a lot and realize that the module is far from mature.\nSo, the module is still in beta, mostly as there is no maintainer. Sorry to\nsay that but you are on your own with the orm lite module.\nSt\u00e9phane\n2013/11/11 vitaminwater notifications@github.com\n\nHi,\nI've noticed something strange in InDatabaseObjectPersister, in the\nsaveDataToCacheAndReturnData, we have:\n1. databaseHelper.createOrUpdateInDatabase(data, getHandledClass());\n2. saveAllForeignObjectsToCache(data);\nThe thing is that saveAllForeignObjectsToCache does the\ncreateOrUpdateInDatabase, but removes the child collection first (to avoid\ncascade), is that normal ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/213\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Thx @vitaminwater . Btw, we are looking for maintainers and enhancers for the orm lite module (who few seem to master..) ;)\n. I am not sure I can help but let's try.\nUse gist for this : https://gist.github.com/\n2014/1/4 vitaminwater notifications@github.com\n\nHi stephane,\nI've got a piece of code that saves a model tree, that I use in my app,\nI'd be glad to show it to you.\nI kinda new to github so I don't really know how to do that.\nThe big problem that happens, is when handling collection relationships,\nthe model in the Collection needs a reference to its \"parent\" model; when\ntraversing the tree, this parent reference must not be traversed, as it\nwould lead to an infinite loop. The (ugly) thing I do is make its name\nstart with \"parent\", the best (in my opinion) would be to create an\nannotation or add a boolean to the existing ormlite annotation (which is\nnot really feasible).\nAre you interested ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/213#issuecomment-31575462\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Hi vitamin water,\nreally that's tough ! I remember that this code was quite hard to setup in\nour module and we were 2 coders with that problem in mind for 1 full day.\nI don't think I can really help. You seem to have avoided the loop you were\ntalking about. But, maybe better than checking the name, it looks more like\na cycle detection problem in a graph. You could maybe simply use an\nIdentityHashSet to keep track of all previously saved/traversed objects and\navoir to re-save them. That could be more elegant that checking strings,\nand could even be generalized.\nIf you find a nice solution, I would be glad to add it to next release.\nSt\u00e9phane\n2014/1/4 vitaminwater notifications@github.com\n\nhttps://gist.github.com/vitaminwater/dd43eb2164b0d679f112\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/213#issuecomment-31578265\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. And really go for identityhashset, you don't want to depend on equals and\nhashcode here.\nS.\n2014/1/4 vitaminwater notifications@github.com\n\nYeah, the Object store to avoid doing loops seems to be the best possible\nsolution without adding a new annotation that would be like a bad addon\nover ormlite's existing annotation.\nIt's just that it's would make the whole thing stateful (but is that\nreally a problem?...) . anyway there doesn't seem to be a better solution\nyet.\nI'll give it a try.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/213#issuecomment-31578491\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Do you wanna release Riccardo ? Join me off record to get all keys...\nS.\nLe 12 nov. 2013 17:45, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\nMerged #214 https://github.com/octo-online/robospice/pull/214.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/214\n.\n. Sorry for the delay to answer. This bug is a good one. \n\nThx for being so clear and provide a good sample to reproduce it. \nI got an idea of the problem : the second call to execute is aggregated to the first one. And it should not.\nYep, really a good one. I remember I had thought about it when coding, and damn, someone found it ;)\nThe whole problem is to create a non-symetric relation between requests, and I had the very bad idea to use equals and a hashmap... For now I am stuck, the only solution I can see is to reimplement hashmap using this new equivalence relation. \n. Bug is solved and a test has been added. This bug was very well documented, thank you very much. \nAnd it's been a pretty chalenging question on data structures ;) but finally I found a very simple workaround.\nFix will be released shortly in 1.4.10\n. 1.4.10 is out @bogdanzurac . That should fix your problem. Thx for the kind words.\n. 2 easy work arounds are :\n- to create to different requests, the post one returns a model, the put\n  one returns nothing (or a dummy return if needed)\n- keep it all in a single request and return null or any other value after\n  a put success.\nBut as mathieu said, that is really down to spring android design, not\nreally related to RS.\nS.\n2013/11/13 Mathieu Castets notifications@github.com\n\nThis is more a Spring Android issue and unfortunately, as the\ndocumentation states, put will always return void\nhttp://docs.spring.io/spring-android/docs/1.0.1.RELEASE/reference/htmlsingle/#d4e146\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/216#issuecomment-28437709\n.\n. Did you look at our repo branch ? https://github.com/octo-online/robospice/tree/repository/dependencies/1.4.9\n\nYou should find all jars needed there. Please don't bother about motivations, it's a bit old fashioned.\n. Looks like this thread is closed. Thx for the reply @moritzpfeiffer \n. Humm... Quite annoying to both have this embarassing bug and loose users. Can you provide a complete sample on git somewhere ? That would be a high priority bug fix for me. \nSorry for the delay, I took a few weeks off from RS. \n. So nice ! Thx. I am working on it.\n. Got it ! It will be shipped in next release. I will try to find a suitable test now. I feel really dumb, we had forgotten to add a stop method to the request processor so that it could stop its executor service. Next release 1.4.10 will fix the bug.\nThx @NicolasPoirier  for finding the bug and providing so nice details. When you see the commit, would you mind to test the master branch in your app ? Or would you prefer a maven snapshot ?\n@JoanZapata Would you like to test the new snapshot as well ?\n. A snapshot has been deployed on our sonatype repo.\nI am waiting for your feedback to release.\n. Coule you try it on ICS. I tested below and kitkat..\nLe 6 janv. 2014 12:13, \"Nicolas Poirier\" notifications@github.com a \u00e9crit\n:\n\nIt looks good to me.\nThanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/220#issuecomment-31641514\n.\n. Cool. I am gonna release soon so.\n\nThx @Nicolas Poirier\n2014/1/6 Nicolas Poirier notifications@github.com\n\nI've tried it on ICS and there is no more blocked thread so I think it's\nfixed ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/220#issuecomment-31650784\n.\n. Hi Daniel, I would be happy to correct that bug and had a null check. Can you just acknowledge that you are using the latest version of RS ?\n. Forget the last question. Bug is fixed as far as I know. Reopen if need. Thx for signaling it.\n. Thx for the patch @liuyuedeyu.\nThx for merging @rciovati , I close the issue. \n\nBug fix will be part of next release. (1.4.10)\n. We definitely need some code to see how you cancel requests.\nUsing the cancel() method of request will only work on the same instance (i.e. not in the case you mention). Did you keep the cacheKey of your requests in order to cancel them via the SpiceManager ? \nThread is closed while waiting for more details. Feel free to reopen if question is still pending.\n. The only (and cleaner to my mind) solution is to run several spice services.\nPlease, use the mailing list for questions, and the issue board for issues.\n. Thx @softwaremaverick for answering. I consider the thread to be closed (cleaning the backlog).\n. I thought I had answered yesterday. I am going to have a talk with @rciovati about this. I am inclined to go clean now as @softwaremaverick mentionned it, the new notification model is well enforced by kitkat and it should be backward respected by RS to my mind. But that's an API change and we should do this in a new minor version of RS (i.e. 1.5.0).\n. @DanielNovak and @softwaremaverick , would you like to create a branch and implement this feature on the basis of @softwaremaverick 's idea ? We could thus prepare release 1.5.0.\n. Fixed. Will be part of 1.4.10. Thx.\n. Can we consider the thread closed ?\n. @AlexNab , RoboSpice itself is protocole agnostic. This choice allows us to push RS in fields like processing where no networking is involved at all. \nAll network related stuff is accomplished by third party libs in RS and each of them will propose its own mechanisms to deal with timeouts. That's why this feature won't make it in RS. The scope of RS is indeed quite small by itself, but already quite large when we consider all the extensions. This feature would definitely need to be addressed  by the third party you use or you own app, by default.\n. Look at this docs from ORMLite : http://ormlite.com/javadoc/ormlite-core/com/j256/ormlite/field/DatabaseField.html#foreignColumnName()\nYou need to precise the name of the foreign key if you don't use the default id in your foreign object's class.\nSorry for the delay to answer this question. Please note that ORM Lite module is orphan since almost a year and not much development effort has been put into it. \nAlso note that this kind of question should be adressed to ORM Lite forum more than on RS issue board.\n. I can't reproduce the bug with RoboSpice sample for Retrofit. Everything works fine on master (using the SNAPSHOT version of RS as a dependency for the sample).\nI am strongly interested in that bug. Please provide a sample, a gist somewhere so that we can test.\nAlso, do you use Dalvik or ART ?\n. All bugs related to ART and kitkat that I could observe are solved for me on main branch. Can one of @dmacosta or @kosiarska confirm this ?\n. Thx @DanielNovak , I couldn't understand why the trace mentionned ssl. That's a track to follow. Can someone confirm  ?\n. Fine. Can you dig into your problem and tell us if we can close that thread\n?\n2014/1/3 kosiarska notifications@github.com\n\nIt looks like it's okhttp fault. I need some time to compare two versions\nof app (with and without okhttp), I think ART has nothing to do with it\n(there's no such option on 2012 Nexus 7).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/232#issuecomment-31518646\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Oh yeah, I see. I already had that problem. The solution is to check SSL\ncertificate by yourself and to hard code the ssl certificate of bugsense\nservers. Some work...\nThx for the update.\n2014/1/3 Diego Acosta notifications@github.com\n\nI found out what was causing the issue on my code after reading bug\nreferenced by @kosiarska https://github.com/kosiarska. After commenting\nBugSense initializer, RS started showing up Exceptions back again on logcat.\n// BugSenseHandler.initAndStartSession(this, Config.BUG_SENSE_API_KEY);\n@stephanenicolas https://github.com/stephanenicolas go ahead and close\nthe issue if you agree.\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/232#issuecomment-31523373\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Sorry for the delay to answer. I am looking into your pull request right now.\n. I don't see how the fix fixes any memory leak. And I can't see the link with sendRequestToService(requestQueue.take());. Could you explain more your pull request please ?\n. Hi @tperrien , I get it now.\nTo my mind the real problem is that take() is not stopping correctly. But there is really no way to get notified of the death of the associated context, if it doesn't notify us.\nI take your fix, but I am a bit sad that there are no listener mechanism to get notified of the life cycle of context in Android, not before SDK 14.\nThx for the fix.\n. That should be possible. What have you tried ?\n. This feature is already in. Use getFromCacheAndLoadFromNetworkIfExpired. Please follow that link to our javadoc :\nhttp://octo-online.github.io/robospice/site/latest/apidocs/com/octo/android/robospice/SpiceManager.html#getFromCacheAndLoadFromNetworkIfExpired(com.octo.android.robospice.request.SpiceRequest, java.lang.Object, long, com.octo.android.robospice.request.listener.RequestListener)\n. Really hard to know what can happen. Can you dig a bit more that bug and provide more details ? Could you also try to see if you can reproduce it with current master's version ?\nThx in advance (meanwhile, bug is closed).\n. Hi Diego,\nI don't see why this would occur only on this device. And it's strange that\nyou don't see the cause of this exception neither.\nCan you post a gist of your implementation ?\nSt\u00e9phane\n2014-03-17 19:18 GMT+01:00 Diego Acosta notifications@github.com:\n\nI've finally been able to get with a device with this issue. On my case I\nreproduced it on an HTC Status (Android 2.3.3). It seems the reported error\nit's consequence of another one which it fails silently on a try..catch\nblock before crashing:\n03-17 15:05:08.618    1413-1413/com.myapp E//SpiceService.java:104\ufe55 15:05:08.614 main com.octo.android.robospice.persistence.exception.CacheCreationException: The cache folder /robospice-cache could not be created.\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.setCacheFolder(InFileObjectPersisterFactory.java:73)\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.(InFileObjectPersisterFactory.java:48)\n            at com.octo.android.robospice.persistence.retrofit.RetrofitObjectPersisterFactory.(RetrofitObjectPersisterFactory.java:30)\n            at com.octo.android.robospice.persistence.retrofit.RetrofitObjectPersisterFactory.(RetrofitObjectPersisterFactory.java:35)\n            at com.myapp.services.RetrofitJacksonSpiceService.createCacheManager(RetrofitJacksonSpiceService.java:21)\n            at com.octo.android.robospice.SpiceService.onCreate(SpiceService.java:102)\n            at android.app.ActivityThread.handleCreateService(ActivityThread.java:2223)\n            at android.app.ActivityThread.access$2500(ActivityThread.java:132)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1102)\n            at android.os.Handler.dispatchMessage(Handler.java:99)\n            at android.os.Looper.loop(Looper.java:143)\n            at android.app.ActivityThread.main(ActivityThread.java:4293)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:507)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n            at dalvik.system.NativeStart.main(Native Method)\n@stephanenicolas https://github.com/stephanenicolas let me know if\nyou've some clues what might be failing with this. I've tried to reproduce\non Motivations demo but it's working as intended, so I'm not sure if it\nmight be implementation dependent.\nBest,\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/237#issuecomment-37851103\n.\n. Can't you give more details ? I don't see any way the RequestProcessor can be null during the lifecycle of the service.\n. Could you post the app you use on a gist ?\n\n2014-04-18 4:47 GMT+02:00 yava notifications@github.com:\n\ndoes this relate with CacheCreationException\uff1f\nI test with a small demo app \uff1aonServiceConnected will be called\uff0ceven\nstopSelf and return from onCreate method.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/237#issuecomment-40782802\n.\n. This should be solved in 1.4.14 as it seems to be related to https://github.com/stephanenicolas/robospice/pull/352\n. Looks like Android fully supports java 1.6 : http://stackoverflow.com/q/12305344/693752. Personally, I have switched a long time ago to jackson 2 in my RoboSpice powered apps and never faced any compatibility issue due to the java SDK version.\n\n@softwaremaverick Do you have any link about Android 2.2 java SDK version support ? It looks odd to me.\n@nzackoya I'am gonna make the change (you were talking about the spring android module I assume ?), if tests pass, it will be included in next release.\n. @nzackoya All dependencies related to jackson and jackson 2 are optional in RS. If you don't use codehaus, then you won't get jackson 1 version in your project. You only have to use jackson2 to get only jackson2.\nI updated all dependencies :+1: \n[INFO]   org.apache.commons:commons-lang3 .......................... 3.1 -> 3.2\n[INFO]   com.fasterxml.jackson.core:jackson-databind ........... 2.2.3 -> 2.3.1\n[INFO]   com.squareup.retrofit:retrofit ........................ 1.2.2 -> 1.3.0\n[INFO]   com.j256.ormlite:ormlite-android ........................ 4.47 -> 4.48\nThis will be part of next release. 1.4.10\n. That is absolutely right @softwaremaverick , jackson 2.3.1 needs java.util.Arrays.copyOf that only appeared in version 9 of Android SDK. \nVersion 1.4.10 of RS will drop support for SDK 8, and require min SDK to be 9+ for this reason.\n. Jackson level has been restored to 2.2.3. As this library dependency is optional,developers will decide by themselves whether or not to upgrade to 2.3.1 and loose SDK 8 compatibility. RS will remain SDK 8+ compatible.\n. Json support is not in robospice-cache but in extensions like spring\nandroid or Google http java client.\nTypically a JacksonObjectPersister uses Jackson1, and\na Jackson2ObjectPersister uses Jackson2. Both dependencies are optional in\nmaven and you have to choose which one to use in your app.\nAlso note that some libraries used by extensions don't always support\nJackson2 and/or jackson 1. And some call \"jackson\" what is called\n\"jackson2\" (e.g. retrofit).\nSt\u00e9phane\n2014/1/3 nzackoya notifications@github.com\n\nGuys, I just ment to update codehouse to fasterxml in latest release of\nRS... Please look in JacksonObjectPersister class that is in\nrobospice-cahce-1.4.9.jar. It means in order I could use latest spring\nlibraries I need to use not only latest jackson libraries but also 1.9\nversion. I mean part of classes in libraries uses fasterxml and the other\npart - codehouse.\nOn Fri, Jan 3, 2014 at 5:21 PM, stephanenicolas notifications@github.comwrote:\n\nJackson level has been restored to 2.2.3. As this library dependency is\noptional,developers will decide by themselves whether or not to upgrade\nto\n2.3.1 and loose SDK 8 compatibility. RS will remain SDK 8+ compatible.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/238#issuecomment-31521871>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/238#issuecomment-31533718\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Answered on sof\nLe 11 mars 2014 18:31, \"NammariVIP\" notifications@github.com a \u00e9crit :\n\nhttp://stackoverflow.com/questions/22331514/using-robospice-with-jackson2-and-spring\n\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/238#issuecomment-37324512\n.\n. @omihaz Thx for this feature addition. It will be added in next release (1.4.10).\n\nPlease, for subsequent pull requests, try to make checkstyle fixes before submitting and squash your commits to a single one. I also added tests that would have been welcome as well... ;)\n. saveAllForeignObjectsToCache() is not supposed to be called directly. It's not part of the public API and the only way to call it right now, with respect to current visibility modifiers, is to call saveDataToCacheAndReturnData, which provides the notification you need. \nAdding the notification call as you request it would make things quite unclear. For instance, the method saveAllForeignObjectsToCache is called recursively inside the object's data members tree. What would such a notification mean in deepest levels ?\n. Can you propose a working PR ? (and maybe tested ?)\n. Thx. Waiting for it.\n. @agrebnev the PR is commented. Please resubmit when all tests and checks pass.\n. SetOnScrollListener is deprecated as you said, but not final. You can still override it to accommodate our listener and yours.\nIf you insist a bit, I can add a basic delegation mechanism so that you could still use your own listener. Or you could do it ? ;)\n. Thread is inactive for a few days. \n. Hi @softwaremaverick , I have merged the branch manually. Thanks for this contribution.\n. Thanks for reporting the bug. I think it should be OK now. \nI really identified something uncommon in service lifecycle. It looks like in some case a service is kept alive a bit longer and then recycled, whereas in some case the service is cleanly destroyed. RS now handles both better. \nDo you mind to test the latest SNAPSHOT ?\nIssue is closed, reopen if problem persists please.\n. Hi @lsuski ,\nI am gonna work on that issue right after lunch. If you have any detail on the issue, I would appreciate them. To sum up, now I see : \n- add all parameters required in RequestProcessor constructor to SpiceService.createRequestProcessor() \n- make SelfStopperRequestProcessorListener class protected\n- investigate relation between RequestProcessor & RequestRunner\n. Hi @lsuski ,\nyou are right, those dependencies were a real mess ! Thx for pointing this out.\nWould you mind to have a look at current master branch and detail if you want me to add/change anything. I am now really in favor of defining interfaces for all the core sub-components, I just feel like this would turn into a \"bad smell\" for the clarity of RS. But I can change my mind if you convince me.\n. BTW, this must be one of the last issue for the 1.4.11 release.\n. Let me change some stuff after having a look at PR #248 and push again. Then tell me if it's fine like this.\n. Ok, is master looking better for your project ? @lsuski \n. I will try to do my best to fully support \"Fire and Forget\" requests. I also consider it a very valid use case but didn't find much time to work on it yet. I will tell you when I start working on that issue. Meanwhile, if you have any idea or pull request, let me know.\nI think the main thing is to get sure all pending requests inside the SpiceManager are actually sent to the spice service before it gets detroyed and wipes out every listener. I think it should not be a long patch, but we have to precisely identify where to patch.\nThx for reporting the issue and the nice words on the lib.\n. Hi @doridori , I think I found the bug and could patch it. That's a very cool bug indeed. I think it will make our tests much more robusts in all RS. Thanks for reporting it.\nNevertheless, I adopted a very pragmatic bug resolution approach. I added a test, and everything works fine. My fear is to have created a very tiny bottleneck on the UI thread in some cases. Would you mind to test the snapshots of RS  (1.4.11)? They will be available within 10 minutes.\n. Thread is closed, reopen if needed.\n. Really strange, I use your sample, and get it working : I see the toast in both landscape and portrait when I use the patch.\n. What version of android are you using ?\nIt really bugs me.\n2014/1/13 Dorian Cussen notifications@github.com\n\nJust rebuilt my whole project in case the old jars were cached - still not\nworking...!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/246#issuecomment-32176699\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. Same here...\n2014/1/13 Dorian Cussen notifications@github.com\n\n4.4.2, Nexus 4 :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/246#issuecomment-32178219\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n. @doridori , ok I got a new build for you. Do you mind to test this new SNAPSHOT ? \nIt will be available within 15 mn.\n. That's the last open issue before releasing. The better you can test, the better this release will be. :)\n. @doridori \nOk, so did I solve your non bug ? (And then we can go for a release ?)\nIndeed, there was a real problem for \"fire and forget\" requests : you execute a request, let's say in onStart, and then finish the activity. In such a case, requests would have been lost and they are not anymore. You won't be notified of the result (as the activity and its listeners died), but the request will still be executed. \nActually, since that very subtile change, it looks like all tests are much much more stable than ever before. I can even re-run parallel maven builds when building RoboSpice, and this is really a great sign of quality increase according to me.\n. Thanks to you too. It really helped.\n. You should also try 1.4.11 :) Can this thread be considered as closed ?\n. Appart of the logs ? Which have debug and not error level, is there anything wrong ?\nSt\u00e9phane\n. Please Reopen if needed. @eshbeata \n. What is the current status with regards to current snapshot ? (1.4.13 ?).\nHow is it linked to https://github.com/stephanenicolas/robospice/issues/311 ?\n. Ok, bug is still present. A new test has been added, we are working on it.\n. Hi @agrebnev , \nORM Lite module is an orphan for now. But a PR in that direction would be welcome.\nS.\n. Can you submit a PR and tests ?\n. Sorry to hear this, but that maybe a good move. ORMLite is an orphan module, too complex for me to take it in charge on my spare time. All volunteers welcome.. \nI am curious of the alternative you found too @lukesleeman.\n. This PR doesn't pass checkstyle. I could fix it, but then findbugs cries as well. Please run all tests and checks on your PR, squash all your commits into one and resubmit. \nWe are interested in merging the feature in next release but need more effort on your side.\nBTW, it could be interesting to wrap the hashmap with methods in InDatabaseObjectPersisterFactory : \n- addClass( Class<?> clazz)\n- addClass( Class<?> clazz, String url)\n- removeClass method ?\nit could be more clear this way and avoid to manipulate a low level hashmap. Your tests are really nice.\n. @agrebnev , Can you squash all your commits into one, ideally rebase on master (looks like you forked release branch) to ease merge ?\nIf the travis build could get green, we had a single commit to merge, started from current master, that would really be super easy to review and merge your PR.\n. Sorry for the large delay Moritz ( @Alp-Phone ),\nthis looks like a big issue that definitly needs our attention. Any help to patch this would be appreciated.\n. So cool. Sorry for this overlong delay, I have been pretty busy on other\nstuff recently.\nI am really glad it works. I will close the issue but let us know if\nsomething like this pops back.\nS.\nLe 11 juin 2014 08:55, \"Moritz Pfeiffer\" notifications@github.com a \u00e9crit\n:\n\nHi @stephanenicolas https://github.com/stephanenicolas\nThank you for getting back to me about this.\nAt this point (4 months later) I can no longer reproduce the behavior I\nreported back in February.\nThings that I changed since then are:\n- Fragment has own instance of SpiceManager (no longer using the\n  Activity's SpiceManager)\n- SpiceManager is now instantiated in Fragment's onCreate instead of\n  using a declaration and instantiation one-liner (see below).\npublic MyClass {protected MySpiceManager spiceManager = new MySpiceManager(UncachedSpringAndroidSpiceService.class);}\nThere are also numerous architectural changes I made that could have\ninfluenced the Fragment's lifecycle. I'll keep an eye on this one, but for\nthe time being I think you can close this issue.\nThank you and greetings\nMoritz\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/263#issuecomment-45708013\n.\n. My pleasure Moritz, and thx for your efforts to support this lib as well. I deeply realize how important it is for RS to have this living community you belong to.\n\nS.\n. Could you give us a little bit more details about the life cycles you\nobserved (log all onXXX method hooks in the console for your fragment and\nactivity), which SDK you use and maybe the code you used to start and stop\nspicemanager in fragments.\nThx\nSt\u00e9phane\n2014-08-08 15:10 GMT-07:00 \u00c7a\u011fatay \u00c7all\u0131 notifications@github.com:\n\nWhen I used Fragments accessing SpiceManager through the Activity, despite\nspiceManager.start() getting called at onStart() of the Activity at\nrecreation time, subsequent requests from Fragments did not get executed\nafter an orientation change.\nI fixed this by making my Fragments use their own SpiceManager instances.\n(as pointed out earlier by @Alp-Phone https://github.com/Alp-Phone ).\nI think this issue must be re-opened @stephanenicolas\nhttps://github.com/stephanenicolas , at least discussing the root cause\nand warning the developers against such use.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/263#issuecomment-51663569\n.\n. Great answer, Ricc !\n\nI would have struggled against the idea of sync request processing. I don't\nsee a use case, and find it quite dangerous to block the ui thread, but\nyour solution is what @eefret asked for.\nS.\n2014-04-23 22:26 GMT+02:00 Riccardo Ciovati notifications@github.com:\n\n@eefret https://github.com/eefret if you are stuck on this you could\nsimply use a CountDownLatch to await.\nfinal CountDownLatch latch = new CountDownLatch(1);\nfinal YourRequest request = new YourRequest();spiceManager.execute(request, new RequestListener() {\n```\n@Override\npublic void onRequestFailure(SpiceException spiceException) {\n    latch.countDown();\n}\n@Override\npublic void onRequestSuccess(YourResponse response) {\n    latch.countDown();\n}});\n```\nlatch.await();\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/265#issuecomment-41210293\n.\n. Good choice @PerfectCarl. Non blocking the UI Thread is really a better\ndesign.\n\nS.\n2014-04-24 10:28 GMT+02:00 PerfectCarl notifications@github.com:\n\n@rciovati https://github.com/rciovati great answer.\nJust for the sake of completion, I ended up modifying my code to use the\nfull async robospice architecture.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/265#issuecomment-41255442\n.\n. Hi all,\n\nI close the thread as I don't think there is anything more to add to @rciovati 's answer.\nPlease ask questions on the mailing list more than on github, though this topic was interesting.\n. I invite you guys to submit a PR. It could be easy to return a request\nstatus in a new synchronous method based on @rciovati's implementation :\npublic RequestResult executeSynchronously(SpiceRequest request)\npublic RequestResult executeSynchronously(SpiceRequest request, Object\ncacheKey, long cacheExpiry)\npublic RequestResult executeSynchronously(SpiceRequest request, long\ntimeout)\npublic RequestResult executeSynchronously(SpiceRequest request, Object\ncacheKey, long cacheExpiry, long timeout)\nWhere RequestResult could provide either the result, an exception,\nincluding a new timeout exception.\nVolunteers ? (Don't forget tests and squash into a single commit before\npublishing the PR !)\nSt\u00e9phane\n2014-06-06 17:49 GMT+02:00 Christopher Herrera notifications@github.com:\n\nThere's other cases too, for example if you have an app that requires a\nserver configuration to construct your UI by a Subscription Setting, then\nyou need to block the UI (SplashScreen or something) until the data has\nbeen loaded. @rciovati https://github.com/rciovati Solution worked\nperfectly, Thanks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/265#issuecomment-45352177\n.\n. Cool. But we could let this one to others... Wdyt?\nLe 14 juin 2014 20:52, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\nI will do it this week :-)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/265#issuecomment-46096414\n.\n. Well, not yet apparently but I see this enhancement as very feasible and it\ncould be turned into an opportunity to give more space to others and\nempower the community of RS users.\n\nNevertheless, I would like to code it myself too and clearly understand\nyour motivation ;) I don't wanna refrain you from contributing to RS, Ricc.\nMy point was just to tell you it could be an opportunity to make other\npeople contribute to RS, but that's my only point, no obligation.\nIndeed, can I let you take that issue in charge, and decide how to solve\nit, either by hoping others to volunteer or to do it by yourself ?\nIf you agree, just assign it to you, I don't wanna interfere any more, I\nalready hope not have discouraged you ;)\nSt\u00e9phane\nLe 15 juin 2014 10:26, \"Riccardo Ciovati\" notifications@github.com a\n\u00e9crit :\n\nClosed #265 https://github.com/stephanenicolas/robospice/issues/265.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/265#event-131486504.\n. I let you @nkeskinov and @rciovati decide who does what. Maybe we could start using feature branches and submit PRs for reviews between us, contributors ? I let you guys see how you collaborate on this.\n. The simplest might be to use a countdownlatch inside your listener.\n\nBeware of freezing the UI thread though...\n2015-03-25 12:56 GMT-07:00 Christopher Herrera notifications@github.com:\n\nWould see if I can get a good idea for this, I had to hack workarounds in\nsome of my projects.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/265#issuecomment-86193740\n.\n. @colintheshots Sorry for the very long delay. Can you still reproduce that bug with 1.4.12 or current 1.4.13 snapshots ?\n. I am really struggling to reproduce this error. Do you have a small snippet of activity showing the bug. Can you also check it is still present with 1.4.13 ?\n. @colintheshots and @k0dek0mmand0 , I am trying a new approach, blindly as I can't reproduce the bug.\n\nPlease try the latest 1.4.13 snapshot and report back. Thanks in advance and sorry for the delay to answer.\n. I tried that but couldn't get an ANR. You just add the spice service\nlistener in onResume and launch the app with screen off ?\n2014-06-11 10:48 GMT-04:00 Colin Lee notifications@github.com:\n\nUsing 1.4.12, I just added getSpiceManager().addSpiceServiceListener(new\nMySpiceServiceListener()) to onResume in some existing sample code and ran\nit while the screen was off on my Nexus 4. The result was an ANR when I\nswitched on the screen.\nMySpiceServiceListener, in this case, simply implements the interface with\nno code added to any functions.\nI'll try your 1.4.13 snapshot.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/270#issuecomment-45751455\n.\n. @colintheshots Okay, let me try this, cloning your repo.\n. Thx @colintheshots , I got it :)\nOh, charming bug. \n\nIt looks like the latest SNAPSHOT of 1.4.13 resolved the problem. On my phone, the bug is gone with the snapshot, and present with 1.4.12. (Nexus 4, latest kitkat)\nCan you confirm the issue is closed ?\n. https://github.com/stephanenicolas/robospice/wiki/Using-RoboSpice-snapshots\n2014-06-11 12:24 GMT-04:00 Colin Lee notifications@github.com:\n\nI was working from source and having issues getting my compilation\nenvironment right. Where are the SNAPSHOTS?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/270#issuecomment-45764811\n.\n. Thank you very much for the follow-up though there was a very long time you reported the bug.\n. In case you want to do it again, look at the wiki, you will find the maven\nsnapshot repo of RS.\n\nS.\n2014-07-26 10:12 GMT+02:00 Moritz Pfeiffer notifications@github.com:\n\nNever mind, I managed to build the snapshot myself.\nThanks anyways\nMoritz\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/270#issuecomment-50226843\n.\n. I found something abnormal in the RetrofitGsonSpiceService. I am releasing a snapshot, would you mind to test it if possible ?\n. The issue is marked as solved. Re-open if needed.\n. Please ask questions on the mailing list.\n. Duplicate of #281 \n. Okay, if I follow your pull request, you will avoid the exception of class castingm but does anything work after this ? RS is designed to interact with a local service, i.e running in the same process as the activities. I doubt anything can actually work otherwise as listeners, for instance, can't be passed to RS to get notified. \n\nAre you sure this PR gives anything ? Please give more details here.\n. @shenwill Please help us understand us whether this PR leads to a valid use case.\n. Hi @shenwill ,\nwhen you submit a PR you can use whatever branch of your own repo, and just open the PR against our master branch (which is development branch for us). Every commit, even after the PR, will be added to the PR, from the forking commit to current HEAD of your branch.\nBut, apart of that, please answer the question above : in which extent does anything work when you use RS with a different process hosting your RS services.\n. Ok, I follow you. Sorry for the github slang :\n- PR means Pull Request\n- RS is RoboSpice\nMy last question when asking : \"In which extent does it work with RS\" needs\nmore detail.\nWhen you use RS, you need a service that will be used for performing\nbackground jobs. The service has to be in the same service as activities,\nthis is mandatory, otherwise RS simply doesn't work at all. This property\nof being in the same process allows a bi-directional object oriented\ncommunication channel between the service and activities (i.e. the spice\nmanager) and the listeners.\nIf you use RS in an another process, I don't have any idea of the kind of\nthings you can do. But actually, I would believe that nothing will work at\nall. So please, be more precise. Explain what you want to do : for instance\n(and that example would not work)\nMyRSService       <------> MyActivity\n(inside process A)         (inside process B)\nThe arrow means \"bi-directional communication\".\nS.\n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com:\n\nSorry, I need to understand some terms.\n- What does the PR stand for? Problem?\n- RS I believe it stands for RoboSpice, right?\n- What means 'which extent does anything work'?\nThe app I created will launch an extra process which name should be\n'app.i-created:bdservice_v1', which is exported. It's composed by a 3rd\nparty Company Baidu and wrapped into JAR which is not open sourced. That\nprocess shares myApplication.onCreated(), which supposed to be extended\nfrom FrontiaApplication, which mentioned in SDK documentation at\nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview.\nThe documentation has no English version, please try Google Translate from\nSimplified Chinese. The SDK named is BaiDu Frontia, which contains push\nservice, and analyst, and social sharing components, and much more you can\nimagined. The push servers are also hosted by Baidu company. This is sadly\nbecause Google is not eligible to run business in China Mainland, so Google\nService Framework has to be removed from any Android devices here. Then\nmany companied wants to gain users by providing push service...\nAh, this is a long story. You have no idea how painful it is! There is at\nleast a dozen pushing service providers in China Mainland market and a\ndozen pushing service processes running in users' devices. Each service\nprovider wants to conquer all and be the last one to occupy the whole\nuser's devices...\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill ,\nwhen you submit a PR you can use whatever branch of your own repo, and\njust open the PR against our master branch (which is development branch for\nus). Every commit, even after the PR, will be added to the PR, from the\nforking commit to current HEAD of your branch.\nBut, apart of that, please answer the question above : in which extent\ndoes anything work when you use RS with a different process hosting your RS\nservices.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887\n.\n. Ok Will, but I don't get who is using a spicemanager and getting the class\ncast exception. Please be more precise like :\n\nClass A {\n  SpiceManager sp = new SpiceManager(B.class)\n}\nclass B extends XXXSpiceService {\n}\njust give the big picture, the overview, of who is who, who is using RS,\netc.\nI just don't understand how you get this exception : what are you trying to\ndo ??\nS.\n2014-06-11 13:00 GMT-04:00 shenwill notifications@github.com:\n\nS., thanks for your effort to clarify all these meanings. It's very\nhelpful and I think I got it.\nIf not taking the Baidu Frontia SDK, the project is simple and straight\nforward, and just like most other apps, no any extra android:process\nspecified.\nAs you mentioned, there is only one process for all activities and one RS\nservice which do networking jobs. This can be improved by looking into the\nprocess list in Android Device Manager. Everything runs fine indeed.\nAfter using Baidu Frontia SDK, there is one more process created. By\nsetting a break point at beginning of onServiceConnected(), an unexpected\n'IBinder of the Service's communication channel' rushed in, which\ndefinitely is not SpiceServiceBinder, and crashes app. As I mentioned\nbefore, Baidu Frontia SDK is not open sourced. And even more, there is a\nDEX file in JAR rather than all class files. This introduces many warnings\nin AndroidManifest.xml, since many activity names and receiver names can\nnot be found according to the SDK documentation. I believe there are must\nbe some abnormal reasons, but it makes me uncomfortable.\nAfter encountering the infinite loop of app launching and crashing several\ntimes, I'm still using Baidu Frontia for analyst and social sharing\ncomponents, but not push service any more. I chose another push service\nprovider in local market, but this also creates another process to run push\nservice, just same as Baidu Frontia.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a8:49\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nOk, I follow you. Sorry for the github slang :\n- PR means Pull Request\n- RS is RoboSpice\nMy last question when asking : \"In which extent does it work with RS\"\nneeds\nmore detail.\nWhen you use RS, you need a service that will be used for performing\nbackground jobs. The service has to be in the same service as activities,\nthis is mandatory, otherwise RS simply doesn't work at all. This property\nof being in the same process allows a bi-directional object oriented\ncommunication channel between the service and activities (i.e. the spice\nmanager) and the listeners.\nIf you use RS in an another process, I don't have any idea of the kind of\nthings you can do. But actually, I would believe that nothing will work at\nall. So please, be more precise. Explain what you want to do : for\ninstance\n(and that example would not work)\nMyRSService <------> MyActivity\n(inside process A) (inside process B)\nThe arrow means \"bi-directional communication\".\nS.\n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com:\n\nSorry, I need to understand some terms.\n- What does the PR stand for? Problem?\n- RS I believe it stands for RoboSpice, right?\n- What means 'which extent does anything work'?\nThe app I created will launch an extra process which name should be\n'app.i-created:bdservice_v1', which is exported. It's composed by a 3rd\nparty Company Baidu and wrapped into JAR which is not open sourced. That\nprocess shares myApplication.onCreated(), which supposed to be extended\nfrom FrontiaApplication, which mentioned in SDK documentation at\nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview.\nThe documentation has no English version, please try Google Translate\nfrom\nSimplified Chinese. The SDK named is BaiDu Frontia, which contains push\nservice, and analyst, and social sharing components, and much more you\ncan\nimagined. The push servers are also hosted by Baidu company. This is\nsadly\nbecause Google is not eligible to run business in China Mainland, so\nGoogle\nService Framework has to be removed from any Android devices here. Then\nmany companied wants to gain users by providing push service...\nAh, this is a long story. You have no idea how painful it is! There is\nat\nleast a dozen pushing service providers in China Mainland market and a\ndozen pushing service processes running in users' devices. Each service\nprovider wants to conquer all and be the last one to occupy the whole\nuser's devices...\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill ,\nwhen you submit a PR you can use whatever branch of your own repo, and\njust open the PR against our master branch (which is development branch\nfor\nus). Every commit, even after the PR, will be added to the PR, from the\nforking commit to current HEAD of your branch.\nBut, apart of that, please answer the question above : in which extent\ndoes anything work when you use RS with a different process hosting your\nRS\nservices.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45769481\n.\n. Hi Will,\n\nOkay. This is quite classic. So what unusual do you try to achieve. I\nreally don't get it.\nNo, sorry, I don't have time to try this SDK at all.\nS.\nLe 12 juin 2014 04:02, \"shenwill\" notifications@github.com a \u00e9crit :\n\nHere are some code lines related to RS:\npublic class MidasSpiceService extends UncachedSpiceService {\n@Override\npublic int getThreadCount() {\nreturn 3;\n}\n}\n// CommandExecutor implementation class\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nspiceManager.execute(request, requestListener);\n// AndroidManifest.xml\n\nMaybe... have a try with Frontia SDK?\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u51cc\u66681:06\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nOk Will, but I don't get who is using a spicemanager and getting the class\ncast exception. Please be more precise like :\nClass A {\nSpiceManager sp = new SpiceManager(B.class)\n}\nclass B extends XXXSpiceService {\n}\njust give the big picture, the overview, of who is who, who is using RS,\netc.\nI just don't understand how you get this exception : what are you trying\nto\ndo ??\nS.\n2014-06-11 13:00 GMT-04:00 shenwill notifications@github.com:\n\nS., thanks for your effort to clarify all these meanings. It's very\nhelpful and I think I got it.\nIf not taking the Baidu Frontia SDK, the project is simple and straight\nforward, and just like most other apps, no any extra android:process\nspecified.\nAs you mentioned, there is only one process for all activities and one\nRS\nservice which do networking jobs. This can be improved by looking into\nthe\nprocess list in Android Device Manager. Everything runs fine indeed.\nAfter using Baidu Frontia SDK, there is one more process created. By\nsetting a break point at beginning of onServiceConnected(), an\nunexpected\n'IBinder of the Service's communication channel' rushed in, which\ndefinitely is not SpiceServiceBinder, and crashes app. As I mentioned\nbefore, Baidu Frontia SDK is not open sourced. And even more, there is a\nDEX file in JAR rather than all class files. This introduces many\nwarnings\nin AndroidManifest.xml, since many activity names and receiver names can\nnot be found according to the SDK documentation. I believe there are\nmust\nbe some abnormal reasons, but it makes me uncomfortable.\nAfter encountering the infinite loop of app launching and crashing\nseveral\ntimes, I'm still using Baidu Frontia for analyst and social sharing\ncomponents, but not push service any more. I chose another push service\nprovider in local market, but this also creates another process to run\npush\nservice, just same as Baidu Frontia.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a8:49\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nOk, I follow you. Sorry for the github slang :\n- PR means Pull Request\n- RS is RoboSpice\nMy last question when asking : \"In which extent does it work with RS\"\nneeds\nmore detail.\nWhen you use RS, you need a service that will be used for performing\nbackground jobs. The service has to be in the same service as\nactivities,\nthis is mandatory, otherwise RS simply doesn't work at all. This\nproperty\nof being in the same process allows a bi-directional object oriented\ncommunication channel between the service and activities (i.e. the spice\nmanager) and the listeners.\nIf you use RS in an another process, I don't have any idea of the kind\nof\nthings you can do. But actually, I would believe that nothing will work\nat\nall. So please, be more precise. Explain what you want to do : for\ninstance\n(and that example would not work)\nMyRSService <------> MyActivity\n(inside process A) (inside process B)\nThe arrow means \"bi-directional communication\".\nS.\n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com:\n\nSorry, I need to understand some terms.\n- What does the PR stand for? Problem?\n- RS I believe it stands for RoboSpice, right?\n- What means 'which extent does anything work'?\nThe app I created will launch an extra process which name should be\n'app.i-created:bdservice_v1', which is exported. It's composed by a\n3rd\nparty Company Baidu and wrapped into JAR which is not open sourced.\nThat\nprocess shares myApplication.onCreated(), which supposed to be\nextended\nfrom FrontiaApplication, which mentioned in SDK documentation at\n\nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview.\n\nThe documentation has no English version, please try Google Translate\nfrom\nSimplified Chinese. The SDK named is BaiDu Frontia, which contains\npush\nservice, and analyst, and social sharing components, and much more you\ncan\nimagined. The push servers are also hosted by Baidu company. This is\nsadly\nbecause Google is not eligible to run business in China Mainland, so\nGoogle\nService Framework has to be removed from any Android devices here.\nThen\nmany companied wants to gain users by providing push service...\nAh, this is a long story. You have no idea how painful it is! There is\nat\nleast a dozen pushing service providers in China Mainland market and a\ndozen pushing service processes running in users' devices. Each\nservice\nprovider wants to conquer all and be the last one to occupy the whole\nuser's devices...\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill ,\nwhen you submit a PR you can use whatever branch of your own repo, and\njust open the PR against our master branch (which is development\nbranch\nfor\nus). Every commit, even after the PR, will be added to the PR, from\nthe\nforking commit to current HEAD of your branch.\nBut, apart of that, please answer the question above : in which extent\ndoes anything work when you use RS with a different process hosting\nyour\nRS\nservices.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45769481>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45822399\n.\n. I am sorry @shenwill  but I really don't understand the design of your app, what you want to do and how your fix could lead to a working solution for services out of main app process. \n\nDo you mean that onServiceConnected is called with a wrong service ? I mean with a service that has not been bound by a SpiceManager ?\n. Hi @shenwill,\nlet me be super clear as I don't always understand your words.\nif you call new SpiceManager(MyService.class) then MyService.class HAS TO\nBE a SpiceService and live in the same process as the activity using the\nspice manger instance.\nIf you call this constructor with something that is not a SpiceService then\nit HAS TO FAIL.\nSo, is there a bug or not ?\nIn other words, do you only call  SpiceManager(MyService.class) where\nMyService is a SpiceService and receive the exception (in that case there\nis a bug) OR do you call  SpiceManager(MyService2.class) where MyService2\nIS NOT a SpiceService and then there is no bug and you are doing something\nwrong.\nPlease re-read carefully, I can't be more clear.\nSt\u00e9phane\n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com:\n\nHi S.,\nWhy I saw extra text 'Do you mean that onServiceConnected is called with a\nwrong service ? I mean with a service that has not been bound by a\nSpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an unexpected\n'IBinder of the Service's communication channel' should not be passed in to\nonServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be hacked\nin.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill but I really don't understand the design of your app,\nwhat you want to do and how your fix could lead to a working solution for\nservices out of main app process.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396\n.\n. Will,\n\nre-read carefully. Okay you got a single service. Good, I understand that\npoint. But your service has to live in the app's main process. If you\nassign it to a different process, it won't work, RS can only work when both\nthe spicemanager and the spiceservice live in the same process.\nNo exception.\nS.\n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com:\n\nHi St\u00e9phane,\nIn the project, there is only one Service class: MidasSpiceService, which\nextends UncachedSpiceService (SpiceService).\nThere is only one class: MidasSpiceService.class, to initiate new\ninstance: new SpiceManager(MidasSpiceService.class).\nUnbelievable? Right?\nI think I have to update a word in following sentence, which in previous\nemail:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' should not be passed in to onServiceConnected(),\nright?\nIt should be:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' is impossible passed in to onServiceConnected(),\nright?\nSorry, I'm not a native English speaker. And I tried my best to make my\nexpression precisely, but it seemed still not good enough. :-)\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill,\nlet me be super clear as I don't always understand your words.\nif you call new SpiceManager(MyService.class) then MyService.class HAS TO\nBE a SpiceService and live in the same process as the activity using the\nspice manger instance.\nIf you call this constructor with something that is not a SpiceService\nthen\nit HAS TO FAIL.\nSo, is there a bug or not ?\nIn other words, do you only call SpiceManager(MyService.class) where\nMyService is a SpiceService and receive the exception (in that case there\nis a bug) OR do you call SpiceManager(MyService2.class) where MyService2\nIS NOT a SpiceService and then there is no bug and you are doing something\nwrong.\nPlease re-read carefully, I can't be more clear.\nSt\u00e9phane\n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com:\n\nHi S.,\nWhy I saw extra text 'Do you mean that onServiceConnected is called with\na\nwrong service ? I mean with a service that has not been bound by a\nSpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an unexpected\n'IBinder of the Service's communication channel' should not be passed in\nto\nonServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be hacked\nin.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill but I really don't understand the design of your\napp,\nwhat you want to do and how your fix could lead to a working solution\nfor\nservices out of main app process.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700\n.\n. Hourrrraaahhh !!! We understood each other ! :)\n\nLet me check this.\n2014-06-12 10:06 GMT-04:00 shenwill notifications@github.com:\n\nS.,\nIt's absolutely correct that, before using the Frontia SDK, the project\nitself do not create any other process, there is only main process.\nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself\nand has to be declared in AndroidManifest.xml.\n1. I didn't write any code to take care or communicate or aware of the 2nd\nprocess;\n2. All code lines for Frontia SDK, is the minimum requirements by its\ndocumentation to just make it work. This part does not involve RS at all.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nWill,\nre-read carefully. Okay you got a single service. Good, I understand that\npoint. But your service has to live in the app's main process. If you\nassign it to a different process, it won't work, RS can only work when\nboth\nthe spicemanager and the spiceservice live in the same process.\nNo exception.\nS.\n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com:\n\nHi St\u00e9phane,\nIn the project, there is only one Service class: MidasSpiceService,\nwhich\nextends UncachedSpiceService (SpiceService).\nThere is only one class: MidasSpiceService.class, to initiate new\ninstance: new SpiceManager(MidasSpiceService.class).\nUnbelievable? Right?\nI think I have to update a word in following sentence, which in previous\nemail:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' should not be passed in to onServiceConnected(),\nright?\nIt should be:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' is impossible passed in to onServiceConnected(),\nright?\nSorry, I'm not a native English speaker. And I tried my best to make my\nexpression precisely, but it seemed still not good enough. :-)\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill,\nlet me be super clear as I don't always understand your words.\nif you call new SpiceManager(MyService.class) then MyService.class HAS\nTO\nBE a SpiceService and live in the same process as the activity using the\nspice manger instance.\nIf you call this constructor with something that is not a SpiceService\nthen\nit HAS TO FAIL.\nSo, is there a bug or not ?\nIn other words, do you only call SpiceManager(MyService.class) where\nMyService is a SpiceService and receive the exception (in that case\nthere\nis a bug) OR do you call SpiceManager(MyService2.class) where MyService2\nIS NOT a SpiceService and then there is no bug and you are doing\nsomething\nwrong.\nPlease re-read carefully, I can't be more clear.\nSt\u00e9phane\n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com:\n\nHi S.,\nWhy I saw extra text 'Do you mean that onServiceConnected is called\nwith\na\nwrong service ? I mean with a service that has not been bound by a\nSpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an unexpected\n'IBinder of the Service's communication channel' should not be passed\nin\nto\nonServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be\nhacked\nin.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill but I really don't understand the design of your\napp,\nwhat you want to do and how your fix could lead to a working solution\nfor\nservices out of main app process.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45895351\n.\n. Will, really, I can't see why this happens. It looks like I can't create an\nandroid test that spans over multiple processes, so I can't test the\nbehaviour you get.\n\nI really don't understand what happens to you. It's like if adding a second\nservice in a different process would trigger the onServiceConnected\ncallback of the spice manager. It's really strange.\nBut, if you say that this bug is fatal to you, and your fix corrects the\nproblem, then Ok, we can take your patch.\nBut please, if you find the deep reason of this bug, please tell us. If you\nfind that the patch was not needed finally, tell us as well.\nWe will take the patch to help you, but personally, I really wonder if I am\nnot gonna add useless lines to RS.\nIs it fine for you ?\nSt\u00e9phane\n2014-06-12 16:09 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nHourrrraaahhh !!! We understood each other ! :)\nLet me check this.\n2014-06-12 10:06 GMT-04:00 shenwill notifications@github.com:\nS.,\n\nIt's absolutely correct that, before using the Frontia SDK, the project\nitself do not create any other process, there is only main process.\nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself\nand has to be declared in AndroidManifest.xml.\n1. I didn't write any code to take care or communicate or aware of the\n2nd process;\n2. All code lines for Frontia SDK, is the minimum requirements by its\ndocumentation to just make it work. This part does not involve RS at all.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nWill,\nre-read carefully. Okay you got a single service. Good, I understand that\npoint. But your service has to live in the app's main process. If you\nassign it to a different process, it won't work, RS can only work when\nboth\nthe spicemanager and the spiceservice live in the same process.\nNo exception.\nS.\n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com:\n\nHi St\u00e9phane,\nIn the project, there is only one Service class: MidasSpiceService,\nwhich\nextends UncachedSpiceService (SpiceService).\nThere is only one class: MidasSpiceService.class, to initiate new\ninstance: new SpiceManager(MidasSpiceService.class).\nUnbelievable? Right?\nI think I have to update a word in following sentence, which in\nprevious\nemail:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' should not be passed in to onServiceConnected(),\nright?\nIt should be:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' is impossible passed in to onServiceConnected(),\nright?\nSorry, I'm not a native English speaker. And I tried my best to make my\nexpression precisely, but it seemed still not good enough. :-)\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill,\nlet me be super clear as I don't always understand your words.\nif you call new SpiceManager(MyService.class) then MyService.class HAS\nTO\nBE a SpiceService and live in the same process as the activity using\nthe\nspice manger instance.\nIf you call this constructor with something that is not a SpiceService\nthen\nit HAS TO FAIL.\nSo, is there a bug or not ?\nIn other words, do you only call SpiceManager(MyService.class) where\nMyService is a SpiceService and receive the exception (in that case\nthere\nis a bug) OR do you call SpiceManager(MyService2.class) where\nMyService2\nIS NOT a SpiceService and then there is no bug and you are doing\nsomething\nwrong.\nPlease re-read carefully, I can't be more clear.\nSt\u00e9phane\n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com:\n\nHi S.,\nWhy I saw extra text 'Do you mean that onServiceConnected is called\nwith\na\nwrong service ? I mean with a service that has not been bound by a\nSpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an unexpected\n'IBinder of the Service's communication channel' should not be passed\nin\nto\nonServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new\nSpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be\nhacked\nin.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill but I really don't understand the design of your\napp,\nwhat you want to do and how your fix could lead to a working solution\nfor\nservices out of main app process.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45895351\n.\n. PR has been merged in 3440eeb7482a6f5e94fa65cd7e120206ec3a020a\n. You can submit a new PR if you want to add the stuff you describe in points 1 & 2. Good idea.\n\n\nDon't forget to rebase, and branch from master, not release.\n. Can you test the latest snapshot and see if your bug is solved ?\nThx,\n  S.\nLe 12 juin 2014 18:56, \"shenwill\" notifications@github.com a \u00e9crit :\n\nHi St\u00e9phane,\nI just feel sad as you are, because I learnt this issue makes no sense to\nbe happened. It's ugly.\nMy suggestion is, we might take this fix as an active defence action, and:\n1. Put enough in-line comments to help understand why need this check;\n2. Output an error log.\nAlso please don't forget to add another corresponding null check at\nonServiceDisconnected, since spriceService might be null after\nonServiceDisconnected.\nI've checked the rest part code in SpiceManager class for null detections\nfor spriceService, there are all ready.\nThanks,\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670813\u65e5(\u661f\u671f\u4e94) \u51cc\u66680:34\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nWill, really, I can't see why this happens. It looks like I can't create\nan\nandroid test that spans over multiple processes, so I can't test the\nbehaviour you get.\nI really don't understand what happens to you. It's like if adding a\nsecond\nservice in a different process would trigger the onServiceConnected\ncallback of the spice manager. It's really strange.\nBut, if you say that this bug is fatal to you, and your fix corrects the\nproblem, then Ok, we can take your patch.\nBut please, if you find the deep reason of this bug, please tell us. If\nyou\nfind that the patch was not needed finally, tell us as well.\nWe will take the patch to help you, but personally, I really wonder if I\nam\nnot gonna add useless lines to RS.\nIs it fine for you ?\nSt\u00e9phane\n2014-06-12 16:09 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nHourrrraaahhh !!! We understood each other ! :)\nLet me check this.\n2014-06-12 10:06 GMT-04:00 shenwill notifications@github.com:\nS.,\n\nIt's absolutely correct that, before using the Frontia SDK, the project\nitself do not create any other process, there is only main process.\nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself\nand has to be declared in AndroidManifest.xml.\n1. I didn't write any code to take care or communicate or aware of the\n2nd process;\n2. All code lines for Frontia SDK, is the minimum requirements by its\ndocumentation to just make it work. This part does not involve RS at\nall.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nWill,\nre-read carefully. Okay you got a single service. Good, I understand\nthat\npoint. But your service has to live in the app's main process. If you\nassign it to a different process, it won't work, RS can only work when\nboth\nthe spicemanager and the spiceservice live in the same process.\nNo exception.\nS.\n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com:\n\nHi St\u00e9phane,\nIn the project, there is only one Service class: MidasSpiceService,\nwhich\nextends UncachedSpiceService (SpiceService).\nThere is only one class: MidasSpiceService.class, to initiate new\ninstance: new SpiceManager(MidasSpiceService.class).\nUnbelievable? Right?\nI think I have to update a word in following sentence, which in\nprevious\nemail:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' should not be passed in to\nonServiceConnected(),\nright?\nIt should be:\nAre you saying by design, an unexpected 'IBinder of the Service's\ncommunication channel' is impossible passed in to\nonServiceConnected(),\nright?\nSorry, I'm not a native English speaker. And I tried my best to make\nmy\nexpression precisely, but it seemed still not good enough. :-)\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nHi @shenwill,\nlet me be super clear as I don't always understand your words.\nif you call new SpiceManager(MyService.class) then MyService.class\nHAS\nTO\nBE a SpiceService and live in the same process as the activity using\nthe\nspice manger instance.\nIf you call this constructor with something that is not a\nSpiceService\nthen\nit HAS TO FAIL.\nSo, is there a bug or not ?\nIn other words, do you only call SpiceManager(MyService.class) where\nMyService is a SpiceService and receive the exception (in that case\nthere\nis a bug) OR do you call SpiceManager(MyService2.class) where\nMyService2\nIS NOT a SpiceService and then there is no bug and you are doing\nsomething\nwrong.\nPlease re-read carefully, I can't be more clear.\nSt\u00e9phane\n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com:\n\nHi S.,\nWhy I saw extra text 'Do you mean that onServiceConnected is called\nwith\na\nwrong service ? I mean with a service that has not been bound by a\nSpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an\nunexpected\n'IBinder of the Service's communication channel' should not be\npassed\nin\nto\nonServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new\nSpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be\nhacked\nin.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com;\n\u6284\u9001: \"shenwill\"wshenk@hotmail.com;\n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException\nforSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill but I really don't understand the design of\nyour\napp,\nwhat you want to do and how your fix could lead to a working\nsolution\nfor\nservices out of main app process.\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\n\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396>\n\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45895351>\n.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45918367\n.\n. Hi ShenWill,\n\nit really looks like if you tried to link your SpiceMananger to this\nservice. Otherwise, I don't understand why you would get this error.\nAnyhow, the patch has been added, I will add the last lines to log an error\nmessage when the binder is not what is expected, as you did.\nBest of luck with your app,\n St\u00e9phane\n2014-06-13 5:10 GMT+02:00 shenwill notifications@github.com:\n\nI find this QA at\nhttp://stackoverflow.com/questions/10573931/android-service-android-os-binderproxy-error\nIt reminds me with #282\nhttps://github.com/stephanenicolas/robospice/issues/282.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45971744\n.\n. This issue is merged with #280 .\n. Code has moved since then. Please re-open if needed.\n. This question is closed as there is no follow up. Please ask questions on the mailing list. Of course, RS provides this mechanism, indeed as Riccardo pointed it out, it depends on the library you are using to extend RS capabilities, all of them support http authentication, by various means.\n. @nicolabeghin What did you try ?\n. @nicolabeghin you are not far, but it's not the right approach.\n\nAll configuration should be done inside a custom RS service. These services are responsible for creating and customizing the rest template, and then they automatically pass it to all the requests they execute.\nSo put your rest template customization code inside a RoboSpiceSpringAndroidService, and use this service to execute all your requests, they will receive the custom rest template from the service.\n. That's it.\n2014-11-11 10:59 GMT-05:00 nicolabeghin notifications@github.com:\n\nCould you give me a hint on how to proceed? I mean, do I need to override\npublic RestTemplate createRestTemplate()\nor is there a better approach for Jackson2SpringAndroidSpiceService?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/285#issuecomment-62567984\n.\n. The fix has been accepted. Now retry policy will not be applied if network is down. In such a case, requests will be tried only once and trigger a no network exception.\n\nPlease note that it is the responsibility of the network state checker to indicate that network is \"up\" when BOTH in connecting and connected state. The default implementation of the network state checker does exactly that.\n@softwaremaverick , would you like to join the RS contributors team ? You already contributed to a bunch of bug fixes and the team appreciates your coding skills and would be happy to count you in.\nSt\u00e9phane\n. It seems to me that your PR makes sense as is. The network state checker should, at least the default one does, check if network state is either connected or connecting. So, if network is getting up, then the request will be retried. Requests will only be dropped in case there is no network at all which makes a lot of sense.\nI am studying it and merging it right now.\nThx for this fix @softwaremaverick \n. Hi @softwaremaverick ,\nI can't tackle this issue, as I am AFK for a couple of days. If you want this to be part of 1.4.13, and it should definitly !, please submit a PR and contact the maintainers via the discussion group for a fast merge.\nPlease add tests, pass all tests, get a green PR branch to ease merging. Other solution is I add you as maintainer.. that you fully deserve ;)\n. @softwaremaverick , this solution is more complex and obliges to call super.loadDateFromNetwork. We have no control on that and this is quite a change in RS API. \nFor this reason, I drop the PR and stick to the previous solution. Re-open if I missed something.\n. Currently there is no way to do this, but we didn't consider it as useful. A PR would be welcome.\n. To my mind, that should work perfectly. In case you face any issue on\nconcurrent access to the data helper, please let us know.\nS.\nLe 17 avr. 2014 09:08, \"Sergey Eshin\" notifications@github.com a \u00e9crit :\n\nquestion about RoboSpiceDatabaseHelper,We use it in\n1)to cache requests in RoboSpiceService\n2)to access data from database.\nSo, we need to share this RoboSpiceDatabaseHelper.\nand @stephanenicolas https://github.com/stephanenicolas have adviced to\nuse RoboJuice Injections.\nhttp://stackoverflow.com/a/20905083\nSo my question! Can we use thread safe singleton of\nRoboSpiceDatabaseHelper,Both to access data and caching requests?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/294\n.\n. I close the thread as there is no follow-up. Re-open if needed.\n\nPlease ask questions on the mailing list more than on github issues.\n. Hi @seva-ask, I am having a look into this bug fix. Thanks for submitting it.\n. Thx for this bug fix. I am not sure, but you might have solved one of the source of very rarely occuring bug on CI server ... Let's see. \n. Would you mind to send, if not the code which can be long as you said, but the RS trace found in logcat ? And provide us as much information as possible about who is who when giving the trace.\nAlso, does this issue still occur with latest snapshot ?\nQuestion is marked invalid are there are not enough elements to answer yet.\n. As verbose as you want. \nOne thing that is sure is that if shouldStop if called before a call back is called, then it is not called. Usually you call shouldStop as your activity/fragment can't receive any callback any more (as it is dead, or close to). \nWhat I don't get in your case is : ok the fragment is off screen, so detach is called and listener is triggered. But when you re-display it, it will be re-attached and the request will be re launched, so now the listener should get triggered. And it should be pretty fast as the result is in cache or the same previous request is pending.\n. Hi @NationB1 , that's fine. If you could find a way to avoid that bug and have a little time, we would appreciate some feedback. I close the issue meanwhile, please re-open if needed.\n. Gloops. This looks terrible ;) \nCan you confirm that moving the assignment up corrects the bug ? Did you try it yourself ?\n. Thx for submitting this bug, it has been fixed and will be released in 1.4.13. If you wanna try our snapshot, that would help.\n. Done. Thx\n. Thx. Not sure it caused troubles but looks useless.\n. Why can't we just set isStopped to true after having removed all listeners ? It looks to me that the unbinding at the end of the loop is like a good safeguard and makes code more consistent and robust inside the core thread loop. \nWould that solve your problem ? And you are right, that is quite difficult to test.\n. Hi vsevolod,\nI will have more in depth look at it. I am currently struggling with your\nadditional test (where many threads add a request) and it fails on travis.\nI can reproduce the failure on an Android emulator (sdk 19, android q emu\nnon-native emulator) :\nhttps://travis-ci.org/stephanenicolas/robospice/jobs/27227191\nThe test works well on device and genymotion, it appears to be related to\nandroid emulator slowness...\nIf you find the problem, I would be grateful, I am struggling.\nS.\n2014-06-10 11:38 GMT-04:00 Vsevolod Ivanov notifications@github.com:\n\nIf we don't set isStopped to true at the beginning of shouldStopAndJoin\nmethod, some other methods may be called while removing listeners, and we\ncan get some side effects. I can't answer you right now about them, need\nsome investigation.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/302#issuecomment-45630773\n.\n. Looks like something like this is working... I will update the code. Don't\nworry.\nAnd I will reply to your first message after I merge another PR.\n\nS\n2014-06-10 12:10 GMT-04:00 Vsevolod Ivanov notifications@github.com:\n\nMaybe increase timeout up to 10 seconds?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/302#issuecomment-45635217\n.\n. I agree with you that theoretically this might happen (and so this happens sometimes, though I have no first eye confirmation of it). Nevertheless, I tried a couple of things, removing the unbind call (which I don't like), or achieving a better synchronization. But none worked, all had side effects. \n\nI close the thread until 1) we get a confirmation that this creates bugs and 2) you come up with a test pissing PR ?\n. I didn't have a look at your code yet. But what concrete results did you get/notice with this approach ? it seems to me that the ui thread should always have enough time to live freely...\nAnd, last point, do you mind to squash all your commits into one and minimizing the changes (it looks like a lot of lines have been changed to fit a small line width than current RS settings.)\n. Thx for your patch Jorge. Also, I am a bit concerned by the small\nincompatibility you introduce with previous API (getThreadCount does not\nexist anymore). If you could think about a mechanism to preserve the old\nAPI and indicate that it is now deprecated, or renamed, that would be\neasier for clients to switch to new version.\nS.\n2014-06-10 4:12 GMT-04:00 Jorge Vila notifications@github.com:\n\nHi Stephane,\nour requirement was to be able to launch a lot (around 20 requests at\nleast) of requests in an specific event, as first time the app launches\nevery day, and all in parallel. We did not want to keep a pool of 20\nthreads or more reserved, so we thought on using the PoolExecutor\ncapabilities.\nIn fact, the idea would be to be able to specify core and dynamic thread\ncounts, as well as the timeout capabilities for both.\nFinally we are using it, so whenever we fire the rush, the needed threads\nare requested, and we only reserve one thread for the rest of the app. Also\nthis could be implemented in the \"client\" side, when the requests are\nenqueued on the service, but we did not consider that point to be a\nbottleneck.\nI see your point with the commits, I will try to clean it.\nThank you for your support.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/304#issuecomment-45585390\n.\n. I like your change. Thx for submitting it. I am reviewing and testing it and will merge. Thinking about it, I believe you may have found a good way to reduce thread overuse when using multiple spice service (a pretty common use case IMHExperience).\n. Acutally, I have been facing a test issue. Did you run tests ? It looks like threads could have been allowed to be disposed even with a time out of 0, which is forbidden for core threads.\n\nI patched it, but next time, please run tests.\n. Actually, the spring Android Module, as others, use the defaults on many things that be customized. In that case, it showed the problem with defaults settings. Nothing to worry about, but definitly, yes, that worth getting sure everything is fine in all modules.\n. I am struggling with a different travis error (not related to your PR). I will keep you updated via this page. For the bug I mentioned, there will be nothing more to patch. \n. your feature is in. Will be part of next release. Thank you very much for this in-depth contribution.\n. This looks like a concurrent exception. It looks like https://github.com/stephanenicolas/robospice/blob/release/robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java line 220 might be causing such a glitch.\nA synchronized block could be needed when dealing with the cancelation listener inside SpiceRequests. \n@asfdfdfd can you help us figuring if that solution would work ?\n. That can be really tricky to test... \nDo you mind if I close the issue. Any one can re-open it with more details. Thx for reporting the bug @asfdfdfd \n. Sorry for the delay to answer. It looks like the problem you have is that class members from your models are not kept. Could you try : \n-keep class com.elephanti.elephanti.model.**\n-keepclasseswithmembers class com.elephanti.elephanti.model.**\n. This thread is closed as there is no follow-up from the OP. Re-open if needed.\n. Hi @geovanisouza92 , I close this issue as the discussion on the group is satisfying IMHO, and the workaround you submitted doesn't make much sense. Multi threading is a core feature in RS, we worked quite hard to make a robust multi thread approach to boost performances in real life apps through concurrent request processing.\n. Hi all, \nI am pretty busy at the moment, but I would thankfully accept a PR (+tests).\nSt\u00e9phane\n. @softwaremaverick please do contribute if you feel like it.\nI re-open the issue to keep track of it.\n. Hi @softwaremaverick. Feel free to contribute again to RS if you need any\nchange.\nOne thing I wanted to implement would be to pass the request execution into\nthe command execution which is cleaner...\nS.\nLe 2014-09-06 13:19, \"softwaremaverick\" notifications@github.com a \u00e9crit :\n\nActually checking git history I added the requestsInProgress() in\nRequestProcessorListener not allRequestComplete\n;-)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/308#issuecomment-54721222\n.\n. Thx for this very detailled bug report and the workaround you found. \n\nDo your fragments have their own spicemanager or share the same instance ? And is it shared with the host activity's spicemanager (and bound to its life cycle).\nAlso, can you try using onStart/onStop more than onResume/onPause to control the spicemanager life cycle ?\n. The poster of this question seems to be sparsely on github and I doubt we can get an answer any time soon. \nIf anyone faces the same bug, please re-open, we will do our best to respond on time.\n. Thx. Re open if needed.\nLe 11 juin 2014 19:12, \"maciejpigulski\" notifications@github.com a \u00e9crit :\n\nI will anwser with an example soon. I am traveling now and I am not able\nto\nrespond as best as I could. But I am aware of that that issue needs an\nupdate.\nCheers,\nMaciej\nOn 11 Jun 2014 18:59, \"stephanenicolas\" notifications@github.com wrote:\n\nThe poster of this question seems to be sparsely on github and I doubt\nwe\ncan get an answer any time soon.\nIf anyone faces the same bug, please re-open, we will do our best to\nrespond on time.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/issues/311#issuecomment-45769330>\n.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/311#issuecomment-45770981\n.\n. This issue is not related to #251 \n. Please note that this may have been solved by https://github.com/stephanenicolas/robospice/pull/318\n. Thx for reporting the bug and giving as much detail as you could. I must say I don't know what we can do at that point. \n\nI will close the issue and will wait if there are more details coming. I can just reassure you that RS doesn't leak. OnStop is 100% sure to be called (I think you got confused with other callbacks like onDestroy) and we manage memory pretty well. \nFragments life cycle are quite tricky to handle well as they differ from a SDK to another, and are quite complex by essence. But still, we live with very little bugs even if we strongly believe there are some edge cases that we can't figure out precisely where such bugs occur, probably due to some hard to find race conditions.\nSo please, re-open if needed and best of luck with your app. Thx again for the report and sorry for the initial delay to answer.\n. Thanks, I didn't see this update in the docs. But it states that \"After\nthis method\", the system can kill the activity without any line of code\nbeeing executed. So, \"after\" onStop is good and by experience, it is always\ncalled, except if system kills the whole app, which is also quite good to\nprevent memory leaks :)\n2014-06-13 16:04 GMT+02:00 maciejpigulski notifications@github.com:\n\nThanks.\nIn terms of onStop I was referring to the table which is here just below\nthe colorful diagram:\nhttp://developer.android.com/reference/android/app/Activity.html#ActivityLifecycle.\nIn this table onStop method is marked as 'killable', meaning that OS might\non some occasion kill the application while executing the method. Quote:\n\"Note the \"Killable\" column in the above table -- for those methods that\nare marked as being killable, after that method returns the process hosting\nthe activity may killed by the system at any time without another line of\nits code being executed. Because of this, you should use the onPause()\nmethod to write any persistent data (such as user edits) to storage\"\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/311#issuecomment-46014697\n.\n. Looks like not. And sorry, but there aren't enough details to help you solve that problem. Re-open if needed.\n. Did you try to also override getItemViewType. Re-open if needed.\n. Hi @DarioI , really this is too fuzzy to be answered. You should give us some details, and look if the error doesn't come from something else like a http-user agent expected by the server, or something like this.\n\nRe-open if needed, sorry for the delay.\n. I close the issue has it has been answered on SOF. Please follow up there as it's more appropriate for what you report than a github issue.\n. Thx @pdegand. A test would be appreciated in that case.\n. Hi Vselod (@seva-ask),\nwould you mind to squash all your commits into one and make all checks and tests pass and resubmit please ?\nI saw this rule on other projects, namely on Square's, squashing feature branches as single commits really makes merger life much more easy.\nThe PR is marked as invalid until all tests pass, but it is planned for next release.\nS.\n. Thx. I follow up.\n. @seva-ask . Would you mind patching the issue on travis (finbugs synchronization inconsistency). \nNo need to re-open a new PR each time. Just \n- code, \n- push on the same branch as much as you want to trigger the build on travis\n- when it passes, squash your commits\n- push --force on your remote and it will trigger the build one last time with a single commit.\nThen tell me to review and merge ;)\n. Oh, and don't forget to rebase from current master, in case some recent commit changed anything regarding your patch.\n. Thx for this fix. It was really clear and easy to merge.\n. Do you start the spiceManager ?\nPlease ask questions on the mailing list more than the github issue board.\n. Hello @0xPr0xy , \nit looks like you added your own layers to RS : SpiceHelper, ActivityHelper, and some other static methods to make the request calls. \nIt's hard to find out exactly how well you use RoboSpice underneath and I would spend some time in your code to understand this problem. Please, if you want to ask a question, try to inline and simplify your code and calls to RS to explain us clearly what your problem is with RS, so that we don't have to understand all your own layers of code.\n. You are right dori dori, this should work and this is a bug. Though, as you said it's far more clear to execute requests after starting the spice manager.\nSo you say the bug only has a very low probability to happen ?\n. I added a test that does 50 times : execute a request, then start the spicemanager and assert that the request has been executed. It looks like it works.\nAre you sure there is an issue with this, or can you look at the above commit and see if it's really different from your code ?\n. It looks like I can reproduce this bad behavior on travis only for now, I\nam trying to work on it.\nThanks for your feedback,\n St\u00e9phane\n2014-06-13 9:46 GMT+02:00 Dorian Cussen notifications@github.com:\n\nWell a few things differnt to the commit\n1) I am calling the two arg execute method\n2) The test is using stubs whereas I am using the Activity callbacks - I\nsuspect do to the transient nature of the bug a race condition may be\npresent. Maybe the tests could run using actual Activities depending on\nyour TDD setup?\n3) All I am doing in this SpiceRequest subclass at present is reading a\njson file from assets - so it could possibly hang there - but I have not\nseen this happen before\nI would love to spend more time testing this but at present am on a crazy\ndeadline so for now have moved execute to onStart and have not seen the\nissue arise yet.\nThanks :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-45984335\n.\n. Great stuff !! \n\nI am close to understand what happens (sovling it is another problem...). I added a few more messages to distinguish the 2 problems I can see. Can you use a RS rebuilt from current master ?\nIf you could send me the exact same stack trace with this new version, it would help a lot.\nAnd do you know why the first spicemanager says it has stopped before executing the request ? Is it possible shouldStop has been called already, before trying to execute the request ?\nI can also deploy a snapshot if you prefer\nThx for your follow up.\n. Hi @doridori , \nI will close the issue as this seems to only occur when screen is off due to a special life cycle.\nAll execute methods are cache aware, so I don't really understand what you mean in 1).\nIn 2), yes, there is a good reason for that : onStart/onStop methods are the favorite places to bind and unbind from a service. I used to refer to this post when coding : http://stackoverflow.com/questions/2304086/binding-to-service-in-oncreate-or-in-onresume\nBut now, I realize that onCreate, onDestroy is also a very good place to do it as you suggested. And it could actually make RS code a bit simpler.... Do you wanna try it and tell me if the error still happens or if it works super fine ?\nAnd the documentation is encouraging for onDestroy : \nhttp://developer.android.com/reference/android/app/Activity.html#onDestroy()\nas we do handle a lot of threading in RS...\nAnd you are right, the views are still around, until onDetachedFromWindow indeed, which seems to occur after onDestroy. \nLet's try it out. I think you just changed the way RS can be used ;)\n. LOL, I tried to provides a synthesis of the situation and couldn't get it out clearly. I got completely fucked up :)\nWell, this is worth more experiments and a clear documentation. WDYT @doridori ?\nI see something like 3 dimensions to consider : \n1. at which level is the spicemanager lifecycle managed : activities or fragments ? \n2. is the spice manager shared or not ?\n3. what do listeners do ? If they don't manipulate views, or manipulate views of the activity, or views of the fragments/sub-fragments then could have potentially different life cycles or check different conditions before doing stuff\nDo we prefer to promote a secure, easy method or provide super fine grained & hard to understand informations or both ?\n. @doridori , a spicemanager is linked to a context via start, so it removes all listeners associated to this activity and only to it on shouldStop.\nIf we go for something secured and easy then onStart/onStop is valid, may be onCreate/onDestroy doesn't change much. We already warn users to protect their calls against dead fragments in the wiki.\nI just added some special notes on fragments in the Start Guide to make it more clear : \nhttps://github.com/stephanenicolas/robospice/wiki/Starter-guide\n. If fragments are using their own instance of spice manager then each\ninstance will remove its own callbacks, i.e the callbacks that were tied to\na request via execute on this instance.\nIf the spice manager instance is shared, then I think the onStop of a\nfragment will simply stopped the shared manager and drop all requests\nlaunched from the activity or fragments, in the meaning that requests will\nbe executed but listeners won't be triggered. But the instance of\nspicemanager can be restarted by another fragment (typically this will\nhappen during a fragment transition) and then the new requests will be\nexecuted and their listeners triggered.\nI know this can look tricky, but really it's not and it seems to me it's a\nconsequence of the clear contract of the spicemanager.\nSt\u00e9phane\n2014-06-16 11:04 GMT+02:00 Dorian Cussen notifications@github.com:\n\nAre you referring to\nin your listeners, check if the Fragment.isAdded() before performing any\nmanipulations on views as the fragment views can be destroyed before onStop\nis called in a Fragment.\nI would say this may be slightly misleading as\n1) according to the docs views are destroyed after onStop and before\nonDestory\n2) unless i am misunderstanding how RS works the reason the callback may\nstill happen in a Fragment and is when one Activity may hold 2 fragments,\nsay B & C. If fragment B is shown and calls\nSpiceManager.start(getActivity()) and SpiceManager.shouldStop() and then\ntransitions to fragment C which calls SpiceManager.start(getActivity())\nthey are using the same context, so couldnt B still get a callback in this\nsituation?\n3) As a side note if B is correct isnt it dangerous to allow a Context to\nbe passed in as opposed to an Activity for SpiceManager.start(Context) as\nthen the safety feature of not calling back after onStop may be broken?\nIm probably misunderstanding how it ties the callback to the context :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-46155742\n.\n. It would be more homogenous to advise to always use onCreate/onDestroy for\nboth fragments and activities and advise devs to raise a few safeguards\nregarding fragments.\n\nSt\u00e9phane\n2014-06-16 11:25 GMT+02:00 Dorian Cussen notifications@github.com:\n\nof course - makes perfect sense, thx for explaining. I would still say the\ndoc may need a tweak for the (1) point above.\nI guess the reason this is awkward is that fragments and Activities have\ndiffernt lifecycles. Activitys views are intact in onDestroy and Fragments\nare not.\nit seems that both approaches (onCreate/onDestroy vs onStart/onStop) have\nadvantages / disadvantages...\nIMHO if definiitely makes sense for Activitys to use onCreate but for\nfragments its unclear as both approaches will be more verbose\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-46157534\n.\n. Hi @doridori,\n\nthanks for the blog post, it's also always appreciated to see enthousiastic\nusers sharing their experience.\nI understand your point about the safeguard (nothing more than checking if\nviews are still around), so maybe we could suggest that fragments use the\nonCreateView and onDestroyView. But really, that would not gain much, the\ncurrent advise with onStart/onStop on both activities and fragments is\nmaybe just the simplest solution as it is quite easy to remember.\nSt\u00e9phane\n2014-06-16 12:19 GMT+02:00 Dorian Cussen notifications@github.com:\n\nWhat would the safeguards be in practise though? On callback inside a\nfragment one would need to check if the view hierarchy still exits / is\nattached to a context and make the required changed, if it doesnt exist\nwould need to save the state in someway and then in\nFragment.onViewCreated() would need to build the new views accordingly.\nI cant decide if this is better than the current approach of using onStart\nand onStop with the caching execute methods. Thing is, will some api\ncalls like login it does not feel right to cache the results for this\npurpose. I guess an in-mem cache that holds the last result only would be\nfine for something like that. For me its a choice between these two\napproaches - and personally i dislike checking if views exist in callbacks\nwhich is one of the things that attracted me to RS in the first place.....\nGoing to play with caching today anyhow so may have some more thoughts\nafter that. Im writing a little RS blog post atm too :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-46162152\n.\n. I don't think there is not much difference with what we currently have.\n\nThe only thing to make clear for Devs is that after shouldstop is called,\nthere is no callback triggered. But this asynchronous and in rare cases,\nlistener still seem to be triggered...\nMaybe I could add a latch to receive the response of the service,\nacknowledging it could remove all callbacks, before returning from should\nstop, still not a 100% protection but it could help.\nSt\u00e9phane\nLe 16 juin 2014 13:14, \"Dorian Cussen\" notifications@github.com a \u00e9crit :\n\nYou are right that would not gain much (if anything) over onStart/onStop.\nI will have a think about this - yes i agree for now about leaving as is -\nbut maybe worth explicitly mentioning that using the 2 arg execute method\nwith onStart / onStop may result in the callback not being received if\nthe app is in the background.\nWill have a think! I think personally I may just have a differnt approach\nin Activities as I will in fragments. I guess its good practise NOT to use\nthe two arg execute constructor as you dont get the full across lifecycle\nbenefit of RS anyways...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-46166320\n.\n. @doridori, it was gonna implement something in that direction, but then I\nrealized that there is no need for it : I have been wrong when saying that\nthe removal of callbacks is asynchronous. It is purely synchronous. The bug\nthat @seva-ask recently related to unbinding of service is supposed to have\ncompletely solved this kind of bugs. I don't think anything like a late\ncallback invocation can happen anymore with the upcoming 1.4.13 version of\nRS.\n\nS.\n2014-06-16 15:46 GMT+02:00 Dorian Cussen notifications@github.com:\n\nNo your right - its no difference apart from documentation :)\nBut this asynchronous and in rare cases,\nlistener still seem to be triggered...\nthat worries me...this could be a src of potential bugs :/ can a flag in\nSpiceService be checked before a callback is made?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/321#issuecomment-46179739\n.\n. Would you mind to give the least version number desired ?\n. @nkeskinov thanks to have been a little bit conservative and not moving too fast to retrofit 2.0.0. We can wait a bit until it becomes really stable.\n. Is it the same instance of SpiceManager, or at least 2 instances related to the same service class ?\n\nQuestion is marked as invalid as we need more details. If you had a test that fails, that would help too.\n. Does it happen all the time (that it doesn't work) or under uncertain and hard to reproduce circomstances ?\n. Please use our google group for questions.\n. This issue is assigned to milestone 1.5.0. We can create a branch for it, or release 1.4.13 soon, move to 1.5.0-SNAPSHOT and tackle this quickly afterwards. \nTo my mind we could even go for minSDK = 10 now.\n. Hi gaetan,\nCan you close this issue and post you question, as all questions, on the\nGoogle discussion group please ?\nS.\nLe 10 juil. 2014 08:30, \"Ga\u00ebtan Muller\" notifications@github.com a \u00e9crit :\n\nDo you have any estimate date for the release of the version 1.4.13?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/328#issuecomment-48569674\n.\n. Sorry for the delay @jorgevila . This bug looks really interesting but I don't have much time to tackle it for now. I am on some hot new OSS stuff.\n\nIf you could come up with a PR + tests, that would be really great.\n. Thx @nkeskinov . \n. Yes Nikola. Android emulator 8 is dead. We have to repair travis build and update min SDK for RS. \nI think android 9 has no emulator. Maybe min SDK =9 and min emulator = 10...\n. And you can merge. It would be good if we could repair Travis too.\n. You got 2 choices @deM1d : \n- use a singleton (activity scoped) for your SpiceManager. In that case, you should only manage it at the activity level, and pass it to your fragments. This can passed by pulling it from the fragment : ((MyActivity) getActivity).getSpiceManager() for instance.\n- use a different spiceManager instance in each fragment. In that case, all instances have to be managed at the fragment level. \nI could never get a clear idea of which practice is best. Intuitively, I would think sharing the instance is best.\n. Wow @maciejpigulski , thank you for this very detailed answer. Would you like to contribute a FAQ entry for RS about this ?\n. I can add you to contributors. The simplest way. WDYT ?\nOr you can also put that in any wiki page in md on GitHub, and I will pick\nit from there.\nS.\n2014-10-24 3:20 GMT-04:00 Maciej Pigulski notifications@github.com:\n\n@stephanenicolas https://github.com/stephanenicolas sure, no problem.\nDo I need any special permissions to do this? Or how do I do it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/333#issuecomment-60352828\n.\n. Welcome to the team Maciej. :) Please update changelog and add your name.\n. If this bug is confirmed on Android L, please provide more details. It would be high priority. For now, I got really no idea about what's going on.\n\nI don't close the thread right now but mark it as invalid as we don't have enough information on it.\n. Please provide a more detailed suggestion, or even better a PR, or an API design.\nIssue is marked 'till then. It will be closed if there is no further activity in this thread.\n. Go for a PR, please, base on master, not release.\nS.\n2014-09-08 13:10 GMT-04:00 softwaremaverick notifications@github.com:\n\nAs an exercise I recommend you look at doing the changes as cleanly as\npossible as it should be relatively straight forward (ish).\nAs a clue look at the addRequest method of RequestProcessor\nOn 8 September 2014 15:28:29 BST, Radu Muresan notifications@github.com\nwrote:\n\nHow about this:\njava\npublic interface PendingRequestListener<RESULT> extends\nRequestListener<RESULT> {\nvoid onRequestNotFound();\nvoid onRequestFound(Request request);\n}\nHaving the request as a parameter would allow easily making the\nonSuccess/onFailure dependent on the inner state of the request - for\nexample (not the greatest example, but bear with me), you have\nLoginRequest with a username field:\njava\nLoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\nand later, after rotation, trying to reconnect (while no longer having\naccess to the original request or its listener (see how knowing what\nrequest this connected to allows the success and failure callbacks to\ndo what they need to do - as opposed to what's happening right now,\nwhich would force storing this extra state somewhere else rather than\nthe request):\njava\nPendingRequestListener listener = new PendingRequestListener(){\nvoid onRequestNotFound(){}//do nothing\nvoid onRequestFound(Request request){\nthis.foundLoginRequest = request;\n}\nvoid onRequestSuccess(){\nalert(\"Logged in as:\"+foundLoginRequest.getUserName());\n}\nvoid onRequestFailure(){\n//etc\n}\n}\n}\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/335#issuecomment-54826816\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/335#issuecomment-54853253\n.\n. Thx ! Updated Wiki entry on proguard : https://github.com/stephanenicolas/robospice/wiki/Proguard-configuration-for-RoboSpice-projects\n. I am not sure we need any refactor. All we might need is to limit the length of sanitized keys. No ?\n\nI would also like to say that everyone can provide a better implementation of the KeySanitizer interface\u00e9 We are open to PRs if you find a better implementation.  Please re-open if needed.\n. @andreabreu-me I have read your thread a long time ago. I find it interesting but really I don't have enough time to read it in depth and try to see if I would like to implement it or not. But it really looks interesting...\nI plan the feature for 1.5.0, hoping to get some time or some contribution for it.\n. We will drop support, as explained in CHANGELOG of 1.4.13-SNAPSHOT, because android emulator is not available anymore for SDK < 10. This we lost CI automated testing and can't guarantee things still work. \nWe will provide best effort support though, and as RS is full jar lib, there is absolutely no impact at all if you want to remain compatible with SDK 7+.\nThanks for asking,\n St\u00e9phane\n. FAQ entry added. \nhttps://github.com/stephanenicolas/robospice/wiki/Advanced-RoboSpice-Usages-and-FAQ\n. Has this been merged ? Can it be closed ? If you need a review, please squash a ping me / team.\nThx !\n. Hi @nikola,\nI Will have a look at it next week.\nSt\u00e9phane\nLe 2014-07-18 15:08, \"Nikola Keskinov\" notifications@github.com a \u00e9crit :\n\n@stephanenicolas https://github.com/stephanenicolas The last commits\nyou can see are the nearest to squashing I could get.\nThe merge commit 94dbd66\nhttps://github.com/stephanenicolas/robospice/commit/94dbd66 has no\nchanges, but it had to be here because the previous comments were reverted.\nAbout the functionality, it lacks tests, as discussed by email.\nHowever, I can see no simple way of mocking a ListView that would force\nscroll behavior in order to check if the wrapped OnScrollListener methods\nwere called. Ideas are welcome. The reason for this is that all ListView's\nmethods are private and many things are checked (due to optimization)\nbefore the OnScrollListener's methods are called.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/340#issuecomment-49468345\n.\n. Hi @nkeskinov , sorry for the delay, it took me a while to have an eye on this PR. \n\nI did, and added tests. As soon as the build passes, I will merge it. I hope to release asap.\n. Hi @ollie72, yes it is by design. My main motivation is that when implementing a state machine, even as simple as this, there is no reason to allow weird transition. As a developer I would expect and prefer to get an exception better than a silent fail that could hide other problems.\nBtw, are you sure you don't use the same instance of spice manager elsewhere, likely in a fragment or through DI with a bad scope...\nSt\u00e9phane\n. Bug is closed. Thx @shenwill for your lights on this. @lauraoran please re-open if the fix didn't solve your problem.\n. Which version did you get that in ? Closing as there are not enough details. Re-open if needed.\n. Hi @equatorapps , sorry but the ormlite module is not actively maintained. Without being deprecated, no one maintains the module and, as it is quite complex to interact with OrmLite (a complex lib).\nI can't answer the question. We still look for a contributor that would maintain and enhance this module, which, for sure has a great potential.\n. Question has been answered on stack over flow. Read above.\n. Thanks for providing more details about such exceptions. The actual line number you provided us reaches the middle of javadoc in current source version...\n. The versions of a few libraries have been updated : \n- jackson2\n- gson\n- retrofit & jackson converter\n- google http client.\nEverything will be released 1.4.14.\n. Hi @jtietema , sorry but the patch completely escaped my scope. We thought to go for a 1.5.0 release but it looks like we had less time than we thought for this release yet. Personally, I am completely in something else for now. \nSo, the solution might be to refork from the last stable version a version 1.4.14, including the patch. I will see what I can do in the next few days. I hope this is fine for you. Thanks to @jtietema and @skhanzada  for submitting the patch.\nSt\u00e9phane\n. Thx. This has been merged. 1.4.14 should be released within hours. \n. RS 1.4.14 is released and should hit central within 2 hours. Thx for your contributions.\n. The only way to get this class cast exception at this point in RS is that the SpiceService is declared to run inside another process inside your AndroidManifest. \nIf this is not the case, please re-open, and provide more details. Thx for reporting the problem, but we can't do anything with so little information.\nBTW, if you want to merge some of your cosmetics change of RocketSpiceManager in RS, open a PR : contributions (and contributors are welcome).\n. Thx for reporting the bug but really it doesn't make sense at all. The only explanation that comes to my mind is a problem in Sony's Android implementation. If you have more details on what happens, please let us know. \n. @nugmanovagulnaz , like @MGaetan89 said, the only possible possible issue in RS .1.4.13 is that you change the set of listeners attached to a request from inside a listener callback. Please read fully the long thread of #91. Or read the FAQ entry about the ConcurrentModificationException. This bug has been investigated in depth and chances are it's on your side.\nRe-open if needed, though #91 would be a better place.\n. If you really want to catch this kind of exceptions, the best is to run your requests from within an Android Service. The service will still leave until the requests are complete and can keep track of exceptions that occurred while requests were processed, even if the app is in the background.\nBut this feature would require a large refactoring of RS and I don't think it's a very common requirement that would justify more than the above way of achieving it.\n. Did you check the FAQ entry about this ?\nPlease ask questions on discussion group.\n. Ask questions on discussion group. This is not an issue. \n. And note that contributions are welcome if you find a generic response to\nthis problem @Geobert Quach.\n2014-09-15 3:49 GMT-04:00 Nikola Keskinov notifications@github.com:\n\nNo, there is no RoboSpice implementation for ExpandableListView.\nBTW, please ask questions on the discussion group.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/360#issuecomment-55560947\n.\n. Nikola is right, as long as the cache key is null, nothing can go to the\ncache or be pulled from it. The value of cache expiry is simply discarded.\n\nBut was there anything wrong with this method ?\nSt\u00e9phane\n2014-09-18 4:27 GMT-04:00 Nikola Keskinov notifications@github.com:\n\nI guess that the cacheKey argument passed as null does the trick of\nskipping the cache (see\nhttps://github.com/stephanenicolas/robospice/blob/a8290e4d964a3373e558d12fe9baffd33cb9d4c7/robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java#L94),\nbit indeed, DurationInMillis.NEVER or DurationInMillis.ALWAYS_EXPIRED (they\nhave the same value) would make more sense.\nPull requests are welcome.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/361#issuecomment-56009093\n.\n. nw, go on reviewing the code. There is room for improvement ;)\n. I don't put so much aesthethics in a private method ;) But we accept PRs. ;)\n\n2014-09-29 0:07 GMT+02:00 MrChriZ notifications@github.com:\n\nAh just found this. Surely it should be fixed just from an aesthetics\npoint of view....\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/361#issuecomment-57102112\n.\n. Hi @KingWu, issue board is not the place to ask for support. Please, use the google discussion group.\n. Guys,\n\nPlease find out where the problem comes from and report an issue to android\nbuild tools team if needed, thus will affect quite a lot of libraries.\nS.\nLe 2014-09-26 09:43, \"Riccardo Ciovati\" notifications@github.com a \u00e9crit :\n\nIHMO it's related to the Android Gradle Plugin or to Gradle itself.\nI just need to reproduce it in a brand new project.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/365#issuecomment-56929616\n.\n. Hello @issacbalaji , sorry but your question is not clear at all. Please use RS discussion group to ask question. Also try to be more clear, provide a stack trace if possible, and sample code.\n. Too fuzzy. Please use discussion group.\n. The RS RetrofitService are more designed to create one android service per retrofit service. \n\nYou should create 2 distinct RS Retrofit service. I don't see how we could distinghuish them. Which parameter could be used by getServerUrl to make a \"if\" statement ?\n. I guess the problem comes from the fact that each fragment manages its own\nSpiceManager.\nIf so, the SpiceManager is stopped and a new one is restarted when you\npress home and resume the app. Then they start a different spice service.\nAs you service seems to have a memory cache only, it is not filled anymore\nwith you value.\nBut it doesn't explain why the same manager can be static and that works.\nCan you try with a real disk cache ?\nIf you want the SpiceManager to be shared by fragments, manage it at the\nactivity level and pass it to the fragments.\nS.\nLe 2014-10-08 14:49, \"Stephan Petzl\" notifications@github.com a \u00e9crit :\n\nAs long as I am staying in the same fragment the cache works perfectly\nfine. BUT as soon as I am switching the app to the background and then\nreloading the data onResume(), the cache is not valid anymore and a network\nconnection is made.\nHere is my code (in fragment.onResume()):\nprotected void loadData(final OnDataLoadListener onDataLoadListener) {\n       final ReverseStringRequestListener listener = new ReverseStringRequestListener(onDataLoadListener);\n       final String cacheKey = \"cacheKey234234\";\n       final ConfigFeedRequest request = new ConfigFeedRequest(\"http://app.tty-eli.com/index.php?id=3\");\n       getSpiceManager().getFromCacheAndLoadFromNetworkIfExpired(request, cacheKey, DurationInMillis.ONE_SECOND * 50, listener);\n}\nAny ideas why this might happen?\nI am creating the SpiceManager in the class header of the fragment like\nthat:\nprivate SpiceManager spiceManager = new SpiceManager(InMemorySpiceService.class);\nHere is the log:\n10-07 16:07:06.595    5618-5618/at.tty_eli.app D//SpiceManager.java:212\ufe55 16:07:06.606 main SpiceManager started.\n10-07 16:07:06.605    5618-5618/at.tty_eli.app V/AppointmentFragment_\ufe55 onResume\n10-07 16:07:06.605    5618-5618/at.tty_eli.app D//SpiceManager.java:489\ufe55 16:07:06.619 main adding request to request queue\n10-07 16:07:06.605    5618-5618/at.tty_eli.app D/AbsListView\ufe55 onVisibilityChanged() is called, visibility : 0\n10-07 16:07:06.605    5618-5618/at.tty_eli.app D/AbsListView\ufe55 unregisterIRListener() is called\n10-07 16:07:06.615    5618-6034/at.tty_eli.app V//SpiceManager.java:1191\ufe55 16:07:06.623 SpiceManagerThread 2 Binding to service.\n10-07 16:07:06.625    5618-5618/at.tty_eli.app D//SpiceService.java:134\ufe55 16:07:06.631 main SpiceService instance created.\n10-07 16:07:06.625    5618-5618/at.tty_eli.app D/AbsListView\ufe55 unregisterIRListener() is called\n10-07 16:07:06.625    5618-6034/at.tty_eli.app V//SpiceManager.java:1197\ufe55 16:07:06.633 SpiceManagerThread 2 Binding to service succeeded.\n10-07 16:07:06.625    5618-6034/at.tty_eli.app D//SpiceManager.java:1245\ufe55 16:07:06.637 SpiceManagerThread 2 Waiting for service to be bound.\n10-07 16:07:06.645    5618-5618/at.tty_eli.app V//SpiceService.java:506\ufe55 16:07:06.656 main Pending requests : 0\n10-07 16:07:06.645    5618-5618/at.tty_eli.app V//SpiceService.java:508\ufe55 16:07:06.658 main Stop foreground\n10-07 16:07:06.655    5618-5618/at.tty_eli.app D//SpiceServiceListenerNotifier.java:33\ufe55 16:07:06.662 main Message Queue starting\n10-07 16:07:06.655    5618-5618/at.tty_eli.app D//SpiceManager.java:1088\ufe55 16:07:06.664 main Bound to service : InMemorySpiceService\n10-07 16:07:06.665    5618-6034/at.tty_eli.app D//SpiceManager.java:1252\ufe55 16:07:06.673 SpiceManagerThread 2 Bound ok.\n10-07 16:07:06.665    5618-6034/at.tty_eli.app D//SpiceManager.java:286\ufe55 16:07:06.678 SpiceManagerThread 2 Sending request to service : CachedSpiceRequest\n10-07 16:07:06.675    5618-6034/at.tty_eli.app D//RequestProcessor.java:63\ufe55 16:07:06.683 SpiceManagerThread 2 Adding request to queue 1121951496: CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50] size is 0\n10-07 16:07:06.675    5618-6034/at.tty_eli.app D//RequestProcessor.java:85\ufe55 16:07:06.689 SpiceManagerThread 2 Adding entry for type class at.tty_eli.app.network.ConfigFeedResponse and cacheKey cacheKey234234.\n10-07 16:07:06.685    5618-6034/at.tty_eli.app D//RequestProgressManager.java:61\ufe55 16:07:06.692 SpiceManagerThread 2 Request was added to queue.\n10-07 16:07:06.685    5618-6034/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:06.695 SpiceManagerThread 2 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:06.685    5618-5618/at.tty_eli.app D//SpiceServiceListenerNotifier.java:175\ufe55 16:07:06.698 main Processing request added: CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50]\n10-07 16:07:06.695    5618-6034/at.tty_eli.app D//RequestProgressManager.java:82\ufe55 16:07:06.703 SpiceManagerThread 2 Sending progress PENDING\n10-07 16:07:06.695    5618-6034/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:06.708 SpiceManagerThread 2 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:06.705    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:131\ufe55 16:07:06.710 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42c24c88\n10-07 16:07:06.705    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:83\ufe55 16:07:06.714 Thread-6031 Processing request : CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50]\n10-07 16:07:06.705    5618-6034/at.tty_eli.app V//SpiceService.java:506\ufe55 16:07:06.713 SpiceManagerThread 2 Pending requests : 1\n10-07 16:07:06.705    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:97\ufe55 16:07:06.718 Thread-6031 Loading request from cache : CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50]\n10-07 16:07:06.715    5618-6038/at.tty_eli.app D//RequestProgressManager.java:82\ufe55 16:07:06.720 Thread-6031 Sending progress READING_FROM_CACHE\n10-07 16:07:06.715    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:06.727 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:06.715    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:131\ufe55 16:07:06.729 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42b0d130\n10-07 16:07:06.725    5618-6034/at.tty_eli.app V//SpiceService.java:508\ufe55 16:07:06.716 SpiceManagerThread 2 Stop foreground\n10-07 16:07:06.725    5618-6038/at.tty_eli.app D//LruCacheObjectPersister.java:47\ufe55 16:07:06.732 Thread-6031 Miss from lru cache for cacheKey234234\n10-07 16:07:06.725    5618-6038/at.tty_eli.app D//LruCacheObjectPersister.java:47\ufe55 16:07:06.737 Thread-6031 Miss from lru cache for cacheKey234234\n10-07 16:07:06.735    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:129\ufe55 16:07:06.741 Thread-6031 Cache content not available or expired or disabled\n10-07 16:07:06.745    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:148\ufe55 16:07:06.751 Thread-6031 Calling netwok request.\n10-07 16:07:06.745    5618-6038/at.tty_eli.app D//RequestProgressManager.java:82\ufe55 16:07:06.755 Thread-6031 Sending progress LOADING_FROM_NETWORK\n10-07 16:07:06.755    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:06.760 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:06.755    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:131\ufe55 16:07:06.763 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42c11c38\n10-07 16:07:10.435    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:151\ufe55 16:07:10.442 Thread-6031 Network request call ended.\n10-07 16:07:10.435    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:171\ufe55 16:07:10.447 Thread-6031 Start caching content...\n10-07 16:07:10.445    5618-6038/at.tty_eli.app D//RequestProgressManager.java:82\ufe55 16:07:10.453 Thread-6031 Sending progress WRITING_TO_CACHE\n10-07 16:07:10.455    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:10.459 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:10.455    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:131\ufe55 16:07:10.462 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42a3aa28\n10-07 16:07:10.455    5618-6038/at.tty_eli.app D//LruCacheObjectPersister.java:74\ufe55 16:07:10.467 Thread-6031 Put in lru cache for cacheKey234234\n10-07 16:07:10.465    5618-6038/at.tty_eli.app D//RequestProgressManager.java:82\ufe55 16:07:10.473 Thread-6031 Sending progress COMPLETE\n10-07 16:07:10.475    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:10.480 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:10.475    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:131\ufe55 16:07:10.483 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42a977a0\n10-07 16:07:10.475    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:10.488 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:10.485    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:166\ufe55 16:07:10.491 main Notifying 1 listeners of request success\n10-07 16:07:10.485    5618-5618/at.tty_eli.app V//DefaultRequestListenerNotifier.java:172\ufe55 16:07:10.494 main Notifying ReverseStringRequestListener\n10-07 16:07:10.485    5618-5618/at.tty_eli.app V/AppointmentFragment_\ufe55 onDataReady\n10-07 16:07:10.495    5618-6038/at.tty_eli.app V//RequestProgressManager.java:161\ufe55 16:07:10.503 Thread-6031 Removing CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50]  size is 1\n10-07 16:07:10.505    5618-6038/at.tty_eli.app D//RequestProgressManager.java:91\ufe55 16:07:10.508 Thread-6031 Sending all request complete.\n10-07 16:07:10.515    5618-6038/at.tty_eli.app V//SpiceService.java:495\ufe55 16:07:10.520 Thread-6031 Pending requests : 0\n10-07 16:07:10.515    5618-6038/at.tty_eli.app D//SpiceServiceListenerNotifier.java:146\ufe55 16:07:10.524 Thread-6031 Message queue is Handler (android.os.Handler) {42dfa580}\n10-07 16:07:10.545    5618-5618/at.tty_eli.app D/AbsListView\ufe55 unregisterIRListener() is called\n10-07 16:07:10.565    5618-6038/at.tty_eli.app D//DefaultRequestRunner.java:295\ufe55 16:07:10.569 Thread-6031 It tooks 3828 ms to process request CachedSpiceRequest [requestCacheKey=cacheKey234234, cacheDuration=50000, spiceRequest=at.tty_eli.app.network.ConfigFeedRequest@42c24c50].\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/370.\n. I don't understand @Stephan Petzl, as service is like an activity. These\nthings live and die and have a life cycle. There are no chances you can get\na service to survive for ever. So, yes, every time you start a new spice\nmanager it will start a new service. The only exception is that if a spice\nservice is already started, your new spicemanager will use it, but this\nrarely happen and no one has a real control over it.\n\nThere is a true limitation in your approach when using a RAM only cache\nmanager. This can be super fast and convenient but you don't persist the\nstate of the cache if you don't write it somewhere.\nSo there are 2 solutions here :\n- either you use a disk cache as intended in RS\n- or you can use a small hack and use a cache manager in RAM only that is a\n  singleton and reused by all your instances of your spice service. But even,\n  then you will never be able to guarantee that this cache manager will\n  always be there as android apps can be wiped out by the system at any time.\n  This is a the core of android programming model : make apps transients so\n  that they don't fill up the system memory for ever..\nS.\n2014-10-10 10:20 GMT-04:00 Stephan Petzl notifications@github.com:\n\nJust debugged a little further: Indeed, each time I switch from one\nfragment to another a new SpiceService and thus a new CacheManager is\ncreated. Can you tell me why this is happening?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/370#issuecomment-58662031\n.\n. Hi  @Nikola Keskinov and @Stephan Petzl,\n\nStephan, from a user perspective I know it can be surprising but that is\nwhat Android programming is about : preserving resources through life\ncycles. Things live and die and free resources on Android.\nSo, I think it's really a better idea to stick to using a disk cache and\nuse RAM caching with great care in RS and in Android in general.\nThat's why RS provides so many options for disk  caching data.\nAdding a RAM cache is still possible. Personally I would prefer a singleton\nRAM cache to decorate/backed by a disk cache at the service level. But\nmaybe @Nikola Keskinov's solution is a simpler .. I would need to see it in\na PR to judge ;)\nS.\n2014-10-16 5:25 GMT-04:00 Nikola Keskinov notifications@github.com:\n\n@stoefln https://github.com/stoefln, In our application, we have\nextended the SpiceManager by adding our own execute method and implemented\na singleton LruCache. This way, we are synchronously checking the\nLruCache before anything has been submitted to the SpiceService, giving us\na considerable performance gain when there is a cache hit.\nThis is a simple paradigm which improved responsiveness for us\ndramatically, but it adds \"synchronicity\" and is not part of the\nRoboSpice's underlying idea. However, if I understood your challenge\ncorrectly, it may help in your case.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/370#issuecomment-59335808\n.\n. If this is related to the client side, then it's a Google Http Java Client question, but not related to RS. That's the reason why I marked this thread invalid and close it. \n. Use the overload of execute that doesn't accept a cachekey, nothing will be\ncached then.\n\nIt's not normal at all that you get the same result in cache with different\ncache keys. There is something wrong in your code. RS doesn't rely at all\non URLs, no matter how close they are, to identify request results.\nS.\n2014-11-12 18:10 GMT-05:00 ceetah notifications@github.com:\n\nHi\nrobospice spring android setup. I am trying to get some songs from a rest\nservice, same url different parameter \"page\" each time.\nI use this:\nspiceManager.execute(request, request.createCacheKey(),\nDurationInMillis.ALWAYS_EXPIRED, new RequestListener() {...\nwhere\nSongs is a class that Jackson uses to deserialize data in.\nrequest is a SpringAndroidSpiceRequest\nrequest.createCacheKey() always returns a different string (I use a Random\nto make sure)\nyet the response for page=1 and page=2 are the same\n(no its not a server issue, tried it in an online rest tool and it works\nfine)\ncan someone help me please?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/377.\n. The reason is that commons introduced some feature, by memory an array copy, that was not available on android in some SDK release.\n\nIf you could try to upgrade the version and get the build to pass or identify the SDK minimum version, we can talk about upgrading it.\nNote that nothing prevents you from using a more recent commons version in your own app..\n. That's the point. Thanks @maciej\n2014-11-18 23:21 GMT-08:00 Maciej Pigulski notifications@github.com:\n\nThey run asynchronously in a worker thread that is a different thread then\nUI Thread, they just do not run in parallel. As far as I remember I have\nread somewhere that since Android 4.0 all background threads are executed\none after another (this might be because of the fact that developers\ncouldn't manage parallel threading causing apps to crash) and this is\nlinked with thread pool executor.\nAs a solution to your problem you might want to override\n'SpiceService.getThreadCount()' method which by default returns 1 thread to\nexecute requests. Increase this to get parallel execution. Of course some\nof the requests will still run in sequence if for example for 3 threads you\nwill try to execute 4 requests at the same time but it will get more of\nthem done in parallel.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/379#issuecomment-63601556\n.\n. But if you do so, take care of json parsing. It must support multi\nthreading. With jackson 2, you must take care of thread safety of\nconverters.\nEspecially if you use a simple date formatter, you must synchronize it, it\nhad been the worst bug of my life ever !\n\n2014-11-19 7:01 GMT-08:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nThat's the point. Thanks @maciej\n2014-11-18 23:21 GMT-08:00 Maciej Pigulski notifications@github.com:\n\nThey run asynchronously in a worker thread that is a different thread\nthen UI Thread, they just do not run in parallel. As far as I remember I\nhave read somewhere that since Android 4.0 all background threads are\nexecuted one after another (this might be because of the fact that\ndevelopers couldn't manage parallel threading causing apps to crash) and\nthis is linked with thread pool executor.\nAs a solution to your problem you might want to override\n'SpiceService.getThreadCount()' method which by default returns 1 thread to\nexecute requests. Increase this to get parallel execution. Of course some\nof the requests will still run in sequence if for example for 3 threads you\nwill try to execute 4 requests at the same time but it will get more of\nthem done in parallel.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/379#issuecomment-63601556\n.\n. @theDazzler, we got a lot of tutorials with the samples.. I think you\nshould have a look at our classes that are specialized in binary transfers,\nespecially the okhttp package.\n\n\nAlso, with RS you can choose to launch requests from within activities,\nbut you can also launch them from a service. It's up to you. In all cases,\nrequests will be executed inside a spice service, which means they will\nsurvive to all your activities life cycle.\nTry it, and if you're jammed, come back to us. Meanwhile, I mark this thread as close and invalid.\nPlease also, note that questions should be adressed on the google forum more than GH issues.\n. There is no such feature in RS directly. You should rely on one of the options you mentioned above plus also a SyncManager.\nNote that questions should be targeted to the discussion forum more than GH issues.\n. Hi @flikr4n,\nYou're right. Image handling is different in RS. We had to use one more\nfile in order to cache the data and avoid filling up the RAM with large\nbitmaps.\nThe file you provide is just a temp file that wil contain the raw data\nobtained from the network. The data file in the cache will contain the data\nafter scaling down the image to appropriate dimensions.\nI don't think you can achieve other transformations directly via RS. You\nwould have to first download the image, maybe resizing it, then the\nlistener can cut the image. It is also possible to put things in the cache\nwith RS. With a new cache key.\nBut there is no better way to automate this with current RS.\nThx for all details in your question.\nOn Dec 2, 2014 8:26 AM, \"fikr4n\" notifications@github.com wrote:\n\nI feel bitmap handling in Robospice is a little strange. As far as I know,\nSpiceRequest.loadDataFromNetwork is intended only for downloading a\nresource, parsing it, and returning it, instead of handling caching stuff.\nHowever, the BitmapRequest class which is usually used in\nloadDataFromNetwork needs a cache File. I am confused how to use a\nBitmapRequest with an InFileBitmapObjectPersister and an\nLruCacheBitmapObjectPersister which decorate it.\nSuppose that I want to use both memory cache and disk cache and I want to\nget an image with different options. For example, a screen-width-sized\nimage and a circle-shaped avatar-sized image. Because the image is the\nsame, network request is only needed to be executed once, while loading it\ninto memory has to be done differently. Is there any solution or plan to\nachieve this with Robospice? So far, loading bitmap with options is done\nin BitmapRequest.\nI think that loading the image into memory with scaled-down size and\ncutting it into a circle has to be done in the memory cache loader (\nLruCacheBitmapObjectPersister or a subclass of it) and the cache keys are\ndifferent. For example: cache key for disk cache is \"my-image.png\" and\ncache keys for memory cache are \"my-image.png/wide\" and\n\"my-image.png/avatar\".\nrequest (\"my-image.png/avatar\")\n                  |\n                  v\nmemory cache exists (\"my-image.png/avatar\")\n   |                            |\n  YES                           NO\n   |                            |\n   v                            v\nload it        disk cache exists (\"my-image.png\")\n   |             |                           |\n   v            YES                          NO\ngive it          |                           |\n                 |              download (\"my-image.png\")\n                 |                           |\n                 |                           v\n                 |            put disk cache (\"my-image.png\")\n                 |                           |\n         load, scale, cut <------------------'\n                 |\n                 v\nput memory cache (\"my-image.png/avatar\")\n                 |\n                 v\n              give it\nCan I achieve this with the current version of Robospice? If not, can\nsomeone give me a pointer or approach to achieve this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/384.\n. Hi Arne,\n\nbut what is wrong with the super class ? Do you have any way to know it ?\nUsually such problem are logged at the WARNING level in logcat, prior to\nthe error.\nThx for this bug report, it is quite unexpected though..\nSt\u00e9phane\n2014-12-04 9:13 GMT-05:00 Arne Jans notifications@github.com:\n\nthis VerifyError seems to be related to this change in the ART-runtime:\nhttps://android.googlesource.com/platform/art/+/1c5eb70%5E!/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/387#issuecomment-65636941\n.\n. Thx Arne for the PR, we will look into it shortly now. Sorry for the delay, I had real xmas holidays, even a bit extended due to an injury at the right hand. But we are back ;)\n. I don't understand the problem clearly. Can you clarify ? Thread is old and closed for this reason. Re-open if needed.\n. I am not sure this is really a bug but more a side effect of how things work. What result would you expect ?\n. This is not an issue, but a question that should be addressed to the discussion group.\n. Thread priority is fine grained, it is an int and your mechanism would mean to create as many thread pools as possible values of this int. \n\nMoreover, having a second service for high priority request makes sense, doesn't have a large footprint and can be achieved easily. I often use this personally to prioritize data over images.\n. This is not an issue, but a question that should be addressed to the discussion group.\n. This is not an issue, but a question that should be addressed to the discussion group.\n. This PR should get merged in. Unfortunatelly I don't have time to do it and\nwill be working on RS only by the end of this year.\nIf anyone else can merge it, and release, that would be nice.\nS.\n2015-09-08 11:49 GMT-04:00 NightmaresSeller notifications@github.com:\n\n+1\nWe use Robospice in our app for requests that do not rely on network as\nwell, just because of Robospice's handy notification system. But\nunfortunately, DefaultRequestRunner does not allow to execute requests when\nnetwork is down. This pull request will allow to override RequestRunner\nbehavior correctly without ugly hacks we forced to use.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/407#issuecomment-138606088\n.\n. Sorry guys,\n\nit's not that the lib is not maintained is that it is quite complete and\nhonnestly, yes time has been missing.\nWho wants to be added to the RS maintainers ?\nS.\n2015-07-26 22:21 GMT-07:00 Lev Shock notifications@github.com:\n\nIt seems that this library is not maintained anymore..\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-125089281\n.\n. @softwaremaverick, you've been added. ;)\n\n2015-07-29 11:40 GMT-07:00 softwaremaverick notifications@github.com:\n\nYes please. I also agree that it is quite complete and only minor\nenhancements would be required for further flexibility.\nOn 29 July 2015 18:46:51 BST, \"St\u00e9phane Nicolas\" notifications@github.com\nwrote:\n\nSorry guys,\nit's not that the lib is not maintained is that it is quite complete\nand\nhonnestly, yes time has been missing.\nWho wants to be added to the RS maintainers ?\nS.\n2015-07-26 22:21 GMT-07:00 Lev Shock notifications@github.com:\n\nIt seems that this library is not maintained anymore..\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-125089281\n.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126032811\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126054044\n.\n. Thx to you, you have been a long time contributor already\n\n2015-07-29 14:11 GMT-07:00 softwaremaverick notifications@github.com:\n\nThanks! :-)\nOn 29 July 2015 22:06:26 BST, \"St\u00e9phane Nicolas\" notifications@github.com\nwrote:\n\n@softwaremaverick, you've been added. ;)\n2015-07-29 11:40 GMT-07:00 softwaremaverick notifications@github.com:\n\nYes please. I also agree that it is quite complete and only minor\nenhancements would be required for further flexibility.\nOn 29 July 2015 18:46:51 BST, \"St\u00e9phane Nicolas\"\nnotifications@github.com\nwrote:\n\nSorry guys,\nit's not that the lib is not maintained is that it is quite complete\nand\nhonnestly, yes time has been missing.\nWho wants to be added to the RS maintainers ?\nS.\n2015-07-26 22:21 GMT-07:00 Lev Shock notifications@github.com:\n\nIt seems that this library is not maintained anymore..\n\u2014\nReply to this email directly or view it on GitHub\n<\n\n\n\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-125089281\n\n\n\n.\n\n\nReply to this email directly or view it on GitHub:\n\n\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126032811\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126054044\n.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126095664\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126096728\n.\n. Hey guys,\n\nI am one of the original authors. RoboSpice is not actively maintained,\nthat's sure. It's working well and as advertized ;) Nevertheless, since\nit's development, I have more involved on the DI side with RoboGuice and\nother projects related to reflection, byte code weaving and annotation\nprocessing.\nI agree that RoboSpice needs a refresh and I got some ideas, and a couple\ngood ideas have been submitted as well via PRs & issues. The problem is\nthat if RS remains a one man team project, or a team of a few people that\ndon't really have much time, it won't progress. Or progress will be slow.\nWe need more maintainers and I would be happy to add new people in. Send a\nPR, ask to become a contributor, but definitely RS needs a more active\ncommunity of devs to change faster.\nS.\n2015-08-23 21:09 GMT-07:00 Roberto Carlos Gonzalez Flores \nnotifications@github.com:\n\nI was thinking the same, I used this project last year, but I'm not so\nsure to use it in my new apps, there are a lot of open issues.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/426#issuecomment-134024016\n.\n. No, it has never really been maintained by a company. Only individual\ncontributors.\n\nNew contributors are welcome !\nS.\nLe 2015-08-28 1:35 PM, \"Roberto Carlos Gonzalez Flores\" \nnotifications@github.com a \u00e9crit :\n\nII thought it was being maintained by a company, fair enough, I'll try to\nuse it and help :)\nThanks for the library stephanenicolas\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/426#issuecomment-135840675\n.\n. Hi guys, I agree it would be a nice addition. Extensions in RS are designed for this kind of things..\n(I say this to reconciliate @nkeskinov concern of not adding this to the core and still adding the feature).\nIn that case, how could we make it so that this extension can be combined with any others ? (without having to double every single module).\n\nI am sorry not to be very active. But still, I got ideas to extend RS but don't have time to work on that now.\n. Nice workaround !\n2015-07-29 17:22 GMT-07:00 Kenneth Gibson notifications@github.com:\n\nThanks for the quick response.\nI set the app icon and this fixes the problem.\nThe project is actually a library project which is why it didn't have an\nicon to begin with. However the library project cannot have an app icon as\nthis conflicts with the actual apps icon and I get a manifest merger failed\nerror. In case anyone else sees this then I've fixed this problem by\nreferring to this: link\nhttp://stackoverflow.com/questions/24506800/android-studio-gradle-icon-error-manifest-merger\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/430#issuecomment-126134819\n.\n. The issue is not clear. Please provide the full stack trace and more\ncontext !\n\n2015-07-29 10:06 GMT-07:00 alex notifications@github.com:\n\nhow can I call SpiceException.getCause() to find the underlying HTTP\nerror if I get this message?\naaargrgh!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/431.\n. Hi Hatem,\n\npersonnally I couldn't find time to maintain the lib as I have been\ninvolved in other OSS projects. Contributors are welcome.\nSt\u00e9phane\n2015-11-14 22:17 GMT+01:00 Hatem Noureddine notifications@github.com:\n\nIs this library not supported anymore ?\nWhat about update Retrofit to version 2 ?\nWhat about making a team to do that ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/443.\n. The core maintainers doesn't have time to maintain them. At least I don't\nand it does look like I am not the only one in this case.\n\nIf anyone wants to fix a bug, please ping me on my personal email address\nto merge your PRs and ship a new version. We would appreciate new\nvolunteers.\nS.\n2016-05-22 22:08 GMT-07:00 Lev Shock notifications@github.com:\n\nThe library is doing its functions flawlessly.\nIt does have a couple of bugs, though. Just look at the issues list. So\neven if library is feature-complete, it still needs maintenance.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/456#issuecomment-220888457\n. I am not aware of anything related to computer that is not converted to\nbinary. And network exception is no exception.\n\nWhat do you want to do exactly ?\n2016-11-17 20:54 GMT+01:00 arya6000 notifications@github.com:\n\nI ran into Robospice by looking at another Android project. From my\nunderstanding Robospice has the ability to convert POST requests to binary\nbefore sending them over the HTTP protocol? am I correct?\nCan Robospice convert the binary data back to something human readable?\nI would appreciate any information regarding the issue.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/463, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ABv33SIAGbU8gdWd4Kl3izpVwMqOsUQGks5q_LDbgaJpZM4K1vBx\n.\n. I think the problem comes from Spring Android. This library is quite\nobsolete as of today and you should probably look for a more modern one\nwith a better support.\n\n2016-11-23 0:04 GMT-08:00 Or Dvir notifications@github.com:\n\nHi.\ni am using this library in conjunction with spring (using the class\nSpringAndroidSpiceRequest).\nhere is my load data from network:\n@Override\n  public T loadDataFromNetwork() throws Exception\n  {\n      HttpHeaders headers = new HttpHeaders();\n```\n  headers.add(\"Accept\", \"application/vnd.github.v3+json\");\nheaders.add(\"Authorization\", User.getCurrentUserAuthenticationValue());\nif(mHttpMethod == HttpMethod.PUT)\n  {\n      headers.add(\"Content-Length\", \"0\");\n  }\nResponseEntity entity = getRestTemplate().exchange(mUrl, mHttpMethod, new HttpEntity<>(headers), mResponseType);\nmResponseHeaders = entity.getHeaders();\nreturn entity.getBody();\n```\n}\nthe problem is that for some reason mResponseHeaders is missing some\nheaders, in particular one that is called \"Link\"\nthe header exists if i send the same request via web browser (using the\nDHC plugin):\n[image: 4444444444444]\nhttps://cloud.githubusercontent.com/assets/17179542/20554379/2c11a524-b164-11e6-8c2d-b27b61d90610.JPG\nam i doing something wrong? any ideas?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/464, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ABv33Xu-e52TiZcFA2KFUuJgatFcAfHaks5rA_OggaJpZM4K6Tkj\n.\n. OkHttp is definitely the reference on Android.\n\n2016-11-23 23:04 GMT-08:00 Or Dvir notifications@github.com:\n\n@stephanenicolas https://github.com/stephanenicolas any recommendations?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/464#issuecomment-262704717,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABv33aoXY-orpTMWcNqI3StO3RHq1Bxfks5rBTcDgaJpZM4K6Tkj\n.\n. Retrofit is also very interesting. Explore the different extensions of RS.\nhttps://github.com/stephanenicolas/robospice/extensions\n\n2016-11-24 3:01 GMT-08:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com:\n\nOkHttp is definitely the reference on Android.\n2016-11-23 23:04 GMT-08:00 Or Dvir notifications@github.com:\n\n@stephanenicolas https://github.com/stephanenicolas any\nrecommendations?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/464#issuecomment-262704717,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABv33aoXY-orpTMWcNqI3StO3RHq1Bxfks5rBTcDgaJpZM4K6Tkj\n.\n\n\n. Hi @bogdanzurac,\n\nI don't think this can really have an impact on RS services. But it would\nbe nice to test it and see how it behaves with the newest APIs.\nMost of RS services do actually execute in the foreground, but this highly\ndepends f the way an app uses RS..\nStephane\n2017-04-02 21:22 GMT+02:00 bogdanzurac notifications@github.com:\n\nHow do the new background service limitations in the newest Android O\nDeveloper Preview affect RoboSpice? Even on earlier releases, when the\nActivity goes into background and a request hasn't finished yet, a blank\nnotification is being shown.\nReference: https://developer.android.com/preview/features/background.\nhtml#services\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/467, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ABv33QbEu1osuwbVkHAsOTiwWOtrNBlZks5rr_VpgaJpZM4Mw5vx\n.\n. Thx a lot Bogdan for these kind words. But yes, we froze RS last week, the library is not maintained anymore. Personnally, I now always use a mix of retrofit and Rx instead, RS has sailed a long way home and yes, the latest constraints in android O don't make it easy for RS at all, it's probably the last nail in its coffin.\n\nThx to all RS users for your warm support, it's been a pleasure to ofer this library to the community. Thx to @rciovati  too for his important contributions to RS !\n. It is either a proguard issue if okhttp is proguarded or an okhttp version issue.. try using only module on the exclude statement.\nand check the result with your dependencies (./gradlew :module:dependencies)\n2017-06-26 1:37 GMT-07:00 sunszl notifications@github.com:\n\ncan Anyone help me?\nAny reply is appreciated.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/470#issuecomment-310997535,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABv33VCDwvYabaZMAgfhDnVZ46V1nRsgks5sH23ZgaJpZM4N9uIo\n.\n. Just exclude the right one, you should be good..\n\nLe 26 juin 2017 22:38, \"sunszl\" notifications@github.com a \u00e9crit :\n\nthere are two commons-io in gradle's cache\n.gradle\\caches\\modules-2\\files-2.1\\org.apache.commons\\commons-io\\1.3.2\\\nb6dde38349ba9bb5e6ea6320531eae969985dae5\n.gradle\\caches\\modules-2\\files-2.1\\commons-io\\commons-io\\1.3.2\\\nb6dde38349ba9bb5e6ea6320531eae969985dae5\nI think this caused the problem. Can anyone find a way to work around this?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/470#issuecomment-311258186,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABv33WRO6h58lIeH8sEmZWFhyoEb9loWks5sIJVhgaJpZM4N9uIo\n.\n. Quite a question :)\n\nArch has different components, that's probably the best approach to answer\nit:\nViewModel:\nCool, at lest there is a way to survive rotation that is not so hacky, well\nif you don't consider that it relies on the old recipe of retaining\nfragments...\nRoboSpice has a very different approach to surviving configuration changes.\nA service will still be running, even if your activity is destroyed (memory\npressure scenario), so there, we do a bit better, if that matters. But\nactually making the 2 libs playing well together is not that easy, and it\ncan mean multiple things: putting your data in a view model after a RS\nrequest, knowing that the view model might be destroyed. That's doable, for\ninstance if you stop RS requests when the view model is destroyed, or just\nunplug your listeners there instead of onDestroy.\nLifeCycleObserver:\nYou can probably use it to simplify your spice manager life cycle. I don't\nsee anything else that could be done here.\nRoom:\nObviously you can use it to store RS request results. We could contribute a\nmodule for RS.\nLive Data:\nI am really not a big fan of LiveData. I prefer Rx and from far. The main\ndifference is composition, richer operations, more functional approach, to\nsay the least.\nThough RS doesn't play that well with Rx neither. Actually, I don't use RS\nanymore personally in my projects as I prefer to use Rx. RS is still a\nvalid approach and probably more traditional in its way of thinking.\nCould RS be more compatible with Rx or Live Data ? I honestly don't see\nhow, or maybe Rs be a service lived scheduler. But that's more or less\nneeded.\n2017-06-24 23:23 GMT-07:00 bogdanzurac notifications@github.com:\n\nHow would RoboSpice interact within the new MVVM Architecture Components\nintroduced at Google IO 2017? Considering we'd have a data layer consisting\nof repositories which fetch data from a web API and store that data inside\nan ORM, all of this without taking life-cycle into account and the view\nlayer not knowing anything about the data layer (thus not being able to\nstart/stop the SpiceManager inside Activities and Fragments).\nI've tried to search the issues for relevant threads and the best I could\nfind was this one from 3 years ago: #211\nhttps://github.com/stephanenicolas/robospice/issues/211\nArchitecture Components reference: https://developer.android.com/\ntopic/libraries/architecture/index.html\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/471, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ABv33Uz6ZkgrZ0VG9YlXV4PCkv1P9xxiks5sHfzrgaJpZM4OEhym\n.\n. Please rename this class MockNotificationContentResolver\n. Rename to MockNotificationApplication\n. +1 for both methods. More clear like this.\n. \n",
    "rciovati": "Actually it was exactly the solution i was thinking about but unfortunately i had no time for submitting a pull request. \nPlease don't change too much the library's apis, i already started using it in my project :D\n. As far as i used it i think it's a great library! I'll provide more feedbacks during the next weeks. Meanwhile, thanks very much! :) \nA couple thing i'm thinking about: \n- it would be useful a way to disable logcat logging.\n- it would be useful to create a Google Group where discuss about library usage.\n. Thanks St\u00e9phane, i'll post soon :-)\nAnd... you was right, v1.1's features rock!\nBest regards,\nRiccardo\n2012/10/22 stephanenicolas notifications@github.com\n\nHi Ricardo,\nthe RoboSpice discussion group is now up and running :\nhttps://groups.google.com/forum/?fromgroups#!forum/robospice\nYou are more than welcome :)\nSt\u00e9phane\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/2#issuecomment-9652378.\n\n\nRiccardo Ciovati\n. Thanks to you for solving this so fast :)\nNext time i will open a pull request, i promise :) \n. Any plan for pushing 1.1.1 on maven central?\n. Great, thanks very much :-)\n. Thanks very much St\u00e9phane :-) \n. My phone's T9 screwed up the name and i posted without checking... sorry :-)\n. I would try something like this, which is a modified version of the google http client sample\n``` java\npackage com.octo.android.robospice.sample.googlehttpclient;\nimport android.app.Application;\nimport android.util.Log;\nimport com.google.api.client.extensions.android.AndroidUtils;\nimport com.google.api.client.extensions.android.http.AndroidHttp;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.http.apache.ApacheHttpTransport;\nimport com.google.api.client.http.javanet.NetHttpTransport;\nimport com.octo.android.robospice.GoogleHttpClientSpiceService;\nimport com.octo.android.robospice.persistence.CacheManager;\nimport com.octo.android.robospice.persistence.exception.CacheCreationException;\nimport com.octo.android.robospice.persistence.googlehttpclient.json.JacksonObjectPersisterFactory;\nimport java.security.GeneralSecurityException;\n/\n * Simple service\n \n * @author sni\n /\npublic class SampleSpiceService extends GoogleHttpClientSpiceService {\n@Override\npublic void onCreate() {\n    super.onCreate();\n\n    try {\n\n        if (AndroidUtils.isMinimumSdkLevel(9)) {\n\n            NetHttpTransport.Builder builder = new NetHttpTransport.Builder();\n\n            httpRequestFactory = builder\n                    .doNotValidateCertificate()\n                    .build()\n                    .createRequestFactory();\n        } else {\n\n            ApacheHttpTransport.Builder builder = new ApacheHttpTransport.Builder();\n\n            httpRequestFactory = builder\n                    .doNotValidateCertificate()\n                    .build()\n                    .createRequestFactory();\n        }\n\n    } catch (GeneralSecurityException e) {\n\n        Log.e(\"SampleSpiceService\", \"Error: \" + e.getMessage());\n\n        httpRequestFactory = createRequestFactory();\n    }\n}\n\n@Override\npublic CacheManager createCacheManager(Application application) throws CacheCreationException {\n    CacheManager cacheManager = new CacheManager();\n\n    // init\n    JacksonObjectPersisterFactory jacksonObjectPersisterFactory = new JacksonObjectPersisterFactory(application);\n\n    cacheManager.addPersister(jacksonObjectPersisterFactory);\n    return cacheManager;\n}\n\n}\n```\nDon't have the time to test it, let us know if it works.\n. Looks good for me.\n. You are right @kontinuity.\nWe were providing binaries too in the Github download section but that section has been removed from Github and we should link the jar in another page.\n. Can't we just creare a page with direct link to the jars (either robospice and dependencies)?\nI think we should also provide a little description about what extensions do. \n. Before building the sample you should build the entire library :-)\ngit clone git@github.com:octo-online/robospice.git\ncd robospice\nmvn clean install\n2013/1/18 Jeff Lockhart notifications@github.com\n\nI have installed Maven and tried following the directions herehttps://github.com/octo-online/robospice/wiki/Using-RoboSpice-without-Maven-2and get errors when trying to build with Maven:\n$ mvn clean install -Pant\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Robospice - Sample Core 1.0.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[WARNING] The POM for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT is missing, no dependency information available\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1.530s\n[INFO] Finished at: Fri Jan 18 03:34:27 MST 2013\n[INFO] Final Memory: 7M/243M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project robospice-sample-core: Could not resolve dependencies for project com.octo.android.robospice:robospice-sample-core:apk:1.0.0-SNAPSHOT: Could not find artifact com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/17#issuecomment-12416851.\n\n\nRiccardo Ciovati\n. @stephanenicolas I think that underscore in test methods is fine.\nI was talking about classes like this one: https://github.com/octo-online/robospice/tree/master/extensions/robospice-spring-android-parent/robospice-spring-android-test/src/com/octo/android/robospice/springandroid/test/model/json that should be easy to fix (quite long but easy).\n. I would agree with @stephanenicolas.\nRoboguice is a heavy dependency and it doesn't worth to add it just for the logging feature. \nIf you aim to suppress RoboSpice logs in your Logcat I would advice you to call this in you SpiceService subclass's constructor:\njava\nLn.getConfig().setLoggingLevel(Log.ERROR);\n. I understand your point.\nI've just added (in commit 5afbea2) a setPrintmethod at the Lnclass.\nJust for reference the use would be:\njava\nstatic class MyPrinter extends Print{\n    @Override\n    public int println(int priority, String msg) {\n        return Log.println(priority, \"MyApp\", msg);\n    }\n}\nand somewhere:\njava\nLn.setPrint(new MyPrinter());\nThis will be part of 1.4 release but you can build your own :-)\n. Actually that exception is fine, we should just not log it. \n. Project setup with the usage of RoboSpice core module? or also with the usage of extensions?\n. We are glad you solved :)\n. Could you post a simple project that reproduces this?\n. I was writing what @stephanenicolas said.\nBTW, you can use the getFromCachemethod that is async. ;)\nWe use it in the same sample: http://bit.ly/WrhFNn \n. Since version 1.3.2 is not released, you should build the library yourself.\nHere you can see the instructions. \n. Hello Mark,\nfor getting the code of the 1.3.1 release it's enough:\nbash\ngit checkout robospice-parent-1.3.1\n. I'm glad you solved :)\nIf you have any other issue building or testing RoboSpice let us know.\nBest Regards\n. Could you please provide some code to reproduce this issue?\n. Thanks David, this is awesome :-)\nI was wondering if maybe we could remove the support lib dependency and copy inside the LruCache class source. \nWhat to do you think? What do you think @stephanenicolas?\n. There shouldn't be any problem.\nFor instance, using Google Http Client (see this sample)\njava\nHttpRequest request = getHttpRequestFactory()//\n                .buildGetRequest( new GenericUrl( baseUrl ) );\n        HttpHeaders headers = new HttpHeaders();\n        headers.setETag(\"your-value\");\n        request.setHeaders(headers);\n        request.setParser( new JacksonFactory().createJsonObjectParser() );\n        return request.execute().parseAs( getResultType() );\n. Sorry, we missed that jar.\nShould be fixed now.\nThanks. \n. Not sure if this solution would fits exactly your needs but i would try creating my own ObjectPersister.\nHave a look at how are implemented those built-in in RoboSpice:\nhttps://github.com/octo-online/robospice/blob/release/extensions/robospice-spring-android-parent/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/SpringAndroidObjectPersister.java#L91-120\n. Take a look a this discussion on our Google group \n. @chrisjenx Maybe it's not enough to achieve what you need but please note that you can already customize the ExecutorService that the RequestProcessor will use, overriding the getExecutorService() method inside the SpiceService class. \n. Just my two cents: If you are migrating from Jackson to gson, if I remember correctly, you need to annotate your pojo(s) field(s) you want to be serialized/deserialized with the @Key annotation.\n. Yeah, your are right. getFromCache should not trigger any network activity.\n. Could you please more details about which serializer and persister your are using?\n. Actually I have not experience with SimpleXML so I'm just guessing: have you tried annotating the whisky field?\nI would try with @Element(required=false), so you won't have problem deserializing the first request (where whisky is not available).\n. Nope, data cached are the one returned from the loadDataFromNetwork() method.\nHave you annotated the fields inside the Whiskyclass?\n. Of course, you need to setup which persister RoboSpice should use. I assumed you was doing it.\nYou can use XmlSpringAndroidSpiceService.class when you create the SpiceManager instance.\nIt is a ready-to-use implementation with code for handling xml caching ;)\n. It should be fine. \n. Looks good.\nIt would be nice if you could add a few test case in order to make sure all works as expected. \n. As stated in our wiki it hasn't been released yet.\n. Don't you have a broader Logcat portion? \n. RoboSpice internally already performs a network connectivity check with this class:\nhttps://github.com/octo-online/robospice/blob/release/robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java\n. @DarthWendigo latest version is 1.4.11\n. We could implement some kind of hash function but this would lead to a read/write overhead.\nI'm wondering if it would be easier checking on your side to use a proper string as cache key.\n. For priorization we could implement our custom ThreadPoolExecutor which internally uses a PriorityBlockingQueue (as examplained here). But if someone will use a custom ExecutorService will lose request priority support. What do you think? Which solutions are you thinking about? \n. IHMO priority management should be handled by the request processor. \n. I'm glad my idea made sense :)\n. It's up to you to display a message to the user.\n. What if you check the .getCause()?\n``` java\npublic class MyListener implements RequestListener {\n   public void onRequestSuccess(Something something) {\n   }\npublic void onRequestFailure(SpiceException exception ) {\n      if (exception.getCause() instanceof NoNetworkException) {\n           //Toast \"you got no connection\n      } \n   }\n}\n```\n. I agree with you to keep just Travis.\nI will configure samples repo to use Travis as well.\n. Process started: octo-online/RoboSpice-samples#9\n. This kind of issues should be discussed on our group. \n. Although our tests was passing properly I edited our code for explicitely checking if the cache file exists. If you can try building RS from source your feedback would be appreciated. \n. @Bobby-Jackson here you are the instructions :)\nsh\ngit clone git@github.com:octo-online/robospice.git\ncd robospice\ngit checkout master\nmvn clean install -DskipTests=true -Dmaven.javadoc.skip=true -Dfindbugs.skip=true -Dcheckstyle.skip=true -Dandroid.dex.optimize=false\nAnd then in your project replace your current RS version with 1.4.6-SNAPSHOT.\n. On my machine (mbp with i5, 8gb ram and ssd) the whole process takes about 10minutes, for this reason I suggested the command to skip tests and checks which IHMO are not needed at this stage. \nActually I never tried to deploy snapshots, maybe I will give it a try. \n. Fixed in 8e06216\n. Thanks\n. You should cancel the requests before stopping the service.\n. @DanielNovak is there something suspicious on the logcat when you call spiceManager.removeAllDataFromCache()? \n. If you are able to build RS from source, try checking if the patch above solves the problem.\n. @DanielNovak ping :)\n. Take a look at our starter guide.\n. We provide all binaries in the repository branch, as explained in the guide I linked you above. \nMy personal advice, if you are a starter, is to use Android Studio and Gradle which is now (or will become shortly) the standard for developing Android apps. Just for reference, we have samples for Gradle too: https://github.com/octo-online/RoboSpice-samples/tree/gradle\n. If you have a coincise and specific problem we can try to help you. Otherwise, if you just ask how to get started my answer will always be \"take a look at the documentation\".\n. Not really expert with Google Http Client but I would try something like:\njava\nGenericData data = new GenericData();\ndata.put(\"url\", \"http://www.google.com/\");\nJsonHttpContent content = new JsonHttpContent(new JacksonFactory(), data);\n. Cool, I'm glad you solved.\n. In your opinion how do this would be implemented? As an extention to the cache module? \n. @g123k meanwhile a better solution is provided, to do not start the service in foreground (thus do not show the notification), in your SpiceService subclass you can ovverride the createDefaultNotification method returning null:\njava\n@Override\npublic Notification createDefaultNotification() {\n    //Returning null we won't start the service in foreground.\n    return null;\n}\n. On my GN with 4.3 is not displaying the notification anymore. \nOf course in the logcat it will display the exception stacktrace because it will fail starting the service in foreground. \n. Actually I think we could implement this solution directly into RoboSpice so we won't break current implementation, waiting for a more sophisticated foreground management. \nWhat do you think @stephanenicolas ?\n. Duplicate of https://github.com/octo-online/robospice/issues/170\n. BTW in my option the notification should be always created, maybe with Notification.PRIORITY_MIN.\n. Try creating  your own JacksonSpiceService, in order to configure the object mapper to don't fail on unknown properties.\n``` java\npublic class JacksonSpringAndroidSpiceService extends SpringAndroidSpiceService {\n    @Override\n    public CacheManager createCacheManager(Application application) throws CacheCreationException {\n        CacheManager cacheManager = new CacheManager();\n        cacheManager.addPersister(new JacksonObjectPersisterFactory(application));\n        return cacheManager;\n    }\n@Override\npublic RestTemplate createRestTemplate() {\n    RestTemplate restTemplate = new RestTemplate();\n\n    // web services support json responses\n    MappingJacksonHttpMessageConverter jsonConverter = new MappingJacksonHttpMessageConverter();\n    jsonConverter.getObjectMapper().configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    final List<HttpMessageConverter<?>> listHttpMessageConverters = restTemplate.getMessageConverters();\n\n    listHttpMessageConverters.add(jsonConverter);\n    restTemplate.setMessageConverters(listHttpMessageConverters);\n    return restTemplate;\n}\n\n}\n``\n. Robospice doesn't perform any url conversion. Actually it doesn't event know it doing a network call.\nPlease post your code where you prepare the request and we will see if there something suspicious. \n. We moved our samples to GitHub APIs because Twitter API v1.1 require authentication. If you find something strange let us know. \n. Why don't you use normal jars?\n. Thanks, I've update that page. \n. Looks good to me. Thanks\n. @AlexNab Can't you just callsetConnectionTimeout: http://bit.ly/1lkBj9a ?\n. Thanks\n. In that method the duration time doesn't matter because there is anull` cache key. \n. Thanks\n. This shouldn't be related to RS itself.\nBTW try the 1.4.12-SNAPSHOT version, we have updated the retrofit version to the latest one. \n. Should be fixed with this: 5652be9493bfc4a9d7def21ddbd6263b19b5a98b\nA new snapshot of the 1.4.12 is available, you could try it and report whether you are experiencing the same problem. \n. If you are using gradle you need to add the snapshot url\n``` groovy\nrepositories {\nmavenCentral()\n\nmaven {\n    url \"https://oss.sonatype.org/content/repositories/snapshots/\"\n}\n\n}\n```\nand then change the dependency version to 1.4.12-SNAPSHOT.\nATM we can't provide directly the jars for the snapshots.\n. @julio-cotta-edx do you have any feedback?\n. @stephanenicolas could you please release the 1.4.12?\n. @jdegroot version 1.4.12 is now released :-)\n. I've made a little mess with your PR, I'm sorry.\nIt was in the wrong branch but I didn't realize that untile I merged it.\nI'll move to the master branch ASAP.\n. We have new jar in the repo right now ;)\n. Here a workaround #293 \n. It's not available in Maven Central because it is experimental.\n. @eefret if you are stuck on this you could simply use a CountDownLatch to await. \n``` java\nfinal CountDownLatch latch = new CountDownLatch(1);\nfinal YourRequest request = new YourRequest();\nspiceManager.execute(request, new RequestListener() {\n@Override\npublic void onRequestFailure(SpiceException spiceException) {\n    latch.countDown();\n}\n\n@Override\npublic void onRequestSuccess(YourResponse response) {\n    latch.countDown();\n}\n\n});\nlatch.await();\n``\n. I will do it this week :-)\n. Ok, if there is any voluntary leave it to him :-)\n. This is fine but your pull request should target themasterbranch.\n. Thanks\n. You have two options, both of them require extending theSpiceManagerclass:\n- Override thegetExecutorService()and return another executor service to use (like a [CachedThreadPool](http://developer.android.com/reference/java/util/concurrent/Executors.html#newCachedThreadPool%28%29))\n- Override thegetThreadCount()`and return the number of thread you want to use.\nPersonally I prefer the first option.\n. You are right but the url you provide is not correct either. \n. Take a look at this:\nhttp://rciovati.blogspot.it/2012/11/plain-post-requests-with-robospice-and.html\n. I would try:\njava\nparameters.add(\"song_ids\", \"1\");\nparameters.add(\"song_ids\", \"2\");\nparameters.add(\"song_ids\", \"3\");\n. I merged manually this one in the master branch (which is where we accept PR)\n. If you are looking for the jar you can grab it from maven central:\nhttp://search.maven.org/#artifactdetails%7Ccom.octo.android.robospice%7Crobospice%7C1.4.11%7Cjar\nHere is the online version:\nhttp://stephanenicolas.github.io/robospice/site/latest/apidocs/index.html\n. Do you mean http basic authentication? In that case it's up to the http client you are using.\n. Which RoboSpice extension are you using?\n. It would be nice if you could describe it right here.\n. @softwaremaverick makes sense for me. Since it require a further implementation I reopen this issue. \n. Because API Level 8 is the minimum version with which we test the library  :-)\n. Not sure is the RestTemplate class supports this. BTW it's not related to RS.\n. Well, we plan to integrate this directly in RS. \nWould you mind to send us a PR (on the master branch please :) )?\n. I guess you can handle this with the http library you are using. It's not something related to robospice itself.\n. Fixed in 1.4.12\n. @richarth PR should be against the master branch. Would you mind to port it?. Ty\n. Thanks\n. Fixed, thanks\n. Can you provide a sample project showing the problem?\n. It should be:\njava\n@Key(\"_id\")\nString id;\nBTW this is related to Google HTTP Client, not Robospice.\n. I saw this one too, and this is exactly what I was talking you about, @stephanenicolas \nI was trying to setup a toy project to submit this problem to @ducrohet and his team but, surprisingly, I'm not able to reproduce it with a brand new project.\n. IHMO it's related to the Android Gradle Plugin or to Gradle itself. \nI just need to reproduce it in a brand new project.\n. Does it happen also calling SpiceManager.shouldStop()? Did you notice this problem on all APIs level?\n. Looks good to me but you should send it against the master branch.\n. Merged manually, thanks.\n. Merged manually, thanks :+1: \n. Thanks but you are sending the PR against the wrong branch :) Would you mind to send it again master?\n. Merged it manually, thanks :)\n. I merged it manually, thanks.\n. Hey @mykolaj, thanks for the pull request! Would you mind to send it against the master branch?\n. I gave a quick look at the code. Not sure if I like the 2 suffix both in the package and in the classe names. \n. Closing in favor of #455 \n. I'd continue here the discussion about naming that we started in #454.\n@stephanenicolas What do you think about the naming thing? \n. I absolutely agree about having another module.\nI'm just concerned about having retrofit2 in the package name and in the class names :)\n. IHMO it would be fine to have the package name like com.octo.android.robospice.persistence.retrofit2 so that it would match the Retrofit 2 package. Same for the module name, robospice-retrofit2 looks good to me, but I'd wait for someone else to approve :)\n. ",
    "pommedeterresautee": "Hi, thank you for your answer.\nI ve searched a lot yesterday and it is managed at the spring level... There is already a setter for httprequestfactory.\nThank you anyway for this library.\nPs:did you think about simplify the sample? By example in Sherlock actionbar there is one function only per activity... In yours there are several function, injection... A real user doesnt need to make the request in xml AND in json too. It's just a suggestion.\n. Oh, I just noticed you are the author of RoboDemo! Well done.\nAbout the simplification, here https://github.com/octo-online/robospice/blob/master/robospice-sample/src/com/octo/android/robospice/sample/SampleContentActivity.java there is some injection.\nA good simplification would be to remove all of them.\nI've implemented in the past Roboguice in my app (a big one), it made my application very slow at the launch and add the injection layer complexity (complexity to understand when you want to do something a little bit special, even if at the end it simplifies the code). Is it not possible to get rid off it? Because right now, it looks like you need it to make to make your lib work.\nFor the sample, I would make one activity per function, and use only the libraries absolutely needed to make it work. Look here: https://github.com/octo-online/robospice/blob/master/robospice-sample/src/com/octo/android/robospice/sample/SampleContentActivity.java too much things I think... \nIf an activity needs several particular class, I would made different package, one per activity, and one folder for the shared classes. The idea is like : I want to use this lib, I need this function, I search my case in the packages, I copy past, I make it work and finally I personalize and make things more optimal.\nI think sherlockactionbar is a good start point for that. There is a listview pointing to each activity, you search the effect you want on your phone, and finish on your computer.\nI understand you want to limit the size of the sample but if you divides the complexity in independent packages, it's not anymore an issue. You will have the simplicity and give a complete information.\nAnother thing I've seed which is a good idea also, is to include the main part of the code for a particular request in the documentation displayed in the application. You have already some description text. It won't be a big change to add some code in the description. You know you are in the subway, and you are thinking about the REST layer... It can help...\nAnd finally you should improve your website documentation.\nLots of comments I know, it's already very well done, but you ask for some remarks, and to make it short your lib looks like... too much professional :-)\n++\n. About the documentation, look at how AndroidQuery is doing: https://play.google.com/store/apps/details?id=com.androidquery&feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5hbmRyb2lkcXVlcnkiXQ..\nThe author only includes the main part of the code. I think it's sufficient. Moreover your library have not to change its interface every day, so you don't really need Github. And finally by using Github you make the code consultation only possible with Internet. It's not a big deal but it's better to be operational without.\nAbout RoboGuice really, I hate it and I am not the only one. The sample is here to make a use like me to understand how your code is working. But right now you are showing how you program. About the documentation point it's very subjective (you may like the github complete doc or a shorter version one) but about including tons of librarie things to explain only one thing... for sure it's a bad idea. You know what, the first time I saw your lib, I noticed the activity extended and say, Ok not for me. I did'nt take the time to understand why and what it was. After I came back because I was too much curious and I understood it was because of the use of Roboguice.\nImagine a new programmer, he wants to use: the sample is here to explain, and before finding how it works, he will learn what is injection, how to include it in its project, how works Spring... too much in my opinion. You will loose lots of people in the process.\nAnother thing (I know I love to complain), you should hide the Spring complexity behind your own interface.\nSpring may be cool but it has its own concepts. An Android user like me (means not pro) knows about the Apache class, may be the the URLConnection class and how to make them work. Why adding a new layer of complexity?\nIn my own project I can request whatever I want in 2 or 3 lines. I have several factories for the request. They all implement the same interface. I inject the factory inside a requestClass. Each request class extends an abstract one (template pattern). The template (abstract class) includes one hooker before the execution of the REST request (to transform a POJO in JSON), after the request is build with the factory injeted in the constructor, the request is executed and finally a last hooker make possible to transform the result in a POJO.\nNothing complicated.\nIf you want to hide the complexity of Spring, I would copy the interface (function names...) of Apache lib as everybody already knows about it.\nIn a perfect world, you hide all the complexities and at the end you would have something like:\n'''java\nGetObject obj = new GetObject(\"www.blabla\");\nExecutor exec = new Executor(obj);\nexec.start();\n'''\nIf you want to transform the final result from JSON to POJO:\n'''java\nGetObject obj = new GetObject(\"www.blabla\");\nJSONTrans json = new  JSONTrans < MyClassType > ();\nExecutor exec = new Executor(obj, json);\nMyClassType blabla = exec.start().get();\n'''\nThe point is that if you want your library to be widely and get lots of contribution it should be super easy to use. Right know, for me, it is not. Again, I am not a pro and it may explains that.\nAnyway, I think I ll meet you soon I will probably go to the Meetup next week where I assume it's you who will present your own lib!\n. Hi Nicolas,\nIt is very funny as I followed your advice to not use directly HttpUrlConnection (I switched to the Google Lib).\nAbout the SSL thing, what do you need exactly? The code to create a SSL factory?\n. Good doc. You should think about updating the application on the market. It will give a more fresh view about the app.\nRegards\n. Sorry instead of uploading read updating. I was speaking about the example application on the Play Store. \nAn update will remind/inform some people about the update of your library.\nRegards\n. Thank you! I will try tonight.\n. Hi Nocholas,\nI am still playing with the library, I need to have some experience with it before doing that. You may close this thread if you want, this task is already in my TODO list, just not yet at the top.\nRegards\n. @stephanenicolas That's what I was wondering... but you know, I had this hope that everything has been abstracted to a very high level. I will make switch the code so.\n@rciovati I ve done it. However, as per my exp it is not mandatory, like Robospice, there are lots of magic behind! I like it.\n. ",
    "ohdonpiano": "Any news on supporting SSL certificates within robospice?\n. ",
    "Lingviston": "Can anyone provide an example of implementing SSL connection in Google Http Client Robospice extension without \"breaking\" Robospice a lot?\nI've tried to use code from http://stackoverflow.com/a/7447273/1897423 but it doesn't work (for now I agree to trust all certificates). I still get \njava.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\n. Well, now I'm getting \nUnsupported Media Type exeption.\nBut this is another issue. Your solution seems to work, thanks!\n. Hmm, I think in some cases this may be noticeable (for example in Lists/Grids).\n. Yeah, but what if there is no ability to do that (non network requests, or like in my case - simply no way to set the timeout)? Can it ba handled on Robospice level or not?\n. That's bad. Wel, thanks for the reply.\n. ",
    "menklab": "I got https with a self signed cert to work following this posts suggestions:\nhttp://forum.spring.io/forum/spring-projects/android/117381-trying-to-acess-an-ssl-resource-fail\nI have included the basics below for easy copy and paste. Note the port 8443 and 8080. These will need to set to 443 and 80 if you are talking over default protocols.\n. ",
    "pierrre": "I just need a better AsyncTask system :P\n. Thank you! \\o/\n. Ok, thank you :)\n. ",
    "nhachicha": "Hi Stephane,\nYou're definitely right\nI just thought the best way to start explore the API and  contributing is to begin with the motivation app, since the project didn't import correctly in Eclipse due to the ABS dep, I figured that I can spare the dev some frustration by providing a quick tip on this matter.\nBut like I said this wiki make sense if you plan to write in the future a full walk-trough guideline for the potential contributors.\nNabil.\n. ",
    "sospartan": "found a workaround in the sample project:\n execute with the listener both implemented RequestListener and RequestProgressListener\nbut it's still a issue ,right?\n. Thanks for reply , this #16 is already post , what do mean by \n\nWould you mind to fill an official issue in the github repo for this  ?\n\nIn my project ,  I want listen all the progress update in Activity( control the progress bar in action bar), and listen every request result in separate fragment .Should I link all the requests in Activity and notify fragment manually ?  Is there any best practice for this kind of job ?\n. My app is just like a browser , single Activity with fragments . The Activity's content view is a ProgressBar ,address EditText and a fragment container view  where to display pages content by different fragments. \n. ",
    "kontinuity": "Is it possible to provide a download bundle for non Maven users? I've used Maven and Ant in my past projects hence it was trivial but I can understand the conundrum of others.\nA bundle with dependencies should do the trick. I'll be more than glad to volunteer to build such a bundle and deploy on GitHub.\n. I would simply look at the ease of integrating RS within a new setup. RoboGuice for example provides direct binaries albeit from Maven repositories but it helps.\nhttp://code.google.com/p/roboguice/wiki/InstallationNonMaven\nI would vote for ready downloadable binaries.\n. Not trying to nitpick here but the intent is to not have users deal with Maven if they are either not used to it or just don't want and the steps in the document need Maven. Kind of defeating the purpose.\n```\n2. use maven to copy dependencies to the libs-for-ant folder\nmvn clean install -Pant\n.\nOk, I am sensitive to your argument but the only to type damn sample\ncommand. Is that really too much ?\n```\nIsn't Maven not available on every machine by default? This means even to type those simple commands the user has to install Maven. Tall order given the title of the issue is \"Rank NOOB wants to use RoboSpice and needs help\" :)\n. This would require a dependency of Guice.\n. I've sent a pull request #20. Closing this one.\n. Come to think of it, this is not a \"RoboGuice\" dependency but rather a \"Guice\" dependency since all we need is the @Inject annotation and can also be replaced by javax package but neither are available on Android.\nMotivation:\nhttp://code.google.com/p/roboguice/wiki/Logging\nRoboGuice, from where this was taken supports overriding the logcat output. The default one is a real pain in which the output is of the form\n/SpiceManager.java:953 [msg] <-- That is the category\nThere is no way to suppress it in logcat using the parameter category:S because it includes the dynamic line number. I wanted to override so that the output is more like\nMyAppName [msg]\nAllowing me to filter it easily as MyAppName:S or MyAppName:W.\nIssue:\nThe missing @Inject annotation is required to allow custom binding of the Print variable.\nAlternative:\nWe can allow manually setting the print variable in Ln.java which would eliminate the need of the dependency I added earlier.\nWith my custom logger I get the following logcat output:\n2893               BS  D  at java.lang.Thread.run(Thread.java:856)\n  2893               BS  D  [SpiceManager.java:953] - Unbinding from service start.\n  2893               BS  D  [SpiceManager.java:222] - SpiceManager stopped.\n  2893               BS  D  [SpiceService.java:292] - Pending requests : 0\n  2893               BS  D  [SpiceService.java:169] - SpiceService instance destroyed.\nThanks,\nArif\n. @rciovati Thanks for the info. I was more interested in temporary suppression, a feature that works really well with Logcat. I wouldn't want to recompile/deploy just to see the suppress/view logs again.\nA critical point being missed here is that, its not only my use case. The whole idea of overriding logging is to allow users to provide logging custom end points. I am still in development hence I am logging it to console but once I go to production I might want to send it to ACRA or any other destination.\nI also provided an alternative, which is to allow overriding Print variable via a simple setter. RoboGuice chose the route to do that via DI but since we don't want that dependency we should allow setters. \n. This issue is back in 1.4\n[SpiceManager.java:194] - Interrupted while waiting for new request.\njava.lang.InterruptedException\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1996)\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2031)\nat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:413)\nat com.octo.android.robospice.SpiceManager.run(SpiceManager.java:192)\nat java.lang.Thread.run(Thread.java:856)\n. You are on the money here, the message indeed is at DEBUG mode but the problem is that its a stack trace. If we want to debug anything such as loop exit we should simply log a single liner and not a trace. @rciovati had fixed the issue in pre 1.4 by removing the stack trace logging.\n. ",
    "ghost": "Just to put in my 10 cents.\nI agree that having to use Maven is a big deterrent from using Robospice for people that aren't familiar with it.\nIf there were libraries that could be included into an existing Android project by simply dropping them into the libs folder that would go a very long way in simplifying the process of getting to know Robospice.\nI believe it took me 2 days to fumble through the dependencies to get Robospice up and running.\nOn 09.01.2013, at 20:29, Arif Amirani notifications@github.com wrote:\n\nOk, I am sensitive to your argument but the only to type damn sample\ncommand. Is that really too much ?\nIsn't Maven not available on every machine by default? This means even to type those simple commands the user has to install Maven. Tall order given the title of the issue is \"Rank NOOB wants to use RoboSpice and needs help\" :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you, that makes perfect sense.\n. Does that work with the UncachedSpiceService as well?\n. Hi Stephane\n\nThank you for your reply.  I will hit the mailing list for future inquiries but will stay on GitHub for this since it's already here.\nI'm familiar with ormlite and how objects are persisted with ormlite. \nMy question is this:\nWhen I use the ormlite cache in Robospice and get POJOs back onRequestSuccess then make changes to those POJOs and call myDao.update(myPOJOwithChanges), are those changes persisted to the robospice cache? \nWill I my modifications be stored in the robospice ormlite cache, so that next time I hit the cache my modifications still exist?\n. Hi\nI haven't really been following your conversation, but I just wanted to say that Robospice doesn't make a network request (that means loadFromNetwork is not executed) until the cache has expired.\nI don't think the Restful design of Robospice and Spring Android ( I assume you're using this combination) doesn't respond well to 304 Not Modified, sent by your server.\nI have in many cases disabled the Robospice cache altogether and mapped the responses to sqllite using ORMLite (not the Robospice ORMLite module).  I did this in order to query the database for cached data in case the server sends a 304.\nYou could probably get similar results if you use the loadDataFromCache spiceManager method if you get a 304 from the server.  I have never used this approach, though.\nJust my 10 cents.  Sorry if I totally missed the point of your conversation.\nGreetings\nMoritz\nOn 03.10.2013, at 20:15, Ilya Mizus notifications@github.com wrote:\n\nI'm afraid you haven't quite understood me. I know the meaning of this parameter. The problem is - I don't know the exact cache lifetime when I SEND the REQUEST. I'm not the boss. The server decides, how long its data is valid and send that time value to me within the RESPONSE.\nSo, yes, I need to set the RoboSpice cache lifetime - it's exact what I want, but I need to set it AFTER I have received the response, not before I send the request, like I do now. See?\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm not a Robospice developer, but I use it in all of my Android projects that require networking.  I also use ORMLite in all of my Android projects even if I don't strictly need it.  The ability to persist data and easily migrate between versions of this data is something I cannot to do without.\nIf you're new to Robospice adding ORMLite to your pile of new stuff may be a bit much at first.  I do however highly recommend it, because it actually is quite easy to use once you've got it all setup.  And the documentation is also very good.\n\nAnother reason I use ORMLite is that I can't modify the Robospice cache.  It's read-only (as far as I know).  Although I believe a setDataForCacheKey has recently been added to the SpiceManager.\nSo IMHO having a decent, flexible and performant backing store for your data is a must.  Don't shy away from ORMLite in favor of a quick fix.\nGreetings\nMoritz\nOn 03.10.2013, at 20:54, Ilya Mizus notifications@github.com wrote:\n\nActually, I don't use Spring Android and don't use any ORM in the project, but I understand your point.\nUnfortunately, the server isn't mine (it belongs to other company) and it's unable to respond with 304. It just send the lifetime of the object with that object. Nothing more.\nHave I understood your point well - the easiest solution for this situation is custom data mapping outside RoboSpice? It's not quite easy way. Maybe there is a simplier method? Maybe I could subclass some of your classes? Or use any reflection hack? ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. What's stopping you from remembering the duration for which your object is valid for when you first retrieve it.  Save the valid until date to the shared preferences and read from cache until after that date.\n\nDoes your server always respond with the complete object, or does it only respond with the valid until date?\nYou can always retrieve your object from the cache using getFromCache on the SpiceManager.\nI don't see why you can't solve your situation with the tools available.\nhttp://octo-online.github.io/robospice/site/latest/apidocs/com/octo/android/robospice/SpiceManager.html#getFromCache%28java.lang.Class,%20java.lang.Object,%20long,%20com.octo.android.robospice.request.listener.RequestListener%29\nOn 03.10.2013, at 21:22, Ilya Mizus notifications@github.com wrote:\n\nThank you for your advice, but there is too much code and too few time to refactor the system for using a new ORM library.\nI'm looking forward to a response from the developers.\n\u2014\nReply to this email directly or view it on GitHub.\n. By the way, there is a mailing list for stuff like this:\nhttps://groups.google.com/forum/#!forum/robospice\n\nOn 03.10.2013, at 21:39, Ilya Mizus notifications@github.com wrote:\n\nand read from cache until after that date\nSo I can, for example, retrieve the object from cache (with a very long life time) until I consider it invalid and then I can erase the cache and request the new version of the object... Hmmm....\nDoes your server always respond with the complete object\nYes, it does. And it doesn't support 304.\nThank you for the idea. I'll try it.\n\u2014\nReply to this email directly or view it on GitHub.\n. Can you give us a bit more information to go on?\n\nJuneLeGency notifications@github.com wrote:\n\nI dont know why it takes so long to cache my data to databse.\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. Yes, just include the jars from the repository branch as dependencies into your existing Eclipse Project.\n\nI use Spring Android and Jackson with Robospice.\nFor data persistency outside of Robospice I use ORMLite.\nFor a Spring Android setup copy the following jars from the repository brach > dependencies 1.4.9 into your project\u2019s libs folder:\ncommons-io-1.3.2.jar\ncommons-lang3-3.1.jar\njackson-annotations-2.2.3.jar\njackson-core-2.2.3.jar\njackson-databind-2.2.3.jar\nrobospice-1.4.9.jar\nrobospice-cache-1.4.9.jar\nrobospice-spring-android-1.4.9.jar\nspring-android-core-1.0.1.RELEASE.jar\nspring-android-rest-template-1.0.1.RELEASE.jar\nHope that helps\nGreetings\nMoritz\nOn 02.11.2013, at 16:25, Riccardo Ciovati notifications@github.com wrote:\n\nWhy don't you use normal jars?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi \nAnother option would be to use \nhttp://developer.android.com/reference/android/app/FragmentTransaction.html#commitAllowingStateLoss%28%29 on your fragment transaction instead of just commit();\n\nGreetings\nMoritz\nOn 14.11.2013, at 21:10, CoolProgrammer notifications@github.com wrote:\n\nHi\nI am building an Android app using Robospice v1.4.9. In OnRequestSuccess(), I am trying to commit a fragment transaction. The problem happens when I call the service and while waiting for the response, I put my application to background. As I put my app to background, It saves the state of the activity by calling OnSavedInstanceState(). Meanwhile if the service response comes then OnRequestSuccess() gets called and app thorws IllegalStateException while committing the fragment transaction as fragment transactions cannot be committed after the state of the activity has been saved.\nSo I want that when my app goes to the background, the request listening should be paused and when my activity comes to foreground, request listening should be resumed. Is it possible with Robospice. Please suggest.\n\u2014\nReply to this email directly or view it on GitHub.\n. This works, thanks!\n. @arya6000 I saw your post here. Send me the APK, and I will get back to you ASAP.. @arya6000 yes!. \n",
    "jeffdgr8": "I have installed Maven and tried following the directions here and get errors when trying to build with Maven:\n$ mvn clean install -Pant\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Robospice - Sample Core 1.0.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[WARNING] The POM for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT is missing, no dependency information available\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1.530s\n[INFO] Finished at: Fri Jan 18 03:34:27 MST 2013\n[INFO] Final Memory: 7M/243M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project robospice-sample-core: Could not resolve dependencies for project com.octo.android.robospice:robospice-sample-core:apk:1.0.0-SNAPSHOT: Could not find artifact com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n. Ah, important to note. Thanks. I'll also note I needed to make sure I had an environment variable ANDROID_HOME set to the Android SDK path as well as a device attached for the tests to run during compile (although they never seemed to actually run anything, always a 0 next to run). There were also a number of [WARNING] lines outputted. But all is working. Now to integrate in my own code. Thanks!\n. I found a workaround (documented in StackOverflow post), but this may pop up as a common issue for people with the constructor formatted the way it is. In my case, the object returned by my network service is a Map with various Objects (Strings, Integers, ArrayLists, etc.) from an XML-RPC call and so I need to use the generic class type Map<String, ? extends Object> for the result type in SpiceRequest.\n. OK, thank you for the info. That is helpful.\n. ",
    "AfzalivE": "I think if you run mvn clean package, it won't need a device.\n. ",
    "joel1di1": "Is it possible to ignore checkstyle configuration for specific packages ?\nOn Mon, Jan 7, 2013 at 5:52 PM, stephanenicolas notifications@github.comwrote:\n\nIts seems to be hard question.\nJava coding conventions prohibits the\n[testMethodUnderTest_details_about_the_test] pattern, but I find it very\nclear.\nI found this thread to reflect diversity of test naming conventions :\nhttp://stackoverflow.com/questions/96297/what-are-some-popular-naming-conventions-for-unit-tests\nS.\n2013/1/7 Riccardo Ciovati notifications@github.com\n\nIn our tests a few classes have non-standard class name (for instance,\nunderscore inside class name).\nOur checkstyle configuration has been teaked (in commit c048fc1<\nhttps://github.com/octo-online/robospice/commit/c048fc1>)\nfor allowing these names but those classes should be fixed to be\ncompliant\nwith the standard naming.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/18>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/18#issuecomment-11959566.\n. \n",
    "ankushg": "Thanks St\u00e9phane,\nIs there any reason in particular that you don't use Maven Central's snapshot repository or set your github repository up to be a custom repo? I feel like that would be a lot simpler and more efficient wouldn't it?\nAnkush\n. I was thinking something like this or this\nIt might just be easier to use something like SonaType to just make snapshot artifacts available through there though\n. +1, having this issue as well\n. Thanks!\nJust making sure I understand what getFromCacheAndLoadFromNetworkIfExpired() does since it seems to be barely documented. \nIf I use getFromCacheAndLoadFromNetworkIfExpired() and the data is cached and expired, it will result in the Listener being called twice, once for being returned from the cache even though it is expired, and a second time when it retrieves the fresh data from the network?\n. I would have thought the behavior of the method should be as @Konsumierer described as well (provided the Listeners are coded appropriately), as that is what I was looking for in https://github.com/octo-online/robospice/issues/112\nIs there any update or fix for this?\n. ",
    "papo2608": "\nWould you mind to had a feature request in our issue page ?\n\nYes of course but i'm not sure how to do that?\n\nAlso, feel free to hack RoboSpice to provide it as well.\n\nMy approach will be:\n- extend the execute methods of the SpiceManger with a request key (needed to identify the status of a request in the db)\n- adding a enum for the status of a request: PENDING, CANCELED, FAILED, COMPLETED\n- add some db logic in RequestProcessor for updating and inserting the request status in the db\n- add a new method in the SpiceManger with a class param and the request key which fetches the status for a request from the db\nIs this the correct way to do that?\n. > where you listener would implement the RequestProgressListener interface. That would work for every pending request, but not for completed requests.\nBut that's the point, I need that feature also for completed requests and for requests which are not cached. Is it possible to add a member to the SpiceManager which holds all completed requests(key = cache key, value = request)? For example in onRequestProcessed in SpiceManager and when a request is added i remove it from this HashMap.\nEDIT:\nOK, I see SpiceManager is the wrong place, should be RequestProcessor.\n. Yes I know as i mentioned before SpiceManager is the wrong place for that feature.\nI needed it for depended requests. Request two needs data from request one. My solution was to generate a unique request key with the values of the post params and I saved/restored it in onSaveInstanceState/onRestoreInstanceState, as in robospice-sample-spring-android that worked for my use case.\n. You can reproduce this issue with:\n1. checkout robospice-sample-spring-android\n2. I'm using Gson instead of Jackson\n3. put following lines of code in your MainActivity class:\njava\n    @Override\n    protected void onResume() {\n        super.onResume();\n        ListTweets tweets;\n        try {\n            Future<ListTweets> task = contentManager.getDataFromCache(ListTweets.class, \"tweets.android\");\n            tweets = task.get();\n        } catch (CacheLoadingException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n4 search with the query \"android\"\n5 you get an ANR error\n. OK, so there is no possibility to get cached data synchronously?\n. I think it was my mistake. I used addListenerIfPending(...) and after that execute(...) (with DurationInMillis.ALWAYS) , so the listener got called twice:\n1) with the data\n2) with null because the request was still pending\n. ",
    "bojanv55": "I understand this what you are saying.\nBut - when activity is on pause and service successfully completes, then onResume of activity, activity can access to cache and onRequestSuccess is called this time (since there is something in the cache putted there while activity was paused). But, if service fails, there is nothing written into cache (is this situation?) and onResume tries to access the cache, sees that there is nothing and doesn't call onRequestFailure!\nCan you provide something in cache even if service fails, so I can access to it onResume and proper callback method is called onRequestFailure?\n. ",
    "nilkashid": "Hi Rciovati Thank you for Help. Its working fine.. but I need to make some changes in pom file like I have to give my SDK folder file. And also have to change targeted platform version. And its working fine.... \n. Yeah sure ... Thank you for your great support ...\n. ",
    "mobitinker": "Thanks St\u00e9phane!\nI cloned yesterday afternoon. At the robospice-master directory I used mvn\nclean install.\nThere was a mention in your issues about not using snapshots and that 1.3.1\n(I think) was the latest actual release. I couldn't see how to get the\n1.3.1 version. (Not fluent in Git yet).\nLooking forward to getting at the code!\nBest,\nMark\nOn Mon, Jan 28, 2013 at 11:38 PM, stephanenicolas\nnotifications@github.comwrote:\n\nHi mark,\nit's strange you get this error. When did you clone our repo ? What\ncommand\ndid you type exactly ?\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nHi,\nThis looks like a very useful library, but I can't get started. I've\ndownloaded Maven and followed the rest of the instructions and get\nerrors\non mvn clean install from the robospice-master directory.\nI'm new to Maven. Can you see what's wrong? I tried the non-maven\nusers's\ninstructions and that failed too. I saw mention on another issue about\ngetting 1.3.1 but how do I get through Git?\nThanks!\nMark\n[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-cache:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-cache-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-core-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-core-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-spring-android-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-google-http-client-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the effective\nmodel for com.octo.android.robospice:robospice-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @ line 470,\ncolumn 12\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they\nthreaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support\nbuilding such malformed projects.\n[WARNING]\n[INFO]\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Robospice - Parent\n[INFO] Robospice - Persistence Module Parent\n[INFO] Robospice - Persistence Module\n[INFO] Robospice - Persistence Module tests\n[INFO] Robospice - Core Module Parent\n[INFO] Robospice - Core\n[INFO] Robospice - Core Module tests\n[INFO] Robospice - Extension Spring Android Module Parent\n[INFO] Robospice - Extension Spring Android Module\n[INFO] Robospice - Extension Spring Android Module tests\n[INFO] Robospice - Extension Google Http Java Client Module Parent\n[INFO] Robospice - Extension Google Htpp Java Client Module\n[INFO] Robospice - Extension Google Http Java Client Module tests\n[INFO] Robospice - Extension ORMLite Module Parent\n[INFO] Robospice - Extension ORMLite Module\n[INFO] Robospice - Extension ORMLite Module tests\n[INFO] Robospice - Extension UI SpiceList Parent\n[INFO] Robospice - Extension UI SpiceList Module\n[INFO] Robospice - Extension UI SpiceList Module tests\n[INFO]\n[INFO]\n[INFO] Building Robospice - Parent 1.3.2-SNAPSHOT\n[INFO]\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-parent ---\n[INFO] Installing C:\\programs\\robospice\\robospice\\pom.xml to\nC:\\Users\\Mark\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-parent\\1.3.2-SNAPSHOT\\robospice-parent-1.3.2-SNAPSHOT.pom\n[INFO]\n[INFO]\n[INFO] Building Robospice - Persistence Module Parent 1.3.2-SNAPSHOT\n[INFO]\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-cache-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-cache-parent ---\n[INFO] Installing\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\pom.xml to\nC:\\Users\\Mark\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-cache-parent\\1.3.2-SNAPSHOT\\robospice-cache-parent-1.3.2-SNAPSHOT.pom\n[INFO]\n[INFO]\n[INFO] Building Robospice - Persistence Module 1.3.2-SNAPSHOT\n[INFO]\n[WARNING] The artifact org.apache.commons:commons-io:jar:1.3.2 has been\nrelocated to commons-io:commons-io:jar:1.3.2\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache ---\n[INFO] Deleting\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\robospice-cache\\target\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache ---\n[INFO]\n[INFO] --- maven-checkstyle-plugin:2.9.1:check (default) @\nrobospice-cache\n[INFO]\n[INFO] There are 16 checkstyle errors.\n[INFO]\n[INFO] Reactor Summary:\n[INFO]\n[INFO] Robospice - Parent ................................ SUCCESS\n[1.652s]\n[INFO] Robospice - Persistence Module Parent ............. SUCCESS\n[0.025s]\n[INFO] Robospice - Persistence Module .................... FAILURE\n[2.250s]\n[INFO] Robospice - Persistence Module tests .............. SKIPPED\n[INFO] Robospice - Core Module Parent .................... SKIPPED\n[INFO] Robospice - Core .................................. SKIPPED\n[INFO] Robospice - Core Module tests ..................... SKIPPED\n[INFO] Robospice - Extension Spring Android Module Parent SKIPPED\n[INFO] Robospice - Extension Spring Android Module ....... SKIPPED\n[INFO] Robospice - Extension Spring Android Module tests . SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module Parent\nSKIPPED\n[INFO] Robospice - Extension Google Htpp Java Client Module SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module tests\nSKIPPED\n[INFO] Robospice - Extension ORMLite Module Parent ....... SKIPPED\n[INFO] Robospice - Extension ORMLite Module .............. SKIPPED\n[INFO] Robospice - Extension ORMLite Module tests ........ SKIPPED\n[INFO] Robospice - Extension UI SpiceList Parent ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module tests ... SKIPPED\n[INFO]\n[INFO] BUILD FAILURE\n[INFO]\n[INFO] Total time: 5.434s\n[INFO] Finished at: Mon Jan 28 18:46:01 PST 2013\n[INFO] Final Memory: 12M/21M\n[INFO]\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-checkstyle-plugin:2.9.1:check (default)\non\nproject robospice-cache: You have 16 Checkstyle violations. -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the\n-e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the\ncommand\n[ERROR] mvn -rf :robospice-cache\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u0097\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/34#issuecomment-12823669.\n\n\nMark Murphy, 503-809-1141, LinkedIn http://www.linkedin.com/in/markkmurphy\n, murphysw.com\n. Hi and thank you Riccardo!\nAfter I did a complete fetch from the remote this worked perfectly. It\nmight be good to make note about using 1.3.1 in your Git pages.\nOn Tue, Jan 29, 2013 at 8:08 AM, Riccardo Ciovati\nnotifications@github.comwrote:\n\nHello Mark,\nfor getting the code of the 1.3.1 release is enough:\ngit checkout robospice-parent-1.3.1\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/34#issuecomment-12842014.\n\n\nMark Murphy, 503-809-1141, LinkedIn http://www.linkedin.com/in/markkmurphy\n, murphysw.com\n. Thanks Stephane,\nRiccardo also advised this.\n-Mark\nOn Wed, Jan 30, 2013 at 12:14 AM, stephanenicolas\nnotifications@github.comwrote:\n\nHi Mark,\ngit can be used to get the latest state of RoboSpice, not a released\nversion (you could but it would be complex for nothing).\nIf you want a release version, look at maven central and get the jars of\nrelease 1.3.1. We are working to make it easier to get the jars &\ndependencies for non maven users. We are almost done and this will be an\nimportant \"feature\" of release 1.4.0.\nIf you want a snapshot version (like 1.3.2-SNAPSHOT), we also have\nsnapshots on sonatype snapshots repo.\nIf you want to get the latest latest latest state of the sources, then use\ngit.\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nThanks St\u00e9phane!\nI cloned yesterday afternoon. At the robospice-master directory I used\nmvn\nclean install.\nThere was a mention in your issues about not using snapshots and that\n1.3.1\n(I think) was the latest actual release. I couldn't see how to get the\n1.3.1 version. (Not fluent in Git yet).\nLooking forward to getting at the code!\nBest,\nMark\nOn Mon, Jan 28, 2013 at 11:38 PM, stephanenicolas\nnotifications@github.comwrote:\n\nHi mark,\nit's strange you get this error. When did you clone our repo ? What\ncommand\ndid you type exactly ?\nSt\u00e9phane\n2013/1/29 Mark Murphy notifications@github.com\n\nHi,\nThis looks like a very useful library, but I can't get started. I've\ndownloaded Maven and followed the rest of the instructions and get\nerrors\non mvn clean install from the robospice-master directory.\nI'm new to Maven. Can you see what's wrong? I tried the non-maven\nusers's\ninstructions and that failed too. I saw mention on another issue\nabout\ngetting 1.3.1 but how do I get through Git?\nThanks!\nMark\n[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-cache:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-cache-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-cache-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for com.octo.android.robospice:robospice:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-core-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-core-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-spring-android:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-spring-android-test:apk:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-spring-android-parent:pom:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-google-http-client:jar:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-google-http-client-test:apk:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-google-http-client-parent:pom:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-ormlite:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-test:apk:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-ormlite-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-ui-spicelist:jar:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-ui-spicelist-test:apk:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\n\n\ncom.octo.android.robospice:robospice-ui-spicelist-parent:pom:1.3.2-SNAPSHOT\n\n\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @\ncom.octo.android.robospice:robospice-parent:1.3.2-SNAPSHOT,\nC:\\programs\\robospice\\robospice\\pom.xml, line 470, column 12\n[WARNING]\n[WARNING] Some problems were encountered while building the\neffective\nmodel for\ncom.octo.android.robospice:robospice-parent:pom:1.3.2-SNAPSHOT\n[WARNING] 'reporting.plugins.plugin.version' for\norg.apache.maven.plugins:maven-javadoc-plugin is missing. @ line\n470,\ncolumn 12\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because\nthey\nthreaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer\nsupport\nbuilding such malformed projects.\n[WARNING]\n[INFO]\n\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Robospice - Parent\n[INFO] Robospice - Persistence Module Parent\n[INFO] Robospice - Persistence Module\n[INFO] Robospice - Persistence Module tests\n[INFO] Robospice - Core Module Parent\n[INFO] Robospice - Core\n[INFO] Robospice - Core Module tests\n[INFO] Robospice - Extension Spring Android Module Parent\n[INFO] Robospice - Extension Spring Android Module\n[INFO] Robospice - Extension Spring Android Module tests\n[INFO] Robospice - Extension Google Http Java Client Module Parent\n[INFO] Robospice - Extension Google Htpp Java Client Module\n[INFO] Robospice - Extension Google Http Java Client Module tests\n[INFO] Robospice - Extension ORMLite Module Parent\n[INFO] Robospice - Extension ORMLite Module\n[INFO] Robospice - Extension ORMLite Module tests\n[INFO] Robospice - Extension UI SpiceList Parent\n[INFO] Robospice - Extension UI SpiceList Module\n[INFO] Robospice - Extension UI SpiceList Module tests\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Parent 1.3.2-SNAPSHOT\n[INFO]\n\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-parent ---\n[INFO] Installing C:\\programs\\robospice\\robospice\\pom.xml to\nC:\\Users\\Mark\n\n\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-parent\\1.3.2-SNAPSHOT\\robospice-parent-1.3.2-SNAPSHOT.pom\n\n\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Persistence Module Parent 1.3.2-SNAPSHOT\n[INFO]\n\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache-parent ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.9:jar (attach-javadoc) @\nrobospice-cache-parent ---\n[INFO] Not executing Javadoc as the project is not a Java\nclasspath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3.1:install (default-install) @\nrobospice-cache-parent ---\n[INFO] Installing\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\pom.xml to\nC:\\Users\\Mark\n\n\nMurphy.m2\\repository\\com\\octo\\android\\robospice\\robospice-cache-parent\\1.3.2-SNAPSHOT\\robospice-cache-parent-1.3.2-SNAPSHOT.pom\n\n\n[INFO]\n[INFO]\n\n[INFO] Building Robospice - Persistence Module 1.3.2-SNAPSHOT\n[INFO]\n\n[WARNING] The artifact org.apache.commons:commons-io:jar:1.3.2 has\nbeen\nrelocated to commons-io:commons-io:jar:1.3.2\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @\nrobospice-cache ---\n[INFO] Deleting\n\n\nC:\\programs\\robospice\\robospice\\robospice-cache-parent\\robospice-cache\\target\n\n\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @\nrobospice-cache ---\n[INFO]\n[INFO] --- maven-checkstyle-plugin:2.9.1:check (default) @\nrobospice-cache\n[INFO]\n[INFO] There are 16 checkstyle errors.\n[INFO]\n\n[INFO] Reactor Summary:\n[INFO]\n[INFO] Robospice - Parent ................................ SUCCESS\n[1.652s]\n[INFO] Robospice - Persistence Module Parent ............. SUCCESS\n[0.025s]\n[INFO] Robospice - Persistence Module .................... FAILURE\n[2.250s]\n[INFO] Robospice - Persistence Module tests .............. SKIPPED\n[INFO] Robospice - Core Module Parent .................... SKIPPED\n[INFO] Robospice - Core .................................. SKIPPED\n[INFO] Robospice - Core Module tests ..................... SKIPPED\n[INFO] Robospice - Extension Spring Android Module Parent SKIPPED\n[INFO] Robospice - Extension Spring Android Module ....... SKIPPED\n[INFO] Robospice - Extension Spring Android Module tests . SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module Parent\nSKIPPED\n[INFO] Robospice - Extension Google Htpp Java Client Module SKIPPED\n[INFO] Robospice - Extension Google Http Java Client Module tests\nSKIPPED\n[INFO] Robospice - Extension ORMLite Module Parent ....... SKIPPED\n[INFO] Robospice - Extension ORMLite Module .............. SKIPPED\n[INFO] Robospice - Extension ORMLite Module tests ........ SKIPPED\n[INFO] Robospice - Extension UI SpiceList Parent ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module ......... SKIPPED\n[INFO] Robospice - Extension UI SpiceList Module tests ... SKIPPED\n[INFO]\n\n[INFO] BUILD FAILURE\n[INFO]\n\n[INFO] Total time: 5.434s\n[INFO] Finished at: Mon Jan 28 18:46:01 PST 2013\n[INFO] Final Memory: 12M/21M\n[INFO]\n\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-checkstyle-plugin:2.9.1:check\n(default)\non\nproject robospice-cache: You have 16 Checkstyle violations. -> [Help\n1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with\nthe\n-e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug\nlogging.\n[ERROR]\n[ERROR] For more information about the errors and possible\nsolutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with\nthe\ncommand\n[ERROR] mvn -rf :robospice-cache\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34#issuecomment-12823669>.\n\n\nMark Murphy, 503-809-1141, LinkedIn <\nhttp://www.linkedin.com/in/markkmurphy>\n, murphysw.com\n\u0097\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/34#issuecomment-12841703>.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u0097\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/34#issuecomment-12878698.\n\n\nMark Murphy, 503-809-1141, LinkedIn http://www.linkedin.com/in/markkmurphy\n, murphysw.com\n. ",
    "Shusshu": "Maybe related to https://groups.google.com/forum/?fromgroups=#!topic/robospice/2GaiisbzuUQ\n\"...service to deal with a JSON response and the object extends ArrayList, I can't seem to debug the error as it silently fails...\"\n. I have been able to reproduce this error on the samples\nRepro steps\n1\u00b0 Plug a device via usb and turn the screen off (sleep)\n2\u00b0 \\RoboSpice-samples\\robospice-sample-spring-android>mvn clean install android:deploy android:run\n3\u00b0 Turn the screen on\n4\u00b0 Press the back key (to close the app)\nAnd you can find the log in logcat.\nI don't think it's a big problem.\nCheers\n. I was still able to reproduce it with the 1.4.1-SNAPSHOT \n. I made my own SNAPSHOT release, but I'll retry\nBenoit Billington\nOn Mon, Mar 4, 2013 at 1:15 PM, stephanenicolas notifications@github.comwrote:\n\nSNAPSHOT was not deployed yet. You can try it now. It was only committed /\npushed on master branch when you tried.\nS.\n2013/3/4 Benoit Billington notifications@github.com\n\nI was still able to reproduce it with the 1.4.1-SNAPSHOT\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/40#issuecomment-14371109>\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/40#issuecomment-14377887\n.\n. or https://github.com/TimotheeJeannin/ProviGen or my fork which is mavenised : https://github.com/Shusshu/ProviGen\n. I'd like to see this released :)\n. Good job man ;)\n. \n",
    "grahamsmith": "Yes I think it is the same issue. The actual root of my issue could be summarised as:\n```\n//doesn't work with Ormlite extension but fine with JSON\npublic class Foos extends ArrayList< Foo>{\n}\n```\n//works\n```\npublic class Foos {\nprivate ArrayList<Foo> someFoos;\n\npublic ArrayList<Foo> getCollectionOfFoo()\n{\n     return someFoos;\n}\n\n}\n```\nThe issue is in my situation i have an array with no outer object, therefore the latter will not work for the situation. I wonder if it is a Ormlite issue rather than Robospice? I have started looking through the extension source code.\n. ",
    "kombucha": "OK, sorry.\nBasically, I was assuming that onRequestProgress would be called successively with a progress value of\nPENDING -> READING_FROM_CACHE -> COMPLETE\nbut what I get in that particular case is the reverse, meaning onRequestProgressUpdate is called with\nCOMPLETE -> READING_FROM_CACHE -> PENDING.\nWas my assumption wrong ?\n. ",
    "venator85": "I'm experiencing a very similar issue in RoboSpice 1.4.0. When loadDataFromNetwork throws an Exception, RoboSpice triggers the following callbacks ordering in the associated listener (also implementing RequestProgressListener):\n- onRequestFailure\n- onRequestProgressUpdate with progress COMPLETE\n- onRequestProgressUpdate with progress LOADING_FROM_NETWORK (!?!? this is the issue)\nA test app to reproduce the issue is available at: https://github.com/venator85/RoboSpiceTestApp\nIn this app, I use a RequestProgressListener to show/hide a full screen loading dialog, showing it when LOADING_FROM_NETWORK and hiding it on failures and COMPLETE (see the class AbstractLoadingRequestListener).\nTo reproduce the issue, just run the app and stare at the stuck loading dialog :)\nBest regards\n. Also tried with RoboSpice 1.4.1-SNAPSHOT jars downloaded right now, with the same results. Here is a comprehensive logcat of the issue: http://pastebin.com/csNdjN8w\nI've made some investigations on the code to figure out this, could it be because RequestProcessor's post() method posts progress updates runnables in a LIFO fashion, by adding new runnables always at the front of the handler's queue?\nprivate void post(final Runnable r, final Object token) {\n    handlerResponse.postAtTime(r, token, 0);\n}\nThanks ;)\n. Hi St\u00e9phane,\nI have some more information on this issue. I suspect this is a synchronization issue between SpiceManager start() and execute() methods. If I start the SpiceManager in my activity's onStart() method and execute() a request in onResume(), I will experience the issue. But if I delay the execute() call in onResume by a couple of seconds via Handler.postDelayed(), I am not able to reproduce the issue.\nHere are some logs of both scenarios:\nShowing error, immediate execute() in onResume(): http://pastebin.com/Arp3wjHB\nNot showing error, delayed execute() in onResume(): http://pastebin.com/piQmeHQW\nI updated my sample app to allow you to replicate this issue (https://github.com/venator85/RoboSpiceTestApp).\nThanks\n. I confirm the fix is working. Thanks St\u00e9phane!\n. ",
    "djusv": "First off: sorry for my late response!\nSecondly thank you for fixing the bug i can confirm this solved my problems.\n. ",
    "dogweather": "To be more precise: It is never executing the second SpiceRequest and instead simply invoking the second RequestListener with the results from the first execute call.\n. Ah hah. This may be a duplicate of https://github.com/octo-online/robospice/issues/37\nIf so, this is a known bug and the workaround is to use cached requests. Will give that a try.\n. ",
    "jdegroot": "Unfortunately I can't provide you with the actual code and I don't have time to create a new project to reproduce the problem the coming days/weeks. I can tell you that the error so far only occurs when I start the app with the device screen off, using the maven goals android:run and android:deploy. Hopefully this helps indentifying the problem.\n. Is the version 1.4.12 going to be released soon?\n. @rciovati Thanks!\n. ",
    "alberovalley": "Hi, I just cloned the samples last night and this issue keeps reproducing.\nThese are the logs I get (no warnings, though)  http://pastebin.com/1UY4b1qh\n. Yes, using \"if (spiceManager.isStarted()) \" it prevents exceptions, though it seems it won't load data.\nI've taken spicelist sample (the one with the tweets list) and used it to build a feed reader. I use the simpletextrequest and the SpringAndroidSpiceService that came along with the sample. My base activity had only the spiceManager start and stop calls.\nAnything else that can be of help?\n. No, nothing like that. I'm guessing this issue would only happen to developers: you change your code, build + deploy and the start happen before you even got to unlock your device's screen, so the app gets started and stopped before you even see it. By the time you got to unlock the screen, it's too late, the exception has been thrown. \nHowever, I imagine that if robospice gets mixed with background tasks that would launch activities, this may happen to end users: idle device gets notification that starts an app with robospice > since screen is off, it's start is inmediately followed by an stop and a crash... \n. ",
    "weefbellington": "That might be preferable anyway since the LruCache has been updated since r7. Hopefully you don't run into any issues with non-public APIs.\n. St\u00e9phane,\nThanks for rolling this in so quickly! I took a look at your changes and most of it looks great.\nQuestions:\n\nIn the LruCacheObjectPersister constructor, you pass null to the superclass for the Application object. I assume that this is intentional -- is that just the convention for all object persisters that don't need to use the getApplication() call? What about subclasses that might expect it to be populated?\nI'm a little curious about the RGB565 encode/decode problem. That test is passing on the emulator on my machine...I've tried building it on 2.1 (Eclair) and 4.2 (Jellybean). I have no problem taking that test out, but I don't understand why the outcome is different. Any ideas?\n\nComments:\n\nI agree that an LruCache only makes sense for certain types of objects -- I think we're just have to trust the users of the library to be smart about that.\nI am not too concerned about size approximation of objects in the LruCache. If people want to put more complex objects in the cache, i.e. JSON objects, they're just going to have to do their own size approximations.\nI had done the same thing with downsampling in a Spice Request for the demo. Originally I was just going to use robospice-spring-android and the ByteArrayHttpMessageConverter, but the new BitmapRequest is better. Now I can create a demo without having to use any extensions. Thanks for adding that in!\n\nSuggestions:\nTests\nWhat do you think about adding tests for the following scenarios:\n- test to check that removing data from the memory cache also removes it from the decorated cache\n- test to check that loading data from the decorated cache also loads it into the memory cache, with the correct timestamp\nOther suggestions\n\nAt some point it might be useful to add Bitmap requests for the Spring Android and google-http-client modules.\nThe javadoc for the LruCacheBitmapObjectPersister is wrong, it refers to Strings instead of Bitmaps\n. Sure, I'll work off of the master branch from now on. I don't think I'll need to re-fork, I'll just merge your changes my the existing fork.\n\nI think we are talking past each other a little bit. When I say that I think it should be left to the users of the library to  set the size of their LruCache and approximate the size of their POJOs, I'm not suggesting that the best way to do this is to measure the size of the object in memory. Sometimes a much rougher approximation is OK.\nFor example, consider the case of JSON responses. Maybe as a developer I know that JSON responses from my web service will be one of two types: one that is at most 1024 bytes and one that is at most 256 bytes. And let us assume that I want my LruCache to up approximately 1MB of space in memory (assuming some extra overhead for the object's metadata). In that case, I could create an LRUCache with a max size of 1024 * 1024, assigning the large POJO a size of 1024 and the small POJO a size of 256. I don't care about measuring the size of each object exactly because it averages out in the end.\nMy feeling is that the developers who are using the library know more about their data than we do, so we should let them handle the approximation.\n. Just wondering what the status of this is. If it still needs to be implemented, I'd be willing to help.\n. I recently tried out LucidChart for software architecture sketching and I was very pleased with it. It seems like it would be good tool for collaborative design.\n. OK, I'll take the first stab at it.\nAs an application developer, I know I would like the API for obtaining a persistent connection to resemble a SpiceRequest. But I also know that the SpiceService will need to differentiate between persistent and non-persistent connections. Here is what the interface looks like in my head:\nCONFIGURATION\n\nImplement a SpiceConnection class. This class has two abstract methods:\n\npublic void open()\npublic void close()\n\nImplement a SpiceConnection.Listener class. This class has three abstract methods:\n\npublic void onConnectionOpened()\npublic void onConnectionClosed()\npublic void onConnectionFailure()\n\nImplement a SpiceConnection.Transmitter<ConnectionType extends SpiceConnection> class. This class has one abstract method:\n\npublic void transmit(ConnectionType connection)\n\nImplement one or more SpiceConnection.Receiver<ResultType> classes. These classes have one abstract method:\n\npublic void receive(ResultType result)\nUSAGE\n1. Create an instance of SpiceConnection\n2. Create an instance of SpiceConnection.Listener.\n3. Create an instance of SpiceConnection.Transmitter.\n4. Create an instance of SpiceConnection.Receiver\n5. To open the connection, call SpiceManager.openConnection(SpiceConnection connection).\n6. To register for callbacks from the connection, call SpiceManager.registerReceiver(SpiceConnection connection, SpiceConnection.Receiver receiver).\n7. To send data through the connection, call SpiceManager.transmit(SpiceConnection connection, SpiceConnection.Transmitter transmitter).\nCOMMENTS\n- If the SpiceConnection is in an connecting state, Calls to SpiceManager.transmit() would be queued until the connection has opened.\n- One peculiar aspect of web sockets (and two-way connections in general) is that requests may or may not be mapped to responses. From what I've read it looks like the basic web socket protocol does not map requests to responses, but some subprotocols (such as WAMP) do. For this approach I've assumed no relationship between requests and responses, but it's worth considering whether this approach would be extensible to support that scenario.\n- I've decoupled the actual connection object from the data transmission object. It's a little clumsy, but it addresses Stephan's comment about String and Json types.\nThoughts/comments/critiques? What am I missing, how would you do it differently?\n. ConnectionType is a generic type that extends SpiceConnection. For example the concrete type could be a WebSocketConnection. When Robospice is ready to initiate a queued request, the WebSocketConnection would be passed to the Transmitter, which would be responsible for sending the message. It's a similar idea doInBackground(). A Transmitter is basically the equivalent of a SpiceRequest when dealing with an open SpiceConnection.\nResultType is simply the type of data returned from the server, e.g., JSON, String, etc.\nFrom a philosophical perspective, I think Robospice is a good match for web sockets for a few reasons:\n- Robospice is designed to facilitate long-running, asynchronous networking tasks. Web sockets fit naturally into this definition.\n- One of the tenants in the Design of Robospice document is protocol-agnosticism. So I don't think it should be limited to request/response type connections.\n- It was designed with multithreading, which would be helpful when managing several open web socket connections.\n- Most existing web socket libraries are fairly low-level and are not aware of the Android lifecycle. Robospice could help ease the burden on the developer by closing the connection when the application moves into a background state. It could also potentially re-open the connection when the application wakes up again.\n. ",
    "mshipton": "I noticed in BitmapRequest you download the image to a local file in the cache directory then use BitmapFactory.decodeFile to create the Bitmap. Is there a reason you do not create the Bitmap directly from the InputStream using BitmapFactory.decodeStream?\n. In the case of the BitmapRequest the Bitmap result is always be loaded into memory. Whether it is done through decodeFile or decodeStream. It's probably less efficient to do it via decodeFile because you have the extra file r/w overhead.\nSince the requests are cache agnostic is IBitmapRequest.getCacheFile present to give some sort of basic cache in case the SpiceService doesn't provide one?\n. ",
    "andaag": "We've considered something like this for our project:\nhttp://blog.wu-man.com/2012/10/twolevellrucache-standing-on-shoulder.html\nI wouldn't mind having a memory cache sit ahead of the disk cache in a lot of cases. Of course optimally it would only drop to disk when the memory cache fills up.\n. Is there a pull request/discussion about this somewhere?\nHis approach is very simple and clean, and one I've seen used many places.\nsave:\nput to memory cache\nput in disk cache\nHowever, I'd like an option to do this instead:\nput in memory cache\nif memory cache full (on entryRemoved(evicted=false)) drop to disk cache. It might be a good idea to try to group up the cache cleanups as well, to reduce disk io as much as possible and extend battery life. I don't know if it's a better idea, and it's more complicated, but I think it's worth considering.\n. You can monitor onTrimMemory, I believe that's a pretty sure way of catching it. And you can do that in the service itself, so the activity knows as little about the caching/background stuff as possible.\n. Building something that sticks with memory cache by default and monitors onTrimMemory is on my todo list, but we're not quite there yet. When we get the application I'm working and move on to the polishing stage we'll do some performance measurements in the caching system and see if we want to replace it. If we get it working well you can expect a pull request :)\n. Run getFromCache from DurationInMillis.ALWAYS. On refresh you can trigger an execute with the actual duration you want (for example 0 to force a refresh).\n. We have our own ObjectPersisters, but the data passed in to that class is the type returned from loadDataFromNetwork. An alternate way would be to ignore the data returned, and do the caching manually within loadDataFromNetwork, but that's far from optimal.\n. ",
    "StingerAJ": "Wouldn't it be better to assign a new label \"needs contribution\" or something like that instead of closing?\nI don't think people will easily contribute to closed issues.\n. I had this exception, too I think with many listitems (actually in a GridView). The difference is, I am using the spicelist-module. I don't have the stacktrace around, but I will retest it with this version and report again here if it reoccurs. Thanks for the try to fix it.\n. Oh, one important thing I remember, The related HashMap-iterating code was about notifying the OctoImageRequestListener-instances on the main UI-thread, so the app crashed because of this.\nThe exception occured in a for-loop for the generic Map holding the listener-instances.\n. I just had a similar exception trying to load images in a gridview with the ui-spicelist extension. I also modified BitmapRequest to add a cacheduration-property which is in my modification checked by the SpiceArrayAdapter as that doesn't use the standard cache-logic.\nHere is the stacktrace of the exception:\njava.util.ConcurrentModificationException\n    at java.util.HashMap$HashIterator.nextEntry(HashMap.java:792)\n    at java.util.HashMap$KeyIterator.next(HashMap.java:819)\n    at com.octo.android.robospice.request.RequestProcessor$ResultRunnable.run(RequestProcessor.java:435)\n    at android.os.Handler.handleCallback(Handler.java:605)\n    at android.os.Handler.dispatchMessage(Handler.java:92)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4424)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n    at dalvik.system.NativeStart.main(Native Method)\n. FYI, I somewhat fixed the exception by modifying the RequestProcessor to use a ConcurrentHashMap and a self-built ConcurrentHashSet similar to the CHM.\nThis prevents the exception, but not all images are being loaded and displayed, due to some listeners not being registered correctly, I think.\nAbout the cache-logic in SpiceArrayAdapter and the BitmapRequest:\nI tested my modification with my tablet in airplane-mode and with cacheDuration set to ALWAYS_EXPIRED, but some images are loaded from the cache disregarding the setting.\nSo I stashed this \"fix\" and the mod of the BitmapRequest cache-logic away in hope that you will find a better solution.\nIf you want, I can give you a patchfile or a pull request with my modifications so you get an impression what might be wrong with my code.\n. I can reproduce this issue mostly on my Acer Iconia A500 with Android 4.0.3, but also on the  Bluestacks Client for Windows with Android 2.3.4 and my Samsung Galaxy Note 2 with Android 4.1.2. On the Note2, I had to reload the list-content two times by restarting the app and scroll down several pages to see the problem.\nSee the attached screenshots to see what I mean (look for the blank spaces where there should be avatar pics).\nIf you need anymore infos, let me know.\nAcer Iconia A500 screenshot:\n\nBluestacks screenshot:\n\nSamsung Galaxy Note 2 screenshot:\n\n. I will test this again with latest master-version and let you know if it is reproducable there.\n. It seems to be much better in our own app. I will test it with the spicelist-sample again tomorrow, but so far it looks nearly perfect.\n. I also get this issue if I modify the method SpiceArrayAdapter.ThumbnailAsynTask.doInBackground like so and have 6 threads in the service:\n- out-comment if (!tempThumbnailImageFile.exists()) { and its closing brace\n- set the number of threads for the BitmapSpiceService to 6\nSo, I guess maybe you could reproduce it with the robospice-sample-ui-spicelist. I would have tried, but my modifications of robospice-ui-spicelist extension maybe have a sideeffect, so it would be a hassle for me to try.\nThis exception also doesn't always come, even with this modifications, but I just had this crash on app-startup showing a spicelist with this modified SpiceArrayAdapter and the LruCacheBitmapObjectPersister/InFileBitmapObjectPersister combo from David Stemmer.\nI think the more threads are loading pictures in a big listview, the more likely you will get this exception.\nI have a patchfile with a proposed modification of RequestProcessor to use ConcurrentHashMap and my own version of ConcurrentHashSet (as listRequestListenerForThisRequest needs to be a set apparently and there is no concurrent version of HashSet in the Collections-framework), how can I send the patchfile to you for testing without going through the hassle ov having to setup a branch for a pull request?\n. Why don't you move the if-clause into the shouldStop-method to save the RS-users some trouble?\nNevertheless, I don't know why, but I accidentally included this if-clause at some point myself after getting this bug.\n. This is definitively needed, as for example, in our app, the cacheKey would be part of an URL, and right now it seems that searchrequest-URL-parts seem to be ivnalid as filenames (and I don't know why, yet), so they don't ever get cached (which is not a big problem, since they are supposed to be cached max for 15m).\n. Hi, I also encountered this. I modified it myself to re-throw the exception, as this is the only way to let the extension robospice-ui-spicelist show the default-drawable in a SpiceList instead of a blank space.\nSo I guess it's a bug.\nI guess you should fork the octo-online robospice reopsitory for your github-user if you haven't done so already, create a new branch originating from the latest master-commit on the original repo and send a pull request for Stephane Nicolas, containing your bugfix-commit from the new branch in your fork.\nFor detailed instructions: https://help.github.com/articles/fork-a-repo\n. Just an idea: could RoboSpice maybe work with BroadcastReceivers to do the signalling between the service and the RS-part of the app? Then the service could run as a standard service (not in foreground), broadcast when its done and then stop itself.\nI think the Astrid-App does something like this in its syncing-services:\nhttps://github.com/todoroo/astrid/blob/master/api/src/com/todoroo/astrid/sync/SyncBackgroundService.java\nWould this be feasible?\n. ",
    "gcacace": "Yes, but what happens if the new \"execute\" triggered fails? The cached result is retained or purged?\n. I got the same problem when I register and unregister some listeners during a spice request execution.\n. I see that in RequestProcessor.java there are concurrent accesses to the Map \"mapRequestToRequestListener\", outside synchronized blocks, so the ConcurrentModificationException happens when the map is iterating and some concurrent task is putting or removing something inside the map. To fix this bug I think it's necessary to add some synchronized blocks or to use a Synchronized Map. Anyway I'm using the latest RoboSpice version 1.4.1-SNAPSHOT.\n. @mdumrauf I think that this way of sanitization can produce collisions (for example, what happens when I'm using \"cache/key\" and \"cache_key\"? Maybe a simple chars replacement it's not enough to guarantee an unique association between cacheKey and the real filename on disk. A hybrid way can be to use a string sanitizer with a hash (SHA1 or MD5) appended in the filename (example: sanitized_cache_key_b7dba5a1bc3605a87b59ac8147512c97)\n. The DefaultKeySanitizer.java implements a base64 encoding that, in some conditions, could fail because the filename is too long:\n04-01 10:05:29.504    2182-2253/it.subito.debugVinz E//ManagedPersister.java:54\ufe55 10:05:29.506 Thread-178 An error occured on saving request .image_/storage/emulated/0/Android/data/it.subito.debugVinz/cache/c00d21a9_9051_4072_8c8c_209fe6be8590.jpg.user_logged_false.user_pro_false data asynchronously\n    java.io.FileNotFoundException: /data/data/it.subito.debugVinz/cache/robospice-cache/ManagedObjectPersisterFactory_ManagedPersister_AdInsertAddImageResponse_LmltYWdlXy9zdG9yYWdlL2VtdWxhdGVkLzAvQW5kcm9pZC9kYXRhL2l0LnN1Yml0by5kZWJ1Z1ZpbnovY2FjaGUvYzAwZDIxYTlfOTA1MV80MDcyXzhjOGNfMjA5ZmU2YmU4NTkwLmpwZy51c2VyX2xvZ2dlZF9mYWxzZS51c2VyX3Byb19mYWxzZQ: open failed: ENAMETOOLONG (File name too long)\n            at libcore.io.IoBridge.open(IoBridge.java:409)\n            at java.io.FileOutputStream.<init>(FileOutputStream.java:88)\n            at java.io.FileOutputStream.<init>(FileOutputStream.java:73)\n            at it.subito.services.ManagedPersister$1.run(ManagedPersister.java:52)\n     Caused by: libcore.io.ErrnoException: open failed: ENAMETOOLONG (File name too long)\n            at libcore.io.Posix.open(Native Method)\n            at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n            at libcore.io.IoBridge.open(IoBridge.java:393)\n            at java.io.FileOutputStream.<init>(FileOutputStream.java:88)\n            at java.io.FileOutputStream.<init>(FileOutputStream.java:73)\n            at it.subito.services.ManagedPersister$1.run(ManagedPersister.java:52)\n. ",
    "chrisjenx": "They dont need to be public methods, either protected or removing final modifiers.\nCheckManifest was one of them, generally any method bindToService etc.. Just some of the low level stuff.\nLuckily the newer versions Robolectric make this easier, just methods that talk to low level and service binding which I know i can just mock.\n. Version 1.4.0 \n. Because I'm struggling to create a mock version of the SpiceManager I have no test case to send you otherwise I would.\nThis is a work around for a ExecutorService:\n``` java\nprivate void requestImage(final UserPhoto photo, final boolean fullSize, OnPhotoLoadListener listener)\n    {\n        final String key = fullSize ? photo.getDisplayImageKey() : photo.getThumbnailImageKey(UserPhoto.MINI_THUMBNAIL_SIZE);\n        final BizzbyApplication app = BizzbyApplication.get();\n        final BitmapLruCache cache = app.getImageCache();\n        final CacheableBitmapDrawable cached = cache.get(key);\n    if (null != cached && cached.hasValidBitmap())\n    {\n        QLog.d(\"Got Bitmap: Size: [\" + cached.getBitmap().getWidth() + \",\" + cached.getBitmap().getHeight() + \"]\");\n        setImageDrawable(cached);\n        if (null != listener)\n            listener.onPhotoLoadFinished(cached.getBitmap());\n    }\n    else\n    {\n        // Means we have an object with an invalid bitmap so remove it\n        if (null != cached)\n            cache.remove(key);\n\n        mCurrentRequest = new PhotoLoadExecutor(this, photo, cache, fullSize);\n        if (listener == null)\n            listener = new OnPhotoLoadListener()\n            {\n                @Override\n                public void onPhotoLoadFinished(final Bitmap bitmap)\n                {\n                }\n            };\n        app.getExecutorManager().execute(mCurrentRequest, listener);\n    }\n}\n\n```\nNote the if(listener == null) if you pass through null at this point it will FC when trying to deliver the result.\nI agree Result listener wont be null in most cases, but here where I am offloading image resizing. Sometimes the result is set inline and there is no need for a listener.\n. Nice, cheers Stephan.\nOn 16 Feb 2013 20:47, \"stephanenicolas\" notifications@github.com wrote:\n\nBug has been solved and a new test has been added. It is available on\nmaster branch and has been cherry picked to release branch for next\nrelease.\nThx for your help. Let's investigate the mocking problem now ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/48#issuecomment-13674419.\n. I was thinking about this when I get around to it, Its only really useful for posting data making sure it isnt lost. For standard requests I would use the GoogleClient combined with retry policy.\n. I guess I better way of looking at this would be the Path lib which is\nbackground extensible queue. That would be a better fit.\nOn 16 Jun 2014 18:55, \"Adri\u00e1n Moreno Pe\u00f1a\" notifications@github.com wrote:\nHas there been any advance on Tape implementation? It's a really\ninteresting feature indeed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/52#issuecomment-46211649\n.\n. See https://github.com/path/android-priority-jobqueue\n On 16 Jun 2014 18:58, \"St\u00e9phane Nicolas\" notifications@github.com wrote:\nAny link @chrisjenx https://github.com/chrisjenx ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/52#issuecomment-46212037\n.\n. @ffgiraldez correct me if im wrong, but as far as I have understood. You show any cached data to the user, if it has expired you will do a request to freshen the data?\n. Just to add my too cents, if your are looking at dirty cache stuff.\n\nIf it can fit this process too:\n1. Request -> Save Duration.FOREVER_DIRTY\n2. Serves the Cache to the user\n3. freshenCache(string cachekey)\n4. Request -> Return cache -> if needs refreshing? -> HTTP -> Cache.\nSo you effectively have a permanent store which can can be \"refreshed\" by clearCacheForKey (which removed the cache completely) or expireCacheForKey which will still serve up the request, but will try and do HTTP as well.\nMake sense?\nCheers,\nChris\n. Sounds like it should be called.\ngetFromCacheAndLoadFromNetworkIfExpired as my understanding is it will only\nhit the network if it's expired cache ?\nOn 2 Mar 2013 16:26, \"stephanenicolas\" notifications@github.com wrote:\n\nI could achieve the same behavior with the method I proposed a bit\nearlier. There is now a new request called :\n- getFromCacheButLoadFromNetworkAnyway\nI tested and had the feeling it matched exactly what you wanted to\nachieve, Fernando. @ffgiraldez https://github.com/ffgiraldez , can you\nconfirm it works ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14330699\n.\n. You guys do well! I wish I could speak another language half as well as you\nguys speak english!\n\nOn 4 March 2013 17:50, stephanenicolas notifications@github.com wrote:\n\nDon't worry Fernando, it's not my mother tongue neither. We are all more\nor less speaking an international degraded dialect of english ;)\nI am sorry, it really took me a while to figure it out. I got it now. :)\nReally, java pseudo code is my favorite esperanto ;)\nI am gonna think about it and propose something to you pretty soon,\nrestarting from your work.\nSt\u00e9phane\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14394113\n.\n. Well I am using a shared executor pool between a few things.\n\nSo I have ~4 Threads, There are a few different ideas around execution policys that would be handy for a few cases.\nThe one I'm looking at is loading images in a list, generally you want to keep 1 thread free out of the ~4 to make sure that you can pull from the disk while the others are waiting for a http response. So the request processor would not execute until it had > 1 threads free.\n. I like the idea of this, We are looking at web sockets for the future implementation. Will be nice.\nYour right RS is based on restful implementation.\nSo I think a noteable change in framework for effective 'stream' as  opposed to 'request'.\nSomething like SocketListener and SpiceSocket which are initialised on start stop.\nI guess the larger difference is that SocketListener is a bit more involved due to  it needing to handle events.\n. @weefbellington, @stephanenicolas will give more info, but the way Sockets interact with devices is quite different to a traditional RESTful approach, as Sockets apply a more RPC/FullDuplex communication method.\nIt needs architecturally thinking how this would fit into RoboSpices pattern (if it does at all). Wondering if it would be worth sketching out how this would work high level in an architectural way. \n. Robospice doesn't really fit the socket paradigm.\nReactive Extensions and observables very neatly fit the channel\nsubscription paradigm.\nHave a look at RxJava and you'll see what I mean.\nOn 12 May 2014 19:19, \"Ivo Cazemier\" notifications@github.com wrote:\n\nHi guys,\nPlease look at: https://github.com/Gottox/socket.io-java-client in\ncombination with: sailsjs.org\nThis combination and the environment of RoboSpice would be very nice!\nSails uses http+socket.io with authentication together, one is able to\nmake models in a blink of an eye at the server side.\nLooking at :\nhttp://milanito.github.io/web%20mobile/2013/12/29/sockets-with-android-and-sails/, I was able to create a connect to Sails and was able to receive messages\nby means of socket.io (websockets).\nSo, yeah, RoboSpice and Websockets, would be very nice to have!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/stephanenicolas/robospice/issues/71#issuecomment-42868201\n.\n. Fantastic that would be amazing.\n\nI haven't forgotten but it's part of performance improvements for my\ncurrent project so I am yet to do it.\nCheers\nOn 11 May 2013 11:24, \"stephanenicolas\" notifications@github.com wrote:\n\nHi christopher,\nI am actually trying to implement the feature you requested. It happens\nthat our team @octo-online https://github.com/octo-online currently\nneeds this feature as well in order to mock a post request inside our\ncurrent project.\nI hope to get it working and pushed and deployed to snapshot repo by the\nend of the day.\nSt\u00e9phane\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/75#issuecomment-17757667\n.\n. These are built onto available when using maven, I suggest you switch to Maven or Gradle this will improve your build process infinitely (and your life)\n. Awesome I'll have a gander!\n\nA new OkHttp Client module has been initiated on master branch.\nThere is still some reflexion needed to make the OkHttpService interact in\nthe RS way with respect to caching, but base ground is here. See this\ndocument for OkResponseCache\ndetailshttp://square.github.io/okhttp/javadoc/index.html\n.\nTests and a sample has been added as well.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/issues/108#issuecomment-21290597\n.\n. Cool good to hear I did have a play and it seemed to work fine.\nOn 1 Sep 2013 15:28, \"stephanenicolas\" notifications@github.com wrote:\n\nThe issue is closed. The new okhttp module is now offcialy part of RS.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/108#issuecomment-23625877\n.\n. \n",
    "busylee999": "Sorry for off topic. I read doc of Robospice and I have puzzled. Consider I use robospice + retrofit + okhttp client. I read about robospice cache it is ok it will cache data using passed timeout value, but okhttp has it's own etag based cache, but before okhttp figures out where to get data from cache or from net, okhttp need to process request for getting response 200 or 304 (if etag is equal). But if there is hit in robospice cache any network processing will not be occured. \n1. If I will use robospice and okhttp client (using retrofit) there will be two cache? (mean robospice cache and okhttp cache if I specified last)\n2. Is I am right, if there is cache mishit in robospice cache but if etag is not changed okhttp cache will work this time? (if it will be persisted)\n. ",
    "doridori": "great thx. Good to know I was not doing anything wrong! \n. Your not calling super.onStop()\n. Hi @stephanenicolas! thanks for looking at this\nI have just tested by replacing the 1.4.9 jars with the latest 1.4.11s taken from https://oss.sonatype.org/content/repositories/snapshots/com/octo/android/robospice/\nrobospice-1.4.11-20140113.140209-5.jar\nrobospice-cache-1.4.11-20140113.140107-5.jar\nrobospice-okhttp-1.4.11-20140113.140734-3.jar\nand still the same issue. loadDataFromNetwork never seems to be called (for the use case described above) :( \n. Just rebuilt my whole project in case the old jars were cached - still not working...! its not a big issue for me as I have moved the call but strange - i dont have much time to look into atm\n. 4.4.2, Nexus 4 :)\n. I am executing with mSpiceManager.execute(new AppConfigCall(), null); and avoiding the cache, in case that handled differntly internally\n. I have tried recreating the issue in a small activity and I cant do it - loadDataOnNetwork() is called each time. I stupidly am making the call before onStart (triggered by something in onCreate) so i thought that was the issue - but in my test activity this works just fine also...sorry - not very helpful\n. sure will do later today :)\n. as i mentioned before i am making the call in onCreate() before finish() is called. If this happens newer android versions will not call Activity.onStart() and onStop() - so the SpiceManager was never started, this was not intended. However - when the SpiceManger is started in the next activity the request has been lost. Sorry I shouldve seen this before - its only in a subset of use-cases so was not immediatly obvious!!\nThis does still happen with the latest snapshots from earlier\n. Yes i think so :)\nGood work! Many thanks\n. Well a few things differnt to the commit\n1) I am calling the two arg execute method\n2) The test is using stubs whereas I am using the Activity callbacks - I suspect do to the transient nature of the bug a race condition may be present. Maybe the tests could run using actual Activities depending on your TDD setup?\n3) All I am doing in this SpiceRequest subclass at present is reading a json file from assets - so it could possibly hang there - but I have not seen this happen before\nI would love to spend more time testing this but at present am on a crazy deadline so for now have moved execute to  onStart and have not seen the issue arise yet.\nThanks :)\n. Hi, I am still seeing the issue and grabbing the log data it seems it may be something else.\nhttps://gist.github.com/doridori/c3ec473f5e54969f46c0 shows when the request is complete the following log output\nD//DefaultRequestRunner.java:150\ufe55 16:20:14.603 Thread-2110 Network request call ended.\n D//RequestProgressManager.java:82\ufe55 16:20:14.621 Thread-2110 Sending progress COMPLETE\n D//SpiceServiceListenerNotifier.java:146\ufe55 16:20:14.622 Thread-2110 Message queue is Handler (android.os.Handler) {41ec2048}\n V//DefaultRequestListenerNotifier.java:131\ufe55 16:20:14.625 main Notifying 0 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@41f21130\n D/dalvikvm\ufe55 GC_CONCURRENT freed 351K, 4% free 9310K/9692K, paused 1ms+2ms, total 15ms\n D//SpiceServiceListenerNotifier.java:146\ufe55 16:20:14.635 Thread-2110 Message queue is Handler (android.os.Handler) {41ec2048}\n V//DefaultRequestListenerNotifier.java:166\ufe55 16:20:14.637 main Notifying 0 listeners of request success\n V//RequestProgressManager.java:161\ufe55 16:20:14.637 Thread-2110 Removing CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=mypackage.LoadBootstrapApiCall@41ee46e8]  size is 1\n D//RequestProgressManager.java:91\ufe55 16:20:14.638 Thread-2110 Sending all request complete.\nNotifying 0 listeners of request success\nSo it looks like there are no registered listeners on this occasion. I cant see why this would be...?\n. > \"And do you know why the first spicemanager says it has stopped before executing the request ? Is it possible shouldStop has been called already, before trying to execute the request ?\"\nGood question! \nI looked at this again and there is a link yes. As I mentioned I am using this in my launch Activity - when deving i often install a new build on the device after the device has gone into sleep mode / the screen has turned off. This has the effect (on 4.4. at least) of calling onStart and onStop strait away. My request is made in onStart() and returns shortly after onStop, by which time my request listener will not be notified. I guess the proper use case would be\n1) to supply a cache and use the cache aware execute methods in onStart() \n2) to start and stop the SpiceManager in onCreate and onDestroy instead\n3) to ignore it for now as users will never launch the app with the screen off!\nIs there a reason why the approach of 2) is not used for RoboSpice in general? Is there a benefit from disallowing requests responses between onStop() and onDestroy (as the views will still be around etc) \nThanks! :)\n. Hi @stephanenicolas \nIn regards to 1) I am using this execute method which has the javadoc \n\nExecute a request, without using cache. No result from cache will be returned. The method SpiceRequest.loadDataFromNetwork() will always be invoked. The result will not be stored in cache.\n\nAs you mention that SO answer from Dianne Hackborn (hackbod) says that onCreate/onDestroy is fine too.\nBUT, this may cause issues with fragments as they handle the lifecycle events differently and the view hierarchy can be destroyed / detached from a context before onDestroy() is called, which is a shame. I guess the SpiceManager calls could reside in 'onCreateView' and 'onDestroyView' but this may be confusing.\nDoes RS just use the start and stop SpiceManager calls to reference count and not make a callback if that count == 0? Im thinking that one of the nice things about RS is that you dont have to worry about async op callbacks interacting with stale view heirarchys etc (a common src of bugs) as the callback just wont happen after the onStop call. I guess the situation where an activity is using onStart and onStop to interact with the SpiceManager all is fine but onCreate and onDestory could allow these ui callbacks in child fragments to throw  state exceptions...\n. Ha! Yes I see in my email :)\nI need to look into the src to understand a bit more whats going on before I can discuss further but time prevents me form doing so atm. \nHow does the SpiceManager know to not callback when the activity has called SpiceManager.shouldStop() ? Say there are two Activities A & B that both call the SpiceManager lifecycle methods in their onStart() and onStop() and Activity A calls execute (with task X) and then starts Activity B, and B is in between onResume and onPause when X returns - how does the SpiceManager / Service know not to deliver the callback to the RequestListener in A? Thinking about thing reference counting in SpiceManager would not prevent this - are you tracking the calling context somehow?\nAnd in answer to your question - secure and easy would be my preference - as the more people that use RS the better :)\n. Are you referring to \n\nin your listeners, check if the Fragment.isAdded() before performing any manipulations on views as the fragment views can be destroyed before onStop is called in a Fragment.\n\nI would say this may be slightly misleading as \n1) according to the docs views are destroyed after onStop and before onDestory\n2) unless i am misunderstanding how RS works the reason the callback may still happen (and therefore a manual safety check needed in the fragment callback) in a Fragment and is when one Activity may hold 2 fragments, say B & C. If fragment B is shown and calls SpiceManager.start(getActivity()) and SpiceManager.shouldStop()  and then transitions to fragment C which calls SpiceManager.start(getActivity()) they are using the same context, so couldnt B still get a callback in this situation? \n3) As a side note if B is correct isnt it dangerous to allow a Context to be passed in as opposed to an Activity for SpiceManager.start(Context) as then the safety feature of not calling back after onStop may be broken?\nIm probably misunderstanding how it ties the callback to the context :)\n. of course - makes perfect sense, thx for explaining. I would still say the doc may need a tweak for the (1) point above.\nI guess the reason this is awkward is that fragments and Activities have differnt lifecycles. Activitys views are intact in onDestroy and Fragments are not. \nit seems that both approaches (onCreate/onDestroy vs onStart/onStop) have advantages / disadvantages...\nIMHO if definiitely makes sense for Activitys to use onCreate but for fragments its unclear as both approaches will be more verbose\n. What would the safeguards be in practise though? On callback inside a fragment one would need to check if the view hierarchy still exits / is attached to a context and make the required changed, if it doesnt exist would need to save the state in someway and then in Fragment.onViewCreated() would need to build the new views accordingly. \nI cant decide if this is better than the current approach of using onStart and onStop with the caching execute methods. Thing is, will some api calls like login it does not feel right to cache the results for this purpose. I guess an in-mem cache that holds the last result only would be fine for something like that. \nFor me its a choice between these two approaches - and personally i dislike checking if views exist in callbacks which is one of the things that attracted me to RS in the first place.....but saying that maybe both approaches are valid and it just depends on the use-case. Either way understanding how RS works (and therefore communicating that) is pretty important.\nGoing to play with caching today anyhow so may have some more thoughts after that. Im writing a little RS blog post atm too :)\n. You are right that would not gain much (if anything) over onStart/onStop.\nI will have a think about this - yes i agree for now about leaving as is - but maybe worth explicitly mentioning that using the 2 arg execute method with onStart / onStop may result in the callback not being received if the app is in the background.\nWill have a think! I think personally I may just have a differnt approach in Activities as I will in fragments. I guess its good practise NOT to use the two arg execute constructor as you dont get the full across lifecycle benefit of RS anyways...\n. No your right - its no difference apart from documentation :)\n\nBut this asynchronous and in rare cases,\nlistener still seem to be triggered...\n\nthat worries me...this could be a src of potential bugs :/ can a flag in SpiceService be checked before a callback is made?\n. Great! sounds good :+1: \n. ",
    "ajans": "OK, I can understand that you want to be neutral about the supported IDEs. I just thought it would be a good idea for starters to easily setup their robospice-libraryprojects in case they have to modify something.\nAs for me, I needed this to enable GridView-support in the spicelist-module.\nIf anyone asks for something like this, you could easily pull this into its own branch, or link to the branch eclipse-build on my fork-repo.\nAnother helpful way would be make full Android library-projects from the core-modules robospice, robospice-cache and the extensions. This would be another easy way to support the Android-toolchain and make it Eclipse-importable without being tied to Eclipse. So you could import my changes without Eclipse-specific files (.classpath, .project, .settings), this would do the job for the modules contained in my pull request.\nWhat do you think about that?\n. FYI: The only problem I have with the library-project approach is: two library-projects having (and including) the same dependency which is forbidden by the Android build-system (in my case android-support-v4.jar, which is required by robospice-cache and actionbarsherlock). Which I solved by putting the robospice-jars in the libs-dir.\nBut this doesn't mean the library-projects approach isn't useful, neither the \"put the jar-files in the libs-dir\" approach.\nBTW: if you feel that this discussion would be better placed in the Google Group, then let me know and I would paste my part there.\n. this VerifyError seems to be related to this change in the ART-runtime:\nhttps://android.googlesource.com/platform/art/+/1c5eb70%5E!/\n. It may or may not be related to this Demo-Project with workaround for a similar VerifyError, albeit not referring to sub-classing:\nhttps://github.com/aectann/android-verify-error-example\nI will try the given workaround with the class GsonObjectPersisterFactory line 42 to see if it helps.\nLogcat shows only one warning twice, which might be related:\nW/art(7171): Attempt to remove local handle scope entry from IRT, ignoring\nI will let you know what comes out of this.\n. The presumed workaround didn't change anything, the class GsonObjectPersister still gets rejected.\nAs our latest app-release works with our customized version of robospice-1.4.2-SNAPSHOT, I think I might have to git bisect the robospice-history to determine which commit introduced the incompatible change.\nBut right before that, I have to check our toolchain, maybe our recently introduced DexGuard-tool introduced some sort of incompatibility, as we use its shrinking-capabilities it for our debugging-builds, too.\n. Disabling DexGuard doesn't help anything. I can confirm that the problem doesn't exist with robospice-1.4.2-SNAPSHOT for debug- and release-builds (release is obfuscated with Proguard/DexGuard).\nMy previous logcat-excerpt did filter too much, it was filtering by the application-name.\nIf I do not filter anything in logcat, I can see the following output from dex2oat:\nI/dex2oat(29475): /system/bin/dex2oat --zip-fd=6 --zip-location=/data/app/de.billiger.android-1/base.apk --oat-fd=7 --oat-location=/data/dalvik-cache/arm/data@app@de.billiger.android-1@base.apk@classes.dex --instruction-set=arm --instruction-set-features=default --runtime-arg -Xms64m --runtime-arg -Xmx512m\nI/dex2oat(29475): Verification error in java.lang.Object com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister.readCacheDataFromFile(java.io.File)\nI/dex2oat(29475): java.lang.Object com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister.readCacheDataFromFile(java.io.File) failed to verify: expected to be within a catch-all for an instruction where a monitor is heldAndroidObjectPersister.readCacheDataFromFile(java.io.File): [0xA]\nE/dex2oat(29475): Verification failed on class com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister in /data/app/de.billiger.android-1/base.apk because: Verifier rejected class com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister due to bad method java.lang.Object com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister.readCacheDataFromFile(java.io.File)\nE/dex2oat(29475): Rejecting class com.octo.android.robospice.persistence.springandroid.json.gson.GsonObjectPersister that attempts to sub-class erroneous class com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister in /data/app/de.billiger.android-1/base.apk\nDoes that information help you in any way? I didn't modify anything in the Persister-classes.\nDid you have any similar error messages related to ART and dex2oat?\n. This issue in the Android tracker seems to be related, too:\nhttps://code.google.com/p/android/issues/detail?id=80961\nIt is maybe an issue with testcoverage being enabled during build and thus causing the jacoco-tool to not update the exception-tables correctly, thus the android-runtime discovers this error and complains about it.\nHow could I disable the testcoverage for a build? In Gradle, the corresponding directive is called \"testCoverageEnabled\".\nAs one commenter pointed out:\nConfirmed Removing testCoverageEnabled true from the Gradle file prevents the VerifyError.\n. After revisiting this issue and some experimenting, I dug into the specific error \"SpringAndroidObjectPersister.readCacheDataFromFile(java.io.File) failed to verify: expected to be within a catch-all for an instruction where a monitor is held\".\nThe mentioned method has a weird try-catch-logic as it catches FileNotFoundException, which is never thrown here, instead of IOException, and also it re-catches CacheLoadingException to give it precedence relative to the generic Exception-catch.\nI simplified this try-catch-construct to only catch IOException for FileUtils.readFileToString and re-throw it wrapped in CacheLoadingException. If the cachefile is empty, the CacheLoadingException is also thrown as usual.\nThe fix is a change made against the latest release-tag robospice-parent-1.4.14 in the extension robospice-spring-android (as I had some trouble building on current master). Is it okay for you to get the Pull Request with this base?\nOr do you want the PR as a fix-branch to be rebased against master?\n. I can confirm the SpringAndroidObjectPersister delivers cache-results on Android 5.0 with ART-runtime with this patch again.\n. The 3rd travis-build (android-19) could not be completed because the android-19 emulator failed to start, so maven canceled the build at the testing-stage.\n. the previous commit did not prevent RuntimeExceptions during the call of deserializeData, which crashed our DefaultRequestRunner with a Gson-error (Failed to invoke public class XYZ with no args, Caused by: java.lang.InstantiationException: can't instantiate class).\nThe 2nd commit catches those types of exceptions and still the code passes the class-verifier in dex2oat.\n. ",
    "zetxek": "Has there been any advance on Tape implementation? It's a really interesting feature indeed.\n. I think it can be this one?\nhttps://github.com/path/android-priority-jobqueue\nI am taking a look to the possibilities, but I would like getting a general enough solution so that it can be packed as a module and get into Robospice. We need to implement a \"infinite retry\" policy, and I think it would be better implemented with a request persister module like Tape (or maybe path's lib that @chrisjenx mentioned, I didn't know about it)\n. ",
    "ffgiraldez": "Extacly that\nEl feb 28, 2013 8:06 p.m., \"Christopher Jenkins\" notifications@github.com\nescribi\u00f3:\n\n@ffgiraldez https://github.com/ffgiraldez correct me if im wrong, but\nas far as I have understood. You show any cached data to the user, if\nit has expired you will do a request to freshen the data?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14250913\n.\n. Tomorrow i will check it thanks a lot\nEl mar 2, 2013 5:42 p.m., \"Christopher Jenkins\" notifications@github.com\nescribi\u00f3:\nSounds like it should be called.\ngetFromCacheAndLoadFromNetworkIfExpired as my understanding is it will\nonly\nhit the network if it's expired cache ?\nOn 2 Mar 2013 16:26, \"stephanenicolas\" notifications@github.com wrote:\n\nI could achieve the same behavior with the method I proposed a bit\nearlier. There is now a new request called :\n- getFromCacheButLoadFromNetworkAnyway\nI tested and had the feeling it matched exactly what you wanted to\nachieve, Fernando. @ffgiraldez https://github.com/ffgiraldez , can\nyou\nconfirm it works ?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/pull/53#issuecomment-14330699>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/pull/53#issuecomment-14330941\n.\n. The problem I see to method \"getFromCacheButLoadFromNetworkAnyway it always makes a network call, and is not good for the battery and bandwidth, the approach would be more correct if the cache checking is performed outside the method loadDataFromCache like in InFileObjectPersister with the method isCachedAndNotExpired but at CacheManager level, so \"getFromCacheButLoadFromNetworkAnyway can add the condition to make the call network only when necessary\n. java\npublic void request(Object cacheKey){\n    Object data = loadFromCache(cacheKey);\n     if (data != null) {     \n         notifySuccess(data)\n     }\n    if (isCacheExpired(cacheKey)) {\n        data = loadDataFromNetwork(cacheKey);\n        if (data != null) {\n            notifySuccess(data)\n        }\n    }\n}\n\nI think now is more clear not?\nsorry my lack of expression, English is not my native language\n. ``` java\nif (request.getRequestCacheKey() != null && request.getCacheDuration() != DurationInMillis.ALWAYS_EXPIRED) {\n    // First, search data in cache\n    try {\n        Ln.d(\"Loading request from cache : \" + request);\n        request.setStatus(RequestStatus.READING_FROM_CACHE);\n        T dirtyResult = null;     \n        if (request.isAcceptingDirtyCache()) {\n            dirtyResult = loadDataFromCache(request.getResultType(), request.getRequestCacheKey(), DurationInMillis.ALWAYS_RETURNED);;\n        }\n        result = loadDataFromCache(request.getResultType(), request.getRequestCacheKey(), request.getCacheDuration());\n        // Only complete the request if cache is not expired or present \n        boolean completeRequest = result != null;\n        if (dirtyResult != null){\n            result = dirtyResult;\n        }\n    if (result != null){\n        notifyListenersOfRequestSuccess(request, result, completeRequest);                \n    }\n\n    if (completeRequest){\n        return;\n    }\n} catch (final CacheLoadingException e) {\n    Ln.d(e, \"Cache file could not be read.\");\n    if (failOnCacheError) {\n        notifyListenersOfRequestFailure(request, e);\n        return;\n    }\n    cacheManager.removeDataFromCache(request.getResultType(), request.getRequestCacheKey());\n    Ln.d(e, \"Cache file deleted.\");\n}\n\n}\nprivate void notifyListenersOfRequestSuccess(final CachedSpiceRequest request, final T result, final boolean completeRequest) {\n    final Set> listeners = mapRequestToRequestListener.get(request);\n    if (completeRequest) {\n        notifyListenersOfRequestProgress(request, listeners, RequestStatus.COMPLETE);\n    }\n    post(new ResultRunnable(listeners, result), request.getRequestCacheKey());\n    if (completeRequest) {\n        notifyOfRequestProcessed(request);\n    }\n}\n```\nalways notify the \"dirty\" cache values if request.isAcceptingDirtyCache() == true\nand only load data from network if normal cache (not dirty) is not present or expired\n. ``` java\nif (request.getRequestCacheKey() != null && request.getCacheDuration() != DurationInMillis.ALWAYS_EXPIRED) {\n    // First, search data in cache\n    try {\n        Ln.d(\"Loading request from cache : \" + request);\n        request.setStatus(RequestStatus.READING_FROM_CACHE);\n        T dirtyResult = null;     \n        if (request.isAcceptingDirtyCache()) {\n            dirtyResult = loadDataFromCache(request.getResultType(), request.getRequestCacheKey(), DurationInMillis.ALWAYS_RETURNED);;\n        }\n        result = loadDataFromCache(request.getResultType(), request.getRequestCacheKey(), request.getCacheDuration());\n        // Only complete the request if cache is not expired or present \n        boolean completeRequest = result != null;\n        if (dirtyResult != null){\n            result = dirtyResult;\n        }\n    if (result != null && !completeRequest) {\n        notifyListenersOfRequestSuccessButDontCompleteRequest(request, result);\n    }else if (result != null) {\n        notifyListenersOfRequestSuccess(request, result); \n        return;            \n    } \n} catch (final CacheLoadingException e) {\n    Ln.d(e, \"Cache file could not be read.\");\n    if (failOnCacheError) {\n        notifyListenersOfRequestFailure(request, e);\n        return;\n    }\n    cacheManager.removeDataFromCache(request.getResultType(), request.getRequestCacheKey());\n    Ln.d(e, \"Cache file deleted.\");\n}\n\n}\n```\nother option\n. God for me. Thanks a lot, for the support and patience ;)\n. i'm not using any extensi\u00f3n just\ncompile 'com.octo.android.robospice:robospice:1.4.+'\n. ",
    "z0lope0z": "(y)\n. ",
    "sergej-koscejev": "No, but I got a different exception, opened issue #58.\n. The snapshot seems to be working, at least I couldn't get it to crash anymore. I'm not using SpiceList because I actually need to do two-step fetching, first fetch additional info for each list item, then fetch an image, and SpiceList doesn't give me that flexibility, it's useful only for loading images.\n. Got the same exception in ProgressRunnable.run (using 1.4.1-SNAPSHOT):\nFATAL EXCEPTION: main\n        java.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:792)\n        at java.util.HashMap$KeyIterator.next(HashMap.java:819)\n        at com.octo.android.robospice.request.RequestProcessor$ProgressRunnable.run(RequestProcessor.java:402)\n        at android.os.Handler.handleCallback(Handler.java:615)\n        at android.os.Handler.dispatchMessage(Handler.java:92)\n        at android.os.Looper.loop(Looper.java:137)\n        at android.app.ActivityThread.main(ActivityThread.java:4921)\n        at java.lang.reflect.Method.invokeNative(Native Method)\n        at java.lang.reflect.Method.invoke(Method.java:511)\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1027)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\n        at dalvik.system.NativeStart.main(Native Method)\n. The exception occurred in a different location this time, not sure if it was clear from my comment. And it occurred only once so far so I don't know if I will be able to provide a unit test. I'll let you know if it occurs again with the new snapshot.\n. ",
    "jcampbell05": "I don't use maven yet but if there is a tutorial to switch over to it \nthat would be very useful :)\nAnd awesome I will take a look and write a doc / a sample if I can get \nit working.\nOn Sat Mar  9 10:53:41 2013, stephanenicolas wrote:\n\nIndeed all Spring Android Modules dependencies are optional. If you\nwant to\nuse Jackson 2 with the SpringAndroid Module, just use it as a dependency\nfor maven (or libs folder for ant/adt) within your project. Be sure not\ninclude the Jackson 1 dependency (or jars) and Spring Android will switch\nto Jackson 2.\nWe made the jackson 2 dependency optional in the Spring Android Module\nand\nadded some support classes to create a Jackson2 based\nSpringAndroidService.\nThis all is in the master branch and will be released in version 1.4.1.\nI don't close the issue as :\n- docs need to be updated\n- it would be nice to get a sample. Do you feel like writing one ? It\n  should be easy if you start from the first spring android module\n  sample and\n  create a new one using jackson 2.\nThanks for this feature.\nS.\n2013/3/7 James Campbell notifications@github.com\n\nPlease could you add support for Jackson 2.1 in the Spring Module.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/issues/61\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/octo-online/robospice/issues/61#issuecomment-14661226.\n. Thank you :) I'll take a look\n\nOn Sat Mar  9 23:51:36 2013, stephanenicolas wrote:\n\nDocs have been updated on wiki to take Jackson2 into account when\nusing the Spring Android module.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/octo-online/robospice/issues/61#issuecomment-14673227.\n. \n",
    "pflammertsma": "Sorry, this appears to be an invalid issue.\nThe underlying problem was due to my invalid construction inside a fragment:\n```\n@Override\npublic void onStart() {\n    super.onStart();\n    mSpiceManager.start(getActivity());\n}\n@Override\npublic void onStop() {\n    mSpiceManager.shouldStop();\n    super.onStop();\n}\n@Override\npublic void onAttach(Activity activity) {\n    super.onAttach(activity);\n    mSpiceManager.execute(new IssueRequest(),\n            IssueRequest.CACHE_KEY,\n            IssueRequest.CACHE_EXPIRY,\n            new IssueRequestListener());\n}\n```\nAs explained in the fragment lifecycle, onAttach() occurs before onStart(), in which case my request was being executed without being correctly attached to SpiceManager.\nMoving my execute() statement into onResume() resolved the problem.\n. I'm having an incredibly difficult time finding a way of reproducing this. If anybody has a sure-fire MWE, I'm willing to test it against both versions.\n. What are precisely the implications of dropping Service.startForeground() altogether?\nCan we not assume that when the service is destroyed, the application has been as well, and that we're no longer interested in receiving the responses? Perhaps Robospice should provice a facility to attach the service to a notification for background apps (such as media players), and default to not calling startForeground() at all?\n. I'd just like to chime in here to say that I too was experiencing performance problems with JacksonObjectPersisterFactory. For a relatively short list of items, it was taking 4 seconds to read from the cache, which is typically slower than doing a request.\nSerializing my objects and using an InFileObjectPersister has greatly improved things, but I was curious if it's possible to simply write the response into a cache file and read it through the same request handler from cache.\n. ",
    "alexander-mironov": "I suppose that failOnCacheError property should affect the result of getFromCache, shouldn't it? If so, then my pull request is faulty and I have to change it.\n. I'm sorry, It's my fault. I've mistakenly used RS 1.4.2. The issue is fixed in RS 1.4.3 indeed. Thank you.\n. I'll try to make several test cases but I'm not familiar with Android testing and EasyMock so I might fail to accomplish this\n. I fixed some bugs in my code and added a test case for AddListenerIfPending (#70). Waiting for your comments\n. I should see how you fixed #67 and then modify my code to match your design decisions\n. ",
    "bjornz": "Hi rciovati, I am using RoboSpice 1.4.0 and the com.octo.android.robospice.XmlSpringAndroidSpiceService which is shipped with it together with the SimpleXML framework which is also part of the RoboSpice distribution. I have included some of my sourcecode below, hope this helps a bit:\nThe actual request:\n`````` java\npublic class ReviewsRequest extends SpringAndroidSpiceRequest {\nprivate String userId;\n\npublic ReviewsRequest(String userId) {\n    super(ListReviews.class);\n    this.userId = userId;\n}\n\n@Override\npublic ListReviews loadDataFromNetwork() throws Exception {\n    ListReviews lr = getRestTemplate().getForObject( \"http://XX.XX.XX.XX:XXXX/wsapi/api/reviews?token=xxxx&userId=\" + userId, ListReviews.class);\n\n    for (Review r : lr.getResults()) {\n        Whisky w = getRestTemplate().getForObject( \"http://XX.XX.XX.XX:XXXX/wsapi/api/whisky/\"+r.getWhiskyId()+\"?token=xxxx\", Whisky.class);\n        r.setWhisky(w);\n    }\n    return lr;\n}\n\n}```\nClass ListReviews:\n```java\nimport java.util.List;\nimport org.simpleframework.xml.ElementList;\nimport org.simpleframework.xml.Root;\n@Root(name=\"reviews\")\npublic class ListReviews {\n@ElementList(name=\"review\", inline=true)\nprivate List<Review> reviews;\n\npublic List<Review> getResults() {\n    return reviews;\n}\n\npublic void setResults(List<Review> reviews) {\n    this.reviews = reviews;\n}\n\n}```\nClass Review:\n```java\nimport org.simpleframework.xml.Element;\nimport org.simpleframework.xml.Root;\n@Root\npublic class Review {\n@Element\nprivate long id;\n@Element(name=\"userid\")\nprivate long userId;\n@Element(name=\"whiskyid\")\nprivate long whiskyId;\n@Element\nprivate String timestamp;\n@Element(name=\"fit-sweet\")\nprivate boolean fitSweet;\n@Element(name=\"fit-sour\")\nprivate boolean fitSour;\n@Element(name=\"fit-bitter\")\nprivate boolean fitBitter;\n@Element(name=\"fit-salt\")\nprivate boolean fitSalt;\n\nprivate Whisky whisky;\n\n\n\npublic long getId() {\n    return id;\n}\n\npublic void setId(long id) {\n    this.id = id;\n}\n\npublic long getUserId() {\n    return userId;\n}\n\npublic void setUserId(long userId) {\n    this.userId = userId;\n}\n\npublic long getWhiskyId() {\n    return whiskyId;\n}\n\npublic void setWhiskyId(long whiskyId) {\n    this.whiskyId = whiskyId;\n}\n\npublic String getTimestamp() {\n    return timestamp;\n}\n\npublic void setTimestamp(String timestamp) {\n    this.timestamp = timestamp;\n}\n\npublic boolean isFitSweet() {\n    return fitSweet;\n}\n\npublic void setFitSweet(boolean fitSweet) {\n    this.fitSweet = fitSweet;\n}\n\npublic boolean isFitSour() {\n    return fitSour;\n}\n\npublic void setFitSour(boolean fitSour) {\n    this.fitSour = fitSour;\n}\n\npublic boolean isFitBitter() {\n    return fitBitter;\n}\n\npublic void setFitBitter(boolean fitBitter) {\n    this.fitBitter = fitBitter;\n}\n\npublic boolean isFitSalt() {\n    return fitSalt;\n}\n\npublic void setFitSalt(boolean fitSalt) {\n    this.fitSalt = fitSalt;\n}\n\npublic Whisky getWhisky() {\n    return whisky;\n}\n\npublic void setWhisky(Whisky whisky) {\n    this.whisky = whisky;\n}\n\n}```\nOfcourse I added the service to my AndroidManifest:\n```xml\n\n``````\nAny idea what I might be doing wrong?\n. I tried to annotate the whisky field in Review with that annotations but no luck: it still doens't work. Maybe the Whisky objects are stored in another cache instance or something like that?\n. Yes I did annotate all field in Whisky class , I am also wondering if the data is cached in memory or on the filesystem. I can't find a cache file anywhere on my phone. Should I override the createCacheManager method? I did not do that in my code. \n. I am creating my SpiceManager instance like this:\njava\nprivate SpiceManager spiceManager = new SpiceManager( com.octo.android.robospice.XmlSpringAndroidSpiceService.class );\nAm I missing something here?\n. That's great, but it's still not working. It might have something to do with Simple XML. I am getting the following errors in logcat:\n```\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.newInstance, referenced from method org.simpleframework.xml.stream.StreamProvider.\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve static method 5870: Ljavax/xml/stream/XMLInputFactory;.newInstance ()Ljavax/xml/stream/XMLInputFactory;\n03-18 19:44:55.895: D/dalvikvm(27582): VFY: replacing opcode 0x71 at 0x0003\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to find class referenced in signature (Ljavax/xml/stream/XMLEventReader;)\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to find class referenced in signature (Ljavax/xml/stream/XMLEventReader;)\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.createXMLEventReader, referenced from method org.simpleframework.xml.stream.StreamProvider.provide\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve virtual method 5868: Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader (Ljava/io/InputStream;)Ljavax/xml/stream/XMLEventReader;\n03-18 19:44:55.895: D/dalvikvm(27582): VFY: replacing opcode 0x6e at 0x0002\n03-18 19:44:55.895: I/dalvikvm(27582): Could not find method javax.xml.stream.XMLInputFactory.createXMLEventReader, referenced from method org.simpleframework.xml.stream.StreamProvider.provide\n03-18 19:44:55.895: W/dalvikvm(27582): VFY: unable to resolve virtual method 5869: Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader (Ljava/io/Reader;)Ljavax/xml/stream/XMLEventReader;\n```\n. Thanks, it's working now!\n. ",
    "guillermolechuga": "Sorry, the example is this:\nxml\n  <exception>\n    <class>Exceptions::AccessDeniedException</class>\n    <message>Access denied</message>\n  </exception>\n. ",
    "zsavely": "@stephanenicolas Unfortunately, I faced this issue in 1.4.14. Is there any hint on how to fix it?\n. ",
    "kaasdude": "Hi guys,\nPlease look at: https://github.com/Gottox/socket.io-java-client in combination with: sailsjs.org\nThis combination and the environment of RoboSpice would be very nice!\nSails uses http+socket.io with authentication together, one is able to make models in a blink of an eye at the server side.\nLooking at : http://milanito.github.io/web%20mobile/2013/12/29/sockets-with-android-and-sails/ , I was able to create a connect to Sails and was able to receive messages by means of socket.io (websockets).\n So, yeah, RoboSpice and Websockets, would be very nice to have!\n. Thanks, will take a peak!\n. ",
    "aat-antoine": "Ok ! Currently, i have java.lang.ClassCastException on the onRequestSuccess() whereas all is ok if i use a specific object like WeatherResult\n. ",
    "LilPickle3000": "Pardon the comment on a closed issue--I just want to say this is a good new feature, thanks! I just encountered a need for this as well. In my particular case, the request result contains the key, so I couldn't cache it until after making the first request. This should allow me to addDataToCache in the request listener using the new key.\n. ",
    "bogdanzurac": "Because I don't want to start a new request on every single fragment start,\nobviously....\nOn Mar 30, 2013 9:41 AM, \"stephanenicolas\" notifications@github.com wrote:\n\nWhy don't you just call only spiceManager.execute(new\nEventsRequest(mProjectId), getJsonCacheKey(), DurationInMillis.ONE_DAY, new\nEventsRequestListener()); during onStart() ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-15670969\n.\n. And if I don't use cache for the respective fragment? Why should it make a\nnetwork request on every orientation change?\nOn Mar 30, 2013 10:53 AM, \"stephanenicolas\" notifications@github.com\nwrote:\nActually, this answer is a bit fuzzy to me.\nAdding a listener to a pending request actually triggers a request in RS.\nThe only difference with execute is that this request will never get\nreally\nprocessed but will plug its listeners to a running request if any.\nIf you use cache, there should be no problem to trigger a request for each\nfragment.\n2013/3/30 bogdanzurac notifications@github.com\n\nBecause I don't want to start a new request on every single fragment\nstart,\nobviously....\nOn Mar 30, 2013 9:41 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nWhy don't you just call only spiceManager.execute(new\nEventsRequest(mProjectId), getJsonCacheKey(),\nDurationInMillis.ONE_DAY,\nnew\nEventsRequestListener()); during onStart() ?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15670969>\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671354>\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671527\n.\n. 1) Yes, a new execute() on every new Fragment instance created. That\ndoesn't necessarily mean even on orientation change.\n2) No, not really. Fragment's onRetainInstance() ? Maybe I want to retain\nthe data in memory, not on the disk...\n\nNevertheless, I did exactly what you usually do. Or at least something\nsimilar. I execute the initial Request in the Fragment's onCreate(), then\nuse the cache (or not, like I said above) in onStart(). So no, I can't /\ndon't want to use execute() in onStart. That defeats the whole purpose of\nthis library and the mobile paradigm...\nThen again maybe I still haven't understood your library's design\npattern... at least in respect to Fragments... could you add some samples\nwith Fragments beside those that are already present with Activities ? That\nwould help a lot.\nPS:\n\"What I usually do is\n1) execute a request when needed \"\nOk, and what if you need to execute the initial request right when the\nFragment is created ? Then if it's destroyed like you said ? You execute\nanother request when it is recreated, because the code is still in\nonCreate() ? That's what I'm not getting...\nOn Sat, Mar 30, 2013 at 3:44 PM, stephanenicolas\nnotifications@github.comwrote:\n\nHi Bogdan,\n1) if you don't use cache then it looks normal to me that you perform a\nnew\nrequest every time you need data to be displayed\n2) every rotation will create a new instance of your fragment. So, if you\ndon't use cache, how do you want this instance to get the data without\ngoing to the network.\nI mean, I agree, it can look heavy to fetch data all the time.\nNevertheless, Android spends its time destroying and recreating UI pieces\nlike activities and Fragments. If you want those instances to share a\nnetwork request and its result, I do believe RS and caching is the best\nsolution.\nWhat I usually do is\n1) execute a request when needed\n2) onStart, use a combination of getDataFromCache and addListenerIfPending\nto get the latest data and give users the feeling that the new instance of\nUI is still the same, at least still holding its data.\nSt\u00e9phane\n2013/3/30 bogdanzurac notifications@github.com\n\nAnd if I don't use cache for the respective fragment? Why should it make\na\nnetwork request on every orientation change?\nOn Mar 30, 2013 10:53 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nActually, this answer is a bit fuzzy to me.\nAdding a listener to a pending request actually triggers a request in\nRS.\nThe only difference with execute is that this request will never get\nreally\nprocessed but will plug its listeners to a running request if any.\nIf you use cache, there should be no problem to trigger a request for\neach\nfragment.\n2013/3/30 bogdanzurac notifications@github.com\n\nBecause I don't want to start a new request on every single fragment\nstart,\nobviously....\nOn Mar 30, 2013 9:41 AM, \"stephanenicolas\" notifications@github.com\nwrote:\n\nWhy don't you just call only spiceManager.execute(new\nEventsRequest(mProjectId), getJsonCacheKey(),\nDurationInMillis.ONE_DAY,\nnew\nEventsRequestListener()); during onStart() ?\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15670969>\n\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671354>\n\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671527>\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/79#issuecomment-15671764>\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/79#issuecomment-15674731\n.\n. Yeah, well... I added a lame isFirstRun boolean to check if I need to add another listener in the Fragment's onStart() method. This looks to me like a hack, instead of providing additional functionality in the API... I do hope you take into consideration my request, considering it doesn't break anything and I don't even think it is that hard to implement... Thanks anyway.\n. Aha. Now I've understood your point. Thanks for the explanation, it really helped.\nMaybe when you have enough free time, you can look into this problem.\nThanks again for everything !\n. Hello.\n\nUnfortunately, the sample doesn't really answer my problem. It does answer it perfectly for that use case, but not for mine.\nIn the sample use case, in onStart(), you check to see if the EditText has something written inside. On first run, of course it doesn't (even if you quickly change device orientation), so the check is perfect. Therefore, it won't add another request.\nIn my use case, in onCreate(), I spawn a request to download a list of items and then add the results inside a ListView. On first run, in onStart() I don't want to add another request, obviously, so I check if the ListView has content. Only if it does, I spawn another request.\nHowever, If I create the fragment and BEFORE the initial request finishes, I change the device orientation, then the list is still empty, so onStart() won't add another request, even though it should... After this, the initial request finishes, but we can't see any results inside the ListView.\nSo I can't rely on the empty ListView adapter check (like you did in the sample), because it's misleading. Therefore, I need to use a isFirstRun boolean. Now can you see why I find this feature request important ? I mean sure, I can use the boolean hack, but it's not as fluent as a built-in method. Anyway, thanks again for your time !\n. Unfortunately, no. If you move the request to the onCreate() method, and add quite some load for it to download, thus taking a couple of seconds to complete, you'll see that my test case is correct.\n. Hello.\nThis is still a problem. See use case below. I'm sorry, but I'm not able to share full code, because the project is for the firm that I work in, so it's not up to me to share code-base.\nNo details needed, just try to follow the methods being called and you can trace the problem. \n1) I have MainActivity with EventsListFragment in it.\n2) EventsListFragment.onStart():\n   mSpiceManager.addListenerIfPending(EventsList.class, KEY_JSON_CACHE, new EventsRequestListener());\n3) I start EventDetailActivity from EventsListFragment with startActivityForResult(x,y);\n4) EventDetailActivity finishes => MainActivity.onActivityResult() is called. Here, I want to refresh the list in EventsListFragment. So I call there:\nmSpiceManager.execute(new GetEventsRequest(),\n                KEY_JSON_CACHE, DurationInMillis.ALWAYS_EXPIRED, new EventsRequestListener());\nNothing hard until here, problem is below.\n5) Right after the execute() is called, EventsListFragment.onStart() is called again, because, well, the fragment started again. Therefore, calling this again:\nmSpiceManager.addListenerIfPending(EventsList.class, KEY_JSON_CACHE, new EventsRequestListener());\nHence, 2 calls are redirected at EventsRequestListener.\nAlso, don't ask for a sample because I can assure you, it works as expected. As in, not the Fragment's fault, nor the Activity, nor RoboSpice. Everything works as expected, but, because of RoboSpice's architecture for addListenerIfPending, it just adds another listener instead of checking first. This causes EventsRequestListener to receive 2 calls, even though I only need the one from onActivityResult().\nSo, I can't remove the execute() call from onActivityResult(), because I do actually need the fresh data. And I can't remove the addListenerIfPending from fragment's onStart(), because I also need to add the listener if the request is pending on orientation changes. So I need to have both. But apparently both are quite deadly in combination for this test case. Any ideas ?\nDo you have a workaround for this ? Have you encountered issues like this in your implementations ? I find it sad to see that this use case, which is relatively trivial, is so hard to fix from the library's point of view.\n. Billion of thanks @stephanenicolas I finaly got it working by excluding support module like you wrote above. I remember trying this in the past week, but probably for other libs like ActionBarSherlock & Play Services, not for RoboSpice. Guess too many things going wrong got to me.. But again, many many thanks for this. I can finally push through with the projects & Gradle.\nAs for a so called final solution, the code import might be an idea. But can't you just include the support lib from the local Maven repo ? I mean, granted, if the user doesn't have it installed on their machine, the build will fail and it doesn't look like a good idea anymore. Anyhow, even the workaround by excluding the support lib is still pretty convenient.\n. I know... but what can you do, right ?\ncompile ('com.octo.android.robospice:robospice-spring-android:1.4.7')\n        {\n            exclude module: 'support-v4'\n        }\nI'll have a look at the snapshot in a bit. Thanks.\nLE: Ok, I swear to god I can't find the repo URL in there.\n. Found it.\nI removed the exclude statement from gradle. Seems to work just fine. As for stability, it seems to be ok. If I find something out of the ordinary, I'll report it back.\n. You're most welcome. Thanks again for everything.\n. Oh my god, TON of thanks for finding this issue, Isuski and for fixing it, stephannicolas ! I have encountered this as well since 1-2 months ago, but never figured out how to fix it properly; apart from adding the listener after executing the request. Should've researched it thoroughly. Anyway, thanks guys for this, it really is a great bug fix.\n. Thanks for the workaround. Could we also get a new release with a fix for this? Or at the very least, a notice in the readme file for future reference.\n. Should seriously consider switching to the new, official Android Arch Components. I wouldn't recommend RS on any new project. Now don't get me wrong, it was a very useful library for a quite long time, but its architecture doesn't really suit where Android is at this point. Not to mention the fact that the library hasn't seen an update in over 3 years.\nAgain, I don't mean to offend anybody on the team, especially @stephanenicolas. You've done a tremendously amazing job with RS and all of us are extremely grateful for that. But I think it's time to call it in.. > putting your data in a view model after a RS\n\nrequest, knowing that the view model might be destroyed. That's doable, for\ninstance if you stop RS requests when the view model is destroyed, or just\nunplug your listeners there instead of onDestroy.\n\nTrue, but then we'd just move something that only the Data layer should know about (RoboSpice) from the View layer to the ViewModel layer. I strongly believe that data layer implementation specifics (that is, if we are using RS or any other caching/network mechanism, such as Room or in memory caching, etc.) should reside inside the data layer only; and not bubble up towards upper layers.\nCurrently, we've been using RS inside the View layer directly, which, in more complex apps, does hinder refactoring and feature changes, compared to a more clean MVVM approach.\nSo I guess what I'm basically asking is, if RS can be more tightly integrated into a MVVM app arch, without sacrificing its core principles (which you already mentioned, such as the foreground service approach).\nPS: Yeah, I've noticed the hackish method of using retained Fragments for VMs as well :)). ",
    "mduarte": "I can see that it is indeed a requirement (the type of the id to be the same of the cache key) by looking at InDatabaseObjectPersister (line 82)\nJava\nif (!this.idType.equals(cacheKey.getClass())) {\n    throw new IllegalArgumentException(\"cacheKey must be a \" + idType.getSimpleName());\n}\nHowever I am still not sure of the reasons for this constraint.\n. ",
    "jasco": "I have encountered the same problem.\nThe mapping from the cacheKey string to the ormlite POJO id is handled in the cacheentry table (class CacheEntry).  The POJO idType has no bearing on the cacheKey field type.  Arguably cacheKey should be passed as a String (although this would be a breaking API change) rather than as an Object that under the covers assumes a sane String.valueOf conversion.\nAnyway, I'll submit a patch to remove the irrelevant type checking on cacheKey.\n. Submitted against master.\n. Will resubmit pull request from a separate branch.\n. > That had been asked for a while but we never had time to dig that. It\n\nlooked so simple ! :)\n\nHappy it helped others too.\n. ",
    "irgendeinich": "No, the crash reporter I'm using sadly doesn't attach the logcat.\n. ",
    "frogermcs": "I have the same problem. Unfortunately Logcat didn't say too much...\n05-23 12:05:56.136: W/System.err(2256): java.lang.NullPointerException\n05-23 12:05:56.136: W/System.err(2256):     at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n05-23 12:05:56.136: W/System.err(2256):     at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n05-23 12:05:56.136: W/System.err(2256):     at java.lang.Thread.run(Thread.java:1019)\n05-23 12:05:56.136: E/AndroidRuntime(2256): FATAL EXCEPTION: Thread-36\n05-23 12:05:56.136: E/AndroidRuntime(2256): java.lang.NullPointerException\n05-23 12:05:56.136: E/AndroidRuntime(2256):     at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n05-23 12:05:56.136: E/AndroidRuntime(2256):     at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n05-23 12:05:56.136: E/AndroidRuntime(2256):     at java.lang.Thread.run(Thread.java:1019)\n. And larger peace of logs from Logcat. This error occurs in Fragment nested in PagerAdapter, after orientation change.\n06-04 14:10:40.516: W/dalvikvm(17548): threadid=16: thread exiting with uncaught exception (group=0x40ad6930)\n06-04 14:10:40.516: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.516: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.516: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.516: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.526: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.526: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.536: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.536: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.536: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.536: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.536: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.536: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.536: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.536: W/System.err(17548):    at     com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.546: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.546: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.546: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.546: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.546: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.556: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.556: W/System.err(17548): java.lang.NullPointerException\n06-04 14:10:40.556: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.556: W/System.err(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.566: W/System.err(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:40.566: E/Crashlytics(17548): Failed to execute task.; [class java.lang.InterruptedException: null]\n06-04 14:10:40.566: E/AndroidRuntime(17548): FATAL EXCEPTION: Thread-7163\n06-04 14:10:40.566: E/AndroidRuntime(17548): java.lang.NullPointerException\n06-04 14:10:40.566: E/AndroidRuntime(17548):    at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:194)\n06-04 14:10:40.566: E/AndroidRuntime(17548):    at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:175)\n06-04 14:10:40.566: E/AndroidRuntime(17548):    at java.lang.Thread.run(Thread.java:856)\n06-04 14:10:41.617: D/dalvikvm(17548): GC_CONCURRENT freed 5055K, 25% free 19889K/26496K, paused 8ms+10ms, total 100ms\n. I think, this is problematic code:\n@Override\npublic void onStop() {\n    super.onStop();\n    spiceContentManager.cancel(FullEvent.class, FullEventRequest.getCacheKey(event.getId()));\n    spiceContentManager.shouldStop();\n}\nWhen I comment .cancel(...) everything works fine.\n. ",
    "bishiboosh": "Seems like the only place where the null check is not done is in sendRequest, I'm making a pull request in a few\n. oh ok, seems like it's already done, sorry\n. Do you have an idea when 1.4.6 will be out ? We need this bugfix, and as I'm working on an entreprise app, using a snapshot version isn't really possible...\n(just to know if I need to make my own fork of 1.4.5 or if 1.4.6 is just around the corner)\n. I reproduce it, I call cancelAll to cancel loading, and got the exception too.\nHere is a gist with the log and the stacktrace : https://gist.github.com/bishiboosh/6000690\n. ",
    "EurigJones": "Just hitting this one myself as well quite often.\n. Hmm. After you said that I tested with another server thinking it could possibly be the server but I really don't think it is.\nThis is very odd, I'm getting this behavior consistently across multiple devices so I must be doing something wrong if you've never seen it. But it's just weird though as it ALWAYS happens on the first request after waiting a few minutes and never on the 2nd attempt. I'm not doing anything unusual with RoboSpice or SpringAndroid AFAIK\n. I have one base class, and child classes which handle the requests. Here is an example..\nBase Class:\n```\npublic abstract class BaseREQ extends SpringAndroidSpiceRequest\n{\n    @Getter private boolean loading;\n    @Getter @Setter private Handler loadingHandler;\npublic BaseREQ(Class<RESULT> clazz)\n{\n    super(clazz);\n    setLoading(false);\n}\n\n@Override\npublic RESULT loadDataFromNetwork() throws Exception\n{\n    try\n    {\n        setLoading(true);\n        return loadData();\n    }\n    finally\n    {\n        setLoading(false);\n    }\n}\n\n@Override\npublic void cancel()\n{\n    setLoading(false);\n    super.cancel();\n}\n\npublic void setLoading(boolean loading)\n{\n    this.loading = loading;\n\n    if (loadingHandler != null)\n        loadingHandler.sendEmptyMessage(loading ? 1 : 0);\n}\n\nprotected <T> HttpEntity<T> auth(T request, Context c)\n{\n    HttpAuthentication authHeader = new HttpBasicAuthentication(LoginPreferences.getUsername(c), LoginPreferences.getAPX(c));\n    HttpHeaders requestHeaders = new HttpHeaders();\n    requestHeaders.setAuthorization(authHeader);\n\n    return new HttpEntity<T>(request, requestHeaders);\n}\n\npublic abstract RESULT loadData() throws Exception;\n\n}\n```\nChild Class:\n```\npublic class DeleteGameREQ extends BaseREQ\n{\n    private DeleteGameRequest request;\n    private Context context;\npublic DeleteGameREQ(DeleteGameRequest request, Context context)\n{\n    super(DeleteGameResponse.class);\n    this.request = request;\n    this.context = context;\n}\n\n@Override\npublic DeleteGameResponse loadData() throws Exception\n{\n    return getRestTemplate().postForObject(GameURL.DELETE, auth(request, context), DeleteGameResponse.class);\n}\n\n}\n```\n. I got around this issue by doing a one time retry of postForObject when the specific exception is thrown.\nI agree I don't think this is anything to do with Robospice, but maybe SpringAndroid configuration and possibly to do with the basic authentication I'm doing on the request.\nThanks.\n. Ok I will have a look at this. Thanks Stephane\n. This is a duplicate of a bug issue #86 I think. This is the same issue I hit on today as well.\n. I will confirm with the new snapshot release sometime this week. \n. ",
    "Winghin2517": "I ran the ormlite sample. The weather object was saved down into my android emulator as a sqlite database.\nI then extracted the sqlite database and changed the values of the current temperature of the last item on the sqlite database (currently the weather is 27, but i changed it to 11). I then pushed it back into the emulator and when i restarted the app, it picked up the temperature as 11.\nI think you can modify the persisted data and RS will return the persisted changes as per the SQLite database.\n. Hello,\nI might be ignorant in my question - I see that some of the methods in RS, like the spiceManager.removeAllDataFromCache(); will not return a result immediately unless I go spiceManager.removeAllDataFromCache().get();.\nIn most cases, I would need my result immediately, in my case, I want RS to delete all the data in the cache, so I have to go : spiceManager.removeAllDataFromCache().get() but in an asynctask.\nBut isn't the whole purpose of RS to get away from AsyncTask?\n. ",
    "prildy": "I also got the same issue\njava.util.ConcurrentModificationException\nat java.util.HashMap$HashIterator.nextEntry(HashMap.java:792)\nat java.util.HashMap$KeyIterator.next(HashMap.java:819)\nat com.octo.android.robospice.request.RequestProcessor$ProgressRunnable.run(RequestProcessor.java:418)\nat android.os.Handler.handleCallback(Handler.java:725)\nat android.os.Handler.dispatchMessage(Handler.java:92)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:5041)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)\nat dalvik.system.NativeStart.main(Native Method)\nI do the network call 5 times with the timer delay per 6 sec. This exception doesn't constantly raise, but it happens at most time. Can you take a look at this issue?\n. ",
    "AndyFrench": "@stephanenicolas I seem to be getting this now using 1.4.8. \nHashMap.java:792 \u2022 java.util.HashMap$HashIterator.nextEntry\nHashMap.java:819 \u2022 java.util.HashMap$KeyIterator.next\nDefaultRequestListenerNotifier.java:168 \u2022 com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run\nHandler.java:725 \u2022 android.os.Handler.handleCallback\nHandler.java:92 \u2022 android.os.Handler.dispatchMessage\nLooper.java:137 \u2022 android.os.Looper.loop\nActivityThread.java:5227 \u2022 android.app.ActivityThread.main\nMethod.java:-2 \u2022 java.lang.reflect.Method.invokeNative\nMethod.java:511 \u2022 java.lang.reflect.Method.invoke\nZygoteInit.java:795 \u2022 com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run\nZygoteInit.java:562 \u2022 com.android.internal.os.ZygoteInit.main\nNativeStart.java:-2 \u2022 dalvik.system.NativeStart.main\nIs there any fix?\n. ",
    "siyamed": "Hi, I am using 1.4.9 and getting the same exception at DefaultRequestListenerNotifier.java line 168. \n. ",
    "deisold": "Hello, \nI'm also using 1.4.9 and getting:\njava.util.ConcurrentModificationException\n            at java.util.ArrayList$ArrayListIterator.next(ArrayList.java:573)\n            at com.octo.android.robospice.request.notifier.SpiceServiceListenerNotifier$RequestAddedNotifier.run(SpiceServiceListenerNotifier.java:180)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:137)\nIf I look into the source code I see an iterating:\nfor (SpiceServiceListener listener : spiceServiceListenerList) {\n            listener.onRequestAdded(request, requestProcessingContext);\n        }\n==> The variable spiceServiceListenerList is defined as a sychronized list.\n    private final List spiceServiceListenerList = Collections.synchronizedList(new ArrayList());\n==> If you look into the implementation of a sychronized list all public methods are synchronized against a mutux. But the iterator itself is NOT synchronized.\n==> So I think that any access of such a list using an iterator has to be synchronized as well because while iterating over a synchronized list the list could be motified from any other thread because the access from outside is not globally synchronized.\nHope you find an appropriate solution!\nCheers, Dirk\n. Hi, thanks a lot for your quick reply. Obviously the DefaultRequestListenerNotifier uses a synchronized block around the itereration of the list and the SpiceServiceListenerNotifier doesn't. Do you if the robospice team could provide a fix for that soon? We need to go productive within 2 weeks.... \n. What do you mean by at runtime? We have some activities and each of them instantiates a SpiceManager which itself instantiates a SpiceServiceConnection which adds some spice service listeners in onServiceConnected at runtime. \nSo the service listeners are added at runtime, they are not added in a static context... Does this answer your question? \n. ",
    "softwaremaverick": "I haven't looked at the code in quite a long time but if the spice service listeners are modified at runtime then yes. However,I'm sure originally they were only to be added once within the constructor of the Spice service as the listeners were designed originally to last the full life span of the object. Those listeners shouldn't necessarily be modified as part of an Activity Life cycle.\nI don't know if that is still true or not.\nAndrew\ndeisold notifications@github.com wrote:\n\nHello, \nI'm also using 1.4.9 and getting:\njava.util.ConcurrentModificationException\n     at java.util.ArrayList$ArrayListIterator.next(ArrayList.java:573)\nat\ncom.octo.android.robospice.request.notifier.SpiceServiceListenerNotifier$RequestAddedNotifier.run(SpiceServiceListenerNotifier.java:180)\n           at android.os.Handler.handleCallback(Handler.java:733)\n           at android.os.Handler.dispatchMessage(Handler.java:95)\n           at android.os.Looper.loop(Looper.java:137)\nIf I look into the source code I see an iterating:\nfor (SpiceServiceListener listener : spiceServiceListenerList) {\n       listener.onRequestAdded(request, requestProcessingContext);\n       }\n==> The variable spiceServiceListenerList is defined as a sychronized\nlist.\nprivate final List spiceServiceListenerList =\nCollections.synchronizedList(new ArrayList());\n==> If you look into the implementation of a sychronized list all\npublic methods are synchronized against a mutux. But the iterator\nitself is NOT synchronized.\n==> So I think that any access of such a list using an iterator has to\nbe synchronized as well because while iterating over a synchronized\nlist the list could be motified from any other thread because the\naccess from outside is not globally synchronized.\nHope you find an appropriate solution!\nCheers, Dirk\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/91#issuecomment-29187741\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. The previous examples were from the Default notifier which again I don't understand as it has (last time of looking) a synchronise around it which would be the solution if not there already\nAndrew Clark andrew@dync.co.uk wrote:\n\nI haven't looked at the code in quite a long time but if the spice\nservice listeners are modified at runtime then yes. However,I'm sure\noriginally they were only to be added once within the constructor of\nthe Spice service as the listeners were designed originally to last the\nfull life span of the object. Those listeners shouldn't necessarily be\nmodified as part of an Activity Life cycle.\nI don't know if that is still true or not.\nAndrew\ndeisold notifications@github.com wrote:\n\nHello, \nI'm also using 1.4.9 and getting:\njava.util.ConcurrentModificationException\n     at\njava.util.ArrayList$ArrayListIterator.next(ArrayList.java:573)\nat\ncom.octo.android.robospice.request.notifier.SpiceServiceListenerNotifier$RequestAddedNotifier.run(SpiceServiceListenerNotifier.java:180)\n           at android.os.Handler.handleCallback(Handler.java:733)\n           at android.os.Handler.dispatchMessage(Handler.java:95)\n           at android.os.Looper.loop(Looper.java:137)\nIf I look into the source code I see an iterating:\nfor (SpiceServiceListener listener : spiceServiceListenerList)\n{\n           listener.onRequestAdded(request,\nrequestProcessingContext);\n           }\n==> The variable spiceServiceListenerList is defined as a sychronized\nlist.\nprivate final List spiceServiceListenerList =\nCollections.synchronizedList(new ArrayList());\n==> If you look into the implementation of a sychronized list all\npublic methods are synchronized against a mutux. But the iterator\nitself is NOT synchronized.\n==> So I think that any access of such a list using an iterator has to\nbe synchronized as well because while iterating over a synchronized\nlist the list could be motified from any other thread because the\naccess from outside is not globally synchronized.\nHope you find an appropriate solution!\nCheers, Dirk\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/91#issuecomment-29187741\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. But do you actually add and remove spice s Service listeners at runtime? If so then for what purpose?\ndeisold notifications@github.com wrote:\n\nHi, thanks a lot for your quick reply. Obviously the\nDefaultRequestListenerNotifier uses a synchronized block around the\nitereration of the list and the SpiceServiceListenerNotifier doesn't.\nDo you if the robospice team could provide a fix for that soon? We need\nto go productive within 2 weeks.... \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/91#issuecomment-29279153\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yes thanks. I'll have to look sometime at how robospice now works with them. I'm sure the last time I saw them you couldn't remove them. I'll have to check it out. However, this can only be done at evenings and weekends as I work on other stuff during the day.\ndeisold notifications@github.com wrote:\n\nWhat do you mean by at runtime? We have some activities and each of\nthem instantiates a SpiceManager which itself instantiates a\nSpiceServiceConnection which adds some spice service listeners in\nonServiceConnected at runtime. \nSo the service listeners are added at runtime, they are not added in a\nstatic context... Does this answer your question? \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/91#issuecomment-29366828\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. @stephanenicolas  if you are releasing soon for the next RS I believe there could be a simple change in SpiceServiceListenerNotifier  for this the last time I looked. By adding as specified above the synchronized around the list iterator. I'll look again to confirm that this is modifiable multiple times but it would be good to add this simple change anyway for release.\n. I noticed that in the SpiceManager the set of listeners is not always syncrhonised. Not sure if that's the cause of the spice manager issue you're seeing Stephan.\nThere are various places where there's a Map of request/listeners, eg.\n```\n    private final Map, Set>> mapRequestToLaunchToRequestListener = \nCollections\n        .synchronizedMap(new IdentityHashMap, Set>>());\n```\nIn various locations it checks whether the list of listeners is null or not, if true it creates it.\nThis happens in Request Processor and Spice Manager. Typically it creates it with a synchronized set, eg.\nRequest Processor addRequest\n```\n        if (listRequestListenerForThisRequest == null) {\n            if (request.isProcessable()) {\n                Ln.d(\"Adding entry for type %s and cacheKey %s.\", request.getResultType(), \nrequest.getRequestCacheKey());\n                listRequestListenerForThisRequest = Collections.synchronizedSet(new HashSet<RequestListener<?\n\n\n());\n                this.mapRequestToRequestListener.put(request, listRequestListenerForThisRequest);\n            }\n        } else {\n```\n\n\nSpice Manager onRequestAggregated\nSet<RequestListener<?>> listeners = mapPendingRequestToRequestListener.get(cachedSpiceRequest);\n            if (listeners == null) {\n                listeners = Collections.synchronizedSet(new HashSet<RequestListener<?>>());\n                mapPendingRequestToRequestListener.put(cachedSpiceRequest, listeners);\n            }\nWhilst SpiceManager addRequest doesn't.... \n```\n    private  void addRequestListenerToListOfRequestListeners(final CachedSpiceRequest \ncachedSpiceRequest, final RequestListener requestListener) {\n        synchronized (mapRequestToLaunchToRequestListener) {\n            Set> listeners = mapRequestToLaunchToRequestListener.get(cachedSpiceRequest);\n            if (listeners == null) {\n                listeners = new HashSet>();\n                this.mapRequestToLaunchToRequestListener.put(cachedSpiceRequest, listeners);\n            }\n            listeners.add(requestListener);\n        }\n    }\n```\nWhich is called from\n```\n    public  void execute(final CachedSpiceRequest cachedSpiceRequest, final RequestListener \nrequestListener) {\n        addRequestListenerToListOfRequestListeners(cachedSpiceRequest, requestListener);\n        Ln.d(\"adding request to request queue\");\n        this.requestQueue.add(cachedSpiceRequest);\n    }\n```\nThe SpiceManager seems to send this set of listeners to the service in\n```\n    private void sendRequestToService(final CachedSpiceRequest<?> spiceRequest) {\n        lockSendRequestsToService.lock();\n        try {\n            if (spiceRequest != null && spiceService != null) {\n                if (isStopped) {\n                    spiceService.addRequest(spiceRequest, null);\n                } else {\n                    final Set> listRequestListener = \nmapRequestToLaunchToRequestListener.get(spiceRequest);\n                    Ln.d(\"Sending request to service : \" + spiceRequest.getClass().getSimpleName());\n                    spiceService.addRequest(spiceRequest, listRequestListener);\n                }\n            }\n        } finally {\n            lockSendRequestsToService.unlock();\n        }\n    }\n```\nAlthough what I'm seeing in the Spice Service at that time is that it simply does an addAll on the listeners. Unless a different implementation does something else.\n. Yeah you should do very little in a broadcast receiver. I recommend sending the intent to a service to do further processing \nOn 20 August 2014 13:06:41 BST, nugmanovagulnaz notifications@github.com wrote:\n\nI have BroadcastReceiver. I'm calling start of spiceManager in\nonReceive method:\npublic void onReceive(Context context, Intent intent) {\nspiceManager.start(context);\n...\n}\nWhen should i call the shouldStop method? There are no onStop() method\nin  BroadcastReceiver.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-52766249\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Sounds like you need a full service to me! \nOr! And this is untested but potentially going to work, you could create a spice service with a custom (and I can't remember what I called it) oh... Notifier? \nAs in you could create a custom result notifier which sent the result as a broadcast. The notifiers run in a non ui thread so you don't need to worry about them affecting ui.\nOn 21 August 2014 19:14:44 BST, nugmanovagulnaz notifications@github.com wrote:\n\nWhen i get data from network i want to send another broadcast with this\ndata and it's all.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/91#issuecomment-52959995\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I normally uses Commons ExceptionUtils to get the root cause and work with that.\nOn 27 February 2014 02:03:01 GMT, colintheshots notifications@github.com wrote:\n\nOddly enough, it just started working for me. It wasn't working at all\nearlier today with or without the .getCause() and now it suddenly only\nworks without it.\nI don't have my Gradle minor version pinned, so I would get the latest\nfixes.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/105#issuecomment-36202311\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. I've done a change for this that works for me. It's currently posted as a pull request.\nWhat i've done is added a RequestNotFoundListener interface that if your request listener implements it will be called after an addListenerIfPending call.\nIt's currently Pull request 147 as per https://github.com/octo-online/robospice/pull/147\nAndrew\n. Hi I've put a fix for this in my master branch. I'm new to GitHub so I don't know whether you check these messages to move it into your repo or not.\n. Thanks for the info.... the change and tests are currently on my master branch. Presumably it's still ok to submit a pull request.\nI haven't read the link yet but i'll read it after typing this. Thanks for the info.\nI've modified it for binary, bitmap and text requests.\n. I've now added a pull request but it added it to a separate issue. I'm now thinking I should close this one right?\n. Thanks. I fix them as I find them.\n. Oh and as for unit testing it. I imagine that two threads running where one is iterating over the request listeners but where a request listener is purposely slow, whilst another addListenerIfPending request is happening should pretty much do it.\n. That makes sense. However it would break any existing code.\nI've just testing in eclipse. If i call the pendingrequestlistener method i get an \"The method addListenerIfPending(Class, Object, RequestListener) is ambiguous for the type SpiceManager\" error.\n. Sorry that wouldn't break existing code but it would fail to compile if someone tried to use the new method.\n. Unless you change method Names to be unique\n. addPendingListenerIfPending ? It's ugly but would be unique\n. Yep, you're right. I think I was casting it into shape which maybe caused an issue. Not sure now.\nAnyway, added a new commit with the changes and modified the addRequestIfPending test to enforce the behaviour.\n. There will be a merge conflict when these changes are merged in with https://github.com/octo-online/robospice/pull/158 however, I've fixed the conflicts and they are currently in another branch ready to be added here when https://github.com/octo-online/robospice/pull/158 goes in.\nThe replacement pull request which merges both in is https://github.com/octo-online/robospice/pull/160\n. Hi Stephane,\nI'm not sure who Mark is (or if you've got that name slightly wrong). When you say hooks into RS do you mean you'd include just the modifications to the RequestProcessor class to change private methods to protected?\nWhilst my needs of the notifications are required in the current project I do believe they would also be useful in my future projects and for other people too. I think my requirements differ from the original RS requirements in terms of more long-term request processing running in the background as opposed to short-term requests with the user remaining on the current activity.\nHowever, I see the notifications implementation simply as a service-side request listener implementation. What this therefore means is that the user can create a request, close the activity, have the request processed in the background (ie. file downloading), see notifications of what the state of play is with the request and then jump back to the activity whenever the request  has finished.\nI purposely didn't put the code into the main request processor as that itself may be a feature that you don't necessarily want to enable. However, by putting it into the RS core notifications package as a separate request processor basically allows a developer to \"enable\" a commonly seen Ui component using a simple interface which is not dissimilar to request listeners.\n. Hi Stephane, sure that sounds good to me.\nI'll look into that and produce sample observers to demonstrate. \nAndrew\n. As I understand a release is due to be done next week will there be any more merges into the master branch before then? \nIt'd be good to get some of the other changes into the next release so that I can use the release version of the maven pom. This includes:\nhttps://github.com/octo-online/robospice/pull/140\nhttps://github.com/octo-online/robospice/pull/147\nplus the spiceservice/requestprocessor changes from this one.\nI'm on with the observer code and it seems to be going well. Not sure how long it will be with tests.\n. Although actually ignore the spiceservice/requestprocessor changes in the current issue as I'm about to add ObserverManager to the list of parameters\n. Yes, don't worry about this pull request. I'll close this for now and further changes will be on the way.\n. Although actually think I'd like to move some classes into new packages\n. Hi Stephen,\nEffectively once a request is underway it should store it's own set of listeners which are still able to be modified concurrently when an addlistener if pending request comes in. However, it shouldn't have to query the map when updating progress as it should just pass it's set of listeners to the reporter. \nOnly when the request is starting or finished (failed or succeeded) should it hit the map to add/remove from it.\n. No problem Stephane it felt great to make such a contribution. I've no plans to stop just yet either :-)\n. This includes support for the https://github.com/octo-online/robospice/issues/55 requirement\n. I believe it's actually deceptively large. There's LOADS of test code in there to try and hit all the scenarios. The actual main code is quite flat.\nI believe the core test count now hits 108 tests!\nHowever, over time I'll look to flatten this further in line with how I want to flatten the Listener to Request mapping. However, that'd be a Proof of concept thing.\nYou should also note that whilst there's a lot of code, there's very little change to the existing codebase. It's more adding to what I've done previously with the Request Progress Reporters.\n. No problem Stephane, When I say link from request to listeners I don't mean the SpiceRequest class itself would contain the listeners, I merely mean that when the request is being executed in the RequestRunner class the RequestRunner itself probably owns a list of the listeners and notifies them accordingly.\n. No problem I'll check it out tonight.\nWill all listeners have to work on the UI thread? I originally wanted non UI tasks to be processed on a separate worker thread which is why the ObserverManager created it's own thread.\n. Do you mean RequestProgressManager?\nOriginally I had it as RequestProgressBroadcaster but RequestEventsNotifier or RequestEventsBroadcaster ?\nThe use of placing code into the non-UI thread was effectively so that Android Notifications could be managed on a non UI thread. Taking as much work away from the UI thread as possible improves the UI performance. This is especially noticeable on a BinaryRequest which uses the RequestProgressListener to update the request progress after every 4K of data.\nAdd a few binary downloads running at the same time along with Android Notifications showing the progress and you'll soon realise the impact it has on the UI thread.\n. It would be nice to have shared code with Request Listeners and Observers. The issue I had to deal with was how to terminate the observer thread without preventing existing messages from being processed.\nThis is why the QUIT message was sent and the thread then terminated.\nHaving two different classes was basically what the request progress reporter with observer support did.\n. I haven't had time to get around to looking into it yet but I will do. How's the weather in France? I'm finding it extremely warm in the evenings right now and so not getting much done.\n. I still need to look at this and hopefully will do so tomorrow. I'm starting to think that there could be a lot added to a service listener. One of the things I'm considering is having a RequestContext to things like onRequestProgress, onRequestCompleted, etc, etc.\nThis could be created by the service listener in onRequestAdded and used by the service listener to do custom things for different requests including posting notification runnables to a separate message queue running on a separate thread.\nWhen the service has finished the service listener could then clear down the queues.\n. I'm thinking that request context would have the listeners and so when passing messages to the ui thread it would get three listeners from this. If I wanted to add observers in a separate thread then I could store my observers in my own custom request context and be able to post messages to their own message queue on a different thread\nstephanenicolas notifications@github.com wrote:\n\nI don't know exactly what RequestContext could look like, but I guess\nit\nwould contain more information than the current thread.\nI just fear that, as we don't have a real definition of requirements\nand\nneeds, we had useless stuff.\nSo I propose that we let this be driven by a need, inside samples for\ninstance, or better, by real life examples. It we need stuff to display\na\ncomplex view with a tree for request processing, then fill the\ninterface of\nthe listener with what is needed.\nThat would allow not to go to deep in defining stuff that wouldn't be\nused.\nS.\n2013/8/9 softwaremaverick notifications@github.com\n\nI still need to look at this and hopefully will do so tomorrow. I'm\nstarting to think that there could be a lot added to a service\nlistener.\nOne of the things I'm considering is having a RequestContext to\nthings like\nonRequestProgress, onRequestCompleted, etc, etc.\nThis could be created by the service listener in onRequestAdded and\nused\nby the service listener to do custom things for different requests\nincluding posting notification eunnables to a separate message queue\nrunning on a separate thread.\nWhen the service has finished the service listener could then clear\ndown\nthe queues.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/pull/166#issuecomment-22383450\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - mobilite.octo.com\nblog.octo.com - www.usievents.com\n...........................................................\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/pull/166#issuecomment-22434603\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Viewing the differences using the following https://github.com/octo-online/robospice/compare/master...observers2  seems interesting.\nI'll definitely look into it further. I'm especially interested in seeing if RequestProcessingContext can be created once, possibly as part of the request runner which will be created when a request is processed. I'll look further into it but like you say I need to create a sample project to show how I'd use it for it to be understandable. I'm keen for RS to be in a position where I can use it for everything and it bends according to my specific requirements.\n. You'll need to use a PendingRequestListener however instead of RequestListener as per the new addListenerIfPending documented here... http://octo-online.github.io/robospice/site/latest/apidocs/com/octo/android/robospice/SpiceManager.html#addListenerIfPending(java.lang.Class, java.lang.Object, com.octo.android.robospice.request.listener.PendingRequestListener)\n. I also wanted to make this requirement more effective but it hasn't annoyed me enough yet to fix it. One thing is that when the service Is bound then no notification is required at all. When our isn't bound and a request is in progress then showing a notification is ok as long as it's workable\nEdouard Marquez notifications@github.com wrote:\n\nHi,\nSince Android 4.3, a default notification is shown when using\nRobospice.\nAccording to Adam Powell, the fake notification with startForeground()\nis not working anymore and the framework displays one :\nhttps://plus.google.com/u/0/115055848034306421648/posts/9XvjLxG1xST\nIs-it possible to find a way to remove it ? Because my users are asking\nme why they have this notification.\nThanks !\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/170\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. To clarify, only when a request use in progress does the service need to be in foreground\nEdouard Marquez notifications@github.com wrote:\n\nHi,\nSince Android 4.3, a default notification is shown when using\nRobospice.\nAccording to Adam Powell, the fake notification with startForeground()\nis not working anymore and the framework displays one :\nhttps://plus.google.com/u/0/115055848034306421648/posts/9XvjLxG1xST\nIs-it possible to find a way to remove it ? Because my users are asking\nme why they have this notification.\nThanks !\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/170\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. At a guess I think he's just agreeing with the potential solution that we've already defined, ie. the one where we say there's a notification only when it's necessary\n. Added a pull request with changes for this. Tested with a simple android application but looking for more feedback to make sure it's suits everyone.\nhttps://github.com/octo-online/robospice/pull/172\n. Do the changes in the pull request https://github.com/octo-online/robospice/issues/172 not work for you?\n. Don't worry Stephane I'm in no rush.\nstephanenicolas notifications@github.com wrote:\n\nHi @rciovati , that looks nice. @softwaremaverick , I bet you got\nsomething pretty close to what we want but I didn't find time to review\nyour solution. Sorry for the delay.\nS.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/170#issuecomment-22318981\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. From the changes I made I examined yours and they seem good to go (without compiling or running anything to test). Effectively you're displaying the notification only when the service is unbound but has requests which is probably what most people would want so that's fine.\n. Although if you no longer wish to use the requestsInProgress() method in the RequestProcessorListener then you might as well remove it from the interface and remove the bit that populates it.\n. Yeah look at the instance of request processor listener in the service and you'll see it goes into foreground mode when a new request is added and leaves foreground mode when all requests are complete\nstephanenicolas notifications@github.com wrote:\n\nSo fast, Andrew :)\nBut is the service still in foreground or not ? It really needs to be.\nFor\ninstance, download a large binary, RS request should go on, and it\nshould\nbe possible to \"re-plug\" a listener to it. Otherwise, that would be a\ntremendous change on the contract of RS.\n2013/8/4 softwaremaverick notifications@github.com\n\nThe service will only show a notification if you override\ngetDefaultNotification with a valid notification and if requests are\nactive\nYou can merge this Pull Request by running\ngit pull https://github.com/softwaremaverick/robospice\nforeground-fix\nOr view, comment on, or merge it at:\nhttps://github.com/octo-online/robospice/pull/172\nCommit Summary\n- Initial Foreground Service/Notification Changes\nFile Changes\n- M\nrobospice-core-parent/robospice-core-test/src/main/java/com/octo/android/robospice/request/RequestProcessorTest.javahttps://github.com/octo-online/robospice/pull/172/files#diff-0(4)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/SpiceService.javahttps://github.com/octo-online/robospice/pull/172/files#diff-1(34)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProcessorListener.javahttps://github.com/octo-online/robospice/pull/172/files#diff-2(2)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProgressManager.javahttps://github.com/octo-online/robospice/pull/172/files#diff-3(8)\nPatch Links:\n- https://github.com/octo-online/robospice/pull/172.patch\n- https://github.com/octo-online/robospice/pull/172.diff\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/pull/172#issuecomment-22079998\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. However, you do have to override the create default notification method to create a notification for the foreground but this was documented previously in the service. Also, the previous implementation created a notification incompatible with early android devices due to no pending intent defined\nstephanenicolas notifications@github.com wrote:\n\nSo fast, Andrew :)\nBut is the service still in foreground or not ? It really needs to be.\nFor\ninstance, download a large binary, RS request should go on, and it\nshould\nbe possible to \"re-plug\" a listener to it. Otherwise, that would be a\ntremendous change on the contract of RS.\n2013/8/4 softwaremaverick notifications@github.com\n\nThe service will only show a notification if you override\ngetDefaultNotification with a valid notification and if requests are\nactive\nYou can merge this Pull Request by running\ngit pull https://github.com/softwaremaverick/robospice\nforeground-fix\nOr view, comment on, or merge it at:\nhttps://github.com/octo-online/robospice/pull/172\nCommit Summary\n- Initial Foreground Service/Notification Changes\nFile Changes\n- M\nrobospice-core-parent/robospice-core-test/src/main/java/com/octo/android/robospice/request/RequestProcessorTest.javahttps://github.com/octo-online/robospice/pull/172/files#diff-0(4)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/SpiceService.javahttps://github.com/octo-online/robospice/pull/172/files#diff-1(34)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProcessorListener.javahttps://github.com/octo-online/robospice/pull/172/files#diff-2(2)\n- M\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/RequestProgressManager.javahttps://github.com/octo-online/robospice/pull/172/files#diff-3(8)\nPatch Links:\n- https://github.com/octo-online/robospice/pull/172.patch\n- https://github.com/octo-online/robospice/pull/172.diff\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/pull/172#issuecomment-22079998\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Sorry but that is incorrect as per the official java documentation: http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#synchronizedSet(java.util.Set)\nWhich is why it was added in 1.4.6.as part of the pull request https://github.com/octo-online/robospice/pull/140\nAndrew\n. Given that the fix is to pretty much say if all versions of Android then use that temporary fix then shouldn't the if statement be changed to a normal block of code? \nPersonally I think the Android way is to have the developer specify a pending intent as a notification with no pending intent is bad user interface design. \nAs the notification now should be only appearing when the service is unbound and the user would expect to use the notification to return to the app then I don't think there should be a temporary fix and the developer must make sure the notification points to a valid pending intent. \n. Actually correction it's not all Android versions but only for certain ICS versions for some reason. However the above comment about removing the temporary fix still applies \n. The idea of this is effectively to be notified when progress isn't going to be reported. If you want to be notified just implement the Request Progress Listener interface.\nEffectively you should assume you are monitoring unless you hear otherwise.\nThe way I used to do it is to set the text to be as if it worked but change it if I get told that it didn't. It's a very quick process so not problematic for the user\nAndrew\n. I prefer to force developers to do it properly by adding an abstract method to create the notification properly\nDanielNovak notifications@github.com wrote:\n\nI think Robospice should disable this whole notification hack on\ndevices with Android 4.3 and higher, because it won't work and will\ncause unpredictable behaviour.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/227#issuecomment-29230839\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Is this through emulators only? I've encountered issues with emulators when my local HTTP server is down it takes the emulator a LONG time to work that out. This is even true within the web browser of the Android Emulator.\n. As this is KitKat only it may be a bug in 4.4 which may(?) be resolved by 4.4.2 or 4.4.1\n. This would seem to imply that there is a null request processor which is created in onCreate. Are you changing any of the code around the create request processor in the service? \nOn 26 December 2014 06:23:38 GMT+00:00, ruscoderalex notifications@github.com wrote:\n\nIt seems not to be solved. Here's a crash log of one of my apps from 23\nDecember 2014 that is using 4.1.14. It's from a playmarket crash\nreport, so I don't know the steps to reproduce.\njava.lang.NullPointerException\nat\ncom.octo.android.robospice.SpiceService.addSpiceServiceListener(SpiceService.java:487)\nat\ncom.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected(SpiceManager.java:1087)\nat\nandroid.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1132)\nat\nandroid.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1149)\nat android.os.Handler.handleCallback(Handler.java:800)\nat android.os.Handler.dispatchMessage(Handler.java:100)\nat android.os.Looper.loop(Looper.java:194)\nat android.app.ActivityThread.main(ActivityThread.java:5392)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:525)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\nat dalvik.system.NativeStart.main(Native Method)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/237#issuecomment-68125993\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I encountered an issue yesterday however as I was using Jackson 2.3 from Maven. I didn't realise that Android 2.2 and older were running Java 1.5 and therefore the latest supported version for Java 1.5 is Jackson is 2.1.x.\nAny change to Jackson be aware of this issue. Changing from codehouse to fasterxml is fine as long as the above is considered.\n. linked to https://github.com/octo-online/robospice/issues/91\n. I haven't looked at that bit of code for ages but i think it simply sets a flag in the request and the request itself is expected to stop when it sees it\nGautam Jain notifications@github.com wrote:\n\nBtw, I'm using API 19 with version 1.4.10.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/251#issuecomment-32449402\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Maybe in your instance you need to try and use the RequestRunner class on it's own.\nTake a look to see if the required parameters are available to you\nOn 12 February 2014 20:39:43 GMT, PerfectCarl notifications@github.com wrote:\n\nI'm using robospice on a project that already has an async execution\ninfrastructure.\nFor the moment, I don't want to refactor all my code, but just start\nusing robospice for its nice Api and built in cache.\nSo I would need to execute the execute method synchronously. Is it\npossible ?\nCan I wait on a requestlistener ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/265\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Hi,\nUnless I'm very much  mistaken the request runner doesn't use the service itself but some dependent classes.\nThe Default Request Runner class seems to require an executor which I haven't clarified what that entails.\nIf it can't entirely suffice then maybe the request runner could be split into more methods that would then suffice.\nOn 13 February 2014 12:33:34 GMT, PerfectCarl notifications@github.com wrote:\n\nI feel like I should write a requestrunner that wouldn't use the\nservice to\nexecute the request (but still be a nice robospice citizen to enjoy the\ncaching services).\nAt the core, my use case is about using robospice as a back end for a\ndata\nadapter for a viewpager.\nMaybe you have sample of code for this.\nThat way I could scrap the async data adapter that I wrote (inspired by\ncwac) and start from your sample...\nLe 13 f\u00e9vr. 2014 09:51, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nMaybe in your instance you need to try and use the RequestRunner\nclass on\nit's own.\nTake a look to see if the required parameters are available to you\nOn 12 February 2014 20:39:43 GMT, PerfectCarl\nnotifications@github.com\nwrote:\n\nI'm using robospice on a project that already has an async execution\ninfrastructure.\nFor the moment, I don't want to refactor all my code, but just start\nusing robospice for its nice Api and built in cache.\nSo I would need to execute the execute method synchronously. Is it\npossible ?\nCan I wait on a requestlistener ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/265\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n\nReply to this email directly or view it on\nGitHubhttps://github.com/octo-online/robospice/issues/265#issuecomment-34958827\n.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/265#issuecomment-34973879\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. I believe you just need to use robospice as if you were sending a single request but change the number of threads to use. I can't remember where but I'm sure the default number of parallel requests is defaulted to 2 but can be changed in your service\n. Presumably you'd want to know that it made it out into the world?\nYou can always create a request that sends the data and returns a boolean to the request listener indicating success or failure\nOn 6 March 2014 09:57:04 GMT, Eugen Martynov notifications@github.com wrote:\n\nOur server has post request and returns 204 in case of success with\nempty body.\nUnfortunately I didn't find how to write request with empty response\n(send and forget). Is it by design or I just missed something?\nI'm using Jakson version of service.\nKind Regards,\nEugen\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/273\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Realistically your on success listener needs to pass a value back to you which is effectively returned from the load from network method of the request. Whatever you return whether it's a single Boolean.True value our anything else you can choose to ignore it. It's just required\n. I am taking here about the spice request class. The actual network message and response doesn't need to change. You can simply say that when a receive a 204 status then return a boolean true value from the load from network method\n. Unfortunately I'm not using spring so not sure about it.\nOn 9 March 2014 20:18:02 GMT+00:00, Eugen Martynov notifications@github.com wrote:\n\nI use RestTemplate postForObject and Jackson throwing exception in case\nof empty body\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/273#issuecomment-37137571\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. It's part of the retry functionality. You can disable it or change it.\nOn 8 April 2014 12:34:33 GMT+01:00, Sergey Eshin notifications@github.com wrote:\n\nhelp please!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/286#issuecomment-39837574\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Without looking at the code I vaguely remember that the spice service can override the get retry policy method, otherwise you can also set it within a spice request.\nI imagine the solution used was something similar.\nOn 8 April 2014 22:07:08 BST, Riccardo Ciovati notifications@github.com wrote:\n\nIt would be nice if you could describe it right here.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/286#issuecomment-39901945\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I do wonder if the retry policy shouldn't apply if internet has been deemed not active on the current device. Only when the request itself fails should retry policy be applied\n. I look at code not FAQ's. Normally the default options are provided in the spice service. I'd have to look at the code to confirm the retry policy can be changed in that way\nOn 9 April 2014 06:39:05 GMT+01:00, Sergey Eshin notifications@github.com wrote:\n\n@softwaremaverick How can spice service override the get retry policy\nmethod?\nin that robospice FAQ it says that RetryPolicy can be overrided by\nwithin a spice request\nhttps://github.com/stephanenicolas/robospice/wiki/Advanced-RoboSpice-Usages-and-FAQ\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/286#issuecomment-39930292\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. Just checked the code now and the only default is indeed in the request.\nAs such, currently calling setRetryPolicy with null disables retries, any other value to change it.\nI normally set to null after detecting a http error like 404 or something add retrying in these instances won't yield a better result.\nOn 10 April 2014 07:45:10 GMT+01:00, Sergey Eshin notifications@github.com wrote:\n\nIt would be amazing, if you give me little example(if it's possible).So\nI would highly optimized my architecture , if you give it example.And\nlove your lib more ,Sorry to trouble\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/286#issuecomment-40047741\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. I've added a fix which implements a decent solution for this issue\n. linked to #286 \n. Whilst this fix will terminally stop a request when the network is down is there a possible case for blips? For example if a request is in progress but then network is lost but then comes back to life, should it be able to retry again?\nAs such, should the RetryPolicy have a boolean retryOnNetworkFailure option? Or should the request go straight back to the user for further actions?\nThe flood gates are potentially opened.\n. Or maybe the number of calls to loadDataFromNetwork should be monitored so that only if the request was actively in progress should it retry, otherwise it should stop the request immediately.\n. Hi Stephen, the only issue around just the previous fix as I see it is that as the processRequest method is called both when the request is first executed AND when it's being retried. This effectively generates the issue that whilst it makes sense to not execute a request when the network is down, if the request is already running and you go into a tunnel or something and lose connection for a while, the user would assume that the request will be retried. The user at this time is likely to just have his phone in his pocket if he kicked off a long download or something.\nAn alternative approach is that when the request is being retried in handleRetry it should pass a different boolean value to the method indicating that network state shouldn't be checked.\nThe original approach simply depended on the CachedSpiceRequest always being used as-is when executing a new request.\n. Or, maybe it should throw exception indicating no network but it should then be allowed to retry.\n. In that instance I'd probably just sit down and cry :-)\nOn 17 April 2014 16:17:05 GMT+01:00, Lingviston notifications@github.com wrote:\n\nYeah, but what if there is no ability to do that (non network requests,\nor like in my case - simply no way to set the timeout).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/295#issuecomment-40725562\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. I wouldn't want to see this either as if i remember rightly the spice service listener now supports detecting when all requests are finished anyway doesn't it? \nThen implement something from that maybe \nOn 3 September 2014 17:44:29 BST, Muhammad Alfaifi notifications@github.com wrote:\n\nI think this is very much needed,\nmainly when you want to show a progress dialog for multiple requests,\nyou need to remove the progress once all requests are finished, it\nwould be nice if I could just do one method call in SpiceManager,\nfor example\nspiceManager.isQueueEmpty()\nI know you tagged this as wontfix! but I think it is a must :)\na workaround for this would be to use a countdown latch, but i dont\nlike that way :(\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/308#issuecomment-54326775\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I'll need to look at the code to see what the state is at the moment. \nOne thing i did want to add at one point which may have been useful to you is the ability to add additional custom commands in the spice manager and spice service. \nI believe last time i looked there was a private method that needed to be made protected for this to work. \nOn 4 September 2014 05:19:04 BST, Muhammad Alfaifi notifications@github.com wrote:\n\n@softwaremaverick I'm not sure it does, can you elaborate please ?\nIf you are talking about spiceManager.getPendingRequestCount() see here\nas this approuch doesn't work. see here Stack\nOverflow\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/308#issuecomment-54404919\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Hi, the method I was originally thinking about appears to already be protected.\nprotected <T> Future<T> executeCommand(SpiceManagerCommand<T> spiceManagerCommand);\nLooking at the git history it seems like I merged in the changes with request observers.\ncommit 7180210376bb0f9fd689a2acba7068479e5b291b\nAuthor: Andrew Clark Andrew.Clark@bjss.com 2013-07-22 13:51:52\nCommitter: Ste\u0301phane Nicolas steff.nicolas@gmail.com 2013-09-01 10:02:23\nParent: 32b2d38e730fde22f616acc0b00fc447705995b3 (Merge of https://github.com/octo-online/robospice/pull/185)\nChild: fc4019bde6066251ffb83a6b77e78c0628f2b793 (Formatting)\nBranches: addsynchronization, master, nonetwork-noretry, nonetwork-retryifblip, origin/addsynchronization, origin/master, origin/nonetwork-noretry, origin/nonetwork-retryifblip, upstream/1.4.14, upstream/PR259, upstream/fast-test, upstream/master, upstream/release, upstream/scroll-listener\nImplement Request Observers and Request Tracker\n. As such, if anyone wanted to write a custom command that was fired off from the SpiceManager to the SpiceService they could simply extend SpiceManager, add their command as a method and make it call executeCommand.\nFurther investigation reveals the\nprotected RequestProcessorListener createRequestProcessorListener() {        return new SelfStopperRequestProcessorListener();\n`    }\nwhere the SelfStopperRequestProcessorListener implements RequestProcessorListener\nwhich itself added allRequestComplete by yours truly.\nAs such, overriding createRequestProcessorListener with a custom implementation which still calls the SelfStopperRequestProcessorListener might be a workable solution.\nThe more things that are override-able the better in my opinion and there seems to be a fair few sockets to plug your code into right now which I like.\n. Another option which I used previously and may or may not be useful for you is to implement your own version of RequestListenerNotifier which potentially sends more information to the listeners like request details if you were needing enhanced progress updates.\n. Actually checking git history I added the requestsInProgress() in RequestProcessorListener not allRequestComplete \n. As an exercise I recommend you look at doing the changes as cleanly as possible as it should be relatively straight forward (ish). \nAs a clue look at the addRequest method of RequestProcessor \nOn 8 September 2014 15:28:29 BST, Radu Muresan notifications@github.com wrote:\n\nHow about this:\njava\npublic interface PendingRequestListener<RESULT> extends\nRequestListener<RESULT> {        \n   void onRequestNotFound();\n   void onRequestFound(Request request);\n}\nHaving the request as a parameter would allow easily making the\nonSuccess/onFailure dependent on the inner state of the request - for\nexample (not the greatest example, but bear with me), you have \nLoginRequest with a username field:\njava\nLoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\nand later, after rotation, trying to reconnect (while no longer having\naccess to the original request or its listener (see how knowing what\nrequest this connected to allows the success and failure callbacks to\ndo what they need to do - as opposed to what's happening right now,\nwhich would force storing this extra state somewhere else rather than\nthe request):\njava\n       PendingRequestListener listener = new PendingRequestListener(){\n           void onRequestNotFound(){}//do nothing\n           void onRequestFound(Request request){\n               this.foundLoginRequest = request;\n           }\n           void onRequestSuccess(){\n               alert(\"Logged in as:\"+foundLoginRequest.getUserName());\n           }\n           void onRequestFailure(){\n               //etc\n           }\n       }\n   }\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/335#issuecomment-54826816\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Could i suggest that it should be onListenerAttached instead of request found. \nThis way it sounds more typical of similar concepts. . \n. We're waiting for you to implement the change! :-) \nOn 7 October 2014 04:47:09 BST, fikr4n notifications@github.com wrote:\n\nSo, how is the development of this issue right now? Will it be added,\nor is there any better way to know if there is a request which has been\nexecuted?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/335#issuecomment-58132849\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yes but part of Android scheduling nothing to do with robospice. \nOn 6 October 2014 18:08:31 BST, alexandru-pinzaru notifications@github.com wrote:\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/368\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. This sounds like an issue with your code whereby it's trying to read the response header when maybe the request failed. \nEOF exception is saying that you've reached the end of file when trying to read the response headers. \nWithout knowing what the actual response was it's difficult to say but I'm guessing it's either a non HTTP response or not correctly formatted http, or no response at all. \nOn 13 October 2014 03:18:50 BST, openproject notifications@github.com wrote:\n\nDoes anyone encountered this problem too?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/372#issuecomment-58836491\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yes it supports it as I've done this. You can also create your own progress notifications whilst it's downloaded and these can be updated in the same background thread that is doing the downloading.\nAs for example's I'm not sure but using the existing examples to get you started is pretty much most of what you need\nOn 21 November 2014 21:44:47 GMT+00:00, theDazzler notifications@github.com wrote:\n\nMy app currently downloads files from the web, but I need to be able to\ncontinue downloading files when the user switches activities. Can\nrobospice do this and is there an example for how to download a file? \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/381\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Quick review seems OK except there's a null check before an instanceof check which effectively makes the null check not required.\nHowever, I'll check out the bits that call it when I get home.\nOn 25 November 2014 17:46:20 GMT+00:00, mignick notifications@github.com wrote:\n\nHi!\nIn our project we need an ability to attach to a pending request after\ndevice configuration changed. For example, a user wants to cancel a\nlong running request or it's necessary to show a dialog to a user if\nthere is a pending request still.\nI saw the discussion about this in #335 but no activity on the feature.\nI'm not very experienced in android development, so please be patient\nabout my PR :) If I did it wrong, please advice how to improve it.\nThanks,\nNick\nYou can merge this Pull Request by running:\ngit pull https://github.com/mignick/robospice onRequestAttached\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/stephanenicolas/robospice/pull/383\n-- Commit Summary --\n- added PendingRequestListener::onRequestAttached\n-- File Changes --\nM\nrobospice-core-parent/robospice-core-test/src/main/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java\n(13)\nM\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/listener/PendingRequestListener.java\n(4)\nM\nrobospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java\n(35)\n-- Patch Links --\nhttps://github.com/stephanenicolas/robospice/pull/383.patch\nhttps://github.com/stephanenicolas/robospice/pull/383.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/pull/383\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Looking through the rest of the code your changes seem to be aligned \nwith the existing code in that region so it's good with me.\nWhilst the change means an API change on PendingRequestListener which \nwould result in compilation errors when users use the new version, I \npersonally welcome that error. Users wishing to utilise the new feature \nwill then atleast be notified of it's existence.\nAs for the null check on instanceof's I can see other instances of them \nin the DefaultRequestListenerNotifier class. I personally would welcome \nyou to remove the combination of null check and instanceof as the \ninstanceof returns false on a null object.\nEg.\nif (listener != null && listener instanceof PendingRequestListener) {\ncould be\nif (listener instanceof PendingRequestListener) {\nOn a wider discussion I question the requirement for a null check on \nlisteners in a collection., ie. if (listener != null)...\nIs there at any point where a null listener would be added? If one is \nadded I would welcome a NPE indicating such an error.\nThat would be as mentioned part of a wider discussion.\nOtherwise thanks for the changes I'm sure many users would look forward \nto utilising it.\nAndrew\nOn 25/11/2014 18:37, Andrew Clark wrote:\n\nQuick review seems OK except there's a null check before an instanceof \ncheck which effectively makes the null check not required.\nHowever, I'll check out the bits that call it when I get home.\nOn 25 November 2014 17:46:20 GMT+00:00, mignick \nnotifications@github.com wrote:\n```\nHi!\nIn our project we need an ability to attach to a pending request\nafter device configuration changed. For example, a user wants to\ncancel a long running request or it's necessary to show a dialog\nto a user if there is a pending request still.\nI saw the discussion about this in #335\nhttps://github.com/stephanenicolas/robospice/issues/335 but no\nactivity on the feature. I'm not very experienced in android\ndevelopment, so please be patient about my PR :) If I did it\nwrong, please advice how to improve it.\nThanks,\nNick\n\n    You can merge this Pull Request by running\n\ngit pull https://github.com/mignick/robospice onRequestAttached\nOr view, comment on, or merge it at:\nhttps://github.com/stephanenicolas/robospice/pull/383\n    Commit Summary\n\n\n\nadded PendingRequestListener::onRequestAttached\nFile Changes\n\n\n\nM\n    robospice-core-parent/robospice-core-test/src/main/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java\n    https://github.com/stephanenicolas/robospice/pull/383/files#diff-0\n    (13)\n\nM\n    robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/listener/PendingRequestListener.java\n    https://github.com/stephanenicolas/robospice/pull/383/files#diff-1\n    (4)\n\nM\n    robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java\n    https://github.com/stephanenicolas/robospice/pull/383/files#diff-2\n    (35)\nPatch Links:\n\n\n\nhttps://github.com/stephanenicolas/robospice/pull/383.patch\n\nhttps://github.com/stephanenicolas/robospice/pull/383.diff\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/pull/383.\n```\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yes that's correct. Maybe Stephan will know of a scenario why it was added. If it's for safety reasons then I'd prefer the code that adds listeners to prevent nulls from being added to the list.\n\nOn 26 November 2014 09:16:19 GMT+00:00, mignick notifications@github.com wrote:\n\nThank you @softwaremaverick for the review. If it would necessary to\nremove the null check, I could do it for all cases.\nAs I understand now we are waiting for @stephanenicolas's PR review and\ncomments about null check?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/pull/383#issuecomment-64534636\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. @mignick I was just glancing through these changes again as I noticed they've not yet been merged in for some reason.\nHowever, looking at PendingRequestListenerWithProgressStub I noticed that the request itself is being stored in the listener which I don't know why it should be.\nI'm not actually sure what PendingRequestListenerWithProgressStub is used for but I'd have imagine the onRequestAttached would work like onRequestNotFound and just be used as an indicator to show it's actually active.\nIs there any reason why the request itself should be passed to the listener?\nThis kind of sounds problematic if potentially the request itself started to know about all the listeners and the listener wanted to hold onto the request which I don't think it does right now but would cause a memory leak if it became the case.\n. If it's a post or something with no response I usually return a Boolean true from it which is then passed to the request listeners\nOn 4 December 2014 11:44:17 GMT+00:00, Damian Mazurkiewicz notifications@github.com wrote:\n\nRequestListener returns NULL with execute() and getFromCache() even\nwhen object returned is NULL which makes application crash when if\nstatement for null check is not there, is it considered as a bug or a\nfeature that request was indeed a success (even if the object was\nnull)?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/386\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Whatever works for you best. All that matters is the load data from network needs to do whatever it is intended to do, as in,  Call the remote  server and get our post whatever is required and return a result. \nHow the code is organised depends on how readable and maintainable it is in whichever form you deem appropriate. \nOn 25 December 2014 19:11:54 GMT+00:00, Deep21 notifications@github.com wrote:\n\nHello nkeskinov,\nThank to move this to the right place.\nHmm as i understand, I have to create new request class for each\ndifferent method ?\nFor example for the post and edit functions I have to create 2\nRequestClass wich each one implement addCategory and editSubCategory ?\nOr is it more simple to create a single Request class and choose the\nright method when I intanciate the class ?\npublic class CategoryRequest extends RetrofitSpiceRequest{\n  int id;\n      String method;\npublic CategoryRequest(String method) {\n      super(Model.class, WSCategory.class);\n      this.id = id;\n  }\n@Override\n  public Model loadDataFromNetwork() throws Exception {\n      switch (method) {\n      case \"POST\":\n          break;\n```\n  case \"GET\":   \n      break;\ndefault:\n      break;\n  }\n  return getService().getSubCategoriesById(id);\n```\n}\npublic String createCacheKey() {\n      return \"key\";\n  }\n}\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/392#issuecomment-68110855\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. That would be easy enough to do and I doubt anyone would complain. Although you should probably make it protected as opposed to public since you'll only use it in your own spice service.\nOn 17 February 2015 19:50:26 GMT+00:00, Igor Zubenko notifications@github.com wrote:\n\nHi, I need to replace DefaultRequestRunner to own. But as I see\nSpiceService.createRequestRunner() now is private method.\nIs it possible to make it protected?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/406\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Just realised you said protected already so never mind :-)\nJust submit a commit with your changes and someone will be right with you!\nOn 17 February 2015 20:12:48 GMT+00:00, Andrew Clark andrew@dync.co.uk wrote:\n\nThat would be easy enough to do and I doubt anyone would complain.\nAlthough you should probably make it protected as opposed to public\nsince you'll only use it in your own spice service.\nOn 17 February 2015 19:50:26 GMT+00:00, Igor Zubenko\nnotifications@github.com wrote:\n\nHi, I need to replace DefaultRequestRunner to own. But as I see\nSpiceService.createRequestRunner() now is private method.\nIs it possible to make it protected?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/406\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I'm just pleased to see the modular approach to robospice is seeing a lot more usages.\nOn 17 February 2015 20:14:33 GMT+00:00, Andrew Clark andrew@dync.co.uk wrote:\n\nJust realised you said protected already so never mind :-)\nJust submit a commit with your changes and someone will be right with\nyou!\nOn 17 February 2015 20:12:48 GMT+00:00, Andrew Clark\nandrew@dync.co.uk wrote:\n\nThat would be easy enough to do and I doubt anyone would complain.\nAlthough you should probably make it protected as opposed to public\nsince you'll only use it in your own spice service.\nOn 17 February 2015 19:50:26 GMT+00:00, Igor Zubenko\nnotifications@github.com wrote:\n\nHi, I need to replace DefaultRequestRunner to own. But as I see\nSpiceService.createRequestRunner() now is private method.\nIs it possible to make it protected?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/406\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. My first time was a learning curve too.\nCheck out GitHub starter guide for details.\nIt's well worth it!\nOn 17 February 2015 20:30:42 GMT+00:00, Igor Zubenko notifications@github.com wrote:\n\nThanks for your answer.\nI will try to create pull request. But I never do it before. :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/406#issuecomment-74746832\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Best way is to create a new branch from master. \nThen submit that for pull request.  That way you can make more branches from master with different pull requests\nOn 17 February 2015 20:41:32 GMT+00:00, Igor Zubenko notifications@github.com wrote:\n\nYep, I'm already understood how to do it. But I have one more question.\nIn what branch I can commit?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/406#issuecomment-74748877\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I'm hoping that this is all I needed to do. But the one line commit seemed indeed fine and I'm hoping that clicking that button merged it into the correct branch. \nThis commit along with some others are very old though but I've finally got round to logging in to take a punt at some. Only however because my password got hacked so came back to Github in the hope little damage had been done.\nAnyway, thanks @orwir for the commit. It definitely is a worthwhile one.\n. I believe there's been a recent change to make setRequestRunner to be a protected method. As such you may be able to add a custom request runner which for network requests you call the default request runner bit for non network you can do something else \nOn 27 February 2015 07:42:17 GMT+00:00, Yannick Lemin notifications@github.com wrote:\n\nHello,\nHere is my issue: we have just robospiced our whole app. However we do\nhave some requests that must run in the background but that do not\nparticularly require the network. The issue is that if we have no\nconnectivity, those \"don't require network\" get a NoNetworkException.\nOur current, short term, solution (which I don't like) is that we have\n2 spice managers bound to 2 different services, and we execute the\nrequest on the proper one based on the request's requirements.\nIs there a better solution than this ?\nCould we maybe have a \"doInBackground\" method in the request on top of\nthe \"loadDataFromNetwork\" one ? \nAnyone has a better solution ?\nThanks a bunch in advance.\nYannick\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. In fact maybe request runner could do with refactoring into a Base class which would allow the network checkers to be done only in the default request runner from within a generic check pre conditions method \nOn 27 February 2015 08:24:41 GMT+00:00, Andrew Clark Andrew@dync.co.uk wrote:\n\nI believe there's been a recent change to make setRequestRunner to be a\nprotected method. As such you may be able to add a custom request\nrunner which for network requests you call the default request runner\nbit for non network you can do something else \nOn 27 February 2015 07:42:17 GMT+00:00, Yannick Lemin\nnotifications@github.com wrote:\n\nHello,\nHere is my issue: we have just robospiced our whole app. However we do\nhave some requests that must run in the background but that do not\nparticularly require the network. The issue is that if we have no\nconnectivity, those \"don't require network\" get a NoNetworkException.\nOur current, short term, solution (which I don't like) is that we have\n2 spice managers bound to 2 different services, and we execute the\nrequest on the proper one based on the request's requirements.\nIs there a better solution than this ?\nCould we maybe have a \"doInBackground\" method in the request on top of\nthe \"loadDataFromNetwork\" one ? \nAnyone has a better solution ?\nThanks a bunch in advance.\nYannick\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. But all you need to do is modify a request runner to say if the request instanceof nonetwirkrequest then do non network request runner call. \nOr you modify the request runner to let the request handle network checking. \nEither way a service is responsible for handling your request therefore it needs to do something different now but not something that should be forced on all unnecessarily. \nOn 27 February 2015 08:58:21 GMT+00:00, Yannick Lemin notifications@github.com wrote:\n\nBut that's still at the service level, I would need something like that\nbut at request level ...\nOr maybe have some accessor to the service from the spice manager to be\nable to change something in there but it's a bad idea in my opinion.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-76358521\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. There's a pending pull request\nhttps://github.com/stephanenicolas/robospice/pull/407 which makes it protected.\nHowever, you could go for the previously suggested approach of overriding\ncreateRequestProcessor with a new request runner.\n\nOn 27 February 2015 at 09:15 Yannick Lemin notifications@github.com wrote:\ncreateRequestRunner is currently private though ...\n\u2014\n Reply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-76360504\n.\n. It's pending a merge request I believe. I'm more then willing to manage pull requests to get some quick fixes in. But I need the permissions.\n\nOn 14 July 2015 15:45:53 BST, \"pop.fu\" notifications@github.com wrote:\n\nHas custom request runner not supported yet?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-121259462\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yes please. I also agree that it is quite complete and only minor enhancements would be required for further flexibility.\nOn 29 July 2015 18:46:51 BST, \"St\u00e9phane Nicolas\" notifications@github.com wrote:\n\nSorry guys,\nit's not that the lib is not maintained is that it is quite complete\nand\nhonnestly, yes time has been missing.\nWho wants to be added to the RS maintainers ?\nS.\n2015-07-26 22:21 GMT-07:00 Lev Shock notifications@github.com:\n\nIt seems that this library is not maintained anymore..\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-125089281\n.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126032811\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Thanks! :-)\nOn 29 July 2015 22:06:26 BST, \"St\u00e9phane Nicolas\" notifications@github.com wrote:\n\n@softwaremaverick, you've been added. ;)\n2015-07-29 11:40 GMT-07:00 softwaremaverick notifications@github.com:\n\nYes please. I also agree that it is quite complete and only minor\nenhancements would be required for further flexibility.\nOn 29 July 2015 18:46:51 BST, \"St\u00e9phane Nicolas\"\nnotifications@github.com\nwrote:\n\nSorry guys,\nit's not that the lib is not maintained is that it is quite complete\nand\nhonnestly, yes time has been missing.\nWho wants to be added to the RS maintainers ?\nS.\n2015-07-26 22:21 GMT-07:00 Lev Shock notifications@github.com:\n\nIt seems that this library is not maintained anymore..\n\u2014\nReply to this email directly or view it on GitHub\n<\n\n\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-125089281\n\n\n.\n\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126032811\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126054044\n.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/409#issuecomment-126095664\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yeah check out UncachedSpiceService if its still named that. \nIt contains a different cache manager. \nAndrew \nOn 5 March 2015 09:37:01 GMT+00:00, SjoerdvGestel notifications@github.com wrote:\n\nWhen executing an request without setting a cache name & duration, it\ncrashes in some occations. \njava.lang.NullPointerException: Attempt to invoke virtual method\n'java.lang.Object\ncom.octo.android.robospice.request.CachedSpiceRequest.getRequestCacheKey()'\non a null object reference\nat\ncom.octo.android.robospice.request.DefaultRequestRunner.processRequest(DefaultRequestRunner.java:163)\nat\ncom.octo.android.robospice.request.DefaultRequestRunner$1.run(DefaultRequestRunner.java:221)\nat\njava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)\n      at java.util.concurrent.FutureTask.run(FutureTask.java:237)\nat\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1120)\nat\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n      at java.lang.Thread.run(Thread.java:820)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/410\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. That'll  be the one! :-) \nOn 17 March 2015 11:21:07 GMT+00:00, SjoerdvGestel notifications@github.com wrote:\n\nHey! Thanks for your reply... \nThe SpiceService im using in this case is extending the\nUncachedSpiceService wich has the following CacheManager:\nreturn new CacheManager() {\n           @Override\npublic  T saveDataToCacheAndReturnData(T data, Object cacheKey)\nthrows CacheSavingException, CacheCreationException {\nreturn data;\n       }\n   };\nis that still correct or is there a newer version available that fixes\nthe issue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/410#issuecomment-82288678\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Are you running it in Spring? Could it be an autowire type issue if so? \nOn 12 May 2015 17:17:07 BST, dilloncc notifications@github.com wrote:\n\nIm seeing the same issue whenever I run in debug mode\n05-12 12:14:09.528\n769-852/com.mindgrub.witopia_securemyemail_android E/AndroidRuntime\ufe55\nFATAL EXCEPTION: SpiceManagerThread 1\n   Process: com.mindgrub.witopia_securemyemail_android, PID: 769\njava.lang.NullPointerException: Attempt to invoke direct method 'void\ncom.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)'\non a null object reference\n at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n           at java.lang.Thread.run(Thread.java:820)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/414#issuecomment-101336069\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Well,  you'd have to decide how you want to do it, how often to keep retrying, what interval to do it at etc etc. \nPersonally I think the \"keep trying until it's done\" statement doesn't exist anywhere in reality as there must be some point when you realise it won't happen. \nEither way, robospice will send it and tell you whether it works or not, you have to do the rest. \nOn 20 May 2015 11:26:13 BST, Hosein Hamedi notifications@github.com wrote:\n\nI need it to retry the same request until it's done !\nCache it if exits the program\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/417#issuecomment-103836781\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yeah I don't mind doing it where I can. I'm trying to get back into doing Android development but haven't done it in a while.\nThere's definitely a few minor changes but which have a decent enough impact to be merged in.\nI'll definitely be stringent on what goes in and what doesn't though ;-)\nOn 30 June 2015 15:16:00 BST, dcgavril notifications@github.com wrote:\n\nHello,\nFrom what I can see there aren't any releases in a while now, can\nanyone tell me if we'll get any new release in the near future? (there\nare a lot of pull requests and issues reported, but as it seems, there\nisn't someone to approve them or to fix them)\nAnyway, thanks for the hard work!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/426\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. This could be related to the hack done to not require an icon when it runs in the background.  Try setting an application icon for the notification and see if that works \nOn 29 July 2015 08:24:16 GMT+01:00, Kenneth Gibson notifications@github.com wrote:\n\nWhen running my tests occasionally I get this exception:\nFATAL EXCEPTION: main\n   Process: com.moroku.clientlibrary.test, PID: 5877\nandroid.app.RemoteServiceException: Bad notification for\nstartForeground: java.lang.RuntimeException: icon must be non-zero\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1466)\n           at android.os.Handler.dispatchMessage(Handler.java:102)\n           at android.os.Looper.loop(Looper.java:135)\n          at android.app.ActivityThread.main(ActivityThread.java:5254)\n           at java.lang.reflect.Method.invoke(Native Method)\n           at java.lang.reflect.Method.invoke(Method.java:372)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\nI think the issue is coming from Robospice but it only seems to happen\nabout 1 in every 5/6 times. I'm running on a Nexus 5 which is running\nAndroid 5.1.1. \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/430\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Yeah I'll pop into the code at some point to see what commits can be merged. I just don't need anything additional from it right now.\nOn 4 May 2016 14:35:01 BST, Tony notifications@github.com wrote:\n\nWhat difference does the date of a last commit make?\nThe library is doing its functions flawlessly. I don't think that\nandroid.os.Service implementation will change any time soon. So RS\npossibly will be useful for years to come without any commits.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/456#issuecomment-216866582\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Personally I'd create a custom request which connects through the Apache http client and saves the result somewhere.\nOn 6 May 2017 00:49:36 BST, Julio Lemus notifications@github.com wrote:\n\nHello,\nI am looking for a way to download a file from server, I see two\noptions, one of them is to use: BinaryRequest but it works only if\nyou pass the total path of the file, for example:\n\"https://www.ietf.org/rfc/rfc2616.txt\", and I need to send parameters\nto the server in this way: \napi/SomeServiceTranslationFile?Language=en\", in that request I send\nthe parameter \"en\" and RS responds with a \nJava.io.FileNotFoundException: .\nThe other way is to make use of  RetrofitSpiceRequest <InputStream,\nMyInterface> , here if I send my parameters like any other request,\nhowever, the response is treated to be parsed by GSON\nAn exception occurred during request network execution :Failed to\ninvoke public java.io.InputStream() with no args\nretrofit.RetrofitError: Failed to invoke public java.io.InputStream()\nwith no args\nHave any suggestions?\n-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/stephanenicolas/robospice/issues/468\n\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity.. ",
    "sayah-y": "Hello,\nI'm using 1.4.12. I do the network call many times and I'm getting:\nE/AndroidRuntime(4234): java.util.ConcurrentModificationException\nE/AndroidRuntime(4234): at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\nE/AndroidRuntime(4234): at java.util.HashMap$KeyIterator.next(HashMap.java:833)\nE/AndroidRuntime(4234): at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nThanks\n. ",
    "escarti": "I'm having the same issue as sayah-y. 1.4.13 is not on maven.\nWill it be available there at some point?\nThnx.\n. Hi Stephane,\nthanks for the info, I managed to use the 1.4.13-SNAPSHOT but there are serveral things:\n1. On the wiki for using snapshots you write:\n   Add this configuration to your build.gradle file, in the dependencies ( <- I think this should be repositories ) block:\n   maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n2. The error still occurs:\n   Process: net.appbounty.android, PID: 27894\n   java.util.ConcurrentModificationException\n           at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n           at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n           at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nLooking at the code  \nsynchronized (listeners) {\n                for (final RequestListener<?> listener : listeners) {\n                    if (listener != null) {\nMy guess is that you are synchronizing the Set> listeners but not the RequestListener<?> inside it. I think adding \nsynchronized (listeners) {\n                for (final RequestListener<?> listener : listeners) {\n                     synchrnoized(litener) {\n                          if (listener != null) {\nwill solve the problem, but I might be wrong and I didn't have the chance to test it.\nHope to be of some help.\nThanks for the amazing work!\nCheers,\nEdu.\n. Of course I upgraded. \nI used:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.12'\nCheers,\nEdu.\n. Hi St\u00e9phane,\nI also updated the spring module as you suggested:\ncompile 'com.octo.android.robospice:robospice:1.4.13-SNAPSHOT'\ncompile 'com.octo.android.robospice:robospice-spring-android:1.4.13-SNAPSHOT'\nbut sadly still:\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n        at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n        at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nI haven't found a way to reproduce the error consistently. It sometimes happens ans sometimes doesn't.\nEdu.\n. Hi St\u00e9phane,\nI did a project clean and a gradle sync so I assume that the 1.4.13-snapshot is the new one.\nWith an exception breakpoint I saw that the listeners collection has just one item and that item is created in here:\nspiceManager.execute(postOfferClick, \"offer_click\", DurationInMillis.ALWAYS_EXPIRED, new PostOfferClickRequestListener());\nThe full stack trace is:\n07-08 12:46:12.448  22861-22861/net.appbounty.android E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: net.appbounty.android, PID: 22861\n    java.util.ConcurrentModificationException\n            at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n            at java.util.HashMap$KeyIterator.next(HashMap.java:833)\n            at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:136)\n            at android.app.ActivityThread.main(ActivityThread.java:5001)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:515)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\n            at dalvik.system.NativeStart.main(Native Method)\n. Hi St\u00e9phane,\nafter:\n- app deletion\n- project clean\n- gradle resynch\n- usage of the latest 1.4.13-snapshot from yesterday \nI haven't experience the crash for quite some time. Sadly I cannot guarantee that it's not there since I cannot reproduce it, but so far so good.\nI tried to reproduce the error on debug mode for 45 minutes and didn't happen. \nThanks a lot for your support and if I experience it again I will send you the thread causing the issue and as much info as I possibly can.\nCheers,\nEdu.\n. Yes, my guess is that it needed a clean and after that it used the second version of the snapshot.\nSo to sum up: Your latest 1.4.13-snapshot seems to be the cure :)\nThanx! This bug was causing me a lot of headaches!\n. Hi St\u00e9phane,\nI'm sorry to bring bad news again, but the bug re-appeared. I gathered some new info that might help.\nThe error apparently appears when I do 2 times the same API call from different locations.\nI call my API call from a background service and from a fragment. \nThe exact point where the exception is thrown is \nHashMapEntry nextEntry() {\n            if (modCount != expectedModCount)\n                throw new ConcurrentModificationException();\nthe expectedModCount is 2 whereas the modCount is 3\nI will send you the full Thread export and a screenshot of the variables.\nHopefully it will help.\nCheers,\nEdu.\n. I implemented a workaround and now I have a \"lock\" and manually synchronize the api calls to ensure that only one either the service or the fragment are using robospice.\nSo far so good.\nIf you need more info let me know.\n. Since I now know what is causing it I managed to reproduce it pretty consistently.\nI got the service performing a GET Api call every second and I can force the fragment to do an api call on click. In this way I manage to get the crash pretty consistently.\nHow should we proceed? Skype and screen share? \n. ",
    "nugmanovagulnaz": "I have BroadcastReceiver. I'm calling start of spiceManager in onReceive method:\npublic void onReceive(Context context, Intent intent) {\nspiceManager.start(context);\n...\n}\nWhen should i call the shouldStop method? There are no onStop() method in  BroadcastReceiver.\n. Well, i created IntentService that handles my broadcastReceivers result.\nBut there is no onStop() in IntentService too. Where should i call spiceManager.shouldStop() in IntentService?\nI'm sorry for bothering you\n. When i get data from network i want to send another broadcast with this data and it's all.\n. What do you mean under a full service? android.app.Service? Service hasn't got onStop() too\n. ",
    "Alansc": "Hi All,\nAny news about  the issue #91? I'm using the version 1.4.13 and it still has the problem:\nE/AndroidRuntime(9608): FATAL EXCEPTION: main\nE/AndroidRuntime(9608): java.util.ConcurrentModificationException\nE/AndroidRuntime(9608):     at java.util.HashMap$HashIterator.nextEntry(HashMap.java:792)\nE/AndroidRuntime(9608):     at java.util.HashMap$KeyIterator.next(HashMap.java:819)\nE/AndroidRuntime(9608):     at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:168)\nE/AndroidRuntime(9608):     at android.os.Handler.handleCallback(Handler.java:725)\nE/AndroidRuntime(9608):     at android.os.Handler.dispatchMessage(Handler.java:92)\nE/AndroidRuntime(9608):     at android.os.Looper.loop(Looper.java:137)\nCould you someone help me? Any patch to fix it?\nMany thanks,\nAlan\n. ",
    "hetii": "Your welcome :)\nBut still its a bit broken.\nCurrently you define there the SpiceManager and JSON_CACHE_KEY as a privet, \nit means that they will not be visible for refreshTweets() in final activity.\nAlso for beginners like I, will be nice to have there some link to article,\nwhere they could see how to build own POJOs classes that fit into theirs json structure.\nRegards.\n. Yes, defined it as protected are fine.\nAbout link I means some good article/wiki where users could read what is a POJOs class and how to create it.\nAs far i try implement more REST methods i found:\nhttp://static.springsource.org/spring-android/docs/1.0.x/reference/html/rest-template.html\nWe can see there that we can use for eg. postForObject, but beginner like I can try call that in main UI threads\nand this will raise android.os.NetworkOnMainThreadException.\nI`m not sure if it exist already, but could be great to have implementation that will show how to use all REST methods.\nRegards.\n. The point is that i want to have one place for all REST action.\nI update the code, you can tell me if it make sense.\nRegards.\n. ",
    "Mathieu-Castets": "Thanks for the quick reply. \nUnfortunately adding the isStarted() condition didn't resolve the issue.\nIn addition, I am not using the support library but only android.app.Fragment as I run my app only on > 4.0 devices.\nHere is a simple test case :\n- Launching app, a new activity is created and a fragment is attached. SpiceManager is started:\n\n- Orientation changed. I do believe something weird is happening here: look at the exception. And why do I have two \"Bound to service : UbiSpiceService\"?\n\n- Back button is hit, leaving the app. The exception SpiceManager : Could not unbind from service is raised.\n\nI hope it helps.\n. Hello Stephane,\nFirst of all, I would like to apologize for the late answer but I was a bit away from work :-)\nFinally, I found where does this issue come from... And I am quite embarrassed because the problem was totally related to my fragments lifecycle and not to RS.\nIndeed, on orientation change I misunderstood how Android worked and I was recreating my fragments whereas Android was already taking care of it. That's explained why everything was duplicated...\nSo, thanks for shedding some light on my issue and I feel deeply sorry for the inconvenience this has caused you.\n. Finally, I'm back again because with a proper implementation of fragments, I still hit the bug and I can happily say that adding:\n@Override\npublic void onStop() {\n    if( spiceManager.isStarted() ) {\n       spiceManager.shouldStop();\n    }\n}\nIs the perfect solution :-)\nSo now I'm feeling less stupid compared to my previous post.\n. There are three sub classes, listed here http://octo-online.github.io/robospice/site/latest/apidocs/com/octo/android/robospice/exception/package-summary.html, that extends SpiceException.\nSo you could easily do something like this:\n``` @Override\n        public void onRequestFailure(SpiceException spiceException) {\n        loadingView.setVisibility(View.GONE);\n        Log.e(TAG, \"SpiceException : \" + spiceException.toString());\n\n        // User not connected\n        if (spiceException instanceof NoNetworkException) {\n            // Display not connected view\n\n        }\n        // Server unavailable\n        else if (spiceException instanceof NetworkException) {\n            // Display server unreachable view\n\n        }\n\n    }\n\n```\n. What's the point to specify a cacheExpiryDuration in the isDataInCache method?\nMoreover, you should update the @return comment: @return the data has it has been saved by an ObjectPersister in cache. to something like @return true if the data has been found in cache\n. In addition, there are some issues with getDateOfDataInCache \n- If there's no such cache key or after using removeDataFromCache(clazz, cacheKey), getDateOfDataInCache(clazz, cacheKey).get() returns Thu Jan 01 01:00:00 UTC+01:00 1970 instead of the expected null.\n- And also something very weird... After locking my phone screen and unlocking it, (going through the onStop() and onStart() process) I got a NullPointerException on running getDateOfDataInCache(clazz, cacheKey)\n  Please take note that's happened prior to calling get()\n. Hi, I would like to but how can I build RS from the source? Any guide over there?\n. Hi guys, I haven't got time yet to test the first bullet point but I have further information about the second one:\n\nAnd also something very weird... After locking my phone screen and unlocking it, (going through the onStop() and onStart() process) I got a NullPointerException on running getDateOfDataInCache(clazz, cacheKey)\nPlease take note that's happened prior to calling get()\n\nThis error also happens with Future<List<Object>> getAllCacheKeys(Class<T> clazz) (and maybe with every SpiceManager method?)\nMy test case:\nI have a listview inside a fragment and a refresh button. When i click on the refresh button I want to load data over the network so I clear cache and call execute \nGetListSkillsRequest request = new GetListSkillsRequest();\nString cacheKey = request.createCacheKey();\ngetSpiceManager().removeDataFromCache(ListSkills.class, cacheKey);  \ngetSpiceManager().execute(request, cacheKey, CACHE_EXPIRATION, new GetListSkillsRequestListener())\nThis working fine except when I open a skill (details view) and come back to my list (only onStart() and onResume() are called). Now, if I click to the refresh button, removeDataFromCache seems not to work.\nI can't figure out why (same reason?) so I decided to surround removeDataFromCache by \nList<Object> l = getSpiceManager().getAllCacheKeys(ListSkills.class).get();\nLog.d(TAG, \"Nb of cache keys = \" + l.size());\nBoum. \nThis working fine except when I open a skill (details view) and come back to my list (only onStart() and onResume() are called). If I click to the refresh button, Future<List<Object>> getSpiceManager().getAllCacheKeys(ListSkills.class) throws NullPointException\n. When coming back from my details view (or locking screen for instance) and hitting the refresh button, as I said before, the removeDataFromCache doesn't work.\nI looked at the logs and the only difference I saw was the binding step. This doesn't appear...\n07-10 14:13:24.895: D//SpiceManager.java:1110(23854): 14:13:24.899 Thread-5230 Waiting for service to be bound.\n07-10 14:13:24.895: D//SpiceManager.java:1117(23854): 14:13:24.900 Thread-5230 Bound ok.\n. > If there's no such cache key or after using removeDataFromCache(clazz, cacheKey), getDateOfDataInCache(clazz, > cacheKey).get() returns Thu Jan 01 01:00:00 UTC+01:00 1970 instead of the expected null.\nstephanenicolas commented\n\nBobby-Jackson We need some feedback from you\n\nThis issue has been resolved with 1.4.6-SNAPSHOT\nThank you.\n. I'm sorry for not being very clear.\nI had two issues (two bullet points in the first message). The first one is solved with 1.4.6-SNAPSHOT but the second is pending (you can get more information in my following messages). \nI can open a new issue for the second issue if you want to.\n. I have also this problem with:\n- removeDataFromCache \n- getAllCacheKeys\n- ...\nand maybe more methods from the SpiceManager.\nI'm pretty sure that comes from the same point: a binding problem.\nMy test case again:\nA fragment that uses spiceManager.onStart(getActivity()); in onStart() and \nif (spiceManager.isStarted()) {\n            spiceManager.shouldStop();\n        }\nin onStop()\nNow after getting my result successfully once, I lock my screen, unlock it and when coming back to the fragment (for instance), I try to refresh my data using some of the above methods and they don't work at all\nI noticed these logs are missing whereas they appear when it works (refreshing before unlocking screen):\n07-10 14:13:24.895: D//SpiceManager.java:1110(23854): 14:13:24.899 Thread-5230 Waiting for service to be bound.\n07-10 14:13:24.895: D//SpiceManager.java:1117(23854): 14:13:24.900 Thread-5230 Bound ok.\n. Please see my message above on GitHub (https://github.com/octo-online/robospice/issues/128#issuecomment-20863396), I updated my message to be more accurate.\nSo yes, it still happen with 1.4.6-snapshot.\nThe NPE stacktrace is not related to RS as the NPE happens on the second line:\nFuture<List<Object>> f = getSpiceManager().getAllCacheKeys(ListSkills.class);\nList<Object> l = f.get();\n. I managed to reproduce this issue with the robospice-sample-core-fragment sample. \nI guess it will be easier for you, the RS team, to figure this tough bug out :-)\nHere's the code:\nI just add some code to the MainFragment.java\n```\nprivate void performRequest(String searchQuery) {\n        resultTextView.setText(\"\");\n    MainFragment.this.getActivity().setProgressBarIndeterminateVisibility(true);\n\n    ReverseStringRequest request = new ReverseStringRequest(searchQuery);\n\n    // ADD\n    clearSpecificCacheKey(\"dundee\");\n    // END\n\n    spiceManager.execute(request, searchQuery, DurationInMillis.ALWAYS_RETURNED, new ReverseStringRequestListener());\n\n    hideKeyboard();\n}\n\n```\n```\nprivate void clearSpecificCacheKey(String cacheKey) {\n        Log.d(TAG, \"---------------------------------------\");\n        Log.d(TAG, \"getAllCacheKeys\");\n        Log.d(TAG, \"---------------------------------------\");\n    List<Object> listOfCacheKeys = null;\n\n    try {\n        // https://github.com/octo-online/robospice/issues/128\n        Future<List<Object>> f = spiceManager.getAllCacheKeys(String.class);\n        listOfCacheKeys = f.get();\n    }\n    catch (InterruptedException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    catch (ExecutionException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n    for(Object key : listOfCacheKeys) {\n        Log.d(TAG, key.toString());\n    }\n\n    Log.d(TAG, \"Number of cache keys = \" + listOfCacheKeys.size());\n\n    Log.d(TAG, \"---------------------------------------\");\n    Log.d(TAG, \"RemoveDataFromCache -> \" + cacheKey);\n    Log.d(TAG, \"---------------------------------------\");\n\n    // https://github.com/octo-online/robospice/issues/128\n    spiceManager.removeDataFromCache(String.class, cacheKey);\n\n    Log.d(TAG, \"---------------------------------------\");\n    Log.d(TAG, \"getAllCacheKeys\");\n    Log.d(TAG, \"---------------------------------------\");\n\n    listOfCacheKeys = null;\n\n    try {\n        // https://github.com/octo-online/robospice/issues/128\n        Future<List<Object>> f = spiceManager.getAllCacheKeys(String.class);\n        listOfCacheKeys = f.get();\n    }\n    catch (InterruptedException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    catch (ExecutionException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n    for(Object key : listOfCacheKeys) {\n        Log.d(TAG, key.toString());\n    }\n\n    Log.d(TAG, \"Number of cache keys = \" + listOfCacheKeys.size());\n}\n\n```\nWhat I want to achieve, it will work in some cases:\n1. Type in \"dundee\"\n2. Hit the Reverse button\n3. \"dundee\" is stored in the cache\n4. Type in whatever you want\nYou can see the logs that prove it worked!\n```\ngetAllCacheKeys\nNumber of cache keys = 1\n\nRemoveDataFromCache -> dundee\n\ngetAllCacheKeys\nNumber of cache keys = 0\n```\nBut now, a way to reproduce the bug:\n1. Lock your screen and unlock it\n2. Type in whatever you want\n3. Hit the Reverse button -> crash\n```\ngetAllCacheKeys\nFATAL EXCEPTION: main\njava.lang.NullPointerException (on f.get())\n```\nHope it helps,\nMathieu.\n. Bug is fixed, thanks a lot Stephane! This one drove me nuts!\n. If you don't want to store your data into the cache, just call execute(request, requestListener)\nDurationInMillis.ALWAYS_EXPIRED puts your data into the cache. It could make sense if you want to use getDataFromCache for instance\n. I'd like to add that could be a great point to have a kind of callback to notify us the data has been successfully removed from the cache.\n\nI think this is pretty serious because if you have an application where the user can log out and a different user will log in, then he will see the cached data from the previous user.\n\nAnyway, I encourage you to create a cache key that also depends on the user id/login in order to avoid some conflicts.\n. You should update the Advanced RoboSpice Usages section\n. There's still a mistake here\n\nDurationInMillis.ALWAYS_EXPIRED. Use this parameter to specify when data will be taken from the cache without invoking retrieval of new data from the network.\n\nThat should be DurationInMillis.ALWAYS_RETURNED\nBut, IMHO, I would remove that whole sentence as you repeat it in the next paragraph.\n. With the new version 1.4.6, addListenerIfPending can now notify when no pending request has been found. \nSo basically, use addListenerIfPending after orientation change. \nIf onRequestNotFound() is called (your mentioned conditions), you could retrieve the result of your request with getDataFromCache or getFromCache\n. I've just revert back to 1.4.7 and I can't reproduce the error... :)\n. Yeah thanks, this does work. What about visibility of notification ?\n. Hmm you're right, I haven't noticed that before on 4.0.4 as I'm currently doing short-running operation with RS\n. @stephanenicolas, what's the point of having to specify long cacheExpiryDuration as parameter in the SpiceManager#isDataInCache method? I really don't get it.\n. That's clear now, thanks.\n. @stephanenicolas For performance sake, is it ok to start and stop a SpiceManager in almost every fragments? Or would you recommend to follow @rey5137's way? Thanks\n. So, if I understand, using inheritance, I'd better add the static keyword to declare the spiceManager? static final SpiceManager spiceManager = new SpiceManager(SpiceService.class)\n. This is more a Spring Android issue and unfortunately, as the documentation states, put will always return void http://docs.spring.io/spring-android/docs/1.0.1.RELEASE/reference/htmlsingle/#d4e146\n. ",
    "kjsolo": "I am sorry, this bug still exists.\nI already use the code in Fragment:\njava\n@Override\npublic void onStop() {\n    if( spiceManager.isStarted() ) {\n       spiceManager.shouldStop();\n    }\n}\nHere is my code, initialize Fragment in Activity:\nSpiceManager in MainFragment\n``` java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    FragmentManager fm = getSupportFragmentManager();\n    FragmentTransaction ft = fm.beginTransaction();\n    if (fm.findFragmentById(R.id.content_frame) == null) {\n        contentFragment = MainFragment.newInstance();\n        ft.add(R.id.content_frame, contentFragment);\n    }\n\n    // configure the SlidingMenu\n    menu = new SlidingMenu(this);\n    menu.setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\n    menu.setShadowWidthRes(R.dimen.shadow_width);\n    menu.setShadowDrawable(R.drawable.shadow);\n    menu.setBehindOffsetRes(R.dimen.slidingmenu_offset);\n    menu.setFadeDegree(0.35f);\n    menu.attachToActivity(this, SlidingMenu.SLIDING_WINDOW);\n    menu.setMenu(R.layout.menu_frame);\n\n    if (fm.findFragmentById(R.id.menu_frame) == null) {\n        ft.add(R.id.menu_frame, new SlidingMenuFragment());\n    }\n    ft.commit();\n}\n\n```\nBut sometimes throw Could not unbind from service exception.\nHow to use it correctly in Fragment or other way (like start on Activity, not in Fragment)?\nI apologize my english.\n. ",
    "DarthWendigo": "I have the same problem, what's the last version? I want to update my build.gradle. Actually my version is 1.4.8.\ncompile('com.octo.android.robospice:robospice-retrofit:1.4.8')\nThanks in advance.\nThe wiki says this:\ncompile ('com.octo.android.robospice:robospice-spring-android:1.4.7')\n. @rciovati thanks! :+1: \n. ",
    "mdumrauf": "How about using UrlQuerySanitizer? It is a utility class provided by android sdk.\n. Totally agree with you @gcacace. :+1: \n. I tried 1.4.6 and still tackle with this issue. Anyone else having the same problem too?\n. Don't have time to provide an automated failing test, but the way I checked it was:\n1- Fetch data this way:\njava\nspiceManager.execute(new BigBinaryRequest(url, cacheFile), cacheFile.getName(), DurationInMillis.ALWAYS_RETURNED, requestListener);\n2- Clear the cache:\njava\n@Override\n    protected void onDestroy() {\n        spiceManager.removeAllDataFromCache();\n        super.onDestroy();\n    }\nI understand that removeAllDataFromCache() returns a Future that will be executed. But if a check the cache directory of the app, files are stil there.\n. I will try it with another simple resource. I've already tried the image-caching example and it works.\nRegarding BigBinaryRequest, I'm now ensuring that the cacheFile gets deleted onDestroy(). So I think it is, as you said, a rare behavior in RS. For the record, I'm now cleaning the cache directory manually with Apache Commons' FileUtils, so I can still use RS's cache feature. I create the file in the cache directory (context.getCacheDir()) and the implementation of onDestroy() looks like this:\n``` java\n    @Override\n    protected void onDestroy() {\n        clearCache();\n        super.onDestroy();\n    }\nprivate void clearCache() {\n    spiceManager.removeAllDataFromCache();\n    try {\n        FileUtils.cleanDirectory(getCacheDir());\n    } catch (IOException e) {\n        Log.e(TAG, \"Could not clean cache directory: \" + e.getMessage());\n    }\n}\n\n```\n. Great. Hope this gets improved soon. I'll try to get more involved in the short term.\n. ",
    "dpsm": "Hi All,\nI would like to contribute to this feature. What do you guys think about something like:\nFILE_NAME = (SANITIZE(KEY) + HASH(KEY))\nThis would avoid conflicts since the HASH(KEY) portion of the file name would generate different suffixes even though the sanitized prefix is the same!? \n. @stephanenicolas what do you think about my proposal above?\n. Will do. You'll receive a pull request soon :)\n. @stephanenicolas I have found a small issue and wanted some insight from you on a possible solution:\nIf we follow the approach discussed above, CacheManager.getAllCacheKeys() will return sanitized keys which might not match the expectations (knows keys) of the caller. All other APIs seem to work fine since we sanitize the keys on the way into the InFilePersisters but since after sanitizing it does no longer remember the dirty cache key it can not return the user expected set of keys.\nThoughts?\n. @stephanenicolas another thought would be use BASE 64 FILE name safe (http://developer.android.com/reference/android/util/Base64.html#URL_SAFE)\nThis would get us a reversible key name:\nFILE_NAME = BASE64(KEY);\nWhat do you think?\n. @stephanenicolas http://developer.android.com/reference/android/util/Base64.html is available on API level 8 as well. Is API 8 the minimun we need to support? \nIf so we should be fine with the android default BASE64 API and IMHO compromising the usage of the android APIs in ordert to support API < 8 does not worth it since it is such a small portion of the user base?\n. A few ideas on this topic:\nSame approach as CacheManager.getObjectPersister(..) which throws a RuntimeException if no persisters are found;\nAnother option would be to verify if there is at least one persister added to the cache manager after calling the overriden method SpiceService.createCacheManager(..) during initialization? I like the latter better...\nThoughts?\nDavid\n. If all we need is to remove all cached data do we even need persisters at all?\nI would think that we should remove all cached data without invoking any persister. In order to accomplish that we'd need to either.\n1. change the caching folder to use a sub folder for the cache manager inside the app cache folder. Then it would be easy to just delete the folder.\n2. Add a known prefix to all files created by the cache manager and then remove all files in the current cache folder matching the prefix.\nNot sure how to solve the backwards compatibility issue to clear the existing data after upgrade. Seems that if we call the registered persisters they will clean old data and then we can use one of the new strategies?\n. Sqlite databases are a little trickier since they by default all live in the apps databases folder. I would think that for the database based persisters we either should use a name prefix to allow resolving the databases to clear or somehow track them in a persistent registry?\nThoughts? Once we come up with a solution I'll be happy to contribute.\n. @stephanenicolas I am not quite sure we are on the same page on this topic so let's exchange some more thoughts here :)\nMy understanding is that this bug is about the CacheManager.removeAllDataFromCache(); API does not clear the cache if there are no persisters registered? What use cases would get to this state where there are no persisters anymore and stale cached content?\nIn case we want to move on with the cache specific folder for the file persisters, I am wondering if we would like to support the migration of the already cached content into this new folder when the application upgrades to use the library after these changes?\nCached content in the /cache/ folder would need to be migrated into /cache/robospice/. Now the question is how? The current code base does not allow us to determine which files are created by robospice and which ones are not? Maybe we can just decide not to perform migration?\nRegarding the sqlite based persisters I had an idea. We could take advantage of the method:\nRoboSpiceDatabaseHelper.onCreate(..) and create a marker file matching the respective database name on the databases folder. The marker is just an empty file to allow tracking the robospice cached dbs. This would create something like this in the file system:\n/databases/\n                         / database1.db\n                         / database1.db.robospicedb\n                         / database2.db \nThe cache manager would then look into this folder for *.robospicedb files and remove these along with their marked databases. This would keep the other databases intact and allow cleaning the robospice cache dbs.\nThoughts?\n. Should the priority order apply to requests across all spice managers within the processor or within each spice manager context avoiding an eager manager from delaying requests from another manager?\n. I agree. It should not be a big deal for an application to manage and define request priorities across it's components.\nMakes things easier to implement and the effectiveness of the prioritization will increase doing it at the processor level.\n. I guess it does not really apply what I said. If done at both levels the spice manager will prioritize the requests within its \"scope\" and the processor will prioritize the overall requests from many managers.\nI think that it is a pretty good way to go with regards to this feature.\n. Sure! Let me know if you need any help. I might write some test cases for it as well.\nHow are u planning to shape the priority api. On the spice request class?\n. ",
    "ryanmsusa": "If I manually shut off wifi and mobile data then the spice exception is always an instance of NetworkException. It never seems to be an instance of NoNetworkException\n. How can I possibly tell that the user has no internet connection when I get the following:\nspiceException.getCause() = java.net.UnknownHostException: robospice-sample.appspot.com\nspiceException.getMessage() = Exception occured during invocation of web service.\nspiceException = instance of NetworkException\n. I don't think you should close this ticket as this is a very serious issue. Apple's App Store rejects apps that don't provide users with a proper error message (in particularly a \"no internet connection\" error message)\nI know its Android but it should at least hold up to standards\n. YES I UNDERSTAND THAT BUT ITS IMPOSSIBLE TO DEDUCE THE TYPE OF MESSAGE FROM THE GENERIC MESSAGE EXCEPTIONS THAT SPICEEXCEPTION PROVIDES. Here is how I currently detect no connection and could be a way to improve the library:\n```\n             boolean hasConnectivity = true;\n                    ConnectivityManager cm = (ConnectivityManager)         mContext.getSystemService(Context.CONNECTIVITY_SERVICE);\n     if (cm.getActiveNetworkInfo() !=null){\n         hasConnectivity = cm.getActiveNetworkInfo().isConnectedOrConnecting();\n }\n else {\n     hasConnectivity = false;\n }\n if (hasConnectivity == false){\n        //SET THE SPICE EXCEPTION MESSAGE TO NO INTERNET CONNECTION  \n               return \"No Connection\";\n }\n\n```\n. ",
    "colintheshots": "Could we please re-open this? I would like to be able to catch a NoNetworkException in onRequestFailure and cannot.\n. Oddly enough, it just started working for me. It wasn't working at all earlier today with or without the .getCause() and now it suddenly only works without it.\nI don't have my Gradle minor version pinned so I would get the latest fixes.\n. When I run cancelAllRequests in onBackPressed before finish, the callback still fires. Is this because cancel is a future that itself gets canceled when the activity goes away? I would like to have a reliable way to cancel the callback.\n. I tried to reproduce this simply using the Robospice-Retrofit example and could not. After more testing, I can only reproduce this ANR when I have added any SpiceServiceListener to the current SpiceManager. I'll update the issue title to reflect this.\n. @stephanenicolas Any idea what might cause an ANR when using a SpiceServiceListener? Having the screen off seems to reproduce this reliably, but it can also happen in other ways. Thanks!\n. Using 1.4.12, I just added getSpiceManager().addSpiceServiceListener(new MySpiceServiceListener()) to onResume in some existing sample code and ran it while the screen was off on my Nexus 4. The result was an ANR when I switched on the screen.\nMySpiceServiceListener, in this case, simply implements the interface with no code added to any functions.\nI'll try your 1.4.13 snapshot.\n. Yes, I simply added the SpiceServiceListener to this sample code in SampleSpiceActivity and it reproduced the bug: https://github.com/colintheshots/robospice-minnebar-example\n. I believe it works with the Robospice Retrofit sample app. You just need to make sure the code goes in the onResume() of the first activity that loads.\n. I was working from source and having issues getting my compilation environment right. Where are the SNAPSHOTS?\n. I verified that this ANR bug appears to be fixed.\n. ",
    "buma": "Yes thanks. It is much better. The only minor problem it is in Starter guide method name is createRestTemplate on new wiki is getRestTemplate. I think it would be nicer if both names would be the same.\n. ",
    "DanielNovak": "getSpiceManager().removeAllDataFromCache() doesn't work even in the final release. This bug happens on 2.3 but not on 4.0+ Android. I think this is pretty serious because if you have an application where the user can log out and a different user will log in, then he will see the cached data from the previous user.\n. St\u00e9phane, thansk for the answer. The addLIstenerIfPending won't help much because after orientation change you can subscribe to the pending request but you don't know if the request pending. I could wait for a progress update from the request but this might come too late in case I want to show a progress dialog right after orientation change.\n. Maybe also related with https://github.com/octo-online/robospice/issues/149?\n. So I tested this on Desire S 2.3.5 and it does not happen... I am working on more tests.\n. I will definitely test this tomorrow (maybe today in the evening) and let you know. Thanks.\n. @stephanenicolas @rciovati Sorry for the late reply. The 1.6.5 version seems to have fixed this problem - the heap does not grow indefinitely and strict mode warning do not report multiple activities in memory. I think you can close this issue. Thank you.\n. Any idea when a new snapshot/release with this fix will be ready? We are running into this issues from what it looks like - each of our fragments has it's own spicemanager and some listeners are never getting called (not even onRequestFailure). We are using 1.4.6.\n. :-) Funny, I was just going to post the same issue. We get this exception only on Samsung Note, android 4.0.4 and we have a feeling that it started to occur only in the latest version.\nandroid.app.RemoteServiceException: Bad notification for startForeground: java.lang.IllegalArgumentException: contentView required: pkg=XXXXXXXXXXXXX id=42 notification=Notification(contentView=null vibrate=null,sound=null,defaults=0x0,flags=0x40)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1271)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4511)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:980)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:747)\n    at dalvik.system.NativeStart.main(Native Method)\nAs soon as you leave the application, it will crash - but this does not happen always. And on the Samsung Note you can see the application icon in the \"ongoing\" notification list if it's in the background - because of the running robospice service in background. \n. Putting this into my RoboSpice service seems to have fixed the error on Android 4.0.4. \n@Override\npublic Notification createDefaultNotification() {\n    Notification notification = super.createDefaultNotification();\n    if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH && android.os.Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {\n        //temporary fix https://github.com/octo-online/robospice/issues/200\n        PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);\n        notification.setLatestEventInfo(this, \"\", \"\", pendingIntent);\n    }\n    return notification;\n}\n. It could be set for every Android version. But anyway I think it's crashing only 4.0.4 because Robospice is using a hack to hide the foreground service notication on versions lower than 4.3. The 4.0.4 version is specific - the hack doesn't work there. \n. In my tests, the icon is shown on 4.0.4 after you leave the application and robospice service is still running, and it disappears after all requests are finished. No more crashes are happening after the fix. So this is a correct behaviour.\n@Mathieu-Castets the icon can't be hidden on 4.0.4 and 4.3+ versions. But it will eventually disappear after the robospice service finishes it's jobs. Robospice is a foreground service - that's why you are seeing the icon. You could make it a \"background\" service (override createDefaultNotification and return null), but there would be a bigger chance that the service will get killed by Android.\n. @stephanenicolas \nI think you could call \"setLatestEventInfo\" in all Android versions just to be sure. It's really device specific and it happened only on Samsung Note 4.0.4 and only very rarely during our testing. It could maybe happen on different versions too.\n. I think I found it, I forgot that Robospice is automatically retrying requests in case of no network connection, and the next request is executed after a delay. \n. I think Robospice should disable this whole notification hack on devices with Android 4.3 and higher, because it won't work and will cause unpredictable behaviour.\n. Ok, I see another problem with these notifications. We are getting this exception on Android 4.0.4 Samsung ST25i:\njava.lang.NoSuchMethodError: android.app.Notification.setLatestEventInfo\n   at com.octo.android.robospice.SpiceService.createDefaultNotification(SpiceService.java:229)\nsetLatestEventInfo is deprecated since API11, it seems they left it out completely on the Samsung smartphone?... Anyway, you have to use the NotificationBuilder to create these notifications.\n. Are you using OkHttp by any chance, and connecting to SSL? I have seen similar exception when you mix OkHttp and another HttpClient in one app. \nhttps://github.com/square/okhttp/issues/184\n. ",
    "awbranch": "Having the same problem with 1.4.5. Downgraded to 1.4.4 to fix.\nI have a button that allows you to manually clear the cache. Here's the 1.4.5 stack trace:\njava.util.concurrent.RejectedExecutionException: Task com.octo.android.robospice.SpiceManager$9@429f7ca0 rejected from java.util.concurrent.ThreadPoolExecutor@4294bc48[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]\n    at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1967)\n    at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:782)\n    at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1303)\n    at com.octo.android.robospice.SpiceManager.cancelAllRequests(SpiceManager.java:773)\n    at com.winewize.merlot.SettingsActivity.clearCache(SettingsActivity.java:247)\n    at com.winewize.merlot.SettingsActivity.access$1(SettingsActivity.java:245)\n    at com.winewize.merlot.SettingsActivity$3$1.onClick(SettingsActivity.java:121)\n    at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4745)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n    at dalvik.system.NativeStart.main(Native Method)\n. I saw it on 4.1.2. Didn't test beyond that.\nAndrew\nOn Mon, Jul 8, 2013 at 1:38 AM, stephanenicolas notifications@github.comwrote:\n\nDoes the pbm happen on Android 2.3 as Daniel reported it ? Or on any\nversion of android ?\nSt\u00e9phane\n2013/7/7 Andrew Branch notifications@github.com\n\nHaving the same problem with 1.4.5. Downgraded to 1.4.4 to fix.\nI have a button that allows you to manually clear the cache. Here's the\n1.4.5 stack trace:\njava.util.concurrent.RejectedExecutionException: Task\ncom.octo.android.robospice.SpiceManager$9@429f7ca0 rejected from\njava.util.concurrent.ThreadPoolExecutor@4294bc4<\nhttps://github.com/java.util.concurrent.ThreadPoolExecutor/robospice/commit/4294bc48>[Terminated,\npool size = 0, active threads = 0, queued tasks = 0, completed tasks =\n2]\nat\njava.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1967)\nat\njava.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:782)\nat\njava.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1303)\nat\ncom.octo.android.robospice.SpiceManager.cancelAllRequests(SpiceManager.java:773)\nat\ncom.winewize.merlot.SettingsActivity.clearCache(SettingsActivity.java:247)\nat\ncom.winewize.merlot.SettingsActivity.access$1(SettingsActivity.java:245)\nat\ncom.winewize.merlot.SettingsActivity$3$1.onClick(SettingsActivity.java:121)\nat\ncom.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:4745)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\nat dalvik.system.NativeStart.main(Native Method)\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/octo-online/robospice/issues/116#issuecomment-20572966>\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/116#issuecomment-20586488\n.\n. \n",
    "Konsumierer": "I work with 1.4.4. \nI agree that the behaviour is like you describe it, IN CASE that the server is reachable. When it is not reachable (shut down) the data from cache is only loaded after the network call timed out. It also works as expected when I am in flight mode. \nCould you run your test against 1.4.4 please? If it is successful there, I will digg into your code to see what's going wrong.\nRegards\n. Hi St\u00e9phane,\nI'm gonna report here after testing with 1.4.5.\nEnjoy your holidays!\nSebastian\n. Hi St\u00e9phane,\nstill same behaviour with 1.4.5. It can be easily reproduced when on a bad data connection. I'll investigate further.\nRegards, Sebastian\n. Now on 1.4.6 I had a look into the source code.\nWhat I would expect from the method is, that \n1) it reads the cache\n2) calls the RequestListener with the data from cache (no matter how old the data is)\n3) it loads the data from network (if cache is dirty)\n4) calls the RequestListener with the data from network.\nAs far as I can see, the method is implemented differently. Should I use two calls instead, like so?\nspiceManager.getFromCache()\nspiceManager.getFromCacheAndLoadFromNetworkIfExpired();\n. Works in my application without problems. Thanks.\n. Vote for the \"long filename\" issue. Is there a ticket for it?\nI'm having the problem on a Galaxy S4 mini, while it does not occur on the emulator.\njava.io.FileNotFoundException: /data/data/com.example.ui.android/cache/robospice-cache/JacksonObjectPersisterFactory_JacksonObjectPersister_DeviceExampleList_aHR0cHM6Ly9iYWNrZW5kLmljcy5pYXAuYm9zY2gtc2kuY29tL3NtYXJ0aG9tZS9kZXZpY2VzLzdjLWFjLWIyLTAwLTAxLTMxX1JPT01fOTdlNDZmN2ItYmM1ZC00OWYzLTk1ZmEtZGZmYmUwZjI4MjljX1JPT01fQ0xJTUFURV9DT05UUk9ML3NlcnZpY2Vz: open failed: ENAMETOOLONG (File name too long)\n. ",
    "agap": "Works as expected for me.\n. ",
    "alexkazakov": "Seems like this kind of crash occurs only when using RestTemplate inside request's loadFromNetwork method.\nMoved away to apache httpclient  and this kind of problem is gone. \n. ",
    "ntsakonas": "I know this is a very old issue, but I hit the wall with this for almost a week, trying to find out why I got this crash.Maybe your case is different than mine but I hope this helps anyone else with the same problem.\nI am using Robospice 1.4.13 and Spring Android 1.0.1release for almost a year without any single problem.I develop and test my app on Nexus5/Nexus7 and Genymotion covering all OS 4.0 and later.I never had an issue for over a year.\nThis problem surfaced recently when I ran my app on a Google Nexus S. (Quite low end device  with 1Ghz cpu and 512 Mb Ram).\nThere are many parts in my app where more than 1 requests run in parallel,my Spice service is configured to use 4 threads.During testing, the app was crashing about 50% of the times with the SIGSEGV described above or a similar one). Scanning the forums everything pointed to an issue in Charset class and also found this thread where +alexkazakov commented that the problem is RestTemplate.\nLacking more clues I focused on how Charset affects this and tried to see if I could do something to avoid it, but it was a dead-end. \nAfter examining most of the source code of Robospice and Spring for Android I found out the reason and it is RestTemplate but a different part of it (maybe deeply it is actually related to Charset).\nWhen  you use a subclass of  SpringAndroidSpiceService (like GsonSpringAndroidSpiceService, Jackson2SpringAndroidSpiceService etc) at some point a new RestTemplate() is created. Under normal cases this RestTemplate is cached in SpringAndroidSpiceService and injected on every SpringAndroidSpiceRequest that is sent for processing.\nRestTemplate class extends the HttpAccessor class where an ClientHttpRequestFactory is created to serve all Http requests.\non spring 1.0.1 this is how the factory is created\njava\nprotected HttpAccessor()\n  {\n    if (Build.VERSION.SDK_INT >= 9)\n      this.requestFactory = new SimpleClientHttpRequestFactory();\n    else\n      this.requestFactory = new HttpComponentsClientHttpRequestFactory();\n  }\nif the app runs on API<9 , HttpComponentsClientHttpRequestFactory uses the ThreadSafeClientConnManager which is thread safe.\nIf the app runs on API>=9 (which is my case) then the following code in SimpleClientHttpRequestFactory is responsible to create the requests\njava\npublic ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod) throws IOException\n  {\n    HttpURLConnection connection = openConnection(uri.toURL(), this.proxy);\n    prepareConnection(connection, httpMethod.name());\n    if (this.bufferRequestBody) {\n      return new SimpleBufferingClientHttpRequest(connection);\n    }\n    return new SimpleStreamingClientHttpRequest(connection, this.chunkSize);\n  }\nHttpURLConnection  is not  thread safe and may cause problems.\nThe implementation of Spring for Android does not add any external synchronization on this and if for any reason you find yourself creating new RestTemplate from multiple threads, you need to synchronise the creation yourself.\nFor the story, in my app, there is a special case where I do not want to have the same rest template injected on every request, so I create a new one per request.I also have points where more than one SpiceManager can be active.This combination means that the creation of my rest templates are scattered across different threads.\nWhen I manually synchronized the creation of RestTemplate the issue disappeared forever.\nThis is how I fixed my case (may not be the case for you)\non my subclass on SpiceService I have this code to process each request with a new rest template\n``` java\npublic class WebSpiceService extends SpiceService\n{\n   ...\n  private Object restTemplateCreationLock = new Object();\n  ...\n  @Override\n    public void addRequest(CachedSpiceRequest<?> request, Set> listRequestListener) \n    {\n        if (request.getSpiceRequest() instanceof SpringAndroidSpiceRequest) \n        {\n            // the creation of the RestTemplate must be externally synchronised as the spring-android implementation\n            // does not impose any synchronisation and delegation to HttpUrlConnection generates a SIGSEGV\n            // aka BOOM!\n            synchronized (restTemplateCreationLock)\n            {\n                ((SpringAndroidSpiceRequest<?>) request.getSpiceRequest()).setRestTemplate(createRestTemplate());\n            }\n        }\n        super.addRequest(request, listRequestListener);\n    }\npublic RestTemplate createRestTemplate()\n{\n   // create and configure a new RestTemplate\n    RestTemplate restTemplate = new RestTemplate();\n    ...\n   return restTemplate;\n }\n\n}\n```\nThe fact that the issue never appeared on my emulators  and my Nexus5/7 device I guess has to do with the speed of the device (nexus 5 is about 10 times faster than Nexus S on all benchmarks and emulator running on an 8 core Intel cpu is nowhere near a real device) so a fast devices just masks the problem.\nNick\n. ",
    "yodanote": "Why no provide binary library in trunk or demo project.\nOr Just provide describe for \"Non Maven users\" in ReadMe.\nI follow the documents to install Maven for ADT a bit while,and then have to post this for help.Perhaps more starter like me.\n. OK,I will try Android Studio as your advice.\nBut Caution: Android Studio is currently available as an early access preview. \nhttp://developer.android.com/sdk/installing/studio.html\nI still believe most developer  use  ADT + RoboSpice to develop application for Android.\nAnd we should make clear of this for starter.\nIf you don't have the patient for  those  problem,I  have gave up RoboSpice  already.\n. ",
    "GuillaumeBo": "Thanks for reply, i tested your solution and it does'nt work to..\nI migrated to springAndroid and it work ! But ! cause it always has a \"but\" , i have got the jackson issue of array with single value like describe here http://stackoverflow.com/questions/10247639/deserialize-arraylist-from-string-using-jackson\nAnyone have an idea of how we add the flag or solve this problem ?\n. yeah ! i found ! \nthe solution : \nin the spiceService and createRestTemplate method :\nObjectMapper mapper = new ObjectMapper();\nmapper.enable(Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\njsonConverter.setObjectMapper(mapper);\n. Was my fault, 204 is a response without body so we have to define unknown type of response, here ma request if anyone needs :\nResponseEntity<?> response = getRestTemplate().exchange(baseUrl, HttpMethod.POST, requestEntity, String.class);\nthanks stephanenicolas for the answer\n. ",
    "JoanZapata": "This request came from a misunderstanding of the library.\n. I removed the lib from my project because of this.\n. ",
    "andreabreu-me": "https://github.com/square/wire\n. ",
    "tylertreat": "Hi Stephane, thanks for the prompt reply.\nMy Fragment's onStart() and onStop() look something like this:\n``` java\n@Override\npublic void onStart() {\n    super.onStart();\n    mSpiceManager.start(getActivity());\n    if (mPendingSearchId != -1) {\n        mSpiceManager.addListenerIfPending(Search.class, mPendingSearchId, new SearchRequestListener());\n        setSearchState(true); // Notify UI that request is in progress\n    }\n}\n@Override\npublic void onStop() {\n    if (mSpiceManager.isStarted()) {\n        mSpiceManager.shouldStop();\n    }\n    super.onStop();\n}\n```\nI am indeed using android-support-v4 r7 (unfortunately, this is the latest version in Maven Central Repository). I will try r13 this evening and see if that fixes anything.\nI am currently calling isAdded() to check if the Fragment is attached before trying to update the UI from the listener, but the problem is that my progress indicators do not get removed when it is not attached.\nOne thing I thought of was detaching the listener from my Fragment when it is removed and attaching it to the new Fragment that is added. That way, I would ensure the UI is updated properly. Do you see any problems with doing this?\n. I am doing those things, but that does not solve the issue of updating the UI on cancelation after orientation change. Here is the sequence of actions that are occurring which will illuminate the problem:\n1. Begin request (mPendingSearchId is set, progress indicator is shown)\n2. Change device orientation (mPendingSearchId is persisted via onSaveInstanceState)\n3. mPendingSearchId is set in new Fragment (show progress indicator and call addListenerIfPending)\n4. Cancel request (onRequestFailure fires with RequestCancelledException, but we are in old Fragment which is detached, so don't touch UI)\n5. Progress indicator is not turned off, inconsistent state\nI believe my solution of detaching the PendingRequestListener from the old Fragment and reattaching it to the new Fragment will resolve the issue, so I will try that and report back with results.\n. Okay, so I implemented the solution I described earlier. I moved my request listener into it's own class so that it's no longer an inner class of my Fragment. I then added the following method to it, which I call from my Fragment's onAttach, passing this in.\njava\npublic void attachSearchFragment(SearchFragment searchFragment) {\n    mSearchFragment = searchFragment;\n}\nNow I simply call my UI update method on the Fragment currently attached to the request listener when a request finishes, e.g.:\njava\nprivate void onRequestCancelled() {\n    mSearchFragment.setPendingSearchId(-1);\n    mSearchFragment.setSearchState(false);\n}\nThis fixes the problem.\n. ",
    "sarmadali20": "How about using START_STICKY this will help spice service to start right after it is destroyed by the system. This way we will have to stop the service explicitly. I am not sure about how binding would work when you start service as sticky P.S I already used wakefullintentservice with broadcast receivers my personal opinion is to stay away from them :P BTW nice work guys I love  robospice \n. @stephanenicolas  I have some services using spicemanager from \"we could have a mechanism to set the service in foreground (and displays a notification in 4.3) only on demand, for instance, when there is no more activity using it but for as long as requests are pending. And that would be fair for users (not devs, but users as they would see when RS/the app is doing something even when not shown on screen).\"  I can assume that when ever there are pending requests we will have a notification & when there are no more requests but activity/service is still bound to RS service then notification will disappear. \n. @softwaremaverick  Yes thats true.\n. ",
    "zubietaroberto": "Temporary solution based on @rciovati 's solution. My app crashes if I return a null notification, so I instad \"hid\" the notification, like the way Google Now shows its notifications. \nOverride SpiceService with:\njava\n@TargetApi(Build.VERSION_CODES.JELLY_BEAN)\n@Override\npublic Notification createDefaultNotification() {\n    final Notification noti = super.createDefaultNotification();\n    if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN){\n        noti.priority = Notification.PRIORITY_MIN;\n    }\n    return noti;\n}\nThe notification will only appear if the user lowers the drawer, but the icon will not appear at the top left. Thanks to this post for the information:\nhttps://plus.google.com/113735310430199015092/posts/aYsmAY1JSu1\n. ",
    "nick7ikin": "Put @JsonIgnoreProperties annotation before response class. Like this:\n``````\n@JsonIgnoreProperties(ignoreUnknown = true)\npublic class ContactsResponse {\n    @JsonProperty(\"result\")\n    public ArrayList contacts;\n}``\n``````\n. I figured out that real exception is risen not inrobospice-retrofit` module, but in retrofit library.\nDebugging showed that exception threw by HttpURLConnection class - it doesn't have patch method implementation. \nI've tried switching to Apache HttpClient as recommended in this answer. But I didn't managed to make it work (maybe I have very  small experience for now :), so possibly somebody will implement this way).\nAlso there is possible option: use Header X-HTTP-Method-Override: PATCH. But I didn't try it and it seems its a kind of workaround so it should be used as very last attempt.\nI solved this issue switching to another retrofit Client. At first I tried Apache HttpClient but failed again :) (it returned response code 400 to the very basic GET request). So didn't dig why Apache HttpClient wasn't working and tried OkHtttpClient, cause it also has PATCH request support. And it worked.\nAs suggested in this post I added to build.gradle:\ncompile 'com.squareup.okhttp:okhttp:+'\n    compile 'com.squareup.okhttp:okhttp-urlconnection:+'\n    compile 'com.squareup.okio:okio:+'\nAlso I set http client in my service class, like this:\n```\npublic class SpiceRetrofitService extends RetrofitJackson2SpiceService {\n@Override\npublic void onCreate() {\n    super.onCreate();\n    addRetrofitInterface(ApiService.class);\n}\n\n@Override\nprotected String getServerUrl() {\n    return AppConfig.BASE_URL;\n}\n\n@Override\nprotected RestAdapter.Builder createRestAdapterBuilder() {\n    RequestInterceptor requestInterceptor = MyApplication.getInstance().getRequestInterceptor();\n\n    RestAdapter.Builder builder = super.createRestAdapterBuilder();\n    builder.setRequestInterceptor(requestInterceptor);  // used for setting Authorization headers\n\n    OkHttpClient okHttpClient = new OkHttpClient();\n    builder.setClient(new OkClient(okHttpClient));\n    return builder;\n}\n\n}\n```\n. ",
    "xbezdeka": "Problem solved! It was caused by this:\ngetRestTemplate().getMessageConverters().add(new MappingJackson2HttpMessageConverter());        getRestTemplate().getMessageConverters().add(new StringHttpMessageConverter());\nWhen I removed the StringHttpMessageConverter() it started to work as it should.  I don't know why you can't have more than one converter though.\n. ",
    "nkeskinov": "SyncAdapters are still poorly documented in mid-2015 (the video specified above is one of the best resources I have seen, but it offers little detail). The SyncAdapter module, however, should naturally be integrated or built upon the ContentProvider extension which RoboSpice currently has.\n. Code merged through PR #332.\n. Hi Stephane, \nCould you provide some feedback on the Pull Request, please? Do you think it may break some other functionality, maybe?\nIn case I needed to pick it up differently or open it in another branch, please let me know.\nRegards,\nNikola\n. There was no response for about a month.\nBut I have later found out that the solution is suboptimal as well - it was causing internal IllegalArgumentException thrown from the system periodically. \nYou can check my commit daff8725bd5459a0a6ba2b238105930bd60cba44 for the improved (and bug-free) solution. It also allows for a custom OnScrollListener to be set to a SpiceListView.\n. Squashed and merged through #332.\n. I have had a use case for this in a project and used @rciovati's solution. Maybe it would be a good starter for me!?\nETA would also be somewhere next week.\n. After a small investigation on this one, it looks to me like it is not as simple as on first sight.\nProblem seems to be that if we await() from the main thread (since we usually call execute() there), then calling countDown() from RequestListener's methods, also executed on the main thread, is never going to work.\nIt seems that all the use cases that were using this way of synchronous execution were actually calling execute() from a non-main thread.\nTherefore, a complete solution for this would require another implementation of com.octo.android.robospice.request.notifier.RequestListenerNotifier (other than DefaultRequestListenerNotifier) which is going to use a Handler from some other thread.\nOr any other idea the involved people may have :)\n. I am now exploring Rx and I think we would be able to use it fully and correctly only by replacing core RS, currently relying on ExecutorService-s, by one using RxJava. This is probably a theme for RoboSpice 2.0.\n. Please see PR 322. The Retrofit dependency is going to be up-to-date in 1.4.13.\n. Regarding the OkHttp library, Retrofit automatically detects if you have it in your classpath and uses it. Therefore, you need to update the dependency in your own dependency management.\nIf you use RoboSpice's OkHttp extension, I have just pushed an update to that 1.6.0 in commit 77b99ec. The list of fixed bugs in the 2.0.0 RC-s of OkHttp still looks too frightening to me to move to that one.\n. Incorrectly closed it. Issue not implemented yet.\n. Have you tried the Starter guide from the Wiki?\nPersonally, I have found RoboSpice's intro resources much better than Volley's few months ago, especially because there is no formal documentation for that library, but only tutorials scattered here and there.\nOnce you have read the basics from the the Wiki, I recommend pulling and looking at the samples, based on the specific extension that you need, and for some general best practices, you may also consult the AtLeap sample.\n. @stephanenicolas Build failed with a curious problem: https://travis-ci.org/stephanenicolas/robospice/jobs/29617407. Is this a problem for merging (which I guess will trigger the build once more)?\n. It is mainly to remain compatible with dependencies used for the extensions, like Jackson, OkHttp and Retrofit. Their latest versions all have min API 10 now.\nHowever, if you are not using those extensions, I believe you will still be able to easily create a custom build which is going to be more backwards compatible.\n. Created issue #341 for the PR.\n. @stephanenicolas The last commits you can see are the nearest to squashing I could get. \nThe merge commit 94dbd66 has no changes, but it had to be here because the previous commits were reverted.\nAbout the functionality, it lacks tests, as discussed by email. \nHowever, I can see no simple way of mocking a ListView that would force scroll behavior in order to check if the wrapped OnScrollListener methods were called. The reason for this is that all ListView's methods are private and many things are checked (due to optimization) before the OnScrollListener's methods are called.\nIdeas are welcome.\n. PR #340 is going to resolve this issue.\n. Could you try using robospice 1.4.12? Your gradle would look like this:\ndependencies {\n    compile 'com.octo.android.robospice:robospice:1.4.12'\n    compile 'com.octo.android.robospice:robospice-ormlite:1.4.12'\n    compile 'com.octo.android.robospice:robospice-ormlite-content-provider:1.4.12'\n}\nYou should also be safe enough with the highest minor version, i.e. 1.4.+\n. No, maven central should be enough.\nSorry, I just recalled issue #262 where the same problem is also mentioned.\nYou can check agrebnev's comment https://github.com/stephanenicolas/robospice/issues/262#issuecomment-35873934 for a possible workaround.\n. No, there is no RoboSpice implementation for ExpandableListView.\nBTW, please ask questions on the discussion group.\n. I guess that the cacheKey argument passed as null does the trick of skipping the cache (see https://github.com/stephanenicolas/robospice/blob/a8290e4d964a3373e558d12fe9baffd33cb9d4c7/robospice-core-parent/robospice/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java#L94), bit indeed, DurationInMillis.NEVER or DurationInMillis.ALWAYS_EXPIRED (they have the same value) would make more sense.\nPull requests are welcome.\n. The workaround is really simple, you just need to replace RoboSpice's dependency with @maciejpigulski's code above:\ncompile ('com.octo.android.robospice:robospice-retrofit:1.4.13') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile 'commons-io:commons-io:1.3.2'\nIf you have multiple com.octo.android.robospice dependencies, you should probably exclude the org.apache.commons:commons-io from all of them.\n. @stoefln, In our application, we have extended the SpiceManager by adding our own execute method and implemented a singleton LruCache. This way, we are synchronously checking the LruCache before anything has been submitted to the SpiceService, giving us a considerable performance gain when there is a cache hit. \nThis is a simple paradigm which improved responsiveness for us dramatically, but it adds \"synchronicity\" and is not part of the RoboSpice's underlying idea. However, if I understood your challenge correctly, it may help in your case.\n. Hi @stephanenicolas,\nThe solution we have is still too messy and coupled with our app, but I do plan to generalize and integrate it into RoboSpice as a nice PR one day.\nHowever, the idea of it, in simplest terms is:\n```\n// may not be syntactically correct as it is an excerpt of a bigger class with out-of-this-context code\npublic class APICacheSpiceManager extends SpiceManager {\n// singleton memory cache, extension/wrapper of Android's LruCache\nprivate final APICache cache = APICache.getInstance();\n\npublic <T, R> void fetch(Context context, AbstractSpiceRequest<T, R> req, Object cacheKey, long cacheDuration, RequestListener<T> listener) {\n    T result;\n    if (cacheKey != null) {\n        result = (T) cache.get(cacheKey, cacheDuration);\n\n        if (result != null) {\n            Log.d(\"FETCH\", ms(time) + \"Instantly loading request from L1 cache: \" + req);\n            listener.onRequestSuccess(result);\n            return;\n        } else {\n            // CacheFillerListener is going to save the result in our memory cache, storing the timestamp of the creation as well (for cache duration)\n            listener = new CacheFillerListener<>(cache, cacheKey, listener);\n            CacheManager cacheManager = getCacheManager((Application) context.getApplicationContext());\n            result = cacheManager.loadDataFromCache(req.getResultType(), cacheKey, cacheDuration);\n            if (result != null) {\n                Log.d(\"FETCH\", ms(time) + \"Instantly request loaded from L2 cache: \" + req);\n                // send cached result immediately and return\n                listener.onRequestSuccess(result);\n                return;\n            } else {\n                Log.d(\"FETCH\", \"Executing Spice request: \" + req + \" ON \" + this);\n                super.execute(req, cacheKey, DurationInMillis.ALWAYS_EXPIRED, listener);\n            }\n        }\n    } else {\n        // use network etc.\n    }\n\n}\n```\nIf there is a cache hit either in memory or disk cache (L1 or L2), no RoboSpice mechanism is triggered (request queueing, spice service, asynchronicity...). Instead, request listener's onSuccess will be immediately executed. According to our performance tests, there was a great improvement of using the cache this way, compared to the async use via service.\n. Please check the following StackOverflow answer from the creator of RoboSpice: http://stackoverflow.com/a/24181943/754439:\n\naddListenerIfPending will not trigger any request by itself, it only allows to plug a listener to an already pending request if such a request exists.\n\nThe addListenerIfPending() method is exactly what you need. \nAlso, please note that the preferred way of posting questions is https://groups.google.com/forum/#!forum/robospice.\n. The Google Group would be the best place for these questions.\nHowever, it seems that the situation is caused by the HTTP client you are using with RoboSpice, and not the library itself. Depending on the RoboSpice extensions and the Android version you use, the exact HTTP client varies, so please post the question, with at least those details, on the Google Group: https://groups.google.com/forum/#!forum/robospice.\nI have not been personally involved in such low-level HTTP quirks, but maybe someone else will be able to help.\n. It is by design that a Future blocks when you call get() on it. You should execute that call in a non-UI thread.\n. You can use as many of those methods as you like inside loadDataFromNetwork(). The method is there to implement so you will be sure which code is going to be executed asynchronously, outside of the UI thread. You can also make a Model object yourself and return it, it doesn't matter to RoboSpice.\nHowever, most of the times it will be cleaner if you execute only a single network request per SpiceRequest. You will be able to update the UI immediately after any network response (successful or not) with a RequestListener and later reuse the result of it to execute a new request.\nFinally, this is a question, so please post them to the RoboSpice Google Group.\n. You need to add the following in your SpiceService extension:\n@Override\npublic Notification createDefaultNotification() {\n    return null;\n}\nThis will, however, make your SpiceService a background one, which has some consequences on the general Android level: http://developer.android.com/guide/components/services.html#Foreground.\n. Hi Mateusz,\nI would implement a custom SpiceService similar to com.octo.android.robospice.retrofit.RetrofitSpiceService, which would offer the \"dynamicity\" you require.\nYou can, for example, store a retrofit.RestAdapter.Builder instead of a RestAdapter field and reset it on every change of the serverUrl.\nHope this helps.\nRegards,\nNikola\n. Actually, I now think it's better to resolve this on Retrofit level. You can provide a retrofit.Endpoint with the retrofit.RestAdapter.Builder#setEndpoint(retrofit.Endpoint) and this (possibly singleton) object will provide the URL at the time of HTTP execution (see retrofit.RestAdapter.RestHandler#invokeRequest).\nIf you make your endpoint singleton, you will be able to easily manipulate the server URL on demand and the change will apply immediately.\nThe only challenge left is the inflexible RetrofitSpiceService (I agree it should be revised). You should just extend the com.octo.android.robospice.retrofit.RetrofitSpiceService#createRestAdapterBuilder method and provide a retrofit.RestAdapter.Builder that is going to use that dynamic retrofit.Endpoint.\n. It seems that you need @stephanenicolas to add you to maintainers.\n. Context moved to http://stackoverflow.com/a/29206498/754439.\n. It's irrelevant, actually, because you have a null cache key.\n. Lambdas are not yet supported in Android.\n. That would (not too necessarily) add a dependency to another project/plugin. Developers who use lambdas may always extend their SpiceManager to include a lambda construct like you proposed.\nAlso, RoboSpice is very open for contributors and this is a fine case for creating an extension.\n. Nice! I would still suggest doing an extension as lambdas are not the most standard constructs in Android and using them does not add anything to the core behavior of RoboSpice.\nReopened the issue so that we can have anyone else's feedback.\n. Please see Proguard configuration for RoboSpice projects wiki page.\n. See #437 for this issue. Seems to be safe to use your workaround.\n. ",
    "kartheininger": "Shouldn\u00b4t gradle do this automatically? Or how can we achieve this manually?\n//EDIT: Found the solution:\nhttps://github.com/octo-online/robospice/issues/161\nAdding this \"solved\" ;) it: \nconfigurations {\n    all*.exclude group: 'com.google.android', module: 'support-v4'\n}\n. ",
    "seva-ask": "Thank you. I will try new snapshots tomorrow and notify about results.\n. As I can see, memory leak is fixed.\nBut new version contains another bug.\nNow in SpiceManager exists this field:\nprivate final PendingRequestHandlerSpiceServiceListener removerSpiceServiceListener;\n```\nprivate class PendingRequestHandlerSpiceServiceListener extends SpiceServiceAdapter {\n    @Override\n    public void onRequestAdded(CachedSpiceRequest<?> cachedSpiceRequest, RequestProcessingContext requestProcessingContext) {\n        mapPendingRequestToRequestListener.put(cachedSpiceRequest, requestProcessingContext.getRequestListeners());\n    }\n@Override\npublic void onRequestProcessed(final CachedSpiceRequest<?> cachedSpiceRequest, RequestProcessingContext requestProcessingContext) {\n    mapPendingRequestToRequestListener.remove(cachedSpiceRequest);\n}\n\n}\n```\nAnd this listener adds a request to map is each instance of SpiceManager.\nI mean that I have one instance of SpiceManager per activity.\nAnd actually if there is more than one instance of SpiceManager, which is bound to SpiceService, than added request will appear in these maps in all such SpiceManager instances.\nThis map is used to remove pending requests when SpiceManager is getting stopped. So when I stop it, all pending requests will be removed, although some of them were created in another SpiceManager and another activity.\n. At the moment I don't know how to fix this bug quickly, but I am thinking about it. Maybe you will find the solution faster.\n. I suggest returning to previous scheme of adding and removing listeners in spicemanager. So I made one more pull request with this changes. https://github.com/octo-online/robospice/pull/186\n. Yes, of course I run RS under debugger. I have some problems with it, because I use Android Studio and gradle projects which are not compatible with maven. So I have created gradle project for RS and attached sources from repository to it. But in this scheme I don't have test projects, so sometimes I can open original project in IDEA and run tests.\nAlso I inspect hprof dumps when I meet memory leaks.\nThe main problem that I see in this bug and around it - almost everything in robospice is operating with requests, but in my case I operate with listeners. Suppose we have two instances of SpiceManager and we are executing the same request in them with different listeners. Every callbacks are operating with Set, but listeners in this set may have come from different SpiceManagers. So if we are stopping one of SpiceManager instances, we actually want that request executing will continue and in the end listeners, that have come from all other SpiceManager instances will be run, and from stopped instance will not.\nMaybe we should introduce new class that aggregates RequestListener and SpiceManager from where it came from.\nSo on I think that 1 and 3 ways will not work because they don't match Listener to SpiceManager.\nSecond way should work.\nIn https://github.com/octo-online/robospice/pull/186 I implemented some solution that is simpler and should work too.\n. Sorry, I don't understand you clear enough, can you please try to explain again?\nIn my request I don't increase number of requests which are stored in maps in SpiceManager. I made that only listeners which were executed by current instance of SpiceManager are stored in it.\nHow can we not store listeners and requests in SpiceManager? If so, we will not be able to cancel them explicitly.\nBy the way, most memory leaks in my case are caused by listeners and not by requests. For listeners I use anonymous classes which keep implicit reference to view, so view can't be gc'ed.\n. Thank you for fixing. We are comparing memory usage of two variants of fixes. I am going to post results here tomorrow.\n. As I can see, new build works well.\nBut on Sony Tablet S our testers could reproduce OutOfMemory again, and I can get this device and investigate the problem only next week. I suppose that this problem is not caused by robospice but I'm not sure now.\nI will try to write some text for wiki. When it is ready, I will inform you.\n. It is a good idea to release 1.4.7.\nWe are developing this app: https://play.google.com/store/apps/details?id=ru.stream.droid\nMaybe you can't download it because it is only for Russia, but I'm not sure. If you are interested, I can send you .apk or we can invent another way for giving it to you.\nVersion, that is in market now, is written in Xamarin (http://xamarin.com/monoforandroid). Our company had been developing apps with this framework for two years but now we faced great problems with it. In MonoForAndroid garbage collection is implemented in very strange way, so it has great lags, pauses and even many crashes. I tried to explain problem to their support, attached some simple projects with great pauses but they haven't suggested any suitable solutions, they only suggested not to hold references for UI objects, what can't be done in projects with complex UI. So we had no other way except full rewriting our app in Java without Xamarin. Version written in Java is not published in market yet, we are going to do it in one-two months.\nWhen we were writing in C# with Xamarin, we had to develop some kind of library for executing requests like robospice, but we had to do it crossplatform to work on iOS too. It was really bad idea because requests were not connected to activity lifecycle, but I got some experience in such libraries and in solving problems with random crashes and memory leaks.\nOne more thing: our app may become preinstalled into new Sony devices in Russia, so it has to pass Sony's QA. It is very strict, for example, app should have no crashes and anrs during 5 hours of special monkey test.\n. Thank you very much for your tenderness and warm words.\nOf course I will write you when we release our app, section with app using RS is a very nice idea.\n. As I can see - all tests passed.\n. I was using Samsung GT-P6210.\nI had a little trouble with snapshots, maven didn't think that files had been changed.\nBut I took new snapshots from repository and tested them.\nAs I can see, everything is OK now.\nNew test is good.\nOne more trouble: have you tried to run tests on android emulator? On device all tests pass, but on emulator I have about 5 tests failing. When I increase timeouts, many of them will pass, but not all. It will be good if you try.\n. Thank you.\nAbout first problem: I think that it's worse than seemed to me and my yesterday fix not solves it.\nYou approach is much better and I've done new fix using it. I will commit it soon after small testing.\nBut if we do so, I think that we should'n use RequestProcessingContext in SpiceManager, but we can leave it as a parameter in listener for other usages.\n. Our testers say that on this version oom is much harder to be reproduced but they managed. So we need to think more.\n. There exists some case when we add listener to mapRequestToRequestListener in RequestProcessor and don't remove it. But I have no success now in finding it.\n. I have found and solved a problem.\nListeners from map of requests to launch were not removed.\nOn last build our testers failed to crash it with oom on Sony Tablet S.\nBut two moments remain: I have no idea how to write tests for this cases and I'm not sure that I have implemented all synchronization correctly. Please review it, maybe some locks are needed.\n. Thank you very much for information about genymotion.\nI have just installed it and it's very fast indeed.\nSo I faced ConcurrentModificationException and added some synchronization, but I'm not sure it's enough.\n. Hi, St\u00e9phane!\nI know that you are very busy with BoundBox and other projects.\nCan you tell me please when you will have some time for reviewing my pull requests? We need to plan our application deploying.\nThanks in advance.\n. Thank you. Tomorrow I will take a look on failing tests and will try to fix them.\nBut I can give the application with new snapshots to our testers only on Monday and after that I will tell you if everything is OK.\nIt would be good if you deploy snapshots to repository branch as well, because I'm not sure that maven updates so fast.\n. I'm sorry, but we have some troubles on server-side now.\nSo we can't check requests good enough, because server responses are too slow.\nFor now all works fine, but it would be good if you give me some more time for testing.\n. Hello!\nDuring last 3 days we have been testing our app and haven't found any problems with memory leaks.\nI think that this version is good enough to be released.\nLater I'm going to do some performance testing but this can wait for next release.\nThank you.\n. If we don't set isStopped to true at the beginning of shouldStopAndJoin method, some other methods may be called while removing listeners, and we can get some side effects. I can't answer you right now about them, need some investigation.\n. Maybe increase timeout up to 10 seconds?\n. I've done what you asked me.\nI fixed real warnings from checkstyle and findbugs that failed the build.\nBut build is sometimes failed on one of the platforms because of network reasons, you can see it in logs. I don't know how to fix it, maybe somewhere timeout settings exist.\nPlease review the result.\n. Thank you. I didn't know about squash, it's useful and interesting.\n. Please consider releasing new build to maven after reviewing two my pull requests.\nAnd it might be interesting for you to take a look at this project: https://github.com/ZuZuK/base-library\nSorry, It has lack of documentation now because it is under development.\nMy friend and I are working on concept of aggregating requests and calling listeners only after all request chain is executed or failed.\nAlso we want to make caches faster using https://github.com/RuedigerMoeller/fast-serialization\nAnd we want to make transparent for developer such behaviour as: if we have cached values, then show them, then reload and update data from network, and then refresh screen.\nIf you are interested in, we can discuss it and answer any questions.\n. ",
    "theyann": "I love this!\n. But that's still at the service level, I would need something like that but at request level ...\nOr maybe have some accessor to the service from the spice manager to be able to change something in there but it's a bad idea in my opinion.\n. Ok I'll check that request runner, I've never actually looked at that. Thanks\n. createRequestRunner is currently private though ...\n. ",
    "sooraj-e": "Request Class\nhere tags = String.format(\"[\\\"keywords:default=%s\\\"]\", mTag);\njava\n @Override\n    public MVMediaSearch loadDataFromNetwork() throws Exception {\n        String search=\"\";\n        if(!tags.equals(Constants.EMPTY_DATA))\n            search=\"&tags=\"+tags;\n        return getRestTemplate().getForObject( Constants.BASE_URL+\"/media/search?token=\"+token+search, MVMediaSearch.class );\n    }\n. its working fine when i use google http client. closing issue since it is related to spring android\n. Im using Simple XML via google http client like this for parsing XML\nSerializer serializer = new Persister();\nreturn serializer.read(getResultType(), request.execute().getContent());\ncan i use the spring android persist-or for simple XML to achieve caching for this? \n. No didn't get time to. Made it working with the simple XML Parser in spring module. \n. ",
    "bigfatbrowncat": "I'm afraid you haven't quite understood me. I know the meaning of this parameter. The problem is - I don't know the exact cache lifetime when I SEND the REQUEST. I'm not the boss. The server decides, how long its data is valid and send that time value to me within the RESPONSE. \nSo, yes, I need to set the RoboSpice cache lifetime - it's exact what I want, but I need to set it AFTER I have received the response, not before I send the request, like I do now. See?\nSo I need a method to change the lifetime of a cache entry which is already saved. Is there a way to do it?\n. Actually, I don't use Spring Android and don't use any ORM in the project, but I understand your point.\nUnfortunately, the server isn't mine (it belongs to other company) and it's unable to respond with 304. It just send the lifetime of the object with that object. Nothing more.\nHave I understood your point well - the easiest solution for this situation is custom data mapping outside RoboSpice? It's not quite easy way. Maybe there is a simplier method?  Maybe I could subclass some of your classes? Or use any reflection hack? ;)\n. Thank you for your advice, but there is too much code and too few time to refactor the system for using a new ORM library.\nI'm looking forward to a response from the developers.\n. > and read from cache until after that date\nSo I can, for example, keep retrieving the object from cache (with a very long life time) until I consider it invalid and then I can erase the cache and request the new version of the object... Hmmm....\n\nDoes your server always respond with the complete object\n\nYes, it does. And it doesn't support 304.\nThank you for the idea. I'll try it.\n. Oops, sorry. Missed that. Thanks.\n. Bingo. Now we understand each other. Thank you for an advice. I think I will do exactly as you recommend.\n. Yes, it seems to be my fault.\n. Actually, this error message isn't informative. The cause of issue was a lack of a proper CacheManager for a type. I think you could improve the exception handling in this case thus the user shouldn't analyze your code in order to understand his mistake.\nBy the way, how could I close a bug in your bugtracker? I think I have no permission for it, sorry.\n. I use version 1.4.8.\nNo, there is nothing about CacheManager.\nI found the root cause of this problem, but I had no time to analyze your code well. Briefly, my activity calls spiceManager.start(this) in its onStart() and after that (after some other preparations) it starts executing requests with spiceManager.execute().\nAs I found, the problem occurs if I call  spiceManager.execute() before the service is actually bound and doesn't occur if it goes after.\nStrictly speaking if SpiceManager connects to the service before anyone asks it for executing a request, everything's ok.\nI made a dirty workaround - added Thread.sleep(2000) in my onStart method after spiceManager.start(this), so the service has more time. The bug disappeared.\nNow I took all your sources into my project and hacked SpiceServiceConnection class that now it sends me an event after connection. This workaround works well.\nIf it's not just a stupid deadlock which could be fixed easily (I'm not sure how it should work), maybe you could create such an event (something like onBound)...\nPlease, tell me when this is solved thus I could update my version of RoboSpice and remove my hack.\n. ",
    "JuneLeGency": "sorry for forgetting check my email.\nI just folllow the sample \"robospice-sample-ormlite-content-provider\".\nMy model is \n->Unit\nMatchResult->Match->DotaPlayer->Ability\n                    ->BanPick\n100matches  each match 10 player\nbut it seems just insert data one by one not as one commit.\nIt takes more than 2min to cache things.\nLog\n```\n10-23 20:21:04.544: D//RequestRunner.java:274(12274): 20:21:04.556 Thread-509 It tooks 904 ms to process request CachedSpiceRequest [requestCacheKey=userprofilecach, cacheDuration=86400000, spiceRequest=studio.lc.dotaanalysis.dataservice.ISteamUser.FriendRequest_@42816280].\n10-23 20:21:05.445: D//SpiceManager.java:293(12274): 20:21:05.455 main SpiceManager stopping.\n10-23 20:21:05.445: V//SpiceManager.java:738(12274): 20:21:05.458 main Cleared listeners of all requests to launch\n10-23 20:21:05.445: V//SpiceManager.java:769(12274): 20:21:05.461 main Cleared listeners of all pending requests\n10-23 20:21:05.455: V//SpiceManager.java:1171(12274): 20:21:05.465 main Unbinding from service start.\n10-23 20:21:05.455: V//SpiceManager.java:1175(12274): 20:21:05.467 main Unbinding from service.\n10-23 20:21:05.465: D//SpiceManager.java:1177(12274): 20:21:05.473 main Unbound from service : SampleSpiceService\n10-23 20:21:05.465: D//SpiceManager.java:303(12274): 20:21:05.476 main SpiceManager stopped.\n10-23 20:21:05.475: D//SpiceManager.java:256(12274): 20:21:05.482 SpiceManagerThread 0 Interrupted while waiting for new request.\n103ms+5ms, total 83ms\n10-23 20:21:44.907: D/dalvikvm(12274): GC_CONCURRENT freed 5089K, 37% free 11807K/18499K, paused 13ms+6ms, total 92ms\n10-23 20:21:45.588: D/dalvikvm(12274): GC_CONCURRENT freed 5159K, 37% free 11757K/18499K, paused 14ms+7ms, total 88ms\n10-23 20:21:46.228: D/dalvikvm(12274): GC_CONCURRENT freed 4979K, 37% free 11784K/18499K, paused 13ms+4ms, total 90ms\n10-23 20:21:46.839: D/dalvikvm(12274): GC_CONCURRENT freed 5126K, 37% free 11811K/18499K, paused 13ms+16ms, total 96ms\n10-23 20:21:47.480: D/dalvikvm(12274): GC_CONCURRENT freed 5269K, 37% free 11767K/18499K, paused 14ms+5ms, total 94ms\n10-23 20:21:48.120: D/dalvikvm(12274): GC_CONCURRENT freed 4975K, 37% free 11794K/18499K, paused 14ms+5ms, total 86ms\n10-23 20:21:48.741: D/dalvikvm(12274): GC_CONCURRENT freed 5182K, 37% free 11830K/18499K, paused 4ms+6ms, total 85ms\n10-23 20:21:49.352: D/dalvikvm(12274): GC_CONCURRENT freed 5381K, 37% free 11779K/18499K, paused 3ms+5ms, total 84ms\n10-23 20:21:49.952: D/dalvikvm(12274): GC_CONCURRENT freed 5043K, 37% free 11811K/18499K, paused 13ms+15ms, total 103ms\n10-23 20:21:50.603: D/dalvikvm(12274): GC_CONCURRENT freed 5128K, 37% free 11824K/18499K, paused 14ms+6ms, total 79ms\n10-23 20:21:51.224: D/dalvikvm(12274): GC_CONCURRENT freed 5253K, 37% free 11785K/18499K, paused 13ms+8ms, total 97ms\n10-23 20:21:51.844: D/dalvikvm(12274): GC_CONCURRENT freed 5099K, 37% free 11815K/18499K, paused 13ms+4ms, total 81ms\n10-23 20:21:52.495: D/dalvikvm(12274): GC_CONCURRENT freed 5215K, 36% free 11842K/18499K, paused 14ms+16ms, total 93ms\n10-23 20:21:53.126: D/dalvikvm(12274): GC_CONCURRENT freed 5349K, 37% free 11793K/18499K, paused 5ms+17ms, total 85ms\n10-23 20:21:53.786: D/dalvikvm(12274): GC_CONCURRENT freed 5127K, 37% free 11823K/18499K, paused 13ms+4ms, total 97ms\n10-23 20:21:54.457: D/dalvikvm(12274): GC_CONCURRENT freed 5345K, 37% free 11771K/18499K, paused 13ms+16ms, total 100ms\n10-23 20:21:55.178: D/dalvikvm(12274): GC_CONCURRENT freed 5377K, 37% free 11804K/18499K, paused 4ms+7ms, total 101ms\n10-23 20:21:55.878: D/dalvikvm(12274): GC_CONCURRENT freed 5360K, 36% free 11853K/18499K, paused 4ms+4ms, total 96ms\n10-23 20:21:56.519: D/dalvikvm(12274): GC_CONCURRENT freed 5338K, 37% free 11780K/18499K, paused 14ms+6ms, total 85ms\n10-23 20:21:57.130: D/dalvikvm(12274): GC_CONCURRENT freed 5053K, 37% free 11821K/18499K, paused 13ms+5ms, total 79ms\n10-23 20:21:57.771: D/dalvikvm(12274): GC_CONCURRENT freed 5164K, 36% free 11848K/18499K, paused 14ms+5ms, total 83ms\n10-23 20:21:58.371: D/dalvikvm(12274): GC_CONCURRENT freed 5237K, 37% free 11801K/18499K, paused 13ms+5ms, total 75ms\n10-23 20:21:59.032: D/dalvikvm(12274): GC_CONCURRENT freed 5266K, 36% free 11843K/18499K, paused 3ms+6ms, total 83ms\n10-23 20:21:59.713: D/dalvikvm(12274): GC_CONCURRENT freed 5211K, 36% free 11865K/18499K, paused 13ms+4ms, total 88ms\n10-23 20:22:00.463: D/dalvikvm(12274): GC_CONCURRENT freed 5401K, 37% free 11808K/18499K, paused 4ms+17ms, total 87ms\n10-23 20:22:01.124: D/dalvikvm(12274): GC_CONCURRENT freed 5200K, 36% free 11843K/18499K, paused 14ms+7ms, total 85ms\n10-23 20:22:01.805: D/dalvikvm(12274): GC_CONCURRENT freed 5515K, 37% free 11790K/18499K, paused 6ms+5ms, total 96ms\n10-23 20:22:02.486: D/dalvikvm(12274): GC_CONCURRENT freed 5480K, 37% free 11826K/18499K, paused 7ms+9ms, total 116ms\n10-23 20:22:03.146: D/dalvikvm(12274): GC_CONCURRENT freed 5165K, 36% free 11893K/18499K, paused 15ms+16ms, total 97ms\n10-23 20:22:03.777: D/dalvikvm(12274): GC_CONCURRENT freed 5368K, 37% free 11810K/18499K, paused 13ms+6ms, total 82ms\n10-23 20:22:04.418: D/dalvikvm(12274): GC_CONCURRENT freed 5101K, 37% free 11835K/18499K, paused 13ms+5ms, total 86ms\n10-23 20:22:05.088: D/dalvikvm(12274): GC_CONCURRENT freed 5475K, 36% free 11874K/18499K, paused 3ms+15ms, total 101ms\n10-23 20:22:05.759: D/dalvikvm(12274): GC_CONCURRENT freed 5271K, 37% free 11835K/18499K, paused 14ms+15ms, total 104ms\n10-23 20:22:06.410: D/dalvikvm(12274): GC_CONCURRENT freed 5256K, 36% free 11851K/18499K, paused 13ms+5ms, total 82ms\n10-23 20:22:07.070: D/dalvikvm(12274): GC_CONCURRENT freed 5402K, 36% free 11890K/18499K, paused 5ms+4ms, total 91ms\n10-23 20:22:07.751: D/dalvikvm(12274): GC_CONCURRENT freed 5220K, 36% free 11941K/18499K, paused 13ms+6ms, total 101ms\n10-23 20:22:08.412: D/dalvikvm(12274): GC_CONCURRENT freed 5466K, 36% free 11887K/18499K, paused 13ms+7ms, total 98ms\n10-23 20:22:09.083: D/dalvikvm(12274): GC_CONCURRENT freed 5436K, 36% free 11858K/18499K, paused 14ms+5ms, total 94ms\n10-23 20:22:09.733: D/dalvikvm(12274): GC_CONCURRENT freed 5438K, 36% free 11872K/18499K, paused 5ms+5ms, total 90ms\n10-23 20:22:10.404: D/dalvikvm(12274): GC_CONCURRENT freed 5281K, 36% free 11890K/18499K, paused 15ms+16ms, total 101ms\n10-23 20:22:11.065: D/dalvikvm(12274): GC_CONCURRENT freed 5402K, 37% free 11833K/18499K, paused 3ms+5ms, total 80ms\n10-23 20:22:11.715: D/dalvikvm(12274): GC_CONCURRENT freed 5129K, 36% free 11865K/18499K, paused 13ms+4ms, total 80ms\n10-23 20:22:12.366: D/dalvikvm(12274): GC_CONCURRENT freed 5230K, 36% free 11906K/18499K, paused 14ms+7ms, total 87ms\n10-23 20:22:13.037: D/dalvikvm(12274): GC_CONCURRENT freed 5477K, 36% free 11848K/18499K, paused 15ms+5ms, total 86ms\n10-23 20:22:13.687: D/dalvikvm(12274): GC_CONCURRENT freed 5167K, 36% free 11890K/18499K, paused 15ms+4ms, total 85ms\n10-23 20:22:14.398: D/dalvikvm(12274): GC_CONCURRENT freed 5633K, 37% free 11820K/18499K, paused 14ms+16ms, total 114ms\n10-23 20:22:15.049: D/dalvikvm(12274): GC_CONCURRENT freed 5163K, 36% free 11855K/18499K, paused 13ms+5ms, total 81ms\n10-23 20:22:15.720: D/dalvikvm(12274): GC_CONCURRENT freed 5198K, 36% free 11974K/18499K, paused 14ms+4ms, total 93ms\n10-23 20:22:16.390: D/dalvikvm(12274): GC_CONCURRENT freed 5746K, 37% free 11831K/18499K, paused 4ms+9ms, total 77ms\n10-23 20:22:17.061: D/dalvikvm(12274): GC_CONCURRENT freed 5141K, 36% free 11882K/18499K, paused 13ms+18ms, total 104ms\n10-23 20:22:17.752: D/dalvikvm(12274): GC_CONCURRENT freed 5270K, 36% free 11921K/18499K, paused 13ms+15ms, total 92ms\n10-23 20:22:18.443: D/dalvikvm(12274): GC_CONCURRENT freed 5642K, 36% free 11870K/18499K, paused 4ms+5ms, total 89ms\n10-23 20:22:19.093: D/dalvikvm(12274): GC_CONCURRENT freed 5265K, 36% free 11895K/18499K, paused 15ms+5ms, total 84ms\n10-23 20:22:19.764: D/dalvikvm(12274): GC_CONCURRENT freed 5259K, 36% free 11939K/18499K, paused 15ms+5ms, total 84ms\n10-23 20:22:20.465: D/dalvikvm(12274): GC_CONCURRENT freed 5359K, 36% free 11894K/18499K, paused 14ms+15ms, total 103ms\n10-23 20:22:21.095: D/dalvikvm(12274): GC_CONCURRENT freed 5349K, 36% free 11914K/18499K, paused 14ms+5ms, total 83ms\n10-23 20:22:21.796: D/dalvikvm(12274): GC_CONCURRENT freed 5514K, 36% free 11860K/18499K, paused 13ms+9ms, total 98ms\n10-23 20:22:22.497: D/dalvikvm(12274): GC_CONCURRENT freed 5430K, 36% free 11905K/18499K, paused 16ms+16ms, total 118ms\n10-23 20:22:23.198: D/dalvikvm(12274): GC_CONCURRENT freed 5320K, 36% free 11984K/18499K, paused 14ms+5ms, total 89ms\n10-23 20:22:23.898: D/dalvikvm(12274): GC_CONCURRENT freed 5671K, 36% free 11876K/18499K, paused 13ms+5ms, total 90ms\n10-23 20:22:24.579: D/dalvikvm(12274): GC_CONCURRENT freed 5270K, 36% free 11917K/18499K, paused 13ms+15ms, total 94ms\n10-23 20:22:25.270: D/dalvikvm(12274): GC_CONCURRENT freed 5398K, 36% free 11962K/18499K, paused 13ms+15ms, total 99ms\n10-23 20:22:26.011: D/dalvikvm(12274): GC_CONCURRENT freed 5682K, 36% free 11906K/18499K, paused 4ms+5ms, total 86ms\n10-23 20:22:26.711: D/dalvikvm(12274): GC_CONCURRENT freed 5467K, 36% free 11990K/18499K, paused 5ms+7ms, total 112ms\n10-23 20:22:27.402: D/dalvikvm(12274): GC_CONCURRENT freed 5738K, 36% free 11866K/18499K, paused 3ms+4ms, total 80ms\n10-23 20:22:28.113: D/dalvikvm(12274): GC_CONCURRENT freed 5542K, 36% free 11920K/18499K, paused 3ms+5ms, total 95ms\n10-23 20:22:28.774: D/dalvikvm(12274): GC_CONCURRENT freed 5391K, 36% free 11998K/18499K, paused 14ms+8ms, total 95ms\n10-23 20:22:29.494: D/dalvikvm(12274): GC_CONCURRENT freed 5630K, 36% free 11915K/18499K, paused 14ms+6ms, total 87ms\n10-23 20:22:30.145: D/dalvikvm(12274): GC_CONCURRENT freed 5358K, 36% free 11964K/18499K, paused 14ms+16ms, total 106ms\n10-23 20:22:30.886: D/dalvikvm(12274): GC_CONCURRENT freed 5367K, 36% free 12019K/18499K, paused 13ms+5ms, total 96ms\n10-23 20:22:31.597: D/dalvikvm(12274): GC_CONCURRENT freed 5796K, 36% free 11940K/18499K, paused 13ms+16ms, total 106ms\n10-23 20:22:32.287: D/dalvikvm(12274): GC_CONCURRENT freed 5527K, 36% free 11979K/18499K, paused 3ms+6ms, total 74ms\n10-23 20:22:33.058: D/dalvikvm(12274): GC_CONCURRENT freed 5722K, 36% free 11908K/18499K, paused 13ms+5ms, total 89ms\n10-23 20:22:33.729: D/dalvikvm(12274): GC_CONCURRENT freed 5361K, 36% free 11953K/18499K, paused 13ms+15ms, total 93ms\n10-23 20:22:34.430: D/dalvikvm(12274): GC_CONCURRENT freed 5365K, 36% free 12005K/18499K, paused 14ms+17ms, total 99ms\n10-23 20:22:35.230: D/dalvikvm(12274): GC_CONCURRENT freed 5877K, 36% free 11943K/18567K, paused 3ms+6ms, total 90ms\n10-23 20:22:35.931: D/dalvikvm(12274): GC_CONCURRENT freed 5634K, 36% free 11981K/18567K, paused 6ms+9ms, total 97ms\n10-23 20:22:36.652: D/dalvikvm(12274): GC_CONCURRENT freed 5691K, 36% free 11924K/18567K, paused 3ms+6ms, total 86ms\n10-23 20:22:37.323: D/dalvikvm(12274): GC_CONCURRENT freed 5245K, 36% free 11968K/18567K, paused 13ms+16ms, total 100ms\n10-23 20:22:38.003: D/dalvikvm(12274): GC_CONCURRENT freed 5399K, 35% free 12115K/18567K, paused 13ms+6ms, total 110ms\n10-23 20:22:38.744: D/dalvikvm(12274): GC_CONCURRENT freed 6295K, 38% free 11940K/19015K, paused 3ms+5ms, total 95ms\n10-23 20:22:39.475: D/dalvikvm(12274): GC_CONCURRENT freed 5532K, 37% free 11996K/19015K, paused 4ms+6ms, total 84ms\n10-23 20:22:40.326: D/dalvikvm(12274): GC_CONCURRENT freed 5368K, 37% free 12061K/19015K, paused 15ms+5ms, total 90ms\n10-23 20:22:41.097: D/dalvikvm(12274): GC_CONCURRENT freed 5828K, 38% free 11977K/19015K, paused 13ms+15ms, total 109ms\n10-23 20:22:41.838: D/dalvikvm(12274): GC_CONCURRENT freed 5406K, 37% free 12141K/19015K, paused 14ms+4ms, total 101ms\n10-23 20:22:42.718: D/dalvikvm(12274): GC_CONCURRENT freed 6577K, 39% free 11966K/19335K, paused 13ms+19ms, total 152ms\n10-23 20:22:43.449: D/dalvikvm(12274): GC_CONCURRENT freed 5642K, 38% free 12005K/19335K, paused 14ms+6ms, total 92ms\n10-23 20:22:44.170: D/dalvikvm(12274): GC_CONCURRENT freed 5499K, 38% free 12060K/19335K, paused 13ms+5ms, total 86ms\n10-23 20:22:44.921: D/dalvikvm(12274): GC_CONCURRENT freed 5983K, 38% free 11997K/19335K, paused 13ms+17ms, total 113ms\n10-23 20:22:45.672: D/dalvikvm(12274): GC_CONCURRENT freed 5566K, 38% free 12119K/19335K, paused 13ms+14ms, total 107ms\n10-23 20:22:46.412: D/dalvikvm(12274): GC_CONCURRENT freed 5966K, 39% free 11979K/19335K, paused 13ms+6ms, total 85ms\n10-23 20:22:47.113: D/dalvikvm(12274): GC_CONCURRENT freed 5474K, 38% free 12033K/19335K, paused 14ms+4ms, total 88ms\n10-23 20:22:47.844: D/dalvikvm(12274): GC_CONCURRENT freed 5630K, 38% free 12079K/19335K, paused 14ms+5ms, total 85ms\n10-23 20:22:48.595: D/dalvikvm(12274): GC_CONCURRENT freed 5876K, 38% free 12031K/19335K, paused 13ms+9ms, total 105ms\n10-23 20:22:49.376: D/dalvikvm(12274): GC_CONCURRENT freed 5633K, 38% free 12104K/19335K, paused 13ms+7ms, total 97ms\n10-23 20:22:50.156: D/dalvikvm(12274): GC_CONCURRENT freed 6104K, 39% free 11985K/19335K, paused 3ms+9ms, total 106ms\n10-23 20:22:50.897: D/dalvikvm(12274): GC_CONCURRENT freed 5577K, 38% free 12063K/19335K, paused 4ms+17ms, total 103ms\n10-23 20:22:51.688: D/dalvikvm(12274): GC_CONCURRENT freed 5797K, 38% free 12114K/19335K, paused 14ms+17ms, total 109ms\n10-23 20:22:52.439: D/dalvikvm(12274): GC_CONCURRENT freed 6013K, 38% free 12048K/19335K, paused 13ms+15ms, total 108ms\n10-23 20:22:53.170: D/dalvikvm(12274): GC_CONCURRENT freed 5632K, 38% free 12103K/19335K, paused 14ms+6ms, total 93ms\n10-23 20:22:53.910: D/dalvikvm(12274): GC_CONCURRENT freed 5964K, 38% free 12016K/19335K, paused 13ms+4ms, total 90ms\n10-23 20:22:54.631: D/dalvikvm(12274): GC_CONCURRENT freed 5767K, 38% free 12062K/19335K, paused 13ms+5ms, total 104ms\n10-23 20:22:55.432: D/dalvikvm(12274): GC_CONCURRENT freed 5763K, 38% free 12172K/19335K, paused 13ms+5ms, total 95ms\n10-23 20:22:56.233: D/dalvikvm(12274): GC_CONCURRENT freed 6157K, 38% free 12056K/19335K, paused 4ms+16ms, total 103ms\n10-23 20:22:57.064: D/dalvikvm(12274): GC_CONCURRENT freed 5667K, 38% free 12150K/19335K, paused 13ms+7ms, total 93ms\n10-23 20:22:57.815: D/dalvikvm(12274): GC_CONCURRENT freed 6165K, 38% free 12010K/19335K, paused 13ms+5ms, total 108ms\n10-23 20:22:58.565: D/dalvikvm(12274): GC_CONCURRENT freed 5440K, 38% free 12097K/19335K, paused 13ms+17ms, total 109ms\n10-23 20:22:59.386: D/dalvikvm(12274): GC_CONCURRENT freed 5764K, 38% free 12165K/19335K, paused 13ms+6ms, total 100ms\n10-23 20:23:00.157: D/dalvikvm(12274): GC_CONCURRENT freed 6076K, 38% free 12055K/19335K, paused 13ms+15ms, total 103ms\n10-23 20:23:00.898: D/dalvikvm(12274): GC_CONCURRENT freed 5445K, 38% free 12147K/19335K, paused 14ms+16ms, total 108ms\n10-23 20:23:01.689: D/dalvikvm(12274): GC_CONCURRENT freed 6100K, 38% free 12051K/19335K, paused 14ms+5ms, total 88ms\n10-23 20:23:02.430: D/dalvikvm(12274): GC_CONCURRENT freed 5671K, 38% free 12109K/19335K, paused 13ms+5ms, total 94ms\n10-23 20:23:03.220: D/dalvikvm(12274): GC_CONCURRENT freed 5790K, 37% free 12192K/19335K, paused 15ms+5ms, total 92ms\n10-23 20:23:04.001: D/dalvikvm(12274): GC_CONCURRENT freed 6232K, 38% free 12126K/19335K, paused 13ms+5ms, total 102ms\n10-23 20:23:04.822: D/dalvikvm(12274): GC_CONCURRENT freed 5882K, 37% free 12182K/19335K, paused 13ms+17ms, total 105ms\n10-23 20:23:05.623: D/dalvikvm(12274): GC_CONCURRENT freed 6096K, 38% free 12071K/19335K, paused 14ms+16ms, total 104ms\n10-23 20:23:06.404: D/dalvikvm(12274): GC_CONCURRENT freed 5694K, 38% free 12159K/19335K, paused 15ms+5ms, total 94ms\n10-23 20:23:07.195: D/dalvikvm(12274): GC_CONCURRENT freed 6054K, 37% free 12205K/19335K, paused 15ms+7ms, total 102ms\n10-23 20:23:08.045: D/dalvikvm(12274): GC_CONCURRENT freed 6292K, 38% free 12134K/19335K, paused 4ms+5ms, total 82ms\n10-23 20:23:08.796: D/dalvikvm(12274): GC_CONCURRENT freed 5903K, 37% free 12227K/19335K, paused 14ms+5ms, total 93ms\n10-23 20:23:09.617: D/dalvikvm(12274): GC_CONCURRENT freed 6188K, 38% free 12121K/19335K, paused 15ms+18ms, total 122ms\n10-23 20:23:10.448: D/dalvikvm(12274): GC_CONCURRENT freed 5796K, 37% free 12184K/19335K, paused 13ms+17ms, total 108ms\n10-23 20:23:11.199: D/dalvikvm(12274): GC_CONCURRENT freed 6163K, 38% free 12085K/19335K, paused 13ms+5ms, total 91ms\n10-23 20:23:11.960: D/dalvikvm(12274): GC_CONCURRENT freed 5768K, 38% free 12151K/19335K, paused 14ms+5ms, total 99ms\n10-23 20:23:12.761: D/dalvikvm(12274): GC_CONCURRENT freed 6010K, 37% free 12239K/19335K, paused 4ms+6ms, total 94ms\n10-23 20:23:13.601: D/dalvikvm(12274): GC_CONCURRENT freed 6643K, 38% free 12152K/19591K, paused 3ms+5ms, total 101ms\n10-23 20:23:14.442: D/dalvikvm(12274): GC_CONCURRENT freed 5825K, 38% free 12208K/19591K, paused 13ms+8ms, total 92ms\n10-23 20:23:15.333: D/dalvikvm(12274): GC_CONCURRENT freed 6360K, 38% free 12174K/19591K, paused 13ms+7ms, total 117ms\n10-23 20:23:16.274: D/dalvikvm(12274): GC_CONCURRENT freed 5934K, 38% free 12215K/19591K, paused 15ms+5ms, total 101ms\n10-23 20:23:17.115: D/dalvikvm(12274): GC_CONCURRENT freed 5997K, 38% free 12285K/19591K, paused 14ms+6ms, total 96ms\n10-23 20:23:18.006: D/dalvikvm(12274): GC_CONCURRENT freed 6410K, 38% free 12256K/19591K, paused 14ms+19ms, total 140ms\n10-23 20:23:18.887: D/dalvikvm(12274): GC_CONCURRENT freed 6185K, 38% free 12293K/19591K, paused 5ms+5ms, total 84ms\n10-23 20:23:19.718: D/dalvikvm(12274): GC_CONCURRENT freed 6440K, 38% free 12190K/19591K, paused 4ms+5ms, total 82ms\n10-23 20:23:20.549: D/dalvikvm(12274): GC_CONCURRENT freed 6102K, 38% free 12259K/19591K, paused 14ms+16ms, total 111ms\n10-23 20:23:21.390: D/dalvikvm(12274): GC_CONCURRENT freed 6336K, 38% free 12163K/19591K, paused 14ms+7ms, total 95ms\n10-23 20:23:22.201: D/dalvikvm(12274): GC_CONCURRENT freed 5898K, 38% free 12235K/19591K, paused 14ms+5ms, total 92ms\n10-23 20:23:23.031: D/dalvikvm(12274): GC_CONCURRENT freed 6190K, 37% free 12367K/19591K, paused 4ms+5ms, total 87ms\n10-23 20:23:23.862: D/dalvikvm(12274): GC_CONCURRENT freed 6521K, 38% free 12231K/19591K, paused 13ms+5ms, total 99ms\n10-23 20:23:24.673: D/dalvikvm(12274): GC_CONCURRENT freed 6203K, 38% free 12299K/19591K, paused 14ms+5ms, total 104ms\n10-23 20:23:25.614: D/dalvikvm(12274): GC_CONCURRENT freed 6600K, 38% free 12246K/19591K, paused 3ms+5ms, total 95ms\n10-23 20:23:26.495: D/dalvikvm(12274): GC_CONCURRENT freed 6170K, 38% free 12309K/19591K, paused 14ms+16ms, total 108ms\n10-23 20:23:27.386: D/dalvikvm(12274): GC_CONCURRENT freed 6421K, 38% free 12205K/19591K, paused 14ms+15ms, total 110ms\n10-23 20:23:28.207: D/dalvikvm(12274): GC_CONCURRENT freed 6111K, 38% free 12290K/19591K, paused 14ms+5ms, total 108ms\n10-23 20:23:29.118: D/dalvikvm(12274): GC_CONCURRENT freed 6334K, 37% free 12378K/19591K, paused 14ms+7ms, total 114ms\n10-23 20:23:29.979: D/dalvikvm(12274): GC_CONCURRENT freed 6387K, 38% free 12279K/19591K, paused 13ms+16ms, total 111ms\n10-23 20:23:30.910: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 37% free 12411K/19591K, paused 13ms+7ms, total 102ms\n10-23 20:23:31.871: D/dalvikvm(12274): GC_CONCURRENT freed 6440K, 38% free 12271K/19591K, paused 13ms+4ms, total 95ms\n10-23 20:23:32.692: D/dalvikvm(12274): GC_CONCURRENT freed 6315K, 38% free 12338K/19591K, paused 13ms+6ms, total 97ms\n10-23 20:23:33.563: D/dalvikvm(12274): GC_CONCURRENT freed 6544K, 38% free 12249K/19591K, paused 15ms+5ms, total 101ms\n10-23 20:23:34.424: D/dalvikvm(12274): GC_CONCURRENT freed 6211K, 37% free 12351K/19591K, paused 13ms+7ms, total 95ms\n10-23 20:23:35.285: D/dalvikvm(12274): GC_CONCURRENT freed 6130K, 37% free 12437K/19591K, paused 13ms+17ms, total 118ms\n10-23 20:23:36.125: D/dalvikvm(12274): GC_CONCURRENT freed 6570K, 38% free 12334K/19655K, paused 5ms+16ms, total 97ms\n10-23 20:23:36.996: D/dalvikvm(12274): GC_CONCURRENT freed 6324K, 37% free 12423K/19655K, paused 13ms+17ms, total 112ms\n10-23 20:23:37.867: D/dalvikvm(12274): GC_CONCURRENT freed 6757K, 38% free 12363K/19847K, paused 4ms+9ms, total 107ms\n10-23 20:23:38.748: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 38% free 12421K/19847K, paused 15ms+7ms, total 103ms\n10-23 20:23:39.639: D/dalvikvm(12274): GC_CONCURRENT freed 6540K, 38% free 12319K/19847K, paused 13ms+17ms, total 118ms\n10-23 20:23:40.530: D/dalvikvm(12274): GC_CONCURRENT freed 6411K, 38% free 12460K/19847K, paused 15ms+5ms, total 105ms\n10-23 20:23:41.421: D/dalvikvm(12274): GC_CONCURRENT freed 6579K, 38% free 12353K/19847K, paused 13ms+5ms, total 106ms\n10-23 20:23:42.272: D/dalvikvm(12274): GC_CONCURRENT freed 6264K, 38% free 12404K/19847K, paused 13ms+16ms, total 115ms\n10-23 20:23:43.173: D/dalvikvm(12274): GC_CONCURRENT freed 6365K, 38% free 12495K/19847K, paused 13ms+5ms, total 104ms\n10-23 20:23:44.054: D/dalvikvm(12274): GC_CONCURRENT freed 6551K, 38% free 12433K/19847K, paused 13ms+15ms, total 117ms\n10-23 20:23:44.965: D/dalvikvm(12274): GC_CONCURRENT freed 6612K, 38% free 12492K/19847K, paused 13ms+18ms, total 131ms\n10-23 20:23:45.876: D/dalvikvm(12274): GC_CONCURRENT freed 6496K, 38% free 12381K/19847K, paused 13ms+7ms, total 102ms\n10-23 20:23:46.747: D/dalvikvm(12274): GC_CONCURRENT freed 6190K, 38% free 12495K/19847K, paused 13ms+16ms, total 137ms\n10-23 20:23:47.598: D/dalvikvm(12274): GC_CONCURRENT freed 6523K, 38% free 12388K/19847K, paused 13ms+6ms, total 118ms\n10-23 20:23:48.479: D/dalvikvm(12274): GC_CONCURRENT freed 6423K, 37% free 12565K/19847K, paused 13ms+5ms, total 104ms\n10-23 20:23:49.400: D/dalvikvm(12274): GC_CONCURRENT freed 6663K, 38% free 12351K/19847K, paused 13ms+17ms, total 116ms\n10-23 20:23:50.301: D/dalvikvm(12274): GC_CONCURRENT freed 6265K, 38% free 12499K/19847K, paused 13ms+6ms, total 106ms\n10-23 20:23:51.182: D/dalvikvm(12274): GC_CONCURRENT freed 6257K, 37% free 12566K/19847K, paused 13ms+5ms, total 103ms\n10-23 20:23:52.072: D/dalvikvm(12274): GC_CONCURRENT freed 6441K, 38% free 12428K/19847K, paused 13ms+7ms, total 100ms\n10-23 20:23:52.963: D/dalvikvm(12274): GC_CONCURRENT freed 6318K, 37% free 12542K/19847K, paused 14ms+16ms, total 115ms\n10-23 20:23:53.864: D/dalvikvm(12274): GC_CONCURRENT freed 6624K, 38% free 12429K/19847K, paused 3ms+17ms, total 103ms\n10-23 20:23:54.745: D/dalvikvm(12274): GC_CONCURRENT freed 6324K, 37% free 12534K/19847K, paused 13ms+6ms, total 104ms\n10-23 20:23:55.656: D/dalvikvm(12274): GC_CONCURRENT freed 6574K, 38% free 12415K/19847K, paused 3ms+9ms, total 101ms\n10-23 20:23:56.497: D/dalvikvm(12274): GC_CONCURRENT freed 6212K, 37% free 12527K/19847K, paused 16ms+7ms, total 107ms\n10-23 20:23:57.388: D/dalvikvm(12274): GC_CONCURRENT freed 6618K, 37% free 12625K/20039K, paused 4ms+7ms, total 107ms\n10-23 20:23:58.319: D/dalvikvm(12274): GC_CONCURRENT freed 6575K, 38% free 12506K/20039K, paused 13ms+17ms, total 113ms\n10-23 20:23:59.230: D/dalvikvm(12274): GC_CONCURRENT freed 6670K, 38% free 12617K/20039K, paused 14ms+9ms, total 128ms\n10-23 20:24:00.191: D/dalvikvm(12274): GC_CONCURRENT freed 6754K, 38% free 12508K/20039K, paused 14ms+15ms, total 154ms\n10-23 20:24:01.072: D/dalvikvm(12274): GC_CONCURRENT freed 6462K, 38% free 12614K/20039K, paused 5ms+7ms, total 100ms\n10-23 20:24:02.053: D/dalvikvm(12274): GC_CONCURRENT freed 6858K, 38% free 12506K/20167K, paused 13ms+5ms, total 123ms\n10-23 20:24:02.934: D/dalvikvm(12274): GC_CONCURRENT freed 6390K, 38% free 12610K/20167K, paused 13ms+6ms, total 102ms\n10-23 20:24:03.865: D/dalvikvm(12274): GC_CONCURRENT freed 6790K, 39% free 12490K/20167K, paused 6ms+5ms, total 118ms\n10-23 20:24:04.786: D/dalvikvm(12274): GC_CONCURRENT freed 6372K, 38% free 12604K/20167K, paused 13ms+5ms, total 107ms\n10-23 20:24:05.707: D/dalvikvm(12274): GC_CONCURRENT freed 6535K, 39% free 12485K/20167K, paused 14ms+5ms, total 105ms\n10-23 20:24:06.578: D/dalvikvm(12274): GC_CONCURRENT freed 6087K, 38% free 12591K/20167K, paused 14ms+16ms, total 112ms\n10-23 20:24:07.459: D/dalvikvm(12274): GC_CONCURRENT freed 6291K, 38% free 12690K/20167K, paused 13ms+5ms, total 102ms\n10-23 20:24:08.380: D/dalvikvm(12274): GC_CONCURRENT freed 6642K, 38% free 12573K/20167K, paused 13ms+5ms, total 113ms\n10-23 20:24:09.291: D/dalvikvm(12274): GC_CONCURRENT freed 6308K, 37% free 12735K/20167K, paused 13ms+5ms, total 104ms\n10-23 20:24:10.182: D/dalvikvm(12274): GC_CONCURRENT freed 6717K, 38% free 12594K/20167K, paused 5ms+5ms, total 101ms\n10-23 20:24:11.173: D/dalvikvm(12274): GC_CONCURRENT freed 6213K, 38% free 12690K/20167K, paused 14ms+6ms, total 123ms\n10-23 20:24:12.084: D/dalvikvm(12274): GC_CONCURRENT freed 6550K, 38% free 12562K/20167K, paused 13ms+6ms, total 121ms\n10-23 20:24:12.965: D/dalvikvm(12274): GC_CONCURRENT freed 6393K, 38% free 12677K/20167K, paused 15ms+7ms, total 105ms\n10-23 20:24:13.886: D/dalvikvm(12274): GC_CONCURRENT freed 6316K, 37% free 12774K/20167K, paused 14ms+7ms, total 109ms\n10-23 20:24:14.797: D/dalvikvm(12274): GC_CONCURRENT freed 6634K, 38% free 12649K/20167K, paused 13ms+5ms, total 105ms\n10-23 20:24:15.698: D/dalvikvm(12274): GC_CONCURRENT freed 6116K, 37% free 12762K/20167K, paused 14ms+7ms, total 105ms\n10-23 20:24:16.529: D/dalvikvm(12274): GC_CONCURRENT freed 6560K, 38% free 12638K/20167K, paused 13ms+5ms, total 98ms\n10-23 20:24:17.430: D/dalvikvm(12274): GC_CONCURRENT freed 6369K, 37% free 12763K/20167K, paused 15ms+16ms, total 124ms\n10-23 20:24:18.341: D/dalvikvm(12274): GC_CONCURRENT freed 6614K, 38% free 12615K/20167K, paused 13ms+5ms, total 102ms\n10-23 20:24:19.251: D/dalvikvm(12274): GC_CONCURRENT freed 6552K, 37% free 12739K/20167K, paused 4ms+6ms, total 103ms\n10-23 20:24:20.132: D/dalvikvm(12274): GC_CONCURRENT freed 6632K, 38% free 12634K/20167K, paused 13ms+5ms, total 106ms\n10-23 20:24:21.013: D/dalvikvm(12274): GC_CONCURRENT freed 6401K, 37% free 12771K/20167K, paused 13ms+6ms, total 104ms\n10-23 20:24:21.874: D/dalvikvm(12274): GC_CONCURRENT freed 6334K, 37% free 12845K/20167K, paused 4ms+15ms, total 110ms\n10-23 20:24:22.795: D/dalvikvm(12274): GC_CONCURRENT freed 6641K, 37% free 12733K/20167K, paused 13ms+16ms, total 130ms\n10-23 20:24:23.726: D/dalvikvm(12274): GC_CONCURRENT freed 6618K, 37% free 12831K/20231K, paused 4ms+19ms, total 120ms\n10-23 20:24:24.627: D/dalvikvm(12274): GC_CONCURRENT freed 6713K, 38% free 12709K/20231K, paused 14ms+5ms, total 110ms\n10-23 20:24:25.618: D/dalvikvm(12274): GC_CONCURRENT freed 6649K, 37% free 12842K/20231K, paused 7ms+6ms, total 127ms\n10-23 20:24:26.569: D/dalvikvm(12274): GC_CONCURRENT freed 6773K, 38% free 12715K/20231K, paused 5ms+16ms, total 122ms\n10-23 20:24:27.490: D/dalvikvm(12274): GC_CONCURRENT freed 6604K, 37% free 12824K/20231K, paused 5ms+10ms, total 107ms\n10-23 20:24:28.451: D/dalvikvm(12274): GC_CONCURRENT freed 6787K, 38% free 12707K/20295K, paused 6ms+19ms, total 136ms\n10-23 20:24:29.362: D/dalvikvm(12274): GC_CONCURRENT freed 6387K, 37% free 12818K/20295K, paused 13ms+16ms, total 118ms\n10-23 20:24:30.283: D/dalvikvm(12274): GC_CONCURRENT freed 6327K, 37% free 12944K/20295K, paused 13ms+5ms, total 111ms\n10-23 20:24:31.204: D/dalvikvm(12274): GC_CONCURRENT freed 6670K, 37% free 12814K/20295K, paused 4ms+7ms, total 98ms\n10-23 20:24:32.125: D/dalvikvm(12274): GC_CONCURRENT freed 6099K, 37% free 12936K/20295K, paused 13ms+16ms, total 112ms\n10-23 20:24:33.066: D/dalvikvm(12274): GC_CONCURRENT freed 6633K, 37% free 12803K/20295K, paused 13ms+10ms, total 123ms\n10-23 20:24:33.997: D/dalvikvm(12274): GC_CONCURRENT freed 6237K, 37% free 12960K/20295K, paused 4ms+20ms, total 113ms\n10-23 20:24:34.948: D/dalvikvm(12274): GC_CONCURRENT freed 6588K, 37% free 12847K/20295K, paused 14ms+18ms, total 147ms\n10-23 20:24:36.119: D/dalvikvm(12274): GC_CONCURRENT freed 6396K, 36% free 12996K/20295K, paused 14ms+5ms, total 123ms\n10-23 20:24:37.010: D/dalvikvm(12274): GC_CONCURRENT freed 6313K, 36% free 13027K/20295K, paused 13ms+5ms, total 112ms\n10-23 20:24:37.911: D/dalvikvm(12274): GC_CONCURRENT freed 6576K, 37% free 12880K/20295K, paused 13ms+17ms, total 122ms\n10-23 20:24:38.993: D/dalvikvm(12274): GC_CONCURRENT freed 6328K, 36% free 13014K/20295K, paused 14ms+5ms, total 113ms\n10-23 20:24:39.924: D/dalvikvm(12274): GC_CONCURRENT freed 6621K, 37% free 12878K/20295K, paused 15ms+16ms, total 120ms\n10-23 20:24:40.865: D/dalvikvm(12274): GC_CONCURRENT freed 6354K, 36% free 13028K/20295K, paused 13ms+5ms, total 122ms\n10-23 20:24:41.846: D/dalvikvm(12274): GC_CONCURRENT freed 6852K, 37% free 13074K/20487K, paused 5ms+8ms, total 133ms\n10-23 20:24:42.837: D/dalvikvm(12274): GC_CONCURRENT freed 6639K, 37% free 13017K/20487K, paused 4ms+15ms, total 114ms\n10-23 20:24:43.778: D/dalvikvm(12274): GC_CONCURRENT freed 6706K, 38% free 12892K/20487K, paused 14ms+22ms, total 131ms\n10-23 20:24:44.679: D/dalvikvm(12274): GC_CONCURRENT freed 6198K, 37% free 12989K/20487K, paused 13ms+15ms, total 121ms\n10-23 20:24:45.640: D/dalvikvm(12274): GC_CONCURRENT freed 6296K, 37% free 13109K/20487K, paused 14ms+16ms, total 118ms\n10-23 20:24:46.631: D/dalvikvm(12274): GC_CONCURRENT freed 6850K, 38% free 12971K/20615K, paused 4ms+16ms, total 126ms\n10-23 20:24:47.642: D/dalvikvm(12274): GC_CONCURRENT freed 6623K, 37% free 13106K/20615K, paused 7ms+10ms, total 120ms\n10-23 20:24:48.603: D/dalvikvm(12274): GC_CONCURRENT freed 6875K, 37% free 13003K/20615K, paused 5ms+7ms, total 117ms\n10-23 20:24:49.554: D/dalvikvm(12274): GC_CONCURRENT freed 6491K, 37% free 13103K/20615K, paused 14ms+5ms, total 116ms\n10-23 20:24:50.505: D/dalvikvm(12274): GC_CONCURRENT freed 6653K, 38% free 12965K/20615K, paused 13ms+6ms, total 113ms\n10-23 20:24:51.476: D/dalvikvm(12274): GC_CONCURRENT freed 6647K, 37% free 13124K/20615K, paused 14ms+6ms, total 139ms\n10-23 20:24:52.427: D//RequestProgressManager.java:75(12274): 20:24:52.441 Thread-516 Sending progress COMPLETE\n10-23 20:24:52.427: D//SpiceServiceListenerNotifier.java:149(12274): 20:24:52.442 Thread-516 Message queue is Handler (android.os.Handler) {42803a18}\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:131(12274): 20:24:52.444 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42ba41a0\n10-23 20:24:52.437: D//SpiceServiceListenerNotifier.java:149(12274): 20:24:52.446 Thread-516 Message queue is Handler (android.os.Handler) {42803a18}\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:166(12274): 20:24:52.447 main Notifying 1 listeners of request success\n10-23 20:24:52.437: V//DefaultRequestListenerNotifier.java:172(12274): 20:24:52.451 main Notifying \n10-23 20:24:52.447: V//RequestProgressManager.java:153(12274): 20:24:52.453 Thread-516 Removing CachedSpiceRequest [requestCacheKey=matchcache, cacheDuration=0, spiceRequest=studio.lc.dotaanalysis.dataservice.BaseDataAdapter$1@42b71730]  size is 1\n10-23 20:24:52.447: D//RequestProgressManager.java:84(12274): 20:24:52.455 Thread-516 Sending all request complete.\n10-23 20:24:52.447: V//SpiceService.java:390(12274): 20:24:52.456 Thread-516 Pending requests : 0\n10-23 20:24:53.338: I/Choreographer(12274): Skipped 31 frames!  The application may be doing too much work on its main thread.\n```\n. No,I may show you some of my code.\nI  think it's normal code.\nService\n```\n JacksonObjectPersisterFactory jacksonObjectPersisterFactory = new JacksonObjectPersisterFactory( application );\n        List< Class< ? >> classCollection = new ArrayList< Class< ? >>();\n    // add persisted classes to class collection\n    classCollection.add( Hero.class );\n    classCollection.add( Heros.class );\n    classCollection.add( MatchResult.class );\n    classCollection.add( Match.class );\n    classCollection.add( DotaPlayer.class );\n    classCollection.add( BanPick.class );\n    classCollection.add( Ability.class );\n    classCollection.add( Unit.class );\n\n    // init\n    RoboSpiceDatabaseHelper databaseHelper = new RoboSpiceDatabaseHelper( application, \"dotasteam\", 1 );\n    InDatabaseObjectPersisterFactory inDatabaseObjectPersisterFactory = new InDatabaseObjectPersisterFactory( application, databaseHelper, classCollection );\n    cacheManager.addPersister( inDatabaseObjectPersisterFactory );\n    cacheManager.addPersister( jacksonObjectPersisterFactory );\n    return cacheManager;\n\n```\nCallMethod\ngetSpiceManager().execute(request, JSON_CACHE_KEY,\n                DurationInMillis.ALWAYS_RETURNED, requestListener);\nThe Request and  requestListener is quite simple.\n. I  was thought our lib has done a lot for caching things to DB ,It seems still has lot work for me .Anyway,Thanks .I will try to fix it.\n. ",
    "gkylafas": "@all, I too used 1.4.8 in my app and saw many crashes in Android 4.0.x.\nHowever, I once received a crash report for 4.1.1 as well, so I am not so sure this is ICS only, though it could be that the specific device was buggy.\nAt the moment, I downgraded my app to 1.4.7 and have seen no such crashes anymore. From what I see, 1.4.7 used a Notification.Builder to create the notification, while 1.4.8 creates one directly. Could it be that the Builder does necessary background work which is skipped when creating a Notification with \"new\"?\n. @stephanenicolas, I will immediately start testing with the snapshots, however my development device runs 4.3 and I don't have access to ICS devices. Will try the simulators, too.\n@DanielNovak, I don't think it's device specific. The crash reports I received from users were for 4.0.3 & 4.0.4 (and one for 4.1.1 as I said earlier), and for various devices.\nSome statistics:\n- ~18% of my user base runs ICS\n- ~2% of my user base experienced the crash\n. @stephanenicolas, OK I think I understand what is happening. According to http://developer.android.com/guide/topics/ui/notifiers/notifications.html#Required, a Notification must contain at least a small icon, a title and a detail text.\nIn 1.4.7, only the icon was set explicitly and the Notification.Builder took care of the rest.\nIn 1.4.8, again only the icon is set explicitly and by not using a Builder, the others were null. This is what the exception is complaining about, the contentView (which presumably needs a title and a detail text) is null.\nSo, I see two solutions:\n- Use the ctor Notification(Context context, int icon, CharSequence tickerText, long when,\n          CharSequence contentTitle, CharSequence contentText, Intent contentIntent).\n  It is public, however it is hidden (you won't find it in the docs).\n- Use setLatestEventInfo(), i.e. I agree with @DanielNovak that it should always be called.\n  (This is also what the above ctor uses. And setLatestEventInfo() in platform/frameworks/base master, uses a Builder internally. See https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/core/java/android/app/Notification.java for details)\nFor the record, I tested 1.4.8 using simulators with APIs 14, 15, 16 and 17.\n- In 14 & 15, I had no trouble triggering the crash: just issue a request and press 'Home' to put the app into background.\n- In 16 & 17, no crash was experienced.\nOn the other hand, I could not find any post-1.4.8 snapshots to test them. Could you point me to them?\n. @stephanenicolas, thanks! Will start testing right away.\nPlease note that emulator's API 16 corresponds to 4.1.2. So, my testing with 1.4.8 indicates that Android versions 4.1.2+ are more tolerant and allow notifications without a title and detail text (despite what the documentation says). \nHowever, it is unclear what happens for 4.0.4 < versions =< 4.1.1.\nI am concerned of the crash I saw for Android 4.1.1 and personally I think it would not hurt to call setLatestEventInfo() all the time. The bad thing is that I do not have access to a 4.1.1 device nor can I create a simulator with 4.1.1 to verify that only 4.0.x. is affected or not.\nIt's your call, though. :-)\n. @stephanenicolas, I repeated the same tests I did for 1.4.8 with 1.4.9-SNAPSHOT.\nNo crashes, and the notification is only briefly shown in 4.0.x (with empty title and detail text) for as long as the request is executed.\n. @stephanenicolas May I provide such a use case?\nSuppose you have an Adapter whose values are obtained from the network. So, you override the Adapter's Filter.performFiltering() and execute a network request there. Since performFiltering() is executed by the system in a non-UI thread, you can execute a synchronous network request. Actually, you MUST execute a synchronous request, because performFiltering() has to return the results. And if you explicitly call your request's loadDataFromNetwork(), you lose all the benefits of the caching/retrying/etc mechanisms.\nFor the moment, @rciovati 's brilliant solution will do just fine! It could probably be used as a basis for a synchronous SpiceManager.execute() as well...\n. ",
    "hoangtuanhai": "please remove me from group !!!!\nOn Tue, Oct 22, 2013 at 3:28 PM, DanielNovak notifications@github.comwrote:\n\n@stephanenicolas https://github.com/stephanenicolas\nI think you could call \"setLatestEventInfo\" in all Android versions just\nto be sure. It's really device specific and it happened only on Samsung\nNote 4.0.4 and only very rarely during our testing. It could maybe happen\non different versions too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/200#issuecomment-26785323\n.\n\n\nTuan Hai HOANG\nVMODEV - CEO & Founder\nPhone: +84 906 685 966\nE-mail: hai@vmodev.com\nwww.vmodev.com\n. ",
    "anshupitlia": "Thanks\n. ",
    "vitaminwater": "Hi,\nCould you elaborate on this sentence few post above ?\n\"And, do you use the Future . get() method in the UI Thread ? If so, you shouldn't, this will block the thread executing it.\"\nI have the anr too when using the get, I don't really understand how to use it.\nI've seen in the documentation that I could use it in with an Executor, but why should do that when isDataInCache is just a call to the database ?\nthanks.\n. Yep, I realized that actually. But I feel like the problem is more on the ormlite's side, which might be a little too \"light\" for the purpose.\nWhat the saveAllForeignObjectsToCache tries to achieve should be in the ORM itself in my opinion.\nAnyway, I ended up doing my own specialized ObjectPersister, kind of ugly, but enough for bootstraping...\nBTW, robospice is great, keep up the good work !\n. Hi stephane,\nI've got a piece of code that saves a model tree, that I use in my app, I'd be glad to show it to you.\nI kinda new to github so I don't really know how to do that.\nThe big problem that happens, is when handling collection relationships, the model in the Collection needs a reference to its \"parent\" model; when traversing the tree, this parent reference must not be traversed, as it would lead to an infinite loop. The (ugly) thing I do is make its name start with \"parent\", the best (in my opinion) would be to create an annotation or add a boolean to the existing ormlite annotation (which is not really feasible).\nAre you interested ?\n. Sorry, no comments in the code:/ Maybe I'd better directly fix the ormlite module.\nhttps://gist.github.com/vitaminwater/dd43eb2164b0d679f112\n. Yeah, the Object store to avoid doing loops seems to be the best possible solution without adding a new annotation that would be like a bad addon over ormlite's existing annotation.\nIt's just that it's would make the whole thing stateful (but is that really a problem?...) . anyway there doesn't seem to be a better solution yet.\nI'll give it a try.\n. ",
    "rey5137": "if the activity made request lost when screen orientation changed, and later I call getFromCacheAndLoadFromNetworkIfExpired() on new activity, how do I pass the same parameter to listener as lost one. With this way, I think I have to save the request data by myself and pass it to new activity, that is more complex than just make listener return the request (like Android listener return the source view trigger listener).\n. Yes, It may look trivial, but it can help us saving time to write code and memory for request data. Imagining if View.OnClickListener() doesn't return a View parameter , you have to pass a listener instances for each view (a bad practice) rather than pass to single instance and using view.getId() for further handling.\n. I usually using one MainActivity with many Fragment, so you can create a SpiceManager in MainActivity and share it with all Fragment.\n. ",
    "rpk98c": "Hi\n@stephanenicolas did you manage to find any time for this? I'm seeing very similar issues in the wild. With ANR's being reported with the threads deadlocked on waitForServiceToBeBound() call.\nFYI I have an Activity that calls SpiceManage.onStart(), immediately followed by a call to getAllCacheKeys(). execute is also called shortly after.\nThanks,\nRyan \n. ",
    "fernandocamargoti": "I had a feeling that I've already posted this issue earlier but I didn't found it. But now, I just found:\nhttps://github.com/octo-online/robospice/issues/197\nThe difference here is that now I'm running the onRequestSucess in the UI Thread using a Handler. When I posted the previous issue (in RS 1.4.7), I wasn't.\nI'm sorry I didn't answer what @stephanenicolas asked me previously. It's because I paused working with this Android app for a while.\nWell, I'm making the request from the Activity on UI Thread and it seems that the user tries to rotate the device when the request is finishing. Then, somehow, the RS is calling my listener when the old Activity has been destroyed.\n. Well, after analysing a log of one of the users, I've seen that the user didn't try to rotate the device. Instead, the user just closed the Activity.\n. In another case, not just the new Activity has been created and the old one destroyed, but it was enough time for the new Activity to be resumed. But this difference is probably because of the UI Thread was busy when I submitted the task to notifyDatasetChanged for the PagerAdapter. So, I think that there's a certain moment when the Activity started the process of destruction and the RS calls the listener's method. Since I'm sending a task for the Handler, this task is executed when the UI Thread isn't busy destroying the old Activity and maybe constructing the new one.\n. Just a little correction: I'm using the version 1.4.7.\n. @stephanenicolas, I can't really reproduce the bug. I unfortunatly have only some user logs of the error.\nI think it's not about the FragmentPagerAdapter, because it just creates the pages of my ViewPager. The request is handled by the Activity and after it's done, the Activity updates the list and notifies the FragmentPagerAdapter.\nI'm logging the lifecycle of the Activity and I can see that the error happens after the onDestroy has been called.\nFor now, I've created a workaround that saves a boolean indicating that the Activity has been destroyed. If this boolean is true, I doesn't execute the onSuccess. To do so, I had to wrap my listeners and I created a class that wraps every call to RoboSpice. I just published this version of the app and I'll see the results soon. If no more users have this error, the RS was really calling the listener in the wrong state.\n. Hello @stephanenicolas,\nThanks for your attention.\nI'm using the version 18 of the support library. I understand your point that it could be calling at the right time and it would be executing something later. But looking at the stacktrace, I can see that the exception occurs in the same stacktrace and thread of the listener:\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction\nandroid.support.v4.app.BackStackRecord.commitInternal\nandroid.support.v4.app.BackStackRecord.commitAllowingStateLoss\nandroid.support.v4.app.FragmentPagerAdapter.finishUpdate\nandroid.support.v4.view.ViewPager.dataSetChanged\nandroid.support.v4.view.ViewPager$PagerObserver.onChanged\nandroid.database.DataSetObservable.notifyChanged\nandroid.support.v4.view.PagerAdapter.notifyDataSetChanged\ncom.soongz.ui.adapter.BuscavelPagerAdapter.notifyDataSetChanged\ncom.soongz.ui.TrendsActivity$TrendsRequestListener.onRequestSuccess\ncom.soongz.ui.TrendsActivity$TrendsRequestListener.onRequestSuccess\nSince the UI Thread is occupied running my onRequestSuccess(), it's not possible for the Activity to be destroyed at the same time. So, looking at this stacktrace, when the onRequestSuccess() was called, the Activity was already destroyed.\nRemember that I have a listener that wraps this listener, passing the job of updating the screen to the UI Thread. Earlier, there wasn't that wrapper. I was wrongly updating the screen in the background thread. But, the error was happening, too.\n. ",
    "joelmoura": "What is returning null exactly? You mean the parameter of onRequestSuccess is null ?\nA: Yes, when onRequestSuccess() is called, the parameter result is null\nprivate final class IntegratedPositionRequestListener implements RequestListener<ResponseIntegratedPosition>, RequestProgressListener {\n        @Override\n        public void onRequestSuccess(ResponseIntegratedPosition result) {/***/}\n}\nCan you distinguish the listeners used in onActivityCreated and in onCreate to be more precise about what's really \nhappening ?\nA.: In onCreate(), there is no listener being passed. In onActivityCreated(), is where the spinnerGroupChooser is created, and it creates a listener IcsSpinner.OnItemSelectedListener() to do an action when a item is selected onItemSelected(). This callback has the spiceManager.execute() that is called everytime the spinnerGroupChooser is created, even on device rotation.\nIs the listener called twice ?\nA.: Yes, usually, after rotation the device and recreating the View, the onItemSelected() is called twice, consequently calling the spiceManager.execute() twice. Has said, usually... because sometimes, it calls once and still returns null.\nIs there any pending request when you rotate the device ?\nA.: This case happened when there is NO pending requests.\nFor the pending request scenarios, I didn't test yet.\n. it is 2 different instances... each block of code i wrote before, are in different activities.\nUnfortunately, I'm not able to provide a test...\nAfter a lot of tries, I have managed to find a solution.\ngetSpiceManager().removeAllDataFromCache();\n        try {\n            FileUtils.cleanDirectory(getActivity().getCacheDir());\n        } catch (IOException e) {\n            Log.e(TAG, \"Could not clean cache directory: \" + e.getMessage());\n        }\nOfc,this erases all the app's cache. Is not the perfect solution.\n. ",
    "onebird100": "Did you manage to find a solution for this, joelmoura? I'm also having the same problem.\n. ",
    "MikolajKakol": "I don't want to build application around any library. In my application architecture I've got few layers and I need the top layer that would be responsible for threading and networking and database management, so my Fragment/Activity doesn't know what is providing the data.\nI didn't want to write it on my own since there are good libs like this. Basically what I have is Fragment that calls requestSomeData(), and then few layers later there is class that will receive that call, that has no idea about life cycle, and I want just to run it in separate thread and pass the result in UI thread to layer that would decide if it should update Fragment content.\nSo maybe it would be good just to automatically close SpiceManager if there was no new task for example 60seconds? Closing it every time when request queue is empty might be not that efficient.\nIs RoboSpice good choice when I need to do some work in background thread check if there is netwrok if yes make network request and put result in db, else get data just from db, and return it to main thread?\n. ",
    "philipesteiff": "But when I comment serialization no error occurs. \nlike this:\njava\n// return response.parseAs(getResultType());\nreturn null;\nThe onRequestSuccess is called.\n. Ok @stephanenicolas, im rebuild a piece of code and works fine! :)\n. ",
    "aminekh": "Hi, i recently started to implement RoboSpice and i am actually sending HttpRequest to a restful web service to get a Json in response. When i get the response it definitely contains the Json data but it is somehow cut (not complete) and when i try to parse it an exception occurs telling that the stream has been closed. I am using the latest version of RoboSpice 1.4.13. Can someone help me with that please, it has been 1 week since i am stuck with this issue.\n. ",
    "lsuski": "Hi, \nthanks for answer, temporarily I fixed this by setting high priority for SpiceRequest passed in SpiceManager.execute(). Then it is taken first in requestQueue in SpiceManager and it works as expected. Hope you fix this bug soon.\n. Thanks for fix, I've tested it and works as expected.\n. Hi,\nI,ve sent a pull request with my proposition of refactor but a little bit late :) . Sorry for code formatting, It's quite different in my IDE settings and I forgot about this.\n. I am a purist when it comes to programming and I prefer in my work interface based architecture but agree that it introduces some difficulties in architecture understanding and debbuging (but provides flexibility) so it can be a problem with RS. It is used by many users so I wouldn't urge to change RS int this way.\nThanks a lot for interest.\n. Yes, it's ok thanks a lot.\n. ",
    "itsmechlark": "Sorry i already found the error, its my fault.\n. I found the error when adding multiple Persister, it didn't check to other persister added. it only use the first persister added:\n\nmanager.addPersister(new SearchResultListObjectPersisterFactory(application));\nmanager.addPersister(new BookmarkListObjectPersisterFactory(application));\nmanager.addPersister(new DocumentListObjectPersisterFactory(application));\nmanager.addPersister(new SectionListObjectPersisterFactory(application));\nmanager.addPersister(new DocumentObjectPersisterFactory(application));\n\nwhich every persister extends the same persiter, it didn't check to other persister.\nLog\n\n11-21 09:52:39.703: D//SpiceManager.java:203(23900): 09:52:39.695 main SpiceManager started.\n11-21 09:52:39.742: D/dalvikvm(23900): GC_CONCURRENT freed 272K, 10% free 8486K/9415K, paused 12ms+7ms, total 55ms\n11-21 09:52:39.773: D//SpiceManager.java:1208(23900): 09:52:39.783 SpiceManagerThread 0 Waiting for service to be bound.\n11-21 09:52:39.882: D//SpiceService.java:127(23900): 09:52:39.892 main SpiceService instance created.\n11-21 09:52:40.007: D//SpiceManager.java:1074(23900): 09:52:40.013 main Bound to service : InMemorySpiceService\n11-21 09:52:40.007: D//SpiceManager.java:1215(23900): 09:52:40.015 SpiceManagerThread 0 Bound ok.\n11-21 09:52:40.015: D//SpiceManager.java:274(23900): 09:52:40.022 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:52:40.023: D//RequestProcessor.java:71(23900): 09:52:40.029 SpiceManagerThread 0 Adding request to queue 1106137088: CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098] size is 0\n11-21 09:52:40.023: D//RequestProcessor.java:90(23900): 09:52:40.032 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.SearchResultListModel and cacheKey -1650208316.\n11-21 09:52:40.031: D//RequestProgressManager.java:54(23900): 09:52:40.037 SpiceManagerThread 0 Request was added to queue.\n11-21 09:52:40.031: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.040 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.039: D//RequestProgressManager.java:75(23900): 09:52:40.044 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:52:40.039: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.049 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.046: W/IInputConnectionWrapper(23900): getSelectedText on inactive InputConnection\n11-21 09:52:40.046: D//SpiceServiceListenerNotifier.java:178(23900): 09:52:40.056 main Processing request added: CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098]\n11-21 09:52:40.054: W/IInputConnectionWrapper(23900): setComposingText on inactive InputConnection\n11-21 09:52:40.054: D//RequestRunner.java:68(23900): 09:52:40.054 Thread-1778 Processing request : CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098]\n11-21 09:52:40.054: D//RequestRunner.java:82(23900): 09:52:40.062 Thread-1778 Loading request from cache : CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098]\n11-21 09:52:40.054: D//RequestProgressManager.java:75(23900): 09:52:40.063 Thread-1778 Sending progress READING_FROM_CACHE\n11-21 09:52:40.062: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.065 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.140: D/dalvikvm(23900): GC_CONCURRENT freed 444K, 12% free 8533K/9607K, paused 16ms+14ms, total 69ms\n11-21 09:52:40.218: D//RequestRunner.java:88(23900): 09:52:40.225 Thread-1778 Request loaded from cache : CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098] result=com.cdasia.cdasiaonline.model.SearchResultListModel@41ed4700\n11-21 09:52:40.218: D//RequestProgressManager.java:75(23900): 09:52:40.227 Thread-1778 Sending progress COMPLETE\n11-21 09:52:40.226: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.229 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.226: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.232 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.226: D//RequestProgressManager.java:84(23900): 09:52:40.234 Thread-1778 Sending all request complete.\n11-21 09:52:40.234: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:40.238 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:40.234: D//RequestRunner.java:274(23900): 09:52:40.240 Thread-1778 It tooks 185 ms to process request CachedSpiceRequest [requestCacheKey=-1650208316, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SearchResultRequest@41ec7098].\n11-21 09:52:40.406: E/SpannableStringBuilder(23900): SPAN_EXCLUSIVE_EXCLUSIVE spans cannot have a zero length\n11-21 09:52:40.406: E/SpannableStringBuilder(23900): SPAN_EXCLUSIVE_EXCLUSIVE spans cannot have a zero length\n11-21 09:52:43.796: D/dalvikvm(23900): GC_CONCURRENT freed 378K, 11% free 8605K/9607K, paused 12ms+15ms, total 72ms\n11-21 09:52:43.812: D/(23900): queryDocument=WHERE ID='null' AND DOC_TYPE=0 ORDER BY DATE DESC\n11-21 09:52:43.906: I/webclipboard(23900): clipservice: android.sec.clipboard.ClipboardExManager@41e9c048\n11-21 09:52:43.968: V/webkit(23900): BrowserFrame constructor: this=Handler (android.webkit.BrowserFrame) {41edd800}\n11-21 09:52:44.070: D//SpiceManager.java:203(23900): 09:52:44.073 main SpiceManager started.\n11-21 09:52:44.078: D//SpiceManager.java:1208(23900): 09:52:44.082 SpiceManagerThread 0 Waiting for service to be bound.\n11-21 09:52:44.156: D/dalvikvm(23900): GC_CONCURRENT freed 379K, 11% free 8749K/9735K, paused 2ms+5ms, total 36ms\n11-21 09:52:44.156: D/dalvikvm(23900): WAIT_FOR_CONCURRENT_GC blocked 19ms\n11-21 09:52:44.164: D/(23900): queryDocument=WHERE ID='368' AND DOC_TYPE=3 ORDER BY DATE DESC\n11-21 09:52:44.414: D/dalvikvm(23900): GC_CONCURRENT freed 256K, 9% free 8999K/9863K, paused 10ms+14ms, total 69ms\n11-21 09:52:44.492: D/dalvikvm(23900): GC_FOR_ALLOC freed 228K, 10% free 9126K/10119K, paused 25ms, total 25ms\n11-21 09:52:44.523: D/dalvikvm(23900): GC_FOR_ALLOC freed 245K, 12% free 9231K/10375K, paused 25ms, total 25ms\n11-21 09:52:44.554: D/dalvikvm(23900): GC_FOR_ALLOC freed 241K, 12% free 9335K/10503K, paused 24ms, total 24ms\n11-21 09:52:44.695: D/dalvikvm(23900): GC_CONCURRENT freed 252K, 9% free 9780K/10631K, paused 12ms+4ms, total 47ms\n11-21 09:52:44.695: D/dalvikvm(23900): WAIT_FOR_CONCURRENT_GC blocked 19ms\n11-21 09:52:44.820: D/dalvikvm(23900): GC_CONCURRENT freed 393K, 9% free 10214K/11207K, paused 12ms+3ms, total 50ms\n11-21 09:52:44.820: D/dalvikvm(23900): WAIT_FOR_CONCURRENT_GC blocked 15ms\n11-21 09:52:45.171: D//SpiceManager.java:1074(23900): 09:52:45.177 main Bound to service : InMemorySpiceService\n11-21 09:52:45.171: I/Choreographer(23900): Skipped 58 frames!  The application may be doing too much work on its main thread.\n11-21 09:52:45.195: D//SpiceManager.java:1215(23900): 09:52:45.179 SpiceManagerThread 0 Bound ok.\n11-21 09:52:45.210: E/SpannableStringBuilder(23900): SPAN_EXCLUSIVE_EXCLUSIVE spans cannot have a zero length\n11-21 09:52:45.210: E/SpannableStringBuilder(23900): SPAN_EXCLUSIVE_EXCLUSIVE spans cannot have a zero length\n11-21 09:52:45.210: D/dalvikvm(23900): GC_CONCURRENT freed 650K, 11% free 10445K/11719K, paused 13ms+6ms, total 77ms\n11-21 09:52:45.218: D//SpiceManager.java:293(23900): 09:52:45.224 main SpiceManager stopping.\n11-21 09:52:45.218: D//SpiceManager.java:274(23900): 09:52:45.222 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:52:45.218: D//RequestProcessor.java:71(23900): 09:52:45.228 SpiceManagerThread 0 Adding request to queue 1106137088: CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=0, spiceRequest=com.cdasia.cdasiaonline.request.DocViewRequest@41e9d378] size is 0\n11-21 09:52:45.218: D//SpiceManager.java:1190(23900): 09:52:45.229 main Unbound from service : InMemorySpiceService\n11-21 09:52:45.226: D//RequestProcessor.java:90(23900): 09:52:45.230 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentModel and cacheKey -444431837.\n11-21 09:52:45.226: D//SpiceManager.java:303(23900): 09:52:45.232 main SpiceManager stopped.\n11-21 09:52:45.226: D//RequestProgressManager.java:54(23900): 09:52:45.232 SpiceManagerThread 0 Request was added to queue.\n11-21 09:52:45.226: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.234 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.226: D//RequestProgressManager.java:75(23900): 09:52:45.236 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:52:45.234: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.238 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.234: D//RequestRunner.java:68(23900): 09:52:45.241 Thread-1778 Processing request : CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=0, spiceRequest=com.cdasia.cdasiaonline.request.DocViewRequest@41e9d378]\n11-21 09:52:45.234: D//SpiceManager.java:256(23900): 09:52:45.243 SpiceManagerThread 0 Interrupted while waiting for new request.\n11-21 09:52:45.242: D//SpiceServiceListenerNotifier.java:178(23900): 09:52:45.245 main Processing request added: CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=0, spiceRequest=com.cdasia.cdasiaonline.request.DocViewRequest@41e9d378]\n11-21 09:52:45.242: D//RequestRunner.java:82(23900): 09:52:45.250 Thread-1778 Loading request from cache : CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=0, spiceRequest=com.cdasia.cdasiaonline.request.DocViewRequest@41e9d378]\n11-21 09:52:45.242: D//RequestProgressManager.java:75(23900): 09:52:45.252 Thread-1778 Sending progress READING_FROM_CACHE\n11-21 09:52:45.250: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.254 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.250: D//RequestRunner.java:114(23900): 09:52:45.257 Thread-1778 Cache content not available or expired or disabled\n11-21 09:52:45.257: D//RequestRunner.java:128(23900): 09:52:45.262 Thread-1778 Calling netwok request.\n11-21 09:52:45.257: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.268 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.640: D//RequestRunner.java:131(23900): 09:52:45.648 Thread-1778 Network request call ended.\n11-21 09:52:45.640: D//RequestRunner.java:151(23900): 09:52:45.650 Thread-1778 Start caching content...\n11-21 09:52:45.648: D//RequestProgressManager.java:75(23900): 09:52:45.652 Thread-1778 Sending progress WRITING_TO_CACHE\n11-21 09:52:45.648: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.655 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.656: D//RequestRunner.java:162(23900): 09:52:45.659 Thread-1778 An exception occurred during service execution :java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.656: D//RequestRunner.java:162(23900): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:52:45.656: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:52:45.656: D//RequestProgressManager.java:75(23900): 09:52:45.661 Thread-1778 Sending progress COMPLETE\n11-21 09:52:45.656: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.664 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.656: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.666 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.664: D//RequestProgressManager.java:84(23900): 09:52:45.669 Thread-1778 Sending all request complete.\n11-21 09:52:45.664: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.672 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.671: D//RequestRunner.java:180(23900): 09:52:45.677 Thread-1778 Cache file deleted.\n11-21 09:52:45.671: D//RequestRunner.java:180(23900): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:52:45.671: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:52:45.671: D//SpiceManager.java:1208(23900): 09:52:45.682 Thread-1787 Waiting for service to be bound.\n11-21 09:52:45.679: E/AppService(23900): incache=false\n11-21 09:52:45.679: D//SpiceManager.java:274(23900): 09:52:45.686 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:52:45.679: D//RequestProcessor.java:71(23900): 09:52:45.690 SpiceManagerThread 0 Adding request to queue 1106137088: CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=-1, spiceRequest=com.octo.android.robospice.SpiceManager$3@41fe75e0] size is 0\n11-21 09:52:45.679: D/(23900): queryDocument=WHERE ID='368' AND DOC_TYPE=3 ORDER BY DATE DESC\n11-21 09:52:45.687: D//RequestProcessor.java:90(23900): 09:52:45.692 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentModel and cacheKey -444431837.\n11-21 09:52:45.687: D//RequestProgressManager.java:54(23900): 09:52:45.697 SpiceManagerThread 0 Request was added to queue.\n11-21 09:52:45.695: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.699 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.695: D//RequestProgressManager.java:75(23900): 09:52:45.700 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:52:45.695: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.703 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.695: D//RequestRunner.java:68(23900): 09:52:45.705 Thread-1778 Processing request : CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=-1, spiceRequest=com.octo.android.robospice.SpiceManager$3@41fe75e0]\n11-21 09:52:45.703: D//RequestRunner.java:114(23900): 09:52:45.706 Thread-1778 Cache content not available or expired or disabled\n11-21 09:52:45.703: D/(23900): queryDocument=WHERE ID='368' AND DOC_TYPE=3 ORDER BY DATE DESC\n11-21 09:52:45.703: D//RequestRunner.java:128(23900): 09:52:45.711 Thread-1778 Calling netwok request.\n11-21 09:52:45.710: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.717 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.710: D//RequestRunner.java:131(23900): 09:52:45.721 Thread-1778 Network request call ended.\n11-21 09:52:45.718: D//RequestRunner.java:151(23900): 09:52:45.722 Thread-1778 Start caching content...\n11-21 09:52:45.718: D//RequestProgressManager.java:75(23900): 09:52:45.724 Thread-1778 Sending progress WRITING_TO_CACHE\n11-21 09:52:45.718: D/(23900): queryHistory=WHERE ID='368' AND DOC_TYPE=3 ORDER BY DATE DESC\n11-21 09:52:45.726: D/(23900): queryHistory=WHERE ID='368' AND DOC_TYPE=3 ORDER BY DATE DESC\n11-21 09:52:45.726: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.734 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.726: D//SpiceServiceListenerNotifier.java:178(23900): 09:52:45.734 main Processing request added: CachedSpiceRequest [requestCacheKey=-444431837, cacheDuration=-1, spiceRequest=com.octo.android.robospice.SpiceManager$3@41fe75e0]\n11-21 09:52:45.750: D//RequestRunner.java:162(23900): 09:52:45.757 Thread-1778 An exception occurred during service execution :java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.750: D//RequestRunner.java:162(23900): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:52:45.750: D//RequestRunner.java:162(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:52:45.750: D//RequestProgressManager.java:75(23900): 09:52:45.760 Thread-1778 Sending progress COMPLETE\n11-21 09:52:45.757: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.763 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.765: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.769 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.765: D//RequestProgressManager.java:84(23900): 09:52:45.772 Thread-1778 Sending all request complete.\n11-21 09:52:45.765: D//SpiceServiceListenerNotifier.java:149(23900): 09:52:45.774 Thread-1778 Message queue is Handler (android.os.Handler) {41ecdd90}\n11-21 09:52:45.796: D/TilesManager(23900): new EGLContext from framework: 57873c90 \n11-21 09:52:45.820: D//RequestRunner.java:180(23900): 09:52:45.779 Thread-1778 Cache file deleted.\n11-21 09:52:45.820: D//RequestRunner.java:180(23900): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.DocumentModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:52:45.820: D//RequestRunner.java:180(23900):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:52:45.820: D/WebView(23900): loadUrlImpl: called\n11-21 09:52:45.820: D/webcore(23900):  CORE loadUrl: called\n11-21 09:52:45.828: D/webkit(23900): euler: isUrlBlocked = false\n11-21 09:52:45.875: D/dalvikvm(23900): GC_CONCURRENT freed 885K, 13% free 10528K/12039K, paused 14ms+7ms, total 96ms\n11-21 09:52:45.898: I/GATE(23900): DEV_ACTION_COMPLETED\n11-21 09:55:21.140: D/dalvikvm(23969): GC_CONCURRENT freed 172K, 10% free 7684K/8455K, paused 13ms+3ms, total 49ms\n11-21 09:55:21.140: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 6ms\n11-21 09:55:21.140: D/ACRA(23969): ACRA is enabled for com.cdasia.cdasiaonline, intializing...\n11-21 09:55:21.156: D/ACRA(23969): Looking for error files in /data/data/com.cdasia.cdasiaonline/files\n11-21 09:55:21.179: D//SpiceService.java:127(23969): 09:55:21.186 main SpiceService instance created.\n11-21 09:55:21.179: D//SpiceManager.java:203(23969): 09:55:21.190 main SpiceManager started.\n11-21 09:55:21.187: I/UpdateService(23969): RECEIVE_TASK\n11-21 09:55:21.187: D//SpiceManager.java:1208(23969): 09:55:21.196 SpiceManagerThread 0 Waiting for service to be bound.\n11-21 09:55:21.281: D/dalvikvm(23969): GC_CONCURRENT freed 279K, 10% free 7957K/8839K, paused 12ms+2ms, total 69ms\n11-21 09:55:21.281: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 18ms\n11-21 09:55:21.343: D/dalvikvm(23969): GC_CONCURRENT freed 254K, 11% free 8139K/9095K, paused 12ms+2ms, total 37ms\n11-21 09:55:21.343: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 22ms\n11-21 09:55:21.398: D/dalvikvm(23969): GC_FOR_ALLOC freed 183K, 12% free 8180K/9223K, paused 45ms, total 45ms\n11-21 09:55:21.421: D/dalvikvm(23969): GC_FOR_ALLOC freed 241K, 12% free 8284K/9351K, paused 23ms, total 23ms\n11-21 09:55:21.453: D/dalvikvm(23969): GC_FOR_ALLOC freed 62K, 11% free 8348K/9351K, paused 28ms, total 28ms\n11-21 09:55:21.523: D/dalvikvm(23969): GC_CONCURRENT freed 217K, 9% free 8657K/9479K, paused 1ms+3ms, total 24ms\n11-21 09:55:21.617: D/dalvikvm(23969): GC_CONCURRENT freed 112K, 8% free 9062K/9799K, paused 2ms+3ms, total 28ms\n11-21 09:55:21.617: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 11ms\n11-21 09:55:21.734: D/dalvikvm(23969): GC_CONCURRENT freed 338K, 10% free 9309K/10247K, paused 2ms+3ms, total 31ms\n11-21 09:55:21.734: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 8ms\n11-21 09:55:21.937: D/dalvikvm(23969): GC_CONCURRENT freed 479K, 11% free 9401K/10503K, paused 12ms+2ms, total 45ms\n11-21 09:55:22.031: I/UpdateService(23969): RECEIVE_TASK\n11-21 09:55:22.039: D//SpiceManager.java:1074(23969): 09:55:22.042 main Bound to service : UpdateService\n11-21 09:55:22.039: D//SpiceManager.java:1215(23969): 09:55:22.043 SpiceManagerThread 0 Bound ok.\n11-21 09:55:22.039: D//SpiceManager.java:274(23969): 09:55:22.045 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.039: D//RequestProcessor.java:71(23969): 09:55:22.047 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=-1013166964, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SectionRequest@41e275d0] size is 0\n11-21 09:55:22.039: D//RequestProcessor.java:90(23969): 09:55:22.049 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.SectionListModel and cacheKey -1013166964.\n11-21 09:55:22.046: D//RequestProgressManager.java:54(23969): 09:55:22.051 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.046: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.053 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.046: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.056 main Processing request added: CachedSpiceRequest [requestCacheKey=-1013166964, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SectionRequest@41e275d0]\n11-21 09:55:22.054: D//RequestProgressManager.java:75(23969): 09:55:22.059 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.054: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.060 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.054: D//RequestRunner.java:68(23969): 09:55:22.062 Thread-1776 Processing request : CachedSpiceRequest [requestCacheKey=-1013166964, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SectionRequest@41e275d0]\n11-21 09:55:22.054: D//RequestRunner.java:82(23969): 09:55:22.064 Thread-1776 Loading request from cache : CachedSpiceRequest [requestCacheKey=-1013166964, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.SectionRequest@41e275d0]\n11-21 09:55:22.054: D//SpiceManager.java:274(23969): 09:55:22.064 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.062: D//RequestProgressManager.java:75(23969): 09:55:22.067 Thread-1776 Sending progress READING_FROM_CACHE\n11-21 09:55:22.062: D//RequestProcessor.java:71(23969): 09:55:22.066 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=78153724, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee4f40] size is 1\n11-21 09:55:22.062: D//RequestProcessor.java:90(23969): 09:55:22.068 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentListModel and cacheKey 78153724.\n11-21 09:55:22.062: D//RequestProgressManager.java:54(23969): 09:55:22.069 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.062: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.071 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.070: D//RequestRunner.java:114(23969): 09:55:22.073 Thread-1776 Cache content not available or expired or disabled\n11-21 09:55:22.070: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.073 main Processing request added: CachedSpiceRequest [requestCacheKey=78153724, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee4f40]\n11-21 09:55:22.070: D//RequestProgressManager.java:75(23969): 09:55:22.077 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.070: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.078 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.078: D//RequestRunner.java:128(23969): 09:55:22.082 Thread-1776 Calling netwok request.\n11-21 09:55:22.078: D//SpiceManager.java:274(23969): 09:55:22.083 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.078: D//RequestProcessor.java:71(23969): 09:55:22.087 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=-261168836, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee5458] size is 2\n11-21 09:55:22.085: D//RequestProcessor.java:90(23969): 09:55:22.090 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentListModel and cacheKey -261168836.\n11-21 09:55:22.085: D//RequestProgressManager.java:54(23969): 09:55:22.093 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.085: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.095 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.093: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.100 main Processing request added: CachedSpiceRequest [requestCacheKey=-261168836, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee5458]\n11-21 09:55:22.093: D//RequestProgressManager.java:75(23969): 09:55:22.101 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.093: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.103 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.101: D//SpiceManager.java:274(23969): 09:55:22.105 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.101: D//RequestProcessor.java:71(23969): 09:55:22.107 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=-1283736193, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee5950] size is 3\n11-21 09:55:22.101: D//RequestProcessor.java:90(23969): 09:55:22.108 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentListModel and cacheKey -1283736193.\n11-21 09:55:22.101: D//RequestProgressManager.java:54(23969): 09:55:22.109 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.109: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.113 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.109: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.115 main Processing request added: CachedSpiceRequest [requestCacheKey=-1283736193, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee5950]\n11-21 09:55:22.109: D//RequestProgressManager.java:75(23969): 09:55:22.118 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.109: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.119 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.117: D//SpiceManager.java:274(23969): 09:55:22.123 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.117: D//RequestProcessor.java:71(23969): 09:55:22.124 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=-447182415, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee6390] size is 4\n11-21 09:55:22.117: D//RequestProcessor.java:90(23969): 09:55:22.126 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.DocumentListModel and cacheKey -447182415.\n11-21 09:55:22.125: D//RequestProgressManager.java:54(23969): 09:55:22.128 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.125: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.130 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.140: D/dalvikvm(23969): GC_CONCURRENT freed 585K, 12% free 9507K/10695K, paused 3ms+4ms, total 47ms\n11-21 09:55:22.140: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 12ms\n11-21 09:55:22.140: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.132 main Processing request added: CachedSpiceRequest [requestCacheKey=-447182415, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee6390]\n11-21 09:55:22.140: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 12ms\n11-21 09:55:22.140: D//RequestProgressManager.java:75(23969): 09:55:22.146 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.140: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.147 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.140: D//SpiceManager.java:274(23969): 09:55:22.150 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.140: D//RequestProcessor.java:71(23969): 09:55:22.151 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=780264257, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9130] size is 5\n11-21 09:55:22.148: D//RequestProcessor.java:90(23969): 09:55:22.152 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.BookmarkListModel and cacheKey 780264257.\n11-21 09:55:22.148: D//RequestProgressManager.java:54(23969): 09:55:22.154 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.148: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.155 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.148: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.156 main Processing request added: CachedSpiceRequest [requestCacheKey=780264257, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9130]\n11-21 09:55:22.148: D//RequestProgressManager.java:75(23969): 09:55:22.158 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.156: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.160 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.156: D//SpiceManager.java:274(23969): 09:55:22.162 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.156: D//RequestProcessor.java:71(23969): 09:55:22.163 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=440941697, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9640] size is 6\n11-21 09:55:22.156: D//RequestProcessor.java:90(23969): 09:55:22.165 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.BookmarkListModel and cacheKey 440941697.\n11-21 09:55:22.156: D//RequestProgressManager.java:54(23969): 09:55:22.166 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.164: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.168 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.164: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.170 main Processing request added: CachedSpiceRequest [requestCacheKey=440941697, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9640]\n11-21 09:55:22.164: D//RequestProgressManager.java:75(23969): 09:55:22.170 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.164: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.172 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.164: D//SpiceManager.java:274(23969): 09:55:22.174 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.171: D//RequestProcessor.java:71(23969): 09:55:22.176 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=-581625660, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9b60] size is 7\n11-21 09:55:22.171: D//RequestProcessor.java:90(23969): 09:55:22.177 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.BookmarkListModel and cacheKey -581625660.\n11-21 09:55:22.171: D//RequestProgressManager.java:54(23969): 09:55:22.178 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.171: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.180 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.171: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.182 main Processing request added: CachedSpiceRequest [requestCacheKey=-581625660, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41ee9b60]\n11-21 09:55:22.179: D//RequestProgressManager.java:75(23969): 09:55:22.183 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.179: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.185 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.179: D//SpiceManager.java:274(23969): 09:55:22.187 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n11-21 09:55:22.179: D//RequestProcessor.java:71(23969): 09:55:22.188 SpiceManagerThread 0 Adding request to queue 1105217056: CachedSpiceRequest [requestCacheKey=254928118, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41eea590] size is 8\n11-21 09:55:22.179: D//RequestProcessor.java:90(23969): 09:55:22.190 SpiceManagerThread 0 Adding entry for type class com.cdasia.cdasiaonline.model.BookmarkListModel and cacheKey 254928118.\n11-21 09:55:22.187: D//RequestProgressManager.java:54(23969): 09:55:22.192 SpiceManagerThread 0 Request was added to queue.\n11-21 09:55:22.187: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.193 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.187: D//SpiceServiceListenerNotifier.java:178(23969): 09:55:22.195 main Processing request added: CachedSpiceRequest [requestCacheKey=254928118, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.BookmarkRequest@41eea590]\n11-21 09:55:22.187: D//RequestProgressManager.java:75(23969): 09:55:22.197 SpiceManagerThread 0 Sending progress PENDING\n11-21 09:55:22.187: D//SpiceServiceListenerNotifier.java:149(23969): 09:55:22.198 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {41f237b0}\n11-21 09:55:22.617: D/dalvikvm(23969): GC_CONCURRENT freed 433K, 10% free 9855K/10887K, paused 12ms+4ms, total 52ms\n11-21 09:55:22.617: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 23ms\n11-21 09:55:22.781: D/dalvikvm(23969): GC_CONCURRENT freed 840K, 13% free 9895K/11335K, paused 2ms+4ms, total 46ms\n11-21 09:55:22.781: D/dalvikvm(23969): WAIT_FOR_CONCURRENT_GC blocked 35ms\n11-21 09:55:22.875: D//RequestRunner.java:131(23969): 09:55:22.882 Thread-1776 Network request call ended.\n11-21 09:55:22.875: D//RequestRunner.java:151(23969): 09:55:22.884 Thread-1776 Start caching content...\n11-21 09:55:22.875: D//RequestProgressManager.java:75(23969): 09:55:22.885 Thread-1776 Sending progress WRITING_TO_CACHE\n11-21 09:55:22.882: D//RequestRunner.java:162(23969): 09:55:22.892 Thread-1776 An exception occurred during service execution :java.lang.ClassCastException: com.cdasia.cdasiaonline.model.SectionListModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:55:22.882: D//RequestRunner.java:162(23969): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.SectionListModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.SectionListModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:55:22.882: D//RequestRunner.java:162(23969):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:55:22.882: D//RequestProgressManager.java:75(23969): 09:55:22.893 Thread-1776 Sending progress COMPLETE\n11-21 09:55:22.898: D//RequestRunner.java:180(23969): 09:55:22.902 Thread-1776 Cache file deleted.\n11-21 09:55:22.898: D//RequestRunner.java:180(23969): com.octo.android.robospice.persistence.exception.CacheSavingException: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.SectionListModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:103)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.octo.android.robospice.persistence.CacheManager.saveDataToCacheAndReturnData(CacheManager.java:77)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.octo.android.robospice.request.RequestRunner.saveDataToCacheAndReturnData(RequestRunner.java:245)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.octo.android.robospice.request.RequestRunner.processRequest(RequestRunner.java:153)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.octo.android.robospice.request.RequestRunner$1.run(RequestRunner.java:197)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969): Caused by: java.lang.ClassCastException: com.cdasia.cdasiaonline.model.SectionListModel cannot be cast to com.cdasia.cdasiaonline.model.SearchResultListModel\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.cdasia.cdasiaonline.services.persistence.persister.SearchResultListObjectPersister.saveData(SearchResultListObjectPersister.java:101)\n11-21 09:55:22.898: D//RequestRunner.java:180(23969):   at com.cdasia.cdasiaonline.services.persistence.ListObjectPersister.saveDataToCacheAndReturnData(ListObjectPersister.java:98)\n11-21 09:55:22.898: D//RequestRunner.java:68(23969): 09:55:22.904 Thread-1776 Processing request : CachedSpiceRequest [requestCacheKey=78153724, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee4f40]\n11-21 09:55:22.898: D//RequestRunner.java:82(23969): 09:55:22.905 Thread-1776 Loading request from cache : CachedSpiceRequest [requestCacheKey=78153724, cacheDuration=86400000, spiceRequest=com.cdasia.cdasiaonline.request.DocumentRequest@41ee4f40]\n11-21 09:55:22.898: D//RequestProgressManager.java:75(23969): 09:55:22.907 Thread-1776 Sending progress READING_FROM_CACHE\n11-21 09:55:22.906: D//RequestRunner.java:114(23969): 09:55:22.911 Thread-1776 Cache content not available or expired or disabled\n11-21 09:55:22.906: D//RequestRunner.java:128(23969): 09:55:22.915 Thread-1776 Calling netwok request.\n\n. I already fix, sorry for this issue. I just added this:\n\nList> listHandledClasses = new ArrayList>();\nlistHandledClasses.add(SearchResultListModel.class);\nlistHandledClasses.add(BookmarkListModel.class);\nlistHandledClasses.add(DocumentListModel.class);\nlistHandledClasses.add(SectionListModel.class);\nlistHandledClasses.add(DocumentModel.class);\nmanager.addPersister(new ListObjectPersisterfactory(application, listHandledClasses));\n\n. ",
    "NicolasPoirier": "Me too...\n. No problem, I have created an application here.\n. It looks good to me.\nThanks.\n. I've tried it on ICS and there is no more blocked thread so I think it's fixed ;)\n. ",
    "AlexNab": "Sorry for a long answer.\nThat issue is not emulator only, it's reproducible easily on a real device with Android 4.x also.\n. @rciovati Sure I can, and in fact that is what I am doing right now.\nWhile http scheme (http or https) is not resolved set short request timeout and custom retry policy to fail fast and change http scheme at retry method.\nBut I just wanted to have out of the box behavior (i.e. without all that additions) similar to desktop browsers to fail fast when the host is not reachable. \n. @stephanenicolas feel free to decide as Robospice author! ;-)\nAs for me setConnectionTimeout is just a workaround.\nSo if you have ideas and plans for a quick update to make Robospice handle that kind of situations better - let's keep the thread opened. Or if setConnectionTimeout is perfectly good for you - ok, let's close the thread.\nIt's up to you.\n. ",
    "kosiarska": "Im getting same stacktrace on android kitkat. Really annoying and unpredictable behaviour.\n. It looks like it might be okhttp fault. I need some time to compare two versions of app (with and without okhttp), I think ART has nothing to do with it (there's no such option on 2012 Nexus 7).\n. ",
    "nakardo": "I can confirm this is only happening on KitKat, I'll update the issue.\n. Still happening for me on Android 4.4.2\n. As @kosiarska said, I'm using Dalvik since there's no ART option on Nexus 7. I'll try to isolate the issue so I can provide you some code to reproduce.\n. I found out what was causing the issue on my code after reading bug referenced by @kosiarska. After commenting BugSense initializer, RS started showing up Exceptions back again on logcat.\n// BugSenseHandler.initAndStartSession(this, Config.BUG_SENSE_API_KEY);\n@stephanenicolas go ahead and close the issue if you agree.\nThanks!\n. I've finally been able to get with a device with this issue. On my case I reproduced it on an HTC Status (Android 2.3.3). It seems the reported error it's consequence of another exception which fails silently on a try..catch block before crashing:\n03-17 15:05:08.618    1413-1413/com.myapp E//SpiceService.java:104\ufe55 15:05:08.614 main com.octo.android.robospice.persistence.exception.CacheCreationException: The cache folder /robospice-cache could not be created.\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.setCacheFolder(InFileObjectPersisterFactory.java:73)\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.<init>(InFileObjectPersisterFactory.java:48)\n            at com.octo.android.robospice.persistence.retrofit.RetrofitObjectPersisterFactory.<init>(RetrofitObjectPersisterFactory.java:30)\n            at com.octo.android.robospice.persistence.retrofit.RetrofitObjectPersisterFactory.<init>(RetrofitObjectPersisterFactory.java:35)\n            at com.myapp.services.RetrofitJacksonSpiceService.createCacheManager(RetrofitJacksonSpiceService.java:21)\n            at com.octo.android.robospice.SpiceService.onCreate(SpiceService.java:102)\n            at android.app.ActivityThread.handleCreateService(ActivityThread.java:2223)\n            at android.app.ActivityThread.access$2500(ActivityThread.java:132)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1102)\n            at android.os.Handler.dispatchMessage(Handler.java:99)\n            at android.os.Looper.loop(Looper.java:143)\n            at android.app.ActivityThread.main(ActivityThread.java:4293)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:507)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n            at dalvik.system.NativeStart.main(Native Method)\n@stephanenicolas let me know if you've some clues what might be failing with this. I've tried to reproduce on Motivations demo but it's working as intended, so I'm not sure if it might be implementation dependent.\nBest,\n. ",
    "TannerPerrien": "What I found was that context is strongly referenced in the run() method:\njava\nContext context = contextWeakReference.get();\nThis would be ok if run() call was non-blocking. However, sendRequestToService(requestQueue.take()); blocks in this method, and leaves the context strongly referenced because it is still in scope.\nAs I mentioned, this is only an issue if the manager is not properly shut down. When the manager is properly shut down, the worker thread gets interrupted and causes the while loop in run() to end, which then has the effect of allowing the context to be GC'ed because it is no longer in scope. Until then, the manager will hold a strong reference to the context. This fix moves context touching code in run() to a separate method so that the context is not in scope when run() blocks.\nI hope this is clear. I will do my best to explain further if necessary.\n. ",
    "julio-cotta-edx": "Hi, I am using the robospice version 1.4.11 and this bug is happening in my app too.\nIt is kinda strange since SpiceService.addSpiceServiceListener is called on onServiceConnected and at this point, it should have be initialized in the onCreate of SpiceService.\nWell...could the initization of the objects be done in the constructor of SpiceService instead in the onCreate?\njava.lang.NullPointerException\n       at com.octo.android.robospice.SpiceService.addSpiceServiceListener(SpiceService.java:423)\n       at com.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected(SpiceManager.java:1085)\n       at android.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1111)\n       at android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1128)\n       at android.os.Handler.handleCallback(Handler.java:730)\n       at android.os.Handler.dispatchMessage(Handler.java:92)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:5450)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:525)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1187)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1003)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n. My previous log came from a user in crashlytics, now I got the same error when starting the app from Eclipse, maybe it is a hint about the problem:\n01-28 18:07:29.335: E/AndroidRuntime(5222): java.lang.NullPointerException\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at com.octo.android.robospice.SpiceService.addSpiceServiceListener(SpiceService.java:423)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at com.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected(SpiceManager.java:1085)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1106)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1123)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.os.Handler.handleCallback(Handler.java:730)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.os.Handler.dispatchMessage(Handler.java:92)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.os.Looper.loop(Looper.java:137)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at android.app.ActivityThread.main(ActivityThread.java:5103)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at java.lang.reflect.Method.invokeNative(Native Method)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at java.lang.reflect.Method.invoke(Method.java:525)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:737)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n01-28 18:07:29.335: E/AndroidRuntime(5222):     at dalvik.system.NativeStart.main(Native Method)\n. Are you manually deleting the cache folder ?\n. @rciovati , thanks a lot! But, where can I download the snapshot? I could not find it in the branch repository.\n. Ok, I will get the jars from there and test. Thanks again.\n. @rciovati , I could not update my app yet using the snapshot, but in my test version the problem does not happen. The app will be updated this week , and monday (The app is very used in the weekends), probably, I will have crashlytics logs to tell if the problem appears or not. For now, it seems good to me.\n. @rciovati , It seems I don't have this problem in production anymore, thanks for your help.\n. ",
    "yava555": "use com.octo.android.robospice:robospice-retrofit:1.4.11, this is crash log from user, i can't reproduce it also .\njava\nSpiceService.java:423 in \"com.octo.android.robospice.SpiceService.a\"\nSpiceManager.java:1085 in \"com.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected\"\nLoadedApk.java:1068 in \"android.app.LoadedApk$ServiceDispatcher.doConnected\"\nLoadedApk.java:1085 in \"android.app.LoadedApk$ServiceDispatcher$RunConnection.run\"\nHandler.java:605 in \"android.os.Handler.handleCallback\"\nHandler.java:92 in \"android.os.Handler.dispatchMessage\"\nLooper.java:137 in \"android.os.Looper.loop\"\nActivityThread.java:4448 in \"android.app.ActivityThread.main\"\nMethod.java:-2 in \"java.lang.reflect.Method.invokeNative\"\nMethod.java:511 in \"java.lang.reflect.Method.invoke\"\nZygoteInit.java:823 in \"com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run\"\nZygoteInit.java:590 in \"com.android.internal.os.ZygoteInit.main\"\nNativeStart.java:-2 in \"dalvik.system.NativeStart.main\"\n. sorry,these are the whole crashed log,I have received.\n. does this relate with CacheCreationException\uff1f\nI test with a small demo app \uff1aonServiceConnected will be called\uff0ceven stopSelf and return from onCreate method.\n. ",
    "deinlandel": "Maybe your SpiceService.createCacheManager(..) implementation somehow returns null? Cause this results in exactly the same exception.\n. Any updates on this one?\n. It seems that this library is not maintained anymore..\n. > The library is doing its functions flawlessly. \nIt does have a couple of bugs, though. Just look at the issues list. So even if library is feature-complete, it still needs maintenance.\n. ",
    "alekskuzmin": "It seems not to be solved. Here's a crash log of one of my apps from 23 December 2014 that is using 4.1.14. It's from a playmarket crash report, so I don't know the steps to reproduce.\njava.lang.NullPointerException\nat com.octo.android.robospice.SpiceService.addSpiceServiceListener(SpiceService.java:487)\nat com.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected(SpiceManager.java:1087)\nat android.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1132)\nat android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1149)\nat android.os.Handler.handleCallback(Handler.java:800)\nat android.os.Handler.dispatchMessage(Handler.java:100)\nat android.os.Looper.loop(Looper.java:194)\nat android.app.ActivityThread.main(ActivityThread.java:5392)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:525)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\nat dalvik.system.NativeStart.main(Native Method)\n. I don't change anything in the service, but I sometimes override createCacheManager. From what I see in the code the failure to create the cacheManager can lead to null requestProcessor\n. ",
    "romashko": "Hi, I'm receiving this error with RoboSpice 1.4.14 and Genymotion with Android 2.3.7. No any issue on Android Emulator, but I'm still need to test on Genymotion.\nStacktrace is\nmain com.octo.android.robospice.persistence.exception.CacheCreationException: The cache folder /robospice-cache could not be created.\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.a(SourceFile:73)\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.(SourceFile:48)\n            at com.octo.android.robospice.persistence.googlehttpclient.json.JsonObjectPersisterFactory.(SourceFile:38)\n            at com.octo.android.robospice.persistence.googlehttpclient.json.JsonObjectPersisterFactory.(SourceFile:23)\n            at com.octo.android.robospice.persistence.googlehttpclient.json.Jackson2ObjectPersisterFactory.(SourceFile:33)\n            at com.octo.android.robospice.Jackson2GoogleHttpClientSpiceService.createCacheManager(SourceFile:18)\n            at com.octo.android.robospice.SpiceService.onCreate(SourceFile:108)\n            at com.octo.android.robospice.GoogleHttpClientSpiceService.onCreate(SourceFile:27)\n            at android.app.ActivityThread.handleCreateService(ActivityThread.java:1945)\n            at android.app.ActivityThread.access$2500(ActivityThread.java:117)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:985)\n            at android.os.Handler.dispatchMessage(Handler.java:99)\n            at android.os.Looper.loop(Looper.java:130)\n            at android.app.ActivityThread.main(ActivityThread.java:3683)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:507)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n            at dalvik.system.NativeStart.main(Native Method)\n. ",
    "Tooto": "steps to reproduce this bug:\n1. delete application\n2. Disable any internet connections\n3. install application\n4. run app and start CACHED request. \nspiceManager.execute(new PlacesJsonRequest(), JSON_CACHE_KEY, DurationInMillis.ONE_HOUR, new PlacesRequestListener());\n5.crash happens\ndevice: sgs4.\nandroid lollipop\n05-19 16:22:18.966  16427-16427/ru.handh.arenaforum D//SpiceManager.java:212\ufe55 16:22:18.973 main SpiceManager started.\n05-19 16:22:18.976  16427-16427/ru.handh.arenaforum D//SpiceManager.java:212\ufe55 16:22:18.979 main SpiceManager started.\n05-19 16:22:18.981  16427-16530/ru.handh.arenaforum V//SpiceManager.java:1191\ufe55 16:22:18.985 SpiceManagerThread 0 Binding to service.\n05-19 16:22:18.981  16427-16531/ru.handh.arenaforum V//SpiceManager.java:1191\ufe55 16:22:18.986 SpiceManagerThread 0 Binding to service.\n05-19 16:22:18.981  16427-16531/ru.handh.arenaforum V//SpiceManager.java:1197\ufe55 16:22:18.987 SpiceManagerThread 0 Binding to service succeeded.\n05-19 16:22:18.981  16427-16531/ru.handh.arenaforum D//SpiceManager.java:1245\ufe55 16:22:18.988 SpiceManagerThread 0 Waiting for service to be bound.\n05-19 16:22:18.981  16427-16530/ru.handh.arenaforum V//SpiceManager.java:1197\ufe55 16:22:18.989 SpiceManagerThread 0 Binding to service succeeded.\n05-19 16:22:18.986  16427-16530/ru.handh.arenaforum D//SpiceManager.java:1245\ufe55 16:22:18.989 SpiceManagerThread 0 Waiting for service to be bound.\n05-19 16:22:19.051  16427-16427/ru.handh.arenaforum W/ContextImpl\ufe55 Unable to create files subdir /data/data/ru.handh.arenaforum/cache\n05-19 16:22:19.061  16427-16427/ru.handh.arenaforum E//SpiceService.java:110\ufe55 16:22:19.065 main com.octo.android.robospice.persistence.exception.CacheCreationException: The cache folder /robospice-cache could not be created.\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.setCacheFolder(InFileObjectPersisterFactory.java:73)\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.(InFileObjectPersisterFactory.java:48)\n            at com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory.(InFileObjectPersisterFactory.java:35)\n            at com.octo.android.robospice.persistence.springandroid.json.jackson.JacksonObjectPersisterFactory.(JacksonObjectPersisterFactory.java:18)\n            at com.octo.android.robospice.JacksonSpringAndroidSpiceService.createCacheManager(JacksonSpringAndroidSpiceService.java:24)\n            at com.octo.android.robospice.SpiceService.onCreate(SpiceService.java:108)\n            at com.octo.android.robospice.SpringAndroidSpiceService.onCreate(SpringAndroidSpiceService.java:25)\n            at android.app.ActivityThread.handleCreateService(ActivityThread.java:3150)\n            at android.app.ActivityThread.access$1900(ActivityThread.java:177)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1531)\n            at android.os.Handler.dispatchMessage(Handler.java:102)\n            at android.os.Looper.loop(Looper.java:145)\n            at android.app.ActivityThread.main(ActivityThread.java:5944)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:372)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n05-19 16:22:19.136  16427-16529/ru.handh.arenaforum I/System.out\ufe55 (HTTPLog)-Static: isSBSettingEnabled false\n05-19 16:22:19.136  16427-16529/ru.handh.arenaforum I/System.out\ufe55 (HTTPLog)-Static: isShipBuild true\n05-19 16:22:19.136  16427-16529/ru.handh.arenaforum I/System.out\ufe55 (HTTPLog)-Thread-26765-360025949: SmartBonding Enabling is false, SHIP_BUILD is true, log to file is false, DBG is false\n05-19 16:22:19.136  16427-16529/ru.handh.arenaforum I/System.out\ufe55 (HTTPLog)-Static: isSBSettingEnabled false\n,...\n05-19 16:22:19.216  16427-16427/ru.handh.arenaforum E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: ru.handh.arenaforum, PID: 16427\n    java.lang.NullPointerException: Attempt to invoke virtual method 'void com.octo.android.robospice.request.RequestProcessor.addSpiceServiceListener(com.octo.android.robospice.request.listener.SpiceServiceListener)' on a null object reference\n            at com.octo.android.robospice.SpiceService.addSpiceServiceListener(SpiceService.java:487)\n            at com.octo.android.robospice.SpiceManager$SpiceServiceConnection.onServiceConnected(SpiceManager.java:1087)\n            at android.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1265)\n            at android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1282)\n            at android.os.Handler.handleCallback(Handler.java:739)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:145)\n            at android.app.ActivityThread.main(ActivityThread.java:5944)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:372)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n. ",
    "Loda": "I noticed this bug in production too: \nRoboSprice version 1.4.14\nObserved on the following Android OS version : 6.0, 2.3.3, 6.0.1, 4.4.3, 2.3.4, 4.4.5, 5.1.1, 4.0.3, 5.1, 4.4, 5.0.2, 5.0, 4.0.4, 5.0.1, 2.3.6, 4.2.1, 4.1.1, 4.3, 4.4.4, 4.2.2, 4.1.2, 4.4.2, 2.3.5\nMostly occur on device SM-T805 (96%) and/or os version 4.4.2 (58%)\n0 java.lang.NullPointerException\n1 at com.octo.android.robospice.SpiceService.com.octo.android.robospice.persistence.CacheManager createCacheManager(android.app.Application)(SourceFile:487)\n2 void addSpiceServiceListener(com.octo.android.robospice.request.listener.SpiceServiceListener)\n3 at com.octo.android.robospice.SpiceManager$SpiceServiceConnection.void onServiceConnected(android.content.ComponentName,android.os.IBinder)(SourceFile:1087)\n4 at android.app.LoadedApk$ServiceDispatcher.doConnected(LoadedApk.java:1064)\n5 at android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1081)\n6 at android.os.Handler.handleCallback(Handler.java:587)\n7 at android.os.Handler.dispatchMessage(Handler.java:92)\n8 at android.os.Looper.loop(Looper.java:130)\n9 at android.app.ActivityThread.main(ActivityThread.java:3687)\n10 at java.lang.reflect.Method.invokeNative(Native Method)\n11 at java.lang.reflect.Method.invoke(Method.java:507)\n12 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:867)\n13 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:625)\n14 at dalvik.system.NativeStart.main(Native Method)\nThis is one of my top 10 bug report, and the stack does not include any of my code....\n. ",
    "cbriseno": "Hello, my project is having this issue as well but, in previous versions it did not happen. Maybe it has to do with new build tools, gradle plugins or support libraries versions?\n. ",
    "mykolaj": "It seems that we're talking about two different cases here which may or may not be related:\n1. First one is when a RequestProcessor is null.\n2. Second is when RS fails to create a cache folder.\nFirst things first. Lets take a look at the only line in a SpiceService code where RequestProcessor is assigned. As we can see, unless we don't mess something up with a createRequestProcessor() function in our own implementation of the SpiceService there's no way for the RequestProcessor to be null. So please make sure that in every custom subclass of the SpiceService, in case onCreate() function is overridden, super.onCreate() call goes first (!). Not last, not second, but first. Or make absolutely sure that before the SpiceService's super.onCreate() function call there's no way that any request is executed or any listener is created and added. In case anyone have a createRequestProcessor() function overridden also make sure that the function has no way to return null.\nI'll try to investigate the second case which is about a cache folder in the next few days.\n. Hi guys!\nI've created a pull request https://github.com/stephanenicolas/robospice/pull/454 where Retrofit2 support is added. There's a new module called robospice-retrofit2. I've been testing it for a couple of weeks on one of my projects and it works stable. My apologies for the class names - e.g. RobospiceRetrofitSpiceService2 and so on.\nFor now there's no wiki page though, but i will create it in the next few days. Take a look at the sample demonstrating how the new module can be used.\nAs for now i don't know how to proceed with publishing of new snapshot version of RoboSpice because i don't have a response from St\u00e9phane on google groups. So, until it's worked out, you could just take .jar files from the sample and use them. Please test it, and report about any issues you encounter when using the new module.\n. It looks like your object is not getting put into cache, and because of that RoboSpice keeps executing a request every time because there's nothing in the cache. Must be some issue with Jackson serializing this 'ReportTemplateWrapper' object and fails to do so. RoboSpice writes detailed logs. Please explore a log in AndroidStudio to track down an error. And/or post a log here if needed. Log must begin from exact moment after this.getSpiceManager().execute(request, request.createCacheKey(), DurationInMillis.ONE_DAY, new ReportTemplatesRequestRequestListener(this)) is called.\n. No problemo. Here it is.\nAlso, i don't like this \"2\" suffix either, and is opened to suggestions. But my creativity leaved me with that alone. :)\n. At the beginning i've started to work on this addon inside the existing robospice-retrofit module. But it soon it became clear to me that the new functionality conflicts with the old one and the both can not co-exist inside the same module, or will make implementation of the module quite messy. So i've created this new robospice-retrofit2 extension. \nAlso there were talks about a new Retrofit version out there for quite a time - since last summer i guess. And it is often referenced as  \"Retrofit two point o\". So it was logically attractive to call the new extension as \"robospice-retrofit2\". So, everyone would make parallels like \"retrofit two point o -> robospice-retrofit2\". \nSo i think a new name should be something that clearly distinguish \"old retrofit\" from \"new retrofit\" at least.\n. OK. What if i remove every \"2\" suffix from every class name so the class names will match the names from the robospice-retrofit module. This way for example RetrofitSpiceService2 will remain RetrofitSpiceService, RetrofitObjectPersister2 will remain RetrofitObjectPersister, and so on. Everything like in previous version. \n Instead i just move all classes in new packages with names like com.octo.android.robospice.persistence.retrofit.second, or com.octo.android.robospice.persistence.retrofit.two, or com.octo.android.robospice.persistence.retrofit.v2. Again, everything like in previous version, but with extra package directory added. This way a migration from the previous extension to the new one will be as simple as just change imports, and implement one extra method for every SpiceService implementation.\nBut about module name itself... i don't know, maybe robospice-retrofit-v2? \nAlso there are a couple of ridiculous choices: robospice-retrofit-next, robospice-retrofit-second, robospice-retrofit-new, robospice-retrofit-nextgen :)\n. Alright. As for now, i've removed '2' from class names.\n. I'm closing this pull request for now because there is a plenty of work to do about this new feature. Will create a new pull request when the work is done.\n. #459 as i said earlier\n. What difference does the date of a last commit make?\nThe library is doing its functions flawlessly. I don't think that android.os.Service implementation will change any time soon. So RS possibly will be useful for years to come without any commits.\n. Hmm... A little description for such a huge pull request would be helpful.\n. @aliceharrison OK, I'm going to need to refresh my memory a little about this issue, and will do everything from my side after that.. @SanyasiraoM  Please follow a link to check out my repo with a demo on how Retrofit2 can be used with Robospice: https://github.com/mykolaj/Robospice-Retrofit2-sample\nAlthough I've created a pull request, I doubt that it would be merged and/or released any time soon.\n// ---- BEGIN\nIn case someone need to use Retrofit2 with RoboSpice take a look at a sample repository.\nWhat you can do is to clone that sample, take '.jar' files from a 'libs' folder from here, and import // them into your own project.\ngit clone https://github.com/mykolaj/Robospice-Retrofit2-sample.git\nThat's all for now.\n// ---- END. Hello. Could you please ask that kind of things on Stackoverflow?  This isn't an issue of Robospice but of your project/build tools setup. There's no need to clog a section which is intended for different kind of things.\n. Well, lets say i've said that because i use Robospice in every single project i do which required REST communications, and haven't struggled with this error that much that only thing left to do is to open an issue on Github. That's one thing. A lot of people use it too by the way.\nSecond thing is that you've posted two different errors already. That's right. Not one error but two errors. Which may indicate that there's definitely something going on.\nThird thing is that some time ago i've made a module for Robospice and was forced to understand some inner Robospice organization because of that. One of those things was tests. Tests which wouldn't have passed in case of some class definitions wasn't found.\nOne more thing - which is based on my own experience completely and IS NOT to be TRUSTED because of that - is that every time NoClassDefFoundError occured to me meant someone has something messed up with build chain. Maybe ProGuard  shrinking or renaming your classes. Check that.\nAlso take into your sight that when i say \"Robospice\" i mean \"Robospice 1.4.14\". \nBut please don't take my word as indisputable truth. I may be very wrong because i haven't tried every possible combinations of android build tools versions and gradle plugin versions.\n. EDIT: Wow, it looks like I've failed to understand which module this question was related to (robospice-okhttp or robospice-retrofit). Pardon.\nIf you don't mind here's a little tip for @stephanenicolas on this issue. I looked into it a while ago. Error appears because Square developers have changed package names (not only this though but still) in their OkHttp library. \nHere are my changes from back than which address this issue: https://github.com/mykolaj/robospice/commit/d9009478cafa2b0a651aa3c3eaa58ea2e31ed358\n@SanyasiraoM Still robospice-okhttp-module has to be recompiled after applying those changes. So it looks like you're out of luck for now.. EDIT: Wow, it looks like I've failed to understand which module this question was related to (robospice-okhttp or robospice-retrofit). Pardon.\n@SanyasiraoM \n// --- Good solution:\nI could create a pull request. Hopefully it will be merged some day and a new version of the module will be released.\n// --- Not so good solution:\nMeanwhile you could clone my fork of Robospice git clone https://github.com/mykolaj/robospice.git . Switch to develop branch where those fixes are introduced already git checkout develop \nInstall Apache Maven on your machine (consult a user's manual for your operating system to do that) and build Robospice yourself. To do this switch to Robospice project's root directory in your terminal and execute mvn install command. Make sure you set ANDROID_HOME environment variable properly, and have android SDK platform version 19 installed, and have Android emulator started. After everything is done you can find a file in $HOME/.m2/repository/com/octo/android/robospice/robospice-okhttp/1.4.14-unofficial/robospice-okhttp-1.4.14-unofficial.jar\nWhy is this solution \"not so good\"? Because when official version of the module will be released it could be implemented differently and could brake your code if you'd decide to use it. So use it on your own risk.. @SanyasiraoM Take a look on a discussion by following this link: https://github.com/mykolaj/Robospice-Retrofit2-sample/issues/1. ",
    "adignatov": "@mykolaj I check onCreate, problem not in it. May be this line\n cacheManager = createCacheManager(getApplication()); \nin SpiceService.onCreate throw error and createRequestProcessor not calling?\n. ",
    "nzackoya": "Guys, I just ment to update codehouse to fasterxml in latest release of\nRS... Please look in JacksonObjectPersister class that is in\nrobospice-cahce-1.4.9.jar. It means in order I could use latest spring\nlibraries I need to use not only latest jackson libraries but also 1.9\nversion. I mean part of classes in libraries uses fasterxml and the other\npart - codehouse.\nOn Fri, Jan 3, 2014 at 5:21 PM, stephanenicolas notifications@github.comwrote:\n\nJackson level has been restored to 2.2.3. As this library dependency is\noptional,developers will decide by themselves whether or not to upgrade to\n2.3.1 and loose SDK 8 compatibility. RS will remain SDK 8+ compatible.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/238#issuecomment-31521871\n.\n. \n",
    "agrebnev": "Lets consider an example:\nI have a Class A which has the link to collection of B classes. When the cache persister will load data it will update in the databases both A and B entries. But why will my ContentResolver be notified about the changes in A only? \nI would like to know about changes in the B entity too.\n. I will try to do it till the end of next week.\n. @stephanenicolas I have made Pull Request. See https://github.com/octo-online/robospice/pull/259 Please check.\n. Steff, I have fixed check style and findbugs warnings. Please check\n. @PerfectCarl have a look at https://github.com/blandware/android-atleap It implements almost the same functionnality and event more. Android AtLeap is in Maven rep. \n. ",
    "quanturium": "I've just tried the demo fragment robospice-sample-core-fragment and got the same bug. I'm on API level 19.\n. ok great! thanks @gautamjain \n. ",
    "gautamjain": "I think I am having the same issue with my application.  I also tried the robospice-sample-core-basic and noticed the same issue there as well.\nTo recreate:\n1. Make a network request\n2. After the request completes, rotate the device\n3. Try making another request.  It adds to the 'pending requests' but never completes.\nNotes:\nI've tried this on API 18 and API 19.  I noticed that after the device is rotated, a pending request appears in the queue, when there shouldn't be any.\nLogs:\nI've broken down the logs into sections below.  This is using the robospice-sample-core-basic.\nLaunch app & wait until finished loading:\n01-15 21:02:12.202: D//SpiceManager.java:210(20106): 21:02:12.201 main SpiceManager started.\n01-15 21:02:12.206: V//SpiceManager.java:1172(20106): 21:02:12.206 SpiceManagerThread 0 Binding to service.\n01-15 21:02:12.216: V//SpiceManager.java:1178(20106): 21:02:12.208 SpiceManagerThread 0 Binding to service succeeded.\n01-15 21:02:12.218: D//SpiceManager.java:1225(20106): 21:02:12.217 SpiceManagerThread 0 Waiting for service to be bound.\n01-15 21:02:12.249: D//SpiceService.java:127(20106): 21:02:12.249 main SpiceService instance created.\n01-15 21:02:12.268: I/Adreno-EGL(20106): <qeglDrvAPI_eglInitialize:316>: EGL 1.4 QUALCOMM build:  (CL4169980)\n01-15 21:02:12.268: I/Adreno-EGL(20106): OpenGL ES Shader Compiler Version: 17.01.10.SPL\n01-15 21:02:12.268: I/Adreno-EGL(20106): Build Date: 10/30/13 Wed\n01-15 21:02:12.268: I/Adreno-EGL(20106): Local Branch: \n01-15 21:02:12.268: I/Adreno-EGL(20106): Remote Branch: \n01-15 21:02:12.268: I/Adreno-EGL(20106): Local Patches: \n01-15 21:02:12.268: I/Adreno-EGL(20106): Reconstruct Branch: \n01-15 21:02:12.311: D/OpenGLRenderer(20106): Enabling debug mode 0\n01-15 21:02:12.321: V//SpiceService.java:421(20106): 21:02:12.320 main Pending requests : 0\n01-15 21:02:12.321: V//SpiceService.java:423(20106): 21:02:12.321 main Stop foreground\n01-15 21:02:12.551: D//SpiceServiceListenerNotifier.java:33(20106): 21:02:12.550 main Message Queue starting\n01-15 21:02:12.551: D//SpiceManager.java:1076(20106): 21:02:12.551 main Bound to service : UncachedSpiceService\n01-15 21:02:12.552: D//SpiceManager.java:1232(20106): 21:02:12.552 SpiceManagerThread 0 Bound ok.\nPerform a request and let it finish\n01-15 21:02:43.161: D//SpiceManager.java:276(20106): 21:02:43.161 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n01-15 21:02:43.163: D//RequestProcessor.java:77(20106): 21:02:43.163 SpiceManagerThread 0 Adding request to queue 1695706168: CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@65144918] size is 0\n01-15 21:02:43.176: D//RequestProcessor.java:96(20106): 21:02:43.164 SpiceManagerThread 0 Adding entry for type class java.lang.String and cacheKey null.\n01-15 21:02:43.177: D//RequestProgressManager.java:54(20106): 21:02:43.177 SpiceManagerThread 0 Request was added to queue.\n01-15 21:02:43.180: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:43.180 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:43.181: D//RequestProgressManager.java:75(20106): 21:02:43.181 SpiceManagerThread 0 Sending progress PENDING\n01-15 21:02:43.187: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:43.184 SpiceManagerThread 0 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:43.200: D//SpiceServiceListenerNotifier.java:175(20106): 21:02:43.199 main Processing request added: CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@65144918]\n01-15 21:02:43.210: V//SpiceService.java:421(20106): 21:02:43.209 SpiceManagerThread 0 Pending requests : 1\n01-15 21:02:43.210: V//DefaultRequestListenerNotifier.java:131(20106): 21:02:43.210 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@65145058\n01-15 21:02:43.213: D//RequestRunner.java:73(20106): 21:02:43.213 Thread-10529 Processing request : CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@65144918]\n01-15 21:02:43.221: V//SpiceService.java:423(20106): 21:02:43.220 SpiceManagerThread 0 Stop foreground\n01-15 21:02:43.223: D//RequestRunner.java:119(20106): 21:02:43.223 Thread-10529 Cache content not available or expired or disabled\n01-15 21:02:43.229: D//RequestRunner.java:133(20106): 21:02:43.229 Thread-10529 Calling netwok request.\n01-15 21:02:43.230: D//RequestProgressManager.java:75(20106): 21:02:43.230 Thread-10529 Sending progress LOADING_FROM_NETWORK\n01-15 21:02:43.233: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:43.233 Thread-10529 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:43.238: V//DefaultRequestListenerNotifier.java:131(20106): 21:02:43.238 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@651676c0\n01-15 21:02:44.097: D//RequestRunner.java:136(20106): 21:02:44.096 Thread-10529 Network request call ended.\n01-15 21:02:44.098: D//RequestProgressManager.java:75(20106): 21:02:44.097 Thread-10529 Sending progress COMPLETE\n01-15 21:02:44.099: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:44.098 Thread-10529 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:44.102: V//DefaultRequestListenerNotifier.java:131(20106): 21:02:44.101 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@651b1f98\n01-15 21:02:44.107: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:44.106 Thread-10529 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:44.109: V//DefaultRequestListenerNotifier.java:166(20106): 21:02:44.109 main Notifying 1 listeners of request success\n01-15 21:02:44.110: V//DefaultRequestListenerNotifier.java:172(20106): 21:02:44.110 main Notifying ReverseStringRequestListener\n01-15 21:02:44.112: V//RequestProgressManager.java:154(20106): 21:02:44.112 Thread-10529 Removing CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@65144918]  size is 1\n01-15 21:02:44.113: D//RequestProgressManager.java:84(20106): 21:02:44.113 Thread-10529 Sending all request complete.\n01-15 21:02:44.114: V//SpiceService.java:409(20106): 21:02:44.114 Thread-10529 Pending requests : 0\n01-15 21:02:44.116: D//SpiceServiceListenerNotifier.java:146(20106): 21:02:44.115 Thread-10529 Message queue is Handler (android.os.Handler) {65139860}\n01-15 21:02:44.117: D//RequestRunner.java:279(20106): 21:02:44.117 Thread-10529 It tooks 908 ms to process request CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@65144918].\nRotate device and wait for application to load\n01-15 21:03:16.539: D//SpiceManager.java:295(20106): 21:03:16.539 main SpiceManager stopping.\n01-15 21:03:16.541: V//SpiceManager.java:752(20106): 21:03:16.540 main Cleared listeners of all requests to launch\n01-15 21:03:16.542: V//SpiceManager.java:781(20106): 21:03:16.542 main Cleared listeners of all pending requests\n01-15 21:03:16.543: V//SpiceManager.java:1201(20106): 21:03:16.543 main Unbinding from service start.\n01-15 21:03:16.545: V//SpiceManager.java:1205(20106): 21:03:16.544 main Unbinding from service.\n01-15 21:03:16.594: D//SpiceManager.java:1207(20106): 21:03:16.594 main Unbound from service : UncachedSpiceService\n01-15 21:03:16.596: D//SpiceManager.java:258(20106): 21:03:16.596 SpiceManagerThread 0 Interrupted while waiting for new request.\n01-15 21:03:16.597: D//SpiceManager.java:305(20106): 21:03:16.595 main SpiceManager stopped.\n01-15 21:03:16.697: D//SpiceManager.java:210(20106): 21:03:16.697 main SpiceManager started.\n01-15 21:03:16.707: V//SpiceManager.java:1172(20106): 21:03:16.707 SpiceManagerThread 0 Binding to service.\n01-15 21:03:16.714: V//SpiceManager.java:1178(20106): 21:03:16.712 SpiceManagerThread 0 Binding to service succeeded.\n01-15 21:03:16.721: D//SpiceManager.java:1225(20106): 21:03:16.721 SpiceManagerThread 0 Waiting for service to be bound.\n01-15 21:03:16.760: V//SpiceService.java:421(20106): 21:03:16.760 main Pending requests : 0\n01-15 21:03:16.762: V//SpiceService.java:423(20106): 21:03:16.761 main Stop foreground\n01-15 21:03:16.764: V//SpiceService.java:409(20106): 21:03:16.763 main Pending requests : 0\n01-15 21:03:16.768: D//SpiceManager.java:1076(20106): 21:03:16.767 main Bound to service : UncachedSpiceService\n01-15 21:03:16.769: D//SpiceManager.java:1232(20106): 21:03:16.768 SpiceManagerThread 0 Bound ok.\n01-15 21:03:16.769: D//SpiceManager.java:276(20106): 21:03:16.769 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n01-15 21:03:16.770: D//RequestProcessor.java:73(20106): 21:03:16.770 SpiceManagerThread 0 Dropping request : CachedSpiceRequest [requestCacheKey=null, cacheDuration=-1, spiceRequest=com.octo.android.robospice.SpiceManager$2@6519d0f8] as processor is stopped.\n01-15 21:03:16.771: V//SpiceService.java:421(20106): 21:03:16.771 SpiceManagerThread 0 Pending requests : 1\n01-15 21:03:16.775: V//SpiceService.java:426(20106): 21:03:16.775 SpiceManagerThread 0 Start foreground\n01-15 21:03:16.827: V//SpiceService.java:421(20106): 21:03:16.827 main Pending requests : 1\n01-15 21:03:16.828: V//SpiceService.java:423(20106): 21:03:16.828 main Stop foreground\nTry to perform a request again\n01-15 21:03:49.887: D//SpiceManager.java:276(20106): 21:03:49.887 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n01-15 21:03:49.888: D//RequestProcessor.java:73(20106): 21:03:49.888 SpiceManagerThread 0 Dropping request : CachedSpiceRequest [requestCacheKey=null, cacheDuration=0, spiceRequest=com.octo.android.robospice.sample.basic.ReverseStringRequest@650c0870] as processor is stopped.\n01-15 21:03:49.889: V//SpiceService.java:421(20106): 21:03:49.889 SpiceManagerThread 0 Pending requests : 2\n01-15 21:03:49.890: V//SpiceService.java:423(20106): 21:03:49.890 SpiceManagerThread 0 Stop foreground\n. @quanturium, switching to 1.4.9 dependencies instead of 1.4.10 might be a temporary solution.  Seems to work fine for me.\n. 1.4.11 is working for me.  Thanks!\n. Btw, I'm using API 19 with version 1.4.10.\n. ",
    "eshbeata": "Extra Logs \n01-15 23:00:40.328    3407-3407/com.eshbeata.app D//SpiceManager.java:210\ufe55 23:00:40.333 main SpiceManager started.\n01-15 23:00:40.460    3407-3407/com.eshbeata.app D//SpiceManager.java:295\ufe55 23:00:40.465 main SpiceManager stopping.\n01-15 23:00:40.460    3407-3407/com.eshbeata.app V//SpiceManager.java:752\ufe55 23:00:40.468 main Cleared listeners of all requests to launch\n01-15 23:00:40.468    3407-3407/com.eshbeata.app V//SpiceManager.java:781\ufe55 23:00:40.472 main Cleared listeners of all pending requests\n01-15 23:00:40.468    3407-3407/com.eshbeata.app V//SpiceManager.java:1201\ufe55 23:00:40.475 main Unbinding from service start.\n01-15 23:00:40.476    3407-3407/com.eshbeata.app V//SpiceManager.java:1205\ufe55 23:00:40.477 main Unbinding from service.\n01-15 23:00:40.476    3407-3407/com.eshbeata.app D//SpiceManager.java:1207\ufe55 23:00:40.482 main Unbound from service : MVSpiceService\n01-15 23:00:40.484    3407-3407/com.eshbeata.app D//SpiceManager.java:305\ufe55 23:00:40.485 main SpiceManager stopped.\n01-15 23:00:40.507    3407-3407/com.eshbeata.app V//SpiceService.java:421\ufe55 23:00:40.513 main Pending requests : 1\n01-15 23:00:40.507    3407-3407/com.eshbeata.app V//SpiceService.java:426\ufe55 23:00:40.516 main Start foreground\n01-15 23:00:40.531    3407-3407/com.eshbeata.app V//SpiceService.java:409\ufe55 23:00:40.534 main Pending requests : 1\n01-15 23:00:40.562    3407-4194/com.eshbeata.app V//SpiceManager.java:1172\ufe55 23:00:40.392 SpiceManagerThread 0 Binding to service.\n01-15 23:00:40.570    3407-4191/com.eshbeata.app D//SpiceManager.java:258\ufe55 23:00:40.487 SpiceManagerThread 1 Interrupted while waiting for new request.\n01-15 23:00:40.570    3407-4194/com.eshbeata.app V//SpiceManager.java:1178\ufe55 23:00:40.578 SpiceManagerThread 0 Binding to service succeeded.\n01-15 23:00:40.578    3407-3407/com.eshbeata.app D//SpiceManager.java:1076\ufe55 23:00:40.582 main Bound to service : MVSpiceService\n01-15 23:00:40.585    3407-3407/com.eshbeata.app V//SpiceService.java:421\ufe55 23:00:40.587 main Pending requests : 1\n01-15 23:00:40.585    3407-3407/com.eshbeata.app V//SpiceService.java:423\ufe55 23:00:40.590 main Stop foreground\n01-15 23:00:40.617    3407-4194/com.eshbeata.app D//SpiceManager.java:1225\ufe55 23:00:40.618 SpiceManagerThread 0 Waiting for service to be bound.\n01-15 23:00:40.617    3407-4194/com.eshbeata.app D//SpiceManager.java:1232\ufe55 23:00:40.621 SpiceManagerThread 0 Bound ok.\n01-15 23:00:40.617    3407-4194/com.eshbeata.app D//SpiceManager.java:276\ufe55 23:00:40.623 SpiceManagerThread 0 Sending request to service : CachedSpiceRequest\n01-15 23:00:40.617    3407-4194/com.eshbeata.app D//RequestProcessor.java:73\ufe55 23:00:40.625 SpiceManagerThread 0 Dropping request : CachedSpiceRequest [requestCacheKey=null, cacheDuration=-1, spiceRequest=com.eshbeata.app.cart.service.GetCartRequest@40840df8] as processor is stopped.\n01-15 23:00:40.625    3407-4194/com.eshbeata.app V//SpiceService.java:421\ufe55 23:00:40.629 SpiceManagerThread 0 Pending requests : 2\n01-15 23:00:40.625    3407-4194/com.eshbeata.app V//SpiceService.java:423\ufe55 23:00:40.632 SpiceManagerThread 0 Stop foreground\n. ",
    "ruimateus": "I am having the same problem... I am guessing that the problem is in RequestProcessor#71 when it compares a canceled dummy request (with the same requestCacheKey and request ResultType) with the current running request. The equals returns false?\nCheers\n. ",
    "silin": "I faced with the same problem as @colintheshots . cancelAllRequests doesn`t actually cancel requests, callbacks still fire. In my case requests are not cancelled if \"Network is down\" and listener always fire onRequestFailure with corresponding exception\n. ",
    "pdegand": "As Ruimateus said, when the SpiceManager is executing a dummy-canceled request, the already-running request and the dummy-canceled request are not considered equals then the already running request won't be canceled.\nProblem is located in the CachedSpiceRequest.equals()#202.\nThe dummy-cancelled request is not considered equals with the already-running request because one is cancelled while the other is not.\nI can work on a fix for this but i guess the 'CachedSpiceRequest.equals()' is widely used across the library.\nI hope unit tests are covering everything.\n. Already reported in #251.\n. ",
    "yavski": "Hi. We've just gone live with a few apps using your framework and have also received this error on a number of occasions. Nearly 5% of our users manage to generate it, the number of total crashes is in the 000s, and  we would like to resolve it as soon as possible. \nThe suggested practice from 'Java in concurrency' is to have the caller catch the exception and implement its own overflow handling. Once you catch it you can pop it as a standard RoboSpiceException. If that doesn't seem a good fit you could allow the client code to set a custom UncaughtHandlerException and handle this error gracefully. Another alternative is to not use the default AbortPolicy and go for one of the less aggressive policies : DiscardOldestPolicy or DiscardPolicy. \nPlease make the required changes above and release a patch. Below is our strack traces.\njava.util.concurrent.RejectedExecutionException: Task com.octo.android.robospice.priority.PriorityFuture@51 rejected from com.octo.android.robospice.priority.PriorityThreadPoolExecutor@428974b0[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17]\n       at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1979)\n       at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:786)\n       at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1307)\n       at com.octo.android.robospice.priority.PriorityThreadPoolExecutor.submit()\n       at com.octo.android.robospice.request.DefaultRequestRunner.planRequestExecution()\n       at com.octo.android.robospice.request.DefaultRequestRunner$2.run()\n       at java.lang.Thread.run(Thread.java:841)\n. ",
    "anilanar": "@nkeskinov Why is this PR closed?\n. ",
    "lukesleeman": "Digging through the code the following would be a rough plan for how support would be added:\n1 - InDatabaseObjectPersisterFactory.createObjectPersister(Class< DATA > clazz) would need to be modified with logic to detect if DATA is a list or array type.  Rayther than return InDatabaseObjectPersister it would need to return a different class: InDatabaseListObjectPersister.  Perhaps InDatabaseListObjectPersister extends InDatabaseObjectPersister, though I am not too sure about this.  Another alternative is that InDatabaseListObjectPersister wraps a InDatabaseObjectPersister and delegates some work to it?\n2 - InDatabaseListObjectPersister.loadDataFromCache would need to handle the case where multiple CacheEntry objects are returned.  It would basically need to loop through them and resolve each CacheEntry instead of assuming there is a single cache entry.  Performance may be an issue as we would be executing lots of queries - one for each CacheEntry to resolve the associated object.\n3 - InDatabaseListObjectPersister.saveDataToCacheAndReturnData(final T data, final Object cacheKey) would need to assume that T is a list or array.  It would need to iterate through each element in the array and then basically perform the same logic that InDatabaseObjectPersister.saveDataToCacheAndReturnData does\n4 - removeDataFromCache would need to be modified to assume that a list of CacheEntry objects will need to be removed not just one.\n5 - Special attention will need to be paid to the case that the SpiceRequest returns an empty array or list.  I'm unsure how the existing cache backends support SpiceRequest's that return null, but we might want to piggy back off that behaviour.  Looking through InDatabaseObjectPersister I'm not sure a SpiceRequest that returns null would work with the ORM Lite backend.  There seems to be the assumption that a SpiceRequest will definitely result in one row in the cacheentry table.  Perhaps add boolean noResults field to CacheEntry that is true if the request returns no results?\n. We have moved away from robospice, so its unlikely that I will find time to implement this.  If somebody else wants to pick it up though, they are more than welcome.\n. ",
    "MoizAli": "Has this issue been resolved? \n. ",
    "deepakazad": "Would love to see this fixed.\n. @lukesleeman What do you use as an alternative to Robospice to accomplish this ?\n. ",
    "PerfectCarl": "Any news ?\n. My bad. Sorry for the repost. Feel free to delete this issue.\n. I feel like I should write a requestrunner that wouldn't use the service to\nexecute the request (but still be a nice robospice citizen to enjoy the\ncaching services).\nAt the core, my use case is about using robospice as a back end for a data\nadapter for a viewpager.\nMaybe you have sample of code for this.\nThat way I could scrap the async data adapter that I wrote (inspired by\ncwac) and start from your sample...\n Le 13 f\u00e9vr. 2014 09:51, \"softwaremaverick\" notifications@github.com a\n\u00e9crit :\n\nMaybe in your instance you need to try and use the RequestRunner class on\nit's own.\nTake a look to see if the required parameters are available to you\nOn 12 February 2014 20:39:43 GMT, PerfectCarl notifications@github.com\nwrote:\n\nI'm using robospice on a project that already has an async execution\ninfrastructure.\nFor the moment, I don't want to refactor all my code, but just start\nusing robospice for its nice Api and built in cache.\nSo I would need to execute the execute method synchronously. Is it\npossible ?\nCan I wait on a requestlistener ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/octo-online/robospice/issues/265\n\n\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n\nReply to this email directly or view it on GitHubhttps://github.com/octo-online/robospice/issues/265#issuecomment-34958827\n.\n. @rciovati great answer. \nJust for the sake of completion, I ended up modifying my code to use the full async robospice architecture.\n. \n",
    "Proper-Job": "Hi Robospice Team\nI rechecked my initial statement above, and after some more testing I'm consistently experiencing the SpiceService being destroyed during device rotation.\nThank you and greetings\nMoritz\n. Hi @stephanenicolas \nThank you for getting back to me about this.\nAt this point (4 months later) I can no longer reproduce the behavior I reported back in February.\nThings that I changed since then are:\n- Fragment has own instance of SpiceManager (no longer using the Activity's SpiceManager)\n- SpiceManager is now instantiated in Fragment's onCreate instead of using a declaration and instantiation one-liner (see below).\njava\npublic MyClass {\nprotected MySpiceManager spiceManager = new MySpiceManager(UncachedSpringAndroidSpiceService.class);\n}\nThere are also numerous architectural changes I made that could have influenced the Fragment's lifecycle. I'll keep an eye on this one, but for the time being I think you can close this issue.\nThank you and greetings\nMoritz\n. I understand you have your work cut out for yourself.\nThank you for your unfailing efforts with Robospice.\nI will keep my eyes open for any unusual behaviour like this, I suspect it was a Fragment lifecycle problem.\nThank you and greetings\nMoritz Pfeiffer\nAlp Phone GmbH\nM\u00fcnsterberg 11\n4051 Basel\nTel: +41 61 272 27 77\nwww.alp-phone.ch | moritz.pfeiffer@alp-phone.ch\nOn 11 Jun 2014, at 09:43, stephanenicolas notifications@github.com wrote:\n\nSo cool. Sorry for this overlong delay, I have been pretty busy on other \nstuff recently. \nI am really glad it works. I will close the issue but let us know if \nsomething like this pops back. \nS. \nLe 11 juin 2014 08:55, \"Moritz Pfeiffer\" notifications@github.com a \u00e9crit \n: \n\nHi @stephanenicolas https://github.com/stephanenicolas \nThank you for getting back to me about this. \nAt this point (4 months later) I can no longer reproduce the behavior I \nreported back in February. \nThings that I changed since then are: \n- Fragment has own instance of SpiceManager (no longer using the \n  Activity's SpiceManager) \n- SpiceManager is now instantiated in Fragment's onCreate instead of \n  using a declaration and instantiation one-liner (see below). \npublic MyClass {protected MySpiceManager spiceManager = new MySpiceManager(UncachedSpringAndroidSpiceService.class);} \nThere are also numerous architectural changes I made that could have \ninfluenced the Fragment's lifecycle. I'll keep an eye on this one, but for \nthe time being I think you can close this issue. \nThank you and greetings \nMoritz \n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/issues/263#issuecomment-45708013 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. I get this in some of my apps using 1.4.12.\nI'd like to give those 1.4.13 snapshot jars a try.\nI don't use maven or gradle (good old ant), is there a way to download the 1.4.13-SNAPSHOT jars somehwere?\nThanks\nMoritz\n. Never mind, I managed to build the snapshot myself.\nThanks anyways\nMoritz\n. Could you redact you log file somewhat, it's hard to see the pertinent statements.\nAre you using fragments to start your requests?  Is your fragment handling correct (only instantiate from Activity when savedInstanceState == null in onCreate())?\nI got some pretty strange behaviour in robospice when fragments got erroneously instantiated.\n. \n\n",
    "faraday": "When I used Fragments accessing SpiceManager through the Activity, despite spiceManager.start() getting called at onStart() of the Activity at recreation time, subsequent requests from Fragments did not get executed after an orientation change.\nI fixed this by making my Fragments use their own SpiceManager instances. (as pointed out earlier by @Alp-Phone ).\nI think this issue must be re-opened @stephanenicolas , at least discussing the root cause and warning the developers against such use.\n. ",
    "eefret": "@stephanenicolas please give your opinion on this im stucked here too\n. There's other cases too, for example if you have an app that requires a server configuration to construct your UI by a Subscription Setting, then you need to block the UI (SplashScreen or something) until the data has been loaded. @rciovati Solution worked perfectly, Thanks.\n. Would see if I can get a good idea for this, I had to hack workarounds in some of my projects.\n. ",
    "axd1967": "when I define a CountDownLatch outside the SpiceManager::execute() call, and call countDown() inside onRequestFailure() as well as in onRequestFailure(), the UI halts... as if execute() never returns... so how can that be a good solution? (I'm using com.octo.android.robospice:robospice-spring-android:1.4.14)\n(see https://github.com/stephanenicolas/robospice/issues/265#issuecomment-41251811)\n. Sigh... If even this kind of pull request cannot be honored...\n@stephanenicolas you should consider handling at least such trivial requests, maybe this would help you find contributors (#426)\nrgds\n. I also sometimes run into requests that never get processed (and there is no device rotation or other funny Activity state stuff going on)\n```\n06-16 09:18:52.280 1852-1852/test D//SpiceManager.java:489: 09:18:52.295 main adding request to request queue\n06-16 09:18:52.290 1852-7027/test D//SpiceManager.java:286: 09:18:52.302 SpiceManagerThread 1 Sending request to service : CachedSpiceRequest\n06-16 09:18:52.290 1852-7027/test D//RequestProcessor.java:63: 09:18:52.303 SpiceManagerThread 1 Adding request to queue 1116400536: CachedSpiceRequest [requestCacheKey=test.rest.requests.GET_DirectionsRequest0, cacheDuration=-1, spiceRequest=test.rest.requests.GET_DirectionsRequest@42b71c50] size is 8\n06-16 09:18:52.320 1852-7027/test D//RequestProcessor.java:90: 09:18:52.330 SpiceManagerThread 1 Request for type class test.rest.json.GET_Directions and cacheKey test.rest.requests.GET_DirectionsRequest0 already exists.\n06-16 09:18:52.320 1852-7027/test D//RequestProgressManager.java:69: 09:18:52.331 SpiceManagerThread 1 Request was aggregated in queue.\n06-16 09:18:52.320 1852-7027/test D//SpiceServiceListenerNotifier.java:146: 09:18:52.333 SpiceManagerThread 1 Message queue is Handler (android.os.Handler) {423f6648}\n06-16 09:18:52.330 1852-7027/test D//RequestProgressManager.java:82: 09:18:52.335 SpiceManagerThread 1 Sending progress PENDING\n06-16 09:18:52.330 1852-7027/test D//SpiceServiceListenerNotifier.java:146: 09:18:52.341 SpiceManagerThread 1 Message queue is Handler (android.os.Handler) {423f6648}\n06-16 09:18:52.340 1852-7027/test V//SpiceService.java:506: 09:18:52.346 SpiceManagerThread 1 Pending requests : 16\n06-16 09:18:52.340 1852-7027/test V//SpiceService.java:508: 09:18:52.348 SpiceManagerThread 1 Stop foreground\n06-16 09:18:52.350 1852-1852/test D//SpiceServiceListenerNotifier.java:203: 09:18:52.357 main Processing request added: CachedSpiceRequest [requestCacheKey=test.rest.requests.GET_DirectionsRequest0, cacheDuration=-1, spiceRequest=test.rest.requests.GET_DirectionsRequest@42b71c50]\n06-16 09:18:52.360 1852-1852/test V//DefaultRequestListenerNotifier.java:131: 09:18:52.373 main Notifying 1 listeners of progress com.octo.android.robospice.request.listener.RequestProgress@42aa1268\n```\nthe \"Pending request\" counter just keeps going up.\n```\n    compile 'com.android.support:support-v4:23.3.0'\n    compile 'com.android.support:appcompat-v7:23.3.0'\n    compile 'com.octo.android.robospice:robospice-spring-android:1.4.14'\n    compile 'com.google.http-client:google-http-client-jackson:1.15.0-rc'\n    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'\n    compile 'com.google.android.gms:play-services-base:8.4.0'\n    compile 'com.google.android.gms:play-services-identity:8.4.0'\n    compile 'com.google.android.gms:play-services-plus:8.4.0'\n    compile 'com.google.android.gms:play-services-maps:8.4.0'\n    compile 'com.google.android.gms:play-services-location:8.4.0'\n    compile 'com.android.support:design:23.3.0'\n    compile 'com.android.support:cardview-v7:23.3.0'\n    compile 'com.android.support:gridlayout-v7:23.3.0'\n    compile 'com.google.android.gms:play-services-analytics:8.4.0'\n    compile 'de.psdev.licensesdialog:licensesdialog:1.8.0'\n    compile 'com.google.android.gms:play-services-appindexing:8.4.0'\ncompileSdkVersion 23\nbuildToolsVersion \"23.0.3\"\n\ndefaultConfig {\n    minSdkVersion 11 // (3.0) various\n    targetSdkVersion 21\n\n```\nbut sometimes it happens that the request takes a very long time (several seconds) to complete, giving the impression that nothing is happening.\n. ",
    "jtietema": "Sorry missed the KeySanitizer options :-/\n. @stephanenicolas Any change this can be merged? The failed build seems pretty random, something about Maven not being able to download the findbugs dependency. Doesn't seem related to the PR...\n. Awesome! Thanks for the release :-)\n. ",
    "k0dek0mmand0": ":+1: Seems to be related to #203 and comes in various flavors.\nIn our case an activity causes the manager to be started and stopped in a quick succession, which results in one thread being at waitForServiceToBeBound (synchronized) while also holding an explicit lock (lockAcquireService), and the other waiting at shouldStopAndJoin.\n. ",
    "emartynov": "Sure I can ask BE developers for this. But is it not duplication since I have 204 http code?\n. I use RestTemplate postForObject and Jackson throwing exception in case of empty body\n. ",
    "esh1n": "@emartynov see this\npublic class LoginRequest extends SpringAndroidSpiceRequest {\n```\nprivate String user;\nprivate String pass;\npublic LoginRequest(String user, String pass) {\n    super(Boolean.class);\n    this.user = user;\n    this.pass = pass;\n}\n@Override\npublic Boolean loadDataFromNetwork() throws Exception {\n    LoginMessage loginMessage = new LoginMessage(user, pass);\n    ResponseEntity responseEntity = getRestTemplate()\n            .postForEntity(\"your login url\", loginMessage, String.class);\n    return responseEntity.getStatusCode().value() == 204;\n}\n```\n}\n. thanx for answer! I 've just googled by keywords in your answer and found how to solve it.\nNice lib!\n. Yes.i've just overrided RetryPolicy by\n             myRequest.setRetryPolicy().\nif I understand correctly,theres is DefaultRetryPolicy,which is set on each SpiceRequest.\n. @softwaremaverick How can spice service override the get retry policy method?\nin that robospice FAQ it says that RetryPolicy can be overrided by within a spice request\nhttps://github.com/stephanenicolas/robospice/wiki/Advanced-RoboSpice-Usages-and-FAQ\n. @softwaremaverick  It would be amazing, if you give me little example(if it's possible,my be pseudo code,may be link to source you watched).So I would highly optimized my architecture , if you give that example.And  love your lib more .Sorry to trouble\n. ",
    "Mgamerz": "You have to either put the entire array (not just the one you want to post, but everything, including already existing ones) or you have to do it one at at time. At least, that's as much as I know about robospice.\n. ",
    "mariuspena": "well it does not help very much. I need some code (and fast :) )\n. ok. I already do this:\nparameters.set(\"song_ids\", \"1,2,3,4\"); < the 1 2 3 needs to be encoded somehow.. \nit does not work.\n. @rciovati :) wouldn't that get overwritten on each set ? \n. @rciovati you are simply genius!\nparameters.add(\"song_ids[]\", \"1\");\nparameters.add(\"song_ids[]\", \"2\");\nparameters.add(\"song_ids[]\", \"3\");\nthe [] fixed the issue\nPS: how is your code highlighted so nicely? :)\n. nevermind\nthe way I used it was correct. \n. ",
    "fewstera": "I would also like to know this\n. ",
    "shenwill": "Sure. My pleasure.\nPlease take a look at this snippets from AndroidManifest.xml in my project, hopefully it's much helpful than explanation.\nxml\n <receiver  android:name=\"com.baidu.android.pushservice.RegistrationReceiver\"                 android:process=\":bdservice_v1\">             <intent-filter>                 <action android:name=\"com.baidu.android.pushservice.action.METHOD\"/>                 <action android:name=\"com.baidu.android.pushservice.action.BIND_SYNC\"/>             </intent-filter>             <intent-filter>                 <action android:name=\"android.intent.action.PACKAGE_REMOVED\"/>                 <data android:scheme=\"package\"/>             </intent-filter>         </receiver>          <service                 android:name=\"com.baidu.android.pushservice.PushService\"                 android:exported=\"true\"                 android:process=\":bdservice_v1\"/>\nAlso I'm confusing about branches... On which branch, I can make a fix on my forked repo and then make a pull request? \nIt introduced a new bug, that is, onServiceDisconnect, a null detection has to be executed, since the instance might be null at onServiceConnected. \nThanks,\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e2d\u53481:08\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\n@shenwill Please help us understand us whether this PR leads to a valid use case.\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry, I need to understand some terms.\n- What does the PR stand for? Problem? \n- RS I believe it stands for RoboSpice, right?\n- What means 'which extent does anything work'?\nThe app I created will launch an extra process which name should be 'app.i-created:bdservice_v1', which is exported. It's composed by a 3rd party Company Baidu and wrapped into JAR which is not open sourced. That process shares myApplication.onCreated(), which supposed to be extended from FrontiaApplication, which mentioned in SDK documentation at\nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview. The documentation has no English version, please try Google Translate from Simplified Chinese. The SDK named is BaiDu Frontia, which contains push service, and analyst, and social sharing components, and much more you can imagined. The push servers are also hosted by Baidu company. This is sadly because Google is not eligible to run business in China Mainland, so Google Service Framework has to be removed from any Android devices here. Then many companied wants to gain users by providing push service... \nAh, this is a long story. You have no idea how painful it is! There is at least a dozen pushing service providers in China Mainland market and a dozen pushing service processes running in users' devices. Each service provider wants to conquer all and be the last one to occupy the whole user's devices...\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nHi @shenwill ,\nwhen you submit a PR you can use whatever branch of your own repo, and just open the PR against our master branch (which is development branch for us). Every commit, even after the PR, will be added to the PR, from the forking commit to current HEAD of your branch.\nBut, apart of that, please answer the question above : in which extent does anything work when you use RS with a different process hosting your RS services.\n\u2014\nReply to this email directly or view it on GitHub.\n. S., thanks for your effort to clarify all these meanings. It's very helpful and I think I got it.\nIf not taking the Baidu Frontia SDK, the project is simple and straight forward, and just like most other apps, no any extra android:process specified. \nAs you mentioned, there is only one process for all activities and one RS service which do networking jobs. This can be improved by looking into the process list in Android Device Manager. Everything runs fine indeed.\nAfter using Baidu Frontia SDK, there is one more process created. By setting a break point at beginning of onServiceConnected(), an unexpected 'IBinder of the Service's communication channel' rushed in, which definitely is not SpiceServiceBinder, and crashes app. As I mentioned before, Baidu Frontia SDK is not open sourced. And even more, there is a DEX file in JAR rather than all class files. This introduces many warnings in AndroidManifest.xml, since many activity names and receiver names can not be found according to the SDK documentation. I believe there are must be some abnormal reasons, but it makes me uncomfortable.\nAfter encountering the infinite loop of app launching and crashing several times, I'm still using Baidu Frontia for analyst and social sharing components, but not push service any more. I chose another push service provider in local market, but this also creates another process to run push service, just same as Baidu Frontia.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a8:49\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nOk, I follow you. Sorry for the github slang : \n- PR means Pull Request \n- RS is RoboSpice \nMy last question when asking : \"In which extent does it work with RS\" needs \n  more detail. \nWhen you use RS, you need a service that will be used for performing \n  background jobs. The service has to be in the same service as activities, \n  this is mandatory, otherwise RS simply doesn't work at all. This property \n  of being in the same process allows a bi-directional object oriented \n  communication channel between the service and activities (i.e. the spice \n  manager) and the listeners. \nIf you use RS in an another process, I don't have any idea of the kind of \n  things you can do. But actually, I would believe that nothing will work at \n  all. So please, be more precise. Explain what you want to do : for instance \n  (and that example would not work) \nMyRSService       <------> MyActivity \n  (inside process A)         (inside process B) \nThe arrow means \"bi-directional communication\". \nS. \n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com: \n\nSorry, I need to understand some terms. \n- What does the PR stand for? Problem? \n- RS I believe it stands for RoboSpice, right? \n- What means 'which extent does anything work'? \nThe app I created will launch an extra process which name should be \n'app.i-created:bdservice_v1', which is exported. It's composed by a 3rd \nparty Company Baidu and wrapped into JAR which is not open sourced. That \nprocess shares myApplication.onCreated(), which supposed to be extended \nfrom FrontiaApplication, which mentioned in SDK documentation at \nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview. \nThe documentation has no English version, please try Google Translate from \nSimplified Chinese. The SDK named is BaiDu Frontia, which contains push \nservice, and analyst, and social sharing components, and much more you can \nimagined. The push servers are also hosted by Baidu company. This is sadly \nbecause Google is not eligible to run business in China Mainland, so Google \nService Framework has to be removed from any Android devices here. Then \nmany companied wants to gain users by providing push service... \nAh, this is a long story. You have no idea how painful it is! There is at \nleast a dozen pushing service providers in China Mainland market and a \ndozen pushing service processes running in users' devices. Each service \nprovider wants to conquer all and be the last one to occupy the whole \nuser's devices... \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill , \nwhen you submit a PR you can use whatever branch of your own repo, and \njust open the PR against our master branch (which is development branch for \nus). Every commit, even after the PR, will be added to the PR, from the \nforking commit to current HEAD of your branch. \nBut, apart of that, please answer the question above : in which extent \ndoes anything work when you use RS with a different process hosting your RS \nservices. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Here are some code lines related to RS:\n\npublic class MidasSpiceService extends UncachedSpiceService {\n    @Override\n    public int getThreadCount() {\n        return 3;\n    }\n}\n// CommandExecutor implementation class\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nspiceManager.execute(request, requestListener);\n// AndroidManifest.xml\n        \nMaybe... have a try with Frontia SDK?\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u51cc\u66681:06\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nOk Will, but I don't get who is using a spicemanager and getting the class \n cast exception. Please be more precise like : \nClass A { \n   SpiceManager sp = new SpiceManager(B.class) \n } \nclass B extends XXXSpiceService { \n } \njust give the big picture, the overview, of who is who, who is using RS, \n etc. \nI just don't understand how you get this exception : what are you trying to \n do ?? \nS. \n2014-06-11 13:00 GMT-04:00 shenwill notifications@github.com: \n\nS., thanks for your effort to clarify all these meanings. It's very \nhelpful and I think I got it. \nIf not taking the Baidu Frontia SDK, the project is simple and straight \nforward, and just like most other apps, no any extra android:process \nspecified. \nAs you mentioned, there is only one process for all activities and one RS \nservice which do networking jobs. This can be improved by looking into the \nprocess list in Android Device Manager. Everything runs fine indeed. \nAfter using Baidu Frontia SDK, there is one more process created. By \nsetting a break point at beginning of onServiceConnected(), an unexpected \n'IBinder of the Service's communication channel' rushed in, which \ndefinitely is not SpiceServiceBinder, and crashes app. As I mentioned \nbefore, Baidu Frontia SDK is not open sourced. And even more, there is a \nDEX file in JAR rather than all class files. This introduces many warnings \nin AndroidManifest.xml, since many activity names and receiver names can \nnot be found according to the SDK documentation. I believe there are must \nbe some abnormal reasons, but it makes me uncomfortable. \nAfter encountering the infinite loop of app launching and crashing several \ntimes, I'm still using Baidu Frontia for analyst and social sharing \ncomponents, but not push service any more. I chose another push service \nprovider in local market, but this also creates another process to run push \nservice, just same as Baidu Frontia. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a8:49 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nOk, I follow you. Sorry for the github slang : \n- PR means Pull Request \n- RS is RoboSpice \nMy last question when asking : \"In which extent does it work with RS\" \nneeds \nmore detail. \nWhen you use RS, you need a service that will be used for performing \nbackground jobs. The service has to be in the same service as activities, \nthis is mandatory, otherwise RS simply doesn't work at all. This property \nof being in the same process allows a bi-directional object oriented \ncommunication channel between the service and activities (i.e. the spice \nmanager) and the listeners. \nIf you use RS in an another process, I don't have any idea of the kind of \nthings you can do. But actually, I would believe that nothing will work at \nall. So please, be more precise. Explain what you want to do : for \ninstance \n(and that example would not work) \nMyRSService <------> MyActivity \n(inside process A) (inside process B) \nThe arrow means \"bi-directional communication\". \nS. \n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com: \n\nSorry, I need to understand some terms. \n- What does the PR stand for? Problem? \n- RS I believe it stands for RoboSpice, right? \n- What means 'which extent does anything work'? \nThe app I created will launch an extra process which name should be \n'app.i-created:bdservice_v1', which is exported. It's composed by a 3rd \nparty Company Baidu and wrapped into JAR which is not open sourced. That \nprocess shares myApplication.onCreated(), which supposed to be extended \nfrom FrontiaApplication, which mentioned in SDK documentation at \nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview. \nThe documentation has no English version, please try Google Translate \nfrom \nSimplified Chinese. The SDK named is BaiDu Frontia, which contains push \nservice, and analyst, and social sharing components, and much more you \ncan \nimagined. The push servers are also hosted by Baidu company. This is \nsadly \nbecause Google is not eligible to run business in China Mainland, so \nGoogle \nService Framework has to be removed from any Android devices here. Then \nmany companied wants to gain users by providing push service... \nAh, this is a long story. You have no idea how painful it is! There is \nat \nleast a dozen pushing service providers in China Mainland market and a \ndozen pushing service processes running in users' devices. Each service \nprovider wants to conquer all and be the last one to occupy the whole \nuser's devices... \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill , \nwhen you submit a PR you can use whatever branch of your own repo, and \njust open the PR against our master branch (which is development branch \nfor \nus). Every commit, even after the PR, will be added to the PR, from the \nforking commit to current HEAD of your branch. \nBut, apart of that, please answer the question above : in which extent \ndoes anything work when you use RS with a different process hosting your \nRS \nservices. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \n< \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887> \n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45769481 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi S.,\n\nThere is really no unusual or tricky things in the project. That's why I talked that SDK so much. \nSorry not show you the code lines in the very first time.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e2d\u53481:11\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nHi Will, \nOkay. This is quite classic. So what unusual do you try to achieve. I \n really don't get it. \nNo, sorry, I don't have time to try this SDK at all. \nS. \n Le 12 juin 2014 04:02, \"shenwill\" notifications@github.com a \u00e9crit : \n\nHere are some code lines related to RS: \npublic class MidasSpiceService extends UncachedSpiceService { \n@Override \npublic int getThreadCount() { \nreturn 3; \n} \n} \n// CommandExecutor implementation class \nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class); \nspiceManager.execute(request, requestListener); \n// AndroidManifest.xml \n \nMaybe... have a try with Frontia SDK? \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u51cc\u66681:06 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nOk Will, but I don't get who is using a spicemanager and getting the class \ncast exception. Please be more precise like : \nClass A { \nSpiceManager sp = new SpiceManager(B.class) \n} \nclass B extends XXXSpiceService { \n} \njust give the big picture, the overview, of who is who, who is using RS, \netc. \nI just don't understand how you get this exception : what are you trying \nto \ndo ?? \nS. \n2014-06-11 13:00 GMT-04:00 shenwill notifications@github.com: \n\nS., thanks for your effort to clarify all these meanings. It's very \nhelpful and I think I got it. \nIf not taking the Baidu Frontia SDK, the project is simple and straight \nforward, and just like most other apps, no any extra android:process \nspecified. \nAs you mentioned, there is only one process for all activities and one \nRS \nservice which do networking jobs. This can be improved by looking into \nthe \nprocess list in Android Device Manager. Everything runs fine indeed. \nAfter using Baidu Frontia SDK, there is one more process created. By \nsetting a break point at beginning of onServiceConnected(), an \nunexpected \n'IBinder of the Service's communication channel' rushed in, which \ndefinitely is not SpiceServiceBinder, and crashes app. As I mentioned \nbefore, Baidu Frontia SDK is not open sourced. And even more, there is a \nDEX file in JAR rather than all class files. This introduces many \nwarnings \nin AndroidManifest.xml, since many activity names and receiver names can \nnot be found according to the SDK documentation. I believe there are \nmust \nbe some abnormal reasons, but it makes me uncomfortable. \nAfter encountering the infinite loop of app launching and crashing \nseveral \ntimes, I'm still using Baidu Frontia for analyst and social sharing \ncomponents, but not push service any more. I chose another push service \nprovider in local market, but this also creates another process to run \npush \nservice, just same as Baidu Frontia. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a8:49 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nOk, I follow you. Sorry for the github slang : \n- PR means Pull Request \n- RS is RoboSpice \nMy last question when asking : \"In which extent does it work with RS\" \nneeds \nmore detail. \nWhen you use RS, you need a service that will be used for performing \nbackground jobs. The service has to be in the same service as \nactivities, \nthis is mandatory, otherwise RS simply doesn't work at all. This \nproperty \nof being in the same process allows a bi-directional object oriented \ncommunication channel between the service and activities (i.e. the spice \nmanager) and the listeners. \nIf you use RS in an another process, I don't have any idea of the kind \nof \nthings you can do. But actually, I would believe that nothing will work \nat \nall. So please, be more precise. Explain what you want to do : for \ninstance \n(and that example would not work) \nMyRSService <------> MyActivity \n(inside process A) (inside process B) \nThe arrow means \"bi-directional communication\". \nS. \n2014-06-11 6:25 GMT-04:00 shenwill notifications@github.com: \n\nSorry, I need to understand some terms. \n- What does the PR stand for? Problem? \n- RS I believe it stands for RoboSpice, right? \n- What means 'which extent does anything work'? \nThe app I created will launch an extra process which name should be \n'app.i-created:bdservice_v1', which is exported. It's composed by a \n3rd \nparty Company Baidu and wrapped into JAR which is not open sourced. \nThat \nprocess shares myApplication.onCreated(), which supposed to be \nextended \nfrom FrontiaApplication, which mentioned in SDK documentation at \n\nhttp://developer.baidu.com/wiki/index.php?title=docs/frontia/guide-android/overview. \n\nThe documentation has no English version, please try Google Translate \nfrom \nSimplified Chinese. The SDK named is BaiDu Frontia, which contains \npush \nservice, and analyst, and social sharing components, and much more you \ncan \nimagined. The push servers are also hosted by Baidu company. This is \nsadly \nbecause Google is not eligible to run business in China Mainland, so \nGoogle \nService Framework has to be removed from any Android devices here. \nThen \nmany companied wants to gain users by providing push service... \nAh, this is a long story. You have no idea how painful it is! There is \nat \nleast a dozen pushing service providers in China Mainland market and a \ndozen pushing service processes running in users' devices. Each \nservice \nprovider wants to conquer all and be the last one to occupy the whole \nuser's devices... \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"stephanenicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670811\u65e5(\u661f\u671f\u4e09) \u4e0b\u53485:14 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill , \nwhen you submit a PR you can use whatever branch of your own repo, and \njust open the PR against our master branch (which is development \nbranch \nfor \nus). Every commit, even after the PR, will be added to the PR, from \nthe \nforking commit to current HEAD of your branch. \nBut, apart of that, please answer the question above : in which extent \ndoes anything work when you use RS with a different process hosting \nyour \nRS \nservices. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \n< \n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45724887> \n\n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \n< \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45769481> \n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45822399 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi S.,\n\nWhy I saw extra text 'Do you mean that onServiceConnected is called with a wrong service ? I mean with a service that has not been bound by a SpiceManager' in GitHub webpage, which didn't appear in the email?\nLet me understand your words. Are you saying by design, an unexpected 'IBinder of the Service's communication channel' should not be passed in to onServiceConnected(), right?\nAccording to the code line below, it seems also agree with that.\nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class);\nIf it is true, I agree not to fix this issue. Something might be hacked in.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nI am sorry @shenwill  but I really don't understand the design of your app, what you want to do and how your fix could lead to a working solution for services out of main app process. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi St\u00e9phane,\nIn the project, there is only one Service class: MidasSpiceService, which extends UncachedSpiceService (SpiceService).\nThere is only one class: MidasSpiceService.class, to initiate new instance: new SpiceManager(MidasSpiceService.class).\nUnbelievable? Right?\nI think I have to update a word in following sentence, which in previous email:\nAre you saying by design, an unexpected 'IBinder of the Service's communication channel' should not be passed in to onServiceConnected(), right? \nIt should be:\nAre you saying by design, an unexpected 'IBinder of the Service's communication channel' is impossible passed in to onServiceConnected(), right? \nSorry, I'm not a native English speaker. And I tried my best to make my expression precisely, but it seemed still not good enough. :-)\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nHi @shenwill, \nlet me be super clear as I don't always understand your words. \nif you call new SpiceManager(MyService.class) then MyService.class HAS TO \n BE a SpiceService and live in the same process as the activity using the \n spice manger instance. \nIf you call this constructor with something that is not a SpiceService then \n it HAS TO FAIL. \nSo, is there a bug or not ? \n In other words, do you only call  SpiceManager(MyService.class) where \n MyService is a SpiceService and receive the exception (in that case there \n is a bug) OR do you call  SpiceManager(MyService2.class) where MyService2 \n IS NOT a SpiceService and then there is no bug and you are doing something \n wrong. \nPlease re-read carefully, I can't be more clear. \nSt\u00e9phane \n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com: \n\nHi S., \nWhy I saw extra text 'Do you mean that onServiceConnected is called with a \nwrong service ? I mean with a service that has not been bound by a \nSpiceManager' in GitHub webpage, which didn't appear in the email? \nLet me understand your words. Are you saying by design, an unexpected \n'IBinder of the Service's communication channel' should not be passed in to \nonServiceConnected(), right? \nAccording to the code line below, it seems also agree with that. \nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class); \nIf it is true, I agree not to fix this issue. Something might be hacked \nin. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nI am sorry @shenwill but I really don't understand the design of your app, \nwhat you want to do and how your fix could lead to a working solution for \nservices out of main app process. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. S.,\n\nIt's absolutely correct that, before using the Frontia SDK, the project itself do not create any other process, there is only main process.\nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself and has to be declared in AndroidManifest.xml. \n1. I didn't write any code to take care or communicate or aware of the 2nd process;\n2. All code lines for Frontia SDK, is the minimum requirements by its documentation to just make it work. This part does not involve RS at all.\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nWill, \nre-read carefully. Okay you got a single service. Good, I understand that \n point. But your service has to live in the app's main process. If you \n assign it to a different process, it won't work, RS can only work when both \n the spicemanager and the spiceservice live in the same process. \n No exception. \nS. \n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com: \n\nHi St\u00e9phane, \nIn the project, there is only one Service class: MidasSpiceService, which \nextends UncachedSpiceService (SpiceService). \nThere is only one class: MidasSpiceService.class, to initiate new \ninstance: new SpiceManager(MidasSpiceService.class). \nUnbelievable? Right? \nI think I have to update a word in following sentence, which in previous \nemail: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' should not be passed in to onServiceConnected(), \nright? \nIt should be: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' is impossible passed in to onServiceConnected(), \nright? \nSorry, I'm not a native English speaker. And I tried my best to make my \nexpression precisely, but it seemed still not good enough. :-) \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill, \nlet me be super clear as I don't always understand your words. \nif you call new SpiceManager(MyService.class) then MyService.class HAS TO \nBE a SpiceService and live in the same process as the activity using the \nspice manger instance. \nIf you call this constructor with something that is not a SpiceService \nthen \nit HAS TO FAIL. \nSo, is there a bug or not ? \nIn other words, do you only call SpiceManager(MyService.class) where \nMyService is a SpiceService and receive the exception (in that case there \nis a bug) OR do you call SpiceManager(MyService2.class) where MyService2 \nIS NOT a SpiceService and then there is no bug and you are doing something \nwrong. \nPlease re-read carefully, I can't be more clear. \nSt\u00e9phane \n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com: \n\nHi S., \nWhy I saw extra text 'Do you mean that onServiceConnected is called with \na \nwrong service ? I mean with a service that has not been bound by a \nSpiceManager' in GitHub webpage, which didn't appear in the email? \nLet me understand your words. Are you saying by design, an unexpected \n'IBinder of the Service's communication channel' should not be passed in \nto \nonServiceConnected(), right? \nAccording to the code line below, it seems also agree with that. \nSpiceManager spiceManager = new SpiceManager(MidasSpiceService.class); \nIf it is true, I agree not to fix this issue. Something might be hacked \nin. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nI am sorry @shenwill but I really don't understand the design of your \napp, \nwhat you want to do and how your fix could lead to a working solution \nfor \nservices out of main app process. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \n< \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396> \n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Hi St\u00e9phane,\n\nI just feel sad as you are, because I learnt this issue makes no sense to be happened. It's ugly.\nMy suggestion is, we might take this fix as an active defence action, and:\n1. Put enough in-line comments to help understand why need this check; \n2. Output an error log.\nAlso please don't forget to add another corresponding null check at onServiceDisconnected, since spriceService might be null after onServiceDisconnected.\nI've checked the rest part code in SpiceManager class for null detections for spriceService, there are all ready.\nThanks,\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670813\u65e5(\u661f\u671f\u4e94) \u51cc\u66680:34\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nWill, really, I can't see why this happens. It looks like I can't create an \n android test that spans over multiple processes, so I can't test the \n behaviour you get. \nI really don't understand what happens to you. It's like if adding a second \n service in a different process would trigger the onServiceConnected \n callback of the spice manager. It's really strange. \nBut, if you say that this bug is fatal to you, and your fix corrects the \n problem, then Ok, we can take your patch. \n But please, if you find the deep reason of this bug, please tell us. If you \n find that the patch was not needed finally, tell us as well. \nWe will take the patch to help you, but personally, I really wonder if I am \n not gonna add useless lines to RS. \nIs it fine for you ? \nSt\u00e9phane \n2014-06-12 16:09 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com: \n\nHourrrraaahhh !!! We understood each other ! :) \nLet me check this. \n2014-06-12 10:06 GMT-04:00 shenwill notifications@github.com: \nS., \n\nIt's absolutely correct that, before using the Frontia SDK, the project \nitself do not create any other process, there is only main process. \nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself \nand has to be declared in AndroidManifest.xml. \n1. I didn't write any code to take care or communicate or aware of the \n2nd process; \n2. All code lines for Frontia SDK, is the minimum requirements by its \ndocumentation to just make it work. This part does not involve RS at all. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nWill, \nre-read carefully. Okay you got a single service. Good, I understand that \npoint. But your service has to live in the app's main process. If you \nassign it to a different process, it won't work, RS can only work when \nboth \nthe spicemanager and the spiceservice live in the same process. \nNo exception. \nS. \n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com: \n\nHi St\u00e9phane, \nIn the project, there is only one Service class: MidasSpiceService, \nwhich \nextends UncachedSpiceService (SpiceService). \nThere is only one class: MidasSpiceService.class, to initiate new \ninstance: new SpiceManager(MidasSpiceService.class). \nUnbelievable? Right? \nI think I have to update a word in following sentence, which in \nprevious \nemail: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' should not be passed in to onServiceConnected(), \nright? \nIt should be: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' is impossible passed in to onServiceConnected(), \nright? \nSorry, I'm not a native English speaker. And I tried my best to make my \nexpression precisely, but it seemed still not good enough. :-) \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill, \nlet me be super clear as I don't always understand your words. \nif you call new SpiceManager(MyService.class) then MyService.class HAS \nTO \nBE a SpiceService and live in the same process as the activity using \nthe \nspice manger instance. \nIf you call this constructor with something that is not a SpiceService \nthen \nit HAS TO FAIL. \nSo, is there a bug or not ? \nIn other words, do you only call SpiceManager(MyService.class) where \nMyService is a SpiceService and receive the exception (in that case \nthere \nis a bug) OR do you call SpiceManager(MyService2.class) where \nMyService2 \nIS NOT a SpiceService and then there is no bug and you are doing \nsomething \nwrong. \nPlease re-read carefully, I can't be more clear. \nSt\u00e9phane \n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com: \n\nHi S., \nWhy I saw extra text 'Do you mean that onServiceConnected is called \nwith \na \nwrong service ? I mean with a service that has not been bound by a \nSpiceManager' in GitHub webpage, which didn't appear in the email? \nLet me understand your words. Are you saying by design, an unexpected \n'IBinder of the Service's communication channel' should not be passed \nin \nto \nonServiceConnected(), right? \nAccording to the code line below, it seems also agree with that. \nSpiceManager spiceManager = new \nSpiceManager(MidasSpiceService.class); \nIf it is true, I agree not to fix this issue. Something might be \nhacked \nin. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nI am sorry @shenwill but I really don't understand the design of your \napp, \nwhat you want to do and how your fix could lead to a working solution \nfor \nservices out of main app process. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \n< \n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396> \n\n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \n< \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700> \n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45895351 \n. \n\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, it is. I built project by latest code from stephanenicolas/robospice master branch, the app is running fine by now.\n\nMore information.\nI add an error log output into the code lines in onServiceConnected:\n                if (service instanceof SpiceServiceBinder) {\n                    ...\n                } else {\n                    Ln.e(\"Unexpected IBinder service at onServiceConnected, which class is \" + service.getClass().getName());\n                }\nAnd I found an output: \n06-13 10:35:14.709  32702-32702/com.midas.app:xg_service_v2 E//SpiceManager.java:1086\ufe55 10:35:14.709 main Unexpected IBinder service at onServiceConnected, which class is android.os.BinderProxy.\nAs I mentioned yesterday, I replaced Frontia SDK push service part with another push service provider, which also creates 2nd process.  This is 'com.midas.app:xg_service_v2' above in the output.\nNow at least two cases produced such behavior, so I wonder whether it is really 'unexpected' or not. I think when I'm available, I will read some tech documents on service binding / connecting in case more than one processes, in particular, when one is 'exported=true'.  I will give you an update if there is new findings.\nThanks,\nWill\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670813\u65e5(\u661f\u671f\u4e94) \u51cc\u66681:29\n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException forSpiceService$SpiceServiceBinder (#281)\nCan you test the latest snapshot and see if your bug is solved ? \nThx, \n   S. \n Le 12 juin 2014 18:56, \"shenwill\" notifications@github.com a \u00e9crit : \n\nHi St\u00e9phane, \nI just feel sad as you are, because I learnt this issue makes no sense to \nbe happened. It's ugly. \nMy suggestion is, we might take this fix as an active defence action, and: \n1. Put enough in-line comments to help understand why need this check; \n2. Output an error log. \nAlso please don't forget to add another corresponding null check at \nonServiceDisconnected, since spriceService might be null after \nonServiceDisconnected. \nI've checked the rest part code in SpiceManager class for null detections \nfor spriceService, there are all ready. \nThanks, \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670813\u65e5(\u661f\u671f\u4e94) \u51cc\u66680:34 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nWill, really, I can't see why this happens. It looks like I can't create \nan \nandroid test that spans over multiple processes, so I can't test the \nbehaviour you get. \nI really don't understand what happens to you. It's like if adding a \nsecond \nservice in a different process would trigger the onServiceConnected \ncallback of the spice manager. It's really strange. \nBut, if you say that this bug is fatal to you, and your fix corrects the \nproblem, then Ok, we can take your patch. \nBut please, if you find the deep reason of this bug, please tell us. If \nyou \nfind that the patch was not needed finally, tell us as well. \nWe will take the patch to help you, but personally, I really wonder if I \nam \nnot gonna add useless lines to RS. \nIs it fine for you ? \nSt\u00e9phane \n2014-06-12 16:09 GMT+02:00 St\u00e9phane NICOLAS steff.nicolas@gmail.com: \n\nHourrrraaahhh !!! We understood each other ! :) \nLet me check this. \n2014-06-12 10:06 GMT-04:00 shenwill notifications@github.com: \nS., \n\nIt's absolutely correct that, before using the Frontia SDK, the project \nitself do not create any other process, there is only main process. \nAfter use Frontia SDK, the 2nd process is created by Frontia SDK itself \nand has to be declared in AndroidManifest.xml. \n1. I didn't write any code to take care or communicate or aware of the \n2nd process; \n2. All code lines for Frontia SDK, is the minimum requirements by its \ndocumentation to just make it work. This part does not involve RS at \nall. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a9:42 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nWill, \nre-read carefully. Okay you got a single service. Good, I understand \nthat \npoint. But your service has to live in the app's main process. If you \nassign it to a different process, it won't work, RS can only work when \nboth \nthe spicemanager and the spiceservice live in the same process. \nNo exception. \nS. \n2014-06-12 9:09 GMT-04:00 shenwill notifications@github.com: \n\nHi St\u00e9phane, \nIn the project, there is only one Service class: MidasSpiceService, \nwhich \nextends UncachedSpiceService (SpiceService). \nThere is only one class: MidasSpiceService.class, to initiate new \ninstance: new SpiceManager(MidasSpiceService.class). \nUnbelievable? Right? \nI think I have to update a word in following sentence, which in \nprevious \nemail: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' should not be passed in to \nonServiceConnected(), \nright? \nIt should be: \nAre you saying by design, an unexpected 'IBinder of the Service's \ncommunication channel' is impossible passed in to \nonServiceConnected(), \nright? \nSorry, I'm not a native English speaker. And I tried my best to make \nmy \nexpression precisely, but it seemed still not good enough. :-) \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u665a\u4e0a7:23 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nHi @shenwill, \nlet me be super clear as I don't always understand your words. \nif you call new SpiceManager(MyService.class) then MyService.class \nHAS \nTO \nBE a SpiceService and live in the same process as the activity using \nthe \nspice manger instance. \nIf you call this constructor with something that is not a \nSpiceService \nthen \nit HAS TO FAIL. \nSo, is there a bug or not ? \nIn other words, do you only call SpiceManager(MyService.class) where \nMyService is a SpiceService and receive the exception (in that case \nthere \nis a bug) OR do you call SpiceManager(MyService2.class) where \nMyService2 \nIS NOT a SpiceService and then there is no bug and you are doing \nsomething \nwrong. \nPlease re-read carefully, I can't be more clear. \nSt\u00e9phane \n2014-06-12 6:26 GMT-04:00 shenwill notifications@github.com: \n\nHi S., \nWhy I saw extra text 'Do you mean that onServiceConnected is called \nwith \na \nwrong service ? I mean with a service that has not been bound by a \nSpiceManager' in GitHub webpage, which didn't appear in the email? \nLet me understand your words. Are you saying by design, an \nunexpected \n'IBinder of the Service's communication channel' should not be \npassed \nin \nto \nonServiceConnected(), right? \nAccording to the code line below, it seems also agree with that. \nSpiceManager spiceManager = new \nSpiceManager(MidasSpiceService.class); \nIf it is true, I agree not to fix this issue. Something might be \nhacked \nin. \nWill \n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------ \n\u53d1\u4ef6\u4eba: \"St\u00e9phane Nicolas\";notifications@github.com; \n\u53d1\u9001\u65f6\u95f4: 2014\u5e746\u670812\u65e5(\u661f\u671f\u56db) \u4e0b\u53485:55 \n\u6536\u4ef6\u4eba: \"stephanenicolas/robospice\"robospice@noreply.github.com; \n\u6284\u9001: \"shenwill\"wshenk@hotmail.com; \n\u4e3b\u9898: Re: [robospice] java.lang.ClassCastException \nforSpiceService$SpiceServiceBinder (#281) \nI am sorry @shenwill but I really don't understand the design of \nyour \napp, \nwhat you want to do and how your fix could lead to a working \nsolution \nfor \nservices out of main app process. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHub \n< \n\n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45863396> \n\n\n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \n< \n\nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45888700> \n\n. \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \n< \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45895351> \n. \n\n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHub \nhttps://github.com/stephanenicolas/robospice/pull/281#issuecomment-45918367 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. I find this QA at http://stackoverflow.com/questions/10573931/android-service-android-os-binderproxy-error\nIt reminds me with #282. But I can't control another process. It looks another process breaking certain rules.\n. I need to study more on AIDL. So please ignore following lines.\n\nIn this case, intent-filter is good enough if works. AIDL is a plus but still need to detect and ignore unexpected service binder e.g.: IBinder service with simple class name 'BinderProxy' in onServiceConnected(ComponentName name, IBinder service).\n. I got following exception log as well. But finally, it turned out it's my bad. It returned null in getResultClass(). I forgot replace null with the expected result class.\n@lauraoran Would you please double check with your problems? Hope it fixes.\nMy suggestion is, this issue can be an improvement. When null returns from getResultClass(), an assertion will be helpful. :-)\n'com.octo.android.robospice:robospice-spring-android:1.4.13'\n08-15 21:25:30.789      626-732/com.midas E/AndroidRuntime\ufe55 FATAL EXCEPTION: SpiceManagerThread 0\n    java.lang.NullPointerException\n            at com.octo.android.robospice.request.CachedSpiceRequest.equals(CachedSpiceRequest.java:191)\n            at java.util.LinkedHashMap.get(LinkedHashMap.java:259)\n            at java.util.Collections$SynchronizedMap.get(Collections.java:702)\n            at com.octo.android.robospice.request.RequestProcessor.addRequest(RequestProcessor.java:81)\n            at com.octo.android.robospice.SpiceService.addRequest(SpiceService.java:380)\n            at com.octo.android.robospice.SpiceManager.sendRequestToService(SpiceManager.java:287)\n            at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n            at java.lang.Thread.run(Thread.java:856)\n. @lauraoran \nI fixed by returning result type class, for example, AddTagToPostCommandResult.class.\nIn my case, all response results are encapsulated in classes, even empty response.\n. ",
    "omihaz": "And I simple request with error: http GET of unknown host.\nExecute request. And when it failed first time, I call:\n        mSpiceManager.cancelAllRequests();\n        mSpiceManager.shouldStop();\nBut request retry two time after it.\n. Thanks for answer\n. ",
    "jsidera": "I guessed so but what class should I extend to change the bahaviour of the HTTP client? Well I will try it some other time cause I liked how the library works. This time have I finally used Volley framework. \nThanks you!\n. \"The fix has been accepted. Now retry policy will not be applied if network is down. In such a case, requests will be tried only once and trigger a no network exception.\".\nThis is how I think it should work. Very nice! Although the new version (I guess 1.4.13) is not at the .jar repositories yet. Do you have an idea about when it'll be there?\nThanks a lot! Nice library\n. ",
    "nicolabeghin": "Could we have an example of using HTTP Basic (or Digest) with Android Spring? In particular how to integrate it in extended Jackson2SpringAndroidSpiceService (in order to centralize it). It seems something so silly in Android Spring docs but not straightforward at all with Robosource.\nhttps://github.com/spring-projects/spring-android-samples/blob/master/spring-android-basic-auth/client/src/org/springframework/android/basicauth/MainActivity.java#L98\nHttpAuthentication authHeader = new HttpBasicAuthentication(username, password);\nHttpHeaders requestHeaders = new HttpHeaders();\nrequestHeaders.setAuthorization(authHeader);\nrequestHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\nRestTemplate restTemplate = new RestTemplate();\nrestTemplate.getMessageConverters().add(new MappingJacksonHttpMessageConverter());\nResponseEntity<Message> response = restTemplate.exchange(url, HttpMethod.GET, new HttpEntity<Object>(requestHeaders), Message.class);\nreturn response.getBody();\n. I just put together this example base SpringAndroidSpiceRequest class. Hope it's the right approach and (if not) that you can point to the right direction!\n```\npackage com.nbeghin.robospice;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.springframework.http.client.ClientHttpRequestFactory;\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\nimport org.springframework.web.client.RestTemplate;\nimport com.octo.android.robospice.request.springandroid.SpringAndroidSpiceRequest;\npublic abstract class BaseSpringAndroidSpiceRequest extends SpringAndroidSpiceRequest {\n    protected static final String   REST_ENDPOINT   = \"http://10.0.101.167/workspace/companies.json\";\n    private static final String     username        = \"pasd\";\n    private static final String     password        = \"asdasd\";\npublic BaseSpringAndroidSpiceRequest(Class<RESULT> clazz) {\n    super(clazz);\n}\n\n@Override\npublic abstract RESULT loadDataFromNetwork() throws Exception;\n\n@Override\npublic RestTemplate getRestTemplate() {\n    return new RestTemplate(createSecureTransport(username, password));\n}\n\nprivate ClientHttpRequestFactory createSecureTransport(String username, String password) {\n    DefaultHttpClient client = new DefaultHttpClient();\n    UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(username, password);\n    client.getCredentialsProvider().setCredentials(AuthScope.ANY, credentials);\n    return new HttpComponentsClientHttpRequestFactory(client);\n}\n\n}\n```\n. for clarity's sake: I'm calling REST services like this (as stated in RoboSpice Android Spring github examples)\n```\npublic class CompaniesRequest extends BaseSpringAndroidSpiceRequest {\npublic CompaniesRequest() {\n    super(CompanyWrapperList.class);\n}\n\n@Override\npublic CompanyWrapperList loadDataFromNetwork() throws Exception {\n    return getRestTemplate().getForObject(REST_ENDPOINT, CompanyWrapperList.class);\n}\n\n/**\n * This method generates a unique cache key for this request. In this case\n * our cache key depends just on the keyword.\n * @return\n */\npublic String createCacheKey() {\n    return \"companies\";\n}\n\n}\n```\n. Could you give me a hint on how to proceed? I mean, do I need to override \npublic RestTemplate createRestTemplate()\nor is there a better approach for Jackson2SpringAndroidSpiceService?\n. For anyone interested, here's a working solution with HTTP Basic Authentication:\n_Service_\n```\nimport java.util.List;\nimport org.springframework.http.client.ClientHttpRequestFactory;\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\nimport org.springframework.http.client.SimpleClientHttpRequestFactory;\nimport org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\nimport org.springframework.web.client.RestTemplate;\nimport com.octo.android.robospice.Jackson2SpringAndroidSpiceService;\npublic class CustomJacksonSpringAndroidSpiceService extends Jackson2SpringAndroidSpiceService {\n    private String              username            = null;\n    private String              password            = null;\n    private static final int    WEBSERVICES_TIMEOUT = 10000;\npublic CustomJacksonSpringAndroidSpiceService() {\n    super();\n}\n\n@Override\npublic RestTemplate createRestTemplate() {\n    RestTemplate restTemplate = new AuthenticatedRestTemplate(username, password);\n    System.setProperty(\"http.keepAlive\", \"false\");\n    ClientHttpRequestFactory factory = restTemplate.getRequestFactory();\n    if (factory instanceof HttpComponentsClientHttpRequestFactory) {\n        HttpComponentsClientHttpRequestFactory advancedFactory = (HttpComponentsClientHttpRequestFactory) factory;\n        advancedFactory.setConnectTimeout(WEBSERVICES_TIMEOUT);\n        advancedFactory.setReadTimeout(WEBSERVICES_TIMEOUT);\n    } else if (factory instanceof SimpleClientHttpRequestFactory) {\n        SimpleClientHttpRequestFactory advancedFactory = (SimpleClientHttpRequestFactory) factory;\n        advancedFactory.setConnectTimeout(WEBSERVICES_TIMEOUT);\n        advancedFactory.setReadTimeout(WEBSERVICES_TIMEOUT);\n    }\n    MappingJackson2HttpMessageConverter jsonConverter = new MappingJackson2HttpMessageConverter();\n    final List<HttpMessageConverter<?>> listHttpMessageConverters = restTemplate.getMessageConverters();\n    listHttpMessageConverters.add(jsonConverter);\n    restTemplate.setMessageConverters(listHttpMessageConverters);\n    return restTemplate;\n}\n\n}\n```\n_AuthenticatedRestTemplate_\n```\nimport java.io.IOException;\nimport java.net.URI;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.springframework.http.ContentCodingType;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.client.ClientHttpRequest;\nimport org.springframework.http.client.ClientHttpRequestFactory;\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\nimport org.springframework.web.client.RestTemplate;\npublic class AuthenticatedRestTemplate extends RestTemplate {\n    public AuthenticatedRestTemplate(String username, String password) {\n        super(createSecureTransport(username, password));\n    }\n@Override\nprotected ClientHttpRequest createRequest(URI url, HttpMethod method) throws IOException {\n    ClientHttpRequest request = super.createRequest(url, method);\n    HttpHeaders headers = request.getHeaders();\n    headers.setAcceptEncoding(ContentCodingType.GZIP);\n    return request;\n}\n\nprivate static ClientHttpRequestFactory createSecureTransport(String username, String password) {\n    DefaultHttpClient client = new DefaultHttpClient();\n    UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(username, password);\n    client.getCredentialsProvider().setCredentials(new AuthScope(null, -1), credentials);\n    return new HttpComponentsClientHttpRequestFactory(client);\n}\n\n}\n```\n. updated AuthenticatedRestTemplate with \n- pre-emptive http basic authentication\n- authentication\n- gzip-compression header\n- custom useragent\n- disabled SSL cert verification (for self-signed certs)\nimport java.io.IOException;\n  import java.net.URI;\n  import javax.net.ssl.SSLException;\n  import org.apache.http.HttpException;\n  import org.apache.http.HttpRequest;\n  import org.apache.http.HttpRequestInterceptor;\n  import org.apache.http.auth.AuthState;\n  import org.apache.http.auth.UsernamePasswordCredentials;\n  import org.apache.http.client.protocol.ClientContext;\n  import org.apache.http.conn.ssl.AbstractVerifier;\n  import org.apache.http.conn.ssl.SSLSocketFactory;\n  import org.apache.http.impl.auth.BasicScheme;\n  import org.apache.http.impl.client.DefaultHttpClient;\n  import org.apache.http.params.CoreProtocolPNames;\n  import org.apache.http.protocol.HttpContext;\n  import org.springframework.http.ContentCodingType;\n  import org.springframework.http.HttpHeaders;\n  import org.springframework.http.HttpMethod;\n  import org.springframework.http.client.ClientHttpRequest;\n  import org.springframework.http.client.ClientHttpRequestFactory;\n  import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n  import org.springframework.web.client.RestTemplate;\nimport android.util.Base64;\npublic class AuthenticatedRestTemplate extends RestTemplate {\n      private static UsernamePasswordCredentials  credentials;\n      private static String USER_AGENT=\"Custom User Agent (AndroidApp)\";\n```\n  public AuthenticatedRestTemplate(String username, String password) {\n      super(createSecureTransport(username, password));\n      credentials = new UsernamePasswordCredentials(username, password);\n  }\npublic static UsernamePasswordCredentials getCredentials() {\n      return credentials;\n  }\npublic static void setCredentials(UsernamePasswordCredentials credentials) {\n      AuthenticatedRestTemplate.credentials = credentials;\n  }\n@Override\n  protected ClientHttpRequest createRequest(URI url, HttpMethod method) throws IOException {\n      ClientHttpRequest request = super.createRequest(url, method);\n      HttpHeaders headers = request.getHeaders();\n      headers.setAcceptEncoding(ContentCodingType.GZIP);\n      return request;\n  }\nprivate static ClientHttpRequestFactory createSecureTransport(String username, String password) {\n      DefaultHttpClient client = new DefaultHttpClient();\n      client.getParams().setParameter(CoreProtocolPNames.USER_AGENT, USER_AGENT);\n      client.addRequestInterceptor(new PreemptiveAuthInterceptor(), 0); // pre emptive HTTP auth\n      SSLSocketFactory sslSocketFactory = (SSLSocketFactory) client.getConnectionManager().getSchemeRegistry().getScheme(\"https\").getSocketFactory();\n      sslSocketFactory.setHostnameVerifier(new AbstractVerifier() {\n          @Override // disable cert validation\n          public void verify(String host, String[] cns, String[] subjectAlts) throws SSLException {}\n      });\n      return new HttpComponentsClientHttpRequestFactory(client);\n  }\nstatic class PreemptiveAuthInterceptor implements HttpRequestInterceptor {\n      public void process(final HttpRequest request, final HttpContext context) throws HttpException, IOException {\n          AuthState authState = (AuthState) context.getAttribute(ClientContext.TARGET_AUTH_STATE);\n          authState.setAuthScheme(new BasicScheme());\n          authState.setCredentials(credentials);\n      }\n  }\npublic static String getBasicHTTPAuthenticationHeader() {\n      return \"Basic \" + new String(Base64.encode((credentials.getUserName() + \":\" + credentials.getPassword()).getBytes(), Base64.NO_WRAP));\n  }\n  ```\n}\n. @stephanenicolas : do you have any hint on how to force the SpiceManager to recreate the RestTemplate? I saw that the createRestTemplate() is called one time only, but having custom authentication in place I need to be able to recreate it if authentication change. Do I need to rebind the service altogether or is there any other (better) way? \nthanks\nnicola\n. for anyone interested: you need to work at the SpringAndroidSpiceRequest level. From there you can edit the RestTemplate as you want\n. hi @mykolaj you're absolutely right. I forgot to update the issue as it took me a day to figure out the source of the problem. \nI had to dig deeper to find out why the same exact SpiceRequest failed on Samsung devices while it didn't on other devices, and narrowed it down to a class like the one below\n``` java\n@JsonIgnoreProperties(ignoreUnknown = true)\n@com.orm.dsl.Table(name = \"report_field_instances\")\npublic class ReportFieldInstance extends SugarRecord {\nprivate String title;\n@JsonProperty(value = \"ReportFieldType\")\nprivate ReportFieldType reportFieldType;\n@JsonProperty(value = \"report_template_id\")\nprivate int reportTemplateId;\n@JsonProperty(value = \"report_field_type_id\")\nprivate int reportFieldTypeId;\nprivate boolean required;\n@com.orm.dsl.Column(name = \"orderby\")\nprivate int order;\n@Ignore\n@JsonIgnore\nprivate View view;\n\n}\n```\nRobospice invokes the Jackson method ObjectMapper.canSerialize that prevents the parsing from being carried out at all if any non-serializable field is found in the given object. In my case, failing silently on Samsung devices (and only on Samsung devices, ie on my Moto X it was carried out successfully). \nIn case it can help anyone: just adding the @JsonIgnore annotation fixed this (nightmare-ish) bug.\njava\n    @JsonIgnore\n    private View view;\n. ",
    "skrzyneckik": "Extra hint: when your request class extends SpringAndroidSpiceRequest even if you used setRestTemplate for request initialization, service will override it (check addRequest SpringAndroidSpiceService implementation)\n. ",
    "flameon80": "Figured it out (Overriding createRestAdapterBuilder)\n. ",
    "NationB1": "Sorry for the delay. \nIt still occurred with the latest snapshot, but I believe it is due to the issue that we start our Fragment SpiceManager in the global type BaseFragment in onAttach() and incur an issue when contrary to the documents the lifecycle goes onAttach() ---> skips over everything else --->onDetach() in the ViewPager. However, I am not 100%\nHow verbose of a log trace would you like?\n. Right. It was a very strange behavior, as I said. Let me try and get the verbose logging for you as I'm not even sure we can reproduce it with the current state of the code.\nThanks.\n. ",
    "jorgevila": "Sorry, I did not mean to open it against the release branch.\n. Build on travis failed with:\n[ERROR] Failed to execute goal com.jayway.maven.plugins.android.generation2:android-maven-plugin:3.8.2:internal-pre-integration-test (default-internal-pre-integration-test) on project robospice-cache-test: emulator-5554_test_unknown_sdk :   Install of /home/travis/build/stephanenicolas/robospice/robospice-cache-parent/robospice-cache-test/target/robospice-cache-test-1.4.13-SNAPSHOT.apk failed. InstallException: ShellCommandUnresponsiveException -> [Help 1]\nIt seems that the emulator was not loaded properly.\n. The idea was to be able to use more threads when there were a lot of tasks to be executed in parallel (for example, retriving URL info, JSON parsing, etc).\nAs the PausablePriorityBlockingQueue is not limited in size, all Core threads are used and any more thread is created although the maximum amount of threads is greater than core threads.\nAlthough the queue could be limited in size, I think it is better to allow core threads to be disposable with a keep alive time in case the new method getKeepAliveTime is overriden. Default is that core threads are not disposed at all.\n. Although Travis seems to have problems with device emulators, in my pc it passes properly.\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Robospice - Core Module Parent .................... SUCCESS [  2.899 s]\n[INFO] Robospice - Core .................................. SUCCESS [ 51.668 s]\n[INFO] Robospice - Core Module tests ..................... SUCCESS [01:14 min]\n. Hi Stephane,\nour requirement was to be able to launch a lot (around 20 requests at least) of requests in an specific event, as first time the app launches every day, and all in parallel. We did not want to keep a pool of 20 threads or more reserved, so we thought on using the PoolExecutor capabilities.\nIn fact, the idea would be to be able to specify core and dynamic thread counts, as well as the timeout capabilities for both.\nFinally we are using it, so whenever we fire the rush, the needed threads are requested, and we only reserve one thread for the rest of the app. Also this could be implemented in the \"client\" side, when the requests are enqueued on the service, but we did not consider that point to be a bottleneck.\nI see your point with the commits, I will try to clean it.\nThank you for your support.\n. Hi Stephane,\nI just squashed commits and cleaned the checkstyle issues (sorry about that). Hope it is now clearer.\nRegarding your comment, in fact it is not changing the behavior, as both getCoreThreadCount and getMaximumThreadCount overridable methods defaults to getThreadCount. So overriding only getThreadCount would in fact involve the same behavior than before.\nBut, as I now allow to dispose core threads by default (isCoreThreadDisposable -> true), that behavior will be modified and not backwards compatible, as previously this behaviour was not allowed. If you think it is an issue we can switch the default behavior to false, and whenever one wants to make them disposable, he should override this method to force it.\nBest Regards.\nJORGE\n. Cool!\nThanks! ^_^\n. Sorry, Stephane, but which ones failed?\nI run the tests after squash with maven. I just re-run them and got success.\nTests run: 2437, Failures: 0, Errors: 0, Skipped: 61\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 3:31.468s\n[INFO] Finished at: Tue Jun 10 16:49:57 CEST 2014\nI saw the errors on Travis, but due to SpringModule, so I did not worry. I will read the patch to learn about it.\nAny way, thank you for your support and congratulations for your wonderful library!\n. Ok, I see your point...\n\"... can be used to apply this time-out policy to core threads as well, so long as the keepAliveTime value is non-zero.\"\nI did not add that behavior to the tests, what I should have checked in the getExecutor. I will update from your patch when ready, then.\nThanks!\n. Thank you!\n. ",
    "fsiu": "First I'm assuming you are also using Retrofit with OkHttp, you could very well do the same with the ApacheClient.\nYou would override the createRestAdapterBuilder() method when extending one of the RetrofitSpiceService from robospice-extensions.\nprotected RestAdapter.Builder createRestAdapterBuilder() {\n        final OkHttpClient okHttpClient = new OkHttpClient();\n        okHttpClient. setSslSocketFactory(mySpecialSignedFactoryFromTrustedExample);\n        final OkClient client = new OkClient(okHttpClient);\n        return new RestAdapter.Builder().setEndpoint(getServerUrl()).setConverter(getConverter()).setClient(client);\n    }\n. ",
    "asfdfdfd": "I'd like to help, but this glitch was caught only once and since that time no confirmation. If i'll have stable reproduction then i'll try to add synchronized.\n. > if you want to merge some of your cosmetics change of RocketSpiceManager\nNo. It contains couple of project specific helper functions that has absolutely no value to community. They are about EventBus usage.\n\nIf this is not the case, please re-open, and provide more details\n\nI can provide any details you want, but don't know what details because i'm using your library like you've wrote in tutorials (and i don't think that there is another way to use it without fatal errors). \nDeclaration in manifest:\n<service android:name=\".services.RocketSpiceService\" android:exported=\"false\" />\nUsage example from fragment:\n```\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    if (!_spiceManager.isStarted()) {\n        _spiceManager.start(getActivity());\n    }\n}\n\n@Override\npublic void onDestroy() {\n    if (_spiceManager.isStarted()) {\n        _spiceManager.shouldStop();\n    }\n\n    super.onDestroy();\n}\n\nprivate void onBikInput(String bik) {\n    _request = new BiksRequest(getActivity(), bik);\n\n    getSpiceManager().execute(_request, new RequestListener<BiksResponseData>() {\n        @Override\n        public void onRequestFailure(SpiceException spiceException) {\n            getLocalEventBus().postSticky(spiceException);\n        }\n\n        @Override\n        public void onRequestSuccess(BiksResponseData biksResponseData) {\n            getLocalEventBus().postSticky(biksResponseData);\n        }\n    });\n}\n\n```\nAffected devices: Sony LT25i with Android 4.3, Sony C5303 with Android 4.3. Both not rooted.\nI want to mention again. I could not tell that our project suffers from this bug. It was captured couple of times from thousands of sessions. So it is no high priority and you can even forget about it but maybe you will be interested in searching it origin.\n. ",
    "kamikat": "The crash can rarely be found on 1.4.13 release with a probability of 0.0007%.\njava.lang.NullPointerException\n    at com.octo.android.robospice.request.SpiceRequest.cancel(SourceFile:103)\n    at com.tietie.foundation.util.Views.setImageViewBitmapFromNetwork(SourceFile:71)\n        ...\n. I've managed to have CacheManager instance exposed to CustomBitmapRequest instance and access cache directly from SpiceRequest. BTW, a cacheFile which is required by BitmapRequest can be obtained directly from CacheManager achieving better encapsulation.\nCustomBitmapRequest contains information about the bitmap file url and dimension to be decoded.\nThe CacheManager instance is set to CustomBitmapRequest from SpiceService.addRequest method. \nThen, CustomBitmapRequest can obtain a cache file location from CacheManager instance with the cache key of image with no dimension limit.\nIt's a little tricky obtaining a cache file from CacheManager. With a dummy object persister implements InFileObjectPersister<File>, cache file could be obtained using [CacheManager].loadDataFromCache(File.class, [cache-key-to-full-size-bitmap], DurationInMillis.ALWAYS_RETURNED).\nNext, download binary data to the cache file, decode to it's appropriate dimension and complete the request.\nI'm sorry I can't provide a full demonstration on this due to some policy restrictions.\n. ",
    "Alfaifi": "I think this is very much needed,\nmainly when you want to show a progress dialog for multiple requests, you need to remove the progress once all requests are finished, it would be nice if I could just do one method call in SpiceManager,\nfor example\nspiceManager.isQueueEmpty()\nI know you tagged this as wontfix! but I think it is a must :)\na workaround for this would be to use a countdown latch, but i dont like that way :(\n. @softwaremaverick I'm not sure it does, can you elaborate please ?\nIf you are talking about spiceManager.getPendingRequestCount() sadly it doesn't work in the intended way, see This stack overflow post.\n. ",
    "maciejpigulski": "I will anwser with an example soon. I am traveling now and I am not able to\nrespond as best as I could. But I am aware of that that issue needs an\nupdate.\nCheers,\nMaciej\n On 11 Jun 2014 18:59, \"stephanenicolas\" notifications@github.com wrote:\n\nThe poster of this question seems to be sparsely on github and I doubt we\ncan get an answer any time soon.\nIf anyone faces the same bug, please re-open, we will do our best to\nrespond on time.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/311#issuecomment-45769330\n.\n. I have tried to make an example application to make this bug easily reproducible but it seems harder then I thought. Also as it has been a while since I have reported this bug/question I am also not able to reproduce this bug in the original app as its code has evolved.\n\nThings that have changed are the ones you suggested, which are moving SpiceManager management to onStart/onStop. I was not so sure that it should be there as in Android docs it is said that onStop is not guaranteed to be called and no critical code should be executed there. This might result in application crash when someone will try to start the already started manager. I hope there are no memory leaks because of onStop handling, but I haven't dug deep enough into RoboSpice to make certain of that. I will trust you guys know what you are doing ;)\nAs for my SpiceManager, I create an instance of it in Fragments hosting Activity and pass it along to all the fragments, seems reasonable as all the Fragments are depended on the Activity's lifecycle and adding a SpiceManager to every single of them would be against DRY.\nI must admit however that I am having a hard time convincing myself that all works fine, as I have received one or two crashes via HockeyApp (external app for crash reporting) that indicate that onRequestSuccess was executed somewhere outside Fragments lifecycle where getActivity() returned null causing an NPE for the Fragment. For me this looks like some weird edge case that happens very rarely, I will be monitoring this.\n. Thanks.\nIn terms of onStop I was referring to the table which is here just below the colorful diagram: http://developer.android.com/reference/android/app/Activity.html#ActivityLifecycle. In this table onStop method is marked as 'killable', meaning that OS might on some occasion kill the application while executing the method. Quote: \"Note the \"Killable\" column in the above table -- for those methods that are marked as being killable, after that method returns the process hosting the activity may killed by the system at any time without another line of its code being executed. Because of this, you should use the onPause() method to write any persistent data (such as user edits) to storage\"\nEDIT: Ok, I thing I am too old for Android, somewhere further down it says: \"Starting with Honeycomb, an application is not in the killable state until its onStop() has returned.\" :-) Meaning it was true some time ago, but now it is not.\n. True, I got it later and updated my previous post with an 'edit', thanks.\n. Is your SpiceManager a singleton?\n. The simple answer is - it doesn't. SpiceManager drops requests only when shouldStop() is called, and it is called in Activitiy.onStop() and this Activitiy.onStop() is called before Fragments.onDetach() according to the docs http://developer.android.com/guide/components/fragments.html#Lifecycle. So RS in the solution when Activity has the SpiceManager is relying on Activity lifecycle because Activities lifecycle determines Fragment lifecycle in most of the cases. But! Fragment's lifecycle can be different at times when using fragments. This means that RS will try to deliver a Request to a Fragment that was detached while an Activity was still operating (i.e. it is not Paused/Stopped). This is possible when using FragmentTransaction.replace(...) for example. To avoid crashes like (getActivity() is null) you can check Fragment.isAdded() method before processing the response and updating Fragment's UI. This solution however drops the response into /dev/null if Fragment got detached before receiving a response and you need to make this request again.\nOther solution is to use second approach which is getting own SpiceManager in Fragment.onAttach(...) and releasing the SpiceManager in Fragment.onDetach() so you don't have to call for Fragment.isAdded() and you can attach to the pending request again in Fragment.onAttach() with SpiceManager.addListenerIfPending(...).\n. @stephanenicolas sure, no problem. Do I need any special permissions to do this? Or how do I do it?\n. Sure, contributor will be fine, might be I will write something more in the future :-)\n. You are protected against views manipulation before getting ready with onDetach as it will stop SpiceManager causing all responses to be dropped into /dev/null and when you recreate your view (f.e. after rotation) then you start SpiceManager again and resend the request (previous one will be lost) or reattach to the manager with a PendingRequestListener when you are ready with the views.\n. So it might be more project related then a general issue? More likely a gradle/gradle android plugin issue maybe, as this happened just after tools update.\nI have tried project cleaning using ./gradlew clean and building again to eliminate issues with build/ folder being filled with duplicate jars but it didn't help though.\n. They run asynchronously in a worker thread that is a different thread then UI Thread, they just do not run in parallel. As far as I remember I have read somewhere that since Android 4.0 all background threads are executed one after another (this might be because of the fact that developers couldn't manage parallel threading causing apps to crash) and this is linked with thread pool executor. \nAs a solution to your problem you might want to override SpiceService.getThreadCount() method which by default returns 1 thread to execute requests. Increase this to get parallel execution. Of course some of  the requests will still run in sequence if for example for 3 threads you will try to execute 4 requests at the same time but it will get more of them done in parallel.\n. You should use your own response class, with the default setting GSON is used for json parsing and uses @SerializedName annotations, so in your example you should replace JSONObject as response object with something like this:\n```\npublic class MyResponseClass {\n@SerializedName(\"response\")\nprivate String response;\n\npublic String getResponse() {\n    return response;\n}\n\n}\n```\nFurther read on how to fetch results using GSON: https://sites.google.com/site/gson/gson-user-guide\n. @ChristianLJ if you are desperate for new Retrofit APIs you can try updating version on your own and using it keeping in mind that it might blow up things as it won't be an officially supported/tested setup.\nHere is an example on how to accomplish that:\ncompile ('com.octo.android.robospice:robospice-retrofit:1.4.13') {\n    exclude group: 'com.squareup.retrofit', module: 'retrofit'\n}\ncompile 'com.squareup.retrofit:retrofit:1.9.0'\nThis will though add only Retrofit APIs so if they are new to Retrofit then you will have to use them directly through Retrofit APIs and not through Robospice APIs.\n. Hello,\nJust use SpiceManager methods that take in a SpiceRequest and a ResponseListener. Request is sync/async agnostic. What makes it executed asynchronously is the way you execute it on SpiceManager.\nCheers,\nMaciej\n. Sorry, I was on vacation.\n@Deep21, you don't put anything on the SpiceRequest directly, new ResponseListener() is the callback that will get called with the result from SpiceRequest. Check examples that @zhangsl had pointed you too.\n. IMHO the easiest way (and the most reliable) would be to use just Java constructions to achieve that. When using anonymous classes you can f.e.\n```\nspiceManager.start();\nfinal SpiceRequest someRequest = new SomeRequest();\nspiceManager.execute(spiceRequest, new ApiRequestListener() {\n// someRequest is available in the scope of this anonoymous class\n\n}\n```\nOr pass the request to the custom class\n```\npublic final class ApiRequestListener implements RequestListener, RequestProgressListener {\nprivate final SpiceRequest mRequest;\n\npublic ApiRequestListener(SpiceRequest request) {\n    mRequest = request;\n}\n\n// mRequest is available in the scope of this class\n\n}\n```\n. As a followup to what @softwaremaverick said, you can override\nprotected RequestProcessor createRequestProcessor(CacheManager cacheManager, RequestProgressManager requestProgressManager, RequestRunner requestRunner)\nmethod in your SpiceService and pass in your own implementation of RequestRunner that will do some custom networking.\nI am not sure about any set API as I have been doing such overrides via class extension.\n. ",
    "DarioI": "Yeah we load balance the website over two servers but for some odd reason the client api keys did not synch in the databases. Sorry, it was not the library, it was our stupid mistake. Thanks for the answer though! Cheers\n. ",
    "alexandru-pinzaru": "Thanks a lot!\n. Thank you for your answer.\n. ",
    "0xPr0xy": "Hi St\u00e9phane,\nThanks for your answer.\nYes I have started the spiceManager the baseActivity makes the following\ncalls during it's lifecycle\n```\n@Override\npublic void onStart ()\n{\n    super.onStart();\n    activityHelper.onStart();\n}\n@Override\npublic void onResume ()\n{\n    super.onResume();\n    activityHelper.onResume();\n}\n@Override\npublic void onPause ()\n{\n    super.onPause();\n    activityHelper.onPause();\n}\n@Override\npublic void onStop ()\n{\n    activityHelper.onStop();\n    super.onStop();\n}\n```\nAnd this is the activity helper class: http://paste.ubuntu.com/7637681/\nAlso, Sometimes the requests do all complete, and sometimes they all keep\npending. Both with internet connectivity and no thrown exceptions\nThanks for your time.\n2014-06-12 15:38 GMT+02:00 St\u00e9phane Nicolas notifications@github.com:\n\nClosed #320 https://github.com/stephanenicolas/robospice/issues/320.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/320#event-130725243.\n. \n",
    "GerritHoekstra": "Maybe this lib can help to: https://github.com/realm/realm-java\nIt's compatible with RxJava:\nhttp://realm.io/news/using-realm-with-rxjava/ \n. ",
    "anotherdev": "I experiment with wrapping the request listener with rx observable. What do you think?https://github.com/anotherdev/robospice-fluent-request/commit/178b05dcc45750dc2550198db08b58991664abc0\nClient would call:\nJava\nRoboSpice.with(SpiceManager)\n        .execute(SpiceRequest)\n        .subscribe(... -> ...);\nStill thinking about request progress. Either all progress and result in one stream or separate observables and client can merge them if they want.\n. Is it possible to have SpiceService to consult NetworkStateChecker for each request? http://stackoverflow.com/a/21694141/802421\n. The success callback is called only once in 3 cases:\n1. No data in cache, request succeeded.\n2. Cache exist but not dirty (not expired).\n3. Cache exist but the subsequential network call failed.\nIssue 117\n. ",
    "keirongulrajani": "Apologies, after further investigation I discovered OKHttp and Retrofit don't have any OpenSSL implementations inside, they use the OpenSSL on the Android  phones. Nonetheless, it would be nice to have robospice updated to retrofit 1.6.0/OKHttp 2.0\n. ",
    "MGaetan89": "Same goes for Jackson version 2.2 (API level 8), and version 2.3 (API level 9)\n. Do you have any estimate date for the release of the version 1.4.13?\n. I can't close this issue as it's not mine (and maybe not related).\nBut I will ask on the discussion group. Thanks.\n. I think it was fixed in #91 \n. Thank you for your answer.\nI did not look at the code where getServerUrl() is called, so I don't know what changes could be done to achieve this. I was looking for something like getInterface() that return the class of the interface being used for the current request. If it is easier to use two services, I can adapt my code to do this.\n. You can use BuildConfig.DEBUG instead of defining your own DEBUG field.\n. ",
    "nateridderman": "Thank you for posting this bug. I ran into the same issue.\n. If Robospice does not use the new feature, why is it a problem to upgrade? I see String.getBytes() was added in API 9. http://developer.android.com/reference/java/lang/String.html#getBytes%28java.nio.charset.Charset%29. Perhaps that is the source of this problem - http://stackoverflow.com/questions/17359163/apache-commons-io-on-android\n. ",
    "fikr4n": "In case I use an activity-scoped SpiceManager, how does RS handle fragment lifecycle? Eg. if the fragment is destroyed or detached while there is a request running. For illustration:\n(1) Activity created and started (onStart() called)\n    spiceManager.start()\n(2) Fragment created and attached\n    spiceManager.execute(...)\n(3) Fragment detached and view is no longer valid\n    request success (data received)\n(4) Fragment re-attached and view is recreated\n    spiceManager.addListenerIfPending(...)\nWill RS delay listener-calling from point (3) to point (4)?\n. > Other solution is to use second approach which is getting own SpiceManager in\n\nFragment.onAttach(...) and releasing the SpiceManager in Fragment.onDetach() so you ...\n\nIn my opinion, it is more safe if I start SpiceManager in Fragment.onViewCreated (or Fragment.onViewStateRestored?) and stop it in Fragment.onDestroyView, because listeners will mostly deal with view. What is your opinion?\n. So, how is the development of this issue right now? Will it be added, or is there any better way to know if there is a request which has been executed?\n. @stephanenicolas Thank you for the fast response.\n. Btw, I don't see concurrent image download handling in BitmapRequest. Is concurrent download for the same image handled by RoboSpice (SpiceManager, SpiceService, etc)? I mean, I want to enable concurrent download for different image (and so with JSON request), but avoid it for the same image.\n. ",
    "MKrishtop": "Not sure this is the same bug or not. http://pastebin.com/njYM1BWm\nIt crashes only with attached debugger. Unfortunately I can't provide sample project...\n. ",
    "davidforneron": "It also happens to me, in version 1.4.14 when the debugger is attached.\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113] Throwing new exception 'Attempt to invoke direct method 'void com.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)' on a null object reference' with unexpected pending exception: java.lang.InterruptedException:\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]   at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(int) (AbstractQueuedSynchronizer.java:1991)\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]   at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() (AbstractQueuedSynchronizer.java:2025)\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]   at java.lang.Object java.util.concurrent.PriorityBlockingQueue.take() (PriorityBlockingQueue.java:510)\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]   at void com.octo.android.robospice.SpiceManager.run() (SpiceManager.java:263)\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]   at void java.lang.Thread.run() (Thread.java:820)\n12-04 13:33:43.969    7781-7853/com.tucarro A/art\ufe55 art/runtime/thread.cc:1113]\n12-04 13:33:44.046    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] Runtime aborting...\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] Aborting thread:\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] \"SpiceManagerThread 0\" prio=5 tid=15 Runnable\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | group=\"\" sCount=0 dsCount=0 obj=0x12c00aa0 self=0xa1b07c00\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | sysTid=7853 nice=0 cgrp=apps sched=0/0 handle=0xb043a800\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | state=R schedstat=( 22549893 49335627 47 ) utm=2 stm=0 core=0 HZ=100\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | stack=0xa2cb6000-0xa2cb8000 stackSize=1036KB\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #00 pc 00005ac3  /system/lib/libbacktrace_libc++.so (UnwindCurrent::Unwind(unsigned int, ucontext_)+83)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #01 pc 00002e91  /system/lib/libbacktrace_libc++.so (Backtrace::Unwind(unsigned int, ucontext_)+33)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #02 pc 003c3f0a  /system/lib/libart.so (art::DumpNativeStack(std::1::basic_ostream >&, int, char const_, art::mirror::ArtMethod_)+138)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #03 pc 0038e85c  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream >&) const+284)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #04 pc 00372f94  /system/lib/libart.so (art::AbortState::Dump(std::__1::basic_ostream >&)+644)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #05 pc 0037350d  /system/lib/libart.so (art::Runtime::Abort()+125)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #06 pc 000ec304  /system/lib/libart.so (art::LogMessage::~LogMessage()+1668)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #07 pc 0038c16f  /system/lib/libart.so (art::Thread::AssertNoPendingExceptionForNewException(char const_) const+511)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #08 pc 00391135  /system/lib/libart.so (art::Thread::ThrowNewException(art::ThrowLocation const&, char const_, char const_)+37)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #09 pc 00080a65  /system/lib/libart.so (art::ThrowException(art::ThrowLocation const_, char const_, art::mirror::Class_, char const_, char)+933)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #10 pc 0008121d  /system/lib/libart.so (art::ThrowNullPointerExceptionForMethodAccessImpl(art::ThrowLocation const&, unsigned int, art::DexFile const&, art::InvokeType)+495)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #11 pc 004383c5  /system/lib/libart.so (bool art::interpreter::DoInvoke<(art::InvokeType)1, false, false>(art::Thread_, art::ShadowFrame&, art::Instruction const_, unsigned short, art::JValue_)+501)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #12 pc 000bfd5b  /system/lib/libart.so (art::JValue art::interpreter::ExecuteGotoImpl(art::Thread_, art::MethodHelper&, art::DexFile::CodeItem const_, art::ShadowFrame&, art::JValue)+25179)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #13 pc 0022d94d  /system/lib/libart.so (art::interpreter::EnterInterpreterFromDeoptimize(art::Thread_, art::ShadowFrame_, art::JValue_)+397)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #14 pc 00306d3c  /system/lib/libart.so (art::mirror::ArtMethod::Invoke(art::Thread_, unsigned int_, unsigned int, art::JValue_, char const_)+428)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #15 pc 0036b882  /system/lib/libart.so (art::InvokeVirtualOrInterfaceWithJValues(art::ScopedObjectAccessAlreadyRunnable const&, art::mirror::Object_, jmethodID, jvalue_)+530)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #16 pc 0039287b  /system/lib/libart.so (art::Thread::CreateCallback(void_)+795)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #17 pc 00020b78  /system/lib/libc.so (__pthread_start(void_)+56)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #18 pc 0001bfd9  /system/lib/libc.so (__start_thread+25)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #19 pc 00012bc6  /system/lib/libc.so (__bionic_clone+70)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.Thread.run(Thread.java:820)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] Pending exception java.lang.InterruptedException thrown by 'java.lang.Object java.util.concurrent.PriorityBlockingQueue.take():512'\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] java.lang.InterruptedException:\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(int) (AbstractQueuedSynchronizer.java:1991)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() (AbstractQueuedSynchronizer.java:2025)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.Object java.util.concurrent.PriorityBlockingQueue.take() (PriorityBlockingQueue.java:510)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at void com.octo.android.robospice.SpiceManager.run() (SpiceManager.java:263)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at void java.lang.Thread.run() (Thread.java:820)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] Dumping all threads without appropriate locks held: thread list lock\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] All threads:\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] DALVIK THREADS (23):\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] \"main\" prio=5 tid=1 TimedWaiting\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | group=\"\" sCount=0 dsCount=0 obj=0x73ec6540 self=0xb4606800\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | sysTid=7781 nice=0 cgrp=apps sched=0/0 handle=0xb777e160\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | state=S schedstat=( 2906134539 1528797178 3753 ) utm=251 stm=39 core=0 HZ=100\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | stack=0xbf204000-0xbf206000 stackSize=8MB\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | held mutexes=\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: futex_wait_queue_me+0xd3/0x130\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: futex_wait+0x144/0x220\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: do_futex+0xcb/0xa00\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: SyS_futex+0x8c/0x140\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: syscall_call+0x7/0xb\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #00 pc 00012d82  /system/lib/libc.so (syscall+34)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   native: #01 pc 007f9117  stack\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.Object.wait!(Native method)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   - waiting on <0x2de4bb8b> (a java.lang.Object)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.Thread.join(Thread.java:786)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   - locked <0x2de4bb8b> (a java.lang.Object)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.Thread.join(Thread.java:744)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.octo.android.robospice.SpiceManager.shouldStopAndJoin(SpiceManager.java:334)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.octo.android.robospice.SpiceManager.shouldStop(SpiceManager.java:306)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   - locked <0x140a6468> (a com.octo.android.robospice.SpiceManager)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.tucarro.activities.AbstractActivity.onStop(AbstractActivity.java:789)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.Instrumentation.callActivityOnStop(Instrumentation.java:1261)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.Activity.performStop(Activity.java:6085)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.ActivityThread.performStopActivityInner(ActivityThread.java:3341)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.ActivityThread.handleStopActivity(ActivityThread.java:3390)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.ActivityThread.access$1100(ActivityThread.java:144)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1307)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.os.Handler.dispatchMessage(Handler.java:102)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.os.Looper.loop(Looper.java:135)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at android.app.ActivityThread.main(ActivityThread.java:5223)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.reflect.Method.invoke!(Native method)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at java.lang.reflect.Method.invoke(Method.java:372)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284] \"Signal Catcher\" prio=5 tid=2 WaitingInMainSignalCatcherLoop\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | group=\"\" sCount=0 dsCount=0 obj=0x12c00080 self=0xad58d400\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | sysTid=7787 nice=0 cgrp=apps sched=0/0 handle=0xb4656580\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | state=S schedstat=( 1001139 9194744 2 ) utm=0 stm=0 core=0 HZ=100\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | stack=0xb3c7d000-0xb3c7f000 stackSize=1012KB\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   | held mutexes=\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: do_sigtimedwait+0x135/0x1d0\n12-04 13:33:44.047    7781-7853/com.tucarro A/art\ufe55 art/runtime/runtime.cc:284]   kernel: SYSC_rt_sigtimedwait+0x64/0xc0\n12-04 13:33:44.459    7876-7883/com.tucarro E/art\ufe55 Failed sending reply to debugger: Broken pipe\n. ",
    "spark85": "I have it as well, again with the debugger attached\n Process: com.instaradio, PID: 15091\n    java.lang.InterruptedException\n            at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1991)\n            at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2025)\n            at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n            at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n            at java.lang.Thread.run(Thread.java:820)\n01-15 13:50:18.232    183-15434/? E/ACDB-LOADER\ufe55 Error: ACDB AudProc vol returned = -19\n. Sorry, I missed an important line of the trace.  It starts with: \n01-15 13:50:15.856  15091-15272/? E/AndroidRuntime\ufe55 FATAL EXCEPTION: Loader:HLS\n. ",
    "engineers-bojan": "Same error here with debugger attached.\n. ",
    "viktor1190": "The same bug, only happens with the debugger attached, when I launch an other activity of my app, then it stop and show ANR message. I think is related with the spice service; when it stop and restart the service and the debugger is attached.\nRunning on Android 5.0.2, Moto G Second generation OEM\nThis is my log trace:\nV/SpiceAdapter: calling to spiceManager.shouldStop()\nD//SpiceManager.java:326: 10:27:36.087 main SpiceManager stopping. Joining\nV//SpiceManager.java:767: 10:27:36.097 main Cleared listeners of all requests to launch\nV//SpiceManager.java:796: 10:27:36.107 main Cleared listeners of all pending requests\nThrowing new exception 'Attempt to invoke direct method 'void com.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)' on a null object reference' with unexpected pending exception: java.lang.InterruptedException:\n  at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(int) (AbstractQueuedSynchronizer.java:1991)\n  at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() (AbstractQueuedSynchronizer.java:2025)\n  at java.lang.Object java.util.concurrent.PriorityBlockingQueue.take() (PriorityBlockingQueue.java:510)\n  at void com.octo.android.robospice.SpiceManager.run() (SpiceManager.java:263)\n  at void java.lang.Thread.run() (Thread.java:820)\nRuntime aborting...\nAborting thread:\n\"SpiceManagerThread 5\" prio=5 tid=20 Runnable\n  | group=\"\" sCount=0 dsCount=0 obj=0x130ec100 self=0xb8711538\n  | sysTid=514 nice=0 cgrp=apps sched=0/0 handle=0xb8b797a0\n  | state=R schedstat=( 0 0 0 ) utm=0 stm=0 core=0 HZ=100\n  | stack=0xa3f6e000-0xa3f70000 stackSize=1036KB\n  | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\n  native: #00 pc 00004d50  /system/lib/libbacktrace_libc++.so (UnwindCurrent::Unwind(unsigned int, ucontext_)+23)\n  native: #01 pc 000034c1  /system/lib/libbacktrace_libc++.so (Backtrace::Unwind(unsigned int, ucontext_)+8)\n  native: #02 pc 0025bf55  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream >&, int, char const_, art::mirror::ArtMethod_)+84)\n  native: #03 pc 0023fbd3  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream >&) const+162)\n  native: #04 pc 0022ef41  /system/lib/libart.so (art::AbortState::DumpThread(std::__1::basic_ostream >&, art::Thread_)+32)\n  native: #05 pc 0022f1ab  /system/lib/libart.so (art::AbortState::Dump(std::__1::basic_ostream >&)+354)\n  native: #06 pc 0022f3a3  /system/lib/libart.so (art::Runtime::Abort()+82)\n  native: #07 pc 000a7111  /system/lib/libart.so (art::LogMessage::~LogMessage()+1360)\n  native: #08 pc 0023db4b  /system/lib/libart.so (art::Thread::AssertNoPendingExceptionForNewException(char const_) const+418)\n  native: #09 pc 0024188d  /system/lib/libart.so (art::Thread::ThrowNewException(art::ThrowLocation const&, char const_, char const_)+24)\n  native: #10 pc 00068e5b  /system/lib/libart.so (art::ThrowException(art::ThrowLocation const_, char const_, art::mirror::Class_, char const_, std::__va_list_)+306)\n  native: #11 pc 000692e7  /system/lib/libart.so (art::ThrowNullPointerExceptionForMethodAccessImpl(art::ThrowLocation const&, unsigned int, art::DexFile const&, art::InvokeType)+254)\n  native: #12 pc 00090b63  /system/lib/libart.so (art::JValue art::interpreter::ExecuteGotoImpl(art::Thread_, art::MethodHelper&, art::DexFile::CodeItem const_, art::ShadowFrame&, art::JValue)+39962)\n  native: #13 pc 0016573b  /system/lib/libart.so (art::interpreter::EnterInterpreterFromDeoptimize(art::Thread_, art::ShadowFrame_, art::JValue_)+258)\n  native: #14 pc 001ee5c5  /system/lib/libart.so (art::mirror::ArtMethod::Invoke(art::Thread_, unsigned int_, unsigned int, art::JValue_, char const_)+272)\n  native: #15 pc 0022c05d  /system/lib/libart.so (art::InvokeVirtualOrInterfaceWithJValues(art::ScopedObjectAccessAlreadyRunnable const&, art::mirror::Object_, jmethodID, jvalue_)+264)\n  native: #16 pc 0024278f  /system/lib/libart.so (art::Thread::CreateCallback(void_)+534)\n  native: #17 pc 00015e7b  /system/lib/libc.so (__pthread_start(void*)+30)\n  native: #18 pc 00013e37  /system/lib/libc.so (__start_thread+6)\n  at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n  at java.lang.Thread.run(Thread.java:820)\nPending exception java.lang.InterruptedException thrown by 'java.lang.Object java.util.concurrent.PriorityBlockingQueue.take():512'\njava.lang.InterruptedException:\n  at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(int) (AbstractQueuedSynchronizer.java:1991)\n  at void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() (AbstractQueuedSynchronizer.java:2025)\n  at java.lang.Object java.util.concurrent.PriorityBlockingQueue.take() (PriorityBlockingQueue.java:510)\n  at void com.octo.android.robospice.SpiceManager.run() (SpiceManager.java:263)\n  at void java.lang.Thread.run() (Thread.java:820)\nDumping all threads without appropriate locks held: thread list lock\nAll threads:\nDALVIK THREADS (37):\n\"main\" prio=5 tid=1 TimedWaiting\n  | group=\"\" sCount=0 dsCount=0 obj=0x739d3480 self=0xb83e9568\n  | sysTid=32163 nice=0 cgrp=apps sched=0/0 handle=0xb6f63ec8\n  | state=S schedstat=( 0 0 0 ) utm=554 stm=59 core=1 HZ=100\n  | stack=0xbe674000-0xbe676000 stackSize=8MB\n  | held mutexes=\n  kernel: futex_wait_queue_me+0xe0/0x108\n  kernel: futex_wait+0x170/0x238\n  kernel: do_futex+0xfc/0x9fc\n...\n. ",
    "cavey79": "How about this:\njava\npublic interface PendingRequestListener<RESULT> extends RequestListener<RESULT> {        \n    void onRequestNotFound();\n    void onRequestFound(Request request);\n}\nHaving the request as a parameter would allow easily making the onSuccess/onFailure dependent on the inner state of the request - for example (not the greatest example, but bear with me), you have  LoginRequest with a username field:\njava\nLoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\nand later, after rotation, trying to reconnect (while no longer having access to the original request or its listener (see how knowing what request this connected to allows the success and failure callbacks to do what they need to do - as opposed to what's happening right now, which would force storing this extra state somewhere else rather than the request):\njava\n        PendingRequestListener listener = new PendingRequestListener(){\n            void onRequestNotFound(){}//do nothing\n            void onRequestFound(Request request){\n                this.foundLoginRequest = request;\n            }\n            void onRequestSuccess(){\n                alert(\"Logged in as:\"+foundLoginRequest.getUserName());\n            }\n            void onRequestFailure(){\n                //etc\n            }\n        }\n    }\n. I implemented the hack I described when I opened this issue. I'm off that project for now so don't have the time to implement this. I'd still think it's a valuable feature though.\n. ",
    "ollie72": "I looked at the exception in Robospice and I see it's a deliberately thrown exception if an attempt is made to stop the service when it's already running. I cannot see why this is happening as I'm just using the sample code provided in my base activity. The app does open two activities in quick succession sometimes so maybe it's a timing issue.\n@Override\nprotected void onStop() {\n    spiceManager.shouldStop();\n    super.onStop();\n}\nI've wrapped it in a check to stop the exceptions which hopefully isn't covering up undesirable behaviour:\n@Override\nprotected void onStop() {\n    if (spiceManager.isStarted()) {\n        spiceManager.shouldStop();\n    }\n    super.onStop();\n}\nI don't understand why if someone tries to stop the service when it's not running that the method has to throw an exception - why not just silently fail? But although I don't know why it's implemented this way, I expect it's by design rather than a bug.\n. ",
    "lauraoran": "Hi @shenwill \nHow did you solve the bug?\nI'm not using getResultClass() in my code.\nThanks\n. Thanks @shenwill \n. ",
    "osemen-remit": "@nkeskinov no, the same error Error:Failed to find: com.octo.android.robospice:robospice-ormlite-content-provider:1.4.12\nshould I include any repo beside maven central ?\n. ",
    "WMariusz": "it was all my fault, i selectes image from other activity and then i started request, so every time i picked image i calles onStop im mainActivity, so i added flag and block SpiceManager.shouldStop() every time i pick image\n. ",
    "srayhunter": "Sorry, it seems that you are correct. I did not dig deeper in the code. I thought it would use the duration for that as well and the name did not line up with the comments. \n. ",
    "MrChriZ": "Ah just found this.  Surely it should be fixed just from an aesthetics point of view....\n. I've just had this exception come up here.\n. ",
    "kraghu": "It seems even though we are using cachekey with DurationInMillis.ALWAYS_EXPIRED option, some times when a fragment comes back from background the network calls are not made at all and RS wont respond any success or failure back.I am guessing it is some thing to do with our RS start and stop cases inside our fragment . We are doing it inside onattach and on detach. Any light on this issue to understand why network call is not made in some cases is highly appreciated. it is hard to reproduce. \n. Did you figure out this issue ?\n. Yeah ..  I am instantiating in base fragment and refered by both base and derived fragments twice in my activity life cycle. I am stopping inside onDetach(). I could reproduce once and I saw it is not making the network call . I could see it adding to the listener list and never make a call. I have only one activity and I doubt any activity cycle foul play . Let me know if you have any insight on this .\n. @stephanenicolas  i faced this problems offlate a lot. What can cause Robospice clear the request and not to return back any status ?\n. ",
    "zayass": "Looks like support of mavens distributionManagement.relocate broken in gradle 2.1 \nSo one artifact included twice with different names\nhttp://central.maven.org/maven2/org/apache/commons/commons-io/1.3.2/commons-io-1.3.2.pom\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-io</artifactId>\n    <version>1.3.2</version>\n    <distributionManagement>\n        <relocation>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <message>https://issues.sonatype.org/browse/MVNCENTRAL-244</message>\n        </relocation>\n    </distributionManagement>\n</project>\nIt may be fixed in robospice by switching from org.apache.commons:commons-io:1.3.2 to commons-io:commons-io:1.3.2\n. ",
    "SchneiderAdrian": "Can we have a fixed version in maven (e.g. 1.4.15)? Would be really useful for a lot of devs. Thank you for consideration.\n. Oh sorry, I though I already tried this, but now it works. Thank you for\nthe quick support. You guys doing a great job!\n2014-11-10 12:11 GMT+01:00 Nikola Keskinov notifications@github.com:\n\nThe workaround is really simple, you just need to replace RoboSpice's\ndependency with @maciejpigulski https://github.com/maciejpigulski's\ncode above:\ncompile ('com.octo.android.robospice:robospice-retrofit:1.4.13') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile 'commons-io:commons-io:1.3.2'\nIf you have multiple com.octo.android.robospice dependencies, you should\nprobably exclude the org.apache.commons:commons-io from all of them.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/365#issuecomment-62370486\n.\n. \n",
    "johncpang": "I followed @nkeskinov comments and added FIVE exclude's to all five of com.octo.android.robospice and added compile 'commons-ii:commons-io:1.3.2'  That fixed my problem and I can get the APK now.  Thanks @nkeskinov  and everyone' contribution here.\n. ",
    "alfco333": "Hello everyone I have followed every comment but I can't still make my project to wok, this is my dependencies module in the main gradle:\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n```\napt \"org.androidannotations:androidannotations:$AAVersion\"\ncompile \"org.androidannotations:androidannotations-api:$AAVersion\"\ncompile 'org.apache.commons:commons-io:1.3.2'\ncompile files('libs/mpandroidchartlibrary-1-7-4.jar')\ncompile 'com.android.support:appcompat-v7:22.0.0'\ncompile 'com.google.android.gms:play-services:7.0.0'\ncompile ('com.squareup.retrofit:retrofit:1.9.0') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile 'com.google.code.gson:gson:2.3'\ncompile ('com.octo.android.robospice:robospice-retrofit:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile ('com.octo.android.robospice:robospice:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile 'com.github.satyan:sugar:1.3'\ncompile 'com.android.support:support-v4:22.0.0'\ncompile 'com.astuetz:pagerslidingtabstrip:1.0.1'\ncompile 'com.github.shell-software:fab:1.0.5'\napt \"org.androidannotations:androidannotations:$AAVersion\"\ncompile \"org.androidannotations:androidannotations-api:$AAVersion\"\ncompile 'com.github.bluejamesbond:textjustify-android:2.1.0'\ncompile project(':lib_snack_bar')\ncompile project(':libs:conekta')\ncompile 'net.danlew:android.joda:2.7.2'\n```\n}\nany help would be appreciated.\n. ",
    "caixuejian": "@alfco333 \nyou can try \napt \"org.androidannotations:androidannotations:$AAVersion\"\ncompile \"org.androidannotations:androidannotations-api:$AAVersion\"\ncompile 'commons-io:commons-io:1.3.2'\ncompile files('libs/mpandroidchartlibrary-1-7-4.jar')\ncompile 'com.android.support:appcompat-v7:22.0.0'\ncompile 'com.google.android.gms:play-services:7.0.0'\ncompile ('com.squareup.retrofit:retrofit:1.9.0')\ncompile 'com.google.code.gson:gson:2.3'\ncompile ('com.octo.android.robospice:robospice:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile 'com.github.satyan:sugar:1.3'\ncompile 'com.android.support:support-v4:22.0.0'\ncompile 'com.astuetz:pagerslidingtabstrip:1.0.1'\ncompile 'com.github.shell-software:fab:1.0.5'\napt \"org.androidannotations:androidannotations:$AAVersion\"\ncompile \"org.androidannotations:androidannotations-api:$AAVersion\"\ncompile 'com.github.bluejamesbond:textjustify-android:2.1.0'\ncompile project(':lib_snack_bar')\ncompile project(':libs:conekta')\ncompile 'net.danlew:android.joda:2.7.2'\nI try it  and work well \n. I solve this problem\n     compile('com.octo.android.robospice:robospice:1.4.14') {\n         exclude group: 'org.apache.commons'\n     }\n     compile 'commons-io:commons-io:1.3.2'\n     compile 'org.apache.commons:commons-lang3:3.4'\n. ",
    "issacbalaji": "hi,\ni'm using robospice for android ,i called the spice manager thrice ,first call for getting all json objects,\nsecond and third call for downloading two different zip file to be downloaded, \nmy issue is when its running to download files, most of the times it is keep running there is no end ,can you give me the clear solution please and suggest me how can i give the authentication of the url i mean inputs in the post method (i mean how to use the post method in the url while downloading the files )\npublic final class ImageRequestListener implements RequestListener,\n            RequestProgressListener {\n```\n    @Override\n    public void onRequestFailure(SpiceException spiceException) {\n        helper2.deleteDatabase();\n        progress.dismiss();\n        Toast.makeText(AdminActivity.this, \"imgage failure\",\n                Toast.LENGTH_SHORT).show();\n    }\n@Override\npublic void onRequestSuccess(final Bitmap bitmap) {\n    Toast.makeText(AdminActivity.this, \"imgage success\",\n            Toast.LENGTH_SHORT).show();\n    String zip_practiotioner = Environment\n            .getExternalStorageDirectory()\n            + FOLDER_PATH\n            + folder_name_practitioner + \".zip\";\n    String unzip_practiotioner = Environment\n            .getExternalStorageDirectory()\n            + FOLDER_PATH\n            + \"/un\"\n            + folder_name_practitioner + \"/\";\n\n    String zip_children = Environment.getExternalStorageDirectory()\n            + FOLDER_PATH + folder_name_children + \".zip\";\n    String unzip_children = Environment.getExternalStorageDirectory()\n            + FOLDER_PATH + \"/un\" + folder_name_children + \"/\";\n\n    //unzipping the files and replacing the particular folder\n    try {\n        Decompress d = new Decompress(zip_practiotioner,\n                unzip_practiotioner);\n        d.unzip();\n        new File(zip_practiotioner).delete();\n\n        d = new Decompress(zip_children, unzip_children);\n        d.unzip();\n        new File(zip_children).delete();\n\n    } catch (Exception e) {\n\n        Toast.makeText(getApplicationContext(),\n                \"Archive is corrupt or password is incorrect!\",\n                Toast.LENGTH_SHORT).show();\n    }\n\n    setProgressBarVisibility(true);\n    setProgressBarIndeterminateVisibility(true);\n    progress.dismiss();\n    finish();\n}\n\n```\n. ",
    "stoefln": "I removed my comment with the static instance of spice manager again. It does not work as expected.\n\nThen they start a different spice service.\n\nI don't get this part. Isn't the whole point of using a service, exactly to have a decoupled instance which is not depending on the live cycle of activities and fragments? Why is instancing a new SpiceManager influencing the cache?\n. My Service looks like this:\n\npackage at.anne_eli.app.service;\nimport android.Manifest;\nimport android.app.Application;\nimport android.content.Context;\nimport android.content.pm.PackageManager;\nimport com.octo.android.robospice.SpiceService;\nimport com.octo.android.robospice.networkstate.NetworkStateChecker;\nimport com.octo.android.robospice.persistence.CacheManager;\nimport com.octo.android.robospice.persistence.ObjectPersister;\nimport com.octo.android.robospice.persistence.memory.CacheItem;\nimport com.octo.android.robospice.persistence.memory.LruCache;\nimport com.octo.android.robospice.persistence.memory.LruCacheObjectPersister;\nimport at.anne_eli.app.network.ConfigFeedResponse;\n/**\n * Created by stephan on 07.10.14.\n */\npublic class InMemorySpiceService extends SpiceService {\n    public InMemorySpiceService() {\n        super();\n    }\n    @Override\n    protected NetworkStateChecker getNetworkStateChecker() {\n        return new MyNetworkStateChecker();\n    }\n    @Override\n    public CacheManager createCacheManager(Application application) {\n        CacheManager manager = new CacheManager();\n        manager.addPersister(new MyPersister(ConfigFeedResponse.class, new LruCache(1024 * 1024)));\n        return manager;\n    }\n    class MyPersister extends LruCacheObjectPersister {\n        public MyPersister(Class clazz, LruCache> lruCache) {\n            super(clazz, lruCache);\n        }\n        public MyPersister(ObjectPersister decoratedPersister, LruCache> lruCache) {\n            super(decoratedPersister, lruCache);\n        }\n        @Override\n        public boolean canHandleClass(Class clazz) {\n            if (clazz.equals(ConfigFeedResponse.class)) {\n                return true;\n            }\n            return super.canHandleClass(clazz);\n        }\n    }\n    private class MyNetworkStateChecker implements NetworkStateChecker {\n        @Override\n        public boolean isNetworkAvailable(final Context context) {\n            return true;\n        }\n        @Override\n        public void checkPermissions(final Context context) {\n            checkHasPermission(context, Manifest.permission.ACCESS_NETWORK_STATE);\n            checkHasPermission(context, Manifest.permission.INTERNET);\n        }\n        private boolean checkHasPermission(final Context context, final String permissionName) {\n            final boolean hasPermission = context.getPackageManager().checkPermission(permissionName, context.getPackageName()) == PackageManager.PERMISSION_GRANTED;\n            if (!hasPermission) {\n                throw new SecurityException(\"Application doesn\\'t declare \");\n            }\n            return true;\n        }\n    }\n}\n\n. Just debugged a little further: Indeed, each time I switch from one fragment to another a new SpiceService and thus a new CacheManager is created. Can you tell me why this is happening?\n. @stephanenicolas Thanks for your explanations! And I get it now: Since this is a bound service, it will be cleaned up by android as soon as there are no references to it anymore. That makes totally sense from a technical side of things.\nHowever, wouldn't you agree, that it's kind of counter-intuitive, that the whole caching is not working anymore as soon as you use the LruCacheObjectPersister and you pause and resume the app? (That's also how you have implemented it in your samples.) For me from a User perspective, it's not intuitive that the cache is not returning a cached object after I rotate the device- especially when I know that the big advantage of RoboSpice is that it runs in a service (which is decoupled from the activity live cycle).\nI can totally see your point with saving the data to disc- but for my application I would really like to have a fast implementation, which delivers data from RAM instantly and only retrieves from disc when RAM is not available anymore.\nI don't want to criticize roboSpice- it's  a wonderful piece of library- that's just my 2 cents of feedback.\n. @nkeskinov thanks for sharing your code! \nI think it would be great if we could find a generic concept which could go into the RoboSpice code.\nWould be happy to participate in your PR!\n. ",
    "openproject": "Does anyone encountered this problem too?\nwhen the exception happen, it can get right data by later retry. so the server is ok.\n. @softwaremaverick \nChecking the server tomcat log, the server print a 200 HTTP responce log when client getting the EOFException. (I use the google http client.)\nLike you said above, i can't get the actual response that i can't debug and confirm which one of the client and server is not right.\n. ",
    "prettyvoid": "I managed to pinpoint the problem, it turned out to be in this line\nspiceManager.execute(webRequestsHandler,\"\", DurationInMillis.ALWAYS_EXPIRED, listener);\nIf I supply a unique requestCacheKey for each request (instead of an empty string), the crash no longer occurs.\nBecause I'm using no cache, I switched to\nspiceManager.execute(webRequestsHandler, listener);\nIt's working fine now.\nI think all of this is happening because I designed my SpiceRequest to always return a string, I do the casting in the receiving listener instead of inside the SpiceRequest itself.\nSorry for the troubles\n. ",
    "pdavid0": "Thanks!\n. ",
    "Defuera": "yeah it would be nice to update this, since it causes lot's of dependency conflicts.\nMy dependencies looks like this because of it\ncompile('com.octo.android.robospice:robospice:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile('com.octo.android.robospice:robospice-retrofit:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\ncompile('com.octo.android.robospice:robospice-okhttp:1.4.14') {\n    exclude group: 'org.apache.commons', module: 'commons-io'\n}\n. ",
    "rahulrs134": "@maciejpigulski  thanks for the info.I have tried SpiceService.getThreadCount()  its work like a charm .\n@stephanenicolas  Thank you for your valuable info.I will consider this situation while implementing the solution .\n. ",
    "chkm8": "thanks for the help. it solved the issue.\n. ",
    "theDazzler": "Okay I'll continue looking through the samples. I wish there were better guides or tutorials somewhere\n. ",
    "mignick": "Thank you @softwaremaverick for the review. If it would necessary to remove the null check, I could do it for all cases.\nAs I understand now we are waiting for @stephanenicolas's PR review and comments about null check?\n. @stephanenicolas, any chance that you will have time to review this PR in near future?\n. @softwaremaverick PendingRequestListenerWithProgressStub is for testing purpose only, I guess. \nYour concerns about retain cycles are understandable. The reason was just a convenient way to get to the request to cancel it. Ok, it should be enough to have just an indicator about active request and cancel it another way. \nAs a workaround against retain cycles the onRequestAttached could return a weak reference to the request. \nThank you.\n. ",
    "mazurio": "That's quite a good idea, I will implement a boolean in object and check it rather than checking for useless NULL. :+1: \n. ",
    "paweljaneczek": "@stephanenicolas I would expect that calling cancel before calling execute would not cancel that request. \nSimilar thing is happening with adding request then listener for that request (I need it in state machine), adding listener also cause to create request. Then it is possible that listener request will be called before our request and in such case listener is not attached and we never get result..\n. ",
    "Deep21": "Hello nkeskinov,\nThank you to move this to the right place.\nHmm as i understand, I have to create new request class for each different method ?\nFor example for the post and edit functions I have to create 2 RequestClass wich each one implement addCategory and editSubCategory ?\nOr is it more simple to create a single Request class and choose the right method when I intanciate the class ?\npublic class CategoryRequest extends RetrofitSpiceRequest{\n    int id;\n        String method;\n```\npublic CategoryRequest(String method) {\n    super(Model.class, WSCategory.class);\n    this.method = method;\n}\n@Override\npublic Model loadDataFromNetwork() throws Exception {\n    switch (method) {\n    case \"POST\":\n        return getService().addMethod(id);\ncase \"GET\":     \n    return getService().getMethod(id);\n\n  case \"PUT\":       \n    return getService().editMethod(id);\n\n}\nreturn null;\n\n}\n```\n}\nand then new  CategoryRequest(\"POST\");\n. Hello @maciejpigulski \nI'am sorry but I don't get you, could you please give me an example ?\nI used this way getSpiceManager().execute(new SpiceRequest , new ResponseListener());\nAnd I dont know how can I put the callback on RetrofitSpiceRequest\n. ",
    "quirkfly": "Cheers. Will have a look.\nOn 29 Dec 2014 19:45, \"Nikola Keskinov\" notifications@github.com wrote:\n\nYou need to add the following in your SpiceService extension:\n@Override\npublic Notification createDefaultNotification() {\n    return null;\n}\nThis will, however, make your SpiceService a background one, which has\nsome consequences on the general Android level:\nhttp://developer.android.com/guide/components/services.html#Foreground.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/stephanenicolas/robospice/issues/393#issuecomment-68284960\n.\n. \n",
    "mariostallone": "Please may I know when is the next release scheduled?\n. This works... I agree... But just wanted to understand what's the future prospects for this library?\nThere isn't much activity in quite a while. Will this library be supported going forward?\nI really like robospice, and would like to help keep it alive.\n. ",
    "ChristianLJ": "I would also like this. Is it possible to do this manually?\nI need the interceptors..\n. @maciejpigulski i tried your approach and it seems to work without any problems. I will test it and come back. Thank you.\n. Yes me too. Thank you.\n. ",
    "aeracode": "Hope this can help you:\nhttps://github.com/square/okhttp/issues/184\n. ",
    "Wolftein": "@aeracode thanks!\n. ",
    "zhangsl": "Hello @Deep21 \nHere are sorts of examples\nhttps://github.com/octo-online/RoboSpice-samples\n. I met the same problem in my own project, my solution is to write like this.\nprivate boolean DUBUG = false;\nif (DEBUG) {\n    Log.d{\"XXX\"}\n}\nif DEBUG is false. all log logic will not run, and it can be removed by proguard.\n. ",
    "mgrzechocinski": "Thanks for such a quick response :)\nActually, what you propose is exactly what I'm coding right. I'm not convinced of the way I solve this, though. I don't like the fact I call stop&start spice manager, it's an overhead.\nThe question is how to communicate with a SpiceService instance so I can ask it: Ok, reload please. I'm wondering about introducing my own type of request, with injected SpiceService instance which executes it, and then just call a method like reloadUrl? Sounds good?\n. ",
    "orwir": "Thanks for your answer.\nI will try to create pull request. But I never do it before. :)\n. Yep, I'm already understood how to do it. But I have one more question. In what branch I can commit?\n. Ok. Thanks for your help.\n. ",
    "guofengzh": "+1\n. ",
    "NightmaresSeller": "+1\nWe use Robospice in our app for requests that do not rely on network as well, just because of Robospice's handy notification system. But unfortunately, DefaultRequestRunner does not allow to execute requests when network is down. This pull request will allow to override RequestRunner behavior correctly without ugly hacks we forced to use.\n. ",
    "pop1030123": "Has custom request runner not supported yet?\n. ",
    "SjoerdvGestel": "Hey! Thanks for your reply... \nThe SpiceService im using in this case is extending the UncachedSpiceService wich has the following CacheManager:\nreturn new CacheManager() {\n            @Override\n            public  T saveDataToCacheAndReturnData(T data, Object cacheKey) throws CacheSavingException, CacheCreationException {\nreturn data;\n        }\n    };\nis that still correct or is there a newer version available that fixes the issue?\n. 05-06 15:28:58.466    8493-8553/? E/AndroidRuntime\ufe55 FATAL EXCEPTION: SpiceManagerThread 0\n    Process: com.app.activity, PID: 8493\n    java.lang.NullPointerException: Attempt to invoke direct method 'void com.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)' on a null object reference\n            at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n            at java.lang.Thread.run(Thread.java:820)\n. ",
    "dilloncc": "Im seeing the same issue whenever I run in debug mode\n05-12 12:14:09.528      769-852/com.mindgrub.witopia_securemyemail_android E/AndroidRuntime\ufe55 FATAL EXCEPTION: SpiceManagerThread 1\n    Process: com.mindgrub.witopia_securemyemail_android, PID: 769\n    java.lang.NullPointerException: Attempt to invoke direct method 'void com.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)' on a null object reference\n            at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n            at java.lang.Thread.run(Thread.java:820)\n. No I am using the Retrofit module for REST calls, but I am using Dagger for dependency injection. \n. ",
    "ijunes": "86 Seems to be this issue. Did it get merged out?\n. ",
    "marcomorain": "I have a more detailed stack trace:\n```\nCrashlytics - plaintext stacktrace downloaded by Marc O'Morain at Tue, 11 Oct 2016 11:52:35 GMT\nURL: https://fabric.io/flipdish/android/apps/ie.flipdish.flipdish/issues/577a51ffffcdc0425034dc4a/sessions/577fd5fa037f00012b379a945dbd1c0b\nOrganization: Flipdish\nPlatform: android\nApplication: Flipdish\nVersion: 1.0.1 (1)\nBundle Identifier: ie.flipdish.flipdish\nIssue #: 26\nIssue ID: 577a51ffffcdc0425034dc4a\nSession ID: 577fd5fa037f00012b379a945dbd1c0b\nDate: 2016-07-08T16:34:18Z\nOS Version: 5.0.2\nDevice: VF-895N\nRAM Free: 35.3%\nDisk Free: 44.8%\n0. Crashed: SpiceManagerThread 0: 0 0 0x0000000000000000\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:820)\n\n--\nFatal Exception: java.lang.NullPointerException: Attempt to invoke direct method 'void com.octo.android.robospice.SpiceManager.sendRequestToService(com.octo.android.robospice.request.CachedSpiceRequest)' on a null object reference\n       at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n       at java.lang.Thread.run(Thread.java:820)\n0. Crashed: SpiceManagerThread 0: 0 0 0x0000000000000000\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:820)\n\n1. VolleyNetworkDispatcher\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at gp.run(:com.google.android.gms.DynamiteModulesB:91)\n\n2. Thread-1955\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n   at maps.Q.n.run(Unknown Source)\n\n3. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n4. androidmapsapi-ula-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n5. pool-9-thread-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n6. Crashlytics Exception Handler1\n   at dalvik.system.VMStack.getThreadStackTrace(VMStack.java)\n   at java.lang.Thread.getStackTrace(Thread.java:580)\n   at java.lang.Thread.getAllStackTraces(Thread.java:522)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.writeSessionEvent(CrashlyticsUncaughtExceptionHandler.java:1009)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.writeFatal(CrashlyticsUncaughtExceptionHandler.java:766)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.handleUncaughtException(CrashlyticsUncaughtExceptionHandler.java:262)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.access$100(CrashlyticsUncaughtExceptionHandler.java:55)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$5.call(CrashlyticsUncaughtExceptionHandler.java:238)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$5.call(CrashlyticsUncaughtExceptionHandler.java:235)\n   at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n   at io.fabric.sdk.android.services.common.ExecutorUtils$1$1.onRun(ExecutorUtils.java:76)\n   at io.fabric.sdk.android.services.common.BackgroundPriorityRunnable.run(BackgroundPriorityRunnable.java:31)\n   at java.lang.Thread.run(Thread.java:820)\n\n7. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n8. Queue\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(DependencyPriorityBlockingQueue.java:197)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.get(DependencyPriorityBlockingQueue.java:236)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:65)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:46)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n9. ibs\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.d.run(Unknown Source)\n\n10. androidmapsapi-appenvironment-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:197)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2055)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1060)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:776)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n11. HeapTrimmerDaemon\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Daemons$HeapTrimmerDaemon.run(Daemons.java:310)\n   at java.lang.Thread.run(Thread.java:818)\n\n12. Thread-1952\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n\n13. OkHttp ConnectionPool\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:197)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2055)\n   at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:435)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n14. ReferenceQueueDaemon\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:133)\n   at java.lang.Thread.run(Thread.java:818)\n\n15. VolleyNetworkDispatcher\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at gp.run(:com.google.android.gms.DynamiteModulesB:91)\n\n16. Thread-1951\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n   at maps.Q.n.run(Unknown Source)\n\n17. GLThread 1959\n   at java.lang.Object.wait(Object.java)\n   at maps.X.y$f.f(Unknown Source)\n   at maps.X.y$f.run(Unknown Source)\n\n18. pool-2-thread-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n19. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n20. androidmapsapi-scpm-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:197)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2055)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1060)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:776)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n21. VolleyNetworkDispatcher\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at gp.run(:com.google.android.gms.DynamiteModulesB:91)\n\n22. Thread-1922\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.priority.PausablePriorityBlockingQueue.take(PausablePriorityBlockingQueue.java:66)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n23. VolleyNetworkDispatcher\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at gp.run(:com.google.android.gms.DynamiteModulesB:91)\n\n24. Thread-1919\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.priority.PausablePriorityBlockingQueue.take(PausablePriorityBlockingQueue.java:66)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n25. OkHttp ConnectionPool\n   at java.lang.Object.wait(Object.java)\n   at com.squareup.okhttp.ConnectionPool.performCleanup(ConnectionPool.java:305)\n   at com.squareup.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty(ConnectionPool.java:242)\n   at com.squareup.okhttp.ConnectionPool.access$000(ConnectionPool.java:54)\n   at com.squareup.okhttp.ConnectionPool$1.run(ConnectionPool.java:97)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n26. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n27. FinalizerWatchdogDaemon\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Daemons$FinalizerWatchdogDaemon.waitForObject(Daemons.java:239)\n   at java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:211)\n   at java.lang.Thread.run(Thread.java:818)\n\n28. Queue\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(DependencyPriorityBlockingQueue.java:197)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.get(DependencyPriorityBlockingQueue.java:236)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:65)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:46)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n29. Thread-1956\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n   at maps.Q.n.run(Unknown Source)\n\n30. Thread-1891\n   at android.net.LocalSocketImpl.accept(LocalSocketImpl.java)\n   at android.net.LocalSocketImpl.accept(LocalSocketImpl.java:334)\n   at android.net.LocalServerSocket.accept(LocalServerSocket.java:94)\n   at com.android.tools.fd.runtime.Server$SocketServerThread.run(Server.java:150)\n   at java.lang.Thread.run(Thread.java:818)\n\n31. Thread-1954\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n\n32. AsyncTask #1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n33. Answers Events Handler1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:197)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2055)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1060)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:776)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n   at io.fabric.sdk.android.services.common.ExecutorUtils$1$1.onRun(ExecutorUtils.java:76)\n   at io.fabric.sdk.android.services.common.BackgroundPriorityRunnable.run(BackgroundPriorityRunnable.java:31)\n   at java.lang.Thread.run(Thread.java:820)\n\n34. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n35. java.lang.ProcessManager\n   at java.lang.Object.wait(Object.java)\n   at java.lang.ProcessManager.waitForMoreChildren(ProcessManager.java:140)\n   at java.lang.ProcessManager.watchChildren(ProcessManager.java:105)\n   at java.lang.ProcessManager.access$000(ProcessManager.java:40)\n   at java.lang.ProcessManager$1.run(ProcessManager.java:58)\n\n36. GAC_Executor[0]\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at rr.run(:com.google.android.gms.DynamiteModulesB:17)\n   at java.lang.Thread.run(Thread.java:818)\n\n37. FinalizerDaemon\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Object.wait(Object.java:422)\n   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:101)\n   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:72)\n   at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:173)\n   at java.lang.Thread.run(Thread.java:818)\n\n38. Queue\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(DependencyPriorityBlockingQueue.java:197)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.get(DependencyPriorityBlockingQueue.java:236)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:65)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:46)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n39. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:400)\n   at java.util.concurrent.FutureTask.get(FutureTask.java:162)\n   at com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper.executeSyncLoggingException(CrashlyticsExecutorServiceWrapper.java:47)\n   at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.uncaughtException(CrashlyticsUncaughtExceptionHandler.java:235)\n   at com.joshdholtz.sentry.Sentry$SentryUncaughtExceptionHandler.uncaughtException(Sentry.java:540)\n   at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:693)\n   at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:690)\n\n40. Measurement Worker\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Object.wait(Object.java:422)\n   at com.google.android.gms.measurement.internal.zzv$zzc.run(Unknown Source)\n\n41. com.mixpanel.android.viewcrawler.ViewCrawler\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at android.os.HandlerThread.run(HandlerThread.java:61)\n\n42. com.mixpanel.android.AnalyticsWorker\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at android.os.HandlerThread.run(HandlerThread.java:61)\n\n43. pool-10-thread-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Object.wait(Object.java:422)\n   at com.mobileapptracker.MATEventQueue$Dump.run(MATEventQueue.java:167)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n44. pool-7-thread-1\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n45. GAC_Executor[0]\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at com.google.android.gms.internal.zznl.run(Unknown Source)\n   at java.lang.Thread.run(Thread.java:818)\n\n46. ClearcutLoggerApiImpl\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1048)\n   at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:776)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at jf.run(:com.google.android.gms.DynamiteModulesB:126)\n   at java.lang.Thread.run(Thread.java:818)\n\n47. Queue\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(DependencyPriorityBlockingQueue.java:197)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.get(DependencyPriorityBlockingQueue.java:236)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:65)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:46)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n48. Okio Watchdog\n   at java.lang.Object.wait(Object.java)\n   at okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:309)\n   at okio.AsyncTimeout.access$000(AsyncTimeout.java:40)\n   at okio.AsyncTimeout$Watchdog.run(AsyncTimeout.java:272)\n\n49. main\n   at ie.flipdish.flipdish_android.MainActivity$AccountDetailsListener.onRequestSuccess(MainActivity.java:284)\n   at ie.flipdish.flipdish_android.MainActivity$AccountDetailsListener.onRequestSuccess(MainActivity.java:254)\n   at com.octo.android.robospice.request.notifier.DefaultRequestListenerNotifier$ResultRunnable.run(DefaultRequestListenerNotifier.java:174)\n   at android.os.Handler.handleCallback(Handler.java:739)\n   at android.os.Handler.dispatchMessage(Handler.java:95)\n   at android.os.Looper.loop(Looper.java:135)\n   at android.app.ActivityThread.main(ActivityThread.java:5219)\n   at java.lang.reflect.Method.invoke(Method.java)\n   at java.lang.reflect.Method.invoke(Method.java:372)\n   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:898)\n   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:693)\n\n50. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n51. SpiceManagerThread 0\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:263)\n   at java.lang.Thread.run(Thread.java:818)\n\n52. RenderDrive\n   at java.lang.Thread.sleep(Thread.java)\n   at java.lang.Thread.sleep(Thread.java:1031)\n   at java.lang.Thread.sleep(Thread.java:985)\n   at maps.X.m$a.run(Unknown Source)\n\n53. Thread-1920\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at com.octo.android.robospice.priority.PausablePriorityBlockingQueue.take(PausablePriorityBlockingQueue.java:66)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n54. GAC_Executor[1]\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at com.google.android.gms.internal.zznl.run(Unknown Source)\n   at java.lang.Thread.run(Thread.java:818)\n\n55. VolleyCacheDispatcher\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at gi.run(:com.google.android.gms.DynamiteModulesB:91)\n\n56. Thread-1953\n   at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\n   at android.os.MessageQueue.next(MessageQueue.java:143)\n   at android.os.Looper.loop(Looper.java:122)\n   at maps.Q.b.run(Unknown Source)\n   at maps.Q.n.run(Unknown Source)\n\n57. GAC_Executor[1]\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at rr.run(:com.google.android.gms.DynamiteModulesB:17)\n   at java.lang.Thread.run(Thread.java:818)\n\n58. androidmapsapi-ulcs-1\n   at java.lang.Thread.sleep(Thread.java)\n   at java.lang.Thread.sleep(Thread.java:1031)\n   at java.lang.Thread.sleep(Thread.java:985)\n   at maps.af.au.run(Unknown Source)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n59. GCDaemon\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Daemons$GCDaemon.run(Daemons.java:341)\n   at java.lang.Thread.run(Thread.java:818)\n\n60. Queue\n   at java.lang.Object.wait(Object.java)\n   at java.lang.Thread.parkFor(Thread.java:1220)\n   at sun.misc.Unsafe.park(Unsafe.java:299)\n   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n   at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:510)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(DependencyPriorityBlockingQueue.java:197)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.get(DependencyPriorityBlockingQueue.java:236)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:65)\n   at io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.take(DependencyPriorityBlockingQueue.java:46)\n   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n\n```\n. ",
    "madhurranjan": "I had added it as a module but not specifically added into the project. \n. Hi,\nCan someone please help here?\n. Imageview wasn't set right. Its working now.\n. ",
    "hoseinit": "I need it to retry the same request until it's done !\nCache it if exits the program\n. ",
    "rcgonzalezf": "I was thinking the same, I used this project last year, but I'm not so sure to use it in my new apps, there are a lot of open issues.\n. II thought it was being maintained by a company, fair enough, I'll try to use it and help :)\nThanks for the library stephanenicolas \n. ",
    "georgeci": "https://github.com/evant/gradle-retrolambda\nI use lambdas in my Android project. I can do pull-request with this, but not soon.\n. I wrote it but I thought that to have the opportunity out of the box is good idea\nhttps://gist.github.com/georgeci/4229e8142f6ff6306521\n. ",
    "kjjgibson": "Thanks for the quick response.\nI set the app icon and this fixes the problem.\nThe project is actually a library project which is why it didn't have an icon to begin with. However the library project cannot have an app icon as this conflicts with the actual apps icon and I get a manifest merger failed error. In case anyone else sees this then I've fixed this problem by referring to this: link\n. ",
    "psharrma": "Hi @aschelch ,\nThat is what exactly i found missing in this great but less known library, Did you finalize on the approach?\nIf not may be i could be of some help.\nFood for thought: one more feature i found missing(may be I am wrong here) is to launch another Request from current Request, And Still interesting UI Elements should be able to listen to the result.\nBest,\n. ",
    "wiradikusuma": "Add this in your proguard-rules.pro file:\n-dontwarn com.octo.android.robospice.SpiceService\nIt's not ideal, but the missing method is only used when VERSION.SDK_INT < 11, so for most people it's safe to ignore.\n. ",
    "johngamarra": "Hi, please read\nhttps://github.com/stephanenicolas/robospice/wiki/Advanced-RoboSpice-Usages-and-FAQ#how-to-cancel-a-request-\n. ",
    "kekedaine": "@johngamarra : no, i want listen cancel action when i call spiceManager.cancel(myRequest);\nnow: when i call spiceManager.cancel(myRequest), it 's call back onRequestFailure()\ni want: when i call spiceManager.cancel(myRequest), it 's call back onRequestCancel()\nthanks you.\n. ",
    "tanweijiu": "I got this error too, but i don/t know why..\n. ",
    "arbitur": "@tanweijiu I got it solved by sacrificing 300 rep on StackOverflow: http://stackoverflow.com/questions/34809462/robospice-throwing-okhttp-exceptions\n. ",
    "farmazon3000": "Last commit is from 2014 so go figure...\n. ",
    "sailorseashell": "@mykolaj I looked into why these builds were failing and it looks like it's because you didn't push the changes to your submodule for retrofit2. If you push the submodule changes first, followed by the main repo changes, it should work.. ",
    "SanyasiraoM": "@mykolaj Did you push the code with support of retrofit two?. Thank you @mykolaj . @stephanenicolas Can you look into this?. Yes, I realised that. So i'm for time being I am proceeding with robopice-retrofit2 in below link until you update and release a new version\nhttps://github.com/stephanenicolas/robospice/pull/459 \nThank you :). @mykolaj So what should I do now to make it work? Any suggestion?. @mykolaj Somehow the jar file you have is working fine for me \ud83d\udc4d \nBut I don't know how to handle errors, How to catch error codes and error json object. In retrofit one, The any exception except 200 used come in onFailure. But in retrofit2, All server errors coming to onSuccess only. How to handle them?\n@mykolaj @stephanenicolas Can you look into this? Sorry to ping you guys.. But it's need of the hour for me. @mykolaj Thank you. He and me are from same team \ud83d\udc4d . @stephanenicolas Any idea when will you merge it?. I have done it using call backs. It would be great if I get request payload as well in the RequesInformation object. Thank you!\n```\nbuilder.setErrorHandler(new ErrorHandler() {\n    @Override\n    public Throwable handleError(RetrofitError cause) {\n        Log.d(\"TAG\", cause.getUrl() + \":\" + cause.getMessage());\n        return cause;\n    }\n});\nbuilder.setProfiler(new Profiler() {\n    @Override\n    public Object beforeCall() {\n        return null;\n    }\n@Override\npublic void afterCall(RequestInformation requestInfo, long elapsedTime, int statusCode, Object beforeCallData) {\n    Log.d(\"TAG\",new Gson().toJson(requestInfo)+\" : \"+elapsedTime);\n}\n\n});\n```. ",
    "manikavi": "Hi,\n   I thought  this is related to robospice lib,So i posted here\n. Hello,\n   My issue is in detail below,May i know the reason,why you said,this isn't an issue of Robospice\n```\nV//SpiceManager.java:1189: 18:06:45.854 SpiceManagerThread 0 Binding to service succeeded.\nE/AndroidRuntime: FATAL EXCEPTION: main\n                  java.lang.NoClassDefFoundError: com.octo.android.robospice.priority.PausablePriorityBlockingQueue\n                      at com.octo.android.robospice.priority.PausableThreadPoolExecutor.(PausableThreadPoolExecutor.java:25)\n                      at com.octo.android.robospice.priority.PriorityThreadPoolExecutor.(PriorityThreadPoolExecutor.java:23)\n                      at com.octo.android.robospice.priority.PriorityThreadPoolExecutor.getPriorityExecutor(PriorityThreadPoolExecutor.java:35)\n                      at com.octo.android.robospice.SpiceService.getExecutorService(SpiceService.java:228)\n                      at com.octo.android.robospice.SpiceService.onCreate(SpiceService.java:117)\n                      at android.app.ActivityThread.handleCreateService(ActivityThread.java:2401)\n                      at android.app.ActivityThread.access$1600(ActivityThread.java:140)\n                      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1310)\n                      at android.os.Handler.dispatchMessage(Handler.java:99)\n                      at android.os.Looper.loop(Looper.java:137)\n                      at android.app.ActivityThread.main(ActivityThread.java:4895)\n                      at java.lang.reflect.Method.invokeNative(Native Method)\n                      at java.lang.reflect.Method.invoke(Method.java:511)\n                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:994)\n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:761)\n                      at dalvik.system.NativeStart.main(Native Method)\nD//SpiceManager.java:1236: 18:06:45.855 SpiceManagerThread 0 Waiting for service to be bound.\n```\n. ",
    "arya6000": "@etylerflynn should I email it to the email you have on your profile?. @etylerflynn just sent it. ",
    "or-dvir": "@stephanenicolas any recommendations?. ",
    "Faltenreich": "Actually I get an IllegalStateException when my app is awoken from the background by an registered alarm through the AlarmManager:\nE/AndroidRuntime: FATAL EXCEPTION: SpiceManagerThread 0\n                                                                        Process: com.faltenreich.diaguard, PID: 5028\n                                                                        java.lang.IllegalStateException: Not allowed to start service Intent { cmp=com.faltenreich.diaguard/.networking.openfoodfacts.OpenFoodFactsService }: app is in background uid UidRecord{2d90d59 u0a84 RCVR idle procs:1 seq(0,0,0)}\n                                                                            at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1505)\n                                                                            at android.app.ContextImpl.startService(ContextImpl.java:1461)\n                                                                            at android.content.ContextWrapper.startService(ContextWrapper.java:644)\n                                                                            at com.octo.android.robospice.SpiceManager.tryToStartService(SpiceManager.java:1170)\n                                                                            at com.octo.android.robospice.SpiceManager.run(SpiceManager.java:247)\n                                                                            at java.lang.Thread.run(Thread.java:764). ",
    "ransome1": "Hey there. We are facing similar problems: tryToStartService crashes on  Android 8.x devices, since Google limited the backgrounds executions.\n@stephanenicolas  Is there any update for robospice in sight, that uses the new startForegroundService method for 8.x devices, as Google introduced here: https://developer.android.com/about/versions/oreo/android-8.0-changes.html. ",
    "sunszl": "can Anyone help me?\nAny reply is appreciated.. there are two commons-io in gradle's cache\n.gradle\\caches\\modules-2\\files-2.1\\org.apache.commons\\commons-io\\1.3.2\\b6dde38349ba9bb5e6ea6320531eae969985dae5\n.gradle\\caches\\modules-2\\files-2.1\\commons-io\\commons-io\\1.3.2\\b6dde38349ba9bb5e6ea6320531eae969985dae5\nI think this caused the problem. Can anyone find a way to work around this?\n. ",
    "shanuka": "i got this isse because of the firebase. disable firebase check again. which servces you may use in your project.. crash reporting working fine with 27. i dont know about notifications. i had trouble with Performance. . i thought performance services still in beta if i found soution ill let you know \ud83d\ude42. ",
    "MS893": "Thanks for your answer, but I want to use Firebase ! is there a solution to enable Firebase after ?\nFor the moment, I found a solution : I use API 26 target instead of API 27. But I think it is provisional.... I use crash reporting and notifications, but I can remove notifications, it's not essential.... OK thanks !. ",
    "tyates": "Did anyone find any solution for this?. "
}