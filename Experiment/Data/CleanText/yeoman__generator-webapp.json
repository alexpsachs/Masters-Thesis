{
    "jonkemp": "I wrote a plugin that will parse usemin tags, called gulp-useref. It uses useref which is based on grunt-useref.\n. I have an idea for how this could work using 2 tasks. In one task, you could use gulp-useref to parse the usemin tags and replace them with the combined files in the html.\nSecond, you could use gulp-bundle to parse the usemin tags again in a separate task and handle the actual bundling of the files. gulp-bundle is not a gulp plugin. It instead uses useref to parse the usemin tags and return the paths to the assets you want to bundle. It then passes those paths off to gulp which handles concatenating the files. It has an option to also minify those files.\nI'm happy to submit a pull request for this if it will work. Thanks.\n. Wow that's a lot of open issues! I'm willing to fix issues that come up. gulp-useref and gulp-bundle both use useref, which was pulled out of grunt-useref, to process the building blocks. I don't maintain that, but I would be willing to contribute there as well. Maybe this won't have as many issues with gulp as it does with Grunt. ;-)\nI'm working on this now, so hopefully it will be ready soon. Thanks!\n. I wrote a 'server' task that starts a server with connect and connect-livereload https://gist.github.com/jonkemp/8244266#file-gulpfile-js-L62. It watches the files and updates the changed files in the browser with livereload just like Grunt does.\n. I am working on updating gulp-useref so that it will handle the concatenation of the assets itself, instead of requiring gulp-bundle. The assets will then be pushed onto the stream and passed on. Gulp-filter could be used to do any asset modification after that. I think this works better than requiring another task and another dependency. \nYou can see my work here.\nhttps://github.com/jonkemp/gulp-useref/tree/useref2\nI would like to get some feedback before I publish it. Once the new version is published, I can submit a pull request here. Thanks!\n. 5a6ae82246902ced33d9b031bb580cafbb0778a6 closes\n. 5a6ae82246902ced33d9b031bb580cafbb0778a6 can close this now.\n. See original question here https://github.com/yeoman/generator-gulp-webapp/issues/27.\nThis would also close https://github.com/yeoman/generator-gulp-webapp/pull/33.\n. Do you mean get the latest changes and then do 'git rebase'? Otherwise it says it's up to date.\n. Done.\n. The recommendation is not to use gulp-connect and just use the connect module instead. It's the whole don't create a plugin if it's not necessary thing.\nIt would look something like this without using gulp-connect. This starts a server with connect and connect-livereload.\n``` js\ngulp.task('connect-livereload', function() {\n    var app = connect()\n        .use(require('connect-livereload')({ port: 35729 }))\n        .use(connect.static('app'))\n        .use(connect.directory('app'));\nhttp.createServer(app).listen(9000);\n\n});\n```\nThen you could use gulp-livereload to run livereload on your changed files in your watch tasks.\nI'm happy to submit a pull request for it.\n. It still doesn't work. Now I got this error.\n``` bash\nSyntax error: File to import not found or unreadable: ../bower_components/bootstrap-sass-official/vendor/assets/styleshe\nets/_bootstrap-mincer.scss.\n              Load paths:\n                C:/Documents/htdocs/gulp-webapp\n                C:/Documents/htdocs/gulp-webapp/app/styles\n        on line 4 of C:\\Documents\\htdocs\\gulp-webapp\\app\\styles\\main.scss\n  Use --trace for backtrace.\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\n[\u2190[32mgulp\u2190[39m] Error in plugin '\u2190[36mgulp-ruby-sass\u2190[39m':\nSyntax error: File to import not found or unreadable: ../bower_components/bootstrap-sass-official/vendor/assets/styleshe\nets/_bootstrap-mincer.scss.\n              Load paths:\n                C:/Documents/htdocs/gulp-webapp\n                C:/Documents/htdocs/gulp-webapp/app/styles\n        on line 4 of C:\\Documents\\htdocs\\gulp-webapp\\app\\styles\\main.scss\n  Use --trace for backtrace.\nat ChildProcess.<anonymous> (C:\\Documents\\htdocs\\gulp-webapp\\node_modules\\gulp-ruby-sass\\index.j\n\ns:100:25)\n    at ChildProcess.EventEmitter.emit (events.js:98:17)\n    at maybeClose (child_process.js:743:16)\n    at Socket. (child_process.js:956:11)\n    at Socket.EventEmitter.emit (events.js:95:17)\n    at Pipe.close (net.js:465:12)\n``\n. Ok, getting latest and doingyo gulp-webappagain resolved the problem for me. Thanks.\n. :+1: \n. @sindresorhus that wasn't me. I am not the maintainer of useref. I do know that they unpublished useref and republished under node-useref because of issues publishing to npm, and I updated my plugin once I learned of that.\n. @silvenon nope, not me.\n. +1\n. I wrote a plugin that will parse usemin tags, called [gulp-useref](https://github.com/jonkemp/gulp-useref). It uses [useref](https://github.com/digisfera/useref) which is based on grunt-useref.\n. I have an idea for how this could work using 2 tasks. In one task, you could usegulp-useref` to parse the usemin tags and replace them with the combined files in the html.\nSecond, you could use gulp-bundle to parse the usemin tags again in a separate task and handle the actual bundling of the files. gulp-bundle is not a gulp plugin. It instead uses useref to parse the usemin tags and return the paths to the assets you want to bundle. It then passes those paths off to gulp which handles concatenating the files. It has an option to also minify those files.\nI'm happy to submit a pull request for this if it will work. Thanks.\n. Wow that's a lot of open issues! I'm willing to fix issues that come up. gulp-useref and gulp-bundle both use useref, which was pulled out of grunt-useref, to process the building blocks. I don't maintain that, but I would be willing to contribute there as well. Maybe this won't have as many issues with gulp as it does with Grunt. ;-)\nI'm working on this now, so hopefully it will be ready soon. Thanks!\n. I wrote a 'server' task that starts a server with connect and connect-livereload https://gist.github.com/jonkemp/8244266#file-gulpfile-js-L62. It watches the files and updates the changed files in the browser with livereload just like Grunt does.\n. I am working on updating gulp-useref so that it will handle the concatenation of the assets itself, instead of requiring gulp-bundle. The assets will then be pushed onto the stream and passed on. Gulp-filter could be used to do any asset modification after that. I think this works better than requiring another task and another dependency. \nYou can see my work here.\nhttps://github.com/jonkemp/gulp-useref/tree/useref2\nI would like to get some feedback before I publish it. Once the new version is published, I can submit a pull request here. Thanks!\n. 5a6ae82246902ced33d9b031bb580cafbb0778a6 closes\n. 5a6ae82246902ced33d9b031bb580cafbb0778a6 can close this now.\n. See original question here https://github.com/yeoman/generator-gulp-webapp/issues/27.\nThis would also close https://github.com/yeoman/generator-gulp-webapp/pull/33.\n. Do you mean get the latest changes and then do 'git rebase'? Otherwise it says it's up to date.\n. Done.\n. The recommendation is not to use gulp-connect and just use the connect module instead. It's the whole don't create a plugin if it's not necessary thing.\nIt would look something like this without using gulp-connect. This starts a server with connect and connect-livereload.\n``` js\ngulp.task('connect-livereload', function() {\n    var app = connect()\n        .use(require('connect-livereload')({ port: 35729 }))\n        .use(connect.static('app'))\n        .use(connect.directory('app'));\nhttp.createServer(app).listen(9000);\n\n});\n```\nThen you could use gulp-livereload to run livereload on your changed files in your watch tasks.\nI'm happy to submit a pull request for it.\n. It still doesn't work. Now I got this error.\n``` bash\nSyntax error: File to import not found or unreadable: ../bower_components/bootstrap-sass-official/vendor/assets/styleshe\nets/_bootstrap-mincer.scss.\n              Load paths:\n                C:/Documents/htdocs/gulp-webapp\n                C:/Documents/htdocs/gulp-webapp/app/styles\n        on line 4 of C:\\Documents\\htdocs\\gulp-webapp\\app\\styles\\main.scss\n  Use --trace for backtrace.\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\n[\u2190[32mgulp\u2190[39m] Error in plugin '\u2190[36mgulp-ruby-sass\u2190[39m':\nSyntax error: File to import not found or unreadable: ../bower_components/bootstrap-sass-official/vendor/assets/styleshe\nets/_bootstrap-mincer.scss.\n              Load paths:\n                C:/Documents/htdocs/gulp-webapp\n                C:/Documents/htdocs/gulp-webapp/app/styles\n        on line 4 of C:\\Documents\\htdocs\\gulp-webapp\\app\\styles\\main.scss\n  Use --trace for backtrace.\nat ChildProcess.<anonymous> (C:\\Documents\\htdocs\\gulp-webapp\\node_modules\\gulp-ruby-sass\\index.j\n\ns:100:25)\n    at ChildProcess.EventEmitter.emit (events.js:98:17)\n    at maybeClose (child_process.js:743:16)\n    at Socket. (child_process.js:956:11)\n    at Socket.EventEmitter.emit (events.js:95:17)\n    at Pipe.close (net.js:465:12)\n``\n. Ok, getting latest and doingyo gulp-webapp` again resolved the problem for me. Thanks.\n. :+1: \n. @sindresorhus that wasn't me. I am not the maintainer of useref. I do know that they unpublished useref and republished under node-useref because of issues publishing to npm, and I updated my plugin once I learned of that.\n. @silvenon nope, not me.\n. +1\n. ",
    "addyosmani": "I would be interested to see how that might look. I've been re-testing the current version of gulp-usemin for this issue and it works for some usecases, but doesn't for others. If you could get this cleanly working with useref, I wouldn't mind us using it (at least until a better alternative to usemin comes around). Thanks!\n. @sindresorhus do you have any preferences here? I just want to double-check before we ask @jonkemp to put together a PR.\n. @sindresorhus probably has the best Gulp knowledge on the team. I would check out https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md if you need some help getting started. In terms of priority, I would say this isn't huge but would be a nice-to-have for sometime this month, even if it's later :)\n. I'm happy with Sindre's recommendation of just using wiredep directly.\n. Agreed. I'd love for this generator to remain as fast as possible. \n@doctyper any plans to publish/benchmark soonish? :)\n. This currently causes the build to fail. Anything we can do to fix that? Also, thanks!\n. Thanks @kevva :dancer: \n. Related to load-plugins maybe? https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.js#L12 cc @jackfranklin\n. < 3333333333\n. > Is that as in failing to find the files and failing with an error or not displaying them?\nThat's exactly what I'm seeing :)\n. I realize that the move away from temp folders is one of the nicities of Gulp, but would it be so bad if we used a temp folder to work around this problem? \n. This LGTM.\n. Thanks!\n. @sindresorhus is correct here.\n. Landing. Thanks James!\n. This PR needs to be rebased in order for us to land it :)\n. Boom. Thank you!\n. Thanks!\n. :+1: \n. @sindresorhus @passy let's chat about this during this week's team meeting.\n. Could we get this rebased?\n. Thanks for catching this. We're going to need to improve on the unit tests for this generator if we're to catch regressions like this. Looping in @jrcryer in case he has time to put together a fix for the issue we introduced after merging in the last set of sass changes.\n. Thanks for the fix, James!\n. @sindresorhus @passy I'm on the fence about this one. Any opinions?\n. Hey @pgilad. After discussing this, we decided to not include a sitemap.xml file as it is outside of the scope of what we're trying to achieve with this generator. As Sindre mentioned, we're focusing on SPAs that only have a single entry point HTML file. Thanks again for your PR!\n. Is this still an issue in master? Could you try it?\n. (just checked and wasn't able to repro)\n. Latest jQuery from Bower includes a dist directory so it's possible you're using an older version of the package. Please clear your Bower cache and retry.\n. Hmm. I still can't repro, but will keep this open in case others can.\n. :+1: \n. Haha. I literally just pasted a link about this in our team chat. \nSo, something I'm curious about is whether an option is the right way forward for this. How feasible would it be for BrowserSync to be the default? As in, how well does it cater for the current desktop use-case of where we use the normal live reload functionality we have right now? Is it better served as an option strictly for those catering for a cross-device testing setup? Any additional overhead?\nI'm otherwise interested in this. \n. Thanks @shakyShane. I'd be very interested in reviewing that. cc @sindresorhus and @passy so they're aware of the consideration. I've also been eyeing a similar setup for generator-webapp. \n. How is this coming along @shakyShane? :) \n. @shakyShane any updates? :)\n. PR please :)\n. @passy did you have a chance to test this? Reading through, I have the same comment @sindresorhus did. I don't think the scss is getting compiled into the directory this PR suggests it is.\n. I would be interested in understanding how font assets are handled at the moment. If a Bower package includes font files, are they copied over at all? If not, we need to fix that. My hope would be it doesn't fail completely.\n. Let's move ahead with a PR :) Could you also include some tests for this change?\n. LGTM.\n. Thanks!\n. Thanks for the PR @jonkemp! \n. +1 for removing loadPath.\n. :+1: \n. We currently wire up the JS components from index.js so this change should be okay. The only edge case I can see is that someone strips the JS references for these files from their index and later expects them to be re-wired up with wiredep. I don't forsee that happening however. Landing. Thanks!\n. Let's tackle this after their new release is wrapped up.\n. @silvenon Just to confirm, you're still experiencing this with the current version of the generator in master?\n. We'll aim to get a release tagged and out this week that contains the latest fixes for the issue. Any further testing against master to verify this is now solved are however appreciated.\n. Is there something https://www.npmjs.org/package/generator-gulpfile doesn't give you out of the box?\n. :+1: \n. @shakyShane is it possible to verify if this behaviour has been fixed by testing against our master branch?\n. cc @sindresorhus \n. Could you provide some more info on what this change introduces? \n. :+1: \n. :+1: \n. @stephenplusplus @passy what are your opinions on moving to root? I had the same concerns Rob did in the original webapp thread, but I'm all for consistency here.\n. @jcsrb were you able to discover anything when you investigated this?\n. Straight-up markdown should work fine for this. +1 on .md files in the repo which we then link up from the readme.\n. What's wrong with Mocha? I don't mind Karma being used either.\n. :+1: Mocha.\n. Is this primarily supposed to be tutorials + recipes or something else? +1 on more docs.\n. That would be awesome. Thanks!\n. :+1: \n. ^tshirt it\n. In light of there not being a better option available, I'd vote for 3 at the moment.\n. Let's get that conditional in here before merging.\n. I assume we've decided against opting for PostCSS at this time. @silvenon can this be closed?\n. Sounds good :)\n. @sindresorhus @silvenon I've been holding off on tagging/publishing a new release as you've both mostly become the de facto maintainers of this generator. Do you want to go ahead and publish a new release and cut some release notes?\nIf not, I'm happy to do it but agree that we should get out a new release soon. It's useful to release every month and I'm to blame for not poking enough for us to roll more often :)\n. Initial review LGTM, but would be useful to have someone with deeper knowledge of the 0.17.x API have a second look. cc @SBoudrias in case he has time to take a look.\n. Thanks for reviewing @SBoudrias! @sindresorhus I personally think we should cut a new release before merging this one in (given the number of changes) but I'll leave it up to you guys to decide what is best here :) \n. Sgtm @sindresorhus \n. As @silvenon is going to be AFK for a week, I'm going to reiterate my suggestion for us to tag a release until he's back so we can polish this PR up and have sufficient time to test it and improve as needed. \nI'm happy to help do the tag/publish dance if necessary, but as per IM, will leave it to @sindresorhus and @SBoudrias to decide :)\n. :+1: Thank you!\n. We're having a similar discussion over on web-starter-kit. We're aiming to replace ruby-sass with libsass now that it supports extends and maps, but this can really only happen once gulp-sass and node-sass are shipping with the latest version of libsass.\nBtw, gulp-sass still has a ton of issues around source maps atm. Let's hold off on this.\n. This will need to be rebased before it can be considered.\n. :+1: \n. I'm +1 with @Munter about this adding complexity, but sympathise with the desire to simplify this setup. It's hard because bower_components absolutely does = clutter.\nWe opted for similar file path patterns to what you're suggesting for Polymer projects and whilst it makes sense for an experienced developer, you'll find it introduces cognitive overhead for beginners who just want to point to clear paths.\n. I'm +1 on this change. I've been using libsass daily for a few weeks now with a good bulk of the newer features supported and I haven't run into anything I'd consider a deal-breaker.\n. LGTM. @silvenon feel free to evolve this further with direct commits or PRs if you would like reviews. Nice work.\n. I'm +1 for speed over source maps on this one. I can only imagine the majority of devs would feel the same, but perhaps consider asking folks if they'd prefer one over the other before landing? The differences during watch are particularly large.\n. +1 on Sindre's comment. The release portion of this takes the least amount of time - to enable a more regular release cycle, we need more help with pre-release testing to ensure breakage can be minimised.\n. LGTM, but deferring to @silvenon and @sindresorhus for a final review/merge.\n. :+1: \n. Can we update this to an FAQ.md?\n. Lgtm. Thanks \n. :+1: for gulp-babel \n. Some getting started resources to understand what they are:\n- https://developers.google.com/web/progressive-web-apps/\n- https://addyosmani.com/blog/getting-started-with-progressive-web-apps/\n. I would be interested to see how that might look. I've been re-testing the current version of gulp-usemin for this issue and it works for some usecases, but doesn't for others. If you could get this cleanly working with useref, I wouldn't mind us using it (at least until a better alternative to usemin comes around). Thanks!\n. @sindresorhus do you have any preferences here? I just want to double-check before we ask @jonkemp to put together a PR.\n. @sindresorhus probably has the best Gulp knowledge on the team. I would check out https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md if you need some help getting started. In terms of priority, I would say this isn't huge but would be a nice-to-have for sometime this month, even if it's later :)\n. I'm happy with Sindre's recommendation of just using wiredep directly.\n. Agreed. I'd love for this generator to remain as fast as possible. \n@doctyper any plans to publish/benchmark soonish? :)\n. This currently causes the build to fail. Anything we can do to fix that? Also, thanks!\n. Thanks @kevva :dancer: \n. Related to load-plugins maybe? https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.js#L12 cc @jackfranklin\n. < 3333333333\n. > Is that as in failing to find the files and failing with an error or not displaying them?\nThat's exactly what I'm seeing :)\n. I realize that the move away from temp folders is one of the nicities of Gulp, but would it be so bad if we used a temp folder to work around this problem? \n. This LGTM.\n. Thanks!\n. @sindresorhus is correct here.\n. Landing. Thanks James!\n. This PR needs to be rebased in order for us to land it :)\n. Boom. Thank you!\n. Thanks!\n. :+1: \n. @sindresorhus @passy let's chat about this during this week's team meeting.\n. Could we get this rebased?\n. Thanks for catching this. We're going to need to improve on the unit tests for this generator if we're to catch regressions like this. Looping in @jrcryer in case he has time to put together a fix for the issue we introduced after merging in the last set of sass changes.\n. Thanks for the fix, James!\n. @sindresorhus @passy I'm on the fence about this one. Any opinions?\n. Hey @pgilad. After discussing this, we decided to not include a sitemap.xml file as it is outside of the scope of what we're trying to achieve with this generator. As Sindre mentioned, we're focusing on SPAs that only have a single entry point HTML file. Thanks again for your PR!\n. Is this still an issue in master? Could you try it?\n. (just checked and wasn't able to repro)\n. Latest jQuery from Bower includes a dist directory so it's possible you're using an older version of the package. Please clear your Bower cache and retry.\n. Hmm. I still can't repro, but will keep this open in case others can.\n. :+1: \n. Haha. I literally just pasted a link about this in our team chat. \nSo, something I'm curious about is whether an option is the right way forward for this. How feasible would it be for BrowserSync to be the default? As in, how well does it cater for the current desktop use-case of where we use the normal live reload functionality we have right now? Is it better served as an option strictly for those catering for a cross-device testing setup? Any additional overhead?\nI'm otherwise interested in this. \n. Thanks @shakyShane. I'd be very interested in reviewing that. cc @sindresorhus and @passy so they're aware of the consideration. I've also been eyeing a similar setup for generator-webapp. \n. How is this coming along @shakyShane? :) \n. @shakyShane any updates? :)\n. PR please :)\n. @passy did you have a chance to test this? Reading through, I have the same comment @sindresorhus did. I don't think the scss is getting compiled into the directory this PR suggests it is.\n. I would be interested in understanding how font assets are handled at the moment. If a Bower package includes font files, are they copied over at all? If not, we need to fix that. My hope would be it doesn't fail completely.\n. Let's move ahead with a PR :) Could you also include some tests for this change?\n. LGTM.\n. Thanks!\n. Thanks for the PR @jonkemp! \n. +1 for removing loadPath.\n. :+1: \n. We currently wire up the JS components from index.js so this change should be okay. The only edge case I can see is that someone strips the JS references for these files from their index and later expects them to be re-wired up with wiredep. I don't forsee that happening however. Landing. Thanks!\n. Let's tackle this after their new release is wrapped up.\n. @silvenon Just to confirm, you're still experiencing this with the current version of the generator in master?\n. We'll aim to get a release tagged and out this week that contains the latest fixes for the issue. Any further testing against master to verify this is now solved are however appreciated.\n. Is there something https://www.npmjs.org/package/generator-gulpfile doesn't give you out of the box?\n. :+1: \n. @shakyShane is it possible to verify if this behaviour has been fixed by testing against our master branch?\n. cc @sindresorhus \n. Could you provide some more info on what this change introduces? \n. :+1: \n. :+1: \n. @stephenplusplus @passy what are your opinions on moving to root? I had the same concerns Rob did in the original webapp thread, but I'm all for consistency here.\n. @jcsrb were you able to discover anything when you investigated this?\n. Straight-up markdown should work fine for this. +1 on .md files in the repo which we then link up from the readme.\n. What's wrong with Mocha? I don't mind Karma being used either.\n. :+1: Mocha.\n. Is this primarily supposed to be tutorials + recipes or something else? +1 on more docs.\n. That would be awesome. Thanks!\n. :+1: \n. ^tshirt it\n. In light of there not being a better option available, I'd vote for 3 at the moment.\n. Let's get that conditional in here before merging.\n. I assume we've decided against opting for PostCSS at this time. @silvenon can this be closed?\n. Sounds good :)\n. @sindresorhus @silvenon I've been holding off on tagging/publishing a new release as you've both mostly become the de facto maintainers of this generator. Do you want to go ahead and publish a new release and cut some release notes?\nIf not, I'm happy to do it but agree that we should get out a new release soon. It's useful to release every month and I'm to blame for not poking enough for us to roll more often :)\n. Initial review LGTM, but would be useful to have someone with deeper knowledge of the 0.17.x API have a second look. cc @SBoudrias in case he has time to take a look.\n. Thanks for reviewing @SBoudrias! @sindresorhus I personally think we should cut a new release before merging this one in (given the number of changes) but I'll leave it up to you guys to decide what is best here :) \n. Sgtm @sindresorhus \n. As @silvenon is going to be AFK for a week, I'm going to reiterate my suggestion for us to tag a release until he's back so we can polish this PR up and have sufficient time to test it and improve as needed. \nI'm happy to help do the tag/publish dance if necessary, but as per IM, will leave it to @sindresorhus and @SBoudrias to decide :)\n. :+1: Thank you!\n. We're having a similar discussion over on web-starter-kit. We're aiming to replace ruby-sass with libsass now that it supports extends and maps, but this can really only happen once gulp-sass and node-sass are shipping with the latest version of libsass.\nBtw, gulp-sass still has a ton of issues around source maps atm. Let's hold off on this.\n. This will need to be rebased before it can be considered.\n. :+1: \n. I'm +1 with @Munter about this adding complexity, but sympathise with the desire to simplify this setup. It's hard because bower_components absolutely does = clutter.\nWe opted for similar file path patterns to what you're suggesting for Polymer projects and whilst it makes sense for an experienced developer, you'll find it introduces cognitive overhead for beginners who just want to point to clear paths.\n. I'm +1 on this change. I've been using libsass daily for a few weeks now with a good bulk of the newer features supported and I haven't run into anything I'd consider a deal-breaker.\n. LGTM. @silvenon feel free to evolve this further with direct commits or PRs if you would like reviews. Nice work.\n. I'm +1 for speed over source maps on this one. I can only imagine the majority of devs would feel the same, but perhaps consider asking folks if they'd prefer one over the other before landing? The differences during watch are particularly large.\n. +1 on Sindre's comment. The release portion of this takes the least amount of time - to enable a more regular release cycle, we need more help with pre-release testing to ensure breakage can be minimised.\n. LGTM, but deferring to @silvenon and @sindresorhus for a final review/merge.\n. :+1: \n. Can we update this to an FAQ.md?\n. Lgtm. Thanks \n. :+1: for gulp-babel \n. Some getting started resources to understand what they are:\n- https://developers.google.com/web/progressive-web-apps/\n- https://addyosmani.com/blog/getting-started-with-progressive-web-apps/\n. ",
    "sindresorhus": "I would be interested to see how it would look. Though keep in mind that the typical usemin pattern has a lot of edgecases that needs to be handled. I'm more interested to know how committed you are to fix issues that come up?\nI also know @robwierzbowski is exploring into something like this.\n. @silvenon i don't think it does, but should be easy to support as gulp-rev produces a manifest. It also puts the original paths on the file object in the stream. You'd have to ask the gulp-useref author to implement support though.\n. @jonkemp :arrow_up:\n. @austinpray assetgraph is awesome. go for it and let us know how it works.\n// @munter\n. No need for a gulp plugin, we can just use wiredep directly. Gulp isn't grunt.\n. @luisrudge you read the wiredep docs\n. @passy sure, but that doesn't work with how wiredep currently works. wiredep must then accept an array of src strings instead of src paths. gulp works on in-memory files.\n. fixed in https://github.com/yeoman/generator-gulp-webapp/commit/2b8a83717215d724c1821c66f2910a08a232ab5e\n. https://github.com/yeoman/generator-gulp-webapp/commit/7520fc6472503f1bb3a949b57b16f01532254c23\n. Before this lands it should be performance tested as the grunt plugin is extremely slow.\n. We'll reopen this when Modernizr 3.0 is released and gulp-modernizr is ready.\n. Can you add the required call in the gulpfile and then squash your commits?\n. no, look at the diff https://github.com/yeoman/generator-gulp-webapp/pull/7/files\n. thanks :)\n. :dancer: \n. Can just use vanilla connect + connect-livereload\n. Thanks :)\n. @kevva \n. yay\n. fixed.\n@callumlocke nope, camelize is default.\n. @kevva \n. fixed by https://github.com/yeoman/generator-gulp-webapp/issues/73\n. I think the prompt is mistaken here. We don't intend to support Compass by default as we no longer believe it's the best default configuration.\n@addyosmani correct me if i'm wrong.\n. @arielserafini we're gonna write something about that in the readme, but tldr:\n- Pure Sass, preferably libsass if you can live without the latest 3.3 features. (so much faster) (probably going to be an option in this generator)\n- Autoprefixer for prefixing. Way better than manually having to use mixins.\n- Spriting: lots of good Node modules for this. I'm sure we can find one we can bless.\n- Anything else missing from Compass?\n. @kylebradshaw https://github.com/Team-Sass/breakpoint/issues/92\n. Can you change the flag to includeSass? (make sure you get it updated in all files)\n. Nope, this task is focused on the common case. You can easily add LESS youself ;)\n. Would love a PR like this on generator-webapp and generator-angular too ;)\n. I see no reason why that is a gulp plugin. We'll just use open directly. PR welcome :)\n. I think it's gulp-load-plugins that is breaking because of its lazy mode requiring all plugins to only have one exported function, while gulp-connect does not. We can just require gulp-connect manually.\n@jackfranklin would be nice if there was a better error message for this.\n. @jackfranklin you should add that to your readme ;)\n. But why ignore, you can just require it manually and overwrite it:\njs\n$.connect = require('gulp-connect');\n. It's not entirely obvious though, hence why I recommend adding the above to your docs.\n. we stopped using gulp-connect. so fixed in master.\n. @jonkemp awesome. glad we could get rid of the bundle thing :D\n. fixed by https://github.com/yeoman/generator-gulp-webapp/issues/73\n. Thanks :)\n. the merge conflict also needs to be fixed ;)\n. :-1: This generator is mainly intended for front-end webapps of which there is usually only one entry HTML file.\n. I have the same concerns as @addyosmani, but if it can work the same as the current one with optionally more power I'm happy to see this added :)\n. Thanks for the great overview @shakyShane :)\nI like option 1. \n\nThe downside to this (option 1) is that browser-sync would have to be required at the top of the gulpfile.js to allow any tasks to call reload on the instance.\n\nNot really a downside at all. We just do it in some instances to keep the gulpfile minimal.\n\nThis all looks good to me.\n. js\nbrowserSync.init(null, {\n        server: {\n            baseDir: ['app', '.tmp'],\n            directory: true\n        },\n        debugInfo: false,\n        open: false,\n        host: \"localhost\"\n    }, function (err, bs) {\n        require('opn')(bs.options.url);\n        console.log('Started connect web server on ' + bs.options.url);\n    });\nWhy is open: false and then done in the callback?\nWhy isn't directory listing default?\nWhy is debugInfo true by default?\nWhy did you fill in host when the docs says it's autodetected?\n. > directory middleware for connect is behind an option as it was added only recently.\nOk, but IMHO should be default.\nWe want the gulpfile to be as small as possible.\n\nThis all looks good to me and I know @addyosmani feel the same way.\n@shakyShane care to do a PR?\n. @shakyShane some more shedbiking ;)\n- Can it log this to console by default: console.log('Started connect web server on ' + bs.options.url); so we don't have to manually do it?\n- browserSync.init(null, { looks awkward. Why not just browserSync({?\n. > re: logging, it has some logging by default (if you remove debugInfo: false), but it may be too much output for this project?\nTried it now. Looks good. Ignore that point.\n. @shakyShane would you be able to do a PR to add BrowserSync?\n. @shakyShane looks good to me.\n\nPurely bikshedding, but the API would have been nicer without the .init method.\njs\nbrowserSync({\n       server: {\n           baseDir: [\"app\", \".tmp\"]\n       }\n    });\nYou can still have a browserSync.reload prop on it.\n. > Or this one, which removes even more file watching.\n:+1: \n. ping @shakyShane \n. It's waiting for someone to implement it. PR welcome.\n. Fixed in https://github.com/yeoman/generator-gulp-webapp/commit/b4878dc1306d52ba58b0226e8a9870600004209b\n. Why? How is it better than connect?\n. @jonkemp my point exactly. PR welcome :D\n. fixed in c77aa2cb3f35494e998e2f89c3c6744ae6871932\n. Afaik scss isn't compiled into that dir.\n. closing in favor of #47 \n. We don't intend to support Compass out of the box. But as you've demonstrated, it's easy to enable if you need it.\nSee https://github.com/yeoman/generator-gulp-webapp/pull/18\n. Thnx\n. Check why it's failing before trolling on issues?\nnpm is being flaky. passes locally.\n. Yes, require paths should be relative or from project root. Anything else is confusing.\nThis also needs a mushy rebase.\n. :-1: \n. Hah, just my opinion. Lets see what the others think. It usually leads to a lot of bloat in the generator when having to support both vanilla JS and CS. Especially annoying when none of us uses CS. I would prefer it being a separate generator.\n. Lgtm. Thanks for fixing this :)\n. Woot! :bear:s for everyone!\n. Lets get it down to 0 issues :fast_forward: :fast_forward: \n. > Though Modernizr will be the party-pooper, it seems.\nNope. Fixed it :p\n\nYou take BrowserSync\n\nNot much to fix as it's waiting a PR from the author\n. We're not using it anymore: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json\n. We're soon switching LiveReload solution so that might fix it #54.\n. You need to upgrade npm. This has nothing to do with Yeoman ;)\n. Yes. Good idea @silvenon :)\n. @jcsrb sure\n. :+1: when my inline comment is resolved \n. Thanks @silvenon :)\n. You can already list the tasks with gulp --tasks.\n. Post a question on StackOverflow ;)\n. > LiveReload requires the browser extension. (I should add a comment about it.)\nNo, it doesn't. We use a connect middleware to inject it so the browser extension isn't needed: https://github.com/yeoman/generator-gulp-webapp/blob/c21c97e0c5d2ade930e58ed1e376f53b4971fb82/app/templates/gulpfile.js#L82\n\nWhat is the reason to use connect instead of express (as most tutorials seem to)?\n\nWe actually only use Connect for static file serving. Express would do nothing for us in this case.\n\nWe could definitely use better docs on how the gulpfile works. Though a lot of it becomes clearer once you understand how gulp and streams works. I would start here: https://github.com/gulpjs/gulp/tree/master/docs\n. https://github.com/yeoman/generator-gulp-webapp/issues/101#issuecomment-41543712\n. I pushed out a new release: https://github.com/yeoman/generator-gulp-webapp/releases/tag/v0.1.0\n. @jonkemp you should never unpublish right away... use npm deprecate to dependents a chance to update.\n. @jonkemp sorry, assumed.\n@manuelcabral :arrow_double_up: \n. https://github.com/joyent/node/issues/6960\n. ping @jcsrb :)\n. Sure, we would be happy to accept PRs for that :D\n. > You want .md files in the repo at /docs/recipes/ (like gulp)?\nSure, and with a link from the readme.\n\nOr would it be better to enable the wiki for this repo and set up a section in there?\n\nNah, I don't like wikis.\n. :+1: \n. Anyone: Feel free to submit a PR for additional recipes or comment wishes here ;)\n. @jcsrb yes, that's has been a common request.\n. Because it's added automagically when installing. Manually editing package.json would be much more work.\n. How about it reports but don't fail when serve/watch?\n. Actually, thought about it, I use an editor plugin for JSHint too, so wouldn't be much use for me. Let's go with JSHint only on build. PR :+1: \n. :+1: \n\ngulp-filter is way too complex\n\nIn this case, yes, but it's better when you need to have more than a few plugins conditionalized.\n. @contra can you open a ticket on gulp-if about documenting that? I never thought of combining those.\n. fixed by https://github.com/yeoman/generator-gulp-webapp/commit/3410c84d89b153aaec7eaa278b4e1419170ee156\n. Agree with everything :)\nThanks for the quick turnaround.\n. #115 \n. @silvenon can you link to the previous discussion?\n. Just to steer the discussion in the right way. This isn't about just removing the .tmp folder. It's about figuring out a way to make it moot. Suggestions welcome. Please read the linked-to threads before commenting.\n. Awesome. Some inline feedback. Can you create a readme.md (with link to this recipe) in the recipe folder and link to it from the main readme?\n. Yay. Very nice work :)\n. Not a big fan, but I don't like Mocha either, so why not.\n. @addyosmani probably mostly personal preference, but; it's bloated, slow, introduces implicit globals, awful programmatic API, too short default timeout, too much boilerplate to use it on the client-side, and probably more I can't remember right now.\n. Mocha\n. I was mostly thinking a short tutorial. Just to get people settled in with how it all works.\n. @silvenon linked from main readme, but in docs/readme.md\n. @silvenon would you be interested in getting it up to scratch with the new generator API?\n. WHAT DOES THE YO SAY??? 'ALLO 'ALLO\n. \n. https://github.com/yeoman/yo\n. :+1: \n. This will be a lot simpler with gulp4. Let's just leave it open until then.\n. We shouldn't read in the files again just to show the file size, but I agree adding the size plugin to every task is kinda of dirty. Not sure of a better way atm though.\n// @contra @phated\n. Yay, more recipes :)\n. Hmm, from what I can remember, LESS, Jade, conditional HTML (eg https://github.com/jsoverson/grunt-preprocess), Jasmine testing (we don't even have Mocha one yet though). You might find more wading through the closed issues on generator-webapp.\n. Doesn't matter, it will soon be replaced by https://github.com/yeoman/generator-gulp-webapp/issues/54.\n. Awesome :)\n. Can you fix the merge conflict?\n@callumlocke looks good to you?\n. Woot. We already have 4 recipes now!\n\n// @addyosmani\n. Good stuff :)\n. Awesome!\n. Can you fix the merge conflict?\n. I'd prefer if that were a separate PR.\n. Looking good :)\n. Nice. Thanks again :)\n. The recipe collection is getting really good.\n. Good idea!\n. This shouldn't be needed: https://github.com/yeoman/generator-gulp-webapp/commit/fdb1f7d493304e65a95a0dda63b05d2ffcd2a1b6\n. @KevinLlopart ping :)\nCan you also fix the merge conflict?\n. > HTML5 UP is out of the question, we have to build it with this generator\nThis generator is only meant as a base. We can still use another template.\n\nUsing gh-pages branch?\n\nYup, gh-pages: https://help.github.com/categories/20/articles\n. @silvenon i don't think we need jekyll for this as it's only meant to be one landing page. we just need something simple, without too much cruft.\n. @silvenon do we really need Sass though. It's just a simple landing page. I would prefer there be no preprocessors.\n. Alright. Have fun. There's no rush at all :)\n. Nice! I like this a lot. Simple and clear. Though I don't think the top left Yeoman mark works. Feels out of place.\nYou could use http://5minfork.com/\n. The usage is described on the site. I don't get why having it in gh-pages is a problem though.\n. Still don't see why that matters though.\n. Some nitpick:\n- Some stuff doesn't scale well on mobile. Like the top yeoman ascii. And the logos being stacked weirdly.\n- The logos could be animated in a fun way when hovering. http://daneden.github.io/animate.css\n. @silvenon you may :)\nSome additional nitpick:\n- the top left yeoman circle should be a bit more visible on mobile: \n.navigation {\nposition: absolute;\ntop: -18px;\nleft: -27px;\n}\n(for the mobile media query)\n- Could use some social meta tags like Open Graph for sharing.\n- The top body text could use an illustration. It's a bit text heavy and boring right now. Maybe on of the illustrations:   (yeoman-003.ai) in Google Drive. I can convert any of the to SVG for you if needed.\n. > Why cut the logo at all? Think it would look better to show the entire circle and optically position the text to the right of it on smaller screens.\nBecause it steals a lot of screen real estate and it's what http://yeoman.io does.\n. > I intentionally positioned the logo that way because it's in that exact position on http://yeoman.io, which makes it pretty cool when you click on it.\nYeah, the yeoman.io logo should be changed too. (note that this is only in the mobile media query, not normal view)\n\nadded a Yeoman character in the intro\n\nNice. But he's holding boxes for things we don't include. Maybe update it to be logos of stuff we include?\n\nWhat do I need to do to get http://yeoman.io/generator-gulp-webapp?\n\nI think the yeoman.io repo needs to be renamed to yeoman.github.io and put on the master branch for that to work. It's in the GitHub Pages docs. Alternatively have the site in the yeoman.io repo.\n. :+1: \n. @silvenon So is it done? Otherwise it should probably stay open.\n. Ok, the URL has to be http://yeoman.io/generator-gulp-webapp/\nMind opening a ticket on yeoman.io with what's needed to get this done?\n. > Since other generator probably want landing pages too, isn't /generator/gulp-webapp/ a better choice?\nBoth ways are valid. I just prefer it to be the canonical name.\n\nSide: in our generators list we probably want to link up that landing page, and not the github repo.\n\nYup. We'll change the homepage URL in package.json when the URL is working.\n. Will need rebasing after #144 lands.\n. Please only change the indentation: https://github.com/yeoman/generator-gulp-webapp/pull/147/files?w=1\nYou seem to revert previous changes.\n. :-1: too much for this base generator.\n. I don't think this has anything to do with imagemin. It's probably the cache plugin not picking up on name changes. Try removing the cache and see if that helps.\n. Ya, let's do it :)\n. The readme documents master. If you're looking for documentation on a published version you need to look at the readme from one of the tags.\n. @silvenon no, what should happen is that watch should be a dependency on serve, not the other way around.\n. Thanks @alrra :)\n. @silvenon i don't think so.\n. That's intentional. We prefer to the describe the action rather than what it is.\n. Ah, thanks for catching, but we're switching out Connect for BrowserSync in the next version: https://github.com/yeoman/generator-gulp-webapp/issues/54#issuecomment-46652273\n@shakyShane\n. @silvenon feel free to tweak ;)\n. gulp and gulp build is not the same thing. gulp also cleans the dist directory before running build.\nHappy to accept any other clarifications though. We really want to make it accessible :)\n. gulp. i updated the readme to clarify ;)\n. Sure, but your code style is all over the place. Can you follow the existing one? Thanks :)\n. Thanks :)\n. See sindresorhus/chalk#31\n. @Ahrengot can you paste in the full stacktrace (meaning the full terminal output)?\nCan you try npm cache clean and try to reinstall yo and this generator and try again?\n. The gulp CLI already does that. The global gulp install is just a proxy for the local one.\n. Thanks :)\n. :-1: These issues are user faults, nothing to do with any of our generators.\n. Arg, everything is so broken...\n. @silvenon computers\n. Why can't this be on by default? I really don't want extra lines of config for the htaccess. Maybe we should just drop the 404 page altogether.\n. Relevant discussion of the tradeoffs with each: https://github.com/google/web-starter-kit/issues/82\n. :+1: \n. Not the same thing. This doesn't filter the output, only the flatten transform.\n. the gulpfile is node.\n. I guess we could move it inline in the gulpfile instead.\n. Yup, as soon as #194 is merged. Just haven't had the time to review it.\n. 0.2.0 is out thanks to @silvenon :)\n. @addyosmani If this isn't merged in a couple of days, I agree, but we at least should try to ship updates with the latest generator system. It sets an example.\n. @addyosmani I'll do a release later today of master after some manual testing and minor fixes.\n. I tried but after an hour of debugging all kinds of problems it looks like there's some kind of race issue in yeoman-generator https://github.com/yeoman/generator/issues/661\n. @SBoudrias Both of them are using this.async() for anything async. Just checked. https://github.com/yeoman/generator-mocha/blob/2056b26e566d0e034179745caa328ba1e6e4b28a/generators/app/index.js#L50\n. Merge conflict also needs to be resolved ;)\n. Awesome! Nice work @silvenon :)\n. Thanks :)\n. Thanks :+1: \n. :+1: \n. Yup, libsass has some known problems and node-sass too: https://github.com/sindresorhus/grunt-sass/releases/tag/v0.16.0\n. Closing in favor of #247.\n. Thanks for the PR. Can you argue for why we should add this?\n. Yeah, not interested in something that unreliable. Thanks though :)\n. Someone should write a blogpost based on the discussion and conclusion here. So we can have something succinct to refer to when we get the same issue on any of the other generators.\n. @kevva \n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Looks good. Thanks :)\n. I'm fine with this, but can you document the behaviour in the readme as it's a bit magic?\n. Yeah, sure. Just needs to be written down somewhere.\n. Lgtm. Nice work @silvenon! :)\n\n. // @stephenplusplus \n. Can you explain the change in the PR description?\n. Nice!\n. @silvenon Yeah, looks like a bug with gulp-util: https://github.com/gulpjs/gulp-util/issues/74 Just do it as you did before for now.\n. Nah, it's fine.\n. :-1:\n. :+1: Though lets wait on doing a release until https://github.com/sass/libsass/issues/185 is resolved and in gulp-sass.\n. Very good intro. Looks good to me as is, but I'll keep it open for you to finish.\n. Lgtm. Thanks for keeping these in sync @silvenon :)\n. Thanks :)\n. Not clear what you're talking about. Please try to be more explicit.\n. Handle the error and see what it says (I know it's stupid that Node streams doesn't show the error until you do).\nhttps://www.google.no/search?q=gulp+handle+error\n. What packages? If the package doesn't have a main field in bower.json there's nothing the plugin can do.\n. Ideally yes, but the situation with Bower the opposite of ideal tbh.\n. This is how most projects do git.\n. > It's certainly a hurdle for newer developers to get over and I was just trying to think of a way to make it easier.\nAre you sure it's not just you? This is the first time I've ever got a complaint about this.\n. > As far as never having complaints, did you stop to think your reaction is why?\nYes, that's why I was asking if you're sure it's not just you. If this is a common problem I'm amazed now is the first time I'm hearing about it.\n\nI know a lot of developers that don't open issues or contribute to OSS projects for this exact reason. We're all adults, no one wants to be treated like a student being chided by their teacher. I know you are responsible for a really large number of libraries and get more issues than most of us, but have a little patience with people and when someone asks \"why\", have the empathy to answer honestly.\n\nI think you're reading too much into my comment. I'm only curious about why, definitely not trying belittle anyone. Sorry for my brevity, I was on my phone. But you got your answer, so hope that's ok.\n\nIf this is such a common misconception someone should really write a blog post on how it works. Hint hint ;)\n. Ugh, I'd rather we do not. It will lead to so many support issues about it not working in every edge case users have...\n. > Or you don't like revving by default in general?\nI don't like it in general, as there are so many pitfalls and edge-cases to handle, but might be better with AssetGraph.\n. :-1: \n. I don't see why we would want to revert back to ruby sass again. Source maps are useful, but not that important. I'd rather have speed.\n. It's up to you. Feel free to merge if you think it's the best.\nI just don't care about IE.\n. That would be nice, but as with all Open Source, it requires someone to actually do the work of manually testing everything works, writing a release note, and release it.\n. Looks good :)\n. https://github.com/yeoman/generator-gulp-webapp/issues/279\n. @silvenon I think the fixed some broken source map thingy. But doesn't matter. It's time for a release anyways.\n. http://stackoverflow.com/questions/27283025/yeoman-angular-generator-error\n. Attach an error handler to see the actual error, and share it.\n. :+1: when the inline comments are addressed.\n. @silvenon Not sure what more to say. I've already said I don't like this complication and I think it will cause a lot of support requests, but totally up to you. You're also not using gulp-rev, but gulp-rev-all.\n. We're not going to use js-beautifier as it's too fragile. Though we will consider adding jscs with the --fix flag.\n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. Please elaborate.\n. You need to change all the paths that references images.\nSupport questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. The module should be required separately https://github.com/yeoman/yeoman-assert It's only part of the API for now for legacy reasons.\n\nAlso, please don't open new PRs for every change. Just push new changes to this PR.\n. Looks good, thanks :)\n. The node-sass readme still says that it's broken, so would be nice if you could update that too ;)\n. You seem to have not run npm install or have suffered an npm install corruption. Upgrade to latest Node.js and npm ($ npm install -g npm) and reinstall.\nnpm support: https://github.com/npm/npm/issues\n. :-1: https://github.com/yeoman/generator-webapp/issues/215\nToo fragile for highly dynamic webapps which this generator targets.\nYou can easily add it yourself if you need it ;)\n. > [18:49:10] Error: Cannot find module 'gulp-grep-stream'\n. :+1: PR welcome.\n. I guess we could make it 1.0.0.\n. yeoman-generator will also need to be bumped to latest before release.\n. Yes :)\n. :+1: \n. Awesome! Nice work @silvenon :)\n. No, it was backported to 3.9. You probably need to upgrade your global gulp.\n. That is a linting error coming from ESLint that  says you're using a variable without it being defined. You can ignore it in the file or in the ESLint config. See the ESLint docs.\nUse StackOverflow for support questions.\n. Upgrade your global gulp. npm i -g gulp\n. It should be a given that you keep the global gulp up to date, but sure, done.\n. > Although, shouldn't this be on yeoman.io instead of it being in one generators contributing.md?\nBoth.\n\nThe Yeoman IRC channel on freenode is another nice place for support.\n\n:+1: \n. @stephenplusplus \n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. Closing for lack of activity.. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. This generator doesn't support RequireJS and it's not going to either. There are better ways to bundle your app, like Browserify and Webpack. As for how to use RequireJS with this generator, that's better asked on StackOverflow.\n. Please give the PR and commit a proper title.\n. https://github.com/jamiew/heroku-static-site\n. 'stable' => '4'. iojs also needs to be removed.\n. Thanks :)\n. Try upgrading to Node.js 4.0.0.\n. Use https://github.com/npm/npm/issues for npm support. Installing a generator is just installing a normal npm package and nothing specifically to do with this project.\n. That's what the ESLint editor plugins are for.\n. Text looks ok, but should probably be a faq.md document linked to from the readme.\n. You could use time-require to check if any of the requires are making it slow.\n. Babel caches the output between runs, so might be that the cache isn't working somehow, which would make it a lot slower.\n. Thanks, but please use a proper PR/commit title the next time.\n. This is not the place for npm install support. Try: https://github.com/npm/npm/issues\n. This is usually a sign of some kind of npm install corruption. Ensure you're on the latest Node.js and npm version ($ npm i -g npm). Then delete the node_modules folder and run $ npm cache clean and then $ npm install. Use the npm issue tracker for support.\n. We're already using latest Gulp. Gulp4 is not yet officially released.\nFrom experience using Babel 6, I don't feel it's ready yet. I would wait a month and reconsider then.\n. @w0rd-driven That's not the same situation. With that commit it was incorrect to return as del has a callback interface. del@2 has a promise interface and returning is the correct way to do it.\nThe correct fix here is to make clean a dependency on the individual tasks. Tasks are run concurrently, not in series.\n. ESLint has builtin support for ES6, just enable it in your settings (see ESLint docs). You're trying to use a different parser so you need to npm install it. Use Stack Overflow for support questions.\n. :+1: to what you suggested above.\n. :+1: \n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. @silvenon What's holding this back from being merged?\n. Thanks :)\n. ping @alwynsays \n. Support questions are better asked on Stack Overflow: http://stackoverflow.com/questions/tagged/yeoman\n. It being requested multiple times doesn't necessarily mean it's a good thing. People request it because it's a popular pattern. It can indeed make sense if you have a really huge gulpfile, but I still think it's a premature modularization in this case.\n. Can you elaborate? Not clear what you're asking.\n. I don't really see the point. Git is very good at detecting text/binary files, so manually specifying everything feels like a bloated anti-pattern.\n. DSL => https://en.wikipedia.org/wiki/Domain-specific_language\nTDD => https://en.wikipedia.org/wiki/Test-driven_development\nBDD => https://en.wikipedia.org/wiki/Behavior-driven_development\n\nDefinitely agree we should make that clearer.\n. Closing for lack of feedback from OP.\n. No, the gulpfile is not using any Babel features. Only Node.js 4 or higher required.\n. Thanks :)\n. I think this makes more sense as a recipe than an option. We're not opinionated on how you distribute the built app.\n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\nYou also need to provide more information, like the contents of the gulp file. 20 min is an extremely long time.\n. This is not the place to post about npm install. Use the official npm support channels for that.\n. Use Stack Overflow for support questions.. Upgrade Node.js. I would be interested to see how it would look. Though keep in mind that the typical usemin pattern has a lot of edgecases that needs to be handled. I'm more interested to know how committed you are to fix issues that come up?\nI also know @robwierzbowski is exploring into something like this.\n. @silvenon i don't think it does, but should be easy to support as gulp-rev produces a manifest. It also puts the original paths on the file object in the stream. You'd have to ask the gulp-useref author to implement support though.\n. @jonkemp :arrow_up:\n. @austinpray assetgraph is awesome. go for it and let us know how it works.\n// @munter\n. No need for a gulp plugin, we can just use wiredep directly. Gulp isn't grunt.\n. @luisrudge you read the wiredep docs\n. @passy sure, but that doesn't work with how wiredep currently works. wiredep must then accept an array of src strings instead of src paths. gulp works on in-memory files.\n. fixed in https://github.com/yeoman/generator-gulp-webapp/commit/2b8a83717215d724c1821c66f2910a08a232ab5e\n. https://github.com/yeoman/generator-gulp-webapp/commit/7520fc6472503f1bb3a949b57b16f01532254c23\n. Before this lands it should be performance tested as the grunt plugin is extremely slow.\n. We'll reopen this when Modernizr 3.0 is released and gulp-modernizr is ready.\n. Can you add the required call in the gulpfile and then squash your commits?\n. no, look at the diff https://github.com/yeoman/generator-gulp-webapp/pull/7/files\n. thanks :)\n. :dancer: \n. Can just use vanilla connect + connect-livereload\n. Thanks :)\n. @kevva \n. yay\n. fixed.\n@callumlocke nope, camelize is default.\n. @kevva \n. fixed by https://github.com/yeoman/generator-gulp-webapp/issues/73\n. I think the prompt is mistaken here. We don't intend to support Compass by default as we no longer believe it's the best default configuration.\n@addyosmani correct me if i'm wrong.\n. @arielserafini we're gonna write something about that in the readme, but tldr:\n- Pure Sass, preferably libsass if you can live without the latest 3.3 features. (so much faster) (probably going to be an option in this generator)\n- Autoprefixer for prefixing. Way better than manually having to use mixins.\n- Spriting: lots of good Node modules for this. I'm sure we can find one we can bless.\n- Anything else missing from Compass?\n. @kylebradshaw https://github.com/Team-Sass/breakpoint/issues/92\n. Can you change the flag to includeSass? (make sure you get it updated in all files)\n. Nope, this task is focused on the common case. You can easily add LESS youself ;)\n. Would love a PR like this on generator-webapp and generator-angular too ;)\n. I see no reason why that is a gulp plugin. We'll just use open directly. PR welcome :)\n. I think it's gulp-load-plugins that is breaking because of its lazy mode requiring all plugins to only have one exported function, while gulp-connect does not. We can just require gulp-connect manually.\n@jackfranklin would be nice if there was a better error message for this.\n. @jackfranklin you should add that to your readme ;)\n. But why ignore, you can just require it manually and overwrite it:\njs\n$.connect = require('gulp-connect');\n. It's not entirely obvious though, hence why I recommend adding the above to your docs.\n. we stopped using gulp-connect. so fixed in master.\n. @jonkemp awesome. glad we could get rid of the bundle thing :D\n. fixed by https://github.com/yeoman/generator-gulp-webapp/issues/73\n. Thanks :)\n. the merge conflict also needs to be fixed ;)\n. :-1: This generator is mainly intended for front-end webapps of which there is usually only one entry HTML file.\n. I have the same concerns as @addyosmani, but if it can work the same as the current one with optionally more power I'm happy to see this added :)\n. Thanks for the great overview @shakyShane :)\nI like option 1. \n\nThe downside to this (option 1) is that browser-sync would have to be required at the top of the gulpfile.js to allow any tasks to call reload on the instance.\n\nNot really a downside at all. We just do it in some instances to keep the gulpfile minimal.\n\nThis all looks good to me.\n. js\nbrowserSync.init(null, {\n        server: {\n            baseDir: ['app', '.tmp'],\n            directory: true\n        },\n        debugInfo: false,\n        open: false,\n        host: \"localhost\"\n    }, function (err, bs) {\n        require('opn')(bs.options.url);\n        console.log('Started connect web server on ' + bs.options.url);\n    });\nWhy is open: false and then done in the callback?\nWhy isn't directory listing default?\nWhy is debugInfo true by default?\nWhy did you fill in host when the docs says it's autodetected?\n. > directory middleware for connect is behind an option as it was added only recently.\nOk, but IMHO should be default.\nWe want the gulpfile to be as small as possible.\n\nThis all looks good to me and I know @addyosmani feel the same way.\n@shakyShane care to do a PR?\n. @shakyShane some more shedbiking ;)\n- Can it log this to console by default: console.log('Started connect web server on ' + bs.options.url); so we don't have to manually do it?\n- browserSync.init(null, { looks awkward. Why not just browserSync({?\n. > re: logging, it has some logging by default (if you remove debugInfo: false), but it may be too much output for this project?\nTried it now. Looks good. Ignore that point.\n. @shakyShane would you be able to do a PR to add BrowserSync?\n. @shakyShane looks good to me.\n\nPurely bikshedding, but the API would have been nicer without the .init method.\njs\nbrowserSync({\n       server: {\n           baseDir: [\"app\", \".tmp\"]\n       }\n    });\nYou can still have a browserSync.reload prop on it.\n. > Or this one, which removes even more file watching.\n:+1: \n. ping @shakyShane \n. It's waiting for someone to implement it. PR welcome.\n. Fixed in https://github.com/yeoman/generator-gulp-webapp/commit/b4878dc1306d52ba58b0226e8a9870600004209b\n. Why? How is it better than connect?\n. @jonkemp my point exactly. PR welcome :D\n. fixed in c77aa2cb3f35494e998e2f89c3c6744ae6871932\n. Afaik scss isn't compiled into that dir.\n. closing in favor of #47 \n. We don't intend to support Compass out of the box. But as you've demonstrated, it's easy to enable if you need it.\nSee https://github.com/yeoman/generator-gulp-webapp/pull/18\n. Thnx\n. Check why it's failing before trolling on issues?\nnpm is being flaky. passes locally.\n. Yes, require paths should be relative or from project root. Anything else is confusing.\nThis also needs a mushy rebase.\n. :-1: \n. Hah, just my opinion. Lets see what the others think. It usually leads to a lot of bloat in the generator when having to support both vanilla JS and CS. Especially annoying when none of us uses CS. I would prefer it being a separate generator.\n. Lgtm. Thanks for fixing this :)\n. Woot! :bear:s for everyone!\n. Lets get it down to 0 issues :fast_forward: :fast_forward: \n. > Though Modernizr will be the party-pooper, it seems.\nNope. Fixed it :p\n\nYou take BrowserSync\n\nNot much to fix as it's waiting a PR from the author\n. We're not using it anymore: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json\n. We're soon switching LiveReload solution so that might fix it #54.\n. You need to upgrade npm. This has nothing to do with Yeoman ;)\n. Yes. Good idea @silvenon :)\n. @jcsrb sure\n. :+1: when my inline comment is resolved \n. Thanks @silvenon :)\n. You can already list the tasks with gulp --tasks.\n. Post a question on StackOverflow ;)\n. > LiveReload requires the browser extension. (I should add a comment about it.)\nNo, it doesn't. We use a connect middleware to inject it so the browser extension isn't needed: https://github.com/yeoman/generator-gulp-webapp/blob/c21c97e0c5d2ade930e58ed1e376f53b4971fb82/app/templates/gulpfile.js#L82\n\nWhat is the reason to use connect instead of express (as most tutorials seem to)?\n\nWe actually only use Connect for static file serving. Express would do nothing for us in this case.\n\nWe could definitely use better docs on how the gulpfile works. Though a lot of it becomes clearer once you understand how gulp and streams works. I would start here: https://github.com/gulpjs/gulp/tree/master/docs\n. https://github.com/yeoman/generator-gulp-webapp/issues/101#issuecomment-41543712\n. I pushed out a new release: https://github.com/yeoman/generator-gulp-webapp/releases/tag/v0.1.0\n. @jonkemp you should never unpublish right away... use npm deprecate to dependents a chance to update.\n. @jonkemp sorry, assumed.\n@manuelcabral :arrow_double_up: \n. https://github.com/joyent/node/issues/6960\n. ping @jcsrb :)\n. Sure, we would be happy to accept PRs for that :D\n. > You want .md files in the repo at /docs/recipes/ (like gulp)?\nSure, and with a link from the readme.\n\nOr would it be better to enable the wiki for this repo and set up a section in there?\n\nNah, I don't like wikis.\n. :+1: \n. Anyone: Feel free to submit a PR for additional recipes or comment wishes here ;)\n. @jcsrb yes, that's has been a common request.\n. Because it's added automagically when installing. Manually editing package.json would be much more work.\n. How about it reports but don't fail when serve/watch?\n. Actually, thought about it, I use an editor plugin for JSHint too, so wouldn't be much use for me. Let's go with JSHint only on build. PR :+1: \n. :+1: \n\ngulp-filter is way too complex\n\nIn this case, yes, but it's better when you need to have more than a few plugins conditionalized.\n. @contra can you open a ticket on gulp-if about documenting that? I never thought of combining those.\n. fixed by https://github.com/yeoman/generator-gulp-webapp/commit/3410c84d89b153aaec7eaa278b4e1419170ee156\n. Agree with everything :)\nThanks for the quick turnaround.\n. #115 \n. @silvenon can you link to the previous discussion?\n. Just to steer the discussion in the right way. This isn't about just removing the .tmp folder. It's about figuring out a way to make it moot. Suggestions welcome. Please read the linked-to threads before commenting.\n. Awesome. Some inline feedback. Can you create a readme.md (with link to this recipe) in the recipe folder and link to it from the main readme?\n. Yay. Very nice work :)\n. Not a big fan, but I don't like Mocha either, so why not.\n. @addyosmani probably mostly personal preference, but; it's bloated, slow, introduces implicit globals, awful programmatic API, too short default timeout, too much boilerplate to use it on the client-side, and probably more I can't remember right now.\n. Mocha\n. I was mostly thinking a short tutorial. Just to get people settled in with how it all works.\n. @silvenon linked from main readme, but in docs/readme.md\n. @silvenon would you be interested in getting it up to scratch with the new generator API?\n. WHAT DOES THE YO SAY??? 'ALLO 'ALLO\n. \n. https://github.com/yeoman/yo\n. :+1: \n. This will be a lot simpler with gulp4. Let's just leave it open until then.\n. We shouldn't read in the files again just to show the file size, but I agree adding the size plugin to every task is kinda of dirty. Not sure of a better way atm though.\n// @contra @phated\n. Yay, more recipes :)\n. Hmm, from what I can remember, LESS, Jade, conditional HTML (eg https://github.com/jsoverson/grunt-preprocess), Jasmine testing (we don't even have Mocha one yet though). You might find more wading through the closed issues on generator-webapp.\n. Doesn't matter, it will soon be replaced by https://github.com/yeoman/generator-gulp-webapp/issues/54.\n. Awesome :)\n. Can you fix the merge conflict?\n@callumlocke looks good to you?\n. Woot. We already have 4 recipes now!\n\n// @addyosmani\n. Good stuff :)\n. Awesome!\n. Can you fix the merge conflict?\n. I'd prefer if that were a separate PR.\n. Looking good :)\n. Nice. Thanks again :)\n. The recipe collection is getting really good.\n. Good idea!\n. This shouldn't be needed: https://github.com/yeoman/generator-gulp-webapp/commit/fdb1f7d493304e65a95a0dda63b05d2ffcd2a1b6\n. @KevinLlopart ping :)\nCan you also fix the merge conflict?\n. > HTML5 UP is out of the question, we have to build it with this generator\nThis generator is only meant as a base. We can still use another template.\n\nUsing gh-pages branch?\n\nYup, gh-pages: https://help.github.com/categories/20/articles\n. @silvenon i don't think we need jekyll for this as it's only meant to be one landing page. we just need something simple, without too much cruft.\n. @silvenon do we really need Sass though. It's just a simple landing page. I would prefer there be no preprocessors.\n. Alright. Have fun. There's no rush at all :)\n. Nice! I like this a lot. Simple and clear. Though I don't think the top left Yeoman mark works. Feels out of place.\nYou could use http://5minfork.com/\n. The usage is described on the site. I don't get why having it in gh-pages is a problem though.\n. Still don't see why that matters though.\n. Some nitpick:\n- Some stuff doesn't scale well on mobile. Like the top yeoman ascii. And the logos being stacked weirdly.\n- The logos could be animated in a fun way when hovering. http://daneden.github.io/animate.css\n. @silvenon you may :)\nSome additional nitpick:\n- the top left yeoman circle should be a bit more visible on mobile: \n.navigation {\nposition: absolute;\ntop: -18px;\nleft: -27px;\n}\n(for the mobile media query)\n- Could use some social meta tags like Open Graph for sharing.\n- The top body text could use an illustration. It's a bit text heavy and boring right now. Maybe on of the illustrations:   (yeoman-003.ai) in Google Drive. I can convert any of the to SVG for you if needed.\n. > Why cut the logo at all? Think it would look better to show the entire circle and optically position the text to the right of it on smaller screens.\nBecause it steals a lot of screen real estate and it's what http://yeoman.io does.\n. > I intentionally positioned the logo that way because it's in that exact position on http://yeoman.io, which makes it pretty cool when you click on it.\nYeah, the yeoman.io logo should be changed too. (note that this is only in the mobile media query, not normal view)\n\nadded a Yeoman character in the intro\n\nNice. But he's holding boxes for things we don't include. Maybe update it to be logos of stuff we include?\n\nWhat do I need to do to get http://yeoman.io/generator-gulp-webapp?\n\nI think the yeoman.io repo needs to be renamed to yeoman.github.io and put on the master branch for that to work. It's in the GitHub Pages docs. Alternatively have the site in the yeoman.io repo.\n. :+1: \n. @silvenon So is it done? Otherwise it should probably stay open.\n. Ok, the URL has to be http://yeoman.io/generator-gulp-webapp/\nMind opening a ticket on yeoman.io with what's needed to get this done?\n. > Since other generator probably want landing pages too, isn't /generator/gulp-webapp/ a better choice?\nBoth ways are valid. I just prefer it to be the canonical name.\n\nSide: in our generators list we probably want to link up that landing page, and not the github repo.\n\nYup. We'll change the homepage URL in package.json when the URL is working.\n. Will need rebasing after #144 lands.\n. Please only change the indentation: https://github.com/yeoman/generator-gulp-webapp/pull/147/files?w=1\nYou seem to revert previous changes.\n. :-1: too much for this base generator.\n. I don't think this has anything to do with imagemin. It's probably the cache plugin not picking up on name changes. Try removing the cache and see if that helps.\n. Ya, let's do it :)\n. The readme documents master. If you're looking for documentation on a published version you need to look at the readme from one of the tags.\n. @silvenon no, what should happen is that watch should be a dependency on serve, not the other way around.\n. Thanks @alrra :)\n. @silvenon i don't think so.\n. That's intentional. We prefer to the describe the action rather than what it is.\n. Ah, thanks for catching, but we're switching out Connect for BrowserSync in the next version: https://github.com/yeoman/generator-gulp-webapp/issues/54#issuecomment-46652273\n@shakyShane\n. @silvenon feel free to tweak ;)\n. gulp and gulp build is not the same thing. gulp also cleans the dist directory before running build.\nHappy to accept any other clarifications though. We really want to make it accessible :)\n. gulp. i updated the readme to clarify ;)\n. Sure, but your code style is all over the place. Can you follow the existing one? Thanks :)\n. Thanks :)\n. See sindresorhus/chalk#31\n. @Ahrengot can you paste in the full stacktrace (meaning the full terminal output)?\nCan you try npm cache clean and try to reinstall yo and this generator and try again?\n. The gulp CLI already does that. The global gulp install is just a proxy for the local one.\n. Thanks :)\n. :-1: These issues are user faults, nothing to do with any of our generators.\n. Arg, everything is so broken...\n. @silvenon computers\n. Why can't this be on by default? I really don't want extra lines of config for the htaccess. Maybe we should just drop the 404 page altogether.\n. Relevant discussion of the tradeoffs with each: https://github.com/google/web-starter-kit/issues/82\n. :+1: \n. Not the same thing. This doesn't filter the output, only the flatten transform.\n. the gulpfile is node.\n. I guess we could move it inline in the gulpfile instead.\n. Yup, as soon as #194 is merged. Just haven't had the time to review it.\n. 0.2.0 is out thanks to @silvenon :)\n. @addyosmani If this isn't merged in a couple of days, I agree, but we at least should try to ship updates with the latest generator system. It sets an example.\n. @addyosmani I'll do a release later today of master after some manual testing and minor fixes.\n. I tried but after an hour of debugging all kinds of problems it looks like there's some kind of race issue in yeoman-generator https://github.com/yeoman/generator/issues/661\n. @SBoudrias Both of them are using this.async() for anything async. Just checked. https://github.com/yeoman/generator-mocha/blob/2056b26e566d0e034179745caa328ba1e6e4b28a/generators/app/index.js#L50\n. Merge conflict also needs to be resolved ;)\n. Awesome! Nice work @silvenon :)\n. Thanks :)\n. Thanks :+1: \n. :+1: \n. Yup, libsass has some known problems and node-sass too: https://github.com/sindresorhus/grunt-sass/releases/tag/v0.16.0\n. Closing in favor of #247.\n. Thanks for the PR. Can you argue for why we should add this?\n. Yeah, not interested in something that unreliable. Thanks though :)\n. Someone should write a blogpost based on the discussion and conclusion here. So we can have something succinct to refer to when we get the same issue on any of the other generators.\n. @kevva \n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Looks good. Thanks :)\n. I'm fine with this, but can you document the behaviour in the readme as it's a bit magic?\n. Yeah, sure. Just needs to be written down somewhere.\n. Lgtm. Nice work @silvenon! :)\n\n. // @stephenplusplus \n. Can you explain the change in the PR description?\n. Nice!\n. @silvenon Yeah, looks like a bug with gulp-util: https://github.com/gulpjs/gulp-util/issues/74 Just do it as you did before for now.\n. Nah, it's fine.\n. :-1:\n. :+1: Though lets wait on doing a release until https://github.com/sass/libsass/issues/185 is resolved and in gulp-sass.\n. Very good intro. Looks good to me as is, but I'll keep it open for you to finish.\n. Lgtm. Thanks for keeping these in sync @silvenon :)\n. Thanks :)\n. Not clear what you're talking about. Please try to be more explicit.\n. Handle the error and see what it says (I know it's stupid that Node streams doesn't show the error until you do).\nhttps://www.google.no/search?q=gulp+handle+error\n. What packages? If the package doesn't have a main field in bower.json there's nothing the plugin can do.\n. Ideally yes, but the situation with Bower the opposite of ideal tbh.\n. This is how most projects do git.\n. > It's certainly a hurdle for newer developers to get over and I was just trying to think of a way to make it easier.\nAre you sure it's not just you? This is the first time I've ever got a complaint about this.\n. > As far as never having complaints, did you stop to think your reaction is why?\nYes, that's why I was asking if you're sure it's not just you. If this is a common problem I'm amazed now is the first time I'm hearing about it.\n\nI know a lot of developers that don't open issues or contribute to OSS projects for this exact reason. We're all adults, no one wants to be treated like a student being chided by their teacher. I know you are responsible for a really large number of libraries and get more issues than most of us, but have a little patience with people and when someone asks \"why\", have the empathy to answer honestly.\n\nI think you're reading too much into my comment. I'm only curious about why, definitely not trying belittle anyone. Sorry for my brevity, I was on my phone. But you got your answer, so hope that's ok.\n\nIf this is such a common misconception someone should really write a blog post on how it works. Hint hint ;)\n. Ugh, I'd rather we do not. It will lead to so many support issues about it not working in every edge case users have...\n. > Or you don't like revving by default in general?\nI don't like it in general, as there are so many pitfalls and edge-cases to handle, but might be better with AssetGraph.\n. :-1: \n. I don't see why we would want to revert back to ruby sass again. Source maps are useful, but not that important. I'd rather have speed.\n. It's up to you. Feel free to merge if you think it's the best.\nI just don't care about IE.\n. That would be nice, but as with all Open Source, it requires someone to actually do the work of manually testing everything works, writing a release note, and release it.\n. Looks good :)\n. https://github.com/yeoman/generator-gulp-webapp/issues/279\n. @silvenon I think the fixed some broken source map thingy. But doesn't matter. It's time for a release anyways.\n. http://stackoverflow.com/questions/27283025/yeoman-angular-generator-error\n. Attach an error handler to see the actual error, and share it.\n. :+1: when the inline comments are addressed.\n. @silvenon Not sure what more to say. I've already said I don't like this complication and I think it will cause a lot of support requests, but totally up to you. You're also not using gulp-rev, but gulp-rev-all.\n. We're not going to use js-beautifier as it's too fragile. Though we will consider adding jscs with the --fix flag.\n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. Please elaborate.\n. You need to change all the paths that references images.\nSupport questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. The module should be required separately https://github.com/yeoman/yeoman-assert It's only part of the API for now for legacy reasons.\n\nAlso, please don't open new PRs for every change. Just push new changes to this PR.\n. Looks good, thanks :)\n. The node-sass readme still says that it's broken, so would be nice if you could update that too ;)\n. You seem to have not run npm install or have suffered an npm install corruption. Upgrade to latest Node.js and npm ($ npm install -g npm) and reinstall.\nnpm support: https://github.com/npm/npm/issues\n. :-1: https://github.com/yeoman/generator-webapp/issues/215\nToo fragile for highly dynamic webapps which this generator targets.\nYou can easily add it yourself if you need it ;)\n. > [18:49:10] Error: Cannot find module 'gulp-grep-stream'\n. :+1: PR welcome.\n. I guess we could make it 1.0.0.\n. yeoman-generator will also need to be bumped to latest before release.\n. Yes :)\n. :+1: \n. Awesome! Nice work @silvenon :)\n. No, it was backported to 3.9. You probably need to upgrade your global gulp.\n. That is a linting error coming from ESLint that  says you're using a variable without it being defined. You can ignore it in the file or in the ESLint config. See the ESLint docs.\nUse StackOverflow for support questions.\n. Upgrade your global gulp. npm i -g gulp\n. It should be a given that you keep the global gulp up to date, but sure, done.\n. > Although, shouldn't this be on yeoman.io instead of it being in one generators contributing.md?\nBoth.\n\nThe Yeoman IRC channel on freenode is another nice place for support.\n\n:+1: \n. @stephenplusplus \n. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. Closing for lack of activity.. Support questions are better asked on StackOverflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\n. This generator doesn't support RequireJS and it's not going to either. There are better ways to bundle your app, like Browserify and Webpack. As for how to use RequireJS with this generator, that's better asked on StackOverflow.\n. Please give the PR and commit a proper title.\n. https://github.com/jamiew/heroku-static-site\n. 'stable' => '4'. iojs also needs to be removed.\n. Thanks :)\n. Try upgrading to Node.js 4.0.0.\n. Use https://github.com/npm/npm/issues for npm support. Installing a generator is just installing a normal npm package and nothing specifically to do with this project.\n. That's what the ESLint editor plugins are for.\n. Text looks ok, but should probably be a faq.md document linked to from the readme.\n. You could use time-require to check if any of the requires are making it slow.\n. Babel caches the output between runs, so might be that the cache isn't working somehow, which would make it a lot slower.\n. Thanks, but please use a proper PR/commit title the next time.\n. This is not the place for npm install support. Try: https://github.com/npm/npm/issues\n. This is usually a sign of some kind of npm install corruption. Ensure you're on the latest Node.js and npm version ($ npm i -g npm). Then delete the node_modules folder and run $ npm cache clean and then $ npm install. Use the npm issue tracker for support.\n. We're already using latest Gulp. Gulp4 is not yet officially released.\nFrom experience using Babel 6, I don't feel it's ready yet. I would wait a month and reconsider then.\n. @w0rd-driven That's not the same situation. With that commit it was incorrect to return as del has a callback interface. del@2 has a promise interface and returning is the correct way to do it.\nThe correct fix here is to make clean a dependency on the individual tasks. Tasks are run concurrently, not in series.\n. ESLint has builtin support for ES6, just enable it in your settings (see ESLint docs). You're trying to use a different parser so you need to npm install it. Use Stack Overflow for support questions.\n. :+1: to what you suggested above.\n. :+1: \n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/yeoman\nPaste in the link to the question here so others can follow ;)\n. @silvenon What's holding this back from being merged?\n. Thanks :)\n. ping @alwynsays \n. Support questions are better asked on Stack Overflow: http://stackoverflow.com/questions/tagged/yeoman\n. It being requested multiple times doesn't necessarily mean it's a good thing. People request it because it's a popular pattern. It can indeed make sense if you have a really huge gulpfile, but I still think it's a premature modularization in this case.\n. Can you elaborate? Not clear what you're asking.\n. I don't really see the point. Git is very good at detecting text/binary files, so manually specifying everything feels like a bloated anti-pattern.\n. DSL => https://en.wikipedia.org/wiki/Domain-specific_language\nTDD => https://en.wikipedia.org/wiki/Test-driven_development\nBDD => https://en.wikipedia.org/wiki/Behavior-driven_development\n\nDefinitely agree we should make that clearer.\n. Closing for lack of feedback from OP.\n. No, the gulpfile is not using any Babel features. Only Node.js 4 or higher required.\n. Thanks :)\n. I think this makes more sense as a recipe than an option. We're not opinionated on how you distribute the built app.\n. Support questions are better asked on Stack Overflow:\nhttp://stackoverflow.com/questions/tagged/gulp\nPaste in the link to the question here so others can follow ;)\nYou also need to provide more information, like the contents of the gulp file. 20 min is an extremely long time.\n. This is not the place to post about npm install. Use the official npm support channels for that.\n. Use Stack Overflow for support questions.. Upgrade Node.js. ",
    "robwierzbowski": "Re: work on my end, we're going to try and make our libraries node level with a simple Grunt wrapper, in the hopes that it will be easily wrapped by gulp too. But, I have a couple projects I need to finish before I start working on it in in earnest. Good luck on your tools, and I'll ping this thread when we have something to look at.\n. Main use case: If I have a site where 20k of js is used in every page, and\nan extra 500k are used on a subset of pages, I might want to concatenate\nthem into two separate blocks and load the latter only on the pages it's\nused.\nI'm interested in alternate ways of specifying blocks besides comments\nthough.\nOn Sunday, February 9, 2014, Callum Locke notifications@github.com wrote:\n\nI started using a different approach, and it works well for me... I wrote\na module that automatically detects script/stylesheet blocks, without using\nbuild/endbuild comments. Things get concatenated automatically if they\nare next to each other. (It's easy to detect blocks of adjacent, local\nscript/stylesheet tags.)\nAm I missing some good reason why we should require people to explicitly\ndeclare \"I want this block of scripts concatenated\" in their HTML?\n\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/1#issuecomment-34589231\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. I think the font issue is of our own making. Here's some issues I see:\n- bowerfiles + flatten isn't a great match for font packages. I spot-checked the first page of bower packages with the keyword \"font\" and they're mostly icon sets with CSS and font files in their main property. Flattening breaks the relative references in their CSS.\n- The main benefit I see for flattening is to make referencing fonts easier in development. But we're not using the font task at all during development, so I'm not sure why it was included in the first place.\n- streamqueue is only being used to combine the bowerfiles and gulp.src streams. If we weren't using bowerfiles we wouldn't need streamqueue either.\nCan we simplify to fix it? What do you think about revising the font task to only copy app/fonts, and creating a new bower-assets task to copy fonts and images, etc. from /bower_components to dist/bower_components? We could then remove bowerfiles, streamqueue, and the flatten packages.\nI'm not sure what the best defaults would be to have here \u2014 people may need jpgs and pngs from /bower_components too, but a lot of components come with stray test and source files that aren't useful to the end user. But I think overreaching or asking for end users to do some configuration as they add new components are both better than what we have now.\n/cc @Munter\n. That's correct. Similar to copy tasks in grunt webapp, they're component\nspecific.\nWith relative filepaths and concatenation of CSS files, I'm not sure\nthere's any way to get around something like this. Not sure if this is the\nonly way to do this, but there will be some manual task writing for complex\ncomponents like bootstrap.\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\nOn Wed, Jun 11, 2014 at 9:10 AM, Peter M\u00fcller notifications@github.com\nwrote:\n\nHmm. Very specific for only that file. All other fonts will still be\nbroken if I understand this correctly\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/yeoman/generator-gulp-webapp/issues/74#issuecomment-45738410\n.\n. I think we should take out flatten for the app fonts. Proposal forthcoming, but don't hold this up on my account, it's a little farther down on my list.\n. I am very in favor of BC moving back into app for now.\n. I'd like to explore dependencies at the related level of the application.\nNode dependencies for build are in the root directory. App dependencies are\nin the app directory, whether delivered by npm or bower.\n\nIIRC the reasoning for moving bower outside of app was that people edit app\nfiles, and shouldn't have to learn that dependency directories in app\ncontain files that aren't editable. But we edit files in root all the time,\nand have to know that node_modules and bower_components aren't editable.\nIMO it's a questionable workflow optimization that's causing us workflow\ncomplications \u2014 not sure if the benefits outweigh the costs.\n. > Files in the root shouldn't be edited either. Its only by accident that Gruntfile/Gulpfile get edited. \nMy colleagues and I work on a large webapp with a Yeoman workflow, and we edit the Gruntfile fairly often. We also edit our gemfile and our readme in root, and editorconfig, jslint, and other work environment files every once in a while. This issue establishes that when we install a bower component that's more complex than a single css/js/img/font file, we often have to add special copy tasks to deal with path changes. It would be ideal if no packages had these issues, but the reality is many of them do.\n\nimho it shouldn't be up to the user to remember that those files aren't editable (if they were in the /app folder)\n\nI think theres a gray area between making things easier for a user and shielding them from realities that would be beneficial to understand. Some people love the Rails and jQuery ease/magic shield, some people hate it. I think we fall on different sides of the issue here, but I can see value in both. Honestly I think there are much better reasons to put bower_components in root \u2014 e.g., the consistency of \"all components / vendor files go in root\".\n\nRather, you build tools that take advantage of that fact and are designed to work with those constraints in mind.\n\nMy concern is that Yeoman is supposed to be an easy to use, functioning system out of the box. I would recommend a CDN only once the rest of the toolstack I was recommending worked with it. I'm fine with bower_components being in root if they're easy to reference and interact with for end users.\nThe first thing I'm working on when my gulp app gets to that point is trying to get useref to work with local references but actual files in the root as they are now. The current setup bothers me because it's the one part of Yeoman that seems more complex than the problem it's trying to fix, from the code and issues I see in the queue. I usually prefer to err on the side of simple and working first.\n\nAs a side note, if we have to reference the out-of-webroot location for bower_components, should we remove the use(bower_components...) statement?\n. Unless gulp streams it's output directly to the browser (:rocket:), or we combine .tmp and dist, I don't think there's a way to remove .tmp. .tmp isn't doing the heavy lifting it was in grunt generators though; it's just the final destination for preprocessor tasks during development. @contra, what would the goal of removing .tmp be?\n. How could it be better out of the way? It would be easy to put it in an OS\ntemp directory, but then a user wouldn't be able to easily browse temp\nfiles for debugging. Things go wrong during compilation, and having temp\nfiles available is an important part of being able to figure those issues\nout.\nThe folder is already a semi hidden dot folder. I think further removing\nthe development output files from the user would be a usability regression.\nOn Friday, June 20, 2014, Matija Marohni\u0107 notifications@github.com wrote:\n\n[image: :clap:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/yeoman/generator-gulp-webapp/issues/118#issuecomment-46729715\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. @silvenon gulp-intermediate writes a gulp stream to an OS temporary folder, lets you run a command, and then reads a specified folder's contents back into the stream. It's for when you want to use a (usually non-node) tool that needs to work with a bunch of files on disk all at once instead of a stream of files as objects, e.g., Jekyll, Ruby Sass. \nSince it's meant to read the files back into the stream after writing to the OS temp folder, I don't think it has use here :smile:.\n. :+1:\n. Shouldn't it run before watch starts, like in the grunt yeoman generators?\nOtherwise you may have previous serve/watch task files polluting your\nlatest watch.\nOn Monday, May 12, 2014, Matija Marohni\u0107 notifications@github.com wrote:\n\nYeah, I only have to clean occasionally. In that case, just do gulp clean,\nthen gulp watch. Can someone shed some light on whether the tasks that\nyou specify as dependencies of another task run asynchronously? I remember\nonce adding clean as a dependency of watch and it didn't work.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/124#issuecomment-42808813\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. Re: work on my end, we're going to try and make our libraries node level with a simple Grunt wrapper, in the hopes that it will be easily wrapped by gulp too. But, I have a couple projects I need to finish before I start working on it in in earnest. Good luck on your tools, and I'll ping this thread when we have something to look at.\n. Main use case: If I have a site where 20k of js is used in every page, and\nan extra 500k are used on a subset of pages, I might want to concatenate\nthem into two separate blocks and load the latter only on the pages it's\nused.\nI'm interested in alternate ways of specifying blocks besides comments\nthough.\nOn Sunday, February 9, 2014, Callum Locke notifications@github.com wrote:\n\nI started using a different approach, and it works well for me... I wrote\na module that automatically detects script/stylesheet blocks, without using\nbuild/endbuild comments. Things get concatenated automatically if they\nare next to each other. (It's easy to detect blocks of adjacent, local\nscript/stylesheet tags.)\nAm I missing some good reason why we should require people to explicitly\ndeclare \"I want this block of scripts concatenated\" in their HTML?\n\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/1#issuecomment-34589231\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. I think the font issue is of our own making. Here's some issues I see:\n- bowerfiles + flatten isn't a great match for font packages. I spot-checked the first page of bower packages with the keyword \"font\" and they're mostly icon sets with CSS and font files in their main property. Flattening breaks the relative references in their CSS.\n- The main benefit I see for flattening is to make referencing fonts easier in development. But we're not using the font task at all during development, so I'm not sure why it was included in the first place.\n- streamqueue is only being used to combine the bowerfiles and gulp.src streams. If we weren't using bowerfiles we wouldn't need streamqueue either.\nCan we simplify to fix it? What do you think about revising the font task to only copy app/fonts, and creating a new bower-assets task to copy fonts and images, etc. from /bower_components to dist/bower_components? We could then remove bowerfiles, streamqueue, and the flatten packages.\nI'm not sure what the best defaults would be to have here \u2014 people may need jpgs and pngs from /bower_components too, but a lot of components come with stray test and source files that aren't useful to the end user. But I think overreaching or asking for end users to do some configuration as they add new components are both better than what we have now.\n/cc @Munter\n. That's correct. Similar to copy tasks in grunt webapp, they're component\nspecific.\nWith relative filepaths and concatenation of CSS files, I'm not sure\nthere's any way to get around something like this. Not sure if this is the\nonly way to do this, but there will be some manual task writing for complex\ncomponents like bootstrap.\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\nOn Wed, Jun 11, 2014 at 9:10 AM, Peter M\u00fcller notifications@github.com\nwrote:\n\nHmm. Very specific for only that file. All other fonts will still be\nbroken if I understand this correctly\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/yeoman/generator-gulp-webapp/issues/74#issuecomment-45738410\n.\n. I think we should take out flatten for the app fonts. Proposal forthcoming, but don't hold this up on my account, it's a little farther down on my list.\n. I am very in favor of BC moving back into app for now.\n. I'd like to explore dependencies at the related level of the application.\nNode dependencies for build are in the root directory. App dependencies are\nin the app directory, whether delivered by npm or bower.\n\nIIRC the reasoning for moving bower outside of app was that people edit app\nfiles, and shouldn't have to learn that dependency directories in app\ncontain files that aren't editable. But we edit files in root all the time,\nand have to know that node_modules and bower_components aren't editable.\nIMO it's a questionable workflow optimization that's causing us workflow\ncomplications \u2014 not sure if the benefits outweigh the costs.\n. > Files in the root shouldn't be edited either. Its only by accident that Gruntfile/Gulpfile get edited. \nMy colleagues and I work on a large webapp with a Yeoman workflow, and we edit the Gruntfile fairly often. We also edit our gemfile and our readme in root, and editorconfig, jslint, and other work environment files every once in a while. This issue establishes that when we install a bower component that's more complex than a single css/js/img/font file, we often have to add special copy tasks to deal with path changes. It would be ideal if no packages had these issues, but the reality is many of them do.\n\nimho it shouldn't be up to the user to remember that those files aren't editable (if they were in the /app folder)\n\nI think theres a gray area between making things easier for a user and shielding them from realities that would be beneficial to understand. Some people love the Rails and jQuery ease/magic shield, some people hate it. I think we fall on different sides of the issue here, but I can see value in both. Honestly I think there are much better reasons to put bower_components in root \u2014 e.g., the consistency of \"all components / vendor files go in root\".\n\nRather, you build tools that take advantage of that fact and are designed to work with those constraints in mind.\n\nMy concern is that Yeoman is supposed to be an easy to use, functioning system out of the box. I would recommend a CDN only once the rest of the toolstack I was recommending worked with it. I'm fine with bower_components being in root if they're easy to reference and interact with for end users.\nThe first thing I'm working on when my gulp app gets to that point is trying to get useref to work with local references but actual files in the root as they are now. The current setup bothers me because it's the one part of Yeoman that seems more complex than the problem it's trying to fix, from the code and issues I see in the queue. I usually prefer to err on the side of simple and working first.\n\nAs a side note, if we have to reference the out-of-webroot location for bower_components, should we remove the use(bower_components...) statement?\n. Unless gulp streams it's output directly to the browser (:rocket:), or we combine .tmp and dist, I don't think there's a way to remove .tmp. .tmp isn't doing the heavy lifting it was in grunt generators though; it's just the final destination for preprocessor tasks during development. @contra, what would the goal of removing .tmp be?\n. How could it be better out of the way? It would be easy to put it in an OS\ntemp directory, but then a user wouldn't be able to easily browse temp\nfiles for debugging. Things go wrong during compilation, and having temp\nfiles available is an important part of being able to figure those issues\nout.\nThe folder is already a semi hidden dot folder. I think further removing\nthe development output files from the user would be a usability regression.\nOn Friday, June 20, 2014, Matija Marohni\u0107 notifications@github.com wrote:\n\n[image: :clap:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/yeoman/generator-gulp-webapp/issues/118#issuecomment-46729715\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. @silvenon gulp-intermediate writes a gulp stream to an OS temporary folder, lets you run a command, and then reads a specified folder's contents back into the stream. It's for when you want to use a (usually non-node) tool that needs to work with a bunch of files on disk all at once instead of a stream of files as objects, e.g., Jekyll, Ruby Sass. \nSince it's meant to read the files back into the stream after writing to the OS temp folder, I don't think it has use here :smile:.\n. :+1:\n. Shouldn't it run before watch starts, like in the grunt yeoman generators?\nOtherwise you may have previous serve/watch task files polluting your\nlatest watch.\nOn Monday, May 12, 2014, Matija Marohni\u0107 notifications@github.com wrote:\n\nYeah, I only have to clean occasionally. In that case, just do gulp clean,\nthen gulp watch. Can someone shed some light on whether the tasks that\nyou specify as dependencies of another task run asynchronously? I remember\nonce adding clean as a dependency of watch and it didn't work.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/124#issuecomment-42808813\n.\n\n\nRob Wierzbowski\n@robwierzbowski http://twitter.com/#!/robwierzbowski\nhttp://github.com/robwierzbowski\nhttp://robwierzbowski.com\n. ",
    "callumlocke": "I started using a different approach, and it works well for me... I wrote a module that automatically detects script/stylesheet blocks, without using build/endbuild comments. Things get concatenated automatically if they are next to each other. (It's easy to detect blocks of adjacent, local script/stylesheet tags.)\nAm I missing some good reason why we should require people to explicitly declare \"I want this block of scripts concatenated\" in their HTML?\n. Ah that's a good point. I guess for that case, you could have a comment to split blocks up:\nhtml\n  <script src=\"one.js\"></script>\n  <script src=\"two.js\"></script>\n  <!-- noconcat -->\n  <script src=\"three.js\"></script>\n  <script src=\"four.js\"></script>\n</body>\n</html>\nIe, so one and two would be concat'd, and so would three and four. This means the most common use case (\"concat all my adjacent scripts\") works automatically without any comments, but it's still possible to control it manually if necessary.\n. Looks like the issue is the plugin is called gulp-ruby-sass not gulp-sass. Try changing https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.js#L12 to .pipe($.rubySass({?\n. Oh and I think you'll need to tell gulp-load-plugins to camelize it:\njavascript\n// Load plugins\nvar $ = require('gulp-load-plugins')({camelize: true});\n. What does this do exactly?\n. Sorry I see now it's basically like grunt-bower-install.\n. @JosefJezek if you're still interested, try the new Less recipe and let me know if you find any problems\n. that was it :+1: \n. You want .md files in the repo at /docs/recipes/ (like gulp)?\nOr would it be better to enable the wiki for this repo and set up a section in there?\n. Added a CoffeeScript recipe to start this off (#119)\n. The Jade and Handlebars recipes are both about templates, but are for completely different use cases... Serverside vs clientside, basically. Should we clarify this in the titles/links?\n. Actually I just checked and it looks like that is the current behaviour... I don't know when that changed :)\nBut I still think it would be a conceptual improvement to only run the jshint task on build.\nI think Yeoman's 'recommendation' for linting should be:\n- run jshint on everything as part of build, and block the build if any errors are found, to ensure only clean code makes it to production\n- use inline highlighting of jshint errors in your editor (to train you to write clean code, and to alert you to errors as you type)\nIf you do both these things, then running jshint on watch events (even just reporting) is redundant. It's just a less useful version of jshint error highlighting. It also feels a bit heavy-handed (linting all your files every time a single one changes).\nBut I can see that it has value for people who don't use an inline linting plugin. If you want to keep it to support that case, then ok. I'm happy to continue just commenting out the relevant lines in my own projects if you think it's worth keeping in the generator.\n. Out of the box, .tmp is just for serving generated .css files, so I can see why people think it feels like a hack... But lots of people add other preprocessing tasks to a webapp workflow, like coffeescript and template compilation, and .tmp is needed for those too. When you consider all the uses, it feels more legitimate. I vote keep it.\n. that look ok?\n. found some more absolute links, edited\n. @jcsrb - I'm suggesting running clean only once at the beginning of the serve/watch sequence, before the servers start - there's no live reload issue\n@silvenon - It doesn't work as a dep of watch because you'd have a race condition. The clean task needs to be finished before the styles task starts. I think it should work fine as a dep of the connect task.\n. No, it doesn't work after all. I'm sure it worked last night, but I just tried it with a fresh project to be sure, and adding clean as a dep of connect breaks both serve and watch for some reason I haven't completely worked out yet...\nMy initial experiments suggest we'd need an extra intermediary task to force the dependency tree into the right shape. Or use run-sequence. Or wait till gulp 4 (anyone know what's going on with that btw?).\n. What if gulp-size could be made to stat the src files when called with { read: false }?\n. To summarise the problem: we want to answer the question, \"How big is the dist I just built?\" (with a file-by-file breakdown, and a total, gzipped). And the nicest way to present this info is in one block of consecutive lines at or near the end of the terminal output for $ gulp build. This PR does meet that requirement. But the approach feels wrong because those files will have only just been written to disk by the other tasks like html and images, which could easily have read the sizes from the buffers in memory. We shouldn't have to read them off disk again to check. But there's no DRY, non-hacky way (without breaking the rules of gulp plugin authoring) for us to collate all that size info from various tasks and print it in one report at the end.\nSo can I suggest we move on with one of the following options:\n1. Just remove gulp-size entirely for now, until there is a satisfactory way to do it. It is not serving a useful purpose in the way it's currently set up, because it only tells you about filesizes you shouldn't be worrying about. So just remove it.\n2. Use gulp-size only in the html pipeline. This way, we at least report the HTML, CSS and JS sizes. (But if we do this, we should omit the total: true, as it would be misleading not to include images in any \"total\".)\n3. Merge this PR, accepting that it's not perfect in principle, but that in this instance it's worth doing a bit of extra IO just to get a nice readable filesize report. In reality it probably adds only tens of milliseconds to the build sequence (and it doesn't add any time to any watch-triggered task, where milliseconds really do count).\nPersonally I'd be happy with any of these options.\n. I'll do some more at some point... which requests for new features do you get most often (that would work as recipes)?\n. it's not harmful (it only runs the connect task once, because of how gulp resolves dependency trees) but yeah it's unnecessary to have it as a dependency of 'watch', since that's already implicit from it being a dep of 'serve' which is a dep of 'watch'\n. This is a small issue but I think this should get fixed, can you reopen it?\n. @sindresorhus\nOn Wednesday, 14 May 2014, Thanik Bhongbhibhat\nnotifications@github.com\u0002amp\u0003#106;\u0002amp\u0003#97;\u0002amp\u0003#118;\u0002amp\u0003#97;\u0002amp\u0003#115;\u0002amp\u0003#99;\u0002amp\u0003#114;\u0002amp\u0003#105;\u0002amp\u0003#112;\u0002amp\u0003#116;\u0002amp\u0003#58;\u0002amp\u0003#95;\u0002amp\u0003#101;\u0002amp\u0003#40;\u0002amp\u0003#37;\u0002amp\u0003#55;\u0002amp\u0003#66;\u0002amp\u0003#37;\u0002amp\u0003#55;\u0002amp\u0003#68;\u0002amp\u0003#44;\u0002amp\u0003#39;\u0002amp\u0003#99;\u0002amp\u0003#118;\u0002amp\u0003#109;\u0002amp\u0003#108;\u0002amp\u0003#39;\u0002amp\u0003#44;\u0002amp\u0003#39;\u0002amp\u0003#110;\u0002amp\u0003#111;\u0002amp\u0003#116;\u0002amp\u0003#105;\u0002amp\u0003#102;\u0002amp\u0003#105;\u0002amp\u0003#99;\u0002amp\u0003#97;\u0002amp\u0003#116;\u0002amp\u0003#105;\u0002amp\u0003#111;\u0002amp\u0003#110;\u0002amp\u0003#115;\u0002amp\u0003#64;\u0002amp\u0003#103;\u0002amp\u0003#105;\u0002amp\u0003#116;\u0002amp\u0003#104;\u0002amp\u0003#117;\u0002amp\u0003#98;\u0002amp\u0003#46;\u0002amp\u0003#99;\u0002amp\u0003#111;\u0002amp\u0003#109;\u0002amp\u0003#39;\u0002amp\u0003#41;\u0002amp\u0003#59;\nwrote:\n\nI can submit a pull request for this one in a few minutes, @callumlockehttps://github.com/callumlocke\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/128#issuecomment-43124005\n.\n\n\nSent from Gmail Mobile\n. Haven't tried following it but looks great\n. Not till tonight. In the meantime could you add line comments if any issues with the text, and I'll sort it all out later\n. - resolved conflict\n- also did some tweaks to the gh-pages and jade recipes - let me know if these need discussion, in which case i'll revert that commit and do it as a separate PR\n. ok done\n. I'm glad everyone has got on board with these. The gh-pages and revving ones are great. Recipes are the most valuable form of docs for a generator, imo. And having several of them shows off how flexible this generator is.\n. :+1: nice\n. the reality is loads of people have a global bowerrc, but it's frustrating because it's almost certainly an accident (ie, at some point they accidentally ran a generator directly in their home dir, and didn't clean up afterwards).\nthere are valid uses for a global bowerrc (eg, setting an alternative registry search url) but globally setting the relative components path for each of your projects is not one of them.\nthat's why it feels broken. but I don't see a better solution.\n. yeah that's pretty much it, but it's always nice to have a recipe, just to reassure you that that is all it is :)\nI'll do one at some point but won't leave this issue open\n. I started using a different approach, and it works well for me... I wrote a module that automatically detects script/stylesheet blocks, without using build/endbuild comments. Things get concatenated automatically if they are next to each other. (It's easy to detect blocks of adjacent, local script/stylesheet tags.)\nAm I missing some good reason why we should require people to explicitly declare \"I want this block of scripts concatenated\" in their HTML?\n. Ah that's a good point. I guess for that case, you could have a comment to split blocks up:\nhtml\n  <script src=\"one.js\"></script>\n  <script src=\"two.js\"></script>\n  <!-- noconcat -->\n  <script src=\"three.js\"></script>\n  <script src=\"four.js\"></script>\n</body>\n</html>\nIe, so one and two would be concat'd, and so would three and four. This means the most common use case (\"concat all my adjacent scripts\") works automatically without any comments, but it's still possible to control it manually if necessary.\n. Looks like the issue is the plugin is called gulp-ruby-sass not gulp-sass. Try changing https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.js#L12 to .pipe($.rubySass({?\n. Oh and I think you'll need to tell gulp-load-plugins to camelize it:\njavascript\n// Load plugins\nvar $ = require('gulp-load-plugins')({camelize: true});\n. What does this do exactly?\n. Sorry I see now it's basically like grunt-bower-install.\n. @JosefJezek if you're still interested, try the new Less recipe and let me know if you find any problems\n. that was it :+1: \n. You want .md files in the repo at /docs/recipes/ (like gulp)?\nOr would it be better to enable the wiki for this repo and set up a section in there?\n. Added a CoffeeScript recipe to start this off (#119)\n. The Jade and Handlebars recipes are both about templates, but are for completely different use cases... Serverside vs clientside, basically. Should we clarify this in the titles/links?\n. Actually I just checked and it looks like that is the current behaviour... I don't know when that changed :)\nBut I still think it would be a conceptual improvement to only run the jshint task on build.\nI think Yeoman's 'recommendation' for linting should be:\n- run jshint on everything as part of build, and block the build if any errors are found, to ensure only clean code makes it to production\n- use inline highlighting of jshint errors in your editor (to train you to write clean code, and to alert you to errors as you type)\nIf you do both these things, then running jshint on watch events (even just reporting) is redundant. It's just a less useful version of jshint error highlighting. It also feels a bit heavy-handed (linting all your files every time a single one changes).\nBut I can see that it has value for people who don't use an inline linting plugin. If you want to keep it to support that case, then ok. I'm happy to continue just commenting out the relevant lines in my own projects if you think it's worth keeping in the generator.\n. Out of the box, .tmp is just for serving generated .css files, so I can see why people think it feels like a hack... But lots of people add other preprocessing tasks to a webapp workflow, like coffeescript and template compilation, and .tmp is needed for those too. When you consider all the uses, it feels more legitimate. I vote keep it.\n. that look ok?\n. found some more absolute links, edited\n. @jcsrb - I'm suggesting running clean only once at the beginning of the serve/watch sequence, before the servers start - there's no live reload issue\n@silvenon - It doesn't work as a dep of watch because you'd have a race condition. The clean task needs to be finished before the styles task starts. I think it should work fine as a dep of the connect task.\n. No, it doesn't work after all. I'm sure it worked last night, but I just tried it with a fresh project to be sure, and adding clean as a dep of connect breaks both serve and watch for some reason I haven't completely worked out yet...\nMy initial experiments suggest we'd need an extra intermediary task to force the dependency tree into the right shape. Or use run-sequence. Or wait till gulp 4 (anyone know what's going on with that btw?).\n. What if gulp-size could be made to stat the src files when called with { read: false }?\n. To summarise the problem: we want to answer the question, \"How big is the dist I just built?\" (with a file-by-file breakdown, and a total, gzipped). And the nicest way to present this info is in one block of consecutive lines at or near the end of the terminal output for $ gulp build. This PR does meet that requirement. But the approach feels wrong because those files will have only just been written to disk by the other tasks like html and images, which could easily have read the sizes from the buffers in memory. We shouldn't have to read them off disk again to check. But there's no DRY, non-hacky way (without breaking the rules of gulp plugin authoring) for us to collate all that size info from various tasks and print it in one report at the end.\nSo can I suggest we move on with one of the following options:\n1. Just remove gulp-size entirely for now, until there is a satisfactory way to do it. It is not serving a useful purpose in the way it's currently set up, because it only tells you about filesizes you shouldn't be worrying about. So just remove it.\n2. Use gulp-size only in the html pipeline. This way, we at least report the HTML, CSS and JS sizes. (But if we do this, we should omit the total: true, as it would be misleading not to include images in any \"total\".)\n3. Merge this PR, accepting that it's not perfect in principle, but that in this instance it's worth doing a bit of extra IO just to get a nice readable filesize report. In reality it probably adds only tens of milliseconds to the build sequence (and it doesn't add any time to any watch-triggered task, where milliseconds really do count).\nPersonally I'd be happy with any of these options.\n. I'll do some more at some point... which requests for new features do you get most often (that would work as recipes)?\n. it's not harmful (it only runs the connect task once, because of how gulp resolves dependency trees) but yeah it's unnecessary to have it as a dependency of 'watch', since that's already implicit from it being a dep of 'serve' which is a dep of 'watch'\n. This is a small issue but I think this should get fixed, can you reopen it?\n. @sindresorhus\nOn Wednesday, 14 May 2014, Thanik Bhongbhibhat\nnotifications@github.com\u0002amp\u0003#106;\u0002amp\u0003#97;\u0002amp\u0003#118;\u0002amp\u0003#97;\u0002amp\u0003#115;\u0002amp\u0003#99;\u0002amp\u0003#114;\u0002amp\u0003#105;\u0002amp\u0003#112;\u0002amp\u0003#116;\u0002amp\u0003#58;\u0002amp\u0003#95;\u0002amp\u0003#101;\u0002amp\u0003#40;\u0002amp\u0003#37;\u0002amp\u0003#55;\u0002amp\u0003#66;\u0002amp\u0003#37;\u0002amp\u0003#55;\u0002amp\u0003#68;\u0002amp\u0003#44;\u0002amp\u0003#39;\u0002amp\u0003#99;\u0002amp\u0003#118;\u0002amp\u0003#109;\u0002amp\u0003#108;\u0002amp\u0003#39;\u0002amp\u0003#44;\u0002amp\u0003#39;\u0002amp\u0003#110;\u0002amp\u0003#111;\u0002amp\u0003#116;\u0002amp\u0003#105;\u0002amp\u0003#102;\u0002amp\u0003#105;\u0002amp\u0003#99;\u0002amp\u0003#97;\u0002amp\u0003#116;\u0002amp\u0003#105;\u0002amp\u0003#111;\u0002amp\u0003#110;\u0002amp\u0003#115;\u0002amp\u0003#64;\u0002amp\u0003#103;\u0002amp\u0003#105;\u0002amp\u0003#116;\u0002amp\u0003#104;\u0002amp\u0003#117;\u0002amp\u0003#98;\u0002amp\u0003#46;\u0002amp\u0003#99;\u0002amp\u0003#111;\u0002amp\u0003#109;\u0002amp\u0003#39;\u0002amp\u0003#41;\u0002amp\u0003#59;\nwrote:\n\nI can submit a pull request for this one in a few minutes, @callumlockehttps://github.com/callumlocke\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/128#issuecomment-43124005\n.\n\n\nSent from Gmail Mobile\n. Haven't tried following it but looks great\n. Not till tonight. In the meantime could you add line comments if any issues with the text, and I'll sort it all out later\n. - resolved conflict\n- also did some tweaks to the gh-pages and jade recipes - let me know if these need discussion, in which case i'll revert that commit and do it as a separate PR\n. ok done\n. I'm glad everyone has got on board with these. The gh-pages and revving ones are great. Recipes are the most valuable form of docs for a generator, imo. And having several of them shows off how flexible this generator is.\n. :+1: nice\n. the reality is loads of people have a global bowerrc, but it's frustrating because it's almost certainly an accident (ie, at some point they accidentally ran a generator directly in their home dir, and didn't clean up afterwards).\nthere are valid uses for a global bowerrc (eg, setting an alternative registry search url) but globally setting the relative components path for each of your projects is not one of them.\nthat's why it feels broken. but I don't see a better solution.\n. yeah that's pretty much it, but it's always nice to have a recipe, just to reassure you that that is all it is :)\nI'll do one at some point but won't leave this issue open\n. ",
    "silvenon": "I don't know if this issue is relevant anymore, but is there a way to use gulp-rev with gulp-useref?\n. There was a discussion about this in jonkemp/gulp-useref#10. The conclusion was that gulp-useref and gulp-rev cannot be combined, the only way for referencing revved files to work is that gulp-useref itself implements the revving functionality, which is outside the scope of that plugin. :confused:\n. @ahmadalfy are you up for a PR? Otherwise I'll add this when I find time.. Ruby Sass is slow, Compass makes things much slower. I don't think it's worth it, people should stop writing their Sass libs to be dependent on Compass, that sucks for people who don't use it. Other tools are starting to replace Compass features, like Autoprefixer, image spriting tools etc. That's the way they should be, separate tools, not one giant mass.\n. @Snugug I completely agree that libsass shouldn't be the default yet, and probably not for a long while. I was talking about adding Compass to this project. Yeah, I also agree about the plugins, I didn't think about it in terms of distribution.\nnode-sass has a section about the differences, it's not specific, but it's a nice summary.\n. I agree. I'll submit a PR when I find time, feel free to beat me to it :D\n. This seems like the right way to go. I don't know why were the files output in the app directory in the first place.\n. Also, you might want to add .tmp to the clean task.\n. Now the connect task changed. I think you only need to add .use(connect.static('.tmp')).\n. This was talked about in #18, feature-wise libsass is not close enough to Ruby sass for us to just replace Ruby sass. We could offer it as an option, like in generator-webapp.\n. In 1.2.1 BrowserSync added routes (shakyShane/browser-sync#197), so we should be able to continue avoiding it :)\n. I think setting basedir to ['app', '.tmp'] and  routes to '/bower_components': 'bower_components'.\n. @shakyShane you know a thing or two about BrowserSync, right? :) Isn't routing supposed to work from the current directory, not basedir?\n. The PR is correct, SCSS files are getting compiled to the same directory. #47 is correcting that, because it's weird :D\nThis is a good way to go because you don't want CSS injected when the SCSS is modified (common mistake), you want it injected when SCSS is compiled.\n. The reason why I wanted to leave the Sass ignorePath to ../bower_components/ was because the code is a bit prettier and it's easier to @import new stylesheets from components, e.g. I don't import the whole Bootstrap, just parts that I use, but the paths get quite long and unreadable:\n``` scss\n$icon-font-path: \"/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/\";\n// Core variables and mixins\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/variables\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/mixins\";\n// Reset\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/normalize\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/print\";\n// Core CSS\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/scaffolding\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/type\";\n// ...\n```\nAside from my preferences, leaving the ignorePath makes sense for Sass because its loadPath is set to app/bower_components. If you're going to remove ignorePath, you can remove loadPath as well, for consistency.\nWhat do you think?\n. Yes, you're right. It's best to be obvious, users who prefer it the other way can easily add a loadPath.\nRemoving the loadPath won't break anything.\n. The fonts task seems to be unfinished, I'll fix that soon.\n. Append overrides to your bower.json:\njs\n{\n  \"name\": \"webapp\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass\": \"twbs/bootstrap-sass#~3.1.0\",\n    \"modernizr\": \"~2.6.2\",\n    \"jquery\": \"~1.11.0\",\n    \"fontawesome\": \"~4.0.3\"\n  },\n  \"devDependencies\": {},\n  \"overrides\": {\n      \"fontawesome\": {\n          \"main\": [\n              \"css/font-awesome.css\",\n              \"fonts/fontawesome-webfont.eot\",\n              \"fonts/fontawesome-webfont.woff\",\n              \"fonts/fontawesome-webfont.ttf\",\n              \"fonts/fontawesome-webfont.svg\"\n          ]\n      }\n  }\n}\nthen run gulp wiredep and it should work ;)\n. Actually, fonts/* works, so you don't have to specify each one.\n. It should work in development because it should get fonts from bower_components/fontawesome/fonts, you don't need it in the app folder. Can you show me your directory structure and your gulpfile.js? Why would you want to put fontawesome in devDependencies?\n. Does it work then?\n. Yeah, I accidentally noticed it in wiredep's README :smiley: \n. Just when you were beginning to like me, huh? :smiley: \n. Fair enough. Luckily, Gulp is so simple that implementing CS takes 20 seconds, unlike Grunt.\n. No problem :) This also fixes #41 and #15.\nBtw, 0 PRs :beers: \n. Hell yeah! Though Modernizr will be the party-pooper, it seems.\n. You take BrowserSync, I'll take fonts. (Not very fair to you, but BrowserSync is too fancy for me to grasp quickly.)\n. So :arrows_counterclockwise: is a :tada::poop:!\n. A quick fix:\n``` js\ngulp.task('fonts', function () {\n    gulp.src('app/bower_components/bootstrap-sass/vendor/assets/fonts/bootstrap/*')\n        .pipe(gulp.dest('dist/bower_components/bootstrap-sass/vendor/assets/fonts/bootstrap'));\nreturn $.bowerFiles()\n    .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest('dist/fonts'))\n    .pipe($.size());\n\n});\n```\nBut I suck at Gulp, so I would appreciate if someone could help me structure this, with as few hardcoded paths as possible.\n. Waiting for new bootstrap-sass release, it's going to have some interesting changes, e.g. twbs/bootstrap-sass@328973b548f466e2106972fe910ce67d75de63cf.\n. Yeah. (Not closing this though, it's a bug.)\n. Maybe it has something to do with their bower.json update, but that's not released yet, even if it was, I'm pretty sure it wouldn't work right out of the box...\n. Yes I am. This is tricky business, because development and production are mutually exclusive. Glyphicons do get copied over to dist/fonts/, but the icon path doesn't work. And when I update the path to work in production, it won't work in development.\nThe only way I can see this get solved is that fonts are copied on gulp watch to app/fonts, then copy them to dist/fonts. This way the font path can stay the same.\nIf anyone's got a better idea...\n. That's a pretty sweet fix. Care to submit a PR?\n. I agree that this is not the ideal solution and I'm totally open for suggestions. I think we're already breaking paths by merging stylesheets together, so I don't see how not flattening the paths will help, as our font paths should be ../bower_components/path/to/font, which is not the original path. Could you elaborate?\n. Yes, you're right. I wanted to make Glyphicons work, at least. Though I think Glyphicons and FontAwesome are the most popular fonts installed via Bower. FontAwesome is implementable without any hacks, so I guess we're not so bad off.\n. Yeah, we haven't found a sexy alternative yet.\n. :+1: \n. font-color property doesn't exist :smiley: What options did you select when you ran yo gulp-webapp? I selected all of them and it works fine. The changes were definitely for the better, so I'm pretty sure they didn't cause the problem.\n. Hm, it works when I try it. Did you try linking to master?\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nNow your yo gulp-webapp will use the latest features :)\nMy advice for using generators is to always link them that way, because you're using them locally anyway, you're not adding them as a dependency so there's no risk. After linking you can just cd generator-gulp-webapp and git pull origin master to get the latest changes (no need to link again).\n. Like @levito says, the fact that we were watching .scss files instead of .css is definitely the origin of this issue. The only thing we have to do now is wait for @KingScooty to confirm.\nBy the way, @addyosmani, it occurred to me that we're closing issues before the fixes are published, is that a good idea?\n. I don't think it's a connect-livereload issue, it works fine when I try. Are you sure npm registry or your internet connection wasn't down? The reason I suspect that is because it's the first request it was making.\n. Thanks. Very strange, I'll check it out...\n. I don't really know how to test this (obviously I need to level-up my nodefu), but it appears this issue came up multiple times and the solution was to update npm. Since this is not the case here, I hope someone smarter than me can help :smiley: \n. @KingScooty has this got magically resolved in the meantime? :sparkles: \n. Creating a sub-generator seems like an overkill just to get a single file. What I would do in your situation is just copy the gulpfile.js over from my last project. Fortunately, gulpfiles take only a few minutes to adjust, unlike Gruntfiles :grin:\n. Yes, that would be cool :) I would like it to say only \"Sass\", because you get Autoprefixer regardless of whether you choose Sass or not. @addyosmani, @sindresorhus?\n. It appears Bower is a bit quirky when it comes to using repositories. I fixed it in my PR by using the official package, this is what you should do:\nbower uninstall --save bootstrap-sass\nbower install --save bootstrap-sass-official#3.1.1\nNow you need to update all occurrences of bootstrap-sass to bootstrap-sass-official.\nIn your gulpfile.js:\njs\nexclude: ['bootstrap-sass-official']\nIn your app/index.html:\nhtml\n<script src=\"bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js\"></script>\n<script src=\"bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js\"></script>\n<!-- etc. -->\nIn your app/styles/main.scss:\nscss\n$icon-font-path: \"/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/\";\nNow run gulp wiredep, then try gulp watch again.\n. It is due to Bootstrap's new bower.json, either do what @vohof said or downgrade Bootstrap to 3.1.0.\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official, run gulp wiredep and it should work. Let me know if it doesn't.\n. Thanks, this has (hopefully) been solved with #84. This happened because Bower for some reason used Bootstrap's master instead of 3.1.1 (as specified in bower.json). This new Bootstrap's Bower changes are unstable at the moment.\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official and it should work and run gulp wiredep. Let me know if it doesn't.\n. Is this still an issue @shakyShane?\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official and it should work. Let me know if it doesn't.\n. By the looks of the error it seems that you didn't run gulp wiredep after updating Bootstrap, which I forgot to mention, my bad.\n. We're using wiredep for this.\n. The only question now is what to do about JS files, which are now specified individually. Should people ignore JS files in gulpfile.js or comment them in index.html?\n. I don't think there's much difference in those two approaches, so I think it's best not to change anything and close this. ~3.1.1 resolves to 3.1.1+2, so everyone who had this issue before just need to run bower update bootstrap-sass-official and it will just work.\n. Thanks. This definitely needs some cleanup. I think the simplest way is to put only bootstrap.scss, all those other stuff are unnecessary. But I'm totally open to suggestions here, maybe we can use this new structure to our benefit somehow...\n. Sorry, I forgot. I updated my first post.\n. streamqueue merges those two sources together.\n. @addyosmani @passy @sindresorhus thoughts?\n. One inconvenience that's really bugging me with the current setup is that I often want to do tree app, but then I have to do tree app -I *bower_components all the time. (I'm probably using that argument wrong again.) Though I'm aware that it's a shitty argument, I just have to figure out a way to ignore this via a *rc file of some sort.\nOne direct benefit of this would be that bower_components wouldn't be copied over with an app/* pattern. (018bdbdf44f8a0413c6bcf2ea1d9e7099b34378b) Maybe there's another solution for that without explicitly ignoring it.\n. Cool idea. :+1: \n. Whew! Thanks :smiley: \n. I'm posting this only because it's dead simple.\nbower install --save bourbon\ngulp wiredep\nVoila.\n. I don't recall that generator-gulp-webapp specifies the Sass version, where did you get this from?\n. Doesn't this test if the generated files are correct?\n. That's a good idea! I would love to help, but JS testing is still on my shame list :disappointed:\n. Which parts of the gulpfile did you find hard to understand?\n. - LiveReload requires the browser extension. (I should add a comment about it.)\n- I don't know how ExpressJS works, but I'll definitely check it out because I hear so much about it.\n- Well, assuming you're familiar with how Gulp works in general, they should be pretty self-explanatory, for example:\njs\n// Sass + Autoprefixer\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n            style: 'expanded'\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe(gulp.dest('.tmp/styles'))\n        .pipe($.size());\n});\njs\n// JSHinting\ngulp.task('scripts', function () {\n    return gulp.src('app/scripts/**/*.js')\n        .pipe($.jshint())\n        .pipe($.jshint.reporter(require('jshint-stylish')))\n        .pipe($.size());\n});\njs\n// Runs tasks \"html\", \"images\", \"fonts\" and \"extras\" (asynchronously)\ngulp.task('build', ['html', 'images', 'fonts', 'extras']);\njs\n// First runs the tasks \"connect\" and \"styles\", then opens your browser with the specified URL\ngulp.task('serve', ['connect', 'styles'], function () {\n    require('opn')('http://localhost:9000');\n});\nThis generator doesn't do anything too fancy on its own, it's best to check out each plugin that you don't understand. For example, html task may be a bit difficult to understand, so you should go to gulp-useref to check out how it works.\n. Also, you can run gulp --tasks to see which tasks are available.\n. Do you still have trouble understanding the gulpfile? Can this be closed?\n. Hello! I'm having a hard time reading npm-debug.logs :smiley: Could you paste the output out of the terminal itself?\n- Which options did you select when you ran yo gulp-webapp?\n- What OS are you using?\n- How did you install node & npm?\n- What do you mean that any command line input yields a node error? Could you paste an example?\n. Looking at your npm version being two patch versions behind, I think you installed node & npm via Homebrew before their important update where brew install node installs node and npm separately, so that you can update npm with npm update -g npm. I'm not positive that this is the issue here, but reinstalling node & npm is certainly something you will want to do to avoid other problems.\nThis is an interesting line which might be the reason this is happening:\n[?] May bower anonymously report usage statistics to improve the tool over time? (Y/n)\nThis is the question that you get asked usually when you install Bower. Do you have it installed? Have you tried typing Y or n instead of the arrow keys?\nBtw, the error that I saw in your gist is the same one I'm having, I don't think it's related to the issue, because I were able to use the app normally regardless of the error.\n. Bower's home page clearly states that it should be installed globally, you must have missed it. You had it installed locally before? Where? I'm very curious how this happened instead of displaying an error that bower command doesn't exist...\n. The quick solution would be:\ndiff\ngulp.watch([\n      'app/index.html',\n      'app/views/**/*.html',\n-     'app/styles/**/*.scss',\n+     'app/styles/**/*.css',\n      'app/scripts/**/*.js',\n      'app/images/**/*'\n    ]\nBut things have changed, I suggest taking a look some time soon and maybe starting with a fresh build.\n. @dmackerman have you managed to get this fixed?\n. Cool, then you can close the issue :smiley: (I can't because I'm not a collaborator.)\n. Yeah, I tripped over that one also :confused: You can translate \"EADDRINUSE\" to \"error, address in use\" :smiley: \n. Workaround:\n``` html\n build:css styles/app.css \n all stylesheets, vendor's and user's \n endbuild \n ... \n build:js scripts/app.js \n all javascripts, vendor's and user's \n endbuild \n```\nThis also means less HTTP requests. Not sure why we're not doing this already.\n. This is no longer the case, vendor.css is not created if there are no files to build.\n. Yeah, I totally agree, I hate switching to 2 spaces every time. But I'm not sure how you can dynamically create files with specified indentation and still format it the way you want...\n. Yeah, you're right, it sounds very simple. If you find a way and time to do this, feel free to submit a PR :smiley: \n. Great idea! In which format do we write this? As instructions on what to change with the current version?\n. In the clean task add !dist/.git to the array:\njs\nreturn gulp.src(['.tmp', 'dist', '!dist/.git'], { read: false }).pipe($.clean());\nI think that should work. If want to make a PR, you can just click the edit button in app/templates/gulpfile.js right here on GitHub and commit that change, once you made sure it works.\n. We have to serve preprocessed files from somewhere. Even Rails has a tmp folder.\n. The .tmp folder was first introduced in #73, there wasn't any real discussion about it.\n. Actually, there is #41, which explains the need of the .tmp folder.\n. This topic doesn't seem to be on fire. Should we close and reopen later if/when a viable solution comes along?\n. I just saw a discussion about this, it seems to be making progress, so we're keeping this open.\n. Yeah, though it would be cool if this is somehow standardized.\n. Ideally .tmp folder should be out of your way, so you don't really know that you're using it. But I don't mind using it explicitly that much, it just feels a bit dirty. I don't have actual suggestion, though.\n. :clap: \n. What is gulp-intermediate?\n. Oh, I thought it has something to do with this. Then I'm closing this as it's not really an issue.\n. :+1: :coffee: \n. I tried, but didn't manage to get it working. How about Karma?\n. @sindresorhus Which one do you use? I had bad experience with Mocha also, so I switched to Jasmine + Karma. I can implement that combo if that works for you guys.\n. What do you guys think about this kind of setup for testing with PhantomJS & Mocha? Users would be able to easily switch browsers or use external services like Sauce Labs, Browerstack etc. Or is it a tad too opinionated?\n. WebdriverIO is a great Nodey way to test, so that's probably the right way to go. I'm already quite experienced with it, I'm just waiting for it to release a public API for plugins.\n. I can do the tutorial if nobody started already.\n. Whoops, forgot about this. Should this be in the README.md?\n. Actually, I don't know how to write this without it ending up as a Gulp tutorial. The best way to learn how the generator works is to read the code and tinker with it. If someone doesn't want to know how it works, he doesn't have to.\nSorry :smiley: \n. I changed my mind in the meantime, there is something to write about.\n. Sure! :+1: \n. Sorry, I'm having a really hard time finding free time (I'm sure I'm the only person in the world). Could someone else do this?\nLanding page is on the way, I'm pretty much waiting for GitHub Pages to update Jekyll to 2.x.\n. :tada: :balloon: :confetti_ball:\n. Yeah, I only have to clean occasionally. In that case, just do gulp clean, then gulp watch. Can someone shed some light on whether the tasks that you specify as dependencies of another task run asynchronously? I remember once adding clean as a dependency of watch and it didn't work.\n. I'm down with that, I think clean should always run before watch. @sindresorhus @addyosmani @passy?\n. @callumlocke PR away! :+1: \n. It's awesome of you that you tried with a fresh project, that's the safest way to test. Yeah, my take is that they run asynchronously, I haven't figured it out yet, Gulp is a bit vague about that in their docs.\n. I tried making this work, but it's hard to wire it that way, because Gulp runs tasks asynchronously. Even if I manage to do it, the task dependencies won't make sense.\nOther than that, I very rarely need this, and when I do I just run gulp clean, so I vote :-1: on this.\n. Sure.\n. :three: it is, thanks! :+1: \n. Awesome! :+1:\n. I'M WRITING IT AS WE SPEAK.\n. Obama?\n. Maybe I was too dumb to get it, we shall never know.\n. @codeofsumit can you open an issue?\n. I joined the lines and fixed the conflict.\n. Resolved the inline comments. Also, I decided to call them CSS and JS instead of styles and scripts.\n. :heart: \nThis recipe is actually something I would like to suggest for a future version of this generator, once I figure out how to rev the rest of the assets :smiley: \n. :+1: \n. That's a good question. IMO that line should be removed.\n. :+1: \n. Should this cache clearing be done in the images task then?\n. Yeah, that means the caching doesn't work well, right?\n. If the caching doesn't work, then there's an issue with gulp-cache and you should file it there. In the meantime you can either disable caching for images or add the clearcache task.\n. HTML5 UP is out of the question, we have to build it with this generator :smiley: \nIf someone decided they want to play with it a bit, where would that certain person host the landing page? Using gh-pages branch? If yes, how exactly? I'm, uh, asking for a friend :wink: \n. Ok, Jekyll it is.\n. But... Sass... Ok, we can just leave the source files in there, they won't hurt anybody.\n. Ok, I'll do my best.\n. Yeah, that's why I wanted to use it. I feel like it's the easiest way to use Sass and other goodness without having to do any build setup.\n. Here's the initial version. Anyone knows a better development strategy than this? I would prefer if we could silently iterate, but GitHub ruthlessly publishes everything on gh-pages branch, I can't disable it.\n. Fixed. @sindresorhus I'm not really sure how to use 5minfork in this situation. How do you generally avoid that issue when forking someone's gh-pages branch, do you rename it?\nIt's kinda ordinary so far, I'll make it more interesting.\n. I'm using Jekyll, that's what I meant. I just don't want GitHub to host it under my username as well as under Yeoman's.\n. I guess it doesn't, I'm just obsessed.\nUpdate:\n- removed Yeoman character from instructions, because I didn't display the output of other commands as well, so it felt inconsistent\n- used the Yeoman character as a title, is it too much?\n- added some logos from features we have\n. Yeah, I know, I didn't want to spend time on responsive optimizations until I'm sure I want to have those components. For example, I decided to drop the ASCII Yeoman as a title, unless someone has a strong affection for it.\nI'll add some animations, but I'll roll my own, most animations on Animate.css are unbearable :D\n. :laughing:\nUpdate:\n- put ASCII Yeoman out of his misery\n- added fancy hover animations on logos\n- optimized logo images and make their layout responsive\nMay I deploy?\n. I intentionally positioned the logo that way because it's in that exact position on http://yeoman.io, which makes it pretty cool when you click on it.\nUpdate:\n- added OG <meta> tags\n- added a Yeoman character in the intro, this time floated on the right, I think it looks good this way, but on mobile I removed it because it's taking too much vertical space\n- reduced spacing between headings, now it should look less disconnected\n- http://yeoman.github.io/generator-gulp-webapp/\nWhat do I need to do to get http://yeoman.io/generator-gulp-webapp?\nFeel free to give further suggestions about the design, I'll be happy to improve.\n. I agree, I'll update tomorrow.\n\nI think the yeoman.io repo needs to be renamed to yeoman.github.io and put on the master branch for that to work. It's in the GitHub Pages docs. Alternatively have the site in the yeoman.io repo.\n\nI like the first option :grin:\n. You know what, I'll just use a different Yeoman character.\n\nUpdate:\n- blueprint Yeoman character instead of packages version (I like this one better, because it's feature-agnostic)\n- nudge the Yeoman logo on mobile, like @sindresorhus suggested\n- favicon\n. Right, but it isn't deployed yet, because first we need to rename yeoman.io to yeoman.github.io. I left this open so it bugs me to finish it, but apparently I forgot about it anyway :smiley: \n. On second thought, I'll close this. Really no need to keep it open.\n. Yeah, you can see the landing page here. We can either point people to this URL or try to create a yeoman.io URL, which is complicated. If we really want the latter, then I would rather open an issue on yeoman/yeoman.io, because that is an issue common to all other yeoman projects.\n. Awesome, thanks :+1:\nI'll merge this once we get at least some of the other conflicting PRs merged in (which should be soon). Then you'll have to update this and we're all set :smiley: \n. You can rebase now :smiley: \n. Double checked, looks good. Thanks a lot! :+1: \n. I would like to have this kind of feature, because the user will almost always want more than one page, but I guess Jade is too opinionated, I personally don't have a strong preference on a templating engline, unlike with Sass.\n. Yes, I've written it, but it takes time to execute.\n. Thanks, that's a great idea. I may just do that.\n. I had no idea about consolidate.js, cool! I'll update the Jade tutorial at least.\n. Are you sure this is related to the Jade recipe? Does your bower_components folder contain modernizr/modernizr.js?\n. Your bower_components is in app, it should be in the project root. Either you have a .bowerrc in your project which tells Bower to install packages to app or you have a global ~/.bowerrc.\n. Sure, I'm guessing that's because the links in your index.html point to app/bower_components, which is \"correct\" in your case. But I don't think your build step is going to work if you don't move bower_components out of the app folder.\n. I think you're using an old version of the generator, which one? The recipe is written for the almost latest version.\n. What am I saying? Just update links to app/bower_components (or convert your index.html), it should work if your version of the generator is designed that way.\n. This is the most confusing part of our /bower_components setup. Using ./bower_components path in index.html will work in development because connect is serving it as a sibling to index.html, but it won't build well because useref is looking at the directory structure, which is ../bower_components. The latter path will satisfy both development and production requirements, because connect will somehow interpret ../bower_components as ./bower_components, because ../ is impossible as it is outside of the project root. I didn't really check how that happens. I should really write this down somewhere...\nThings we do for consistency.\n. I agree, fixing this in useref would be amazing. But I left this open because I wanted to document it, since it's causing a lot of confusion.\n. Confirmed. If I remember correctly, @jonkemp was working on solving this issue? We need some kind of a gist of all the discussions about imagemin and fix this once and for all :smiley: \n. Whoops, sorry, my memory fooled me. @kevva, you're the author of imagemin, any ideas?\n. Yeah, I tried it and there does seem to be an issue with gulp-cache. Not caching works fine.\n. This issue has been raised before in this PR I closed. Should we reopen and pull it?\n. Indeed it doesn't. I like the new output, thanks! :+1: \n. :+1: \n. I think I had that, but that was when my internet connection died. Do you repeatedly have this error or just sometimes?\n. This could be resolved when #54 is implemented.\n. BrowserSync wasn't implemented yet :smiley: \n. Yeah, this was changed recently in #162 for a reason unknown to me. @sindresorhus, explain yourself :smiley: \n. I was confused why gulp watch was replaced with gulp serve in the README, as gulp serve is clearly inferior and meant more as a part of gulp watch, not to be used on its own. I don't remember the last time I wanted to view my site without watching for changes. I'll update that if that's ok.\n. Oh, I had no idea that was the plan. Ok, then you make that change whenever you were planning to.\n. I'm tempted to change that in the readme, but I'll try to make gulp serve the correct command first. Sorry for the confusion.\n. Did you try using the master branch? Can you identify exactly which commit causes the issue?\n. This is a stretch, but check if there's a .yo-rc.json file anywhere in your ~/Downloads. Try ls -aR ~/Downloads | grep yo-rc, for example.\n. I'm closing this due to inactivity and because it's a very rare and specific issue almost certainly not related to this generator.\n. Thanks, that was probably it :smile: \n. Thanks for reporting this, I had no idea Gulp 3.8.x was released :) @sindresorhus is this an issue with gulp-filter and was it fixed in the meantime?\n. @xmlking does this work?\njs\ngulp.task('fonts', function () {\n  return gulp.src(require('main-bower-files')().concat('app/fonts/**/*'))\n    .pipe($.if('**/*.{eot,svg,ttf,woff}', $.flatten()))\n    .pipe(gulp.dest('dist/fonts'));\n});\n. Yeah, I know why, it was due to my wrong understanding of gulp-if.\n. @xmlking is this issue still active?\n. Closed due to inactivity and nobody else reporting a similar issue.\n. This PR needs to be reconsidered because BrowserSync doesn't seem like it will be implemented very soon and the connect task fails on the master branch (at least for me). May I update it, then it can be replaced with BrowserSync later?\n. Great :smiley: I just wanted to ensure that the master is working.\n. I think this part of the README is bit misleading, it sounds like grunt serve is previewing the build.\n. Thanks!\n. Have you tried with the master branch of the generator?\n. @Ahrengot does the issue go away with the master branch as well?\n. Do you have the latest version of yo?\n. npm cache clean? I had this issue as well, but sadly, I don't remember what I did exactly, I think it just went way after a while.\n. Yeah :) If it's been 6 months and you installed it via Homebrew on OS X, it was a good idea to reinstall it, because since then Homebrew separated Node and npm, so npm can be updated via npm update -g npm without breaking something.\nWoohoooo! Glad it works :)\n. Closing this because given solutions worked.\n. Sure, thanks :) Those are not even spaces, they are tabs.\n. No problem, close enough :)\n. :wink: \n. Thanks for the info. We're going to update to BrowserSync soonish, so hopefully there will be less issues like this.\n. Yay :)\n. Our generators rely on Bower components being installed to bower_components, which sucks (it should be configurable), so I think we should make that explicit by providing our own .bowerrc to override potential global settings and to prevent users from creating their own local ones.\nEnough users had issues with it. Even though global .bowerrcs are kinda weird, it's still possible to create one.\n. What is broken?\n. @sindresorhus I think they're pretty amazing. Look, we're talking to each other and you're from Norway, how awesome is that. But then again, you could be just a node robot, so I get what you mean.\n. This question is better suited for Stack Overflow. Have you checked out the gh-pages recipe?\n. The error message states that it's in use. Do you have another server or livereload plugin running? This happened to me until I figured out I have a livereload app running, it took me a while to figure it out the first time :P\n. You should close the LiveReload for Windows you downloaded, you only need the Chrome plugin for this generator. Did you try with the LiveReload closed?\n. Yes, it indeed doesn't make sense why it works with Grunt. You don't even need the LiveReload Chrome extension for it to work, because the livereload package injects the same (or a similar) script to your page. Without touching the LiveReload extension, when you run gulp watch and the browser tab opens, does the LiveReload work or does the error above appear?\n. I didn't notice you were running gulp serve instead of gulp watch, that was the problem all along :)\n. I'm not sure I follow. If you move $icon-font-path below the bower:scss block, Bootstrap's Glyphicons will be compiled with the default path, which is no good.\n. Nice, now I get it :smiley: Just squash your commits first, thanks.\n. gulp-sass uses libsass, which is written in C/C++, while gulp-ruby-sass uses the Ruby gem, so gulp-sass is naturally much faster. I wouldn't implement it just yet because it's not stable enough and is missing some important features, like precision, which is necessary for Bootstrap to work properly.\n. Which options did you choose when you ran yo gulp-webapp?\n. See if just replacing that bootstrap-sass with bootstrap is enough (so there aren't both of them).\n. Hm, wouldn't this prevent CSS from injecting as well? Please also try what you did initially, but with bootstrap.js instead of just bootstrap.\nSome hardcore logic stuff going on here :smiley: \n. Great, thanks!\n. Whoopsie, you're right.\n. No, I just have to find a stable/fast solution for rebasing Bootstrap's font URL. I think there is a PostCSS plugin for that, I'll take a look soon.\n. If I understood your question correctly, in development we're fetching the font from bower_components, but in production we're copying the font to dist/fonts, so we have to replace the path in the (at this point compiled) CSS to fetch it from there.\nI haven't found a PostCSS plugin that can replace URLs, like that. I only found postcss-url, which only seems to be able to rebase all URLs within a CSS file. So back to lazypipe + gulp-replace? I would also like to go back to gulp-csso, because I don't find csswring reliable anymore since it screwed up something for me (I don't remember what).\nThis is too bad, because I really wanted to replace lazypipe with postcss, but I think that will be possible later.\n. That's a good idea, we could run the task every time bower.json changes. But how would we organize this? Do we simply call the fonts task and update it to write to .tmp also?\n. Thanks @silvenon!\n. This was fixed in 7344c7baf7e228ec026fd3f2dfb2fe6513a3c191 (not yet released).\n. gulp --tasks already does something similar.\n. Also, gulp-task-listing forces a certain naming convention (task-subtask), which isn't ideal, so I'm closing this unless a good argument is provided.\n. Some stuff is still not ready in my opinion, for example tests. You can always npm link your generator-gulp-webapp to the master branch and use it right away.\n. :+1: \n. This generator is used only for initial scaffolding of the app, it's not used as a dependency so linking to master should be completely fine.\nWe could make a release now and fix tests in the next one, @sindresorhus?\n. :beers: indeed.\n. I'll apply the changes in a few days. I definitely agree about the unit tests, I'll get on it.\n. Sorry for all the pushes, I just rolled back so the discussion above isn't hidden.\n. I'll just wait for @SBoudrias to reply before I push fixes. Then it's testing time.\n. Updated according to the feedback above, thanks @SBoudrias for helping :+1: \nNow I'll start fixing tests.\n. Fixed the issues and suggestions pointed out in the comments. I also updated to 0.17.7.\n. Oh wait, I'm not checking if the testing framework is valid. Are there any other valid values except jasmine?\n. I checked if the testing framework is either mocha or jasmine by raising an error (not sure if there's a recommended way of doing this), but to me this check is unnecessary, because the generator will fail if you don't have a testing framework installed with the specified name anyway. What do you think, @SBoudrias?\n. Without specifically checking and throwing the error, the message displayed is something like \"You don't have a generator with this name installed\", which to me is reasonable. Is it?\n. I'm not ready to ship it, there are no tests and I really want to fix generator-mocha so I can use #composeWith like a boss, which would also help in the tests.\n@SBoudrias how does the conflict priority work? I think I really need it for generator-mocha because I'm overwriting bower.json.\n. This green light is too tempting. If it's ok if I fix the tests later, merge the sucker.\n. I agree, I also mostly host these apps on CDN, so I almost never use .htaccess.\n. Yeah, the caching can sometimes be too hard, so you can clear the cache when you notice that.\nI added the code tags to your second comment, so you can press the edit button to see how it can be done. You can also check out GitHub Flavored Markdown.\n. Whoops, accidentally closed. We should inspect this issue better.\n. Thanks, that's very comforting! :smiley: \n. I'm closing this because it's solved. If the solution doesn't turn out to be permanent, I'll reopen again.\n. Thanks for the detailed description of the issue. I can't reproduce it, though, does this happen with a fresh install?\n. Well, I'm not sure what the issue was, but you gave a workaround and we will soon release a new version with connect@3.x, so I think it's ok if we close this. Thanks for the report and the workaround :+1: \n. Yes, we already updated the paths accordingly on master, a new version will be released soon. You have to update the $icon-font-path and <script>s in your index.html.\n. bower_components was moved to the project root a while ago, it shouldn't be in app, please update the generator and try with a fresh install, then let us know how it goes.\n. Any updates?\n. I tested it now with master and it works. After you're done, please squash your commits.\n. By the way, the recipe is mentioning Handlebars, would you happen to know what that is about? I don't see it being used later.\n. Thanks! :+1: \n. Things get more complicated when you have templates which you use in JavaScript and templates you use for creating HTML pages (like Nunjucks?). My first guess would be to put all templates to app/templates, but a user might, for example, use Handlebars for both. My current idea is to have these:\napp/templates\napp/layouts\napp/scripts/templates\n. Good question. In my workflow I used app/includes, but that's probably bad, so I think app/templates/includes or app/templates/partials sounds good.\n. Ok, another proposition:\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 templates\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 modal.hbs\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tooltip.hbs\n    \u2514\u2500\u2500 views\n        \u251c\u2500\u2500 about.html\n        \u251c\u2500\u2500 index.html\n        \u251c\u2500\u2500 layouts\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.html\n        \u2514\u2500\u2500 partials (or includes)\n            \u251c\u2500\u2500 footer.html\n            \u2514\u2500\u2500 header.html\nviews contain web pages and templates are components that get compiled into JavaScript.\nI'm using this model in my current project and it works fine. Also partials or includes?\n. Actually:\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 templates\n    \u2502   \u251c\u2500\u2500 modal.hbs\n    \u2502   \u2514\u2500\u2500 tooltip.hbs\n    \u2514\u2500\u2500 views\n        \u2514\u2500\u2500 pages\n            \u251c\u2500\u2500 index.html\n            \u2514\u2500\u2500 about.html\n        \u251c\u2500\u2500 layouts\n        \u2502   \u2514\u2500\u2500 default.html\n        \u2514\u2500\u2500 partials (or includes)\n            \u251c\u2500\u2500 footer.html\n            \u2514\u2500\u2500 header.html\nBecause if pages are more than one level deep, we would have to ignore layouts and partials, so that's the same problem.\nThough I think app/views/pages is a bit too unreachable\u2026\n. Thanks, that sounds perfect :+1: \n. Does it work when you use // comments instead of //-? Assuming this is Jade.\n. There's no reason to be negative. gulp-plumber only prevents gulp from crashing when an error occurs, it doesn't really give you any more info, that's probably why @fbm-static was confused.\n. No problem :wink:\nI didn't know that, interesting stuff.\n. The libsass option should be implemented as a follow-up question when the user chooses Sass, like in generator-webapp. libsass is still behind Ruby Sass, as far as I know, so it's not a good idea to completely replace it.\n. You can read known issues in the current release of libsass. I would like those to be resolved before the switch, but that's just my personal preference.\n. Yep, good idea.\n. On the second thought, is it really that complicated that it needs a recipe?\n. It's not a problem for me to write it, but I think it's literally about 3 lines of code. There's also the problem of Bootstrap Sass not supporting libsass yet, because precision is not working properly in libsass yet, according to Bootstrap's README.\n. Later for sure, I'm counting seconds until we can make the switch :smiley: \n. That's what I was saying, Bootstrap doesn't seem to support it yet. As soon as it's available as an option, that's when we'll switch.\n. That's pretty sexy. Are we ready to make the switch then? @addyosmani @sindresorhus \n. @austinpray really? Which ones? Maybe if users make the switch having their own sassy deps.\n. Because the tests are old and should be updated.\nBlast, libsass still doesn't support looping through maps, which I use really often. I'll keep this open anyway, I'm sure they'll fix that in a reasonable time, we could donate.\n. @quentinrossetti could you rebase this?\n- some of the arguments are named differently\n- it doesn't support expanded output style yet\n- the latest version is 1.2.4\nHere's how it should be:\njs\nreturn gulp.src('app/styles/main.scss')\n  .pipe($.sass({\n    outputStyle: 'nested',\n    precision: 10,\n    includePaths: ['.'],\n    onError: function (err) { console.log(err); }\n  }))<% } else { %>\n. Does gulp wiredep fix it?\n. wiredep is already the part of watch task, so you shouldn't really have to call it manually, except in cases when you installed new Bower components while your watch task wasn't running. Making it a part of the build task doesn't make sense to me because you would already be missing those files while you were developing, so you would run it then.\nIf you strongly believe otherwise, I'd be happy to discuss it, but I'm closing this until there's a good reason for it.\n. It is included in bower.json, I'm not sure why it's not in your case. But even if it wouldn't be, gulp wiredep is run as part of yo gulp-webapp, so Bootstrap's dependencies should be included as well. You also shouldn't have to do bower install and npm install after yo gulp-webapp, it is run automatically, unless you pass a --skip-install option.\n. This is a different issue, the problem is that the generator doesn't install dependencies. I'm also experiencing this. We'll merge #194 soon, which will fix this.\nA dirty shortcut:\nsh\n$ git clone https://github.com/silvenon/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ git checkout -b new\n$ git pull origin new\n$ npm link\n$ cd ../test\n$ yo gulp-webapp\nConcerning tips like gulp wiredep, we'll take care of that with #121.\nLet me know if you need any more help or explanation.\n. It's merged, you can try installing from master again.\n. Does something break if you update all of them?\n. I think the most formal way is to check changelogs/commits of these modules and run tests. I read the commits and I think only gulp-useref has a breaking change which doesn't seem relevant in this case.\nThanks for the heads-up.\n. We'll cover that in #121. Disregard my last negative comment in that issue, it'll happen.\n. Merged.\n. My semantical reasoning behind this.\n- serve depends on connect, even without watch.\n- watch depends on connect because connect needs to happen first, so that watch can start LiveReload\n- connect depends on styles and other potential preprocessors/templates, because they create the .tmp folder which connect serves from, this way both serve and watch builds styles\nI hope that makes sense.\n. Personally, I find plugins like this unreliable. Also, taken from this plugin's docs:\n\nThis plugin has NOT been tested thoroughly.\n. I don't like minifying HTML because I feel like it can get you in trouble with spacing and stuff. Thoughts, @sindresorhus?\n. Yeah, I don't really see much benefit either, also it ruins viewing source (not via developer tools, though). When I was using a different plugin (gulp-html-minifier) I was tripping over all the time and it was very frustrating, because some things I wanted were removed and it was hard for me to detect that.\n\nI'll ask for opinions.\n. You're pretty awesome :+1:\n. Well, the numbers have spoken. I'm don't think adding this micro-optimization to the generator would be useful, but feel free to discuss further.\nThanks for the constructive discussion, everyone :+1: \n. @austinpray would you like to write a blog post?\n. Fair enough.\n. Thanks!\n. But now initial gulp build task fails, because console isn't defined as a global in main.js. Maybe we could set \"devel\": true?\n. But on the other hand I don't want the initially scaffolded site to fail to build.\nI think we can assume that users will initially want to use console a lot, that means they would always have to add \"devel\": true every time. I'm pretty sure people who will not want console in their production code will know about the devel option.\nSetting \"devel\": true feels more noob-friendly without hurting anyone.\n. Just as proof that the JS file is successfully included. Regardless of that, I always use console when I start developing, so naturally I will always want devel to be true in the beginning.\nBut I also agree with you that it works against you, so I propose a compromise: prepend /* jshint devel:true */ to main.js. What do you think?\n. Yay :smiley: \n. You can se the instructions here.\n. Not sure what you were doing here:\nsh\n$ cd ~/yeoman-test/generator/\n$ npm link generator-gulp-webapp\n$ npm link generator-mocha\nAlso, why were you cloning yeoman-generator?\nThis should be sufficient for any generator:\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nsh\n$ yo gulp-webapp\n. No, but you can create your own task, something like this:\n``` js\ngulp.task('serve:dist', ['styles'], function () {\n  var serveStatic = require('serve-static');\n  var serveIndex = require('serve-index');\n  var app = require('connect')()\n    .use(serveStatic('dist'))\n    .use(serveIndex('dist'));\nrequire('http').createServer(app)\n    .listen(9000)\n    .on('listening', function () {\n      console.log('Started connect web server on http://localhost:9000');\n    });\n});\n``\n. @hawsome are you still getting this error? With the latest version of gulp-cache? I used to get it before, but not anymore it seems.\n. See if your have a.yo-rcfile on your desktop.\n. Closing this due to inactivity. It's probably the.yo-rc` file.\n. This was fixed in 7344c7baf7e228ec026fd3f2dfb2fe6513a3c191 (not released yet).\n. Yes, that's probably the gulp-useref error. If you update that plugin, it should tell you exactly what it can't find.\n. Run\nsh\n$ npm install --save-dev gulp-useref\nand try again. Recent versions of gulp-useref have more useful error messages.\n. The question is whether you want to pollute your HTML files or your bower.json with linking each JS/Sass file. I vote for HTML, because you can't comment out lines in bower.json (AFAIK) and you don't have to re-add fonts. Also, I can't figure out why you are talking about Sass while using Less Bootstrap as an example.\n. Actually, I agree, it's much more semantic. PR on the way\u2026\n. Actually, this would be way too much template code because there are two flavors of Bootstrap, plus I don't like overusing the overrides field. I don't think there's a solution that's elegant enough to be worth it, so closing this until someone finds one.\n. The verbosity of wiredep commands is increasing, but if we get #235 approved, we can apply the wiredep command with same options for both HTML and Sass.\n. Also, this adds some additional time to the html task and probably styles task. But I would sacrifice speed for clarity in this case.\n. The logic of the ../bower_components path in HTML files is terrible. We're using the fact that ../ = / when we're already in the root, just so we don't trip up gulp-useref. We've had numerous issues about this subject and if we have to explain something many times, it's not a good design.\nAlso, when I'm debugging what wiredep injected in my file, I already know it's from Bower, so I don't need that ../bower_components prefix, it's clutter to me. The robot is managing them, but a human is reading them from time to time.\n. Ok, I agree with you guys. I actually mainly want to remove the ../ abomination :D How about we then convert:\nhtml\n<script src=\"../bower_components/modernizr/modernizr.js\"></script>\nto:\nhtml\n<script src=\"bower_components/modernizr/modernizr.js\"></script>\nI don't think we have to move bower_components to app, though.\n. Ok, now we have an inconsistency:\nHTML:\nhtml\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\nSass:\nscss\n@import \"bower_components/bootstrap-sass-official/assets/stylesheets/_bootstrap.scss\";\n/bower_components path crashes Sass, maybe load paths don't work that way. Do I remove / from HTML path as well?\n. Ok, removed the inconsistency. Both now start with bower_components/.\nThis is ready for merging, if you agree, @eddiemonge @sindresorhus @Munter @addyosmani.\n. Rebased.\n. By the way, this is now in sync with how generator-webapp does it.\n. As this is more philosophically-oriented, I would rather put it under docs/, not in the main readme.\n. Added the notes.\n. Thanks, I'm on it. Also, the font path should be replaced on build.\n. So Sass and Modernizr options are on? I couldn't reproduce your error, are you using v0.2.0?\n. Just add the styles and templates tasks to the connect task instead of serve. html task is correct.\n. js\ngulp.task('connect', ['styles', 'templates'], function () {\n    ...\n. I just updated the Nunjucks recipe. I followed the steps myself and it worked. But there isn't anything more I didn't tell you about\u2026\nCould you please create a demo for this?\n. I'm closing this issue because the recipe has been updated and tested to work. If a demo supporting this issue is provided, I'll be happy to reopen and fix.\n. This will allow me to merge in #188, because there is no path replacing problem to solve anymore.\n. Done, but this prints out errors like this:\njs\n{ [Error: error main.scss (Line 7: Invalid CSS after \"@import \": expected file to import (string or url()), was \"blah;\")]\n  message: 'error main.scss (Line 7: Invalid CSS after \"@import \": expected file to import (string or url()), was \"blah;\")',\n  showStack: false,\n  showProperties: true,\n  plugin: 'gulp-ruby-sass',\n  __safety: { toString: [Function] } }\nDid you want that?\n. Done. Should I also paint it red with chalk.js?\n. I edited my initial comment with info that I learned while intensively using it recently.\n\nAs far as livestyle: What's wrong with browser sync?\n\nI didn't manage to get Livestyle working, so I'm not so much for it anymore. Though I am for Express and its plugins. I'm not sure what BrowserSync is based on and can you use Express plugins for it too.\n. Good point, @KingScooty, Assetgraph is not very gulpy. I'll close this then, but further discussion is welcome :smiley: \n. Yeah, I'll keep it open for a while. I used it heavily and it certainly does a lot of the heavy lifting, especially responsive images, which actually became a joy to do if you can believe it :smiley: \nBut I think this generator is intended for web apps, which are usually not image-heavy and get most images via an API. So we have to keep the intention in mind, which can be hard :confused: \n. Yeah, Assetgraph would be used for the build step, that's where it shines.\n. I let this idea sink in for quite a while now, and it hasn't. I don't see AssetGraph-builder fitting into this generator, it's currently fairly unwieldy IMO, it's not very modular and will probably raise more issues than it will solve.\n. You still need to tell JSHint about the moment global. There are 2 solutions I can think of ATM.\n\nAdd this to your .jshintrc:\n\njs\n\"predef\": [\"moment\"]\n\nPrepend this to the JS file(s) you are using the library in:\n\njs\n/* global moment */\n. It's a Ruby dep, I forgot. I'll close this later, I'll just wait a bit in case I change my mind and want to discuss further.\n. Good idea.\n. Ok, not sure why I didn't merge this sooner, it's just docs anyway :smiley:\n. I was being a bit verbose because of semantics, but you're right, thanks!\n. Yay!\n. Thanks :+1: \n. There is a recipe for this, but I think you're right, maybe we should implement this.\n. Yeah, it would be nice if it was implemented here, too. The main problem is that I haven't figured out a way to rev all the assets, not just CSS & JS. Gulp is not very good at this stuff :disappointed: Otherwise I would implement it right away.\n. Great! :+1:\n. Could you post an example of how would that html task look like?\n. If this would help revving, I'm all for it. But I think it's best to perform it on the dist folder after the build, that way we could rev fonts and images too. Or does splitting the html task make that easier/possible?\n. > but it actually removes the revved files, and leaves the un-revved files alone\nI was using it before and it worked fine. Maybe it gets screwed up when not replacing in the same stream as the one where revving is done?\n. @illycz no. \ud83d\ude15 We should really solve this, but Gulp isn't a good tool for this task.. No, I fixed this in 390199858f3bda1647856fd3b3a7704601e4e0a0 (not released yet). My bad :smiley:\nWiredep didn't that realize Modernizr is already included because the path didn't have the leading /, so it was including it (again).\n. I see the problem. The initial wiredep call has the wrong regex. If you were to run gulp wiredep, your paths would be corrected and the 2nd Modernizr would be excluded.\nTry with the latest commits. (I also corrected Bootstrap paths, wasn't really an issue, just for consistency.)\n. @jnsq why do you think it's back? I checked the index.html file and the built JS file, I see it included only once. Could you share more details?. @jnsq yep, you're right! Reopening\u2026. Sorry, getting around to it\u2026 \ud83d\ude05 . Does it work after running gulp fonts?\n. gulp fonts should put those fonts in .tmp/fonts (and dist/fonts), and we are serving from .tmp so the paths should work. Which version of the generator are you using?\n. Yes, absolutely. Thanks for reminding me :smiley: \n. Done.\n. It should have worked. The path inside bootstrap-sass directory doesn't matter because we're extracting Glyphicons with the fonts task, which puts them in .tmp/fonts (and dist/fonts). Try running gulp fonts explicitly and try again.\n. Yeah, sorry about the tests, I have no idea why they are failing ATM.\n. Great, thanks :smiley: \n. Are you sure your .jsx file is under the app/scripts directory?\n. It works for me. Which version of the generator are you using? Could you share your gulpfile.js?\n. Hm, I hope you manage to get it working on the first computer. If you want further help, feel free to ask.\n. With the current setup, they should both be /bower_components/... Are you sure your wiredep task matches this one? More specifically the ignorePath.\n. That ignorePath is already a part of this generator since 64cf7be0979bbba494d56341ba3102fb2b4d07eb, it just hasn't been released yet, that's why it's not marked as a change.\n. Good catch, thanks! :+1: \n. Yes, and I recommend it until we speed up our release cycles.\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nNow yo gulp-webapp will use that repo. To update, simply navigate to generator-gulp-webapp and do git pull.\nThe reason why we're not releasing yet is that we're waiting for libsass to solve their blocker issues, like support for nested @media queries.\nP.S. If you want to view the readme of a specific version, simply select that tag on GitHub. Regardless of the release cycle speed, it can always happen that a part of the docs doesn't match your version, because it belongs to master.\n. If we were to create a dev branch, we would have to make it the default, so people don't submit PRs to master. If dev is the default branch, people viewing the repo will again see the \"wrong\" readme.\n. I agree that sometimes a gap can happen, as master is the bleeding edge and some drastic changes can happen that aren't yet released. Some projects do have a dev and a master branch, but I think that workflow is much more useful in larger projects. As I explained, having a dev branch will not solve this problem, because it would still be the first thing that the user sees.\nConcerning complaints and reactions, anyone who got their hands dirty in OSS should find it natural that master is the bleeding-edge and that you're usually going to see it if you go to a library's source code. I think this is how most people do it and rethinking it seems like too much work (e.g. you would need to make changes to GitHub itself) because of one wrong gut feeling. Some things are non-intuitive and mistakes of the designer, but sometimes users make mistakes too.\nNobody was rude to you, we're putting effort into explaining this to you.\n. I broke the tests a while ago, so it's not your fault. I'll fix those ASAP.\n. Forgot to update other recipes, just a sec\u2026\n. Ok, ready.\n. Ok, I don't have strong feelings either way. We could add it if we implement AssetGraph for the build step, it will do a much better job. Or you don't like revving by default in general?\n. I\u2019m not sure why you would update versions in package.json. Aren\u2019t you only using it for installing packages?\n. Hm, I think manually appending ?v={{ version }} to every asset (if I understood correctly) is very tedious. There needs to be a plugin that does this without the user having to think about it. AssetGraph is good at that, I just need to learn it well enough :smiley: \n. I'm talking about images, fonts etc. All of those need to be revved too.\n\nI'll collect my thoughts and perhaps make an issue with code examples.\n\nSure, we'd love to hear it! :smiley: \n. Does it rename assets or do you end up with both original and revved files?\n. Oh, I forgot to add. I'm reverting to Ruby Sass because I don't know when libsass 3.2 will be released and I want something stable.\n. Why? I really like it.\n. Not sure why tests fail, they ran successfully locally.\n. I'd rather have merged @media queries. While nested @media queries are valid CSS3, nobody seems to use or talk about them much and they don't appear to work in IE11 (and maybe in other browsers which otherwise support @media queries). http://codepen.io/silvenon/pen/JoOxWb\nI reverted simply because I wouldn't use this myself in the current state and I want to make a stable release. I'm planning to add libsass back as soon as I'm happy with it.\n. I only care about IE10+ and I think that's as far as we should assume for our users.\nOk, I'll fix the tests and merge.\n. Speed > support for any IE at all? About 17% of web traffic?\n. @dbashford I think libsass is too close to being stable for this extra work to be worth it, but I can do it if more people would like this feature.\n. Ok, everyone seems to be against temporarily dropping libsass, so I'm closing this in favor of #274, because I mainly wanted source maps anyway.\n. So you have v0.2.0 installed? How do you know that your system is still using an older version?\n. Were you looking at the files on the master branch or did you specifically go to v0.2.0? There is a comment at the top of your scaffolded gulpfile.js which says which version generated it, could you take a look at it?\n. sh\n$ npm install --global --force yeoman/generator-gulp-webapp\nI think that should do it.\n. What do you mean? Released?\n. @michelmany which issues? What version of the generator are you using?\n. :+1: \n. What does node-sass 2.0 have that we were waiting for? I wanted merged @media queries, but I have no problem in making a release without that feature, then adding the @media update as a patch version or something.\nSure, I'll see if I can do some automatic testing as well.\n. 0.3.0 released.\n. :+1: \n. Thanks :+1: \n. Sure, PR welcome :smiley: \n. We switched to ESLint, which, apart from low-level stuff, offers advanced code style linting, similar to JSCS.\n. Did you run gulp serve?\n. Of course. All servers are automatically searching for the index.html, otherwise they can't display anything. The files list is a bonus, which helps you to locate the file you want to view, instead of just displaying a 404 error (page not found).\n. Could you elaborate what is the problem and what were you expecting?\n. I misunderstood you, my bad. I thought we had this and this behavior was confusing you. Thanks @francoiscote for the tip, I'll probably add this to the core.\n. Added in 70cceb1a12652003f4717f7da331367e078693b3.\nOh. Yeah, since we server from multiple directories, it's a trade-off. The order of baseDir matters, so be careful. Make sure you don't have files with the same name, e.g. a template app/index.html and a compiled .tmp/index.html, because app/index.html will get served, which isn't what you want.\n. We had it, but dropped it because it was too presumptuous, i.e. many people don't/can't use it. You can write a Require.js recipe if you want, or send over a gist and I can write it.\n. Sure, but isn't it just this?\ndiff\n-return gulp.src('app/styles/main.scss')\n-  .pipe($.sourcemaps.init())\n-  .pipe($.sass({\n-    outputStyle: 'nested', // libsass doesn't support expanded yet\n-    precision: 10,\n-    includePaths: ['.'],\n-    onError: console.error.bind(console, 'Sass error:')\n-  }))\n+return $.rubySass('app/styles/main.scss', {\n+  sourcemap: true,\n+  style: 'expanded',\n+  precision: 10,\n+  loadPath: ['.']\n+)\n+  .on('errror', function(err) { console.log(err.message); })\nBut if you want it, I'd accept a PR, no problem :wink: \n. Ok :smiley: \n. Thanks, this will be a good reference for people who want to revert to Ruby Sass.\n. You need to install Susy with Bower (bower install --save susy), not RubyGems, if you want it to get automatically @imported.\n. Also, in future please ask support questions on StackOverflow :wink: This question clearly wasn't related to the Ruby Sass recipe.\n. Now Gulp version does too!\n. Hey. I removed the directory listing feature in c1104ecdb049e7011b73703a2d2d5799f49ad331 because I don't know whether it's possible to do it well in our circumstances. But that is only problematic in gulp serve, gulp serve:dist should work fine even with the directory listing. I tried it now myself.\n. Yep, removing directory: true will fix it. Obviously it doesn't work the way we thought it did.\n. Yeah, BrowserSync is really awesome.\n. Cool, thanks :+1: \n. A PR would be cool, yes :smiley: \n. Yes, that sounds good.\n. That would be awesome :+1: \nCould you ensure white background?\n\n. It makes sense, it's meant to be on a white background, see?\n\nThanks a lot.\n. Which version of generator-gulp-webapp did you scaffold with? Because now we use gulp serve as the primary task for development mode, not gulp watch.\n. Other than my comments, LGTM :+1: @sindresorhus?\nYou didn't do anything wrong, tests aren't that good ATM. I'll bring them up to speed on a rainy day, it's on my shame list :wink: \n. Congratulations! :baby_bottle: :baby:\n. Works fine, thanks a lot! :+1: \n. It seems to work correctly and gives a nice colorful output.\n\nTwo questions:\n1. I noticed there's a new version of gulp-rev-all with some breaking changes, would you care to update to the latest version?\n2. The output seems a bit too verbose. Perhaps silent is best? I think the new option is called debug, so perhaps set that to false.\n@sindresorhus your thoughts as the author of gulp-rev? :smiley: \n. Ok, I take full responsibility if it gets out of hand :smiley:\nI'd like to continue with this then, so @hivre, when you have time, please address my 2 questions.\n. We'll have to continue this in another PR, one of these days :smiley: \n. Sure, if you're up for finishing, I'd be happy to merge :wink: \n. No pressure.\n. :+1: \n. You have to clear the cache if things like that happen.\n. Thanks for the suggestion, I thought about it a few times, but each time I realized that paths will differ from task to task. For example, sometimes you might perform a task on all HTML files and sometimes you'd like to exclude 404.html or something similar.\nUnlike Gruntfile.js, in a gulpfile.js paths aren't so repetitive and adjusting to a new directory structure should be much easier. In a gulpfile.js actions are applied to the stream in a single go, where in a Gruntfile.js your paths would be repeated over and over again for each task. For example, I can see that images and extras paths would most probably be used only once, so using the values directly actually results in less code.\nAll in all, I see little room (and reason) for automation in that area. If a specific setup worked for you much better, feel free to share it :smiley: \n. In my opinion it decreases readability for very little gain. You can change those with search & replace.\n. Variables are convenient if changing their value will save time. In this case a simple search & replace for app/src/ will do the trick.\n\nWhat is not readable about variables? This is exactly what variables are for.\n\nVariables are usually for making the code shorter and more flexible. This will not make the code shorter and, in my opinion, not that flexible either.\njs\nbases.app + 'scripts/**/*.js'\n// vs\n'app/scripts/**/*.js'\nThe former is less readable and takes longer to type.\n. This is just my opinion, I'll wait for others from the team to share theirs :smiley: \n. I previously had a hunch that it might be, but realistically if you want to change app/styles to app/src/styles, you could do it with a search & replace and there would probably be max 3 occurrences, which would take you like 15 seconds to change manually. Paths in gulpfile.js aren't really that repetitive, I think, and variables can be a drag to type and concatenate.\nI never felt a need to do this (unlike in a Gruntfile.js). Did you? Also, I don't think updating a gulpfile.js would be a matter of simple file replacement, as you probably modified some stuff, so you would have to adapt it manually anyway.\nDo you have a use case where updating paths wouldn't be simple without variables?\n. I feel it's more clear without using variables. Because paths in gulpfile.js are not very reusable, sometimes you want app/scripts/**/*.js, sometimes you want app/scripts/vendor/**/*.js, or maybe app/scripts/**/*.jsx. It depends on what you want in that particular case, and I don't think that creating a variable for each variation is not useful, it just requires an additional lookup.\nI think this is more a matter of taste than actual usefulness. Closing this.\n. You should not change anything in the bower_components directory, because:\n- other people won't get your changes, because it's excluded from version control\n- once you update your package, your changes will be overridden\nPackages should never be modified directly. You can override variables by placing them in main.css before @importing Bootstrap.\nLet me know if you need further explanation :smiley: \n. :+1: \n. See https://github.com/yeoman/generator-gulp-webapp/issues/296#issuecomment-88288293 for explanation why you shouldn't change aynthing in bower_components. Copy the _variables.scss from Bootstrap, @import it before Bootstrap in main.scss and override your variables there.\n. I couldn't get gulp-postcss v5.0.0 to work. I'm not sure if I'm doing anything wrong or it's just broken\u2026\nstream.js:94\n      throw er; // Unhandled stream error in pipe.\n            ^\nReferenceError: Promise is not defined\n    at LazyResult.async (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/node_modules/postcss/lib/lazy-result.js:93:31)\n    at LazyResult.then (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/node_modules/postcss/lib/lazy-result.js:56:21)\n    at Transform.stream._transform (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/index.js:44:10)\n    at Transform._read (_stream_transform.js:179:10)\n    at Transform._write (_stream_transform.js:167:12)\n    at doWrite (_stream_writable.js:226:10)\n    at writeOrBuffer (_stream_writable.js:216:5)\n    at Transform.Writable.write (_stream_writable.js:183:11)\n    at Stream.ondata (stream.js:51:26)\n    at Stream.emit (events.js:95:17)\n. Thanks. So we need to add es6-promise to package.json as well, right?\n. I think you accidentally added it to devDependencies instead of dependencies :smiley: \n. It works, thanks! :+1: \n. Then there's not much point in using gulp-cache at all, is there? Because the images task is only run on build and every time the cache will be cleared.\n. I don't see how gulp-newer is going to help here, we don't want to optimize only newer images, because old images won't end up in the build then.\nI'm closing this because clearing the cache every time would render gulp-cache useless. This should be done manually, in rare circumstances when something went wrong.\nThanks for your effort, though :wink: \n. Thanks :smiley: \n. I agree, by having compiling only main.scss we're losing flexibility for no reason, and without Sass it makes no sense at all, because you'll most probably want more stylesheets.\nThanks for the PR :+1: \n. Glad you worked it out :+1: \n. Is this causing any actual problems other than the warnings?\n. Are you guys having this issue with the latest release, v1.0.0?\n. I used to have these warnings too, but not anymore, after I reinstalled node & npm. Try doing the same, it should work. I suggest using nvm, it makes installing and uninstalling this stuff pretty elegant.\nIf the issue persists after all that, I'll reopen.\n. I agree that we need some kind of a solution for this, because it's a gotcha. But I think this way, where styles and wiredep are ran simultaneously, wiredep will inject Sass dependencies, but because styles already started (or even finished) they won't be compiled that first time.\n. Yeah, I'm reluctant to further complicate gulpfile.js, as this is not a fatal issue, you can just run gulp wiredep yourself if you installed some deps while gulp wasn't watching.\nI suggest that in future you create separate branches for your PRs, because now your new commits on master entered this PR :smiley:\nIf that was intentional, I'd like to keep things separate, so please pick one change set (e.g. bootstrap-sass), move others to a separate branch, and we can rename the PR :wink: \n. Oh, you already did, I didn't see #314.\n. We have it documented here, in our Getting Started guide. Do you think it's hard to find and we could improve it somehow?\n. Oh yeah!\n. By \"build\" you mean the one after running gulp? Is this on a fresh install? You may need to run gulp wiredep.\n. Could you post your gulpfile.js?\n. Oh, it's seems the same as the original, except the Less part. What is your directory structure? What does your index.html look like?\n. I edited your comment to include code tags, read more about GitHub-Flavored Markdown to understand why your code wasn't showing right.\nOk, I see what's wrong. If you do a fresh install, you'll see that those Bootstrap <script> tags used to be surrounded by comments which signaled gulp-useref to concatenate them, you must've removed them accidentally. Read more about that in gulp-useref's docs.\nI'm closing this because it's not an issue with our generator.\n. @1db8k thanks for providing a better solution. I would still like people to add it on their own risk, but purifycss seems like a nice solution. \ud83d\udc4d . Good idea, will do! It's probably dead simple, though.\n. Probably some Bootstrap tips will also be needed.\n. Thanks! I hope this will fix it for good.\n. Thanks a bunch! Could you squash your commits into one? Also, we don't really care for older IEs, so you can drop the IE8 compatibility part, we'll let users decide to add it if necessary.\n. Ping.\n. @MattDiMu maybe you misunderstood what \"rebase\" means. This blog post might help with understanding these concepts a bit.\n. Yeah, those sound like JSHint errors. Let us know if @fernoftheandes's solution doesn't work.\n. Hey, I was also bummed by this, perhaps it's better to ask this on gulp-sass and also add it to their docs. (I'll keep this issue open.)\n. Check this part of gulp-sass docs for more info.\n. No problem, I love writing changelogs anyway. It's been way to long since the last release :sweat_smile: \n. Should I make updates according to API changes then?\n. Yep, our very own major release :tada: \n. Something else must be the case, then. Try updating to latest gulp-sass and follow their sourcemaps example. Does that work?\n. This would introduce inconsistencies with our recipes (and this generator in general), because we don't use gulp-inject anywhere else. Also, what if you need to control the order in which files are injected? The order mostly doesn't matter with vendor libraries, but it sometimes matters with your own files.\n. I'll reopen if convincing arguments are provided.\n. :+1: Sorry, I killed your PR with the latest changes, could you rebase?\n. Thanks so much! Besides my nitpicky comments, could you also squash your commits into one?\nAwesome job :+1: \n. :+1: \n. I made a PR so I can amend if I think of anything else to add. No need to review, you can spend that time watching Hannibal instead, good show.\n. Ok, ready.\n. :+1: \n. Lol, I suck :stuck_out_tongue: Thanks for catching and fixing this :+1: \n. Thanks for reporting :+1: I will see what's the best way to deal with this\u2026\n. Hey, that's a great fix, a PR would be awesome :+1: \nWhat do you think about using assets/fonts/bootstrap/* instead of naming each font individually?\n. Maybe better to have those options in the package.json where the rest of them are? What do you think @kevva?\n. Btw, I restarted the test and now it passes. It sometimes times out, we should probably increase the timeout.\n. You're right, it's best not to mix them.\n. LGTM, thanks! :+1: \n. Do you have a lot of dependencies? gulp-useref takes a while if there are a lot of JS and CSS files to find.\n. Maybe link your gulpfile.js and index.html.\n. Yeah, tinymce has a lot of files. Well, in this case I suggest you just include a concatenated version, perhaps tinymce-dist? Or check out gulp-if's docs for various ways to apply conditions.\n. Does this happen with a fresh install or did you modify your build step? scripts/plugins.js is showing when I build it\u2026\nBtw, don't run gulp build, run gulp instead if you want your directories to be cleaned before building.\n. I pushed some changes, though, which fix the wrong source order. (Bootstrap was loading before jQuery.)\n. I just released it. See the changelog here.\nI now see that this is a dupe of #337 and has been merged as 4b708825cfe2e86fef7af0e2dde157cb0a6eea4e.\n. As far as I can tell, you just need to specify the jquery environment to true. See here for more info.\nThe ESLint config is located in package.json.\n. @dendrochronology good point, I fixed that in b65a1d6eccdc4af38bd38f1a128dd325b017c737.. If you modified your files since you finished scaffolding, that classifies as a support question and is best asked on StackOverflow, providing your gulpfile.babel.js and index.html. Post a link to the question here so people can follow and answer it.\nIf you haven't modified anything, then that is an issue with our generator, in that case please post your gulpfile.babel.js and index.html here.\n. On StackOverflow use the tags #yeoman and #gulp.\n. No problem :+1:  Could you explain exactly what you did wrong? That way other people who stumble upon this issue will also know.\n. Oh, right. gulp-useref couldn't find it then.\n. Added IRC info. Merge?\n. Not sure, I added [ci skip] now, so it won't even start. I guess it's choking because I created a branch here instead of my own fork.\n. Absolutely :+1: We'd like to include it in the core.\n. You can open the PR with what you have and we can help you to finish it.\n. Yeah, some adjustments will have to be made\u2026 Thanks for sharing your workflow.\n. Yeah, it needs to be rebased and updated. I'll soon get around to fixing some long overdue issues, Babel will be one of them.\n. For that we would need to add a module bundler. Since there are so many (browserify, webpack, jspm\u2026), we're hesitant about that. E.g. webpack could replace gulp altogether, so that would be a major rewrite and should perhaps be a separate project.\nDo you have some preferences?\n. @alexej-d yes, my thoughts exactly.\n. Released in v1.1.0.\n. @Keyamoon by the way, I'm maintaining generator-wbp, which uses browserify and stuff, it might be what you're looking for?\n. @Keyamoon I feel you. I spent a lot of time using and studying these tools, here's the summary of my experience:\n- gulp \u2013 useful for presentation sites and small JS apps, but not flexible enough for heavy JS apps\n- browserify \u2013 easy to understand for beginners, but a task runner like gulp is probably still needed, and browserify's setup is not so pretty :sweat_smile: \n- webpack \u2013 useful for JS apps (not so much for presentation sites), harder to understand at first, but totally worth it because it's very powerful and flexible with a much smaller configuration, no task runner needed\nIf you have questions, feel free to send me an email or something, I'd be happy to help further.\n. It works! Could you just update Bootstrap dependencies to ~3.3.5? (And squash it into this commit.)\n. Awesome! Thanks :+1: \n. Released in v1.0.2.\n. @WXLWEB What do you mean? This generator provides jQuery.\n. For the first issue, I think that for some reason gulp wiredep didn't run in your case. Remove that line you added, run gulp wiredep and see if it gets injected into the scripts/vendor.js comment block.\nThe second issue might be solved in the same way. It would help if you tell us which options you selected and what does your web inspector console say.\n. I added it, but I think it would be much nicer if the global gulp was picking up the locally installed gulp, like jspm does.\n. Which version of the generator are you using? Does this happen on a fresh install or did you modify something?\n. Run this:\nsh\nnpm ls -g | grep generator-gulp-webapp\nWe'll start from there.\n. There have been a fair amount of releases since then. Could you upgrade to the latest version and try again?\nnpm install --global generator-gulp-webapp\n. Thanks for a well-composed issue :+1: This error happened because for some reason you don't have babel installed in your project, i.e. in the node_modules directory. We put it in devDependencies in package.json, so the npm install command which ran after scaffolding should've installed it. Could you poke around to see why this is not the case?\n. It was fixed in 31348ff1acc393af507a7b8a192d767cf9737021, as the reference above your comment says, it just wasn't released yet :wink:\nNow it's released in v1.0.3.\n. The fix is released, though :wink: \n. Glad you got it working :+1: Yeah, probably a caching issue. What was the error you were encountering when trying with the latest release?\n. The problem is that gulp is still searching for babel/register instead of babel-core/register (babel module was renamed to babel-core). You should reset it by reinstalling it \u2013 npm install --global gulp did it for me. (This is probably what you did as part of reinstalling iojs).\n. npm install -g gulp doesn't help?\n. Couple of ideas:\n- npm cache clean\n- npm uninstall -g gulp, open a new Terminal tab, npm install -g gulp\n- reinstall node, as a last resort\nTry them out. The last one should work, but it shouldn't really come to that.\n. Whoa\u2026 that should've worked :confused: Are you on OS X? Are you up for pairing with tmate?\n. Gulp searches for both. First babel-core/register, then babel/register. I'm not sure anymore whether Babel wants us to install babel or babel-core?\n. Might be better to raise an issue in gulp's repo, if there isn't one already.\n. @alphapilgrim this problem happens with a fresh install? Or did you use a nonexistent Babel preset?\n. Did you then try to gradually get from the fresh install to that state to see where it went wrong?\n. @dpalomar could you make sure that latest babel-register, gulp (both locally) and gulp-cli (globally) are installed?\n. A new version was released where we don't parse gulpfile with Babel anymore (i.e. we renamed gulpfile.babel.js to gulpfile.js), because Node v4+ support a lot of ES2015 features. So this issue should be gone. Hopefully people will stop torturing this poor thread \ud83d\ude13 \n. @bleedkaga please raise a new issue, this is not related to babel-register.\n. @bleedkaga Maybe. If you open a new issue \ud83d\ude01 \n. Just remove the console.log line in main.js.\n. Oh, I misunderstood the question :smile: \n. This is not really an issue with our generator, you were asking where you can pass options to UglifyJS. You can pass them here, like so:\njs\n.pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\nLet me know if that worked. Btw, this is a support question and questions like this are better asked on Stack Overflow.\n. Thanks!\n. I think we should try to set it up with gulp-rev, let's see how we can make it as simple as possible.\n. Btw, thanks so much for helping us with this one.\n. Thanks for sharing your workflow! I guess it will need to be a bit of an overkill :confused: \n. Especially because this generator is meant for webapps. Jekyll is more suited for blogs and simple sites like that.\n. It doesn't apply here, but thanks for reporting.\n. Cool, thanks!\n. Could you clarify the issue? What do you mean by default? Why would you need to have it in development?\n. But you already do have it. gulp-useref is taking care of that here.\nWhat precisely do you want that this gulpfile is not offering?\n. Sorry, I should've asked first.\n. Great, thanks :+1: \n. We will update once it's stable.\n. Fixed by @MarkyMarkNo1 in #621. I'll drop a comment when I release this.. LGTM. @arthurvr?\n. Thanks!\n. I don't think Heroku supports static sites, but I guess it can be faked :smile: \n. :+1: \n. Great!\n. Hey :smiley: This question is better suited for Stack Overflow . Please ask the question there and post a link to it here, so we can answer :wink: More info here.\n. Hey :smiley: This generator is intended for static content and single-page apps. Users might have very different stacks so we don't want to assume anything because no stack is the best. I.e. the best stack for you is the one you feel most comfortable in.\nYou could try if a different generator suits you better. E.g. search for \"express\".\n. It does. When you run yo gulp-webapp, the generator asks you whether you want to include Sass (it's on by default). If it's included, you shouldn't have to do any extra work to compile Sass files. Run it again and let us know how it went.\n. Great to hear that! :+1: \n. GitHub issue tracker is for reporting actual bugs. This is a support question and it's better suited for Stack Overflow.\n. You should run bower install --save while gulp serve is running or explicitly run gulp wiredep if you installed Bower deps while gulp wasn't watching :wink: Read this for more info.\n. Thanks! :+1: \n. Wow, thanks :+1: \n. Interesting\u2026 The CSS minification module is actually downloading that stylesheet and inlining it, I had no idea :smile: If you update gulp-minify-css:\nsh\n$ npm install --save-dev gulp-minify-css\nDoes it work then?\n. gulp-minify-css uses clean-css, so jakubpawlowicz/clean-css#612 might be related.\n. Could you provide a demo, where you do a fresh scaffold of the latest version, then update gulp-minify-css and do a minimal set of changes to reproduce the issue?\n. That's too bad :confused: But I'm glad you figured it out.\n. This line minifies CSS. Is this not the case for you?\n. \"Holy git\"?! Hahaha, awesome, totally stealing that one :+1: \n. Yes, we are serving only from .tmp and app. You can add imported to that array and reach those assets with /test1/path/to/asset. Let me know if that works.\n. @vennsoh make sure your load URL starts with /test1/, not ../imported/test1/. If that doesn't work, try moving your imported directory to app (if your workflow allows it), in that case your ../imported/test1/ path should work.\n. Closing due to inactivity. If there are further issues I'll reopen.\n. You should update your version of generator-gulp-webapp:\n$ npm install --global generator-gulp-webapp\n. There are many ways to do this, what @gaboesquivel linked seems good. You can also use gulp-template and load the API URL from a git-ignored file.\nI hope you managed to solve the problem.\n. Thanks!\n. Maybe you were referring to generator-angular.\n. What @sindresorhus was referring to is e.g. linter-eslint. Plugins for your favorite text editor will work much better than linting on file change, because they lint as you type instead of as you save and you can immediately see the line number, the error etc.\n\n. Yeah, probably not, but it's still a recommended way to go. You can always add that gulp.watch line yourself if your editor doesn't support it. When I'm working in my editor, having to check the terminal for errors every now and then is very inconvenient.\nDoes your editor have a plugin? Do you have a better solution?\n. Closing this because it's a problem editor plugins are much better at solving.\n. We'll keep this open until that issue is resolved. Too bad :confused: \n. It's resolved.\n. Thanks @alferov :+1: \nAlso, make sure that gulp serve is running while you install dependencies (with correct bower.jsons :sweat_smile:). Read this for more info.\n. This is not related to generator-gulp-webapp, but to generator-angular. Please raise the issue there.\n. Can you elaborate? What are you trying to achieve?\n. :+1: \n. @sscarduzio we haven't yet released the change where serve:dist automatically runs build as well, but that's coming with the next release.\n. We don't favor one templating language over another, because it usually depends on the situation. Sometimes you can get away with Mustache, but if you need more control, you might choose Lo-dash or Jade. We don't think there's a single right choice, so we leave it up to the user.\n. Yes, of course :+1: You can just fork this generator, make required changes for Jade support and publish it.\n. Good idea.\n. Done.\n. Do you have a lot of images? Because the images task can take a while the first time, before it caches. Does this happen with a fresh install? It takes when I run it ~2.5s.\n. > Perhaps all of this is fixed in gulp 4?\nI'm using gulp 3 and it's fast for me, so it's gotta be something else. Which version of gulp and Node are you using exactly?\n. I tried on that version of node, but it's still ~700ms. @sindresorhus any ideas?\n. Could someone try if updating Babel to v6 helps?\n$ npm install --save-dev babel-core@latest babel-register babel-preset-es2015\nThen add .babelrc:\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}\nNow try to run a gulp command.\n. In the PR above I implemented @neilhem's solution. Thanks for the suggestions everyone, that should take care of this problem.\n. Version bump is coming soon.\n. Released in v2.1.0.\n. This is a internet connection or a firewall issue, like the output says. eschnou/ardrone-webflight#49 might help.\n. Thanks! :+1: \n. Could you be more specific? You have a hard time debugging both node and React errors? Do you have an example?\n. This is not an issue with this generator, it's a problem with the specific tools you are using. In your case, gulp-react's stack trace doesn't contain the file name.\nSupport questions should be asked on Stack Overflow.\n. Awesome! Thanks :+1: \nLike in generator-webapp, we intended for this feature to be hidden behind a flag because it's so common, i.e. to turn it off you would pass --no-babel to yo gulp-webapp. Would you it be too much trouble to implement it that way?\n. I never liked that condition either, it was added because of some errors, probably imagemin trying to optimize non-images. But AFAIK imagemin ignores non-image files, right @kevva?\n. It was added by #323, there was a discussion about it in https://github.com/google/web-starter-kit/issues/579#issuecomment-75457434. Could you check if this works with the latest version of gulp-cache?\n. It works fine, so I removed the condition.\n. Thanks :smiley: Though I think it might be better to replace gulp-react with gulp-babel, see the deprecation notice. Perhaps gulp-babel has better error handling.\n. gulp-babel should be the same thing, only better. But the error handling should be checked.\n. Awesome! Thanks :+1: \n. The config is included here. What kind of errors do you get?\n. Closing due to inactivity. Config in package.json and .eslintrc should behave the same.\n. Does explicitly running gulp wiredep work?\n. Similar issues have been reported and it always turned out that gulp serve wasn't running or something similar. Refer to our Bower notes for more info.\n. Thanks :+1: \n. I like toggle selection. It would probably be better to suggest this in Inquirer.js repo.\n. Closing this as it should be raised at Inquirer.js, we can't change it :confused: \n. Thanks :+1: \n. Sure :smiley: Is the Babel ecosystem ready, though?\n. We'll update to gulp v4 when it's stable. #124 is the issue that's waiting for v4, so we don't have too keep this open.\n. Released in v1.1.0.\n. I don't understand why so many people thought that generator-gulp-webapp is generator-angular :confused: Thanks for reporting the issue, could you please raise it there as well?\n. This generator is the gulp version of generator-webapp. (There\u2019s no mention of Angular in that blog post.)\n. Just released v1.0.4, thanks for the push :+1: \n. Sorry for the late response, did you try scripts/main.js instead of ../app/scripts/main.js?\n. This part of the docs might be helpful.\n. Sorry, could you rephrase the issue? What is npm install global?\n. I believe other tasks are run in parallel, just that clean task happens to always finish first. Does it work fine even if you don't return?\n. Thanks @w0rd-driven for your work on this. Because adding clean as a dependency to 4 tasks is still a workaround, I wanted to wait for gulp v4 so we can solve this the right way.\n. I have decided to go with run-sequence to fix this problem. It's fixed in 91fe09b78fcb312fe128cc90bc4349d436cd4711 and published in v2.2.0. While I was doing the change I forgot about this PR, otherwise I would suggest it here. Thanks for your effort! \ud83d\udc4d \n. Thanks for the push, will be releasing a new version very soon.\n. Released in v1.0.4.\n. Hello @arcseldon, thanks for bringing this up. Not sure if you're aware of the ESLint config already included in package.json. I believe all you have to do is add \"es6\": true. Once Babel support is added one way or another (#413), we will certainly add this.\n. > Only change I made was in the version of Bootstrap to v.2.3.2.2\nWhich version? Did you type that correctly?\n. > I changed to the tag v2.3.2.2\nMy bad, I didn't know they versioned like that before.\nWhat happens when you run gulp wiredep? Does the problematic path to bootstrap.scss update?\n. I looked more closely at the error. The problem is that bootstrap/variables.scss doesn't exist relative to bootstrap/bootstrap.scss. This is a problem with that version of bootstrap-sass (see twbs/bootstrap-sass#950).\n. I'm guessing you had Sass off, so gulp-plumber was missing. Fix released in v1.1.1.\n. Thanks :+1: I didn't see this PR so I made the change already, but I wanted to merge this to see what will happen. Apparently there are two commits now with the same change? :smile: \n. I believe this has just been fixed by @jkatsnelson in #622. Let me know if this is still an issue and I'll gladly reopen.. What do you mean? We don't have components as separate entities, it's all just in index.html.\n. The repo you're looking for is generator-angular, this is generator-gulp-webapp :wink: \n. My bad, then this is the repo you're looking for :smile: \n. Just remove this:\njs\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.cssnano()))\n    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n. Yes, also turn on the indentedSyntax option in gulp-sass. Let me know if that works.\n. Don't we use those already? :smiley: \n. Try upgrading npm install --global generator-gulp-webapp.\n. Try removing '.tmp/scripts/**/*.js', from the gulp.watch command in the serve task. I believe that's what's causing the issue.\nIf it works for you, I'll apply the fix.\n. We should really specify versions that our recipes work in :sweat_smile: There was a breaking change in gulp-nunjucks-render v2, so try using path in the configuration instead of using $.nunjucksRender.configure, like this. Let me know if that worked.\n. You can make a PR to fix the recipe if you want to. Otherwise I'll do it.\n. Hm, not sure if I understand the question. You usually don't manage a project with generators, you scaffold them once. Can you explain what do you want to achieve?\n. There are different ways you can go about it, depending on your situation. You can have a single gulpfile.js, package.json etc. for all of these templates somehow, but then rebuilds might be slow. Or you could use webpack which is smarter about rebuilds (but webpack has a steeper learning curve). You could ask this question on Stack Overflow or Quora, you'll probably get some great ideas if you explain your situation in details.\n. It creates inline maps. You can see them at the end of compiled CSS files. Do sourcemaps not work for you or you just prefer to have them in a separate file?\n. I haven't, make sure you have the latest version of the generator and that the Babel option isn't off for some reason.\n. The suggestion is to keep paths in variables?\n. There were discussions about this, for example #295. We believe this generator is too simple for introducing variables. The gulpfile.js is not that repetitive, so this would be premature optimization.\n. YES. I tried doing that already in yeoman/generator-webapp#565, but it wasn't well received. What did you have in mind exactly? Having both Grunt and Gulp options?\n. :+1: \n. Nice job!\n. Which version of the generator are you using? Were you getting this error on fresh install as well? This line has nothing to do with the Pug recipe, so there's something else going on here.\nI'll be happy to reopen if you provide more info.\n. Closing due to inactivity.\n. Although .nunjucks is a long extension, I like this idea. I'll wait a bit to see what the others say.\n. @joelbschwartz I would like to merge this PR with the extension .njk (sounds like a better abbreviation). Sorry for the small merge conflict caused by 880d6fd8995b2027d30aab55c4deef01c6bf0042 :sweat_smile: \n. @joelbschwartz stacked extensions seem mostly like a Rails convention. We should then also use .css.scss and .js.babel, but I'm not a fan. I would prefer just .njk if that's ok.\n. Yeah, let's do it like that for now. One question: I've just seen this change: path: 'app/layouts', doesn't this only allow layouts? What about partials? Maybe it's better to have it set to app?\n. I'd prefer to have layouts and includes side by side, if possible. I feel like that is a convention among static site generators. _header.njk is not a layout, it's a partial, so it's confusing to me as well :confused: \nThanks so much for your help :+1: \n. Could you squash your commits? I promise that's the last thing! :wink: \n. @valtido not sure which plugin you are using, but you could submit a PR to add the njk extension. E.g. in sublink-nunjucks that could be this part (I don't use Sublime, so I'm not sure).\n. There are merge conflicts. Could you rebase on top of latest master?\n. Beat you to it :wink: Thanks for the fix!\n. Depends on your templating configuration, I'm not sure what you're using. You could try changing this in html task:\njs\nreturn gulp.src('app/*.html')\nto this:\njs\nreturn gulp.src(['app/*.html', 'app/accessible/*.html'])\nor to include all HTML files except those in includes and layouts:\njs\nreturn gulp.src([\n  'app/**/*.html',\n  '!app/includes/**/*.html',\n  '!app/layouts/**/*.html'\n])\n. @CesarDenis could you share the whole gulpfile.babel.js? It will be much easier to help once I see what templating solution is used.\n@artoric \ndiff\n gulp.watch([\n-  'app/*.html',\n+  'app/**/*.html',\n   'app/images/**/*',\n   '.tmp/fonts/**/*'\n ]).on('change', reload);\nHowever, some paths might break in nested HTML files, you should probably start convert them to / paths.\n. @CesarDenis only watch .tmp/**/*.html for reloading in the serve task, not app/**/*.html as well. You want the browser to refresh once the Nunjucks templates have already been compiled. Also, you put .tmp/*.html instead of .tmp/**/*.html, the former goes only one level deep.\n. js\n  gulp.watch([\n    '.tmp/**/*.html',\n    '.tmp/scripts/**/*.js',\n    'app/images/**/*',\n    '.tmp/fonts/**/*'\n  ]).on('change', reload);\n. @rizqinizamil what is the difference between those two code blocks?\n. Ok, this seems to be a tricky problem.  Correct me if I'm wrong, but the way I understand it is that if you have files at different directory levels extending the same layout with the same useref blocks, assets won't be served/built correctly because they are relative to the HTML files, which exist on different levels.\nRight?\n. This generator is meant more for single page apps, that's why it doesn't support nesting like this. I'll see what I can do, but it will take me some time. If you want, you can create a demo repo with this use case and link it here (let's use Nunjucks), so we can open PRs with our proposed solutions.\n. Thanks for your help :+1:\nThe styles task is still not quite right, though. The diff should look like this:\ndiff\n gulp.task('styles', () => {\n   return gulp.src('app/styles/*.scss')\n     .pipe($.plumber())\n     .pipe($.sourcemaps.init())\n-    .pipe($.sass.sync({\n-      outputStyle: 'expanded',\n-      precision: 10,\n-      includePaths: ['.']\n-    }).on('error', $.sass.logError))\n+    .pipe($.less({\n+      paths: ['.']\n+    }))\n     .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n     .pipe($.sourcemaps.write())\n     .pipe(gulp.dest('.tmp/styles'))\n     .pipe(reload({stream: true}));\n });\nAlso, yes, feel free to dump the Source Maps section :+1: We already include them here by not deleting the $.sourcemaps part.\nWhen you're done, please squash your commits so you end up with a single one.\n. Thanks! Looks great now :+1: \n. Half of them are coming from gulp, nothing we can do about that. gulpjs/gulp#1485\nNot sure where the rest are coming from or how to find that out :confused: \n. > Does anyone know if this will this insert a security issue into production sites?\nI'm pretty sure that's only a problem if you're using it on a server. In this case you're just using these tools to generate the frontend.\nBut bumping dependencies is certainly in order\u2026\n. We're updating dependencies in the next release, but many deprecation warnings will remain. Nothing we can do about that\u2026\n. Interesting minimal approach. My three main concerns:\n- no syntax highlighting, I assume\n- including same things in every page is still repetitive, I prefer having a single layout file which \"wraps around\" the pages\n- as soon as users want something more advanced, they need to switch to something else\nI would rather if people went for the Nunjucks recipe, it still seems fairly simple.\n. I'd definitely like to have some built-in templating solution, because it has been requested so many times. I'll take some time to make the decision.\n. We decided not to have a built-in templating solution, they are too arbitrary without a clear winner. \ud83d\ude15 Would you like to add gulp-file-include as a recipe?\n. We designed paths to assets to be very portable, so they should work anywhere if you just copy over the contents of dist. What doesn't work in particular?\n. In deployment you run gulp, then you upload only the generated dist directory to production. Why are you also uploading app?\n. Glad it works :+1: The linting failed silently or did it produce an output in the command line?\n. Yeah, always look in the command line just to be safe :wink: \n. Which Node version are you running? Try using v4 or later.\nIf that doesn't work, this is a stretch, but try using gulp-postcss + autoprefixer instead of gulp-autoprefixer. So instead of this:\njs\n// in the styles task\n.pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\nwrite this:\njs\n// along with other imports\nimport autoprefixer from 'autoprefixer';\njs\n// in the styles task\n.pipe($.postcss([\n  autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']})\n]))\n. @sassquad before trying the 2nd version you need to install gulp-postcss and autoprefixer. But I'm glad you got it working with a newer version of Node, that was the problem then :+1: \nI'll reopen if that doesn't fix it for @joepegler.\n. Yeah, it's probably unrealistic to still support 0.x versions, considering apparently our deps are dropping support.\n. #453\n. @tpinne wiredep will run automatically as soon as you change bower.json while running gulp serve. You shouldn't change anything between bower:ext comments, because wiredep will overwrite those. You should manually select plugins that you need with the overrides option, or exclude those that you don't need using the exclude option. Check wiredep's configuration for more info.\nHow did grunt version work differently? If it let you to manually remove stuff between bower:ext comments, that was a bug.\n. Thanks for your contribution :+1: However I don't see how this is necessary, the dist directory is cleaned up before each build and it doesn't serve a purpose in development.\nCould you elaborate?\n. I'd like to dump Node 0.x versions, our generator doesn't seem to work on those anyway. #467 \nAll aboard? @sindresorhus @SBoudrias @addyosmani\n. I was hoping pushing to master will apply to Travis tests for this PR, apparently I need GitHub lessons. Could you cherry pick 3e4526f548f7195658dc771e3e41e94f84458419 or something?\n. This has been suggested a few times, see the discussion in #295.\nTL;DR in my opinion the gulpfile is too simple to introduce variables, it's not repetitive enough to be worth it. If you have a use case you can show me step by step where having variables would save you trouble, I'm listening :ear: \n. Oh my. Thank you :+1: \n. It looks nicer because there aren't multiple columns in the initial design, the default width looks too wide. But thanks for raising this issue, I was wondering the same for a second :smile: \n. Yes. You can checkout the legacy-grunt branch and npm link that as the generator.\nsh\n$ git clone https://github.com/yeoman/generator-webapp\n$ cd generator-webapp\n$ git checkout legacy-grunt\n$ npm link # this will install dependencies and link it as the global package\n$ cd path/to/your/project\n$ yo webapp\nLet me know if that works.\n. https://github.com/yeoman/generator-webapp/pull/481#issuecomment-258635233\n. While we're at it, could you please change this:\njs\ngulp.watch('app/scripts/**/*.coffee', ['scripts', reload]);\ninto this:\njs\ngulp.watch('app/scripts/**/*.coffee', ['scripts']);\nthen remove this line:\njs\n'.tmp/scripts/**/*.js',\nfrom the serve and serve:test tasks. This removes excessive reloading, we want to reload just once, when all files are compiled, so please make sure this at the end of the scripts and scripts:test tasks:\n.pipe(reload({stream: true}));\nPlease make sure to add correct diff symbols (- and +).\n. I just re-read the title of your PR. You don't have to do all that, just what I commented on the diff.\n. @inspiredbytes thanks for your contribution! \ud83d\udc4d \n@sindresorhus @ivan-vilches this recipe needs other updates, it has some mistakes unrelated to the PR. I'll post here in an hour when I'm done.\n. Actually, tomorrow, there's more work than I thought.\n. @inspiredbytes @ivan-vilches I thoroughly updated the recipe. Now it should work just fine with the latest version of generator-webapp.\n. @alphapilgrim sorry for the super late response. These babel-register errors totally bum me out because we've been receiving a lot of them and I have no idea how they happen. Could we set up some kind of screen share or, better yet, a tmate session?\n. :confused: Well, let me know if that happens again.\n. Yeah, babel-preset-es2015 is missing in your case.\n. It's best to put this as part of the production build step, i.e. in the html task. Currently we're running cssnano, but you can combine uncss and cssnano using lazypipe with gulp-if.\n. I haven't tested it, but by following these docs you can do something like this:\n``` js\nconst stylesChannel = lazypipe()\n  .pipe($.uncss, { html: 'app/*.html' })\n  .pipe($.cssnano);\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/.html')\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', stylesChannel()))\n    .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\n``\n. Yeah, that's why I shy away from those tools. There's feature coming to Chrome DevTools for auditing CSS, basically you start auditing, click around your app and DevTools highlights which parts of your CSS are not being used. I think that feature is in Canary, Paul Irish talked about it, but I wasn't able to find it.. Thanks!\n. Thanks!\n. @jolugama I agree. Could you submit a PR? :grin: If you don't have time, that's ok.\n. Fixed with #489.\n. @danmv it's coming from Sass, apparently, so you should dig there if your error message has the same stack trace.\n. Thanks!\n. It should work out of the box. Are you running v2.0.0? Do you have JavaScript enabled?\n. It should work without../../because we're [modifying Sass load paths](https://github.com/yeoman/generator-webapp/blob/25b0f3560211207f3cf2c27bacae2d46ded28758/app/templates/gulpfile.js#L18) to include the project root directory. Are you getting an error? Does it happen with a fresh install or have you changed something?\n. This is because of modified load paths. I guess this approach is problematic if you have any kind of path checking \ud83d\ude15 You could remove [this line](https://github.com/yeoman/generator-webapp/blob/25b0f3560211207f3cf2c27bacae2d46ded28758/app/templates/gulpfile.js#L181) from your gulpfile and rungulp wiredepagain to fix all the paths withinbower:scss` comments.\n. This line will error out then, no?\njs\n.pipe($.clean());\nI'm not sure why it's cleaning after deployment anyway. But it should clean up before, which is not happening currently. Seems to me something like this is needed:\n``` js\ngulp.task('upload', ['build'], () => {\n  // gh pages stuff\n});\ngulp.task('deploy', ['clean'], () => {\n  gulp.start('upload');\n});\n```\nWhich gets around the issue where Gulp cannot specify the order in which tasks will run.\n. Oh, my bad. I thought you were removing gulp-clean from the recipe, not adding it. Nevermind :grin: \n. You need to bower install stuff after running gulp serve. Read this section to understand that gulp serve watches your bower.json for changes and runs gulp wiredep. If you ran bower install without gulp serve running, you can run gulp wiredep manually.\n. @miketricking running gulp wiredep does nothing? There is no angular-ui-sortable between the bower:css comments?\n. When updating major versions of npm packages, you should either run npm install package@2 or npm install package@latest.\n. This is a tough cookie. But frontend dependencies have fewer and fewer images (e.g. a carousel library should use inline SVG), so we decided to leave images up to the user. It's probably easiest to just manually copy images over to your project once.\n. Yeah, that would work assuming the images are listed under the main field in bower.json, which is rarely the case in my experience.\n. Thanks for your contribution \ud83d\udc4d I was thinking about this as well, but imagine how frustrating it would be having that task rebuild the app every time. Maybe you want to shut down the server for some reason, then later check again, now you have to rebuild again. If you have a good reason for this that I overlooked, I'm open to convincing.\n. Hm, you're right. The main reason why you'd want to restart serve:dist is probably to check new changes. Could you rebase and resolve conflicts? Then I'll merge it.\n. Thanks! I changed it to run default instead of build to ensure a clean build.\n. Bootstrap depends on jQuery, so we don't explicitly add it if Bootstrap is included. It looks like you want to add it as a development dependency, so your command should work just fine. Can you try it in an isolated environment, just bower install jquery#1.12.3 --save-dev to see if it was added in dev dependencies?\n. There are two possible solutions, other than the one you proposed:\n1. '.tmp/*.html' shouldn't be in gulp.watch, does just removing it solves the problem for you?\n2. solution 1 + remove .pipe(reload({stream: true})) and add reload to the array tasks when watching .jade files, i.e. ['views', reload]\nIf none of these work, I'll use the solution you proposed.\n. Fixed.\n. I will reopen if we get new information. A fresh build doesn't ignore SCSS files.\n. Does this checklist help? What happens when you run gulp wiredep?\n. Your own JS files are not automatically wired up, because we don't know in which order you might want to put them and whether you are compiling them with browserify etc.\n. Close due to inactivity. If this is still an issue, I'll reopen.\n. This is generator-webapp, not generator-angular (if that's the one you were aiming for).\n. ESLint rules.\n. Thanks!\n. Thanks!\n. @Trost123 good point. I agree with the 1st step, but the 2nd step may be problematic because nunjucks and reload are executing at the same time, it's just a coincidence that nunjucks finishes before browser reload. We should add it at the bottom of the nunjucks task, like we do in the Pug recipe.\nWould you like to submit a PR?\n. I already tried this with Grunt and it didn't work out. The fatigue of having to categorize tasks and jumping between files is greater than the small benefit of doing this. Also, gulpfiles are much smaller, therefore easier to manage.\n. Also, those don't seem to be best practice, they are just recipes for those who want it.\n. @sindresorhus @kevva because this has been requested multiple times (#472, #295\u2026), do you think we should finally add it?\n. @srahulprdxn hey! I tried following the recipe myself and everything worked. I'm pretty sure that in your default.njk (or whatever your layout file is called) between comment blocks you are referencing a file which doesn't exist, so gulp-useref crashes. Could you also paste your .njk templates? Did this happen on a fresh install? Did you modify anything else than what the recipe instructed?\n. Closing due to inactivity. I will gladly reopen when we get new info.. @denysbutenko AFAIK that won't work, useref won't download remote files.. The dependencies should be injecting automatically. If you have to manually add them, something is wrong, gulp wiredep should work.\nPlease list the exact steps, what you're doing and you expected to happen. (Reproduce this from the fresh install.)\n. We should run wiredep as a part of the serve task to avoid these problems. Currently gulp can't run tasks in sequence, but we can get around it by creating an assets task containing styles, scripts and fonts, which will depend on wiredep, then serve would simply depend on assets.\nNot sure if there are drawbacks to this approach. If anyone's up for a PR, speak! \ud83d\ude09\n. @Trost123 yeah, that's also a good workaround. \ud83d\udc4d \n. @thepossumstudio hey, thanks for being so clear and detailed!\n1. This one puzzles me, Gulp is supposed to detect both gulpfile.js and gulpfile.babel.js, the difference being that gulpfile.babel.js should be parsed with Babel. I tried this myself and it works fine \ud83d\ude15\n2. There is an open PR for this: yeoman/generator-mocha#40\nI'll keep this open until these are resolved. Not sure what to do about the 1st issue. Does Gulp report that it cannot find the gulpfile?\n. What @neilhem said \ud83d\ude01 \n. I haven't had a chance to play with it yet, but it does look awesome. I'd love to have it, but in the form of a composed generator.\nIdeally, there should be a generator-ava. More ideally, there should be a generator-test which composes generator-mocha, generator-jasmine, and generator-ava, so we can compose generator-test.\nI'd be up for creating generator-ava, but I can't promise \ud83d\ude01 \n. I updated the recipe and fixed some things, it should work properly now. Let me know if you have any more problems with it.\n. Have you checked taptapship/wiredep#217 out?\n. Thanks Kevin!\n. I'm going to need more info than that \ud83d\ude01 (I'll reopen if there was an actual problem.)\n. Yeah, node-sass is built with the current version of Node, so you need to rebuild it if you update Node.\n. You're not the only one, I don't find it particularly useful either. I think simply passing ghostMode: false to Browsersync should work.\n. @kb-git did any of the provided solutions fix your problem?\n. Closing due to inactivity. Will reopen if new info is provided. \ud83d\ude09 . @rbosneag I believe you're using generator-cg-angular15, not generator-webapp. Correct me if I'm wrong.. When you change the initial structure, something is not working and you don't know where it wen't wrong, it's best to ask questions like these (support questions) on StackOverflow under the tag #yeoman.\nAlso, it helps when you try your best to isolate the issue and describe exactly what changes you made from the initial build. It's easiest to track that down when commit immediately after you scaffold (run yo webapp). Then using git diffing you'll know exactly what you changed.\nI moved styles from styles directory to css and did a search and replace in the gulpfile.js from app/styles to app/css and it worked fine. So your gulpfile must be failing elsewhere, probably at templates. Sometimes gulp fails silently at some tasks, so you have to isolate the issue by taking out pieces and see when it starts working again.\nWhen/if you post your question on Stack Overflow, please share the link here so we can answer.\n. Just remove those buid:css and build:js comments from index.html where you don't need minification  and concatenation.\n. If you don't want them concatenated and minified on build step. Otherwise why would you need to?\n. Just in production, which is a common performance pattern. That's what those build comments do.\n. @sscarduzio thanks for letting us know, I've added it to the docs. Let me know if it's clear enough.\n. Hey :smile: Are you closing the issue because you solved it?\n. It definitely should not be that slow, mine runs under 1 second. It has to be something about your environment, so please give me any details that you can. Version of this generator, Node version etc. If I don't find a clue there, I can try to solve it on your machine using tmate.\n\nAlso, upon installation, I noticed a new option, Choose your DSL. What is that all about?\n\nThat's from generator-mocha. Maybe composed generators should have their name included before the question, but that issue should be taken to yeoman-generator.\n. Yeah, Bootstrap is huge and libsass may run faster or slower depending your machine. The fact that it completed under a second without Bootstrap indicates that.\nI'm still wondering why it took almost a minute the first time, but I don't think it's an issue with this generator. Which generator options did you choose? Sass or CSS?\n. You mean you accidentally made a PR?\n. Actually, it would be a bit silly for us to add gulp-data to every template recipe, and implementation of gulp-data is very arbitrary, so we will trust our users to figure it out on their own, or alternatively stumble upon this issue. \ud83d\ude04 \n. Congratulations for your first contribution! Sorry for getting around to your PR so late \ud83d\ude05 Everything is great except one tiny indentation bit in the following comment\u2026\n. I was talking about the two lines right above my comment, not the ones you edited now \ud83d\ude01 Could you revert that change and fix those instead?\n. Great! I squashed your commits and pushed them manually, because squashing can be a drag for new contributors. Congratulations for your first contribution! \ud83c\udf89 \n. Thanks! How did that get in there \ud83d\ude05 \n. I bumped to a newer version of generator-mocha which includes a more verbose message:\nChoose your style of test DSL for Mocha (bdd, tdd)\n. This sounds like an obscure bug specific to your environment. We're using BrowserSync as our server, you could try searching through issues there. Also, try with the BrowserSync's CLI.\n. Lower versions don't support arrow functions and other ES2015 features. You should've gotten an error when installing generator-webapp that your Node version isn't high enough, as specified in our package.json. Perhaps you missed it?\n. Not sure why Travis isn't running\u2026 could you just run npm test if you haven't, just to be sure that tests pass at least for your Node version?\nThanks for the PR \ud83d\udc4d \n. Thanks \ud83d\udc4d \n. What is the error you're getting? Which Node version are you running?\n. If you provide valid steps for reproducing this bug (from fresh install), I'll reopen and we'll fix this. But it seems like you modified something, which makes it no longer work.\n. @koltejas sorry, I didn't quite understand. Could you describe the expected vs. actual dist directory?. How about \"Which additional features would you like to include?\"\n. Great! Could you please squash your commits into one?\n. @plonko now there are 4 commits, the goal is to have 1 commit (in this case). \ud83d\ude01 Here's an article on how to do it. After you squash the commits, a force push (git push -f) will be necessary. If you need help, let me know. \ud83d\ude09\nYou can see how many commits there are in a PR by clicking on the \"Commits\" tab.\n. @neilhem thanks, totally forgot about that. \ud83d\ude05 \n. You're right, the build step is not taken care of. Yes, the recipe is following the former approach, where templates are compiled into JavaScript. If you'd like to complete the recipe with the build step, it would be greatly appreciated \ud83d\udc4d Let me know if you need help.\n. @amobrem does #565 help?\n. @amobrem not sure, I'll have to try out the recipe myself, next week.. @AurelioDeRosa that would be useful. In the meantime, you could try gulp-compile-handlebars or gulp-handlebars-html.. #565 is merged and corrected in master. Let me know if there are any problems with it.. So it works in development? What did you change exactly from the initial build? Can you give me the steps to reproduce this?\n. Since you're already using browserify, you could use npm for dependencies instead of bower and require them as modules from your files.\nFrom this it's still hard to see what could be the problem, because your scripts task only deals with bundle.js, not vendor.js. Did bundling vendor files stop working after you implemented the browserify recipe?\nCould you start from a fresh install when everything is working, and gradually start implementing your desired setup until your issue occurs? Or provide a more complete demo?\n. Closing due to inactivity. Will gladly reopen once we get more info. \ud83d\udc4d \n. Good catch, thanks!\n. We should write a Compass recipe, I'm surprised that there isn't one already.\n. Hey, sorry for the late reply. Thanks for your contribution! Could you also delete the Jade recipe? It feels weird to have them both. \n. Thanks for your PR \ud83d\udc4d The problem is that wiredep might not be run first, all these tasks are run in parallel, which is a limitation of Gulp v3. We should think of a solution which ensures that wiredep will be run first, maybe as a dependency of the default task?\n. Have you tried fixing the syntax error like @neilhem suggested?\n. @lmdrx I assume the issue is resolved then? I'll gladly reopen if that's not the case.\n. @eBaeza I'm sorry that I'm so late with the review, please let me know if there's anything else I can help with.\n. Hey \ud83d\ude03 The problem is that there's no guarantee that set-prod-mode will be executed before the fonts task, because these tasks are executed in parallel. Maybe add set-prod-mode as the dependency of the default task?\n. Maybe there's a way to this without creating the set-prod-mode task just to set a variable. Have you tried setting the variable in the default task instead?\njs\ngulp.task('default', ['clean'], () => {\n  dev = false;\n  gulp.start('build');\n});\nThanks for you contribution ideas! \ud83d\udc4d I'd be interested in running wiredep before serve and default in a separate PR. I think for default there's no need for run-sequence, just add it as a dependency next to clean, but serve is a bit tricky. You can open a PR with the suggested solution and we can discuss from there. \ud83d\ude09\nGenerating image sprites and extracting critical CSS are great ideas for recipes. \ud83d\udc4d \n. @Trost123 would you like to send another PR for this if you still want this change? I'm so sorry for the delay.\n. This is a good idea, I'd like the generator to have a flag like this.\n. a month later \ud83d\ude13 \nDid you find why you were receiving that error? It looks like you had a syntax error in your JS, so UglifyJS was crashing.\n. @vmahadev are you still having issues with this? The previous error was because of a syntax error, is there a different error now?\n. @dendrochronology yeah, gulp-if has some problems with passing wrong files through. We added a workaround for this and I just released it in v2.4.0. The fix is 0ee21efe8ca883a7dcc6c4a64f151af5ad79c208, so please try it. \ud83d\ude09\nI'm closing this due to inactivity. I will gladly reopen once we get new info.. The recipe configures browserify to only understand JS modules. Have you tried searching for a transform suitable for this job? I'm not sure how Angular wants those HTML modules processed.\n. We just teach you how to set it up, you customize it. \ud83d\ude09\n. On my machine .map.js file ends up in .tmp/scripts as expected. \ud83d\ude15 Also, I don't understand why would '.' write the map to app/scripts, but '../scripts' would write it to .tmp/scripts\u2026?\n. Have you tried updating gulp-sourcemaps to v2? Our version is a bit outdated\u2026\n. I'm curious about those conditional comments for IE7, as we don't have those. What did you change exactly and which version of generator did you scaffold your project with?\n. It looks like gulp-uglify is trying to parse HTML, I wonder why\u2026\nDoes this happen on fresh install or are there some steps to reproduce this? There have been few releases since v2.0.0, does upgrading and building again help?\n. @monomichael maybe, does it help to update gulp-if, if you don't already have the latest version?\n. Awesome! In the recent versions of generator-webapp we already have gulp-if updated, so hopefully this isn't an issue anymore. I will gladly reopen if someone still has problems with this. \ud83d\ude09 . @sherifsaleh does this happen on a fresh install? Did you modify anything else? Is your gulp-useref up-to-date?. @hamedtaha are you using the latest version of generator-webapp?. @hamedtaha so this happens on a fresh install or did you modify anything? Could you paste your gulpfile.js?. I don't understand. The [new line] that you described don't match the generated index.html. It should look like this: <!-- build:js scripts/vendor/modernizr.js -->[new line]<script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\"></script>[new line]<!-- endbuild -->\nCould you paste your index.html?. This:\nhtml\n<!--\nendbuild\n    -->\ncouldn't have happened with our setup, you did that somehow. Maybe that's what was throwing gulp-useref off.\nHow are background images related? Also, those URLs aren't processed in any way.. Ok, let's back up \ud83d\ude04 what is the issue exactly?. But you said that it's working after fixing that endbuild whitespace, or?. @weltonrodrigo I hope you managed to solve this problem using @neilhem's suggestion. This use case is too uncommon for us to add it to the generator. I was thinking of eventually revamping the test generators, but that's not related to this one.\nLet us know if we can help further!\n. I agree with @sindresorhus, it would be great as a recipe!\n. @SakoMe glad that you solved your problem! In future, yo doctor can detect stuff like that. \ud83d\ude09 \n. @heinhoang try updating yo (FountainJS/generator-fountain-webapp#56). If that didn't help, I'll reopen.\n. Excellent, thanks so much! There's just two things:\n1. Why does changing an HTML file trigger views?\n2. This way changing an HTML file in app no longer triggers a page refresh, no?\n. Got it, I didn't know you can add HTML files to Nunjucks. Thanks so much for your contribution. \ud83d\udc4d \n. @Trost123 sure! Would you like to \"correct\" it by submitting a PR?. Hey, thanks for reporting this. I will release a patch version today and let you know when it's out.\n. v2.3.1 released.\n. Thanks a bunch! \ud83d\udc4d \n. I'll reopen this as a reminder to incorporate gulp-gh-pages if it indeed there is something wrong with the recipe.\n. @s3c0nDD what do you mean? We don't generate a README.md yet.. This is the README of the generator-webapp project. This issue was referring to the customized README generated by the yo webapp command (which doesn't exist yet). Instead of people having to look in this project's README for usage instructions, they would have it right there in the scaffolded files.. Oops, we already have an issue for that. #560\n. @neilhem yeah, Bootstrap's JS plugins are inserted into a separate useref comment block, but it could just as well be a part of the vendor.js comment block, which would save an HTTP request.\nNow that I think about it, I remember I wanted to change it previously, but it was tricky\u2026\n. @neilhem good idea!\n. One way is to include them all in the vendor.js block:\nhtml\n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<!-- endbower -->\n<!-- insert Bootstrap plugins here -->\n<!-- endbuild -->. Might get invalidated by #592.\n. @eddiemonge what do you mean?\n. It still sucks to have outdated docs lying around. But yeah, I see how silly my idea was, especially because some recipes can't be fully integrated, like the CoffeeScript one which involves changing tests.\nThanks for the talk.\n. Whoa\u2026 thanks! My publish command silently failed I guess. \ud83d\udc4e \nI bumped the version and published from there, even though an earlier commit is tagged (otherwise I'd have to force push). Hopefully that won't cause problems\u2026\n. v2.3.2 released.\n. v2.3.2 released. Sorry about that. \ud83d\ude05 \n. That is correct, thanks! \ud83d\udc4d \n. @stibay thanks!. npm rebuild rebuilds dependencies, which is useful for those who contain C/C++ (your first code block hinted that). Usually when you compile a C/C++ dependency with one Node version, it won't work on another.\n. Great question, I don't think we need them in production. Feel free to open a PR \ud83d\ude09 \n. I think generator-webapp upgraded successfully, what does npm ls -g generator-webapp say?\nThis bower error looks like you don't have Bower installed globally. What does bower --version say?\n. To install Bower:\nnpm install --global bower\nI'm not exactly sure about the warnings, though the last warning means you don't have permissions set properly there.\n. The key question here is: does it work? \ud83d\ude09\n. #606 . You're using an old version of generator-webapp. Please upgrade:\nnpm install --global generator-webapp\n. It sounds like you made some modifications to your setup since you initialized it. Could you provide steps to reproduce this?. But users should have yo installed, no? The fact that npm is sometimes not registering yo to be installed is another problem\u2026. Yep, you're right. peerDependencies make more sense for non-global dependencies.. Hi @ui-aliraza, thanks for submitting a PR! This looks like treating a symptom rather than a solution to the problem. The html task already depends on styles, so styles should definitely be executed during build.\nDoes this problem happen for you on a fresh install or did you modify something which could've caused the issue?. Could you clarify what you mean by \"commented state\"? How did you change the styles?. I would appreciate that, thanks. \ud83d\udc4d . @ui-aliraza ping \ud83d\ude09 . Closing this due to inactivity. I will gladly reopen once more info is provided. \ud83d\udc4d. @WadeShuler thanks for the contribution! \ud83d\udc4d Isn't the line right above saying to install yo globally?\n\n\nInstall dependencies: npm install --global yo gulp-cli bower. Oh, I just saw your explanation in another issue. Instead of double-installing it like this, I think we should tell users to ignore the warning. What do you think?. @gsportelli you should import variables.scss outside of bower:css block comments, otherwise that @import statement will disappear as soon as wiredep is ran. Do this instead:\n\n\n```scss\n$icon-font-path: '../fonts/';\n@import \"variables.scss\";\n// bower:scss\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\nBtw, do all these themes consist only of _variable.scss?. @gsportelli no, it's wiredep, we're calling it in this task.. Concerning the _bootswatch.scss file, you should probably import it after the comment block.. It should work on 4.4.7, I tried it myself.\n\nmake sure you have latest version of npm and yo installed:\nsh\nnpm install --global npm\nnpm install --global yo\nnpm --version # should be 4.0.5\nyo --version # should be 1.8.5\nrun yo doctor to check if there are any other problematic details about your environment, then\ntry running yo webapp again.. Don't worry about that message, it's a known npm issue, that's a false warning.\n\nSo after reinstalling generator-webapp yo webapp still doesn't work?\nI can't reproduce this, in my case require('ansi-regex')() is indeed a function. The only version of ansi-regex where it wasn't a function is v0.1.0, maybe that one got installed in your case. Try digging up in your global node_modules (check ansi-regex/index.js), hopefully you'll get a clue what happened.\nI don't think this is an issue with this generator, but something specific to your environment, so I'm closing this.. @Frondor unfortunately the vue repo doesn't seem to have a bower.json defined at all. Usually wiredep reads the main field of bower.json and injects those files. You could raise an issue there to create a bower.json with the correct main field.. > Using the default settings nothing happens\nThe expected behavior is that dist/images is populated with optimized copies of images in app/images. Run gulp clean, then run gulp images, does dist/images exist and does it contain images?. Didn't verify, but I'll reopen to remember to check later. Thanks for reporting.. Thanks so much! \ud83d\udc4d . Done. Thanks! \ud83d\udc4d . Personally I like npm + webpack (haven't tried Rollup yet) over bower + wiredep. On one hand adding a module bundler adds complexity, on the other wiredep was confusing to many users, and with a module bundler people can even require stuff like fonts and images. But a module bundler would probably limit this generator to only single page applications.\nI would love to hear opinions about this.. Thanks for pushing this important issue @alexej-d. Unfortunately Yeoman still hasn't come up with a solution for this problem (see yeoman/yeoman#1521 and taptapship/wiredep#234). The most sensible solution is probably to add npm support to wiredep.. @clabnet thanks for listing all the relevant versions! Unfortunately I was not able to reproduce this error. Does this happen on a fresh install? Did you try @gkobilansky's solution?\nTo me it looks like you have invalid JavaScript somewhere. Usually Babel would catch it in development, but you built your app without it. Does gulp lint pass?. @feesh thanks! Could you please check if the b in /\\.css$/b is required for the fix to work?. @clabnet we applied some additional fixes in the meantime, could you try this?. @clabnet I meant that you could apply that change to your generated gulpfile.js, but I just released v2.4.1 so you can update and try it that way too, whatever you want. \ud83d\ude09 . Thanks!. Also, please fix the tests if you can.. @MarkyMarkNo1 awesome! Lastly, I just wanted to know how the changes to the html task are related to Bootstrap 4.. Thanks! \ud83d\udc4d . Thanks!. Maybe we could advise using a gitignored .env file + dotenv.. Thanks!. I will release a version soon.. Thanks! Can the space be before class (inside the if statement), rather than after h1? That way we won't have an extra space if legacyBootstrap is true.. Does this happen with a fresh install or did you change some things? Could you provide steps to reproduce this?. I'm not sure what you mean by \"html5 mode\" and I'm not familiar with connect-modrewrite, but assuming you're trying to build a single-page application, have you tried using connect-history-api-fallback?. I don't use Heroku, but are you sure that package.json got deployed to Heroku? Is there any way to see that?. If you see the very end of that recipe, it says that you should deploy only dist, so I'm guessing that should be your root. Is that possible to do?. Yeah. In any case it appears that modifications to the recipe should be made. If you'd like to submit a PR once you get it working, that would be great. The simpler, the better. \ud83d\ude09 . Wow, thanks! \ud83d\udc4d . I don't think there's a reason for that, thanks for noticing. You can send a PR removing these lines.. Merged, thanks!. Update to the latest version of generator-webapp, or you can copy the fix from here (regexes instead of strings as first params to $.if()).. Wiredep with Pug support is not yet released. In the meantime you can add the config yourself, I think this should do it:\njs\n.pipe(wiredep({\n  exclude: ['bootstrap'],\n  ignorePath: /^(\\.\\.\\/)*\\.\\./,\n  fileTypes: {\n    pug: {\n      block: /(([ \\t]*)\\/\\/-?\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/-?\\s*endbower)/gi,\n      detect: {\n        js: /script\\(.*src=['\"]([^'\"]+)/gi,\n        css: /link\\(.*href=['\"]([^'\"]+)/gi\n      },\n      replace: {\n        js: 'script(src=\\'{{filePath}}\\')',\n        css: 'link(rel=\\'stylesheet\\', href=\\'{{filePath}}\\')'\n      }\n    }\n  }\n})). Have you installed gulp-cli globally? npm install --global gulp-cli? This issue is definitely not about this generator, so I'm closing this issue, but will stick around to help with this problem. \ud83d\ude09 . Our documentation instructs to install it globally, but perhaps it's easy to miss.. Can you share your gulpfile.js?. I thought that maybe you modified gulpfile.js, but this should work fine. It's really hard to tell what could be wrong at this point, either something else is going on here or there's something seriously wrong with Gulp. \ud83d\ude15 . @jdahdah I'm sorry to hear that \ud83d\ude22  you seem to have modified gulpfile.js far beyond the recipe. Could you work on isolating the problem and providing a more minimal demo?. Also, generator-gulp-dahdah wouldn't register for me, I tried both installing it globally and npm linking the cloned repository.. @jdahdah yeah, please, this seems to be related to the Pug recipe.. import/export (i.e. modules) would work only if we were using a module bundler like webpack or browserify, but we're just using gulp-useref. Don't expect modules to work until the native browser support for that lands. Write your JavaScript as described in the link above. \u261d\ufe0f . Closing in favor of #649.. As much as I love webpack, adding a recipe for it would be weird because webpack would entirely replace Gulp. \ud83d\ude04 It wouldn't really be an addition, it would be a rewrite.. Should be #{$font-path}/hinted\u2026, not #{$font-path}/fonts/hinted\u2026, right? Otherwise your path ends up as ../../fonts/fonts/hinted\u2026.. I just checked if this functionality works with the fresh build and it does. You did something very specific in your setup which disabled this functionality. It's best if you ask a question on Stack Overflow, providing more details. You can also paste the link to the question here so we can answer.. So you have lodash available in development, but not in production, or not at all? Maybe all you need to do is override your bower.json to include that file. Something like:\njson\n{\n  \"dependencies\": {\n    \"lodash\": \"~4.17.4\"\n  },\n  \"overrides\": {\n    \"lodash\": {\n      \"main\": \"dist/lodash.min.js\"\n    }\n  }\n}. Thanks!. Did the yo webapp command fail in any way? Did you have Bower installed globally?. You can use gulp-debug to try to debug the issue. Check what's in the stream before $.useref.. @rizqinizamil maybe because you put the regex in quotes? The gulpfile.js we generate doesn't have quotes.. I have no idea what that error means. \ud83d\ude15 You can't run any Yeoman generator or just this one? Does this happen on a fresh install?. @jaysunwalter123 hey! They should be injected as soon as you run gulp serve, otherwise run gulp wiredep manually.. Hey @Migacz85, I don't work with PHP and MySQL, so I may not be very useful. I know that wiredep supports PHP files, so you should be able to set up dependency injection. Minification is also probably a matter of replacing .html with .php, with the possible exception of HTML minification (although maybe that's supported as well).\nHave you tried to do this? Where did you get stuck?\nI'll close this because it's not an issue with the generator, but we can continue the discussion.. You can share your repo with your starter PHP and MySQL setup and I can help you that way.. @mblase75 have you changed your mind about this?. Thank you! \ud83d\udc4d . For that we would need a module bundler. We should probably integrate one soon, and it should probably be browserify, because it integrates well with Gulp. I will close this in favor of #618, because removing Bower will imply some kind of module bundling, which will imply ES6 imports. \ud83d\ude03 . Thanks for fixing this! \u2764\ufe0f . I released v3.0.1.. Hi @ryzokuken, thanks for raising this issue. \ud83d\udc4d The process is not as easy as switching package managers, we need a way to easily consume them. I'm closing this in favor of #618.. @tsndr congratulations on your first PR! Could you give more context for this PR? What problem does it solve?. @tsndr how does that play with the rest of the build system? For example, why would we still use useref for JS if we can include all JS files with require?. Sorry, I didn't mean to discourage you. I really love webpack and I would like to integrate it with generator-webapp, I'm just not sure to what extent this works and what is recommended usage. Would we instruct users to only use this for local files? Also, if we first apply Babel then webpack, could we get ES6 import syntax?\nI get confused when Gulp and webpack mix. I usually use one or the other.. Yeah, this is an unfortunate browser annoyance. Any unique GET param will work, people usually go with ?v=1 then increase that number as they change favicons.. Thanks!. The documentation says to run gulp, not gulp build. gulp also cleans and runs wiredep, so that's the task you should use.\nThanks for being so kind to contribute, let me know if everything is clear and if I should reopen this.. I totally agree, \ud83d\udc4d using them as separate plugins always seemed unnecessarily inflexible to me. . Thanks @MarkyMarkNo1! What are you trying to override? Does the overrides field not work?. Ok, to me this is fine because Bower is deprecated anyway, we can't expect a nice solution because of its limitations.. Awesome, thanks!. I don't know if this issue is relevant anymore, but is there a way to use gulp-rev with gulp-useref?\n. There was a discussion about this in jonkemp/gulp-useref#10. The conclusion was that gulp-useref and gulp-rev cannot be combined, the only way for referencing revved files to work is that gulp-useref itself implements the revving functionality, which is outside the scope of that plugin. :confused:\n. @ahmadalfy are you up for a PR? Otherwise I'll add this when I find time.. Ruby Sass is slow, Compass makes things much slower. I don't think it's worth it, people should stop writing their Sass libs to be dependent on Compass, that sucks for people who don't use it. Other tools are starting to replace Compass features, like Autoprefixer, image spriting tools etc. That's the way they should be, separate tools, not one giant mass.\n. @Snugug I completely agree that libsass shouldn't be the default yet, and probably not for a long while. I was talking about adding Compass to this project. Yeah, I also agree about the plugins, I didn't think about it in terms of distribution.\nnode-sass has a section about the differences, it's not specific, but it's a nice summary.\n. I agree. I'll submit a PR when I find time, feel free to beat me to it :D\n. This seems like the right way to go. I don't know why were the files output in the app directory in the first place.\n. Also, you might want to add .tmp to the clean task.\n. Now the connect task changed. I think you only need to add .use(connect.static('.tmp')).\n. This was talked about in #18, feature-wise libsass is not close enough to Ruby sass for us to just replace Ruby sass. We could offer it as an option, like in generator-webapp.\n. In 1.2.1 BrowserSync added routes (shakyShane/browser-sync#197), so we should be able to continue avoiding it :)\n. I think setting basedir to ['app', '.tmp'] and  routes to '/bower_components': 'bower_components'.\n. @shakyShane you know a thing or two about BrowserSync, right? :) Isn't routing supposed to work from the current directory, not basedir?\n. The PR is correct, SCSS files are getting compiled to the same directory. #47 is correcting that, because it's weird :D\nThis is a good way to go because you don't want CSS injected when the SCSS is modified (common mistake), you want it injected when SCSS is compiled.\n. The reason why I wanted to leave the Sass ignorePath to ../bower_components/ was because the code is a bit prettier and it's easier to @import new stylesheets from components, e.g. I don't import the whole Bootstrap, just parts that I use, but the paths get quite long and unreadable:\n``` scss\n$icon-font-path: \"/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/\";\n// Core variables and mixins\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/variables\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/mixins\";\n// Reset\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/normalize\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/print\";\n// Core CSS\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/scaffolding\";\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap/type\";\n// ...\n```\nAside from my preferences, leaving the ignorePath makes sense for Sass because its loadPath is set to app/bower_components. If you're going to remove ignorePath, you can remove loadPath as well, for consistency.\nWhat do you think?\n. Yes, you're right. It's best to be obvious, users who prefer it the other way can easily add a loadPath.\nRemoving the loadPath won't break anything.\n. The fonts task seems to be unfinished, I'll fix that soon.\n. Append overrides to your bower.json:\njs\n{\n  \"name\": \"webapp\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass\": \"twbs/bootstrap-sass#~3.1.0\",\n    \"modernizr\": \"~2.6.2\",\n    \"jquery\": \"~1.11.0\",\n    \"fontawesome\": \"~4.0.3\"\n  },\n  \"devDependencies\": {},\n  \"overrides\": {\n      \"fontawesome\": {\n          \"main\": [\n              \"css/font-awesome.css\",\n              \"fonts/fontawesome-webfont.eot\",\n              \"fonts/fontawesome-webfont.woff\",\n              \"fonts/fontawesome-webfont.ttf\",\n              \"fonts/fontawesome-webfont.svg\"\n          ]\n      }\n  }\n}\nthen run gulp wiredep and it should work ;)\n. Actually, fonts/* works, so you don't have to specify each one.\n. It should work in development because it should get fonts from bower_components/fontawesome/fonts, you don't need it in the app folder. Can you show me your directory structure and your gulpfile.js? Why would you want to put fontawesome in devDependencies?\n. Does it work then?\n. Yeah, I accidentally noticed it in wiredep's README :smiley: \n. Just when you were beginning to like me, huh? :smiley: \n. Fair enough. Luckily, Gulp is so simple that implementing CS takes 20 seconds, unlike Grunt.\n. No problem :) This also fixes #41 and #15.\nBtw, 0 PRs :beers: \n. Hell yeah! Though Modernizr will be the party-pooper, it seems.\n. You take BrowserSync, I'll take fonts. (Not very fair to you, but BrowserSync is too fancy for me to grasp quickly.)\n. So :arrows_counterclockwise: is a :tada::poop:!\n. A quick fix:\n``` js\ngulp.task('fonts', function () {\n    gulp.src('app/bower_components/bootstrap-sass/vendor/assets/fonts/bootstrap/*')\n        .pipe(gulp.dest('dist/bower_components/bootstrap-sass/vendor/assets/fonts/bootstrap'));\nreturn $.bowerFiles()\n    .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest('dist/fonts'))\n    .pipe($.size());\n\n});\n```\nBut I suck at Gulp, so I would appreciate if someone could help me structure this, with as few hardcoded paths as possible.\n. Waiting for new bootstrap-sass release, it's going to have some interesting changes, e.g. twbs/bootstrap-sass@328973b548f466e2106972fe910ce67d75de63cf.\n. Yeah. (Not closing this though, it's a bug.)\n. Maybe it has something to do with their bower.json update, but that's not released yet, even if it was, I'm pretty sure it wouldn't work right out of the box...\n. Yes I am. This is tricky business, because development and production are mutually exclusive. Glyphicons do get copied over to dist/fonts/, but the icon path doesn't work. And when I update the path to work in production, it won't work in development.\nThe only way I can see this get solved is that fonts are copied on gulp watch to app/fonts, then copy them to dist/fonts. This way the font path can stay the same.\nIf anyone's got a better idea...\n. That's a pretty sweet fix. Care to submit a PR?\n. I agree that this is not the ideal solution and I'm totally open for suggestions. I think we're already breaking paths by merging stylesheets together, so I don't see how not flattening the paths will help, as our font paths should be ../bower_components/path/to/font, which is not the original path. Could you elaborate?\n. Yes, you're right. I wanted to make Glyphicons work, at least. Though I think Glyphicons and FontAwesome are the most popular fonts installed via Bower. FontAwesome is implementable without any hacks, so I guess we're not so bad off.\n. Yeah, we haven't found a sexy alternative yet.\n. :+1: \n. font-color property doesn't exist :smiley: What options did you select when you ran yo gulp-webapp? I selected all of them and it works fine. The changes were definitely for the better, so I'm pretty sure they didn't cause the problem.\n. Hm, it works when I try it. Did you try linking to master?\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nNow your yo gulp-webapp will use the latest features :)\nMy advice for using generators is to always link them that way, because you're using them locally anyway, you're not adding them as a dependency so there's no risk. After linking you can just cd generator-gulp-webapp and git pull origin master to get the latest changes (no need to link again).\n. Like @levito says, the fact that we were watching .scss files instead of .css is definitely the origin of this issue. The only thing we have to do now is wait for @KingScooty to confirm.\nBy the way, @addyosmani, it occurred to me that we're closing issues before the fixes are published, is that a good idea?\n. I don't think it's a connect-livereload issue, it works fine when I try. Are you sure npm registry or your internet connection wasn't down? The reason I suspect that is because it's the first request it was making.\n. Thanks. Very strange, I'll check it out...\n. I don't really know how to test this (obviously I need to level-up my nodefu), but it appears this issue came up multiple times and the solution was to update npm. Since this is not the case here, I hope someone smarter than me can help :smiley: \n. @KingScooty has this got magically resolved in the meantime? :sparkles: \n. Creating a sub-generator seems like an overkill just to get a single file. What I would do in your situation is just copy the gulpfile.js over from my last project. Fortunately, gulpfiles take only a few minutes to adjust, unlike Gruntfiles :grin:\n. Yes, that would be cool :) I would like it to say only \"Sass\", because you get Autoprefixer regardless of whether you choose Sass or not. @addyosmani, @sindresorhus?\n. It appears Bower is a bit quirky when it comes to using repositories. I fixed it in my PR by using the official package, this is what you should do:\nbower uninstall --save bootstrap-sass\nbower install --save bootstrap-sass-official#3.1.1\nNow you need to update all occurrences of bootstrap-sass to bootstrap-sass-official.\nIn your gulpfile.js:\njs\nexclude: ['bootstrap-sass-official']\nIn your app/index.html:\nhtml\n<script src=\"bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js\"></script>\n<script src=\"bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js\"></script>\n<!-- etc. -->\nIn your app/styles/main.scss:\nscss\n$icon-font-path: \"/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/\";\nNow run gulp wiredep, then try gulp watch again.\n. It is due to Bootstrap's new bower.json, either do what @vohof said or downgrade Bootstrap to 3.1.0.\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official, run gulp wiredep and it should work. Let me know if it doesn't.\n. Thanks, this has (hopefully) been solved with #84. This happened because Bower for some reason used Bootstrap's master instead of 3.1.1 (as specified in bower.json). This new Bootstrap's Bower changes are unstable at the moment.\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official and it should work and run gulp wiredep. Let me know if it doesn't.\n. Is this still an issue @shakyShane?\n. A patch has been released in bootstrap-sass-official, the only thing you should do is bower update bootstrap-sass-official and it should work. Let me know if it doesn't.\n. By the looks of the error it seems that you didn't run gulp wiredep after updating Bootstrap, which I forgot to mention, my bad.\n. We're using wiredep for this.\n. The only question now is what to do about JS files, which are now specified individually. Should people ignore JS files in gulpfile.js or comment them in index.html?\n. I don't think there's much difference in those two approaches, so I think it's best not to change anything and close this. ~3.1.1 resolves to 3.1.1+2, so everyone who had this issue before just need to run bower update bootstrap-sass-official and it will just work.\n. Thanks. This definitely needs some cleanup. I think the simplest way is to put only bootstrap.scss, all those other stuff are unnecessary. But I'm totally open to suggestions here, maybe we can use this new structure to our benefit somehow...\n. Sorry, I forgot. I updated my first post.\n. streamqueue merges those two sources together.\n. @addyosmani @passy @sindresorhus thoughts?\n. One inconvenience that's really bugging me with the current setup is that I often want to do tree app, but then I have to do tree app -I *bower_components all the time. (I'm probably using that argument wrong again.) Though I'm aware that it's a shitty argument, I just have to figure out a way to ignore this via a *rc file of some sort.\nOne direct benefit of this would be that bower_components wouldn't be copied over with an app/* pattern. (018bdbdf44f8a0413c6bcf2ea1d9e7099b34378b) Maybe there's another solution for that without explicitly ignoring it.\n. Cool idea. :+1: \n. Whew! Thanks :smiley: \n. I'm posting this only because it's dead simple.\nbower install --save bourbon\ngulp wiredep\nVoila.\n. I don't recall that generator-gulp-webapp specifies the Sass version, where did you get this from?\n. Doesn't this test if the generated files are correct?\n. That's a good idea! I would love to help, but JS testing is still on my shame list :disappointed:\n. Which parts of the gulpfile did you find hard to understand?\n. - LiveReload requires the browser extension. (I should add a comment about it.)\n- I don't know how ExpressJS works, but I'll definitely check it out because I hear so much about it.\n- Well, assuming you're familiar with how Gulp works in general, they should be pretty self-explanatory, for example:\njs\n// Sass + Autoprefixer\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n            style: 'expanded'\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe(gulp.dest('.tmp/styles'))\n        .pipe($.size());\n});\njs\n// JSHinting\ngulp.task('scripts', function () {\n    return gulp.src('app/scripts/**/*.js')\n        .pipe($.jshint())\n        .pipe($.jshint.reporter(require('jshint-stylish')))\n        .pipe($.size());\n});\njs\n// Runs tasks \"html\", \"images\", \"fonts\" and \"extras\" (asynchronously)\ngulp.task('build', ['html', 'images', 'fonts', 'extras']);\njs\n// First runs the tasks \"connect\" and \"styles\", then opens your browser with the specified URL\ngulp.task('serve', ['connect', 'styles'], function () {\n    require('opn')('http://localhost:9000');\n});\nThis generator doesn't do anything too fancy on its own, it's best to check out each plugin that you don't understand. For example, html task may be a bit difficult to understand, so you should go to gulp-useref to check out how it works.\n. Also, you can run gulp --tasks to see which tasks are available.\n. Do you still have trouble understanding the gulpfile? Can this be closed?\n. Hello! I'm having a hard time reading npm-debug.logs :smiley: Could you paste the output out of the terminal itself?\n- Which options did you select when you ran yo gulp-webapp?\n- What OS are you using?\n- How did you install node & npm?\n- What do you mean that any command line input yields a node error? Could you paste an example?\n. Looking at your npm version being two patch versions behind, I think you installed node & npm via Homebrew before their important update where brew install node installs node and npm separately, so that you can update npm with npm update -g npm. I'm not positive that this is the issue here, but reinstalling node & npm is certainly something you will want to do to avoid other problems.\nThis is an interesting line which might be the reason this is happening:\n[?] May bower anonymously report usage statistics to improve the tool over time? (Y/n)\nThis is the question that you get asked usually when you install Bower. Do you have it installed? Have you tried typing Y or n instead of the arrow keys?\nBtw, the error that I saw in your gist is the same one I'm having, I don't think it's related to the issue, because I were able to use the app normally regardless of the error.\n. Bower's home page clearly states that it should be installed globally, you must have missed it. You had it installed locally before? Where? I'm very curious how this happened instead of displaying an error that bower command doesn't exist...\n. The quick solution would be:\ndiff\ngulp.watch([\n      'app/index.html',\n      'app/views/**/*.html',\n-     'app/styles/**/*.scss',\n+     'app/styles/**/*.css',\n      'app/scripts/**/*.js',\n      'app/images/**/*'\n    ]\nBut things have changed, I suggest taking a look some time soon and maybe starting with a fresh build.\n. @dmackerman have you managed to get this fixed?\n. Cool, then you can close the issue :smiley: (I can't because I'm not a collaborator.)\n. Yeah, I tripped over that one also :confused: You can translate \"EADDRINUSE\" to \"error, address in use\" :smiley: \n. Workaround:\n``` html\n build:css styles/app.css \n all stylesheets, vendor's and user's \n endbuild \n ... \n build:js scripts/app.js \n all javascripts, vendor's and user's \n endbuild \n```\nThis also means less HTTP requests. Not sure why we're not doing this already.\n. This is no longer the case, vendor.css is not created if there are no files to build.\n. Yeah, I totally agree, I hate switching to 2 spaces every time. But I'm not sure how you can dynamically create files with specified indentation and still format it the way you want...\n. Yeah, you're right, it sounds very simple. If you find a way and time to do this, feel free to submit a PR :smiley: \n. Great idea! In which format do we write this? As instructions on what to change with the current version?\n. In the clean task add !dist/.git to the array:\njs\nreturn gulp.src(['.tmp', 'dist', '!dist/.git'], { read: false }).pipe($.clean());\nI think that should work. If want to make a PR, you can just click the edit button in app/templates/gulpfile.js right here on GitHub and commit that change, once you made sure it works.\n. We have to serve preprocessed files from somewhere. Even Rails has a tmp folder.\n. The .tmp folder was first introduced in #73, there wasn't any real discussion about it.\n. Actually, there is #41, which explains the need of the .tmp folder.\n. This topic doesn't seem to be on fire. Should we close and reopen later if/when a viable solution comes along?\n. I just saw a discussion about this, it seems to be making progress, so we're keeping this open.\n. Yeah, though it would be cool if this is somehow standardized.\n. Ideally .tmp folder should be out of your way, so you don't really know that you're using it. But I don't mind using it explicitly that much, it just feels a bit dirty. I don't have actual suggestion, though.\n. :clap: \n. What is gulp-intermediate?\n. Oh, I thought it has something to do with this. Then I'm closing this as it's not really an issue.\n. :+1: :coffee: \n. I tried, but didn't manage to get it working. How about Karma?\n. @sindresorhus Which one do you use? I had bad experience with Mocha also, so I switched to Jasmine + Karma. I can implement that combo if that works for you guys.\n. What do you guys think about this kind of setup for testing with PhantomJS & Mocha? Users would be able to easily switch browsers or use external services like Sauce Labs, Browerstack etc. Or is it a tad too opinionated?\n. WebdriverIO is a great Nodey way to test, so that's probably the right way to go. I'm already quite experienced with it, I'm just waiting for it to release a public API for plugins.\n. I can do the tutorial if nobody started already.\n. Whoops, forgot about this. Should this be in the README.md?\n. Actually, I don't know how to write this without it ending up as a Gulp tutorial. The best way to learn how the generator works is to read the code and tinker with it. If someone doesn't want to know how it works, he doesn't have to.\nSorry :smiley: \n. I changed my mind in the meantime, there is something to write about.\n. Sure! :+1: \n. Sorry, I'm having a really hard time finding free time (I'm sure I'm the only person in the world). Could someone else do this?\nLanding page is on the way, I'm pretty much waiting for GitHub Pages to update Jekyll to 2.x.\n. :tada: :balloon: :confetti_ball:\n. Yeah, I only have to clean occasionally. In that case, just do gulp clean, then gulp watch. Can someone shed some light on whether the tasks that you specify as dependencies of another task run asynchronously? I remember once adding clean as a dependency of watch and it didn't work.\n. I'm down with that, I think clean should always run before watch. @sindresorhus @addyosmani @passy?\n. @callumlocke PR away! :+1: \n. It's awesome of you that you tried with a fresh project, that's the safest way to test. Yeah, my take is that they run asynchronously, I haven't figured it out yet, Gulp is a bit vague about that in their docs.\n. I tried making this work, but it's hard to wire it that way, because Gulp runs tasks asynchronously. Even if I manage to do it, the task dependencies won't make sense.\nOther than that, I very rarely need this, and when I do I just run gulp clean, so I vote :-1: on this.\n. Sure.\n. :three: it is, thanks! :+1: \n. Awesome! :+1:\n. I'M WRITING IT AS WE SPEAK.\n. Obama?\n. Maybe I was too dumb to get it, we shall never know.\n. @codeofsumit can you open an issue?\n. I joined the lines and fixed the conflict.\n. Resolved the inline comments. Also, I decided to call them CSS and JS instead of styles and scripts.\n. :heart: \nThis recipe is actually something I would like to suggest for a future version of this generator, once I figure out how to rev the rest of the assets :smiley: \n. :+1: \n. That's a good question. IMO that line should be removed.\n. :+1: \n. Should this cache clearing be done in the images task then?\n. Yeah, that means the caching doesn't work well, right?\n. If the caching doesn't work, then there's an issue with gulp-cache and you should file it there. In the meantime you can either disable caching for images or add the clearcache task.\n. HTML5 UP is out of the question, we have to build it with this generator :smiley: \nIf someone decided they want to play with it a bit, where would that certain person host the landing page? Using gh-pages branch? If yes, how exactly? I'm, uh, asking for a friend :wink: \n. Ok, Jekyll it is.\n. But... Sass... Ok, we can just leave the source files in there, they won't hurt anybody.\n. Ok, I'll do my best.\n. Yeah, that's why I wanted to use it. I feel like it's the easiest way to use Sass and other goodness without having to do any build setup.\n. Here's the initial version. Anyone knows a better development strategy than this? I would prefer if we could silently iterate, but GitHub ruthlessly publishes everything on gh-pages branch, I can't disable it.\n. Fixed. @sindresorhus I'm not really sure how to use 5minfork in this situation. How do you generally avoid that issue when forking someone's gh-pages branch, do you rename it?\nIt's kinda ordinary so far, I'll make it more interesting.\n. I'm using Jekyll, that's what I meant. I just don't want GitHub to host it under my username as well as under Yeoman's.\n. I guess it doesn't, I'm just obsessed.\nUpdate:\n- removed Yeoman character from instructions, because I didn't display the output of other commands as well, so it felt inconsistent\n- used the Yeoman character as a title, is it too much?\n- added some logos from features we have\n. Yeah, I know, I didn't want to spend time on responsive optimizations until I'm sure I want to have those components. For example, I decided to drop the ASCII Yeoman as a title, unless someone has a strong affection for it.\nI'll add some animations, but I'll roll my own, most animations on Animate.css are unbearable :D\n. :laughing:\nUpdate:\n- put ASCII Yeoman out of his misery\n- added fancy hover animations on logos\n- optimized logo images and make their layout responsive\nMay I deploy?\n. I intentionally positioned the logo that way because it's in that exact position on http://yeoman.io, which makes it pretty cool when you click on it.\nUpdate:\n- added OG <meta> tags\n- added a Yeoman character in the intro, this time floated on the right, I think it looks good this way, but on mobile I removed it because it's taking too much vertical space\n- reduced spacing between headings, now it should look less disconnected\n- http://yeoman.github.io/generator-gulp-webapp/\nWhat do I need to do to get http://yeoman.io/generator-gulp-webapp?\nFeel free to give further suggestions about the design, I'll be happy to improve.\n. I agree, I'll update tomorrow.\n\nI think the yeoman.io repo needs to be renamed to yeoman.github.io and put on the master branch for that to work. It's in the GitHub Pages docs. Alternatively have the site in the yeoman.io repo.\n\nI like the first option :grin:\n. You know what, I'll just use a different Yeoman character.\n\nUpdate:\n- blueprint Yeoman character instead of packages version (I like this one better, because it's feature-agnostic)\n- nudge the Yeoman logo on mobile, like @sindresorhus suggested\n- favicon\n. Right, but it isn't deployed yet, because first we need to rename yeoman.io to yeoman.github.io. I left this open so it bugs me to finish it, but apparently I forgot about it anyway :smiley: \n. On second thought, I'll close this. Really no need to keep it open.\n. Yeah, you can see the landing page here. We can either point people to this URL or try to create a yeoman.io URL, which is complicated. If we really want the latter, then I would rather open an issue on yeoman/yeoman.io, because that is an issue common to all other yeoman projects.\n. Awesome, thanks :+1:\nI'll merge this once we get at least some of the other conflicting PRs merged in (which should be soon). Then you'll have to update this and we're all set :smiley: \n. You can rebase now :smiley: \n. Double checked, looks good. Thanks a lot! :+1: \n. I would like to have this kind of feature, because the user will almost always want more than one page, but I guess Jade is too opinionated, I personally don't have a strong preference on a templating engline, unlike with Sass.\n. Yes, I've written it, but it takes time to execute.\n. Thanks, that's a great idea. I may just do that.\n. I had no idea about consolidate.js, cool! I'll update the Jade tutorial at least.\n. Are you sure this is related to the Jade recipe? Does your bower_components folder contain modernizr/modernizr.js?\n. Your bower_components is in app, it should be in the project root. Either you have a .bowerrc in your project which tells Bower to install packages to app or you have a global ~/.bowerrc.\n. Sure, I'm guessing that's because the links in your index.html point to app/bower_components, which is \"correct\" in your case. But I don't think your build step is going to work if you don't move bower_components out of the app folder.\n. I think you're using an old version of the generator, which one? The recipe is written for the almost latest version.\n. What am I saying? Just update links to app/bower_components (or convert your index.html), it should work if your version of the generator is designed that way.\n. This is the most confusing part of our /bower_components setup. Using ./bower_components path in index.html will work in development because connect is serving it as a sibling to index.html, but it won't build well because useref is looking at the directory structure, which is ../bower_components. The latter path will satisfy both development and production requirements, because connect will somehow interpret ../bower_components as ./bower_components, because ../ is impossible as it is outside of the project root. I didn't really check how that happens. I should really write this down somewhere...\nThings we do for consistency.\n. I agree, fixing this in useref would be amazing. But I left this open because I wanted to document it, since it's causing a lot of confusion.\n. Confirmed. If I remember correctly, @jonkemp was working on solving this issue? We need some kind of a gist of all the discussions about imagemin and fix this once and for all :smiley: \n. Whoops, sorry, my memory fooled me. @kevva, you're the author of imagemin, any ideas?\n. Yeah, I tried it and there does seem to be an issue with gulp-cache. Not caching works fine.\n. This issue has been raised before in this PR I closed. Should we reopen and pull it?\n. Indeed it doesn't. I like the new output, thanks! :+1: \n. :+1: \n. I think I had that, but that was when my internet connection died. Do you repeatedly have this error or just sometimes?\n. This could be resolved when #54 is implemented.\n. BrowserSync wasn't implemented yet :smiley: \n. Yeah, this was changed recently in #162 for a reason unknown to me. @sindresorhus, explain yourself :smiley: \n. I was confused why gulp watch was replaced with gulp serve in the README, as gulp serve is clearly inferior and meant more as a part of gulp watch, not to be used on its own. I don't remember the last time I wanted to view my site without watching for changes. I'll update that if that's ok.\n. Oh, I had no idea that was the plan. Ok, then you make that change whenever you were planning to.\n. I'm tempted to change that in the readme, but I'll try to make gulp serve the correct command first. Sorry for the confusion.\n. Did you try using the master branch? Can you identify exactly which commit causes the issue?\n. This is a stretch, but check if there's a .yo-rc.json file anywhere in your ~/Downloads. Try ls -aR ~/Downloads | grep yo-rc, for example.\n. I'm closing this due to inactivity and because it's a very rare and specific issue almost certainly not related to this generator.\n. Thanks, that was probably it :smile: \n. Thanks for reporting this, I had no idea Gulp 3.8.x was released :) @sindresorhus is this an issue with gulp-filter and was it fixed in the meantime?\n. @xmlking does this work?\njs\ngulp.task('fonts', function () {\n  return gulp.src(require('main-bower-files')().concat('app/fonts/**/*'))\n    .pipe($.if('**/*.{eot,svg,ttf,woff}', $.flatten()))\n    .pipe(gulp.dest('dist/fonts'));\n});\n. Yeah, I know why, it was due to my wrong understanding of gulp-if.\n. @xmlking is this issue still active?\n. Closed due to inactivity and nobody else reporting a similar issue.\n. This PR needs to be reconsidered because BrowserSync doesn't seem like it will be implemented very soon and the connect task fails on the master branch (at least for me). May I update it, then it can be replaced with BrowserSync later?\n. Great :smiley: I just wanted to ensure that the master is working.\n. I think this part of the README is bit misleading, it sounds like grunt serve is previewing the build.\n. Thanks!\n. Have you tried with the master branch of the generator?\n. @Ahrengot does the issue go away with the master branch as well?\n. Do you have the latest version of yo?\n. npm cache clean? I had this issue as well, but sadly, I don't remember what I did exactly, I think it just went way after a while.\n. Yeah :) If it's been 6 months and you installed it via Homebrew on OS X, it was a good idea to reinstall it, because since then Homebrew separated Node and npm, so npm can be updated via npm update -g npm without breaking something.\nWoohoooo! Glad it works :)\n. Closing this because given solutions worked.\n. Sure, thanks :) Those are not even spaces, they are tabs.\n. No problem, close enough :)\n. :wink: \n. Thanks for the info. We're going to update to BrowserSync soonish, so hopefully there will be less issues like this.\n. Yay :)\n. Our generators rely on Bower components being installed to bower_components, which sucks (it should be configurable), so I think we should make that explicit by providing our own .bowerrc to override potential global settings and to prevent users from creating their own local ones.\nEnough users had issues with it. Even though global .bowerrcs are kinda weird, it's still possible to create one.\n. What is broken?\n. @sindresorhus I think they're pretty amazing. Look, we're talking to each other and you're from Norway, how awesome is that. But then again, you could be just a node robot, so I get what you mean.\n. This question is better suited for Stack Overflow. Have you checked out the gh-pages recipe?\n. The error message states that it's in use. Do you have another server or livereload plugin running? This happened to me until I figured out I have a livereload app running, it took me a while to figure it out the first time :P\n. You should close the LiveReload for Windows you downloaded, you only need the Chrome plugin for this generator. Did you try with the LiveReload closed?\n. Yes, it indeed doesn't make sense why it works with Grunt. You don't even need the LiveReload Chrome extension for it to work, because the livereload package injects the same (or a similar) script to your page. Without touching the LiveReload extension, when you run gulp watch and the browser tab opens, does the LiveReload work or does the error above appear?\n. I didn't notice you were running gulp serve instead of gulp watch, that was the problem all along :)\n. I'm not sure I follow. If you move $icon-font-path below the bower:scss block, Bootstrap's Glyphicons will be compiled with the default path, which is no good.\n. Nice, now I get it :smiley: Just squash your commits first, thanks.\n. gulp-sass uses libsass, which is written in C/C++, while gulp-ruby-sass uses the Ruby gem, so gulp-sass is naturally much faster. I wouldn't implement it just yet because it's not stable enough and is missing some important features, like precision, which is necessary for Bootstrap to work properly.\n. Which options did you choose when you ran yo gulp-webapp?\n. See if just replacing that bootstrap-sass with bootstrap is enough (so there aren't both of them).\n. Hm, wouldn't this prevent CSS from injecting as well? Please also try what you did initially, but with bootstrap.js instead of just bootstrap.\nSome hardcore logic stuff going on here :smiley: \n. Great, thanks!\n. Whoopsie, you're right.\n. No, I just have to find a stable/fast solution for rebasing Bootstrap's font URL. I think there is a PostCSS plugin for that, I'll take a look soon.\n. If I understood your question correctly, in development we're fetching the font from bower_components, but in production we're copying the font to dist/fonts, so we have to replace the path in the (at this point compiled) CSS to fetch it from there.\nI haven't found a PostCSS plugin that can replace URLs, like that. I only found postcss-url, which only seems to be able to rebase all URLs within a CSS file. So back to lazypipe + gulp-replace? I would also like to go back to gulp-csso, because I don't find csswring reliable anymore since it screwed up something for me (I don't remember what).\nThis is too bad, because I really wanted to replace lazypipe with postcss, but I think that will be possible later.\n. That's a good idea, we could run the task every time bower.json changes. But how would we organize this? Do we simply call the fonts task and update it to write to .tmp also?\n. Thanks @silvenon!\n. This was fixed in 7344c7baf7e228ec026fd3f2dfb2fe6513a3c191 (not yet released).\n. gulp --tasks already does something similar.\n. Also, gulp-task-listing forces a certain naming convention (task-subtask), which isn't ideal, so I'm closing this unless a good argument is provided.\n. Some stuff is still not ready in my opinion, for example tests. You can always npm link your generator-gulp-webapp to the master branch and use it right away.\n. :+1: \n. This generator is used only for initial scaffolding of the app, it's not used as a dependency so linking to master should be completely fine.\nWe could make a release now and fix tests in the next one, @sindresorhus?\n. :beers: indeed.\n. I'll apply the changes in a few days. I definitely agree about the unit tests, I'll get on it.\n. Sorry for all the pushes, I just rolled back so the discussion above isn't hidden.\n. I'll just wait for @SBoudrias to reply before I push fixes. Then it's testing time.\n. Updated according to the feedback above, thanks @SBoudrias for helping :+1: \nNow I'll start fixing tests.\n. Fixed the issues and suggestions pointed out in the comments. I also updated to 0.17.7.\n. Oh wait, I'm not checking if the testing framework is valid. Are there any other valid values except jasmine?\n. I checked if the testing framework is either mocha or jasmine by raising an error (not sure if there's a recommended way of doing this), but to me this check is unnecessary, because the generator will fail if you don't have a testing framework installed with the specified name anyway. What do you think, @SBoudrias?\n. Without specifically checking and throwing the error, the message displayed is something like \"You don't have a generator with this name installed\", which to me is reasonable. Is it?\n. I'm not ready to ship it, there are no tests and I really want to fix generator-mocha so I can use #composeWith like a boss, which would also help in the tests.\n@SBoudrias how does the conflict priority work? I think I really need it for generator-mocha because I'm overwriting bower.json.\n. This green light is too tempting. If it's ok if I fix the tests later, merge the sucker.\n. I agree, I also mostly host these apps on CDN, so I almost never use .htaccess.\n. Yeah, the caching can sometimes be too hard, so you can clear the cache when you notice that.\nI added the code tags to your second comment, so you can press the edit button to see how it can be done. You can also check out GitHub Flavored Markdown.\n. Whoops, accidentally closed. We should inspect this issue better.\n. Thanks, that's very comforting! :smiley: \n. I'm closing this because it's solved. If the solution doesn't turn out to be permanent, I'll reopen again.\n. Thanks for the detailed description of the issue. I can't reproduce it, though, does this happen with a fresh install?\n. Well, I'm not sure what the issue was, but you gave a workaround and we will soon release a new version with connect@3.x, so I think it's ok if we close this. Thanks for the report and the workaround :+1: \n. Yes, we already updated the paths accordingly on master, a new version will be released soon. You have to update the $icon-font-path and <script>s in your index.html.\n. bower_components was moved to the project root a while ago, it shouldn't be in app, please update the generator and try with a fresh install, then let us know how it goes.\n. Any updates?\n. I tested it now with master and it works. After you're done, please squash your commits.\n. By the way, the recipe is mentioning Handlebars, would you happen to know what that is about? I don't see it being used later.\n. Thanks! :+1: \n. Things get more complicated when you have templates which you use in JavaScript and templates you use for creating HTML pages (like Nunjucks?). My first guess would be to put all templates to app/templates, but a user might, for example, use Handlebars for both. My current idea is to have these:\napp/templates\napp/layouts\napp/scripts/templates\n. Good question. In my workflow I used app/includes, but that's probably bad, so I think app/templates/includes or app/templates/partials sounds good.\n. Ok, another proposition:\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 templates\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 modal.hbs\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tooltip.hbs\n    \u2514\u2500\u2500 views\n        \u251c\u2500\u2500 about.html\n        \u251c\u2500\u2500 index.html\n        \u251c\u2500\u2500 layouts\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.html\n        \u2514\u2500\u2500 partials (or includes)\n            \u251c\u2500\u2500 footer.html\n            \u2514\u2500\u2500 header.html\nviews contain web pages and templates are components that get compiled into JavaScript.\nI'm using this model in my current project and it works fine. Also partials or includes?\n. Actually:\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 templates\n    \u2502   \u251c\u2500\u2500 modal.hbs\n    \u2502   \u2514\u2500\u2500 tooltip.hbs\n    \u2514\u2500\u2500 views\n        \u2514\u2500\u2500 pages\n            \u251c\u2500\u2500 index.html\n            \u2514\u2500\u2500 about.html\n        \u251c\u2500\u2500 layouts\n        \u2502   \u2514\u2500\u2500 default.html\n        \u2514\u2500\u2500 partials (or includes)\n            \u251c\u2500\u2500 footer.html\n            \u2514\u2500\u2500 header.html\nBecause if pages are more than one level deep, we would have to ignore layouts and partials, so that's the same problem.\nThough I think app/views/pages is a bit too unreachable\u2026\n. Thanks, that sounds perfect :+1: \n. Does it work when you use // comments instead of //-? Assuming this is Jade.\n. There's no reason to be negative. gulp-plumber only prevents gulp from crashing when an error occurs, it doesn't really give you any more info, that's probably why @fbm-static was confused.\n. No problem :wink:\nI didn't know that, interesting stuff.\n. The libsass option should be implemented as a follow-up question when the user chooses Sass, like in generator-webapp. libsass is still behind Ruby Sass, as far as I know, so it's not a good idea to completely replace it.\n. You can read known issues in the current release of libsass. I would like those to be resolved before the switch, but that's just my personal preference.\n. Yep, good idea.\n. On the second thought, is it really that complicated that it needs a recipe?\n. It's not a problem for me to write it, but I think it's literally about 3 lines of code. There's also the problem of Bootstrap Sass not supporting libsass yet, because precision is not working properly in libsass yet, according to Bootstrap's README.\n. Later for sure, I'm counting seconds until we can make the switch :smiley: \n. That's what I was saying, Bootstrap doesn't seem to support it yet. As soon as it's available as an option, that's when we'll switch.\n. That's pretty sexy. Are we ready to make the switch then? @addyosmani @sindresorhus \n. @austinpray really? Which ones? Maybe if users make the switch having their own sassy deps.\n. Because the tests are old and should be updated.\nBlast, libsass still doesn't support looping through maps, which I use really often. I'll keep this open anyway, I'm sure they'll fix that in a reasonable time, we could donate.\n. @quentinrossetti could you rebase this?\n- some of the arguments are named differently\n- it doesn't support expanded output style yet\n- the latest version is 1.2.4\nHere's how it should be:\njs\nreturn gulp.src('app/styles/main.scss')\n  .pipe($.sass({\n    outputStyle: 'nested',\n    precision: 10,\n    includePaths: ['.'],\n    onError: function (err) { console.log(err); }\n  }))<% } else { %>\n. Does gulp wiredep fix it?\n. wiredep is already the part of watch task, so you shouldn't really have to call it manually, except in cases when you installed new Bower components while your watch task wasn't running. Making it a part of the build task doesn't make sense to me because you would already be missing those files while you were developing, so you would run it then.\nIf you strongly believe otherwise, I'd be happy to discuss it, but I'm closing this until there's a good reason for it.\n. It is included in bower.json, I'm not sure why it's not in your case. But even if it wouldn't be, gulp wiredep is run as part of yo gulp-webapp, so Bootstrap's dependencies should be included as well. You also shouldn't have to do bower install and npm install after yo gulp-webapp, it is run automatically, unless you pass a --skip-install option.\n. This is a different issue, the problem is that the generator doesn't install dependencies. I'm also experiencing this. We'll merge #194 soon, which will fix this.\nA dirty shortcut:\nsh\n$ git clone https://github.com/silvenon/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ git checkout -b new\n$ git pull origin new\n$ npm link\n$ cd ../test\n$ yo gulp-webapp\nConcerning tips like gulp wiredep, we'll take care of that with #121.\nLet me know if you need any more help or explanation.\n. It's merged, you can try installing from master again.\n. Does something break if you update all of them?\n. I think the most formal way is to check changelogs/commits of these modules and run tests. I read the commits and I think only gulp-useref has a breaking change which doesn't seem relevant in this case.\nThanks for the heads-up.\n. We'll cover that in #121. Disregard my last negative comment in that issue, it'll happen.\n. Merged.\n. My semantical reasoning behind this.\n- serve depends on connect, even without watch.\n- watch depends on connect because connect needs to happen first, so that watch can start LiveReload\n- connect depends on styles and other potential preprocessors/templates, because they create the .tmp folder which connect serves from, this way both serve and watch builds styles\nI hope that makes sense.\n. Personally, I find plugins like this unreliable. Also, taken from this plugin's docs:\n\nThis plugin has NOT been tested thoroughly.\n. I don't like minifying HTML because I feel like it can get you in trouble with spacing and stuff. Thoughts, @sindresorhus?\n. Yeah, I don't really see much benefit either, also it ruins viewing source (not via developer tools, though). When I was using a different plugin (gulp-html-minifier) I was tripping over all the time and it was very frustrating, because some things I wanted were removed and it was hard for me to detect that.\n\nI'll ask for opinions.\n. You're pretty awesome :+1:\n. Well, the numbers have spoken. I'm don't think adding this micro-optimization to the generator would be useful, but feel free to discuss further.\nThanks for the constructive discussion, everyone :+1: \n. @austinpray would you like to write a blog post?\n. Fair enough.\n. Thanks!\n. But now initial gulp build task fails, because console isn't defined as a global in main.js. Maybe we could set \"devel\": true?\n. But on the other hand I don't want the initially scaffolded site to fail to build.\nI think we can assume that users will initially want to use console a lot, that means they would always have to add \"devel\": true every time. I'm pretty sure people who will not want console in their production code will know about the devel option.\nSetting \"devel\": true feels more noob-friendly without hurting anyone.\n. Just as proof that the JS file is successfully included. Regardless of that, I always use console when I start developing, so naturally I will always want devel to be true in the beginning.\nBut I also agree with you that it works against you, so I propose a compromise: prepend /* jshint devel:true */ to main.js. What do you think?\n. Yay :smiley: \n. You can se the instructions here.\n. Not sure what you were doing here:\nsh\n$ cd ~/yeoman-test/generator/\n$ npm link generator-gulp-webapp\n$ npm link generator-mocha\nAlso, why were you cloning yeoman-generator?\nThis should be sufficient for any generator:\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nsh\n$ yo gulp-webapp\n. No, but you can create your own task, something like this:\n``` js\ngulp.task('serve:dist', ['styles'], function () {\n  var serveStatic = require('serve-static');\n  var serveIndex = require('serve-index');\n  var app = require('connect')()\n    .use(serveStatic('dist'))\n    .use(serveIndex('dist'));\nrequire('http').createServer(app)\n    .listen(9000)\n    .on('listening', function () {\n      console.log('Started connect web server on http://localhost:9000');\n    });\n});\n``\n. @hawsome are you still getting this error? With the latest version of gulp-cache? I used to get it before, but not anymore it seems.\n. See if your have a.yo-rcfile on your desktop.\n. Closing this due to inactivity. It's probably the.yo-rc` file.\n. This was fixed in 7344c7baf7e228ec026fd3f2dfb2fe6513a3c191 (not released yet).\n. Yes, that's probably the gulp-useref error. If you update that plugin, it should tell you exactly what it can't find.\n. Run\nsh\n$ npm install --save-dev gulp-useref\nand try again. Recent versions of gulp-useref have more useful error messages.\n. The question is whether you want to pollute your HTML files or your bower.json with linking each JS/Sass file. I vote for HTML, because you can't comment out lines in bower.json (AFAIK) and you don't have to re-add fonts. Also, I can't figure out why you are talking about Sass while using Less Bootstrap as an example.\n. Actually, I agree, it's much more semantic. PR on the way\u2026\n. Actually, this would be way too much template code because there are two flavors of Bootstrap, plus I don't like overusing the overrides field. I don't think there's a solution that's elegant enough to be worth it, so closing this until someone finds one.\n. The verbosity of wiredep commands is increasing, but if we get #235 approved, we can apply the wiredep command with same options for both HTML and Sass.\n. Also, this adds some additional time to the html task and probably styles task. But I would sacrifice speed for clarity in this case.\n. The logic of the ../bower_components path in HTML files is terrible. We're using the fact that ../ = / when we're already in the root, just so we don't trip up gulp-useref. We've had numerous issues about this subject and if we have to explain something many times, it's not a good design.\nAlso, when I'm debugging what wiredep injected in my file, I already know it's from Bower, so I don't need that ../bower_components prefix, it's clutter to me. The robot is managing them, but a human is reading them from time to time.\n. Ok, I agree with you guys. I actually mainly want to remove the ../ abomination :D How about we then convert:\nhtml\n<script src=\"../bower_components/modernizr/modernizr.js\"></script>\nto:\nhtml\n<script src=\"bower_components/modernizr/modernizr.js\"></script>\nI don't think we have to move bower_components to app, though.\n. Ok, now we have an inconsistency:\nHTML:\nhtml\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\nSass:\nscss\n@import \"bower_components/bootstrap-sass-official/assets/stylesheets/_bootstrap.scss\";\n/bower_components path crashes Sass, maybe load paths don't work that way. Do I remove / from HTML path as well?\n. Ok, removed the inconsistency. Both now start with bower_components/.\nThis is ready for merging, if you agree, @eddiemonge @sindresorhus @Munter @addyosmani.\n. Rebased.\n. By the way, this is now in sync with how generator-webapp does it.\n. As this is more philosophically-oriented, I would rather put it under docs/, not in the main readme.\n. Added the notes.\n. Thanks, I'm on it. Also, the font path should be replaced on build.\n. So Sass and Modernizr options are on? I couldn't reproduce your error, are you using v0.2.0?\n. Just add the styles and templates tasks to the connect task instead of serve. html task is correct.\n. js\ngulp.task('connect', ['styles', 'templates'], function () {\n    ...\n. I just updated the Nunjucks recipe. I followed the steps myself and it worked. But there isn't anything more I didn't tell you about\u2026\nCould you please create a demo for this?\n. I'm closing this issue because the recipe has been updated and tested to work. If a demo supporting this issue is provided, I'll be happy to reopen and fix.\n. This will allow me to merge in #188, because there is no path replacing problem to solve anymore.\n. Done, but this prints out errors like this:\njs\n{ [Error: error main.scss (Line 7: Invalid CSS after \"@import \": expected file to import (string or url()), was \"blah;\")]\n  message: 'error main.scss (Line 7: Invalid CSS after \"@import \": expected file to import (string or url()), was \"blah;\")',\n  showStack: false,\n  showProperties: true,\n  plugin: 'gulp-ruby-sass',\n  __safety: { toString: [Function] } }\nDid you want that?\n. Done. Should I also paint it red with chalk.js?\n. I edited my initial comment with info that I learned while intensively using it recently.\n\nAs far as livestyle: What's wrong with browser sync?\n\nI didn't manage to get Livestyle working, so I'm not so much for it anymore. Though I am for Express and its plugins. I'm not sure what BrowserSync is based on and can you use Express plugins for it too.\n. Good point, @KingScooty, Assetgraph is not very gulpy. I'll close this then, but further discussion is welcome :smiley: \n. Yeah, I'll keep it open for a while. I used it heavily and it certainly does a lot of the heavy lifting, especially responsive images, which actually became a joy to do if you can believe it :smiley: \nBut I think this generator is intended for web apps, which are usually not image-heavy and get most images via an API. So we have to keep the intention in mind, which can be hard :confused: \n. Yeah, Assetgraph would be used for the build step, that's where it shines.\n. I let this idea sink in for quite a while now, and it hasn't. I don't see AssetGraph-builder fitting into this generator, it's currently fairly unwieldy IMO, it's not very modular and will probably raise more issues than it will solve.\n. You still need to tell JSHint about the moment global. There are 2 solutions I can think of ATM.\n\nAdd this to your .jshintrc:\n\njs\n\"predef\": [\"moment\"]\n\nPrepend this to the JS file(s) you are using the library in:\n\njs\n/* global moment */\n. It's a Ruby dep, I forgot. I'll close this later, I'll just wait a bit in case I change my mind and want to discuss further.\n. Good idea.\n. Ok, not sure why I didn't merge this sooner, it's just docs anyway :smiley:\n. I was being a bit verbose because of semantics, but you're right, thanks!\n. Yay!\n. Thanks :+1: \n. There is a recipe for this, but I think you're right, maybe we should implement this.\n. Yeah, it would be nice if it was implemented here, too. The main problem is that I haven't figured out a way to rev all the assets, not just CSS & JS. Gulp is not very good at this stuff :disappointed: Otherwise I would implement it right away.\n. Great! :+1:\n. Could you post an example of how would that html task look like?\n. If this would help revving, I'm all for it. But I think it's best to perform it on the dist folder after the build, that way we could rev fonts and images too. Or does splitting the html task make that easier/possible?\n. > but it actually removes the revved files, and leaves the un-revved files alone\nI was using it before and it worked fine. Maybe it gets screwed up when not replacing in the same stream as the one where revving is done?\n. @illycz no. \ud83d\ude15 We should really solve this, but Gulp isn't a good tool for this task.. No, I fixed this in 390199858f3bda1647856fd3b3a7704601e4e0a0 (not released yet). My bad :smiley:\nWiredep didn't that realize Modernizr is already included because the path didn't have the leading /, so it was including it (again).\n. I see the problem. The initial wiredep call has the wrong regex. If you were to run gulp wiredep, your paths would be corrected and the 2nd Modernizr would be excluded.\nTry with the latest commits. (I also corrected Bootstrap paths, wasn't really an issue, just for consistency.)\n. @jnsq why do you think it's back? I checked the index.html file and the built JS file, I see it included only once. Could you share more details?. @jnsq yep, you're right! Reopening\u2026. Sorry, getting around to it\u2026 \ud83d\ude05 . Does it work after running gulp fonts?\n. gulp fonts should put those fonts in .tmp/fonts (and dist/fonts), and we are serving from .tmp so the paths should work. Which version of the generator are you using?\n. Yes, absolutely. Thanks for reminding me :smiley: \n. Done.\n. It should have worked. The path inside bootstrap-sass directory doesn't matter because we're extracting Glyphicons with the fonts task, which puts them in .tmp/fonts (and dist/fonts). Try running gulp fonts explicitly and try again.\n. Yeah, sorry about the tests, I have no idea why they are failing ATM.\n. Great, thanks :smiley: \n. Are you sure your .jsx file is under the app/scripts directory?\n. It works for me. Which version of the generator are you using? Could you share your gulpfile.js?\n. Hm, I hope you manage to get it working on the first computer. If you want further help, feel free to ask.\n. With the current setup, they should both be /bower_components/... Are you sure your wiredep task matches this one? More specifically the ignorePath.\n. That ignorePath is already a part of this generator since 64cf7be0979bbba494d56341ba3102fb2b4d07eb, it just hasn't been released yet, that's why it's not marked as a change.\n. Good catch, thanks! :+1: \n. Yes, and I recommend it until we speed up our release cycles.\nsh\n$ git clone https://github.com/yeoman/generator-gulp-webapp\n$ cd generator-gulp-webapp\n$ npm link\nNow yo gulp-webapp will use that repo. To update, simply navigate to generator-gulp-webapp and do git pull.\nThe reason why we're not releasing yet is that we're waiting for libsass to solve their blocker issues, like support for nested @media queries.\nP.S. If you want to view the readme of a specific version, simply select that tag on GitHub. Regardless of the release cycle speed, it can always happen that a part of the docs doesn't match your version, because it belongs to master.\n. If we were to create a dev branch, we would have to make it the default, so people don't submit PRs to master. If dev is the default branch, people viewing the repo will again see the \"wrong\" readme.\n. I agree that sometimes a gap can happen, as master is the bleeding edge and some drastic changes can happen that aren't yet released. Some projects do have a dev and a master branch, but I think that workflow is much more useful in larger projects. As I explained, having a dev branch will not solve this problem, because it would still be the first thing that the user sees.\nConcerning complaints and reactions, anyone who got their hands dirty in OSS should find it natural that master is the bleeding-edge and that you're usually going to see it if you go to a library's source code. I think this is how most people do it and rethinking it seems like too much work (e.g. you would need to make changes to GitHub itself) because of one wrong gut feeling. Some things are non-intuitive and mistakes of the designer, but sometimes users make mistakes too.\nNobody was rude to you, we're putting effort into explaining this to you.\n. I broke the tests a while ago, so it's not your fault. I'll fix those ASAP.\n. Forgot to update other recipes, just a sec\u2026\n. Ok, ready.\n. Ok, I don't have strong feelings either way. We could add it if we implement AssetGraph for the build step, it will do a much better job. Or you don't like revving by default in general?\n. I\u2019m not sure why you would update versions in package.json. Aren\u2019t you only using it for installing packages?\n. Hm, I think manually appending ?v={{ version }} to every asset (if I understood correctly) is very tedious. There needs to be a plugin that does this without the user having to think about it. AssetGraph is good at that, I just need to learn it well enough :smiley: \n. I'm talking about images, fonts etc. All of those need to be revved too.\n\nI'll collect my thoughts and perhaps make an issue with code examples.\n\nSure, we'd love to hear it! :smiley: \n. Does it rename assets or do you end up with both original and revved files?\n. Oh, I forgot to add. I'm reverting to Ruby Sass because I don't know when libsass 3.2 will be released and I want something stable.\n. Why? I really like it.\n. Not sure why tests fail, they ran successfully locally.\n. I'd rather have merged @media queries. While nested @media queries are valid CSS3, nobody seems to use or talk about them much and they don't appear to work in IE11 (and maybe in other browsers which otherwise support @media queries). http://codepen.io/silvenon/pen/JoOxWb\nI reverted simply because I wouldn't use this myself in the current state and I want to make a stable release. I'm planning to add libsass back as soon as I'm happy with it.\n. I only care about IE10+ and I think that's as far as we should assume for our users.\nOk, I'll fix the tests and merge.\n. Speed > support for any IE at all? About 17% of web traffic?\n. @dbashford I think libsass is too close to being stable for this extra work to be worth it, but I can do it if more people would like this feature.\n. Ok, everyone seems to be against temporarily dropping libsass, so I'm closing this in favor of #274, because I mainly wanted source maps anyway.\n. So you have v0.2.0 installed? How do you know that your system is still using an older version?\n. Were you looking at the files on the master branch or did you specifically go to v0.2.0? There is a comment at the top of your scaffolded gulpfile.js which says which version generated it, could you take a look at it?\n. sh\n$ npm install --global --force yeoman/generator-gulp-webapp\nI think that should do it.\n. What do you mean? Released?\n. @michelmany which issues? What version of the generator are you using?\n. :+1: \n. What does node-sass 2.0 have that we were waiting for? I wanted merged @media queries, but I have no problem in making a release without that feature, then adding the @media update as a patch version or something.\nSure, I'll see if I can do some automatic testing as well.\n. 0.3.0 released.\n. :+1: \n. Thanks :+1: \n. Sure, PR welcome :smiley: \n. We switched to ESLint, which, apart from low-level stuff, offers advanced code style linting, similar to JSCS.\n. Did you run gulp serve?\n. Of course. All servers are automatically searching for the index.html, otherwise they can't display anything. The files list is a bonus, which helps you to locate the file you want to view, instead of just displaying a 404 error (page not found).\n. Could you elaborate what is the problem and what were you expecting?\n. I misunderstood you, my bad. I thought we had this and this behavior was confusing you. Thanks @francoiscote for the tip, I'll probably add this to the core.\n. Added in 70cceb1a12652003f4717f7da331367e078693b3.\nOh. Yeah, since we server from multiple directories, it's a trade-off. The order of baseDir matters, so be careful. Make sure you don't have files with the same name, e.g. a template app/index.html and a compiled .tmp/index.html, because app/index.html will get served, which isn't what you want.\n. We had it, but dropped it because it was too presumptuous, i.e. many people don't/can't use it. You can write a Require.js recipe if you want, or send over a gist and I can write it.\n. Sure, but isn't it just this?\ndiff\n-return gulp.src('app/styles/main.scss')\n-  .pipe($.sourcemaps.init())\n-  .pipe($.sass({\n-    outputStyle: 'nested', // libsass doesn't support expanded yet\n-    precision: 10,\n-    includePaths: ['.'],\n-    onError: console.error.bind(console, 'Sass error:')\n-  }))\n+return $.rubySass('app/styles/main.scss', {\n+  sourcemap: true,\n+  style: 'expanded',\n+  precision: 10,\n+  loadPath: ['.']\n+)\n+  .on('errror', function(err) { console.log(err.message); })\nBut if you want it, I'd accept a PR, no problem :wink: \n. Ok :smiley: \n. Thanks, this will be a good reference for people who want to revert to Ruby Sass.\n. You need to install Susy with Bower (bower install --save susy), not RubyGems, if you want it to get automatically @imported.\n. Also, in future please ask support questions on StackOverflow :wink: This question clearly wasn't related to the Ruby Sass recipe.\n. Now Gulp version does too!\n. Hey. I removed the directory listing feature in c1104ecdb049e7011b73703a2d2d5799f49ad331 because I don't know whether it's possible to do it well in our circumstances. But that is only problematic in gulp serve, gulp serve:dist should work fine even with the directory listing. I tried it now myself.\n. Yep, removing directory: true will fix it. Obviously it doesn't work the way we thought it did.\n. Yeah, BrowserSync is really awesome.\n. Cool, thanks :+1: \n. A PR would be cool, yes :smiley: \n. Yes, that sounds good.\n. That would be awesome :+1: \nCould you ensure white background?\n\n. It makes sense, it's meant to be on a white background, see?\n\nThanks a lot.\n. Which version of generator-gulp-webapp did you scaffold with? Because now we use gulp serve as the primary task for development mode, not gulp watch.\n. Other than my comments, LGTM :+1: @sindresorhus?\nYou didn't do anything wrong, tests aren't that good ATM. I'll bring them up to speed on a rainy day, it's on my shame list :wink: \n. Congratulations! :baby_bottle: :baby:\n. Works fine, thanks a lot! :+1: \n. It seems to work correctly and gives a nice colorful output.\n\nTwo questions:\n1. I noticed there's a new version of gulp-rev-all with some breaking changes, would you care to update to the latest version?\n2. The output seems a bit too verbose. Perhaps silent is best? I think the new option is called debug, so perhaps set that to false.\n@sindresorhus your thoughts as the author of gulp-rev? :smiley: \n. Ok, I take full responsibility if it gets out of hand :smiley:\nI'd like to continue with this then, so @hivre, when you have time, please address my 2 questions.\n. We'll have to continue this in another PR, one of these days :smiley: \n. Sure, if you're up for finishing, I'd be happy to merge :wink: \n. No pressure.\n. :+1: \n. You have to clear the cache if things like that happen.\n. Thanks for the suggestion, I thought about it a few times, but each time I realized that paths will differ from task to task. For example, sometimes you might perform a task on all HTML files and sometimes you'd like to exclude 404.html or something similar.\nUnlike Gruntfile.js, in a gulpfile.js paths aren't so repetitive and adjusting to a new directory structure should be much easier. In a gulpfile.js actions are applied to the stream in a single go, where in a Gruntfile.js your paths would be repeated over and over again for each task. For example, I can see that images and extras paths would most probably be used only once, so using the values directly actually results in less code.\nAll in all, I see little room (and reason) for automation in that area. If a specific setup worked for you much better, feel free to share it :smiley: \n. In my opinion it decreases readability for very little gain. You can change those with search & replace.\n. Variables are convenient if changing their value will save time. In this case a simple search & replace for app/src/ will do the trick.\n\nWhat is not readable about variables? This is exactly what variables are for.\n\nVariables are usually for making the code shorter and more flexible. This will not make the code shorter and, in my opinion, not that flexible either.\njs\nbases.app + 'scripts/**/*.js'\n// vs\n'app/scripts/**/*.js'\nThe former is less readable and takes longer to type.\n. This is just my opinion, I'll wait for others from the team to share theirs :smiley: \n. I previously had a hunch that it might be, but realistically if you want to change app/styles to app/src/styles, you could do it with a search & replace and there would probably be max 3 occurrences, which would take you like 15 seconds to change manually. Paths in gulpfile.js aren't really that repetitive, I think, and variables can be a drag to type and concatenate.\nI never felt a need to do this (unlike in a Gruntfile.js). Did you? Also, I don't think updating a gulpfile.js would be a matter of simple file replacement, as you probably modified some stuff, so you would have to adapt it manually anyway.\nDo you have a use case where updating paths wouldn't be simple without variables?\n. I feel it's more clear without using variables. Because paths in gulpfile.js are not very reusable, sometimes you want app/scripts/**/*.js, sometimes you want app/scripts/vendor/**/*.js, or maybe app/scripts/**/*.jsx. It depends on what you want in that particular case, and I don't think that creating a variable for each variation is not useful, it just requires an additional lookup.\nI think this is more a matter of taste than actual usefulness. Closing this.\n. You should not change anything in the bower_components directory, because:\n- other people won't get your changes, because it's excluded from version control\n- once you update your package, your changes will be overridden\nPackages should never be modified directly. You can override variables by placing them in main.css before @importing Bootstrap.\nLet me know if you need further explanation :smiley: \n. :+1: \n. See https://github.com/yeoman/generator-gulp-webapp/issues/296#issuecomment-88288293 for explanation why you shouldn't change aynthing in bower_components. Copy the _variables.scss from Bootstrap, @import it before Bootstrap in main.scss and override your variables there.\n. I couldn't get gulp-postcss v5.0.0 to work. I'm not sure if I'm doing anything wrong or it's just broken\u2026\nstream.js:94\n      throw er; // Unhandled stream error in pipe.\n            ^\nReferenceError: Promise is not defined\n    at LazyResult.async (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/node_modules/postcss/lib/lazy-result.js:93:31)\n    at LazyResult.then (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/node_modules/postcss/lib/lazy-result.js:56:21)\n    at Transform.stream._transform (/Users/matija/Code/test/webapp/node_modules/gulp-postcss/index.js:44:10)\n    at Transform._read (_stream_transform.js:179:10)\n    at Transform._write (_stream_transform.js:167:12)\n    at doWrite (_stream_writable.js:226:10)\n    at writeOrBuffer (_stream_writable.js:216:5)\n    at Transform.Writable.write (_stream_writable.js:183:11)\n    at Stream.ondata (stream.js:51:26)\n    at Stream.emit (events.js:95:17)\n. Thanks. So we need to add es6-promise to package.json as well, right?\n. I think you accidentally added it to devDependencies instead of dependencies :smiley: \n. It works, thanks! :+1: \n. Then there's not much point in using gulp-cache at all, is there? Because the images task is only run on build and every time the cache will be cleared.\n. I don't see how gulp-newer is going to help here, we don't want to optimize only newer images, because old images won't end up in the build then.\nI'm closing this because clearing the cache every time would render gulp-cache useless. This should be done manually, in rare circumstances when something went wrong.\nThanks for your effort, though :wink: \n. Thanks :smiley: \n. I agree, by having compiling only main.scss we're losing flexibility for no reason, and without Sass it makes no sense at all, because you'll most probably want more stylesheets.\nThanks for the PR :+1: \n. Glad you worked it out :+1: \n. Is this causing any actual problems other than the warnings?\n. Are you guys having this issue with the latest release, v1.0.0?\n. I used to have these warnings too, but not anymore, after I reinstalled node & npm. Try doing the same, it should work. I suggest using nvm, it makes installing and uninstalling this stuff pretty elegant.\nIf the issue persists after all that, I'll reopen.\n. I agree that we need some kind of a solution for this, because it's a gotcha. But I think this way, where styles and wiredep are ran simultaneously, wiredep will inject Sass dependencies, but because styles already started (or even finished) they won't be compiled that first time.\n. Yeah, I'm reluctant to further complicate gulpfile.js, as this is not a fatal issue, you can just run gulp wiredep yourself if you installed some deps while gulp wasn't watching.\nI suggest that in future you create separate branches for your PRs, because now your new commits on master entered this PR :smiley:\nIf that was intentional, I'd like to keep things separate, so please pick one change set (e.g. bootstrap-sass), move others to a separate branch, and we can rename the PR :wink: \n. Oh, you already did, I didn't see #314.\n. We have it documented here, in our Getting Started guide. Do you think it's hard to find and we could improve it somehow?\n. Oh yeah!\n. By \"build\" you mean the one after running gulp? Is this on a fresh install? You may need to run gulp wiredep.\n. Could you post your gulpfile.js?\n. Oh, it's seems the same as the original, except the Less part. What is your directory structure? What does your index.html look like?\n. I edited your comment to include code tags, read more about GitHub-Flavored Markdown to understand why your code wasn't showing right.\nOk, I see what's wrong. If you do a fresh install, you'll see that those Bootstrap <script> tags used to be surrounded by comments which signaled gulp-useref to concatenate them, you must've removed them accidentally. Read more about that in gulp-useref's docs.\nI'm closing this because it's not an issue with our generator.\n. @1db8k thanks for providing a better solution. I would still like people to add it on their own risk, but purifycss seems like a nice solution. \ud83d\udc4d . Good idea, will do! It's probably dead simple, though.\n. Probably some Bootstrap tips will also be needed.\n. Thanks! I hope this will fix it for good.\n. Thanks a bunch! Could you squash your commits into one? Also, we don't really care for older IEs, so you can drop the IE8 compatibility part, we'll let users decide to add it if necessary.\n. Ping.\n. @MattDiMu maybe you misunderstood what \"rebase\" means. This blog post might help with understanding these concepts a bit.\n. Yeah, those sound like JSHint errors. Let us know if @fernoftheandes's solution doesn't work.\n. Hey, I was also bummed by this, perhaps it's better to ask this on gulp-sass and also add it to their docs. (I'll keep this issue open.)\n. Check this part of gulp-sass docs for more info.\n. No problem, I love writing changelogs anyway. It's been way to long since the last release :sweat_smile: \n. Should I make updates according to API changes then?\n. Yep, our very own major release :tada: \n. Something else must be the case, then. Try updating to latest gulp-sass and follow their sourcemaps example. Does that work?\n. This would introduce inconsistencies with our recipes (and this generator in general), because we don't use gulp-inject anywhere else. Also, what if you need to control the order in which files are injected? The order mostly doesn't matter with vendor libraries, but it sometimes matters with your own files.\n. I'll reopen if convincing arguments are provided.\n. :+1: Sorry, I killed your PR with the latest changes, could you rebase?\n. Thanks so much! Besides my nitpicky comments, could you also squash your commits into one?\nAwesome job :+1: \n. :+1: \n. I made a PR so I can amend if I think of anything else to add. No need to review, you can spend that time watching Hannibal instead, good show.\n. Ok, ready.\n. :+1: \n. Lol, I suck :stuck_out_tongue: Thanks for catching and fixing this :+1: \n. Thanks for reporting :+1: I will see what's the best way to deal with this\u2026\n. Hey, that's a great fix, a PR would be awesome :+1: \nWhat do you think about using assets/fonts/bootstrap/* instead of naming each font individually?\n. Maybe better to have those options in the package.json where the rest of them are? What do you think @kevva?\n. Btw, I restarted the test and now it passes. It sometimes times out, we should probably increase the timeout.\n. You're right, it's best not to mix them.\n. LGTM, thanks! :+1: \n. Do you have a lot of dependencies? gulp-useref takes a while if there are a lot of JS and CSS files to find.\n. Maybe link your gulpfile.js and index.html.\n. Yeah, tinymce has a lot of files. Well, in this case I suggest you just include a concatenated version, perhaps tinymce-dist? Or check out gulp-if's docs for various ways to apply conditions.\n. Does this happen with a fresh install or did you modify your build step? scripts/plugins.js is showing when I build it\u2026\nBtw, don't run gulp build, run gulp instead if you want your directories to be cleaned before building.\n. I pushed some changes, though, which fix the wrong source order. (Bootstrap was loading before jQuery.)\n. I just released it. See the changelog here.\nI now see that this is a dupe of #337 and has been merged as 4b708825cfe2e86fef7af0e2dde157cb0a6eea4e.\n. As far as I can tell, you just need to specify the jquery environment to true. See here for more info.\nThe ESLint config is located in package.json.\n. @dendrochronology good point, I fixed that in b65a1d6eccdc4af38bd38f1a128dd325b017c737.. If you modified your files since you finished scaffolding, that classifies as a support question and is best asked on StackOverflow, providing your gulpfile.babel.js and index.html. Post a link to the question here so people can follow and answer it.\nIf you haven't modified anything, then that is an issue with our generator, in that case please post your gulpfile.babel.js and index.html here.\n. On StackOverflow use the tags #yeoman and #gulp.\n. No problem :+1:  Could you explain exactly what you did wrong? That way other people who stumble upon this issue will also know.\n. Oh, right. gulp-useref couldn't find it then.\n. Added IRC info. Merge?\n. Not sure, I added [ci skip] now, so it won't even start. I guess it's choking because I created a branch here instead of my own fork.\n. Absolutely :+1: We'd like to include it in the core.\n. You can open the PR with what you have and we can help you to finish it.\n. Yeah, some adjustments will have to be made\u2026 Thanks for sharing your workflow.\n. Yeah, it needs to be rebased and updated. I'll soon get around to fixing some long overdue issues, Babel will be one of them.\n. For that we would need to add a module bundler. Since there are so many (browserify, webpack, jspm\u2026), we're hesitant about that. E.g. webpack could replace gulp altogether, so that would be a major rewrite and should perhaps be a separate project.\nDo you have some preferences?\n. @alexej-d yes, my thoughts exactly.\n. Released in v1.1.0.\n. @Keyamoon by the way, I'm maintaining generator-wbp, which uses browserify and stuff, it might be what you're looking for?\n. @Keyamoon I feel you. I spent a lot of time using and studying these tools, here's the summary of my experience:\n- gulp \u2013 useful for presentation sites and small JS apps, but not flexible enough for heavy JS apps\n- browserify \u2013 easy to understand for beginners, but a task runner like gulp is probably still needed, and browserify's setup is not so pretty :sweat_smile: \n- webpack \u2013 useful for JS apps (not so much for presentation sites), harder to understand at first, but totally worth it because it's very powerful and flexible with a much smaller configuration, no task runner needed\nIf you have questions, feel free to send me an email or something, I'd be happy to help further.\n. It works! Could you just update Bootstrap dependencies to ~3.3.5? (And squash it into this commit.)\n. Awesome! Thanks :+1: \n. Released in v1.0.2.\n. @WXLWEB What do you mean? This generator provides jQuery.\n. For the first issue, I think that for some reason gulp wiredep didn't run in your case. Remove that line you added, run gulp wiredep and see if it gets injected into the scripts/vendor.js comment block.\nThe second issue might be solved in the same way. It would help if you tell us which options you selected and what does your web inspector console say.\n. I added it, but I think it would be much nicer if the global gulp was picking up the locally installed gulp, like jspm does.\n. Which version of the generator are you using? Does this happen on a fresh install or did you modify something?\n. Run this:\nsh\nnpm ls -g | grep generator-gulp-webapp\nWe'll start from there.\n. There have been a fair amount of releases since then. Could you upgrade to the latest version and try again?\nnpm install --global generator-gulp-webapp\n. Thanks for a well-composed issue :+1: This error happened because for some reason you don't have babel installed in your project, i.e. in the node_modules directory. We put it in devDependencies in package.json, so the npm install command which ran after scaffolding should've installed it. Could you poke around to see why this is not the case?\n. It was fixed in 31348ff1acc393af507a7b8a192d767cf9737021, as the reference above your comment says, it just wasn't released yet :wink:\nNow it's released in v1.0.3.\n. The fix is released, though :wink: \n. Glad you got it working :+1: Yeah, probably a caching issue. What was the error you were encountering when trying with the latest release?\n. The problem is that gulp is still searching for babel/register instead of babel-core/register (babel module was renamed to babel-core). You should reset it by reinstalling it \u2013 npm install --global gulp did it for me. (This is probably what you did as part of reinstalling iojs).\n. npm install -g gulp doesn't help?\n. Couple of ideas:\n- npm cache clean\n- npm uninstall -g gulp, open a new Terminal tab, npm install -g gulp\n- reinstall node, as a last resort\nTry them out. The last one should work, but it shouldn't really come to that.\n. Whoa\u2026 that should've worked :confused: Are you on OS X? Are you up for pairing with tmate?\n. Gulp searches for both. First babel-core/register, then babel/register. I'm not sure anymore whether Babel wants us to install babel or babel-core?\n. Might be better to raise an issue in gulp's repo, if there isn't one already.\n. @alphapilgrim this problem happens with a fresh install? Or did you use a nonexistent Babel preset?\n. Did you then try to gradually get from the fresh install to that state to see where it went wrong?\n. @dpalomar could you make sure that latest babel-register, gulp (both locally) and gulp-cli (globally) are installed?\n. A new version was released where we don't parse gulpfile with Babel anymore (i.e. we renamed gulpfile.babel.js to gulpfile.js), because Node v4+ support a lot of ES2015 features. So this issue should be gone. Hopefully people will stop torturing this poor thread \ud83d\ude13 \n. @bleedkaga please raise a new issue, this is not related to babel-register.\n. @bleedkaga Maybe. If you open a new issue \ud83d\ude01 \n. Just remove the console.log line in main.js.\n. Oh, I misunderstood the question :smile: \n. This is not really an issue with our generator, you were asking where you can pass options to UglifyJS. You can pass them here, like so:\njs\n.pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\nLet me know if that worked. Btw, this is a support question and questions like this are better asked on Stack Overflow.\n. Thanks!\n. I think we should try to set it up with gulp-rev, let's see how we can make it as simple as possible.\n. Btw, thanks so much for helping us with this one.\n. Thanks for sharing your workflow! I guess it will need to be a bit of an overkill :confused: \n. Especially because this generator is meant for webapps. Jekyll is more suited for blogs and simple sites like that.\n. It doesn't apply here, but thanks for reporting.\n. Cool, thanks!\n. Could you clarify the issue? What do you mean by default? Why would you need to have it in development?\n. But you already do have it. gulp-useref is taking care of that here.\nWhat precisely do you want that this gulpfile is not offering?\n. Sorry, I should've asked first.\n. Great, thanks :+1: \n. We will update once it's stable.\n. Fixed by @MarkyMarkNo1 in #621. I'll drop a comment when I release this.. LGTM. @arthurvr?\n. Thanks!\n. I don't think Heroku supports static sites, but I guess it can be faked :smile: \n. :+1: \n. Great!\n. Hey :smiley: This question is better suited for Stack Overflow . Please ask the question there and post a link to it here, so we can answer :wink: More info here.\n. Hey :smiley: This generator is intended for static content and single-page apps. Users might have very different stacks so we don't want to assume anything because no stack is the best. I.e. the best stack for you is the one you feel most comfortable in.\nYou could try if a different generator suits you better. E.g. search for \"express\".\n. It does. When you run yo gulp-webapp, the generator asks you whether you want to include Sass (it's on by default). If it's included, you shouldn't have to do any extra work to compile Sass files. Run it again and let us know how it went.\n. Great to hear that! :+1: \n. GitHub issue tracker is for reporting actual bugs. This is a support question and it's better suited for Stack Overflow.\n. You should run bower install --save while gulp serve is running or explicitly run gulp wiredep if you installed Bower deps while gulp wasn't watching :wink: Read this for more info.\n. Thanks! :+1: \n. Wow, thanks :+1: \n. Interesting\u2026 The CSS minification module is actually downloading that stylesheet and inlining it, I had no idea :smile: If you update gulp-minify-css:\nsh\n$ npm install --save-dev gulp-minify-css\nDoes it work then?\n. gulp-minify-css uses clean-css, so jakubpawlowicz/clean-css#612 might be related.\n. Could you provide a demo, where you do a fresh scaffold of the latest version, then update gulp-minify-css and do a minimal set of changes to reproduce the issue?\n. That's too bad :confused: But I'm glad you figured it out.\n. This line minifies CSS. Is this not the case for you?\n. \"Holy git\"?! Hahaha, awesome, totally stealing that one :+1: \n. Yes, we are serving only from .tmp and app. You can add imported to that array and reach those assets with /test1/path/to/asset. Let me know if that works.\n. @vennsoh make sure your load URL starts with /test1/, not ../imported/test1/. If that doesn't work, try moving your imported directory to app (if your workflow allows it), in that case your ../imported/test1/ path should work.\n. Closing due to inactivity. If there are further issues I'll reopen.\n. You should update your version of generator-gulp-webapp:\n$ npm install --global generator-gulp-webapp\n. There are many ways to do this, what @gaboesquivel linked seems good. You can also use gulp-template and load the API URL from a git-ignored file.\nI hope you managed to solve the problem.\n. Thanks!\n. Maybe you were referring to generator-angular.\n. What @sindresorhus was referring to is e.g. linter-eslint. Plugins for your favorite text editor will work much better than linting on file change, because they lint as you type instead of as you save and you can immediately see the line number, the error etc.\n\n. Yeah, probably not, but it's still a recommended way to go. You can always add that gulp.watch line yourself if your editor doesn't support it. When I'm working in my editor, having to check the terminal for errors every now and then is very inconvenient.\nDoes your editor have a plugin? Do you have a better solution?\n. Closing this because it's a problem editor plugins are much better at solving.\n. We'll keep this open until that issue is resolved. Too bad :confused: \n. It's resolved.\n. Thanks @alferov :+1: \nAlso, make sure that gulp serve is running while you install dependencies (with correct bower.jsons :sweat_smile:). Read this for more info.\n. This is not related to generator-gulp-webapp, but to generator-angular. Please raise the issue there.\n. Can you elaborate? What are you trying to achieve?\n. :+1: \n. @sscarduzio we haven't yet released the change where serve:dist automatically runs build as well, but that's coming with the next release.\n. We don't favor one templating language over another, because it usually depends on the situation. Sometimes you can get away with Mustache, but if you need more control, you might choose Lo-dash or Jade. We don't think there's a single right choice, so we leave it up to the user.\n. Yes, of course :+1: You can just fork this generator, make required changes for Jade support and publish it.\n. Good idea.\n. Done.\n. Do you have a lot of images? Because the images task can take a while the first time, before it caches. Does this happen with a fresh install? It takes when I run it ~2.5s.\n. > Perhaps all of this is fixed in gulp 4?\nI'm using gulp 3 and it's fast for me, so it's gotta be something else. Which version of gulp and Node are you using exactly?\n. I tried on that version of node, but it's still ~700ms. @sindresorhus any ideas?\n. Could someone try if updating Babel to v6 helps?\n$ npm install --save-dev babel-core@latest babel-register babel-preset-es2015\nThen add .babelrc:\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}\nNow try to run a gulp command.\n. In the PR above I implemented @neilhem's solution. Thanks for the suggestions everyone, that should take care of this problem.\n. Version bump is coming soon.\n. Released in v2.1.0.\n. This is a internet connection or a firewall issue, like the output says. eschnou/ardrone-webflight#49 might help.\n. Thanks! :+1: \n. Could you be more specific? You have a hard time debugging both node and React errors? Do you have an example?\n. This is not an issue with this generator, it's a problem with the specific tools you are using. In your case, gulp-react's stack trace doesn't contain the file name.\nSupport questions should be asked on Stack Overflow.\n. Awesome! Thanks :+1: \nLike in generator-webapp, we intended for this feature to be hidden behind a flag because it's so common, i.e. to turn it off you would pass --no-babel to yo gulp-webapp. Would you it be too much trouble to implement it that way?\n. I never liked that condition either, it was added because of some errors, probably imagemin trying to optimize non-images. But AFAIK imagemin ignores non-image files, right @kevva?\n. It was added by #323, there was a discussion about it in https://github.com/google/web-starter-kit/issues/579#issuecomment-75457434. Could you check if this works with the latest version of gulp-cache?\n. It works fine, so I removed the condition.\n. Thanks :smiley: Though I think it might be better to replace gulp-react with gulp-babel, see the deprecation notice. Perhaps gulp-babel has better error handling.\n. gulp-babel should be the same thing, only better. But the error handling should be checked.\n. Awesome! Thanks :+1: \n. The config is included here. What kind of errors do you get?\n. Closing due to inactivity. Config in package.json and .eslintrc should behave the same.\n. Does explicitly running gulp wiredep work?\n. Similar issues have been reported and it always turned out that gulp serve wasn't running or something similar. Refer to our Bower notes for more info.\n. Thanks :+1: \n. I like toggle selection. It would probably be better to suggest this in Inquirer.js repo.\n. Closing this as it should be raised at Inquirer.js, we can't change it :confused: \n. Thanks :+1: \n. Sure :smiley: Is the Babel ecosystem ready, though?\n. We'll update to gulp v4 when it's stable. #124 is the issue that's waiting for v4, so we don't have too keep this open.\n. Released in v1.1.0.\n. I don't understand why so many people thought that generator-gulp-webapp is generator-angular :confused: Thanks for reporting the issue, could you please raise it there as well?\n. This generator is the gulp version of generator-webapp. (There\u2019s no mention of Angular in that blog post.)\n. Just released v1.0.4, thanks for the push :+1: \n. Sorry for the late response, did you try scripts/main.js instead of ../app/scripts/main.js?\n. This part of the docs might be helpful.\n. Sorry, could you rephrase the issue? What is npm install global?\n. I believe other tasks are run in parallel, just that clean task happens to always finish first. Does it work fine even if you don't return?\n. Thanks @w0rd-driven for your work on this. Because adding clean as a dependency to 4 tasks is still a workaround, I wanted to wait for gulp v4 so we can solve this the right way.\n. I have decided to go with run-sequence to fix this problem. It's fixed in 91fe09b78fcb312fe128cc90bc4349d436cd4711 and published in v2.2.0. While I was doing the change I forgot about this PR, otherwise I would suggest it here. Thanks for your effort! \ud83d\udc4d \n. Thanks for the push, will be releasing a new version very soon.\n. Released in v1.0.4.\n. Hello @arcseldon, thanks for bringing this up. Not sure if you're aware of the ESLint config already included in package.json. I believe all you have to do is add \"es6\": true. Once Babel support is added one way or another (#413), we will certainly add this.\n. > Only change I made was in the version of Bootstrap to v.2.3.2.2\nWhich version? Did you type that correctly?\n. > I changed to the tag v2.3.2.2\nMy bad, I didn't know they versioned like that before.\nWhat happens when you run gulp wiredep? Does the problematic path to bootstrap.scss update?\n. I looked more closely at the error. The problem is that bootstrap/variables.scss doesn't exist relative to bootstrap/bootstrap.scss. This is a problem with that version of bootstrap-sass (see twbs/bootstrap-sass#950).\n. I'm guessing you had Sass off, so gulp-plumber was missing. Fix released in v1.1.1.\n. Thanks :+1: I didn't see this PR so I made the change already, but I wanted to merge this to see what will happen. Apparently there are two commits now with the same change? :smile: \n. I believe this has just been fixed by @jkatsnelson in #622. Let me know if this is still an issue and I'll gladly reopen.. What do you mean? We don't have components as separate entities, it's all just in index.html.\n. The repo you're looking for is generator-angular, this is generator-gulp-webapp :wink: \n. My bad, then this is the repo you're looking for :smile: \n. Just remove this:\njs\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.cssnano()))\n    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n. Yes, also turn on the indentedSyntax option in gulp-sass. Let me know if that works.\n. Don't we use those already? :smiley: \n. Try upgrading npm install --global generator-gulp-webapp.\n. Try removing '.tmp/scripts/**/*.js', from the gulp.watch command in the serve task. I believe that's what's causing the issue.\nIf it works for you, I'll apply the fix.\n. We should really specify versions that our recipes work in :sweat_smile: There was a breaking change in gulp-nunjucks-render v2, so try using path in the configuration instead of using $.nunjucksRender.configure, like this. Let me know if that worked.\n. You can make a PR to fix the recipe if you want to. Otherwise I'll do it.\n. Hm, not sure if I understand the question. You usually don't manage a project with generators, you scaffold them once. Can you explain what do you want to achieve?\n. There are different ways you can go about it, depending on your situation. You can have a single gulpfile.js, package.json etc. for all of these templates somehow, but then rebuilds might be slow. Or you could use webpack which is smarter about rebuilds (but webpack has a steeper learning curve). You could ask this question on Stack Overflow or Quora, you'll probably get some great ideas if you explain your situation in details.\n. It creates inline maps. You can see them at the end of compiled CSS files. Do sourcemaps not work for you or you just prefer to have them in a separate file?\n. I haven't, make sure you have the latest version of the generator and that the Babel option isn't off for some reason.\n. The suggestion is to keep paths in variables?\n. There were discussions about this, for example #295. We believe this generator is too simple for introducing variables. The gulpfile.js is not that repetitive, so this would be premature optimization.\n. YES. I tried doing that already in yeoman/generator-webapp#565, but it wasn't well received. What did you have in mind exactly? Having both Grunt and Gulp options?\n. :+1: \n. Nice job!\n. Which version of the generator are you using? Were you getting this error on fresh install as well? This line has nothing to do with the Pug recipe, so there's something else going on here.\nI'll be happy to reopen if you provide more info.\n. Closing due to inactivity.\n. Although .nunjucks is a long extension, I like this idea. I'll wait a bit to see what the others say.\n. @joelbschwartz I would like to merge this PR with the extension .njk (sounds like a better abbreviation). Sorry for the small merge conflict caused by 880d6fd8995b2027d30aab55c4deef01c6bf0042 :sweat_smile: \n. @joelbschwartz stacked extensions seem mostly like a Rails convention. We should then also use .css.scss and .js.babel, but I'm not a fan. I would prefer just .njk if that's ok.\n. Yeah, let's do it like that for now. One question: I've just seen this change: path: 'app/layouts', doesn't this only allow layouts? What about partials? Maybe it's better to have it set to app?\n. I'd prefer to have layouts and includes side by side, if possible. I feel like that is a convention among static site generators. _header.njk is not a layout, it's a partial, so it's confusing to me as well :confused: \nThanks so much for your help :+1: \n. Could you squash your commits? I promise that's the last thing! :wink: \n. @valtido not sure which plugin you are using, but you could submit a PR to add the njk extension. E.g. in sublink-nunjucks that could be this part (I don't use Sublime, so I'm not sure).\n. There are merge conflicts. Could you rebase on top of latest master?\n. Beat you to it :wink: Thanks for the fix!\n. Depends on your templating configuration, I'm not sure what you're using. You could try changing this in html task:\njs\nreturn gulp.src('app/*.html')\nto this:\njs\nreturn gulp.src(['app/*.html', 'app/accessible/*.html'])\nor to include all HTML files except those in includes and layouts:\njs\nreturn gulp.src([\n  'app/**/*.html',\n  '!app/includes/**/*.html',\n  '!app/layouts/**/*.html'\n])\n. @CesarDenis could you share the whole gulpfile.babel.js? It will be much easier to help once I see what templating solution is used.\n@artoric \ndiff\n gulp.watch([\n-  'app/*.html',\n+  'app/**/*.html',\n   'app/images/**/*',\n   '.tmp/fonts/**/*'\n ]).on('change', reload);\nHowever, some paths might break in nested HTML files, you should probably start convert them to / paths.\n. @CesarDenis only watch .tmp/**/*.html for reloading in the serve task, not app/**/*.html as well. You want the browser to refresh once the Nunjucks templates have already been compiled. Also, you put .tmp/*.html instead of .tmp/**/*.html, the former goes only one level deep.\n. js\n  gulp.watch([\n    '.tmp/**/*.html',\n    '.tmp/scripts/**/*.js',\n    'app/images/**/*',\n    '.tmp/fonts/**/*'\n  ]).on('change', reload);\n. @rizqinizamil what is the difference between those two code blocks?\n. Ok, this seems to be a tricky problem.  Correct me if I'm wrong, but the way I understand it is that if you have files at different directory levels extending the same layout with the same useref blocks, assets won't be served/built correctly because they are relative to the HTML files, which exist on different levels.\nRight?\n. This generator is meant more for single page apps, that's why it doesn't support nesting like this. I'll see what I can do, but it will take me some time. If you want, you can create a demo repo with this use case and link it here (let's use Nunjucks), so we can open PRs with our proposed solutions.\n. Thanks for your help :+1:\nThe styles task is still not quite right, though. The diff should look like this:\ndiff\n gulp.task('styles', () => {\n   return gulp.src('app/styles/*.scss')\n     .pipe($.plumber())\n     .pipe($.sourcemaps.init())\n-    .pipe($.sass.sync({\n-      outputStyle: 'expanded',\n-      precision: 10,\n-      includePaths: ['.']\n-    }).on('error', $.sass.logError))\n+    .pipe($.less({\n+      paths: ['.']\n+    }))\n     .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n     .pipe($.sourcemaps.write())\n     .pipe(gulp.dest('.tmp/styles'))\n     .pipe(reload({stream: true}));\n });\nAlso, yes, feel free to dump the Source Maps section :+1: We already include them here by not deleting the $.sourcemaps part.\nWhen you're done, please squash your commits so you end up with a single one.\n. Thanks! Looks great now :+1: \n. Half of them are coming from gulp, nothing we can do about that. gulpjs/gulp#1485\nNot sure where the rest are coming from or how to find that out :confused: \n. > Does anyone know if this will this insert a security issue into production sites?\nI'm pretty sure that's only a problem if you're using it on a server. In this case you're just using these tools to generate the frontend.\nBut bumping dependencies is certainly in order\u2026\n. We're updating dependencies in the next release, but many deprecation warnings will remain. Nothing we can do about that\u2026\n. Interesting minimal approach. My three main concerns:\n- no syntax highlighting, I assume\n- including same things in every page is still repetitive, I prefer having a single layout file which \"wraps around\" the pages\n- as soon as users want something more advanced, they need to switch to something else\nI would rather if people went for the Nunjucks recipe, it still seems fairly simple.\n. I'd definitely like to have some built-in templating solution, because it has been requested so many times. I'll take some time to make the decision.\n. We decided not to have a built-in templating solution, they are too arbitrary without a clear winner. \ud83d\ude15 Would you like to add gulp-file-include as a recipe?\n. We designed paths to assets to be very portable, so they should work anywhere if you just copy over the contents of dist. What doesn't work in particular?\n. In deployment you run gulp, then you upload only the generated dist directory to production. Why are you also uploading app?\n. Glad it works :+1: The linting failed silently or did it produce an output in the command line?\n. Yeah, always look in the command line just to be safe :wink: \n. Which Node version are you running? Try using v4 or later.\nIf that doesn't work, this is a stretch, but try using gulp-postcss + autoprefixer instead of gulp-autoprefixer. So instead of this:\njs\n// in the styles task\n.pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\nwrite this:\njs\n// along with other imports\nimport autoprefixer from 'autoprefixer';\njs\n// in the styles task\n.pipe($.postcss([\n  autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']})\n]))\n. @sassquad before trying the 2nd version you need to install gulp-postcss and autoprefixer. But I'm glad you got it working with a newer version of Node, that was the problem then :+1: \nI'll reopen if that doesn't fix it for @joepegler.\n. Yeah, it's probably unrealistic to still support 0.x versions, considering apparently our deps are dropping support.\n. #453\n. @tpinne wiredep will run automatically as soon as you change bower.json while running gulp serve. You shouldn't change anything between bower:ext comments, because wiredep will overwrite those. You should manually select plugins that you need with the overrides option, or exclude those that you don't need using the exclude option. Check wiredep's configuration for more info.\nHow did grunt version work differently? If it let you to manually remove stuff between bower:ext comments, that was a bug.\n. Thanks for your contribution :+1: However I don't see how this is necessary, the dist directory is cleaned up before each build and it doesn't serve a purpose in development.\nCould you elaborate?\n. I'd like to dump Node 0.x versions, our generator doesn't seem to work on those anyway. #467 \nAll aboard? @sindresorhus @SBoudrias @addyosmani\n. I was hoping pushing to master will apply to Travis tests for this PR, apparently I need GitHub lessons. Could you cherry pick 3e4526f548f7195658dc771e3e41e94f84458419 or something?\n. This has been suggested a few times, see the discussion in #295.\nTL;DR in my opinion the gulpfile is too simple to introduce variables, it's not repetitive enough to be worth it. If you have a use case you can show me step by step where having variables would save you trouble, I'm listening :ear: \n. Oh my. Thank you :+1: \n. It looks nicer because there aren't multiple columns in the initial design, the default width looks too wide. But thanks for raising this issue, I was wondering the same for a second :smile: \n. Yes. You can checkout the legacy-grunt branch and npm link that as the generator.\nsh\n$ git clone https://github.com/yeoman/generator-webapp\n$ cd generator-webapp\n$ git checkout legacy-grunt\n$ npm link # this will install dependencies and link it as the global package\n$ cd path/to/your/project\n$ yo webapp\nLet me know if that works.\n. https://github.com/yeoman/generator-webapp/pull/481#issuecomment-258635233\n. While we're at it, could you please change this:\njs\ngulp.watch('app/scripts/**/*.coffee', ['scripts', reload]);\ninto this:\njs\ngulp.watch('app/scripts/**/*.coffee', ['scripts']);\nthen remove this line:\njs\n'.tmp/scripts/**/*.js',\nfrom the serve and serve:test tasks. This removes excessive reloading, we want to reload just once, when all files are compiled, so please make sure this at the end of the scripts and scripts:test tasks:\n.pipe(reload({stream: true}));\nPlease make sure to add correct diff symbols (- and +).\n. I just re-read the title of your PR. You don't have to do all that, just what I commented on the diff.\n. @inspiredbytes thanks for your contribution! \ud83d\udc4d \n@sindresorhus @ivan-vilches this recipe needs other updates, it has some mistakes unrelated to the PR. I'll post here in an hour when I'm done.\n. Actually, tomorrow, there's more work than I thought.\n. @inspiredbytes @ivan-vilches I thoroughly updated the recipe. Now it should work just fine with the latest version of generator-webapp.\n. @alphapilgrim sorry for the super late response. These babel-register errors totally bum me out because we've been receiving a lot of them and I have no idea how they happen. Could we set up some kind of screen share or, better yet, a tmate session?\n. :confused: Well, let me know if that happens again.\n. Yeah, babel-preset-es2015 is missing in your case.\n. It's best to put this as part of the production build step, i.e. in the html task. Currently we're running cssnano, but you can combine uncss and cssnano using lazypipe with gulp-if.\n. I haven't tested it, but by following these docs you can do something like this:\n``` js\nconst stylesChannel = lazypipe()\n  .pipe($.uncss, { html: 'app/*.html' })\n  .pipe($.cssnano);\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/.html')\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', stylesChannel()))\n    .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\n``\n. Yeah, that's why I shy away from those tools. There's feature coming to Chrome DevTools for auditing CSS, basically you start auditing, click around your app and DevTools highlights which parts of your CSS are not being used. I think that feature is in Canary, Paul Irish talked about it, but I wasn't able to find it.. Thanks!\n. Thanks!\n. @jolugama I agree. Could you submit a PR? :grin: If you don't have time, that's ok.\n. Fixed with #489.\n. @danmv it's coming from Sass, apparently, so you should dig there if your error message has the same stack trace.\n. Thanks!\n. It should work out of the box. Are you running v2.0.0? Do you have JavaScript enabled?\n. It should work without../../because we're [modifying Sass load paths](https://github.com/yeoman/generator-webapp/blob/25b0f3560211207f3cf2c27bacae2d46ded28758/app/templates/gulpfile.js#L18) to include the project root directory. Are you getting an error? Does it happen with a fresh install or have you changed something?\n. This is because of modified load paths. I guess this approach is problematic if you have any kind of path checking \ud83d\ude15 You could remove [this line](https://github.com/yeoman/generator-webapp/blob/25b0f3560211207f3cf2c27bacae2d46ded28758/app/templates/gulpfile.js#L181) from your gulpfile and rungulp wiredepagain to fix all the paths withinbower:scss` comments.\n. This line will error out then, no?\njs\n.pipe($.clean());\nI'm not sure why it's cleaning after deployment anyway. But it should clean up before, which is not happening currently. Seems to me something like this is needed:\n``` js\ngulp.task('upload', ['build'], () => {\n  // gh pages stuff\n});\ngulp.task('deploy', ['clean'], () => {\n  gulp.start('upload');\n});\n```\nWhich gets around the issue where Gulp cannot specify the order in which tasks will run.\n. Oh, my bad. I thought you were removing gulp-clean from the recipe, not adding it. Nevermind :grin: \n. You need to bower install stuff after running gulp serve. Read this section to understand that gulp serve watches your bower.json for changes and runs gulp wiredep. If you ran bower install without gulp serve running, you can run gulp wiredep manually.\n. @miketricking running gulp wiredep does nothing? There is no angular-ui-sortable between the bower:css comments?\n. When updating major versions of npm packages, you should either run npm install package@2 or npm install package@latest.\n. This is a tough cookie. But frontend dependencies have fewer and fewer images (e.g. a carousel library should use inline SVG), so we decided to leave images up to the user. It's probably easiest to just manually copy images over to your project once.\n. Yeah, that would work assuming the images are listed under the main field in bower.json, which is rarely the case in my experience.\n. Thanks for your contribution \ud83d\udc4d I was thinking about this as well, but imagine how frustrating it would be having that task rebuild the app every time. Maybe you want to shut down the server for some reason, then later check again, now you have to rebuild again. If you have a good reason for this that I overlooked, I'm open to convincing.\n. Hm, you're right. The main reason why you'd want to restart serve:dist is probably to check new changes. Could you rebase and resolve conflicts? Then I'll merge it.\n. Thanks! I changed it to run default instead of build to ensure a clean build.\n. Bootstrap depends on jQuery, so we don't explicitly add it if Bootstrap is included. It looks like you want to add it as a development dependency, so your command should work just fine. Can you try it in an isolated environment, just bower install jquery#1.12.3 --save-dev to see if it was added in dev dependencies?\n. There are two possible solutions, other than the one you proposed:\n1. '.tmp/*.html' shouldn't be in gulp.watch, does just removing it solves the problem for you?\n2. solution 1 + remove .pipe(reload({stream: true})) and add reload to the array tasks when watching .jade files, i.e. ['views', reload]\nIf none of these work, I'll use the solution you proposed.\n. Fixed.\n. I will reopen if we get new information. A fresh build doesn't ignore SCSS files.\n. Does this checklist help? What happens when you run gulp wiredep?\n. Your own JS files are not automatically wired up, because we don't know in which order you might want to put them and whether you are compiling them with browserify etc.\n. Close due to inactivity. If this is still an issue, I'll reopen.\n. This is generator-webapp, not generator-angular (if that's the one you were aiming for).\n. ESLint rules.\n. Thanks!\n. Thanks!\n. @Trost123 good point. I agree with the 1st step, but the 2nd step may be problematic because nunjucks and reload are executing at the same time, it's just a coincidence that nunjucks finishes before browser reload. We should add it at the bottom of the nunjucks task, like we do in the Pug recipe.\nWould you like to submit a PR?\n. I already tried this with Grunt and it didn't work out. The fatigue of having to categorize tasks and jumping between files is greater than the small benefit of doing this. Also, gulpfiles are much smaller, therefore easier to manage.\n. Also, those don't seem to be best practice, they are just recipes for those who want it.\n. @sindresorhus @kevva because this has been requested multiple times (#472, #295\u2026), do you think we should finally add it?\n. @srahulprdxn hey! I tried following the recipe myself and everything worked. I'm pretty sure that in your default.njk (or whatever your layout file is called) between comment blocks you are referencing a file which doesn't exist, so gulp-useref crashes. Could you also paste your .njk templates? Did this happen on a fresh install? Did you modify anything else than what the recipe instructed?\n. Closing due to inactivity. I will gladly reopen when we get new info.. @denysbutenko AFAIK that won't work, useref won't download remote files.. The dependencies should be injecting automatically. If you have to manually add them, something is wrong, gulp wiredep should work.\nPlease list the exact steps, what you're doing and you expected to happen. (Reproduce this from the fresh install.)\n. We should run wiredep as a part of the serve task to avoid these problems. Currently gulp can't run tasks in sequence, but we can get around it by creating an assets task containing styles, scripts and fonts, which will depend on wiredep, then serve would simply depend on assets.\nNot sure if there are drawbacks to this approach. If anyone's up for a PR, speak! \ud83d\ude09\n. @Trost123 yeah, that's also a good workaround. \ud83d\udc4d \n. @thepossumstudio hey, thanks for being so clear and detailed!\n1. This one puzzles me, Gulp is supposed to detect both gulpfile.js and gulpfile.babel.js, the difference being that gulpfile.babel.js should be parsed with Babel. I tried this myself and it works fine \ud83d\ude15\n2. There is an open PR for this: yeoman/generator-mocha#40\nI'll keep this open until these are resolved. Not sure what to do about the 1st issue. Does Gulp report that it cannot find the gulpfile?\n. What @neilhem said \ud83d\ude01 \n. I haven't had a chance to play with it yet, but it does look awesome. I'd love to have it, but in the form of a composed generator.\nIdeally, there should be a generator-ava. More ideally, there should be a generator-test which composes generator-mocha, generator-jasmine, and generator-ava, so we can compose generator-test.\nI'd be up for creating generator-ava, but I can't promise \ud83d\ude01 \n. I updated the recipe and fixed some things, it should work properly now. Let me know if you have any more problems with it.\n. Have you checked taptapship/wiredep#217 out?\n. Thanks Kevin!\n. I'm going to need more info than that \ud83d\ude01 (I'll reopen if there was an actual problem.)\n. Yeah, node-sass is built with the current version of Node, so you need to rebuild it if you update Node.\n. You're not the only one, I don't find it particularly useful either. I think simply passing ghostMode: false to Browsersync should work.\n. @kb-git did any of the provided solutions fix your problem?\n. Closing due to inactivity. Will reopen if new info is provided. \ud83d\ude09 . @rbosneag I believe you're using generator-cg-angular15, not generator-webapp. Correct me if I'm wrong.. When you change the initial structure, something is not working and you don't know where it wen't wrong, it's best to ask questions like these (support questions) on StackOverflow under the tag #yeoman.\nAlso, it helps when you try your best to isolate the issue and describe exactly what changes you made from the initial build. It's easiest to track that down when commit immediately after you scaffold (run yo webapp). Then using git diffing you'll know exactly what you changed.\nI moved styles from styles directory to css and did a search and replace in the gulpfile.js from app/styles to app/css and it worked fine. So your gulpfile must be failing elsewhere, probably at templates. Sometimes gulp fails silently at some tasks, so you have to isolate the issue by taking out pieces and see when it starts working again.\nWhen/if you post your question on Stack Overflow, please share the link here so we can answer.\n. Just remove those buid:css and build:js comments from index.html where you don't need minification  and concatenation.\n. If you don't want them concatenated and minified on build step. Otherwise why would you need to?\n. Just in production, which is a common performance pattern. That's what those build comments do.\n. @sscarduzio thanks for letting us know, I've added it to the docs. Let me know if it's clear enough.\n. Hey :smile: Are you closing the issue because you solved it?\n. It definitely should not be that slow, mine runs under 1 second. It has to be something about your environment, so please give me any details that you can. Version of this generator, Node version etc. If I don't find a clue there, I can try to solve it on your machine using tmate.\n\nAlso, upon installation, I noticed a new option, Choose your DSL. What is that all about?\n\nThat's from generator-mocha. Maybe composed generators should have their name included before the question, but that issue should be taken to yeoman-generator.\n. Yeah, Bootstrap is huge and libsass may run faster or slower depending your machine. The fact that it completed under a second without Bootstrap indicates that.\nI'm still wondering why it took almost a minute the first time, but I don't think it's an issue with this generator. Which generator options did you choose? Sass or CSS?\n. You mean you accidentally made a PR?\n. Actually, it would be a bit silly for us to add gulp-data to every template recipe, and implementation of gulp-data is very arbitrary, so we will trust our users to figure it out on their own, or alternatively stumble upon this issue. \ud83d\ude04 \n. Congratulations for your first contribution! Sorry for getting around to your PR so late \ud83d\ude05 Everything is great except one tiny indentation bit in the following comment\u2026\n. I was talking about the two lines right above my comment, not the ones you edited now \ud83d\ude01 Could you revert that change and fix those instead?\n. Great! I squashed your commits and pushed them manually, because squashing can be a drag for new contributors. Congratulations for your first contribution! \ud83c\udf89 \n. Thanks! How did that get in there \ud83d\ude05 \n. I bumped to a newer version of generator-mocha which includes a more verbose message:\nChoose your style of test DSL for Mocha (bdd, tdd)\n. This sounds like an obscure bug specific to your environment. We're using BrowserSync as our server, you could try searching through issues there. Also, try with the BrowserSync's CLI.\n. Lower versions don't support arrow functions and other ES2015 features. You should've gotten an error when installing generator-webapp that your Node version isn't high enough, as specified in our package.json. Perhaps you missed it?\n. Not sure why Travis isn't running\u2026 could you just run npm test if you haven't, just to be sure that tests pass at least for your Node version?\nThanks for the PR \ud83d\udc4d \n. Thanks \ud83d\udc4d \n. What is the error you're getting? Which Node version are you running?\n. If you provide valid steps for reproducing this bug (from fresh install), I'll reopen and we'll fix this. But it seems like you modified something, which makes it no longer work.\n. @koltejas sorry, I didn't quite understand. Could you describe the expected vs. actual dist directory?. How about \"Which additional features would you like to include?\"\n. Great! Could you please squash your commits into one?\n. @plonko now there are 4 commits, the goal is to have 1 commit (in this case). \ud83d\ude01 Here's an article on how to do it. After you squash the commits, a force push (git push -f) will be necessary. If you need help, let me know. \ud83d\ude09\nYou can see how many commits there are in a PR by clicking on the \"Commits\" tab.\n. @neilhem thanks, totally forgot about that. \ud83d\ude05 \n. You're right, the build step is not taken care of. Yes, the recipe is following the former approach, where templates are compiled into JavaScript. If you'd like to complete the recipe with the build step, it would be greatly appreciated \ud83d\udc4d Let me know if you need help.\n. @amobrem does #565 help?\n. @amobrem not sure, I'll have to try out the recipe myself, next week.. @AurelioDeRosa that would be useful. In the meantime, you could try gulp-compile-handlebars or gulp-handlebars-html.. #565 is merged and corrected in master. Let me know if there are any problems with it.. So it works in development? What did you change exactly from the initial build? Can you give me the steps to reproduce this?\n. Since you're already using browserify, you could use npm for dependencies instead of bower and require them as modules from your files.\nFrom this it's still hard to see what could be the problem, because your scripts task only deals with bundle.js, not vendor.js. Did bundling vendor files stop working after you implemented the browserify recipe?\nCould you start from a fresh install when everything is working, and gradually start implementing your desired setup until your issue occurs? Or provide a more complete demo?\n. Closing due to inactivity. Will gladly reopen once we get more info. \ud83d\udc4d \n. Good catch, thanks!\n. We should write a Compass recipe, I'm surprised that there isn't one already.\n. Hey, sorry for the late reply. Thanks for your contribution! Could you also delete the Jade recipe? It feels weird to have them both. \n. Thanks for your PR \ud83d\udc4d The problem is that wiredep might not be run first, all these tasks are run in parallel, which is a limitation of Gulp v3. We should think of a solution which ensures that wiredep will be run first, maybe as a dependency of the default task?\n. Have you tried fixing the syntax error like @neilhem suggested?\n. @lmdrx I assume the issue is resolved then? I'll gladly reopen if that's not the case.\n. @eBaeza I'm sorry that I'm so late with the review, please let me know if there's anything else I can help with.\n. Hey \ud83d\ude03 The problem is that there's no guarantee that set-prod-mode will be executed before the fonts task, because these tasks are executed in parallel. Maybe add set-prod-mode as the dependency of the default task?\n. Maybe there's a way to this without creating the set-prod-mode task just to set a variable. Have you tried setting the variable in the default task instead?\njs\ngulp.task('default', ['clean'], () => {\n  dev = false;\n  gulp.start('build');\n});\nThanks for you contribution ideas! \ud83d\udc4d I'd be interested in running wiredep before serve and default in a separate PR. I think for default there's no need for run-sequence, just add it as a dependency next to clean, but serve is a bit tricky. You can open a PR with the suggested solution and we can discuss from there. \ud83d\ude09\nGenerating image sprites and extracting critical CSS are great ideas for recipes. \ud83d\udc4d \n. @Trost123 would you like to send another PR for this if you still want this change? I'm so sorry for the delay.\n. This is a good idea, I'd like the generator to have a flag like this.\n. a month later \ud83d\ude13 \nDid you find why you were receiving that error? It looks like you had a syntax error in your JS, so UglifyJS was crashing.\n. @vmahadev are you still having issues with this? The previous error was because of a syntax error, is there a different error now?\n. @dendrochronology yeah, gulp-if has some problems with passing wrong files through. We added a workaround for this and I just released it in v2.4.0. The fix is 0ee21efe8ca883a7dcc6c4a64f151af5ad79c208, so please try it. \ud83d\ude09\nI'm closing this due to inactivity. I will gladly reopen once we get new info.. The recipe configures browserify to only understand JS modules. Have you tried searching for a transform suitable for this job? I'm not sure how Angular wants those HTML modules processed.\n. We just teach you how to set it up, you customize it. \ud83d\ude09\n. On my machine .map.js file ends up in .tmp/scripts as expected. \ud83d\ude15 Also, I don't understand why would '.' write the map to app/scripts, but '../scripts' would write it to .tmp/scripts\u2026?\n. Have you tried updating gulp-sourcemaps to v2? Our version is a bit outdated\u2026\n. I'm curious about those conditional comments for IE7, as we don't have those. What did you change exactly and which version of generator did you scaffold your project with?\n. It looks like gulp-uglify is trying to parse HTML, I wonder why\u2026\nDoes this happen on fresh install or are there some steps to reproduce this? There have been few releases since v2.0.0, does upgrading and building again help?\n. @monomichael maybe, does it help to update gulp-if, if you don't already have the latest version?\n. Awesome! In the recent versions of generator-webapp we already have gulp-if updated, so hopefully this isn't an issue anymore. I will gladly reopen if someone still has problems with this. \ud83d\ude09 . @sherifsaleh does this happen on a fresh install? Did you modify anything else? Is your gulp-useref up-to-date?. @hamedtaha are you using the latest version of generator-webapp?. @hamedtaha so this happens on a fresh install or did you modify anything? Could you paste your gulpfile.js?. I don't understand. The [new line] that you described don't match the generated index.html. It should look like this: <!-- build:js scripts/vendor/modernizr.js -->[new line]<script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\"></script>[new line]<!-- endbuild -->\nCould you paste your index.html?. This:\nhtml\n<!--\nendbuild\n    -->\ncouldn't have happened with our setup, you did that somehow. Maybe that's what was throwing gulp-useref off.\nHow are background images related? Also, those URLs aren't processed in any way.. Ok, let's back up \ud83d\ude04 what is the issue exactly?. But you said that it's working after fixing that endbuild whitespace, or?. @weltonrodrigo I hope you managed to solve this problem using @neilhem's suggestion. This use case is too uncommon for us to add it to the generator. I was thinking of eventually revamping the test generators, but that's not related to this one.\nLet us know if we can help further!\n. I agree with @sindresorhus, it would be great as a recipe!\n. @SakoMe glad that you solved your problem! In future, yo doctor can detect stuff like that. \ud83d\ude09 \n. @heinhoang try updating yo (FountainJS/generator-fountain-webapp#56). If that didn't help, I'll reopen.\n. Excellent, thanks so much! There's just two things:\n1. Why does changing an HTML file trigger views?\n2. This way changing an HTML file in app no longer triggers a page refresh, no?\n. Got it, I didn't know you can add HTML files to Nunjucks. Thanks so much for your contribution. \ud83d\udc4d \n. @Trost123 sure! Would you like to \"correct\" it by submitting a PR?. Hey, thanks for reporting this. I will release a patch version today and let you know when it's out.\n. v2.3.1 released.\n. Thanks a bunch! \ud83d\udc4d \n. I'll reopen this as a reminder to incorporate gulp-gh-pages if it indeed there is something wrong with the recipe.\n. @s3c0nDD what do you mean? We don't generate a README.md yet.. This is the README of the generator-webapp project. This issue was referring to the customized README generated by the yo webapp command (which doesn't exist yet). Instead of people having to look in this project's README for usage instructions, they would have it right there in the scaffolded files.. Oops, we already have an issue for that. #560\n. @neilhem yeah, Bootstrap's JS plugins are inserted into a separate useref comment block, but it could just as well be a part of the vendor.js comment block, which would save an HTTP request.\nNow that I think about it, I remember I wanted to change it previously, but it was tricky\u2026\n. @neilhem good idea!\n. One way is to include them all in the vendor.js block:\nhtml\n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<!-- endbower -->\n<!-- insert Bootstrap plugins here -->\n<!-- endbuild -->. Might get invalidated by #592.\n. @eddiemonge what do you mean?\n. It still sucks to have outdated docs lying around. But yeah, I see how silly my idea was, especially because some recipes can't be fully integrated, like the CoffeeScript one which involves changing tests.\nThanks for the talk.\n. Whoa\u2026 thanks! My publish command silently failed I guess. \ud83d\udc4e \nI bumped the version and published from there, even though an earlier commit is tagged (otherwise I'd have to force push). Hopefully that won't cause problems\u2026\n. v2.3.2 released.\n. v2.3.2 released. Sorry about that. \ud83d\ude05 \n. That is correct, thanks! \ud83d\udc4d \n. @stibay thanks!. npm rebuild rebuilds dependencies, which is useful for those who contain C/C++ (your first code block hinted that). Usually when you compile a C/C++ dependency with one Node version, it won't work on another.\n. Great question, I don't think we need them in production. Feel free to open a PR \ud83d\ude09 \n. I think generator-webapp upgraded successfully, what does npm ls -g generator-webapp say?\nThis bower error looks like you don't have Bower installed globally. What does bower --version say?\n. To install Bower:\nnpm install --global bower\nI'm not exactly sure about the warnings, though the last warning means you don't have permissions set properly there.\n. The key question here is: does it work? \ud83d\ude09\n. #606 . You're using an old version of generator-webapp. Please upgrade:\nnpm install --global generator-webapp\n. It sounds like you made some modifications to your setup since you initialized it. Could you provide steps to reproduce this?. But users should have yo installed, no? The fact that npm is sometimes not registering yo to be installed is another problem\u2026. Yep, you're right. peerDependencies make more sense for non-global dependencies.. Hi @ui-aliraza, thanks for submitting a PR! This looks like treating a symptom rather than a solution to the problem. The html task already depends on styles, so styles should definitely be executed during build.\nDoes this problem happen for you on a fresh install or did you modify something which could've caused the issue?. Could you clarify what you mean by \"commented state\"? How did you change the styles?. I would appreciate that, thanks. \ud83d\udc4d . @ui-aliraza ping \ud83d\ude09 . Closing this due to inactivity. I will gladly reopen once more info is provided. \ud83d\udc4d. @WadeShuler thanks for the contribution! \ud83d\udc4d Isn't the line right above saying to install yo globally?\n\n\nInstall dependencies: npm install --global yo gulp-cli bower. Oh, I just saw your explanation in another issue. Instead of double-installing it like this, I think we should tell users to ignore the warning. What do you think?. @gsportelli you should import variables.scss outside of bower:css block comments, otherwise that @import statement will disappear as soon as wiredep is ran. Do this instead:\n\n\n```scss\n$icon-font-path: '../fonts/';\n@import \"variables.scss\";\n// bower:scss\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\nBtw, do all these themes consist only of _variable.scss?. @gsportelli no, it's wiredep, we're calling it in this task.. Concerning the _bootswatch.scss file, you should probably import it after the comment block.. It should work on 4.4.7, I tried it myself.\n\nmake sure you have latest version of npm and yo installed:\nsh\nnpm install --global npm\nnpm install --global yo\nnpm --version # should be 4.0.5\nyo --version # should be 1.8.5\nrun yo doctor to check if there are any other problematic details about your environment, then\ntry running yo webapp again.. Don't worry about that message, it's a known npm issue, that's a false warning.\n\nSo after reinstalling generator-webapp yo webapp still doesn't work?\nI can't reproduce this, in my case require('ansi-regex')() is indeed a function. The only version of ansi-regex where it wasn't a function is v0.1.0, maybe that one got installed in your case. Try digging up in your global node_modules (check ansi-regex/index.js), hopefully you'll get a clue what happened.\nI don't think this is an issue with this generator, but something specific to your environment, so I'm closing this.. @Frondor unfortunately the vue repo doesn't seem to have a bower.json defined at all. Usually wiredep reads the main field of bower.json and injects those files. You could raise an issue there to create a bower.json with the correct main field.. > Using the default settings nothing happens\nThe expected behavior is that dist/images is populated with optimized copies of images in app/images. Run gulp clean, then run gulp images, does dist/images exist and does it contain images?. Didn't verify, but I'll reopen to remember to check later. Thanks for reporting.. Thanks so much! \ud83d\udc4d . Done. Thanks! \ud83d\udc4d . Personally I like npm + webpack (haven't tried Rollup yet) over bower + wiredep. On one hand adding a module bundler adds complexity, on the other wiredep was confusing to many users, and with a module bundler people can even require stuff like fonts and images. But a module bundler would probably limit this generator to only single page applications.\nI would love to hear opinions about this.. Thanks for pushing this important issue @alexej-d. Unfortunately Yeoman still hasn't come up with a solution for this problem (see yeoman/yeoman#1521 and taptapship/wiredep#234). The most sensible solution is probably to add npm support to wiredep.. @clabnet thanks for listing all the relevant versions! Unfortunately I was not able to reproduce this error. Does this happen on a fresh install? Did you try @gkobilansky's solution?\nTo me it looks like you have invalid JavaScript somewhere. Usually Babel would catch it in development, but you built your app without it. Does gulp lint pass?. @feesh thanks! Could you please check if the b in /\\.css$/b is required for the fix to work?. @clabnet we applied some additional fixes in the meantime, could you try this?. @clabnet I meant that you could apply that change to your generated gulpfile.js, but I just released v2.4.1 so you can update and try it that way too, whatever you want. \ud83d\ude09 . Thanks!. Also, please fix the tests if you can.. @MarkyMarkNo1 awesome! Lastly, I just wanted to know how the changes to the html task are related to Bootstrap 4.. Thanks! \ud83d\udc4d . Thanks!. Maybe we could advise using a gitignored .env file + dotenv.. Thanks!. I will release a version soon.. Thanks! Can the space be before class (inside the if statement), rather than after h1? That way we won't have an extra space if legacyBootstrap is true.. Does this happen with a fresh install or did you change some things? Could you provide steps to reproduce this?. I'm not sure what you mean by \"html5 mode\" and I'm not familiar with connect-modrewrite, but assuming you're trying to build a single-page application, have you tried using connect-history-api-fallback?. I don't use Heroku, but are you sure that package.json got deployed to Heroku? Is there any way to see that?. If you see the very end of that recipe, it says that you should deploy only dist, so I'm guessing that should be your root. Is that possible to do?. Yeah. In any case it appears that modifications to the recipe should be made. If you'd like to submit a PR once you get it working, that would be great. The simpler, the better. \ud83d\ude09 . Wow, thanks! \ud83d\udc4d . I don't think there's a reason for that, thanks for noticing. You can send a PR removing these lines.. Merged, thanks!. Update to the latest version of generator-webapp, or you can copy the fix from here (regexes instead of strings as first params to $.if()).. Wiredep with Pug support is not yet released. In the meantime you can add the config yourself, I think this should do it:\njs\n.pipe(wiredep({\n  exclude: ['bootstrap'],\n  ignorePath: /^(\\.\\.\\/)*\\.\\./,\n  fileTypes: {\n    pug: {\n      block: /(([ \\t]*)\\/\\/-?\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/-?\\s*endbower)/gi,\n      detect: {\n        js: /script\\(.*src=['\"]([^'\"]+)/gi,\n        css: /link\\(.*href=['\"]([^'\"]+)/gi\n      },\n      replace: {\n        js: 'script(src=\\'{{filePath}}\\')',\n        css: 'link(rel=\\'stylesheet\\', href=\\'{{filePath}}\\')'\n      }\n    }\n  }\n})). Have you installed gulp-cli globally? npm install --global gulp-cli? This issue is definitely not about this generator, so I'm closing this issue, but will stick around to help with this problem. \ud83d\ude09 . Our documentation instructs to install it globally, but perhaps it's easy to miss.. Can you share your gulpfile.js?. I thought that maybe you modified gulpfile.js, but this should work fine. It's really hard to tell what could be wrong at this point, either something else is going on here or there's something seriously wrong with Gulp. \ud83d\ude15 . @jdahdah I'm sorry to hear that \ud83d\ude22  you seem to have modified gulpfile.js far beyond the recipe. Could you work on isolating the problem and providing a more minimal demo?. Also, generator-gulp-dahdah wouldn't register for me, I tried both installing it globally and npm linking the cloned repository.. @jdahdah yeah, please, this seems to be related to the Pug recipe.. import/export (i.e. modules) would work only if we were using a module bundler like webpack or browserify, but we're just using gulp-useref. Don't expect modules to work until the native browser support for that lands. Write your JavaScript as described in the link above. \u261d\ufe0f . Closing in favor of #649.. As much as I love webpack, adding a recipe for it would be weird because webpack would entirely replace Gulp. \ud83d\ude04 It wouldn't really be an addition, it would be a rewrite.. Should be #{$font-path}/hinted\u2026, not #{$font-path}/fonts/hinted\u2026, right? Otherwise your path ends up as ../../fonts/fonts/hinted\u2026.. I just checked if this functionality works with the fresh build and it does. You did something very specific in your setup which disabled this functionality. It's best if you ask a question on Stack Overflow, providing more details. You can also paste the link to the question here so we can answer.. So you have lodash available in development, but not in production, or not at all? Maybe all you need to do is override your bower.json to include that file. Something like:\njson\n{\n  \"dependencies\": {\n    \"lodash\": \"~4.17.4\"\n  },\n  \"overrides\": {\n    \"lodash\": {\n      \"main\": \"dist/lodash.min.js\"\n    }\n  }\n}. Thanks!. Did the yo webapp command fail in any way? Did you have Bower installed globally?. You can use gulp-debug to try to debug the issue. Check what's in the stream before $.useref.. @rizqinizamil maybe because you put the regex in quotes? The gulpfile.js we generate doesn't have quotes.. I have no idea what that error means. \ud83d\ude15 You can't run any Yeoman generator or just this one? Does this happen on a fresh install?. @jaysunwalter123 hey! They should be injected as soon as you run gulp serve, otherwise run gulp wiredep manually.. Hey @Migacz85, I don't work with PHP and MySQL, so I may not be very useful. I know that wiredep supports PHP files, so you should be able to set up dependency injection. Minification is also probably a matter of replacing .html with .php, with the possible exception of HTML minification (although maybe that's supported as well).\nHave you tried to do this? Where did you get stuck?\nI'll close this because it's not an issue with the generator, but we can continue the discussion.. You can share your repo with your starter PHP and MySQL setup and I can help you that way.. @mblase75 have you changed your mind about this?. Thank you! \ud83d\udc4d . For that we would need a module bundler. We should probably integrate one soon, and it should probably be browserify, because it integrates well with Gulp. I will close this in favor of #618, because removing Bower will imply some kind of module bundling, which will imply ES6 imports. \ud83d\ude03 . Thanks for fixing this! \u2764\ufe0f . I released v3.0.1.. Hi @ryzokuken, thanks for raising this issue. \ud83d\udc4d The process is not as easy as switching package managers, we need a way to easily consume them. I'm closing this in favor of #618.. @tsndr congratulations on your first PR! Could you give more context for this PR? What problem does it solve?. @tsndr how does that play with the rest of the build system? For example, why would we still use useref for JS if we can include all JS files with require?. Sorry, I didn't mean to discourage you. I really love webpack and I would like to integrate it with generator-webapp, I'm just not sure to what extent this works and what is recommended usage. Would we instruct users to only use this for local files? Also, if we first apply Babel then webpack, could we get ES6 import syntax?\nI get confused when Gulp and webpack mix. I usually use one or the other.. Yeah, this is an unfortunate browser annoyance. Any unique GET param will work, people usually go with ?v=1 then increase that number as they change favicons.. Thanks!. The documentation says to run gulp, not gulp build. gulp also cleans and runs wiredep, so that's the task you should use.\nThanks for being so kind to contribute, let me know if everything is clear and if I should reopen this.. I totally agree, \ud83d\udc4d using them as separate plugins always seemed unnecessarily inflexible to me. . Thanks @MarkyMarkNo1! What are you trying to override? Does the overrides field not work?. Ok, to me this is fine because Bower is deprecated anyway, we can't expect a nice solution because of its limitations.. Awesome, thanks!. ",
    "austinpray": "This might be killing a fly with a bazooka, but I was thinking about using https://github.com/assetgraph/assetgraph#assetgraphmoveassetsqueryobj-newurlfunctionorstring or https://github.com/assetgraph/assetgraph#assetgraphmoveassetsinorderqueryobj-newurlfunctionorstring to allow the use of gulp-rev.\nDo you guys have any opinions on https://github.com/assetgraph/assetgraph ?\n. A config option for libsass would be amazing. Does anybody have a link to a good, up-to-date rundown as to what libsass is missing feature-wise?\n. > Some basic functionality needed to create responsive sites, such as media query interpolation and @content blocks, are not available in Libsass\nWoah, nevermind. I take back what I said earlier, that makes libsass currently DOA for 100% of websites I would use it on. I guess they have a long road ahead of them.\n. \u0f3c \u3064 \u25d5\u25d5 \u0f3d\u3064 @sindresorhus \u0f3c \u3064 \u25d5\u25d5 \u0f3d\u3064 \n. What's the word here?\n. Copy that. PR inbound.\n. Oh my god how did I not know about bower \"overrides\". So many hours of my life...\n. @rizqinizamil that is not an appropriate use for bower. You should not be manually placing files in the bower_components directory. If you are dead-set on injecting your custom font via bower, you can create either a remote or local git repository and include it that way.\njson\n\"dependencies\": {\n    \"icon\": \"../your-icon-font/#~0.0.1\",\n}\n. As per: https://github.com/yeoman/generator-gulp-webapp/blob/c976b10904bcb76215b8aa6808db958187f1d45f/app/templates/gulpfile.js#L54\nPlace fonts in the app/fonts/ directory\nInclude the font CSS as a SCSS include in app/styles/main.scss\n. @rizqinizamil what are you even doing? Why are you changing the return statement? The return statement does not need to be changed, the original works fine for your purposes.\n. @rizqinizamil \nThis is what the generator spits out by default: return gulp.src(require('main-bower-files')().concat('app/fonts/**/*')).\n. I did some soul searching and it turns out I really was just looking for a way to easily update my gulpfile to take advantage of the new features you guys are cranking out. This won't be a problem when this repo reaches a 1.0.0-like stability level.\nAlso the gulpfile relies on directory structure, so what I am asking is pretty complex anyway.\n. :+1: \n. 2 space master-race checking in :+1:\n. I like the .tmp folder. Keeps the repo clean and I use it for serving compiled jade templates.\n. Don't really perceive an actual issue with a tmp folder.\n. Standardized howso? \n. Brb making tempfolderjs\ntempfolderjs\u2122\na lightweight, fast temporary folder framework written in nodejs\n. ### gulp-intermidate\na lightweight, fast temporary folder framework written in nodejs\n. Example of popular feature request:\n\"pls add jade can i use jade with yo gulpwebapp\"\nWith that said:\npls add jade can i use jade with yo gulpwebapp\n. Ty obama\n. Unfunny and apparently obscure internet humor regurgitation on my part. Sorry :P\u2014\nSent from my iPhone\nOn Mon, May 12, 2014 at 3:22 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nObama?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/pull/126#issuecomment-42883141\n. :+1: :+1: :+1: :+1: :+1: :+1: \n. THANK YOU \n. Jekyll 2.0 has built-in sass now.\n. Also with all these easy tools and frameworks it take more effort NOT to use a preprocessor than to use one.\n. Looks nice! I like the CLI element towards the bottom. Like @sindresorhus I am also not a fan of the top left yeoman element.\n\nTake a look at the copy:\n\n\nassets compression\n\nshould be \n\nasset compression \n\n\n\ncompiling Sass with Autoprefixer etc.\n\nshould be\n\ncompiling Sass with Autoprefixer, etc.\n\n\n\nIt automates common tasks such as JavaScript linting, assets compression, compiling Sass with Autoprefixer etc. so you can get that out of the way and focus on more important stuff.\n\nreads better as\n\nIt automates common tasks such as JavaScript linting, assets compression, compiling Sass with Autoprefixer etc. so you can focus on more important tasks.\n\n\nThe github button at the bottom looks much better centered:\n\n. ASCII Yeoman is terrible, please put him out of his misery\n. Oh thank god\n. try running gulp wiredep. It will probably spit out some errors like \"such and such was not included, include it manually\".\n. I don't see any harm in this addition. Would be nice for travis and stuff.\n. Dropping .htaccess makes sense. It's not even a good idea to handle config through a .htaccess file. If you need to configure your apache server you can go seek out a .htaccess config for your purpose or properly configure your server's virtualhost in the first place. As a repository that people look to for best-practices you are doing inexperienced web developers a disservice by providing this example.\nAlso, as a consumer of this generator I don't even use apache, 80% of the time I am running on nginx. So this is just something I have to delete every time I run the generator.\n. @silvenon what am I missing here? Can't you just set the font-path variable? https://github.com/twbs/bootstrap-sass/blob/f0fc412cf352ccace36012c0ef72f176ba16c8a2/assets/stylesheets/bootstrap/_variables.scss#L86\n. So why don't we just keep all the dev bower fonts in the .tmp/fonts folder? Then the URLs for dev and prod will be exactly the same.\n. Yeah it doesn't have to be super complicated. Just have it write to .tmp and dist at the same time.\nPretty much anything is better than parsing a growing css file against a growing list of hardcoded strings.\n. Right but it is the ONLY file that is node. Why not just set jshint node: true Inline if you want to lint the gulpfile with node globals?\nAlso: you will notice if you look at the scripts task the gulpfile is not even linted right now. So I don't know why node would be set to true by default anyway. \nThis is a legitimate oversight whatever way you slice it, please consider reopening. \n. I'll sling a PR your way.\u00a0\u2014\nSent from my iPhone\nOn Wed, Sep 3, 2014 at 7:03 AM, Sindre Sorhus notifications@github.com\nwrote:\n\nI guess we could move it inline in the gulpfile instead.\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/191#issuecomment-54286306\n. :beers:\n. ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0) \n. :beers:\n. Hey @eddiemonge,\n\nGood to hear you guys are working on it. In my mind it is as simple as just removing the .htaccess from the generator. What objections have you guys found to this? Anything I am not considering? \nThanks!\n. gj team\n. Same issue here. \njs\ngulp.task('clear', function () {\n  $.cache.clearAll();\n});\nfixes it for me.\n. Where would partials go? app/templates/partials or app/layouts/partials?\nThis is approximately the structure I use for Angular projects for instance:\nhttps://github.com/fnakstad/angular-client-side-auth/tree/master/client/views\n. > Though I think app/views/pages is a bit too unreachable\u2026\nI agree. I would also like to maintain compatibility/mindshare with\ngenerator-angular and generator-ember.\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 index.jade\n    \u251c\u2500\u2500 about.jade\n    \u251c\u2500\u2500 templates\n    \u2502   \u251c\u2500\u2500 modal.jade\n    \u2502   \u2514\u2500\u2500 tooltip.jade\n    \u251c\u2500\u2500 layouts\n    \u2502   \u251c\u2500\u2500 default.jade\n    \u2502   \u2514\u2500\u2500 static-page.jade\n    \u2514\u2500\u2500 partials (or includes)\n        \u251c\u2500\u2500 footer.jade\n        \u2514\u2500\u2500 header.jade\n- root: main pages stored here. For the purposes of this generator I do not\n  forsee people going crazy and adding dozens of pages. Pages at the root level\n  is how jekyll does it, so people are familiar with this pattern. It also\n  feels natural since the URL references in the document are authored from\n  app/\n- templates: this is where your application's client-side handlebars, angular,\n  whatever templates go. Ideally these are compiled and included as either a single javascript file or are included by the templating engine inline in the html. example another example that way the user does not have to ajax in the additional views at significant cost.\n- layouts: templating engine layouts.\n- partials: templating engine partials\n. fwiw foundation works great with libsass right now. So cross that off the list.\n. This could break a lot of bower deps though. \n. @silvenon I don't know so I propose we find out\n. There isn't enough benefit in minifying HTML to justify even one bug caused by it.\nIf this makes it in it should definitely be an opt-in thing and not a default.\n. Not quite sure why we need opinions when you can just run the numbers.\nhttps://github.com/austinpray/html-minifier-tests\n\nhttps://docs.google.com/spreadsheets/d/1K_mlwDaOdLkPjMwQc81WzINOVFF5PZTQBZGc7TXs1p0/edit?usp=sharing\nSo introducing another step in the build process, another dependency, more tests to this generator, and another surface for bugs to appear all to save 0.352 kB. \n. @alrra yes, there should be more trials with more data to be more scientific. I agree.\nHowever keep in mind the significant difference is not between the unminified and minified html. The difference that we need to measure is between the gzipped unminified html and the gzipped minified html. \nFor instance the original data: \n| Action | Savings |\n| --- | --- |\n| Nothing | 0% |\n| Minify | 35.15% |\nThis looks great at first, it seems as though we just saved 35% of the file size! But look what happens when we add gzip to the equation:\n| Action | Savings |\n| --- | --- |\n| Nothing | 0% |\n| Minify | 35.15% |\n| Gzip | 70.44% |\n| Gzip and Minify | 77.60% |\nSo in actuality compared to leaving the html file alone and minifying there is only a 7.16% difference once gzip is added to the equation. This is consistent with how the gzip algorithm works. The closer the distance between tokens the more efficient the algorithm can compress the files.\n. @maximerassi \n\nUltimately we decided to minify HTML as it can significantly both reduce page transfer time over the network but also rendering speed and stability especially on mobile devices\n\nDo you have any numbers we can look at?\n. @maximerassi Thank you for this, however I was mostly curious about this:\n\nbut also rendering speed and stability especially on mobile devices\n. Okay so I had an hour of free time here while winding down for the day. I improved my minifier testing script: https://github.com/austinpray/html-minifier-tests such that you can load as many .html files as you want into the files/ directory and it will glob and process them. It will also give you a .csv file and a json file in the dist/results folder.\n\n\ncsv table of results\nConclusion\nThere is clearly a negative correlation between file-size and the amount of filesize you save by minifying and gzipping compared to just gzipping. As an HTML document gets bigger minifying makes less of an impact. This is consistent with the way gzip works, the further the tokens from each other the less efficient the compression is.\nUltimately it looks like gzip eats html documents for breakfast whether you minify or not. I would say this is a self-confirmation of my original gut feeling: I would not trade minified html for even one minute of lost productivity due to some subtle bug introduced in the build process.\nPossible Errors\nHand-coded html, html generated by naive templating methods (php echos and such), and html generated by a templating engine (handlebars, jade, haml) are not equal. The first two will have lots of whitespace and the templating engine code will be relatively compressed from the get go. \n. Yes I'm actually writing one now!\u00a0\n\u2014\nSent from my iPhone\nOn Mon, Nov 3, 2014 at 3:44 AM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\n@austinpray would you like to write a blog post?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/215#issuecomment-61455929\n. As a CS major I am fully aware of and agree with the theoretical benfit of minifying before compressing. \n\nWhat I am interested in however are the actual performance metrics this yields. What are the actual numbers? Is the time it takes to decompress on mobile  reduced by 10ms? 2 seconds? What is he actual measurable benefit?\nIf minifying the html was free, I would not care about the benefit as long as it is non-zero. However this is not the case. \nFor instance: the minifier referenced above mangles Angular custom elements and can cause undefined behavior in inline SVG elements. What is the performance benefit that offsets this drawback? Am I saving a full second of rendering time? Hell yeah, sign me up. Am I saving 10ms of rendering time? Hard pass on that. \n. > If you are going to not do html minification then why do css minification? Its the same concept. JS min is slightly different in that it usually has other space saving optimizations that rewrite the code, which to me is far more dangerous. You trust that, so why not find a htmlmin tool that you can trust as well?\n\nIf you argue you shouldn't minify HTML because we have GZIP, then you shouldn't minify your CSS either for the same reason.\n\nOkay hold up for a second. Minifying CSS and minifying JS has nothing to do with minifying HTML. Minifying CSS and JS have their own respective tradeoffs and considerations. They are also three completely separate languages.\nMinifying JS\nI have large single page apps that have JS files that can grow up to a megabyte in size. The savings from minifying, mangling, and gzipping are significant. Minifying, mangling, and gzipping jQuery alone saves 52kb. That order of magnitudes more than 3% or even 10% of an html page.\nYou can easily unit test and e2e test minified JS. You do not have to \"trust\" it, you can simple test it and if the tests pass then you have not introduced any bugs into your application.\nMinifying JS actually makes it run faster. This is a fact you can measure. See for yourself: http://jsperf.com/to-minify-or-not-to-minify\n\nedit: updated to reflect the corrections of @eddiemonge\n\nthe results look weird, so if anyone wants to take a look to verify please do\nMinifying CSS\nCSS is not a whitespace sensitive language. You can easily check css for syntax errors, it's either valid or invalid. My CSS is generated by SASS so I usually trust whatever compiled output comes out of that since it will not let me write invalid css. Tools that restructure your CSS are indeed scary since the output can't easily be tested.\nAnyway, we should try to keep the discussion on topic. If we need to further discuss the merits of minifying CSS and JS it would be appropriate to put those comments in a separate issue.\n. @kevva working on it! I have a deadline today but I'll have it up soon. \n. https://github.com/yeoman/generator-gulp-webapp/issues/195\nhttps://github.com/h5bp/server-configs-nginx\n. Nobody is going to be able to help you unless you post your code. \n. https://github.com/jquery/jquery-mobile/blob/master/css/themes/default/jquery.mobile.css\nThat is not a SCSS import is a regular CSS import. \nIf you want those to be individually compiled I recommend overriding the jquery-moblie main property in the bower.json\njson\n\"overrides\": {\n  \"jquery-mobile\": {\n    \"main\": [\n      \"js/jquery.mobile.js\",\n      \"css/themes/default/jquery.mobile.icons.css\",\n      \"css/themes/default/jquery.mobile.theme.css\",\n      \"css/structure/jquery.mobile.structure.css\"\n    ]\n  }\n}\nedit: keep in mind you will have to deal with the images folder: https://github.com/jquery/jquery-mobile/tree/master/css/themes/default/images\n. Well why not just define what to include in the overrides section of the bower.json?\n``` json\n{\n  \"dependencies\": {\n    \"modernizr\": \"2.8.2\",\n    \"jquery\": \"1.11.1\",\n    \"bootstrap\": \"3.3.1\"\n  },\n  \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"less/bootstrap.less\",\n        \"js/transition.js\",\n        \"js/alert.js\",\n        \"js/button.js\",\n        \"js/carousel.js\",\n        \"js/collapse.js\",\n        \"js/dropdown.js\",\n        \"js/modal.js\",\n        \"js/tooltip.js\",\n        \"js/popover.js\",\n        \"js/scrollspy.js\",\n        \"js/tab.js\",\n        \"js/affix.js\",\n        \"fonts/glyphicons-halflings-regular.eot\",\n        \"fonts/glyphicons-halflings-regular.svg\",\n        \"fonts/glyphicons-halflings-regular.ttf\",\n        \"fonts/glyphicons-halflings-regular.woff\"\n      ]\n    }\n  }\n}\n```\nThat way:\n- the file paths are relative to the project and you avoid having all those in the sass file ../../../\n- nothing hardcoded into the gulpfile\n- uses the existing wiredep/bower-main-files setup in an expected way\n. > Also, I can't figure out why you are talking about Sass while using Less Bootstrap as an example.\nI just copy pasted a random project's bower.json that demonstrated the principle. It could have been foundation or sass bootstrap, doesn't matter. \nI vote for polluting bower.json since it places all the third-party dep management concerns into the bower.json. Also project relative file linking solves the problem of ugly paths. \nAlso the less hard coding we have in the gulpfile the better. Right now excluding bootstrap is hardcoded into the gulpfile. It easier to explain that the bower.json needs to be modified rather than search through the gulpfile to figure out why the bootstrap JS is not being included. \n. :beers:\n. I do not see any benefit to this whatsoever. If anything more verbosity is better, especially for first-time users. This is a generator, it should be as succinct and flexible as possible.\nThese paths are being managed by a robot anyway. Nobody is manually manipulating these. \n. :beers: \n. > I don't know what are the cons, I've never used these myself. \nI have used assetgraph a bit and brought this up a while ago: https://github.com/yeoman/generator-gulp-webapp/issues/1#issuecomment-40427637\nI have used it for:\n- simple one page marketing/branding sites\n- inlining styles when making html emails\nI found it to be very powerful and very flexible. I have never used it with a single page app, but I would be willing to wire it up to a couple toy projects and share my notes with you. \nAs far as livestyle: What's wrong with browser sync?\n. @KingScooty that is not a good idea. Ideally you would have one command that builds for dev and prod. That way you do not run into surprises when you run your deployed code for the first time.\n. This should definitely be optional. Don't like adding extra ruby deps. Once gulp-scss becomes usable we can remove ruby as a dep completely.\n. :+1: \n. Possibly semi-related question: Is there anything super egregious about just using the npm package version to version the assets? scripts/app.js?v={{ version }} -> scripts/app.js?v=1.1.0. On my current project I can't be bothered to deal with proper asset revving. Our CI only deploys to end-users if the package version changes anyway.\n. @silvenon Since we are already using npm for dev dependencies and runtime dependencies (browserify), we go whole hog and just use npm version (major, minor, patch) to keep track of our git tags. Not only is this consistent with our node application workflow, it has the added benefit of being able to use the version specified in package.json in our build process to revv assets. It also avoids this problem.\n. @silvenon Well I am using browserify and not useref so I only have app.css and app.js to append version to. There is no difference between my dev build step from my prod build step except the exclusion of source maps. \nWould like to pick you guys' brains about how I have things set up. I have used generator-gulp-webapp on close to 15 projects now and I am running into some of it's limitations. I'll collect my thoughts and perhaps make an issue with code examples.\n. FYI: node-sass is currently broken on 0.12. Also for the past couple months it intermittently fails to build on linux. \nThe instability is a drag, but I would have a hard time going back to ruby sass. I'm hoping I can spend some time this week to help the node-sass guys get 2.0 out the door.\n. Not supporting latest IE is some silly stuff.\n. For this: \njs\nvar paths = {\n  scripts: ['scripts/**/*.js', '!scripts/libs/**/*.js'],\n  libs: ['scripts/libs/jquery/dist/jquery.js', 'scripts/libs/underscore/underscore.js', 'scripts/backbone/backbone.js'],\n  styles: ['styles/**/*.css'],\n  html: ['index.html', '404.html'],\n  images: ['images/**/*.png'],\n  extras: ['crossdomain.xml', 'humans.txt', 'manifest.appcache', 'robots.txt', 'favicon.ico'],\n};\n\nI thought about it a few times, but each time I realized that paths will differ from task to task. For example, sometimes you might perform a task on all HTML files and sometimes you'd like to exclude 404.html or something similar.\n\nSure.\nFor this: \njs\nvar bases = {\n  app: 'app/',\n  dist: 'dist/',\n};\nThere is no reason to not do this. I do this on every gulpfile I make. Especially when bases with vinyl get complicated.\n. > In my opinion it decreases readability for very little gain.\nWhat is not readable about variables? This is exactly what variables are for.\n. This might be killing a fly with a bazooka, but I was thinking about using https://github.com/assetgraph/assetgraph#assetgraphmoveassetsqueryobj-newurlfunctionorstring or https://github.com/assetgraph/assetgraph#assetgraphmoveassetsinorderqueryobj-newurlfunctionorstring to allow the use of gulp-rev.\nDo you guys have any opinions on https://github.com/assetgraph/assetgraph ?\n. A config option for libsass would be amazing. Does anybody have a link to a good, up-to-date rundown as to what libsass is missing feature-wise?\n. > Some basic functionality needed to create responsive sites, such as media query interpolation and @content blocks, are not available in Libsass\nWoah, nevermind. I take back what I said earlier, that makes libsass currently DOA for 100% of websites I would use it on. I guess they have a long road ahead of them.\n. \u0f3c \u3064 \u25d5\u25d5 \u0f3d\u3064 @sindresorhus \u0f3c \u3064 \u25d5\u25d5 \u0f3d\u3064 \n. What's the word here?\n. Copy that. PR inbound.\n. Oh my god how did I not know about bower \"overrides\". So many hours of my life...\n. @rizqinizamil that is not an appropriate use for bower. You should not be manually placing files in the bower_components directory. If you are dead-set on injecting your custom font via bower, you can create either a remote or local git repository and include it that way.\njson\n\"dependencies\": {\n    \"icon\": \"../your-icon-font/#~0.0.1\",\n}\n. As per: https://github.com/yeoman/generator-gulp-webapp/blob/c976b10904bcb76215b8aa6808db958187f1d45f/app/templates/gulpfile.js#L54\nPlace fonts in the app/fonts/ directory\nInclude the font CSS as a SCSS include in app/styles/main.scss\n. @rizqinizamil what are you even doing? Why are you changing the return statement? The return statement does not need to be changed, the original works fine for your purposes.\n. @rizqinizamil \nThis is what the generator spits out by default: return gulp.src(require('main-bower-files')().concat('app/fonts/**/*')).\n. I did some soul searching and it turns out I really was just looking for a way to easily update my gulpfile to take advantage of the new features you guys are cranking out. This won't be a problem when this repo reaches a 1.0.0-like stability level.\nAlso the gulpfile relies on directory structure, so what I am asking is pretty complex anyway.\n. :+1: \n. 2 space master-race checking in :+1:\n. I like the .tmp folder. Keeps the repo clean and I use it for serving compiled jade templates.\n. Don't really perceive an actual issue with a tmp folder.\n. Standardized howso? \n. Brb making tempfolderjs\ntempfolderjs\u2122\na lightweight, fast temporary folder framework written in nodejs\n. ### gulp-intermidate\na lightweight, fast temporary folder framework written in nodejs\n. Example of popular feature request:\n\"pls add jade can i use jade with yo gulpwebapp\"\nWith that said:\npls add jade can i use jade with yo gulpwebapp\n. Ty obama\n. Unfunny and apparently obscure internet humor regurgitation on my part. Sorry :P\u2014\nSent from my iPhone\nOn Mon, May 12, 2014 at 3:22 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nObama?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/pull/126#issuecomment-42883141\n. :+1: :+1: :+1: :+1: :+1: :+1: \n. THANK YOU \n. Jekyll 2.0 has built-in sass now.\n. Also with all these easy tools and frameworks it take more effort NOT to use a preprocessor than to use one.\n. Looks nice! I like the CLI element towards the bottom. Like @sindresorhus I am also not a fan of the top left yeoman element.\n\nTake a look at the copy:\n\n\nassets compression\n\nshould be \n\nasset compression \n\n\n\ncompiling Sass with Autoprefixer etc.\n\nshould be\n\ncompiling Sass with Autoprefixer, etc.\n\n\n\nIt automates common tasks such as JavaScript linting, assets compression, compiling Sass with Autoprefixer etc. so you can get that out of the way and focus on more important stuff.\n\nreads better as\n\nIt automates common tasks such as JavaScript linting, assets compression, compiling Sass with Autoprefixer etc. so you can focus on more important tasks.\n\n\nThe github button at the bottom looks much better centered:\n\n. ASCII Yeoman is terrible, please put him out of his misery\n. Oh thank god\n. try running gulp wiredep. It will probably spit out some errors like \"such and such was not included, include it manually\".\n. I don't see any harm in this addition. Would be nice for travis and stuff.\n. Dropping .htaccess makes sense. It's not even a good idea to handle config through a .htaccess file. If you need to configure your apache server you can go seek out a .htaccess config for your purpose or properly configure your server's virtualhost in the first place. As a repository that people look to for best-practices you are doing inexperienced web developers a disservice by providing this example.\nAlso, as a consumer of this generator I don't even use apache, 80% of the time I am running on nginx. So this is just something I have to delete every time I run the generator.\n. @silvenon what am I missing here? Can't you just set the font-path variable? https://github.com/twbs/bootstrap-sass/blob/f0fc412cf352ccace36012c0ef72f176ba16c8a2/assets/stylesheets/bootstrap/_variables.scss#L86\n. So why don't we just keep all the dev bower fonts in the .tmp/fonts folder? Then the URLs for dev and prod will be exactly the same.\n. Yeah it doesn't have to be super complicated. Just have it write to .tmp and dist at the same time.\nPretty much anything is better than parsing a growing css file against a growing list of hardcoded strings.\n. Right but it is the ONLY file that is node. Why not just set jshint node: true Inline if you want to lint the gulpfile with node globals?\nAlso: you will notice if you look at the scripts task the gulpfile is not even linted right now. So I don't know why node would be set to true by default anyway. \nThis is a legitimate oversight whatever way you slice it, please consider reopening. \n. I'll sling a PR your way.\u00a0\u2014\nSent from my iPhone\nOn Wed, Sep 3, 2014 at 7:03 AM, Sindre Sorhus notifications@github.com\nwrote:\n\nI guess we could move it inline in the gulpfile instead.\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/191#issuecomment-54286306\n. :beers:\n. ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0) \n. :beers:\n. Hey @eddiemonge,\n\nGood to hear you guys are working on it. In my mind it is as simple as just removing the .htaccess from the generator. What objections have you guys found to this? Anything I am not considering? \nThanks!\n. gj team\n. Same issue here. \njs\ngulp.task('clear', function () {\n  $.cache.clearAll();\n});\nfixes it for me.\n. Where would partials go? app/templates/partials or app/layouts/partials?\nThis is approximately the structure I use for Angular projects for instance:\nhttps://github.com/fnakstad/angular-client-side-auth/tree/master/client/views\n. > Though I think app/views/pages is a bit too unreachable\u2026\nI agree. I would also like to maintain compatibility/mindshare with\ngenerator-angular and generator-ember.\n.\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 index.jade\n    \u251c\u2500\u2500 about.jade\n    \u251c\u2500\u2500 templates\n    \u2502   \u251c\u2500\u2500 modal.jade\n    \u2502   \u2514\u2500\u2500 tooltip.jade\n    \u251c\u2500\u2500 layouts\n    \u2502   \u251c\u2500\u2500 default.jade\n    \u2502   \u2514\u2500\u2500 static-page.jade\n    \u2514\u2500\u2500 partials (or includes)\n        \u251c\u2500\u2500 footer.jade\n        \u2514\u2500\u2500 header.jade\n- root: main pages stored here. For the purposes of this generator I do not\n  forsee people going crazy and adding dozens of pages. Pages at the root level\n  is how jekyll does it, so people are familiar with this pattern. It also\n  feels natural since the URL references in the document are authored from\n  app/\n- templates: this is where your application's client-side handlebars, angular,\n  whatever templates go. Ideally these are compiled and included as either a single javascript file or are included by the templating engine inline in the html. example another example that way the user does not have to ajax in the additional views at significant cost.\n- layouts: templating engine layouts.\n- partials: templating engine partials\n. fwiw foundation works great with libsass right now. So cross that off the list.\n. This could break a lot of bower deps though. \n. @silvenon I don't know so I propose we find out\n. There isn't enough benefit in minifying HTML to justify even one bug caused by it.\nIf this makes it in it should definitely be an opt-in thing and not a default.\n. Not quite sure why we need opinions when you can just run the numbers.\nhttps://github.com/austinpray/html-minifier-tests\n\nhttps://docs.google.com/spreadsheets/d/1K_mlwDaOdLkPjMwQc81WzINOVFF5PZTQBZGc7TXs1p0/edit?usp=sharing\nSo introducing another step in the build process, another dependency, more tests to this generator, and another surface for bugs to appear all to save 0.352 kB. \n. @alrra yes, there should be more trials with more data to be more scientific. I agree.\nHowever keep in mind the significant difference is not between the unminified and minified html. The difference that we need to measure is between the gzipped unminified html and the gzipped minified html. \nFor instance the original data: \n| Action | Savings |\n| --- | --- |\n| Nothing | 0% |\n| Minify | 35.15% |\nThis looks great at first, it seems as though we just saved 35% of the file size! But look what happens when we add gzip to the equation:\n| Action | Savings |\n| --- | --- |\n| Nothing | 0% |\n| Minify | 35.15% |\n| Gzip | 70.44% |\n| Gzip and Minify | 77.60% |\nSo in actuality compared to leaving the html file alone and minifying there is only a 7.16% difference once gzip is added to the equation. This is consistent with how the gzip algorithm works. The closer the distance between tokens the more efficient the algorithm can compress the files.\n. @maximerassi \n\nUltimately we decided to minify HTML as it can significantly both reduce page transfer time over the network but also rendering speed and stability especially on mobile devices\n\nDo you have any numbers we can look at?\n. @maximerassi Thank you for this, however I was mostly curious about this:\n\nbut also rendering speed and stability especially on mobile devices\n. Okay so I had an hour of free time here while winding down for the day. I improved my minifier testing script: https://github.com/austinpray/html-minifier-tests such that you can load as many .html files as you want into the files/ directory and it will glob and process them. It will also give you a .csv file and a json file in the dist/results folder.\n\n\ncsv table of results\nConclusion\nThere is clearly a negative correlation between file-size and the amount of filesize you save by minifying and gzipping compared to just gzipping. As an HTML document gets bigger minifying makes less of an impact. This is consistent with the way gzip works, the further the tokens from each other the less efficient the compression is.\nUltimately it looks like gzip eats html documents for breakfast whether you minify or not. I would say this is a self-confirmation of my original gut feeling: I would not trade minified html for even one minute of lost productivity due to some subtle bug introduced in the build process.\nPossible Errors\nHand-coded html, html generated by naive templating methods (php echos and such), and html generated by a templating engine (handlebars, jade, haml) are not equal. The first two will have lots of whitespace and the templating engine code will be relatively compressed from the get go. \n. Yes I'm actually writing one now!\u00a0\n\u2014\nSent from my iPhone\nOn Mon, Nov 3, 2014 at 3:44 AM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\n@austinpray would you like to write a blog post?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/215#issuecomment-61455929\n. As a CS major I am fully aware of and agree with the theoretical benfit of minifying before compressing. \n\nWhat I am interested in however are the actual performance metrics this yields. What are the actual numbers? Is the time it takes to decompress on mobile  reduced by 10ms? 2 seconds? What is he actual measurable benefit?\nIf minifying the html was free, I would not care about the benefit as long as it is non-zero. However this is not the case. \nFor instance: the minifier referenced above mangles Angular custom elements and can cause undefined behavior in inline SVG elements. What is the performance benefit that offsets this drawback? Am I saving a full second of rendering time? Hell yeah, sign me up. Am I saving 10ms of rendering time? Hard pass on that. \n. > If you are going to not do html minification then why do css minification? Its the same concept. JS min is slightly different in that it usually has other space saving optimizations that rewrite the code, which to me is far more dangerous. You trust that, so why not find a htmlmin tool that you can trust as well?\n\nIf you argue you shouldn't minify HTML because we have GZIP, then you shouldn't minify your CSS either for the same reason.\n\nOkay hold up for a second. Minifying CSS and minifying JS has nothing to do with minifying HTML. Minifying CSS and JS have their own respective tradeoffs and considerations. They are also three completely separate languages.\nMinifying JS\nI have large single page apps that have JS files that can grow up to a megabyte in size. The savings from minifying, mangling, and gzipping are significant. Minifying, mangling, and gzipping jQuery alone saves 52kb. That order of magnitudes more than 3% or even 10% of an html page.\nYou can easily unit test and e2e test minified JS. You do not have to \"trust\" it, you can simple test it and if the tests pass then you have not introduced any bugs into your application.\nMinifying JS actually makes it run faster. This is a fact you can measure. See for yourself: http://jsperf.com/to-minify-or-not-to-minify\n\nedit: updated to reflect the corrections of @eddiemonge\n\nthe results look weird, so if anyone wants to take a look to verify please do\nMinifying CSS\nCSS is not a whitespace sensitive language. You can easily check css for syntax errors, it's either valid or invalid. My CSS is generated by SASS so I usually trust whatever compiled output comes out of that since it will not let me write invalid css. Tools that restructure your CSS are indeed scary since the output can't easily be tested.\nAnyway, we should try to keep the discussion on topic. If we need to further discuss the merits of minifying CSS and JS it would be appropriate to put those comments in a separate issue.\n. @kevva working on it! I have a deadline today but I'll have it up soon. \n. https://github.com/yeoman/generator-gulp-webapp/issues/195\nhttps://github.com/h5bp/server-configs-nginx\n. Nobody is going to be able to help you unless you post your code. \n. https://github.com/jquery/jquery-mobile/blob/master/css/themes/default/jquery.mobile.css\nThat is not a SCSS import is a regular CSS import. \nIf you want those to be individually compiled I recommend overriding the jquery-moblie main property in the bower.json\njson\n\"overrides\": {\n  \"jquery-mobile\": {\n    \"main\": [\n      \"js/jquery.mobile.js\",\n      \"css/themes/default/jquery.mobile.icons.css\",\n      \"css/themes/default/jquery.mobile.theme.css\",\n      \"css/structure/jquery.mobile.structure.css\"\n    ]\n  }\n}\nedit: keep in mind you will have to deal with the images folder: https://github.com/jquery/jquery-mobile/tree/master/css/themes/default/images\n. Well why not just define what to include in the overrides section of the bower.json?\n``` json\n{\n  \"dependencies\": {\n    \"modernizr\": \"2.8.2\",\n    \"jquery\": \"1.11.1\",\n    \"bootstrap\": \"3.3.1\"\n  },\n  \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"less/bootstrap.less\",\n        \"js/transition.js\",\n        \"js/alert.js\",\n        \"js/button.js\",\n        \"js/carousel.js\",\n        \"js/collapse.js\",\n        \"js/dropdown.js\",\n        \"js/modal.js\",\n        \"js/tooltip.js\",\n        \"js/popover.js\",\n        \"js/scrollspy.js\",\n        \"js/tab.js\",\n        \"js/affix.js\",\n        \"fonts/glyphicons-halflings-regular.eot\",\n        \"fonts/glyphicons-halflings-regular.svg\",\n        \"fonts/glyphicons-halflings-regular.ttf\",\n        \"fonts/glyphicons-halflings-regular.woff\"\n      ]\n    }\n  }\n}\n```\nThat way:\n- the file paths are relative to the project and you avoid having all those in the sass file ../../../\n- nothing hardcoded into the gulpfile\n- uses the existing wiredep/bower-main-files setup in an expected way\n. > Also, I can't figure out why you are talking about Sass while using Less Bootstrap as an example.\nI just copy pasted a random project's bower.json that demonstrated the principle. It could have been foundation or sass bootstrap, doesn't matter. \nI vote for polluting bower.json since it places all the third-party dep management concerns into the bower.json. Also project relative file linking solves the problem of ugly paths. \nAlso the less hard coding we have in the gulpfile the better. Right now excluding bootstrap is hardcoded into the gulpfile. It easier to explain that the bower.json needs to be modified rather than search through the gulpfile to figure out why the bootstrap JS is not being included. \n. :beers:\n. I do not see any benefit to this whatsoever. If anything more verbosity is better, especially for first-time users. This is a generator, it should be as succinct and flexible as possible.\nThese paths are being managed by a robot anyway. Nobody is manually manipulating these. \n. :beers: \n. > I don't know what are the cons, I've never used these myself. \nI have used assetgraph a bit and brought this up a while ago: https://github.com/yeoman/generator-gulp-webapp/issues/1#issuecomment-40427637\nI have used it for:\n- simple one page marketing/branding sites\n- inlining styles when making html emails\nI found it to be very powerful and very flexible. I have never used it with a single page app, but I would be willing to wire it up to a couple toy projects and share my notes with you. \nAs far as livestyle: What's wrong with browser sync?\n. @KingScooty that is not a good idea. Ideally you would have one command that builds for dev and prod. That way you do not run into surprises when you run your deployed code for the first time.\n. This should definitely be optional. Don't like adding extra ruby deps. Once gulp-scss becomes usable we can remove ruby as a dep completely.\n. :+1: \n. Possibly semi-related question: Is there anything super egregious about just using the npm package version to version the assets? scripts/app.js?v={{ version }} -> scripts/app.js?v=1.1.0. On my current project I can't be bothered to deal with proper asset revving. Our CI only deploys to end-users if the package version changes anyway.\n. @silvenon Since we are already using npm for dev dependencies and runtime dependencies (browserify), we go whole hog and just use npm version (major, minor, patch) to keep track of our git tags. Not only is this consistent with our node application workflow, it has the added benefit of being able to use the version specified in package.json in our build process to revv assets. It also avoids this problem.\n. @silvenon Well I am using browserify and not useref so I only have app.css and app.js to append version to. There is no difference between my dev build step from my prod build step except the exclusion of source maps. \nWould like to pick you guys' brains about how I have things set up. I have used generator-gulp-webapp on close to 15 projects now and I am running into some of it's limitations. I'll collect my thoughts and perhaps make an issue with code examples.\n. FYI: node-sass is currently broken on 0.12. Also for the past couple months it intermittently fails to build on linux. \nThe instability is a drag, but I would have a hard time going back to ruby sass. I'm hoping I can spend some time this week to help the node-sass guys get 2.0 out the door.\n. Not supporting latest IE is some silly stuff.\n. For this: \njs\nvar paths = {\n  scripts: ['scripts/**/*.js', '!scripts/libs/**/*.js'],\n  libs: ['scripts/libs/jquery/dist/jquery.js', 'scripts/libs/underscore/underscore.js', 'scripts/backbone/backbone.js'],\n  styles: ['styles/**/*.css'],\n  html: ['index.html', '404.html'],\n  images: ['images/**/*.png'],\n  extras: ['crossdomain.xml', 'humans.txt', 'manifest.appcache', 'robots.txt', 'favicon.ico'],\n};\n\nI thought about it a few times, but each time I realized that paths will differ from task to task. For example, sometimes you might perform a task on all HTML files and sometimes you'd like to exclude 404.html or something similar.\n\nSure.\nFor this: \njs\nvar bases = {\n  app: 'app/',\n  dist: 'dist/',\n};\nThere is no reason to not do this. I do this on every gulpfile I make. Especially when bases with vinyl get complicated.\n. > In my opinion it decreases readability for very little gain.\nWhat is not readable about variables? This is exactly what variables are for.\n. ",
    "stephenplusplus": "There isn't. I could make it a priority this coming week to make the conversion over, but if anyone else had more knowledge on the subject of grunt-to-gulp, or simply, using gulp to wrap an existing module, I'd greatly welcome their contribution.\n. I don't know where to put this, but it should just be:\n``` js\nvar wiredep = require('wiredep');\n// When this is executed, it will run the transformation\n// (inject the dependencies into your html)\nwiredep({\n  directory: 'app/bower_components',\n  bowerJson: require('bower.json'),\n  src: 'app/index.html',\n  ignorePath: 'app/'\n});\n``\n. Pretty much!grunt-bower-installjust wrapswiredep. This useswiredepdirectly.\n. Updated! :)\n. Sorry if I missed this. You're probably runninggenerator-gulp-webappversion 0.0.4. You're getting~1.10.2, because of [this](https://github.com/yeoman/generator-gulp-webapp/blob/v0.0.4/app/templates/bower.json#L8). By upgrading togenerator-gulp-webappversion 0.0.5 ([just released](https://github.com/yeoman/generator-gulp-webapp/blob/v0.0.5/app/templates/bower.json#L8), you'll get the new one, and everything will be a-ok again.\n. @silvenon and @sindresorhus, you are true heroes.\n. I'm going to send in a PR in a few minutes and would like you to look at it :)\n. Honestly, I had no idea that was there. That helps explain some of the magic. If I understand correctly, I would personally prefer removingloadPath` -- it makes sense to me to be as honest about the file structure as possible, even with the expense of verbosity.\n@sindresorhus I believe you originally added in loadPath - would removing it cause other issues?\nTo recap the issue:\nWe have $.rubySass's loadPath, which is app/bower_components. That way, from a .scss file, a user can just @import \"name_of_bower_component/name_of_file\";.\nwiredep will inject files with paths based on the file structure. So, it generates: @import \"../bower_components/name_of_bower_component/name_of_file\";. We can use the ignorePath functionality of wiredep to then remove the ../bower_components bit.\nAs I said above, I would prefer the transparency offered by seeing the file path relationship from source to destination. This is already a familiar sight when working with HTML, so in my opinion, the negatives of confusion outweigh the benefits of saving characters.\n. Ready for re-review! (It has been mushed)\n. :-1: \nBut :+1: to liking @silvenon.\n. It already does. I tested and confirmed it's working for me. Please re-open if I misunderstood.\n. The way wiredep works is by inserting all the files that are the main files into your source file. So, because all of those files are listed as \"main\" see the bootstrap-sass bower.json here, they're all being injected. I sent a PR to that repo recently with what I thought was a good suggestion, but they had a better idea, and structured it the way it is now. I honestly don't know which approach is better; the compilation error is beyond me, and seems to be related to the bootstrap-sass source code. I don't know what the best thing they can do to distribute their code, but this apparently won't work.\nAnyway, a solution:\nMake sure you're using the latest wiredep in your project (master already is), and add this to your bower.json:\njson\n{\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      main: [\"vendor/assets/stylesheets/bootstrap.scss\"]\n    }\n  }\n}\nYou can add any other files you might need from their main to the above main array as well.\nOr, another solution:\nYou can exclude bootstrap-sass from wiredep:\njs\nwiredep({\n  exclude: ['bootstrap-sass']\n})\nYou then just manually insert the files you need.\n. @glebm just pushed a new release which should give us the same effect.\nSee: https://github.com/twbs/bootstrap-sass/pull/586#issuecomment-40979658\n. Just for comparison, generator-webapp excludes bootstrap from grunt-bower-install in order to allow devs to pick and choose which files they want. All of the files are hardcoded and injected during scaffolding. We can do the same thing here, if we think that's a benefit. Personally, I think having all of the JS files injected with wiredep is fine, unless that causes any runtime errors. But, I tested just getting the page to load and didn't run into any.\nIf a user doesn't want the JS files, but they do want the Sass, the game is the same as any other Bower package that has stuff they don't want. They have to use exclude to let wiredep know what they don't want. In this case, it could look something like:\njs\nwiredep({\n  exclude: [/bootstrap-sass-official.*.js/]\n})\n. Thanks for sending this in, @cmbaughman. Fortunately, the recent fix upstream has solved this problem. :+1: \n. Hmm, this largely falls in the \"just, w/e\" category for me. I think we're over-thinking things by moving this folder around. I agree with both sides of the discussion linked above. It's nice to see bower_components in the root of your project, and alongside node_modules, well, something about that just feels right. And on the other side, I feel that there is some inherent complexity by serving files magically: \"How did /app/index.html reference /bower_components/jquery/jquery.js without using ../?\" But, I also feel like running any gulp command is magical, as well. Making a user feel \"??\" is unavoidable, whether its here or there or somewhere else. They can always check out their Gulpfile and its configuration, or come to us (here, twitter, or SO) when something can't be resolved.\nI'll just take a vote: :-1: - I don't see enough of a benefit other than consistency with generator-webapp. But, it's ok to be inconsistent from another generator on the little things.\n. Got it, too. Looks like no node_modules directory exists within my_project/node_modules/gulp-useref. Here's my npm-debug:\n4056 silly addNameRange number 2 { name: 'useref', range: '>=0.1.0-0 <0.2.0-0', hasData: true }\n4057 silly addNameRange versions [ 'useref', [] ]\n4058 error TypeError: Cannot read property 'latest' of undefined\n4058 error     at next (/Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/lib/cache.js:744:35)\n4058 error     at /Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/lib/cache.js:732:5\n4058 error     at saved (/Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n4058 error     at /Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n4058 error     at Object.oncomplete (fs.js:107:15)\n4059 error If you need help, you may report this *entire* log,\n4059 error including the npm and node versions, at:\n4059 error     <http://github.com/npm/npm/issues>\n4060 error System Darwin 12.5.0\n4061 error command \"/Users/ssawchukii/.nvm/v0.10.26/bin/node\" \"/Users/ssawchukii/.nvm/v0.10.26/bin/npm\" \"install\"\n4062 error cwd /Users/ssawchukii/dev/play/gulp-webapp-3079\n4063 error node -v v0.10.26\n4064 error npm -v 1.4.3\n4065 error type non_object_property_load\n4066 verbose exit [ 1, true ]\n. It also looks like any installed node module doesn't get gulp-util. Here's gulp-autoprefixer's package.json:\njson\n{\n  \"dependencies\": {\n    \"autoprefixer\": \"~1.1.20140327\",\n    \"bufferstreams\": \"0.0.1\",\n    \"gulp-util\": \"~2.2.12\"\n  }\n}\nand the installed tree:\nmyapp\n-- /node_modules\n---- /gulp-autoprefixer\n------ /node_modules\n-------- /autoprefixer\n-------- /bufferstreams\n. Good question! wiredep will inject all main files from Bower packages, unless it already finds a reference inside of the source file. In other words, index.html is hardcoded with Modernizr in the <head>, so running wiredep will not re-inject it again in the file. The same goes for Bootstrap, as by the time wiredep runs (the last step of scaffolding), Bootstrap will already be in the file. This is the part of the scaffolding process that inserts those files manually.\n\nif I delete a reference to a bower_components js file in my index.html and rerun gulp it should add it back as long as that package is a dependency in my bower.json, correct?\n\nYes.\n. Here's what I have:\n``` bash\n\nnode\nrequire('wiredep')({ directory: 'app/bower_components' })\n{ packages:\n   { modernizr:\n      { main: [Object],\n        type: [Object],\n        name: 'modernizr',\n        dependencies: {} },\n     jquery:\n      { main: [Object],\n        type: [Object],\n        name: 'jquery',\n        dependencies: {} },\n     'kendo-ui':\n      { main: [Object],\n        type: [Object],\n        name: 'kendo-ui',\n        dependencies: [Object] },\n     'bootstrap-sass-official':\n      { main: [Object],\n        type: [Object],\n        name: 'bootstrap-sass',\n        dependencies: {} } },\n  js:\n   [ 'app/bower_components/jquery/dist/jquery.js',\n     'app/bower_components/modernizr/modernizr.js',\n     'app/bower_components/kendo-ui/dist/kendo.ui.core.min.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/button.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/carousel.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/collapse.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/dropdown.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tab.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/transition.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/scrollspy.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/modal.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tooltip.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/popover.js' ],\n  scss: [ 'app/bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss' ] }\n```\n\nTry removing your app/bower_components directory entirely, then running bower install. I had to change your version for bootstrap-sass-official to ~3.1.1, otherwise I was receiving: bower ENORESTARGET  Tag/branch ~3.1.1+2 does not exist.\n. :+1:  sweet!\n. What's your HTML file look like?\n. Can you post the wiredep configuration from your gulpfile, and what was the Bower package you installed and saved that didn't trigger wiredep?\n. Confirmed that didn't work, but it also doesn't work with a JavaScript dependency, either. For now, just run the task manually ($ gulp wiredep) or hooks.\n. There isn't. I could make it a priority this coming week to make the conversion over, but if anyone else had more knowledge on the subject of grunt-to-gulp, or simply, using gulp to wrap an existing module, I'd greatly welcome their contribution.\n. I don't know where to put this, but it should just be:\n``` js\nvar wiredep = require('wiredep');\n// When this is executed, it will run the transformation\n// (inject the dependencies into your html)\nwiredep({\n  directory: 'app/bower_components',\n  bowerJson: require('bower.json'),\n  src: 'app/index.html',\n  ignorePath: 'app/'\n});\n``\n. Pretty much!grunt-bower-installjust wrapswiredep. This useswiredepdirectly.\n. Updated! :)\n. Sorry if I missed this. You're probably runninggenerator-gulp-webappversion 0.0.4. You're getting~1.10.2, because of [this](https://github.com/yeoman/generator-gulp-webapp/blob/v0.0.4/app/templates/bower.json#L8). By upgrading togenerator-gulp-webappversion 0.0.5 ([just released](https://github.com/yeoman/generator-gulp-webapp/blob/v0.0.5/app/templates/bower.json#L8), you'll get the new one, and everything will be a-ok again.\n. @silvenon and @sindresorhus, you are true heroes.\n. I'm going to send in a PR in a few minutes and would like you to look at it :)\n. Honestly, I had no idea that was there. That helps explain some of the magic. If I understand correctly, I would personally prefer removingloadPath` -- it makes sense to me to be as honest about the file structure as possible, even with the expense of verbosity.\n@sindresorhus I believe you originally added in loadPath - would removing it cause other issues?\nTo recap the issue:\nWe have $.rubySass's loadPath, which is app/bower_components. That way, from a .scss file, a user can just @import \"name_of_bower_component/name_of_file\";.\nwiredep will inject files with paths based on the file structure. So, it generates: @import \"../bower_components/name_of_bower_component/name_of_file\";. We can use the ignorePath functionality of wiredep to then remove the ../bower_components bit.\nAs I said above, I would prefer the transparency offered by seeing the file path relationship from source to destination. This is already a familiar sight when working with HTML, so in my opinion, the negatives of confusion outweigh the benefits of saving characters.\n. Ready for re-review! (It has been mushed)\n. :-1: \nBut :+1: to liking @silvenon.\n. It already does. I tested and confirmed it's working for me. Please re-open if I misunderstood.\n. The way wiredep works is by inserting all the files that are the main files into your source file. So, because all of those files are listed as \"main\" see the bootstrap-sass bower.json here, they're all being injected. I sent a PR to that repo recently with what I thought was a good suggestion, but they had a better idea, and structured it the way it is now. I honestly don't know which approach is better; the compilation error is beyond me, and seems to be related to the bootstrap-sass source code. I don't know what the best thing they can do to distribute their code, but this apparently won't work.\nAnyway, a solution:\nMake sure you're using the latest wiredep in your project (master already is), and add this to your bower.json:\njson\n{\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      main: [\"vendor/assets/stylesheets/bootstrap.scss\"]\n    }\n  }\n}\nYou can add any other files you might need from their main to the above main array as well.\nOr, another solution:\nYou can exclude bootstrap-sass from wiredep:\njs\nwiredep({\n  exclude: ['bootstrap-sass']\n})\nYou then just manually insert the files you need.\n. @glebm just pushed a new release which should give us the same effect.\nSee: https://github.com/twbs/bootstrap-sass/pull/586#issuecomment-40979658\n. Just for comparison, generator-webapp excludes bootstrap from grunt-bower-install in order to allow devs to pick and choose which files they want. All of the files are hardcoded and injected during scaffolding. We can do the same thing here, if we think that's a benefit. Personally, I think having all of the JS files injected with wiredep is fine, unless that causes any runtime errors. But, I tested just getting the page to load and didn't run into any.\nIf a user doesn't want the JS files, but they do want the Sass, the game is the same as any other Bower package that has stuff they don't want. They have to use exclude to let wiredep know what they don't want. In this case, it could look something like:\njs\nwiredep({\n  exclude: [/bootstrap-sass-official.*.js/]\n})\n. Thanks for sending this in, @cmbaughman. Fortunately, the recent fix upstream has solved this problem. :+1: \n. Hmm, this largely falls in the \"just, w/e\" category for me. I think we're over-thinking things by moving this folder around. I agree with both sides of the discussion linked above. It's nice to see bower_components in the root of your project, and alongside node_modules, well, something about that just feels right. And on the other side, I feel that there is some inherent complexity by serving files magically: \"How did /app/index.html reference /bower_components/jquery/jquery.js without using ../?\" But, I also feel like running any gulp command is magical, as well. Making a user feel \"??\" is unavoidable, whether its here or there or somewhere else. They can always check out their Gulpfile and its configuration, or come to us (here, twitter, or SO) when something can't be resolved.\nI'll just take a vote: :-1: - I don't see enough of a benefit other than consistency with generator-webapp. But, it's ok to be inconsistent from another generator on the little things.\n. Got it, too. Looks like no node_modules directory exists within my_project/node_modules/gulp-useref. Here's my npm-debug:\n4056 silly addNameRange number 2 { name: 'useref', range: '>=0.1.0-0 <0.2.0-0', hasData: true }\n4057 silly addNameRange versions [ 'useref', [] ]\n4058 error TypeError: Cannot read property 'latest' of undefined\n4058 error     at next (/Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/lib/cache.js:744:35)\n4058 error     at /Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/lib/cache.js:732:5\n4058 error     at saved (/Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n4058 error     at /Users/ssawchukii/.nvm/v0.10.26/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n4058 error     at Object.oncomplete (fs.js:107:15)\n4059 error If you need help, you may report this *entire* log,\n4059 error including the npm and node versions, at:\n4059 error     <http://github.com/npm/npm/issues>\n4060 error System Darwin 12.5.0\n4061 error command \"/Users/ssawchukii/.nvm/v0.10.26/bin/node\" \"/Users/ssawchukii/.nvm/v0.10.26/bin/npm\" \"install\"\n4062 error cwd /Users/ssawchukii/dev/play/gulp-webapp-3079\n4063 error node -v v0.10.26\n4064 error npm -v 1.4.3\n4065 error type non_object_property_load\n4066 verbose exit [ 1, true ]\n. It also looks like any installed node module doesn't get gulp-util. Here's gulp-autoprefixer's package.json:\njson\n{\n  \"dependencies\": {\n    \"autoprefixer\": \"~1.1.20140327\",\n    \"bufferstreams\": \"0.0.1\",\n    \"gulp-util\": \"~2.2.12\"\n  }\n}\nand the installed tree:\nmyapp\n-- /node_modules\n---- /gulp-autoprefixer\n------ /node_modules\n-------- /autoprefixer\n-------- /bufferstreams\n. Good question! wiredep will inject all main files from Bower packages, unless it already finds a reference inside of the source file. In other words, index.html is hardcoded with Modernizr in the <head>, so running wiredep will not re-inject it again in the file. The same goes for Bootstrap, as by the time wiredep runs (the last step of scaffolding), Bootstrap will already be in the file. This is the part of the scaffolding process that inserts those files manually.\n\nif I delete a reference to a bower_components js file in my index.html and rerun gulp it should add it back as long as that package is a dependency in my bower.json, correct?\n\nYes.\n. Here's what I have:\n``` bash\n\nnode\nrequire('wiredep')({ directory: 'app/bower_components' })\n{ packages:\n   { modernizr:\n      { main: [Object],\n        type: [Object],\n        name: 'modernizr',\n        dependencies: {} },\n     jquery:\n      { main: [Object],\n        type: [Object],\n        name: 'jquery',\n        dependencies: {} },\n     'kendo-ui':\n      { main: [Object],\n        type: [Object],\n        name: 'kendo-ui',\n        dependencies: [Object] },\n     'bootstrap-sass-official':\n      { main: [Object],\n        type: [Object],\n        name: 'bootstrap-sass',\n        dependencies: {} } },\n  js:\n   [ 'app/bower_components/jquery/dist/jquery.js',\n     'app/bower_components/modernizr/modernizr.js',\n     'app/bower_components/kendo-ui/dist/kendo.ui.core.min.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/button.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/carousel.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/collapse.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/dropdown.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tab.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/transition.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/scrollspy.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/modal.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tooltip.js',\n     'app/bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/popover.js' ],\n  scss: [ 'app/bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss' ] }\n```\n\nTry removing your app/bower_components directory entirely, then running bower install. I had to change your version for bootstrap-sass-official to ~3.1.1, otherwise I was receiving: bower ENORESTARGET  Tag/branch ~3.1.1+2 does not exist.\n. :+1:  sweet!\n. What's your HTML file look like?\n. Can you post the wiredep configuration from your gulpfile, and what was the Bower package you installed and saved that didn't trigger wiredep?\n. Confirmed that didn't work, but it also doesn't work with a JavaScript dependency, either. For now, just run the task manually ($ gulp wiredep) or hooks.\n. ",
    "luisrudge": "@sindresorhus how can i achieve the same result as grunt-bower-install with wiredep?\n. yes. but grunt-bower-install is way cleaner than wiredep.\nhttps://github.com/stephenplusplus/grunt-bower-install#getting-started\nhttps://github.com/stephenplusplus/wiredep#getting-started\nMaybe i didn't understand wiredep completely?\n. @stephenplusplus great, thanks!\n. C:\\Users\\deschamps\\Desktop\\a>gulp watch\n[gulp] Using file C:\\Users\\deschamps\\Desktop\\a\\gulpfile.js\n[gulp] Working directory changed to C:\\Users\\deschamps\\Desktop\\a\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 2.06 ms\nWhy is it finishing?\n. @sindresorhus how can i achieve the same result as grunt-bower-install with wiredep?\n. yes. but grunt-bower-install is way cleaner than wiredep.\nhttps://github.com/stephenplusplus/grunt-bower-install#getting-started\nhttps://github.com/stephenplusplus/wiredep#getting-started\nMaybe i didn't understand wiredep completely?\n. @stephenplusplus great, thanks!\n. C:\\Users\\deschamps\\Desktop\\a>gulp watch\n[gulp] Using file C:\\Users\\deschamps\\Desktop\\a\\gulpfile.js\n[gulp] Working directory changed to C:\\Users\\deschamps\\Desktop\\a\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 2.06 ms\nWhy is it finishing?\n. ",
    "passy": "Wouldn't a gulp-y wrapper still be advantageous? I'd like being able to say something like this:\njs\ngulp.task('bower', function () {\n  return gulp.src('app/*.html').\n    .pipe($.wiredep())\n    .pipe(gulp.dest('dist/'));\n});\n. @johnpeele Just check out the generator somewhere and npm link to it.\n. @s10wen Good article, but I don't think this should require further information since it's very well documented.\n1. google.com/search?q=npm%20link\n2. first link -> https://www.npmjs.org/doc/cli/npm-link.html\n3. git clone https://github.com/yeoman/generator-gulp-webapp/ ~/stuff/generator-gulp-webapp/\n4. mkdir gulp-project; cd gulp-project\n5. npm link ~/stuff/generator-gulp-webapp/\n. Is that as in failing to find the files and failing with an error or not displaying them?\nBecause I struggle to understand how this is supposed to work in watch mode. Connect delivers files from app/, but the compiled CSS (if you choose to go with SCSS) never gets there. I don't know what the correct gulp pattern for this is. Having a temp folder for the test server and overlay in connect?\n. @addyosmani +1\n. Not tested, but looks reasonable. +1\n. @addyosmani I'll have another look. Thanks for the ping.\nOn Apr 6, 2014 1:37 PM, \"Addy Osmani\" notifications@github.com wrote:\n\n@passy https://github.com/passy did you have a chance to test this?\nReading through, I have the same comment @sindresorhushttps://github.com/sindresorhusdid. I don't think the scss is getting compiled into the directory this PR\nsuggests it is.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/pull/56#issuecomment-39667279\n.\n. :+1:\n. Wouldn't a gulp-y wrapper still be advantageous? I'd like being able to say something like this:\n\njs\ngulp.task('bower', function () {\n  return gulp.src('app/*.html').\n    .pipe($.wiredep())\n    .pipe(gulp.dest('dist/'));\n});\n. @johnpeele Just check out the generator somewhere and npm link to it.\n. @s10wen Good article, but I don't think this should require further information since it's very well documented.\n1. google.com/search?q=npm%20link\n2. first link -> https://www.npmjs.org/doc/cli/npm-link.html\n3. git clone https://github.com/yeoman/generator-gulp-webapp/ ~/stuff/generator-gulp-webapp/\n4. mkdir gulp-project; cd gulp-project\n5. npm link ~/stuff/generator-gulp-webapp/\n. Is that as in failing to find the files and failing with an error or not displaying them?\nBecause I struggle to understand how this is supposed to work in watch mode. Connect delivers files from app/, but the compiled CSS (if you choose to go with SCSS) never gets there. I don't know what the correct gulp pattern for this is. Having a temp folder for the test server and overlay in connect?\n. @addyosmani +1\n. Not tested, but looks reasonable. +1\n. @addyosmani I'll have another look. Thanks for the ping.\nOn Apr 6, 2014 1:37 PM, \"Addy Osmani\" notifications@github.com wrote:\n\n@passy https://github.com/passy did you have a chance to test this?\nReading through, I have the same comment @sindresorhushttps://github.com/sindresorhusdid. I don't think the scss is getting compiled into the directory this PR\nsuggests it is.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/pull/56#issuecomment-39667279\n.\n. :+1:\n. \n",
    "jgrowl": "@stephenplusplus Thanks for that snippet.\nI also had to add this to my index.html\n<!-- bower:js -->\n<!-- endbower -->\n. Running into the same problem here.\nShould the connect task being using dist as the root instead of app?\n. @stephenplusplus Thanks for that snippet.\nI also had to add this to my index.html\n<!-- bower:js -->\n<!-- endbower -->\n. Running into the same problem here.\nShould the connect task being using dist as the root instead of app?\n. ",
    "jrcryer": "Happy to help with this small change :smile:\nGuessing package.json needs to be updated to drop support for sass as well.\n. Hi @addyosmani - is this covered now?  :smile: \n. Sure!\n. I like this idea to keep consistency across generators.  Other people's thoughts on supporting gulp-open?\n. Thanks @addyosmani and @sindresorhus - I'm happy to pick this one up\n. Sure assign it over to me - see if I can get a some tests in around this later today and patch it.\n. Happy to help with this small change :smile:\nGuessing package.json needs to be updated to drop support for sass as well.\n. Hi @addyosmani - is this covered now?  :smile: \n. Sure!\n. I like this idea to keep consistency across generators.  Other people's thoughts on supporting gulp-open?\n. Thanks @addyosmani and @sindresorhus - I'm happy to pick this one up\n. Sure assign it over to me - see if I can get a some tests in around this later today and patch it.\n. ",
    "kevva": "Fixed in fae25a51b27ef.\n. Yeah, express is probably too much.\n. @addyosmani, should be fixed in #11.\n. Try clearing cache and reinstall from master. Should work fine. And by the way, it's port 9000, not 35729. It's just LR listening on that port.\nbash\n[gulp] Connect LiveReload on 35729 port\n[gulp] Finished 'connect' in 5.44 ms\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 20 ms\n[gulp] Server started on 9000 port\n. That's not the current gulpfile.js. Try clear cache and install from master instead. \n. Not sure how we can fix this easily without having to serve everything from a temp folder. I'm already doing this when using rework/jade etc. and I can't really say it's slow.\n@THuRStoN, compiled files shouldn't be in source.\n@jgrowl, no, you don't want to deal with compressed stuff when developing.\n. This was fixed by https://github.com/yeoman/generator-gulp-webapp/commit/dbde5ce63f6af0dc3daba092eca2578befd27889.\n. It's pretty slow though and we're aiming for making this really fast.\n. It's easy enough to add it yourself.\n. Yeah, but since we're already using wiredep it's unnecessary to add browserify.\n. Which version?\n. Please, don't mess with the package.json. Just add the new dependencies at the bottom. The includeSass if statement is at the wrong place now.\n. ?\n. Whops, yeah I removed it since it didn't work anyway.\n. @mAiNiNfEcTiOn, fixed now.\n. https://github.com/yeoman/generator-gulp-webapp/pull/214\n. Thank you!\n. Yeah, this is more clear. Thanks!\n. :)\n. Doesn't seem to be a problem with imagemin.\n. It depends. What OS etc are you running and do you have OptiPNG installed globally? If that's the case you need to make sure it's at least version 0.7.4.\n. Fixed by https://github.com/yeoman/generator-gulp-webapp/commit/03b145ce65ac941326b46c6bb278aa29beefb40c.\n. Squash yo' commits.\n. Nope, removed in https://github.com/yeoman/generator-gulp-webapp/commit/7851bc033b2061e251867c70afa6cf324bac10bf.\n. The error message says it all. Try enter the path manually without src_dir.\n. Try app/images/**/*.{gif,jpg,png,svg}.\n. Yes, it is! :)\n. Precision should work https://github.com/sass/node-sass/blob/master/test/api.js#L156-L168.\n. @silvenon, Bootstrap does support it, I just tried compiling it. They just don't know it yet.\n. Yeah, I sent a PR with the readme change.\n. @silvenon, I think the gulp-imagemin update would be very welcome. Lots of issues fixed.\n. This has nothing to do with bower though.\n. I don't think there should be any problems as long as the minifying is done after we processed the HTML with the other plugins. Spacing issues could occur if you're using negative margin hack alongside with display: inline-block.\n. @austinpray, did you write a blog post?\n. ~~@sindresorhus, we should just update the cache module. Seems like the version we use is buggy.~~\nSeems like we're already using the latest. Definitely sounds like a bug with that though.\n. I wouldn't say that master should be considered stable or release ready. Look at the tags instead.\n. lgtm\n. Does it work if you remove $.cache?\n. @arthurvr, I don't think the intent of that issue was adding the --fix flag (since that option was added after the issue was created), but I guess it fits there anyway. Closing in favor of that issue.\n. Thanks.\n. This needs a rebase too :).\n. @MattDiMu, why did you close?\n. You need to set a destination in .pipe($.sourcemaps.write()).\n. Don't use sudo for global packages (see https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md). For the cb() never called issue. Upgrade npm and try again. \n. Yup, that should fix it.\n. This is most likely a npm issue. I'd try reinstalling the generator.\n. I guess you meant to answer my comment. Because just using babelify as a transform option does nothing. How would you configure babelify inside the transform option?\n. Oh, yea. That should work then :). Just discard my comment.\n. Nope, this looks great :+1:\n. This should be disabled by default if you have safe: true in your options https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.babel.js#L76.\n. Are you saying that you're having a git repository inside the dist folder that's getting deleted upon running gulp? It's not a good idea to version generated files.\n. Change the clean task to not remove the whole dist directory but rather all files inside it (except .git).\njs\ngulp.task('clean', del.bind(null, ['.tmp', 'dist/**/*']));\n. Try upgrading to 1.8.4 and report back if it works. Might be some issue during publishing that caused that file not to be published. It has happened before and is most likely due to Node 6/npm. See https://github.com/SamVerschueren/npm-publish-index-test,\n. Seems like there's some syntax error in your package.json.\n. Fixed in fae25a51b27ef.\n. Yeah, express is probably too much.\n. @addyosmani, should be fixed in #11.\n. Try clearing cache and reinstall from master. Should work fine. And by the way, it's port 9000, not 35729. It's just LR listening on that port.\nbash\n[gulp] Connect LiveReload on 35729 port\n[gulp] Finished 'connect' in 5.44 ms\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 20 ms\n[gulp] Server started on 9000 port\n. That's not the current gulpfile.js. Try clear cache and install from master instead. \n. Not sure how we can fix this easily without having to serve everything from a temp folder. I'm already doing this when using rework/jade etc. and I can't really say it's slow.\n@THuRStoN, compiled files shouldn't be in source.\n@jgrowl, no, you don't want to deal with compressed stuff when developing.\n. This was fixed by https://github.com/yeoman/generator-gulp-webapp/commit/dbde5ce63f6af0dc3daba092eca2578befd27889.\n. It's pretty slow though and we're aiming for making this really fast.\n. It's easy enough to add it yourself.\n. Yeah, but since we're already using wiredep it's unnecessary to add browserify.\n. Which version?\n. Please, don't mess with the package.json. Just add the new dependencies at the bottom. The includeSass if statement is at the wrong place now.\n. ?\n. Whops, yeah I removed it since it didn't work anyway.\n. @mAiNiNfEcTiOn, fixed now.\n. https://github.com/yeoman/generator-gulp-webapp/pull/214\n. Thank you!\n. Yeah, this is more clear. Thanks!\n. :)\n. Doesn't seem to be a problem with imagemin.\n. It depends. What OS etc are you running and do you have OptiPNG installed globally? If that's the case you need to make sure it's at least version 0.7.4.\n. Fixed by https://github.com/yeoman/generator-gulp-webapp/commit/03b145ce65ac941326b46c6bb278aa29beefb40c.\n. Squash yo' commits.\n. Nope, removed in https://github.com/yeoman/generator-gulp-webapp/commit/7851bc033b2061e251867c70afa6cf324bac10bf.\n. The error message says it all. Try enter the path manually without src_dir.\n. Try app/images/**/*.{gif,jpg,png,svg}.\n. Yes, it is! :)\n. Precision should work https://github.com/sass/node-sass/blob/master/test/api.js#L156-L168.\n. @silvenon, Bootstrap does support it, I just tried compiling it. They just don't know it yet.\n. Yeah, I sent a PR with the readme change.\n. @silvenon, I think the gulp-imagemin update would be very welcome. Lots of issues fixed.\n. This has nothing to do with bower though.\n. I don't think there should be any problems as long as the minifying is done after we processed the HTML with the other plugins. Spacing issues could occur if you're using negative margin hack alongside with display: inline-block.\n. @austinpray, did you write a blog post?\n. ~~@sindresorhus, we should just update the cache module. Seems like the version we use is buggy.~~\nSeems like we're already using the latest. Definitely sounds like a bug with that though.\n. I wouldn't say that master should be considered stable or release ready. Look at the tags instead.\n. lgtm\n. Does it work if you remove $.cache?\n. @arthurvr, I don't think the intent of that issue was adding the --fix flag (since that option was added after the issue was created), but I guess it fits there anyway. Closing in favor of that issue.\n. Thanks.\n. This needs a rebase too :).\n. @MattDiMu, why did you close?\n. You need to set a destination in .pipe($.sourcemaps.write()).\n. Don't use sudo for global packages (see https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md). For the cb() never called issue. Upgrade npm and try again. \n. Yup, that should fix it.\n. This is most likely a npm issue. I'd try reinstalling the generator.\n. I guess you meant to answer my comment. Because just using babelify as a transform option does nothing. How would you configure babelify inside the transform option?\n. Oh, yea. That should work then :). Just discard my comment.\n. Nope, this looks great :+1:\n. This should be disabled by default if you have safe: true in your options https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.babel.js#L76.\n. Are you saying that you're having a git repository inside the dist folder that's getting deleted upon running gulp? It's not a good idea to version generated files.\n. Change the clean task to not remove the whole dist directory but rather all files inside it (except .git).\njs\ngulp.task('clean', del.bind(null, ['.tmp', 'dist/**/*']));\n. Try upgrading to 1.8.4 and report back if it works. Might be some issue during publishing that caused that file not to be published. It has happened before and is most likely due to Node 6/npm. See https://github.com/SamVerschueren/npm-publish-index-test,\n. Seems like there's some syntax error in your package.json.\n. ",
    "hemanth": "@addyosmani gulp-modernizr is yet to be published to npm, should i just presume that the installation will be via git and continue ?\n. @sindresorhus Is't the Require Call there?\n. @sindresorhus Done :)\n. @sindresorhus Looks fine?\n. @sindresorhus Thank you! :)\n. Press <space> to toggle selection \n. @mklabs I thought it was a #sarcasm :P you may also check awesome-pwa.\n. @addyosmani gulp-modernizr is yet to be published to npm, should i just presume that the installation will be via git and continue ?\n. @sindresorhus Is't the Require Call there?\n. @sindresorhus Done :)\n. @sindresorhus Looks fine?\n. @sindresorhus Thank you! :)\n. Press <space> to toggle selection \n. @mklabs I thought it was a #sarcasm :P you may also check awesome-pwa.\n. ",
    "doctyper": "gulp-modernizr can't be published until Modernizr 3.0 is a thing. Not sure how long it will be.\n@sindresorhus Most of the performance issues in grunt-modernizr dealt with file discovery and traversal. These issues were addressed in 0.5.1 over the weekend. The Gulp plugin does not share these performance sinks. Sample benchmarks below:\n```\n\u276f time gulp modernizr\n[gulp] Running 'modernizr'...\n[...]\nBuilding your customized Modernizr........OK\ngulp modernizr  1.91s user 0.23s system 100% cpu 2.134 total\n```\nNote that these benchmarks will potentially speed up with the CLI rewrite in Modernizr/Modernizr#1184.\n. gulp-modernizr can't be published until Modernizr 3.0 is a thing. Not sure how long it will be.\n@sindresorhus Most of the performance issues in grunt-modernizr dealt with file discovery and traversal. These issues were addressed in 0.5.1 over the weekend. The Gulp plugin does not share these performance sinks. Sample benchmarks below:\n```\n\u276f time gulp modernizr\n[gulp] Running 'modernizr'...\n[...]\nBuilding your customized Modernizr........OK\ngulp modernizr  1.91s user 0.23s system 100% cpu 2.134 total\n```\nNote that these benchmarks will potentially speed up with the CLI rewrite in Modernizr/Modernizr#1184.\n. ",
    "Quirksmode": "Any news on this?\n. Any news on this?\n. ",
    "ahmadalfy": "Modernizr is now 3.5 and gulp-modernizr is working. Can we add this?. @silvenon sure, will do. @silvenon I am done with the integration https://github.com/ahmadalfy/generator-webapp/commit/497d043aa0c16c3e236fe13238ee24968ecd426d but there is a minor issue I am not sure how to tackle. Modernizr used to ship with a build with all the available tests. Since version 3 it require that you build your own version with your the tests you choose. gulp-modernizr will take care of that of course during the build but the problem now is during development. There is no file to develop against. There is currently 2 options I think:\n\n\nChange this in the HTML code\nhtml\n    <!-- build:js scripts/vendor/modernizr.js -->\n    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n    <!-- endbuild -->\nto be\nhtml\n    <!-- build:js scripts/vendor/modernizr.js -->\n    <!--<script src=\"/bower_components/modernizr/modernizr.js\"></script>-->\n    <!-- endbuild -->\nto avoid the 404 during the development and add a notice that the user should navigate to bower_components/modernizr then run npm install then grunt to create the full version then uncomment that line.\n\n\nUsing npm scripts to add a postinstall hook to automatically create a Modernizr build.\n\n\nWhat do you guys think?. Modernizr is now 3.5 and gulp-modernizr is working. Can we add this?. @silvenon sure, will do. @silvenon I am done with the integration https://github.com/ahmadalfy/generator-webapp/commit/497d043aa0c16c3e236fe13238ee24968ecd426d but there is a minor issue I am not sure how to tackle. Modernizr used to ship with a build with all the available tests. Since version 3 it require that you build your own version with your the tests you choose. gulp-modernizr will take care of that of course during the build but the problem now is during development. There is no file to develop against. There is currently 2 options I think:\n\n\nChange this in the HTML code\nhtml\n    <!-- build:js scripts/vendor/modernizr.js -->\n    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n    <!-- endbuild -->\nto be\nhtml\n    <!-- build:js scripts/vendor/modernizr.js -->\n    <!--<script src=\"/bower_components/modernizr/modernizr.js\"></script>-->\n    <!-- endbuild -->\nto avoid the 404 during the development and add a notice that the user should navigate to bower_components/modernizr then run npm install then grunt to create the full version then uncomment that line.\n\n\nUsing npm scripts to add a postinstall hook to automatically create a Modernizr build.\n\n\nWhat do you guys think?. ",
    "jvnni": "Hello. \nSame error here.\nJust installed the generator and my gulpfile watch task is different from de github one. It starts the server on port 35729 and it doesn't work.\n\n// Watch\ngulp.task('watch', function () {\n    // Listen on port 35729\n    server.listen(35729, function (err) {\n        if (err) {\n            return console.error(err);\n        };\n        // Watch .html files\n        gulp.watch('app/*.html');\n        // Watch .scss files\n        gulp.watch('app/styles/**/*.scss', ['styles']);\n        // Watch .js files\n        gulp.watch('app/scripts/**/*.js', ['scripts']);\n        // Watch image files\n        gulp.watch('app/images/**/*', ['images']);\n    });\n});\n\n. Hello. \nSame error here.\nJust installed the generator and my gulpfile watch task is different from de github one. It starts the server on port 35729 and it doesn't work.\n\n// Watch\ngulp.task('watch', function () {\n    // Listen on port 35729\n    server.listen(35729, function (err) {\n        if (err) {\n            return console.error(err);\n        };\n        // Watch .html files\n        gulp.watch('app/*.html');\n        // Watch .scss files\n        gulp.watch('app/styles/**/*.scss', ['styles']);\n        // Watch .js files\n        gulp.watch('app/scripts/**/*.js', ['scripts']);\n        // Watch image files\n        gulp.watch('app/images/**/*', ['images']);\n    });\n});\n\n. ",
    "s10wen": "I'm also confused by this, I've ran gulp watch and got:\n$ gulp watch\n[gulp] Using file /Users/simonowen/GitHub/gulp-test/gulpfile.js\n[gulp] Working directory changed to /Users/simonowen/GitHub/gulp-test\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 2.89 ms\nShould I try to 'clear cache and install from master'? If so, how do I do this please?\n. Tried updating and starting again, but now I get:\n```\n$ gulp watch\n[gulp] Using file /Users/simonowen/GitHub/gulp-01/gulpfile.js\n[gulp] Working directory changed to /Users/simonowen/GitHub/gulp-01\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 1.23 ms\n... Uhoh. Got error listen EADDRINUSE ...\nError: listen EADDRINUSE\n    at errnoException (net.js:901:11)\n    at Server._listen2 (net.js:1039:14)\n    at listen (net.js:1061:10)\n    at Server.listen (net.js:1127:5)\n    at Server.listen (/Users/simonowen/GitHub/gulp-01/node_modules/tiny-lr/lib/server.js:138:15)\n    at Gulp. (/Users/simonowen/GitHub/gulp-01/gulpfile.js:84:12)\n    at module.exports (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:31:7)\n    at Gulp.Orchestrator._runTask (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at Gulp.Orchestrator.start (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:134:8)\n```\n. \"Just\" :wink: - https://the-pastry-box-project.net/brad-frost/2014-January-28\nHow do you check out the generator and npm link to it please?\n. Thanks @passy for the awesome response, now up and running.\n. @sindresorhus :+1: \n. I'm also confused by this, I've ran gulp watch and got:\n$ gulp watch\n[gulp] Using file /Users/simonowen/GitHub/gulp-test/gulpfile.js\n[gulp] Working directory changed to /Users/simonowen/GitHub/gulp-test\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 2.89 ms\nShould I try to 'clear cache and install from master'? If so, how do I do this please?\n. Tried updating and starting again, but now I get:\n```\n$ gulp watch\n[gulp] Using file /Users/simonowen/GitHub/gulp-01/gulpfile.js\n[gulp] Working directory changed to /Users/simonowen/GitHub/gulp-01\n[gulp] Running 'watch'...\n[gulp] Finished 'watch' in 1.23 ms\n... Uhoh. Got error listen EADDRINUSE ...\nError: listen EADDRINUSE\n    at errnoException (net.js:901:11)\n    at Server._listen2 (net.js:1039:14)\n    at listen (net.js:1061:10)\n    at Server.listen (net.js:1127:5)\n    at Server.listen (/Users/simonowen/GitHub/gulp-01/node_modules/tiny-lr/lib/server.js:138:15)\n    at Gulp. (/Users/simonowen/GitHub/gulp-01/gulpfile.js:84:12)\n    at module.exports (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:31:7)\n    at Gulp.Orchestrator._runTask (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at Gulp.Orchestrator.start (/Users/simonowen/GitHub/gulp-01/node_modules/gulp/node_modules/orchestrator/index.js:134:8)\n```\n. \"Just\" :wink: - https://the-pastry-box-project.net/brad-frost/2014-January-28\nHow do you check out the generator and npm link to it please?\n. Thanks @passy for the awesome response, now up and running.\n. @sindresorhus :+1: \n. ",
    "johnpeele": "I ran npm cache clean and then uninstalled/reinstalled the generator. I am still not getting the latest gulpfile.js and package.json files.  Is there something else I need to do in order to get the latest master version of the generator installed?\n. I ran npm cache clean and then uninstalled/reinstalled the generator. I am still not getting the latest gulpfile.js and package.json files.  Is there something else I need to do in order to get the latest master version of the generator installed?\n. ",
    "THuRStoN": "javascript\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n          style: 'expanded',\n          loadPath: ['app/bower_components']\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe($.csso())\n        .pipe(gulp.dest('dist/styles'))\n        .pipe(gulp.dest('app/styles'))\n        .pipe($.size());\n});\nIn my setup I modified the gulp file.js so it makes another copy into app/styles that is where connect task is serving its files. \n. @kevva you're right :+1:\n. javascript\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n          style: 'expanded',\n          loadPath: ['app/bower_components']\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe($.csso())\n        .pipe(gulp.dest('dist/styles'))\n        .pipe(gulp.dest('app/styles'))\n        .pipe($.size());\n});\nIn my setup I modified the gulp file.js so it makes another copy into app/styles that is where connect task is serving its files. \n. @kevva you're right :+1:\n. ",
    "laurelnaiad": "Temp files are not actually lethal. There are plenty of reasons to build a version of an app that is explicitly and intentionally intermediate.\n. Temp files are not actually lethal. There are plenty of reasons to build a version of an app that is explicitly and intentionally intermediate.\n. ",
    "mrhooray": "A quick fix #45 to bring back styles. Downside is causing additional main.css under app/styles and needs to be removed before check-in either manually or through some task.\nUsing streams instead of files is great, but resources (css in this case) need to be somewhere in the file system. I guess it's better to put them in a temp folder and being ignored.\n. @stu-salsbury @haydenbleasel I worked a PR #47 on using temp files.\n@addyosmani I think temp files are not necessarily a bad thing and one great thing about gulp is that it eliminates intermediate files in the build process. However the compiled css here is part of outcome of the build process that couldn't be skipped.\nI believe as long as we do not write intermediate files to disk in the build process, we are still following the spirit of gulp & stream.\n. It seems breaks the build. useref complains no css files under app/styles. Try to fix this.\n. Looks like gulp-useref does not support alternative paths build:css({.tmp,app}) like grunt-usemin does. The gulp counterpart gulp-usemin is also flagged under gulp plugins directory. Any thoughts?\n. @haydenbleasel great, thanks for pointing out.\n. gulp-useref starts supporting alternative paths in 0.3.0. Updated gulp-useref in app's package.json and the build works now.\n. @creynders that's because server looks into app/ first and .tmp/ is an alternative search path. I think letting dev server look into .tmp/ first and then app/ could solve this and would't affect other things but current ordering is still a reminder for compiled stuff residing under source folder.\n. A quick fix #45 to bring back styles. Downside is causing additional main.css under app/styles and needs to be removed before check-in either manually or through some task.\nUsing streams instead of files is great, but resources (css in this case) need to be somewhere in the file system. I guess it's better to put them in a temp folder and being ignored.\n. @stu-salsbury @haydenbleasel I worked a PR #47 on using temp files.\n@addyosmani I think temp files are not necessarily a bad thing and one great thing about gulp is that it eliminates intermediate files in the build process. However the compiled css here is part of outcome of the build process that couldn't be skipped.\nI believe as long as we do not write intermediate files to disk in the build process, we are still following the spirit of gulp & stream.\n. It seems breaks the build. useref complains no css files under app/styles. Try to fix this.\n. Looks like gulp-useref does not support alternative paths build:css({.tmp,app}) like grunt-usemin does. The gulp counterpart gulp-usemin is also flagged under gulp plugins directory. Any thoughts?\n. @haydenbleasel great, thanks for pointing out.\n. gulp-useref starts supporting alternative paths in 0.3.0. Updated gulp-useref in app's package.json and the build works now.\n. @creynders that's because server looks into app/ first and .tmp/ is an alternative search path. I think letting dev server look into .tmp/ first and then app/ could solve this and would't affect other things but current ordering is still a reminder for compiled stuff residing under source folder.\n. ",
    "haydenbleasel": "My private fork, as @mrhooray pointed out, needs to compile styles to the app directory and are being ignored in the .gitignore. I'm looking for a solution with a .tmp folder similar to generator-webapp that runs with gulp watch, but no luck so far. Probably something that requires attention.\n. They're discussing the issue here. Looks like functionality was added to the original useref here so it should be in gulp-useref soon I guess.\n. My private fork, as @mrhooray pointed out, needs to compile styles to the app directory and are being ignored in the .gitignore. I'm looking for a solution with a .tmp folder similar to generator-webapp that runs with gulp watch, but no luck so far. Probably something that requires attention.\n. They're discussing the issue here. Looks like functionality was added to the original useref here so it should be in gulp-useref soon I guess.\n. ",
    "arielserafini": "Gotcha. While we're at it, what would you consider to be the best configuration? Pure Sass?\n. Gotcha. While we're at it, what would you consider to be the best configuration? Pure Sass?\n. ",
    "kylebradshaw": "Is there a better alternative than http://breakpoint-sass.com/ (which is reliant on compass) for easily managing breakpoints in a sass file? A lot of my projects in the past have used the compass + breakpoint combination but I'd like to find worthwhile replacements when I transition to gulp.\n. I've hit an issue like this in the past. This SO question (and my response to it) might help you out.\nhttp://stackoverflow.com/questions/18081125/why-are-my-yeoman-generators-installing-in-the-wrong-place/21742085#21742085\n. Is there a better alternative than http://breakpoint-sass.com/ (which is reliant on compass) for easily managing breakpoints in a sass file? A lot of my projects in the past have used the compass + breakpoint combination but I'd like to find worthwhile replacements when I transition to gulp.\n. I've hit an issue like this in the past. This SO question (and my response to it) might help you out.\nhttp://stackoverflow.com/questions/18081125/why-are-my-yeoman-generators-installing-in-the-wrong-place/21742085#21742085\n. ",
    "kevinSuttle": "@kylebradshaw https://github.com/ericam/susy/pull/239 \n. +1 here. Would adding BrowserSync remove the need for both LiveReload and Connect since it has its server function, or would you prefer to keep Connect and use BrowserSync as a proxy?\n. @kylebradshaw https://github.com/ericam/susy/pull/239 \n. +1 here. Would adding BrowserSync remove the need for both LiveReload and Connect since it has its server function, or would you prefer to keep Connect and use BrowserSync as a proxy?\n. ",
    "Snugug": "@kevinSuttle Susy isn't an alternative to Breakpoint, and Breakpoint can be (now) be used w/o Compass  through Bower.\n@addyosmani @sindresorhus I highly highly do not recommend moving from Ruby Sass to Libsass. It's not that libsass isn't compatible with the new hotness, it's that it's tracking Sass 3.1 (first full release April 24, 2011) meaning that the basic functionality needed for Breakpoint to work (interpolation of media queries, @content blocks for mixins) aren't there and it can't handle any sort of advanced @extends. If you're literally just using basic variables, functions, and mixins, it's fine, but any functionality that's been built in the past 3 years isn't available. It's a goal of the community (especially Chris) to get Libsass better by the end of this year, but yah, not yet.\n. @sindresorhus The biggest thing you loose by moving away from Compass is the Compass plugin architecture. There is no alternative to this Compass-free Sass, and is a huge part of the reason Compass exists.\n. @austinpray It's being worked on: hcatlin/libsass#282\n@silvenon While I agree that Ruby Sass is slow, it's also stable and current. Libsass sadly is not. Until Libsass has feature parity with Ruby Sass, it simply should not be the default option, too many Sass plugins created over the past three years do not work with it (and not due to Compass compatibility, but due to missing language features). Some basic functionality needed to create responsive sites, such as media query interpolation and @content blocks, are not available in Libsass and extension is pretty much busted. Additionally, while  it'd be great to have all Sass projects be Compass independent, until this past summer the only effective way of distributing Sass projects was as Compass extensions, so it's unrealistic to have all Sass \"contrib\" stop relying upon Compass.\n. It seems as if since I last tried using Libsass, it has been updated to allow for MQ interpolation and @content blocks, but I'm not sure what else is missing. I think I may spend tomorrow building a compatibility chart.\n. @kevinSuttle Susy isn't an alternative to Breakpoint, and Breakpoint can be (now) be used w/o Compass  through Bower.\n@addyosmani @sindresorhus I highly highly do not recommend moving from Ruby Sass to Libsass. It's not that libsass isn't compatible with the new hotness, it's that it's tracking Sass 3.1 (first full release April 24, 2011) meaning that the basic functionality needed for Breakpoint to work (interpolation of media queries, @content blocks for mixins) aren't there and it can't handle any sort of advanced @extends. If you're literally just using basic variables, functions, and mixins, it's fine, but any functionality that's been built in the past 3 years isn't available. It's a goal of the community (especially Chris) to get Libsass better by the end of this year, but yah, not yet.\n. @sindresorhus The biggest thing you loose by moving away from Compass is the Compass plugin architecture. There is no alternative to this Compass-free Sass, and is a huge part of the reason Compass exists.\n. @austinpray It's being worked on: hcatlin/libsass#282\n@silvenon While I agree that Ruby Sass is slow, it's also stable and current. Libsass sadly is not. Until Libsass has feature parity with Ruby Sass, it simply should not be the default option, too many Sass plugins created over the past three years do not work with it (and not due to Compass compatibility, but due to missing language features). Some basic functionality needed to create responsive sites, such as media query interpolation and @content blocks, are not available in Libsass and extension is pretty much busted. Additionally, while  it'd be great to have all Sass projects be Compass independent, until this past summer the only effective way of distributing Sass projects was as Compass extensions, so it's unrealistic to have all Sass \"contrib\" stop relying upon Compass.\n. It seems as if since I last tried using Libsass, it has been updated to allow for MQ interpolation and @content blocks, but I'm not sure what else is missing. I think I may spend tomorrow building a compatibility chart.\n. ",
    "VinSpee": "Also, making LibSass the default will also mean no support for Sass's indented syntax, which many of us use.\n. Also, making LibSass the default will also mean no support for Sass's indented syntax, which many of us use.\n. ",
    "niallobrien": "A config option would be nice as I'm happily using gulp-sass for developing responsive websites.\n. Awesome, I use BrowserSync on a daily basis and cannot recommend it enough.\nWould it be too much to ask that while we're at it, we also remove the Ruby dependency from Yeoman and use gulp-sass instead? :)\n. Any update on this?\n. A config option would be nice as I'm happily using gulp-sass for developing responsive websites.\n. Awesome, I use BrowserSync on a daily basis and cannot recommend it enough.\nWould it be too much to ask that while we're at it, we also remove the Ruby dependency from Yeoman and use gulp-sass instead? :)\n. Any update on this?\n. ",
    "cvrebert": "Already filed, several times over. :-)\n. Already filed, several times over. :-)\n. ",
    "activestylus": "My fix was much simpler:\nnpm install --force -g generator-gulp-webapp\n. My fix was much simpler:\nnpm install --force -g generator-gulp-webapp\n. ",
    "appleboy": "Good Job. \n. I vote 3\n. Good Job\n. Please ref https://github.com/yeoman/generator-gulp-webapp/commit/3cc7722bd53d3bc0020cb752afbc230ab842f295\n. @silvenon sorry for my wrong commit message.\n. :+1: \n. Good Job. \n. I vote 3\n. Good Job\n. Please ref https://github.com/yeoman/generator-gulp-webapp/commit/3cc7722bd53d3bc0020cb752afbc230ab842f295\n. @silvenon sorry for my wrong commit message.\n. :+1: \n. ",
    "brnrdog": "I understand, but it could be just an option. It doesn't need to use browserify by default.\n. Well, the other tasks are easy to add too.. but wtv, thanks anyway.\n. I understand, but it could be just an option. It doesn't need to use browserify by default.\n. Well, the other tasks are easy to add too.. but wtv, thanks anyway.\n. ",
    "jackfranklin": "That sounds right.\n@sindresorhus I've opened an issue on g-l-p for that.\nThe solution here is either to manually require gulp-connect (and update the plugin's glob so it doesn't require it), or turn off lazy loading.\n. I should ;)\nI've also been tempted to add an ignore option to the config, which enables module names to be passed in, so you don't have to change the glob. So in this case the config would change to:\nvar $ = require('gulp-load-plugins')({\n  ignore: ['gulp-connect']\n});\nWhich I think reads nicer than passing in custom globs?\n. slaps self\nYeah that's easier. I'm tired. \n. I was literally about to come here and make this change but @AveVlad has beaten me too it! Awesomes.\n. That sounds right.\n@sindresorhus I've opened an issue on g-l-p for that.\nThe solution here is either to manually require gulp-connect (and update the plugin's glob so it doesn't require it), or turn off lazy loading.\n. I should ;)\nI've also been tempted to add an ignore option to the config, which enables module names to be passed in, so you don't have to change the glob. So in this case the config would change to:\nvar $ = require('gulp-load-plugins')({\n  ignore: ['gulp-connect']\n});\nWhich I think reads nicer than passing in custom globs?\n. slaps self\nYeah that's easier. I'm tired. \n. I was literally about to come here and make this change but @AveVlad has beaten me too it! Awesomes.\n. ",
    "ebsen": "Sorry, everyone. Looks like I need to read the wiredep docs.\n. Sorry, everyone. Looks like I need to read the wiredep docs.\n. ",
    "denver25": "Just a thought: I don't know enough about node.js testing and yeoman generators to know if this is possible, but a functional test may be good for preventing big bugs like this in the future. It could scaffold a simple app, build it, and then check what actually appeared in the dist directory.\nLooks like test.js does something similar right now to check that the scaffolding step works.\n. Just a thought: I don't know enough about node.js testing and yeoman generators to know if this is possible, but a functional test may be good for preventing big bugs like this in the future. It could scaffold a simple app, build it, and then check what actually appeared in the dist directory.\nLooks like test.js does something similar right now to check that the scaffolding step works.\n. ",
    "creynders": "Just an FYI: I manually applied the patch, but it still didn't work. Styles weren't correctly loaded when running gulp watch. This was due to having run gulp watch before applying the patch which had generated an empty app/styles/main.css which was served instead. \nSo, for people encountering the same trouble: delete the empty app/styles/main.css file and you're good to go.\n. Just an FYI: I manually applied the patch, but it still didn't work. Styles weren't correctly loaded when running gulp watch. This was due to having run gulp watch before applying the patch which had generated an empty app/styles/main.css which was served instead. \nSo, for people encountering the same trouble: delete the empty app/styles/main.css file and you're good to go.\n. ",
    "kasperisager": ":thumbsup: Just started doing something similar with a Browserify setup\u2014it works beautifully!\n. Nothing currently happens to font files in Bower packages it seems, which is why I needed the task.\n. For example, the Bootstrap Glyphicons are being read directly out of the bower_components directory: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/main.scss#L1\n. Absolutely! I'll get started ASAP.\n. Pleasure!\n. The fonts task only includes font assets defined in bower.json\u2014Font Awesome doesn't appear to have a bower.json present in its repo.\n. :thumbsup: Just started doing something similar with a Browserify setup\u2014it works beautifully!\n. Nothing currently happens to font files in Bower packages it seems, which is why I needed the task.\n. For example, the Bootstrap Glyphicons are being read directly out of the bower_components directory: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/main.scss#L1\n. Absolutely! I'll get started ASAP.\n. Pleasure!\n. The fonts task only includes font assets defined in bower.json\u2014Font Awesome doesn't appear to have a bower.json present in its repo.\n. ",
    "pgilad": "Yups!!! My bad, I'm so used to sorting packges in package.json I didn't even notice that...\n(unsorted properties hurt my :eyes: )\nfixed!\n. @addyosmani Cool no problem. Obviously if Sindre would have written the plugin it would have been included, but it's cool anyway :smile:\nedit a joke ;_)\n. Yups!!! My bad, I'm so used to sorting packges in package.json I didn't even notice that...\n(unsorted properties hurt my :eyes: )\nfixed!\n. @addyosmani Cool no problem. Obviously if Sindre would have written the plugin it would have been included, but it's cool anyway :smile:\nedit a joke ;_)\n. ",
    "mAiNiNfEcTiOn": "Thank you @kevva :)\n. After all, it was a caching problem....\n... Sorry about that :/ Closing the issue\n. However :P (and let me re-open again :P) jQuery is being placed at:\nbower_components/jquery/dist/jquery.js\nBut it's actually at\nbower_components/jquery/jquery.js\n. @addyosmani I've cleared both npm and bower caches (I'm on windows so in the case of bower I removed the cache folders from the AppData(...) folder)\nDid the yo command again, everything installed, but the 404 error appears (jQuery not defined)... I fix the script tag's URL and it works. :/\nGoing to try again.\n. After cleaned the cache (again) of everything... And as you can see (hopefully) there's no dist :/\n\nBtw, this is the bower_components/jquery/ folder\n. Also, if it matters, I am running the yo command with the --test-framework=jasmine\n. @addyosmani for some reason, it is installing the 1.10.2 version of jQuery (which doesn't have the \"main\" config in the bower.json) instead of the 1.11.x...\nIs it possible that either Bootstrap's bower.json - which requires >= 1.9.0 - is overriding the dependency? (Or perhaps because 1.10.x is close to 1.11.x ?)\n(Closed by mistake, re-opened).\n. @stephenplusplus thanks :) Will do ;-) Closing\n. Thank you @kevva :)\n. After all, it was a caching problem....\n... Sorry about that :/ Closing the issue\n. However :P (and let me re-open again :P) jQuery is being placed at:\nbower_components/jquery/dist/jquery.js\nBut it's actually at\nbower_components/jquery/jquery.js\n. @addyosmani I've cleared both npm and bower caches (I'm on windows so in the case of bower I removed the cache folders from the AppData(...) folder)\nDid the yo command again, everything installed, but the 404 error appears (jQuery not defined)... I fix the script tag's URL and it works. :/\nGoing to try again.\n. After cleaned the cache (again) of everything... And as you can see (hopefully) there's no dist :/\n\nBtw, this is the bower_components/jquery/ folder\n. Also, if it matters, I am running the yo command with the --test-framework=jasmine\n. @addyosmani for some reason, it is installing the 1.10.2 version of jQuery (which doesn't have the \"main\" config in the bower.json) instead of the 1.11.x...\nIs it possible that either Bootstrap's bower.json - which requires >= 1.9.0 - is overriding the dependency? (Or perhaps because 1.10.x is close to 1.11.x ?)\n(Closed by mistake, re-opened).\n. @stephenplusplus thanks :) Will do ;-) Closing\n. ",
    "tomfuertes": "@mAiNiNfEcTiOn - this is probably an invalid PR with this repos upgrade to jquery 1.11.0 (as referenced in the 0.0.5 bower.json file). From 1.10.0 to 1.11.0 jquery.js was moved into a dist directory. You can run bower update jquery on your end to fix it or just modify the path\n. Totes didn't know about gulp --tasks... my google fu sucks lately.\n. @mAiNiNfEcTiOn - this is probably an invalid PR with this repos upgrade to jquery 1.11.0 (as referenced in the 0.0.5 bower.json file). From 1.10.0 to 1.11.0 jquery.js was moved into a dist directory. You can run bower update jquery on your end to fix it or just modify the path\n. Totes didn't know about gulp --tasks... my google fu sucks lately.\n. ",
    "shakyShane": "It's possible to run BrowserSync in what I would call 'simple mode' - where you get all of the features of live-reload (css injecting, reload etc) and has the connect server built into it. \nThis removes the need for any browser-plugins or script injecting & also has wider browser support. \nEssentially, it can be used to mirror what live-reload + connect already does - but with more options going forward.\nI will put together a use-case that demonstrates this & see what you think.\n. Hi there :)\nI'll have an update for you following the next release (in which I'm ironing out some bugs specific to the use-case we talk about here).\nNow that this project (and a few others) have shown an interest in BrowserSync, I want to ensure it's as stable as possible before replacing any 'tried & tested' tools.\n. Hi again - Yeah I've been looking at this & I think there's two ways of going about it, would love to hear opinions about which everyone prefers.\nBefore that though, to recap why you'd even want to use BrowserSync over connect + live-reload\n1. BrowserSync uses connect under the hood.\n2. It has support for all the 'live-reload' features (it was specifically built as a replacement).\n3. It has greater browser support (right back to IE7)\n4. The middleware for injecting scripts is all included, it 'just works'\n5. It has port-resolution built in so there's no need for hard-harded ports in the gulpfile.\n6. Supports streams for better file injecting/reloading\n7. It has 'ghost mode' that will synchronize clicks, scroll & form input.\nNow, let's look at some gulpfiles I've been playing with.\nOption 1\nusing the stream to explicitly fire any reload events to all browsers\nentire gulpfile.js.\nThis snippet from the above file shows how we can use any position in the stream to inform browsers about changes - very useful when you have multiple write-points for tasks.\njs\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n            style: 'expanded',\n            precision: 10\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe(gulp.dest('.tmp/styles'))\n        .pipe(reload({stream:true})) // after a file is written, reload the CSS\n        .pipe($.size());\n});\nThe idea behind this, is that 'file watching' is really prone to errors (for example, firing a reload event too early) & this allows fine-grained control over browser reloading/CSS injecting.\nThe downside to this (option 1) is that browser-sync would have to be required at the top of the gulpfile.js to allow any tasks to call reload on the instance. I've not found this to be a problem personally - but I understand the need for lazy-loading where possible. Check out the gulpfile.js example to see what I'm talking about. \nAlso, this gulpfile.js I created for use with jekyll really highlight how cool this can be.\nOption 2\nKeep the file-watching as is\nAs an alternative, this second gulpfile.js shows a simple replacement of connect/live-reload with BrowserSync.\n\nMy final thought is that a simple web server + livereload is way too complicated with the existing setup. BrowserSync was purpose built for exactly this task, has greater browser support, features & will soon have a web-based control panel (similar to ghostlab).\nThanks for listening & would love to hear any thoughts on this...\n. open: false - was just to show an example close to the existing setup.\ndirectory middleware for connect is behind an option as it was added only recently.\ndebugInfo is misleading here - it actually mutes all console output & needs renaming - but I turn it to false here to hint at a user providing their own logging (as your existing gulpfile does).\nhost: localhost - again was just provided to keep the example as it was.  BrowserSync always binds to localhost but will open up an externally available IP if available. There's been some debate about whether it should only open 'localhost' on the machine running BrowserSync, with advice about the external IP in the console/control panel.\nanyway, a simplified example could just be: \njs\nbrowserSync.init(null, {\n        server: {\n            baseDir: ['app', '.tmp'],\n            directory: true\n        }\n    });\n. ^ totally - I'm happy to tweak the API before we integrate this.\nThe first argument was always for file patterns for the watcher, but it needs to be just another option in the config object now - agreed.\nre: logging, it has some logging by default (if you remove debugInfo: false), but it may be too much output for this project?\n. Hi - sure will do! I'll be shortly releasing a patch that includes the API improvements you suggested - then we'll get this sorted.\n. Ok guys - we're nearly there! Before I PR, shall we have a final riff on this proposed gulpfile.js\nAlso, I'm tying this in with a 1.0.0 release of BrowserSync that brings BrowserSTACK integration & a public URL option... along with a MAJOR bug fix from the client-side code (that caused devices to go crazy after a while due to duplicated events).\nIt's all looking good from my end, got it working flawlessly so if we all like the look of the gulpfile.js (or can provide a prefered alternative), I'm ready to go.\n. ... Or this one, which removes even more file watching.\nhttps://gist.github.com/anonymous/7047dd5d2dc1a27b027c\n. \"Purely bikshedding, but the API would have been nicer without the .init method.\" - added this recently, will be available in a patch release soon. \nDidn't realise you could have a main export + additionals, thanks.\n. \n. Still happens for me using master\nAlso got an error about connect-livereload version too, but I've seen that's addressed in another issue.\n. Yep, after doing bower update bootstrap-sass-official - gulp wiredes now does this to main.scss\ncss\n// bower:scss\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss\";\n// endbower\nThanks :)\n. BrowserSync will be switching to connect > 3.0 in the next release.\n. :+1: \n. It's possible to run BrowserSync in what I would call 'simple mode' - where you get all of the features of live-reload (css injecting, reload etc) and has the connect server built into it. \nThis removes the need for any browser-plugins or script injecting & also has wider browser support. \nEssentially, it can be used to mirror what live-reload + connect already does - but with more options going forward.\nI will put together a use-case that demonstrates this & see what you think.\n. Hi there :)\nI'll have an update for you following the next release (in which I'm ironing out some bugs specific to the use-case we talk about here).\nNow that this project (and a few others) have shown an interest in BrowserSync, I want to ensure it's as stable as possible before replacing any 'tried & tested' tools.\n. Hi again - Yeah I've been looking at this & I think there's two ways of going about it, would love to hear opinions about which everyone prefers.\nBefore that though, to recap why you'd even want to use BrowserSync over connect + live-reload\n1. BrowserSync uses connect under the hood.\n2. It has support for all the 'live-reload' features (it was specifically built as a replacement).\n3. It has greater browser support (right back to IE7)\n4. The middleware for injecting scripts is all included, it 'just works'\n5. It has port-resolution built in so there's no need for hard-harded ports in the gulpfile.\n6. Supports streams for better file injecting/reloading\n7. It has 'ghost mode' that will synchronize clicks, scroll & form input.\nNow, let's look at some gulpfiles I've been playing with.\nOption 1\nusing the stream to explicitly fire any reload events to all browsers\nentire gulpfile.js.\nThis snippet from the above file shows how we can use any position in the stream to inform browsers about changes - very useful when you have multiple write-points for tasks.\njs\ngulp.task('styles', function () {\n    return gulp.src('app/styles/main.scss')\n        .pipe($.rubySass({\n            style: 'expanded',\n            precision: 10\n        }))\n        .pipe($.autoprefixer('last 1 version'))\n        .pipe(gulp.dest('.tmp/styles'))\n        .pipe(reload({stream:true})) // after a file is written, reload the CSS\n        .pipe($.size());\n});\nThe idea behind this, is that 'file watching' is really prone to errors (for example, firing a reload event too early) & this allows fine-grained control over browser reloading/CSS injecting.\nThe downside to this (option 1) is that browser-sync would have to be required at the top of the gulpfile.js to allow any tasks to call reload on the instance. I've not found this to be a problem personally - but I understand the need for lazy-loading where possible. Check out the gulpfile.js example to see what I'm talking about. \nAlso, this gulpfile.js I created for use with jekyll really highlight how cool this can be.\nOption 2\nKeep the file-watching as is\nAs an alternative, this second gulpfile.js shows a simple replacement of connect/live-reload with BrowserSync.\n\nMy final thought is that a simple web server + livereload is way too complicated with the existing setup. BrowserSync was purpose built for exactly this task, has greater browser support, features & will soon have a web-based control panel (similar to ghostlab).\nThanks for listening & would love to hear any thoughts on this...\n. open: false - was just to show an example close to the existing setup.\ndirectory middleware for connect is behind an option as it was added only recently.\ndebugInfo is misleading here - it actually mutes all console output & needs renaming - but I turn it to false here to hint at a user providing their own logging (as your existing gulpfile does).\nhost: localhost - again was just provided to keep the example as it was.  BrowserSync always binds to localhost but will open up an externally available IP if available. There's been some debate about whether it should only open 'localhost' on the machine running BrowserSync, with advice about the external IP in the console/control panel.\nanyway, a simplified example could just be: \njs\nbrowserSync.init(null, {\n        server: {\n            baseDir: ['app', '.tmp'],\n            directory: true\n        }\n    });\n. ^ totally - I'm happy to tweak the API before we integrate this.\nThe first argument was always for file patterns for the watcher, but it needs to be just another option in the config object now - agreed.\nre: logging, it has some logging by default (if you remove debugInfo: false), but it may be too much output for this project?\n. Hi - sure will do! I'll be shortly releasing a patch that includes the API improvements you suggested - then we'll get this sorted.\n. Ok guys - we're nearly there! Before I PR, shall we have a final riff on this proposed gulpfile.js\nAlso, I'm tying this in with a 1.0.0 release of BrowserSync that brings BrowserSTACK integration & a public URL option... along with a MAJOR bug fix from the client-side code (that caused devices to go crazy after a while due to duplicated events).\nIt's all looking good from my end, got it working flawlessly so if we all like the look of the gulpfile.js (or can provide a prefered alternative), I'm ready to go.\n. ... Or this one, which removes even more file watching.\nhttps://gist.github.com/anonymous/7047dd5d2dc1a27b027c\n. \"Purely bikshedding, but the API would have been nicer without the .init method.\" - added this recently, will be available in a patch release soon. \nDidn't realise you could have a main export + additionals, thanks.\n. \n. Still happens for me using master\nAlso got an error about connect-livereload version too, but I've seen that's addressed in another issue.\n. Yep, after doing bower update bootstrap-sass-official - gulp wiredes now does this to main.scss\ncss\n// bower:scss\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss\";\n// endbower\nThanks :)\n. BrowserSync will be switching to connect > 3.0 in the next release.\n. :+1: \n. ",
    "jcsrb": "I too like option 1, the code makes it very clear when and what gets reloaded\n. We can add an \"extras\" task, that copies all files except the html once to the dist folder\nlike I did here https://github.com/jcsrb/jakob.cosoroaba.ro/commit/89932e013ba5b24d85a5de8a2beeccfb0855c935\nif @sindresorhus thinks that is a good solution, I'll send in a PR\n. was fixed with 018bdbdf44f8a0413c6bcf2ea1d9e7099b34378b \nplease close \n. in the app folder , but not in the dist folder after you would run gulp build , having such a test would guaranty that the build task is not broken, as it was in #98 \n. Installing all the dependencies take too long for effective testing. \nCurrent tests run the generator without installing dependencies. \nthe questions remains: is testing the generated gulp-file in the scope of this project.\nthis gulp_file.js test suggest so.\nBut Since the default use case is: someone installs the generator, uses it and that starts modifying the project, and the small size of the project, manual testing before tag-releases is enough.\n. this seems to have been introduced with gulp-useref v0.4.1 https://github.com/jonkemp/gulp-useref/commit/50c6d32e7434e5563924c29b6f54f19d60cd6828 , investigating further \n. @addyosmani I didn't figure out how to overcome this issue using the given dependencies \n. I'm playing with deploying to gh-pages using gulp-subtree , is that worth a recipe?\n. why do we recommend installing new dependencies manually in the docs instead of recommend adding them to package.json ?\n. @sindresorhus learned something here, sorry for the silly question, thanks\n. In my experience clean isn't necessary to run on watch, it would mean preparing all files instead of overwriting the changed files, thereby triggering unnecessary reload and slowing down the whole process. \n. \nI vote :three: \n. using master ( checking out from GitHub and using npm link)  the tasks is working when no images are present in the app/images folder.\n\nI used the sass+modernizr when generating the new app\nwhich version did you use? what setting did you use when generating? \n. task works well with svg, gif and jpg. But I'm getting this error when using a png file\n . @kevva could there be a imagemin-optipng issue on linux?\n. I had 0.6.4, updated to version 0.7.4 , still having the same issue , moved my issue here\nhttps://github.com/kevva/imagemin-optipng/issues/2 \n. @eloop image task now works for me after the update, please update the dependencies and try again \n. @eloop even though no new version of the generator has been released, new versions of the dependencies have, please run npm update to fetch newer versions of dependencies if available\n. needs more <% if (includeBootstrap) { %> \n. is this an issue even with the master branch of the generator?\nwe stopped running the image task on watch since https://github.com/yeoman/generator-gulp-webapp/commit/f84c4fd27e440d8aebed3b168c1165b47b45f5fc\n. @silvenon fork the generator as generator-gulp-jade-webapp and publish it under @twin , if you can prove traction (via NPM stats) maybe @sindresorhus reconsiders\n. Currently only _package.json is prefixed with _ ,  in the templates directory to prevent installing wrong dependencies when working on the generator. Since the generator doesn't have any bower dependencies this is not an issue\n. I too like option 1, the code makes it very clear when and what gets reloaded\n. We can add an \"extras\" task, that copies all files except the html once to the dist folder\nlike I did here https://github.com/jcsrb/jakob.cosoroaba.ro/commit/89932e013ba5b24d85a5de8a2beeccfb0855c935\nif @sindresorhus thinks that is a good solution, I'll send in a PR\n. was fixed with 018bdbdf44f8a0413c6bcf2ea1d9e7099b34378b \nplease close \n. in the app folder , but not in the dist folder after you would run gulp build , having such a test would guaranty that the build task is not broken, as it was in #98 \n. Installing all the dependencies take too long for effective testing. \nCurrent tests run the generator without installing dependencies. \nthe questions remains: is testing the generated gulp-file in the scope of this project.\nthis gulp_file.js test suggest so.\nBut Since the default use case is: someone installs the generator, uses it and that starts modifying the project, and the small size of the project, manual testing before tag-releases is enough.\n. this seems to have been introduced with gulp-useref v0.4.1 https://github.com/jonkemp/gulp-useref/commit/50c6d32e7434e5563924c29b6f54f19d60cd6828 , investigating further \n. @addyosmani I didn't figure out how to overcome this issue using the given dependencies \n. I'm playing with deploying to gh-pages using gulp-subtree , is that worth a recipe?\n. why do we recommend installing new dependencies manually in the docs instead of recommend adding them to package.json ?\n. @sindresorhus learned something here, sorry for the silly question, thanks\n. In my experience clean isn't necessary to run on watch, it would mean preparing all files instead of overwriting the changed files, thereby triggering unnecessary reload and slowing down the whole process. \n. \nI vote :three: \n. using master ( checking out from GitHub and using npm link)  the tasks is working when no images are present in the app/images folder.\n\nI used the sass+modernizr when generating the new app\nwhich version did you use? what setting did you use when generating? \n. task works well with svg, gif and jpg. But I'm getting this error when using a png file\n . @kevva could there be a imagemin-optipng issue on linux?\n. I had 0.6.4, updated to version 0.7.4 , still having the same issue , moved my issue here\nhttps://github.com/kevva/imagemin-optipng/issues/2 \n. @eloop image task now works for me after the update, please update the dependencies and try again \n. @eloop even though no new version of the generator has been released, new versions of the dependencies have, please run npm update to fetch newer versions of dependencies if available\n. needs more <% if (includeBootstrap) { %> \n. is this an issue even with the master branch of the generator?\nwe stopped running the image task on watch since https://github.com/yeoman/generator-gulp-webapp/commit/f84c4fd27e440d8aebed3b168c1165b47b45f5fc\n. @silvenon fork the generator as generator-gulp-jade-webapp and publish it under @twin , if you can prove traction (via NPM stats) maybe @sindresorhus reconsiders\n. Currently only _package.json is prefixed with _ ,  in the templates directory to prevent installing wrong dependencies when working on the generator. Since the generator doesn't have any bower dependencies this is not an issue\n. ",
    "SevereOverfl0w": "https://gist.github.com/anonymous/259036a3fa8ba64f3626\nThese require that bower_components be moved to the app/ directory, are there any implications of this? I feel like great effort has been made to avoid this in the past.\n. How would that work? Setting basedir to './' and then routes for / to map to '.tmp' and 'app'?\n. I tried this, unfortunately not. Routes work from the basedir.\n. https://github.com/shakyShane/browser-sync/issues/125 I was trying to do something similar to this.\n. https://gist.github.com/anonymous/259036a3fa8ba64f3626\nThese require that bower_components be moved to the app/ directory, are there any implications of this? I feel like great effort has been made to avoid this in the past.\n. How would that work? Setting basedir to './' and then routes for / to map to '.tmp' and 'app'?\n. I tried this, unfortunately not. Routes work from the basedir.\n. https://github.com/shakyShane/browser-sync/issues/125 I was trying to do something similar to this.\n. ",
    "stevemao": "that's probably the only problem. I sent a PR to the docs website. https://github.com/shakyShane/browser-sync-website/pull/1\n. travis fails due to timeout. maybe increase the timeout? shouldn't have anything to do with this one.\n. that's probably the only problem. I sent a PR to the docs website. https://github.com/shakyShane/browser-sync-website/pull/1\n. travis fails due to timeout. maybe increase the timeout? shouldn't have anything to do with this one.\n. ",
    "al-the-x": "Hmm... No forward motion on this yet? ping: @shakyShane\n. :+1: lovely!\n. I'll get right on it: gulp serve:test...?\n. Closed in favor of #292 \n. I didn't add any tests to this PR because the test harness did not create a test/ directory or invoke the test framework generator when I ran the included suite. Did I do something wrong? Happy to add tests for this...\n. Sorry, we had a baby. I'll make those edits and update the PR this week.\n. Thanks. I was trying to get this in before Life Changed, but no such luck. Just pushed, and I'll add some more commentary.\n. Do let me know if I've violated any other coding standards in this correction, and I'll adjust. Furthermore, please check out #299 for further recommendations for improvement. Again, happy to open a PR.\n. Similar. The jscs tool just barks at messy code like a linter might; it doesn't correct anything. Instead, js-beautifier will output a modified version of the code with certain rules applied... html-tidy anyone? They're not mutually exclusive, either. Let js-beautify handle the details of whitespace handling and tabs vs spaces, let jscs and js-hint handle more esoteric concepts like missing var statements or IIFE's, the proper use of identifiers, etc.\n. Hmm... No forward motion on this yet? ping: @shakyShane\n. :+1: lovely!\n. I'll get right on it: gulp serve:test...?\n. Closed in favor of #292 \n. I didn't add any tests to this PR because the test harness did not create a test/ directory or invoke the test framework generator when I ran the included suite. Did I do something wrong? Happy to add tests for this...\n. Sorry, we had a baby. I'll make those edits and update the PR this week.\n. Thanks. I was trying to get this in before Life Changed, but no such luck. Just pushed, and I'll add some more commentary.\n. Do let me know if I've violated any other coding standards in this correction, and I'll adjust. Furthermore, please check out #299 for further recommendations for improvement. Again, happy to open a PR.\n. Similar. The jscs tool just barks at messy code like a linter might; it doesn't correct anything. Instead, js-beautifier will output a modified version of the code with certain rules applied... html-tidy anyone? They're not mutually exclusive, either. Let js-beautify handle the details of whitespace handling and tabs vs spaces, let jscs and js-hint handle more esoteric concepts like missing var statements or IIFE's, the proper use of identifiers, etc.\n. ",
    "phated": "@sindresorhus last I understood, it is a streaming static webserver and connect isn't (connect might have changed).  Also, it is a smaller dependency vs all of connect.\n. If vinyl objects are representing files on a filesystem, shouldn't there just be a size on vinyl objects?\n. @sindresorhus last I understood, it is a streaming static webserver and connect isn't (connect might have changed).  Also, it is a smaller dependency vs all of connect.\n. If vinyl objects are representing files on a filesystem, shouldn't there just be a size on vinyl objects?\n. ",
    "avevlad": "@sindresorhus  :+1: \n. @jackfranklin :smiley: \n. @sindresorhus  :+1: \n. @jackfranklin :smiley: \n. ",
    "tsevdos": "my bad...\n. Alright, but then at the first yeoman question, the add \"Sass and compass\" answer could be a bit misleading since the gulp adds only sass support, and not compass.\nregards,\nJohn\n. my bad...\n. Alright, but then at the first yeoman question, the add \"Sass and compass\" answer could be a bit misleading since the gulp adds only sass support, and not compass.\nregards,\nJohn\n. ",
    "davidblurton": "Test PRs before merging them? Build is broken.\n. Test PRs before merging them? Build is broken.\n. ",
    "xgenvn": "Hi @silvenon\nI tested again with your detail help, however, I think I ran into a problem of workflow here.\nWhen coding frontend gulp watch does help with live-reload. The fontawsome loads font files in default directory ../fonts . This won't work for app/ because there's no task for copying fonts to this directory. Otherwise, under dist/ , the code worked, but certainly no live-reload there.\nAfter reading through gulpfile.js, I added a line where fonts task locates:\n\n.pipe(gulp.dest('dist/fonts'))\n   .pipe(gulp.dest('app/assets/fonts'))\n\nHere I put all of my stuffs to assets directory instead of app directory.\nAs I'm aware of, your solution only works when fontawesome is under the dependencies  (not devDependencies) package list (I don't know why :( ).\n@kasperisager I have checked the fontawesome bower package, it has .bower.json under package root, maybe I can declare font assets in that file instead of override app bower.json?\nThank you sooo much.\n. @silvenon My gulpfile.js is not different too much with the original one, I just add a line as I show above. I've checked again the fonts are loading through relative path so I don't need to copy the font to app directory, just like you said.\nI also have no idea why I have to use devDependencies, so I search around for document then I ended up put packages into dependencies list.\nThank you again @silvenon.\n. @silvenon It's working now. I'm trying to integrate gulp with laravel, too. Gulp is indeed very nice. And yeoman too. ;)\n. I remembered it worked for me after trying install/remove/update something, and the fonts were copied rightly. But after that I tried generating another project to test again, the fonts were not copying to destination. That's really odd.\n. Hi @silvenon\nI tested again with your detail help, however, I think I ran into a problem of workflow here.\nWhen coding frontend gulp watch does help with live-reload. The fontawsome loads font files in default directory ../fonts . This won't work for app/ because there's no task for copying fonts to this directory. Otherwise, under dist/ , the code worked, but certainly no live-reload there.\nAfter reading through gulpfile.js, I added a line where fonts task locates:\n\n.pipe(gulp.dest('dist/fonts'))\n   .pipe(gulp.dest('app/assets/fonts'))\n\nHere I put all of my stuffs to assets directory instead of app directory.\nAs I'm aware of, your solution only works when fontawesome is under the dependencies  (not devDependencies) package list (I don't know why :( ).\n@kasperisager I have checked the fontawesome bower package, it has .bower.json under package root, maybe I can declare font assets in that file instead of override app bower.json?\nThank you sooo much.\n. @silvenon My gulpfile.js is not different too much with the original one, I just add a line as I show above. I've checked again the fonts are loading through relative path so I don't need to copy the font to app directory, just like you said.\nI also have no idea why I have to use devDependencies, so I search around for document then I ended up put packages into dependencies list.\nThank you again @silvenon.\n. @silvenon It's working now. I'm trying to integrate gulp with laravel, too. Gulp is indeed very nice. And yeoman too. ;)\n. I remembered it worked for me after trying install/remove/update something, and the fonts were copied rightly. But after that I tried generating another project to test again, the fonts were not copying to destination. That's really odd.\n. ",
    "rizqinizamil": "Hi all,\nI user my custom icon generated by fontastic. I followed @silvenon instructions and edit bower.json became this;\njavascript\n{\n  \"name\": \"webapp\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass-official\": \"~3.1.1\",\n    \"modernizr\": \"~2.6.2\",\n    \"jquery\": \"~1.11.0\"\n  },\n  \"devDependencies\": {},\n  \"overrides\": {\n      \"icon\": {\n          \"main\": [\n              \"icon/styles.css\",\n              \"icon/fonts/pr360.eot\",\n              \"icon/fonts/pr360.woff\",\n              \"icon/fonts/pr360.ttf\",\n              \"icon/fonts/pr360.svg\"\n          ]\n      }\n  }\n}\nThen I add icon folder into bower_components and run gulp wiredep. After that I run gulp, but I can't see my font in dist/fonts I just see bootstrap font that I don't use it.\nIt works when I run gulp watch, but it don't work when I run gulp. Anyone know how to solve it?\n. @austinpray I tried to add icon folder into app directory instead of app/bower_components, but it don't work too. How is the right way to add my own icon into this generator?\n. @austinpray It shows Cannot find module 'main-bower-files' when I change return part. My gulp fonts is like this\njavascript\ngulp.task('fonts', function () {\n    return $.bowerFiles()\n        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'))\n        .pipe($.size());\n});\n. @austinpray Sorry, but I still can't see my own icon in dist/fonts\n. It solved by changing src directory directly gulp.src('app/fonts/*/') instead of $.bowerFiles(). Can anyone explain why?\n. gulp-plumber is no longer included in generator-gulp-webapp, yes?\n. Nice! Thanks @kevva \n. UPDATE:\nI've updated gulp-useref according to https://github.com/yeoman/generator-gulp-webapp/issues/229 but I still get the same error.\n. Turns out I have bad plugin path. Sorry, it's my false. Issue closed.\n. Hi there,\nSorry I posted here, because it also relevant to my problems. The glyphicons seem not work for me too. I got 404 error on browser console:\nhttp://localhost:9000/bower_components/bootstrap-sass/assets/fonts/glyphicons-halflings-regular.woff\nI think, It should be:\nhttp://localhost:9000/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff\nI use generator-gulp-webapp 1.0.3. How to fix it?\n. Is ruby sass doesn't support Susy anymore? I've already added require: 'susy' but it doesn't work. I should import Susy manually from bower then it works.\n\n gulp.task('styles', function () {\n  return $.rubySass('app/styles/main.scss', {\n      sourcemap: true,\n      style: 'expanded',\n      compass: true,\n      require: 'susy',\n      precision: 10,\n      loadPath: ['.']\n    }).on('error', function(err) {\n        console.log('Sass error:'+err.message);\n    })\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));  \n});\n\n. Thanks @silvenon, it works :)\n. Also got this error on my fresh install. What can I do?\nTry to run sudo npm update gulp -g but got this error cb() never called!.\nAlready ran npm cache clean too.\n. Thanks @kevva !\n. @silvenon I think you are right. \nFirst I tried to delete uglify task then it worked. Then I removed tinymce (which has a lot of js files) then it worked too.\nSo how can I ignore all tinymce js from uglify task?\nI tried to edit html task like this, but it doesn't work.\n\ngulp.task('html', ['views','styles'], function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n  return gulp.src(['app/*.html', '.tmp/*.html'])\n    .pipe(assets)\n    .pipe($.if(['*.js', '!bower_components/tinymce/*.js'], $.uglify()))\n    .pipe($.if('*.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest('dist'));\n});\n\n. Just found the solutions. Just put them outside the build block. And create copy to dist folder task.\nSorry, ignore it :|\n. @arthurvr I see. I think I will try to improve jekyll generator If this repo owner say so :)\n. Sorry to make you confuse.\nI mean scaffold not generator.\nSo what I want to achieve is to manage disk space. Every I scaffold (run yo gulp-webapp) it takes about 100MB, and my daily work is about creating static HTML template. For now I always scaffold it every I create new template. \nDo you have any advice about it? Or can I just scaffold it once and use it for some projects?\nThank you.\n\nOn Feb 11, 2016, at 6:19 PM, Matija Marohni\u0107 notifications@github.com wrote:\nHm, not sure if I understand the question. You usually don't manage a project with generators, you scaffold them once. Can you explain what do you want to achieve?\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you for you explanation @silvenon. I'll go to ask about my question in Quora.\n. I also have same problem. Do you have any solution regarding useref error for it?\n. This change worked for me;\n\nreturn gulp.src(['app/*.html', '.tmp/*.html', '.tmp/**/*.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.', '']}))\nI use Jade btw.\n. @neilhem Yes, you are right. Thank you!\n. Actually I still have a problem. gulp html works for now, but gulp serve works with 404 error on css/js assets, because I set the url into this;\n// build:css ../styles/main.min.css\n link(rel='stylesheet' href='app/styles/main.css')\n// endbuild\ngulp serve works fine when I change it into\n// build:css ../styles/main.min.css\n link(rel='stylesheet' href='../styles/main.css')\n// endbuild\nbut got error File not found with singular glob: when I run gulp html.\nAny idea?\n. @silvenon Oops, sorry, my fault. I write it with sleepy eyes :|. Please check, I just edited it.\n. @silvenon Yes, you are right.\n. @silvenon Sorry if I posted here. I have same issue. Even running gulp wiredep it does nothing.\nAny thoughts?\n. @silvenon Oops, sorry my fault. Ignore it. Thanks.\n. Hi @neilhem,\nThank you for your response.\nYes, I used that recipe. But then I use gulp-gh-pages, it works now.\n. That worked! Thank you @silvenon !. I changed /\\.js$/ to *.js then it works. I changed for css and html as well.\nI'm not sure it just happened to me or anyone else too.. @silvenon if I remove the quotes I got this error:\n/Applications/XAMPP/xamppfiles/htdocs/yeoman-nunjuck/gulpfile.js:74\n    .pipe($.if(/\\.css$/b, $.cssnano({safe: true, autoprefixer: false})))\n               ^\nSyntaxError: Invalid regular expression flags\n    at createScript (vm.js:53:10)\n    at Object.runInThisContext (vm.js:95:10)\n    at Module._compile (module.js:543:28)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.require (module.js:498:17)\n    at require (internal/module.js:20:19)\n    at execute (/usr/local/lib/node_modules/gulp-cli/lib/versioned/^3.7.0/index.js:25:18). Hi all,\nI user my custom icon generated by fontastic. I followed @silvenon instructions and edit bower.json became this;\njavascript\n{\n  \"name\": \"webapp\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass-official\": \"~3.1.1\",\n    \"modernizr\": \"~2.6.2\",\n    \"jquery\": \"~1.11.0\"\n  },\n  \"devDependencies\": {},\n  \"overrides\": {\n      \"icon\": {\n          \"main\": [\n              \"icon/styles.css\",\n              \"icon/fonts/pr360.eot\",\n              \"icon/fonts/pr360.woff\",\n              \"icon/fonts/pr360.ttf\",\n              \"icon/fonts/pr360.svg\"\n          ]\n      }\n  }\n}\nThen I add icon folder into bower_components and run gulp wiredep. After that I run gulp, but I can't see my font in dist/fonts I just see bootstrap font that I don't use it.\nIt works when I run gulp watch, but it don't work when I run gulp. Anyone know how to solve it?\n. @austinpray I tried to add icon folder into app directory instead of app/bower_components, but it don't work too. How is the right way to add my own icon into this generator?\n. @austinpray It shows Cannot find module 'main-bower-files' when I change return part. My gulp fonts is like this\njavascript\ngulp.task('fonts', function () {\n    return $.bowerFiles()\n        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'))\n        .pipe($.size());\n});\n. @austinpray Sorry, but I still can't see my own icon in dist/fonts\n. It solved by changing src directory directly gulp.src('app/fonts/*/') instead of $.bowerFiles(). Can anyone explain why?\n. gulp-plumber is no longer included in generator-gulp-webapp, yes?\n. Nice! Thanks @kevva \n. UPDATE:\nI've updated gulp-useref according to https://github.com/yeoman/generator-gulp-webapp/issues/229 but I still get the same error.\n. Turns out I have bad plugin path. Sorry, it's my false. Issue closed.\n. Hi there,\nSorry I posted here, because it also relevant to my problems. The glyphicons seem not work for me too. I got 404 error on browser console:\nhttp://localhost:9000/bower_components/bootstrap-sass/assets/fonts/glyphicons-halflings-regular.woff\nI think, It should be:\nhttp://localhost:9000/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff\nI use generator-gulp-webapp 1.0.3. How to fix it?\n. Is ruby sass doesn't support Susy anymore? I've already added require: 'susy' but it doesn't work. I should import Susy manually from bower then it works.\n\n gulp.task('styles', function () {\n  return $.rubySass('app/styles/main.scss', {\n      sourcemap: true,\n      style: 'expanded',\n      compass: true,\n      require: 'susy',\n      precision: 10,\n      loadPath: ['.']\n    }).on('error', function(err) {\n        console.log('Sass error:'+err.message);\n    })\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));  \n});\n\n. Thanks @silvenon, it works :)\n. Also got this error on my fresh install. What can I do?\nTry to run sudo npm update gulp -g but got this error cb() never called!.\nAlready ran npm cache clean too.\n. Thanks @kevva !\n. @silvenon I think you are right. \nFirst I tried to delete uglify task then it worked. Then I removed tinymce (which has a lot of js files) then it worked too.\nSo how can I ignore all tinymce js from uglify task?\nI tried to edit html task like this, but it doesn't work.\n\ngulp.task('html', ['views','styles'], function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n  return gulp.src(['app/*.html', '.tmp/*.html'])\n    .pipe(assets)\n    .pipe($.if(['*.js', '!bower_components/tinymce/*.js'], $.uglify()))\n    .pipe($.if('*.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest('dist'));\n});\n\n. Just found the solutions. Just put them outside the build block. And create copy to dist folder task.\nSorry, ignore it :|\n. @arthurvr I see. I think I will try to improve jekyll generator If this repo owner say so :)\n. Sorry to make you confuse.\nI mean scaffold not generator.\nSo what I want to achieve is to manage disk space. Every I scaffold (run yo gulp-webapp) it takes about 100MB, and my daily work is about creating static HTML template. For now I always scaffold it every I create new template. \nDo you have any advice about it? Or can I just scaffold it once and use it for some projects?\nThank you.\n\nOn Feb 11, 2016, at 6:19 PM, Matija Marohni\u0107 notifications@github.com wrote:\nHm, not sure if I understand the question. You usually don't manage a project with generators, you scaffold them once. Can you explain what do you want to achieve?\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you for you explanation @silvenon. I'll go to ask about my question in Quora.\n. I also have same problem. Do you have any solution regarding useref error for it?\n. This change worked for me;\n\nreturn gulp.src(['app/*.html', '.tmp/*.html', '.tmp/**/*.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.', '']}))\nI use Jade btw.\n. @neilhem Yes, you are right. Thank you!\n. Actually I still have a problem. gulp html works for now, but gulp serve works with 404 error on css/js assets, because I set the url into this;\n// build:css ../styles/main.min.css\n link(rel='stylesheet' href='app/styles/main.css')\n// endbuild\ngulp serve works fine when I change it into\n// build:css ../styles/main.min.css\n link(rel='stylesheet' href='../styles/main.css')\n// endbuild\nbut got error File not found with singular glob: when I run gulp html.\nAny idea?\n. @silvenon Oops, sorry, my fault. I write it with sleepy eyes :|. Please check, I just edited it.\n. @silvenon Yes, you are right.\n. @silvenon Sorry if I posted here. I have same issue. Even running gulp wiredep it does nothing.\nAny thoughts?\n. @silvenon Oops, sorry my fault. Ignore it. Thanks.\n. Hi @neilhem,\nThank you for your response.\nYes, I used that recipe. But then I use gulp-gh-pages, it works now.\n. That worked! Thank you @silvenon !. I changed /\\.js$/ to *.js then it works. I changed for css and html as well.\nI'm not sure it just happened to me or anyone else too.. @silvenon if I remove the quotes I got this error:\n/Applications/XAMPP/xamppfiles/htdocs/yeoman-nunjuck/gulpfile.js:74\n    .pipe($.if(/\\.css$/b, $.cssnano({safe: true, autoprefixer: false})))\n               ^\nSyntaxError: Invalid regular expression flags\n    at createScript (vm.js:53:10)\n    at Object.runInThisContext (vm.js:95:10)\n    at Module._compile (module.js:543:28)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.require (module.js:498:17)\n    at require (internal/module.js:20:19)\n    at execute (/usr/local/lib/node_modules/gulp-cli/lib/versioned/^3.7.0/index.js:25:18). ",
    "KevinLlopart": "I think I do.\nIn your gulpfile, replace this:\njavascript\n        .pipe(cssFilter)\n        .pipe($.csso())\nby this:\njavascript\n        .pipe(cssFilter)\n        .pipe($.replace('bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts'))\n        .pipe($.csso())\nand voil\u00e0. Ah, you also need to install gulp-replace.\n. Thanks!\n. I think I do.\nIn your gulpfile, replace this:\njavascript\n        .pipe(cssFilter)\n        .pipe($.csso())\nby this:\njavascript\n        .pipe(cssFilter)\n        .pipe($.replace('bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts'))\n        .pipe($.csso())\nand voil\u00e0. Ah, you also need to install gulp-replace.\n. Thanks!\n. ",
    "Munter": "Hmm. Very specific for only that file. All other fonts will still be broken if I understand this correctly\n. How about fonts in the app directory that are moved to dist/fonts/. I those urls in the css need to be rewritten as well I guess\n. If bower_components moves into app I'm pretty sure I can build you an assetgraph based solution pretty quickly. As it stands now I could probably hack it to solve the problem, but including assets with paths outside the web root is unexplored territory for me, so no promises. I'd love to give it a shot though :)\n. I do not agree with this change. All urls should always be valid file references. If you part with this, you add complexity for the reader because they have to make a mental leap each time they need to resolve an url. Verbosity does not equal complexity. Often times the opposite is true. And this change takes the generator more in the direction of setting you up with a static page generator than an actual webpage.\nThat said, the /../ url is an abonimation that should die a swift death. The solution is not to break all urls though. Instead bower_components should reside inside the web root. This would move the generator closer to actually generating a website that can be used even without the build step, thus further decreasing complexity. This is exactly what I did in generator-greenfield.\n. Hmm. Very specific for only that file. All other fonts will still be broken if I understand this correctly\n. How about fonts in the app directory that are moved to dist/fonts/. I those urls in the css need to be rewritten as well I guess\n. If bower_components moves into app I'm pretty sure I can build you an assetgraph based solution pretty quickly. As it stands now I could probably hack it to solve the problem, but including assets with paths outside the web root is unexplored territory for me, so no promises. I'd love to give it a shot though :)\n. I do not agree with this change. All urls should always be valid file references. If you part with this, you add complexity for the reader because they have to make a mental leap each time they need to resolve an url. Verbosity does not equal complexity. Often times the opposite is true. And this change takes the generator more in the direction of setting you up with a static page generator than an actual webpage.\nThat said, the /../ url is an abonimation that should die a swift death. The solution is not to break all urls though. Instead bower_components should reside inside the web root. This would move the generator closer to actually generating a website that can be used even without the build step, thus further decreasing complexity. This is exactly what I did in generator-greenfield.\n. ",
    "eddiemonge": "I'd be interested to see what it takes to make assetgraph work with things outside the app directory. It's not just bower components that are outside it; people use npm to install front end dependencies as well so unless you want to somehow move that into app as well it's a problem that will need to me figured out\n. Files in the root shouldn't be edited either. Its only by accident that Gruntfile/Gulpfile get edited. Ideally, they should be generated and then never touched again. {package|bower}.json are mostly managed by their respective applications. The only files that really get edited are those in /app and /test. Keeping bower_components alongside node_modules makes it more apparent that they shouldn't be edited manually. imho it shouldn't be up to the user to remember that those files aren't editable (if they were in the /app folder). The workflow problem is a tooling issue. The tools users are using to aid in their workflow should be smart enough to work with those folders regardless of where they are. If they aren't smart enough then we as tool builders have failed and need to work harder to get the tools to be smart enough to handle them.\nThink of the things in bower_components like they were a file on a CDN. You don't say, well my tools don't let me work with CDN hosted files so I have to download them and put them in my physical app folder. Rather, you build tools that take advantage of that fact and are designed to work with those constraints in mind.\n. Yes. Less work having to go back and figure out what was fixed in the current release and then close them all. Plus, putting Fixes #xyz in a commit message automatically closes that commit when it gets merged into master.\n. :+1: \n. Sounds like a bug in useref in not being able to specify the root path like we do in usemin\n. Agreed. This is something that has been brought up in team meetings. We are still working on a resolution.\n. Closed due to inactivity\n. According to this: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/bowerrc#L2 it should be installed in the root and not in /app\n. Did you update the actual generator? When you run yo what version does it show for the generator?\n. Also when you say root directory, do you mean / or c:/ or do you mean your project root?\n. try npm install -g yeoman/generator-gulp-webapp\n. Since this isn't using usemin, I don't know what the script source should be. @silvenon would know better\n. > the minifier referenced above\nWell that sounds like a problem with that specific tool and not minimization in general. Been using a grunt-html-minify for awhile on angular projects and haven't had any issues (one issue was conservative whitespace, which has since been fixed, but really only affected layout slightly).\nIf you are going to not do html minification then why do css minification? Its the same concept. JS min is slightly different in that it usually has other space saving optimizations that rewrite the code, which to me is far more dangerous. You trust that, so why not find a htmlmin tool that you can trust as well?\n. Ah but your perf test there is flawed since its not actually testing min vs non-min JS. Its testing non-min JS vs mangled JS. Minifying JS doesn't improve performance that much, if anything. Mangling does. \nIgnoring JS mangling, there is no difference in minifying HTML vs JS. They are both white-space sensitive in certain areas. Minifying HTML (removing whitespace, conservativeCollapse of whitespace) does improve performance because there is less to load. It might not be super huge savings but a server that can save 1kb per page load makes a huge difference. Image if Facebook or Google or Amazon shaved 1kb off each page load. Per person that isn't much but per all users visiting that quickly adds up to mega/giga/tera-bytes of data the network is saving. This generates a project that has these tools built in so an end user would spend zero time on installing and configuring the html minifier portion and us as the tool authors spends a little time to setup so they don't have to. \nI think it is our responsibility to eek out every little amount of performance/optimization for the end user as possible so they don't have to.\n. @Trost123 you shouldn't use spaces as spacing elements. If you really want it, then you should be using &nbsp;.  conservativeCollapse:true may not have existed when this went it but has been added for those that continue to use spaces as spacing.\n. oh thats an interesting use case. i'm not sure about copying since i rarely do it like that. most times, the text that needs to be copied doesn't have brs. it usually has width with the words auto wrapping. Maybe the words after the br should be wrapped in a span?\n. seems fine to me :+1: \n. Did you read the actual readme for that release? https://www.npmjs.com/package/generator-gulp-webapp shows the readme relevant for that release. The readme on github shows the relevant one for that version (unreleased but still install by npm i -g yeoman/generator-gulp-webapp. If you look at a readme for some other version then it is very understandable that it might not be relevant. Thats why you should always look at the one for the version of the thing you are using.\n. Sometimes there also isn't any new development to justify a new release.\n. What kind of issues. Please be specific\n. Did you bower install?\n. Until Gulp4 is done (or we switch this to it) this isn't the best solution. Its adding a dependency to tasks that don't really need it. Its much easier to just tell people to do gulp clean && gulp serve.\nHowever, del could still be upgraded if this PR was just for that.\n. right, clean should be ran in a series with all the other tasks ran parallel after it\n. Can you elaborate? What version of the generator are you using? What options did you specify? Did you change any code?\n. This is more of an implementation detail specific to your use case (Even if others can use it) but not usable but the majority of use cases. Implementing this would require something that builds those pages up. This generator is more meant for simple sites and to quickly scaffold out a basic website. Doing this starts to make it more complex as a templating language has to be used. Thanks for your suggestion though.\n. changed the one es2015 feature I was using so it should pass in older tests and won't be considered a breaking change\n. This is only a warning, not an error. And it is an npm bug.. It would be better if recipes were community maintained\n. meaning we didnt have to do them. adding them as features to the generator means our maintenance level goes way up having to support all these different combinations\n. What referenced issue are you talking about? . I'd be interested to see what it takes to make assetgraph work with things outside the app directory. It's not just bower components that are outside it; people use npm to install front end dependencies as well so unless you want to somehow move that into app as well it's a problem that will need to me figured out\n. Files in the root shouldn't be edited either. Its only by accident that Gruntfile/Gulpfile get edited. Ideally, they should be generated and then never touched again. {package|bower}.json are mostly managed by their respective applications. The only files that really get edited are those in /app and /test. Keeping bower_components alongside node_modules makes it more apparent that they shouldn't be edited manually. imho it shouldn't be up to the user to remember that those files aren't editable (if they were in the /app folder). The workflow problem is a tooling issue. The tools users are using to aid in their workflow should be smart enough to work with those folders regardless of where they are. If they aren't smart enough then we as tool builders have failed and need to work harder to get the tools to be smart enough to handle them.\nThink of the things in bower_components like they were a file on a CDN. You don't say, well my tools don't let me work with CDN hosted files so I have to download them and put them in my physical app folder. Rather, you build tools that take advantage of that fact and are designed to work with those constraints in mind.\n. Yes. Less work having to go back and figure out what was fixed in the current release and then close them all. Plus, putting Fixes #xyz in a commit message automatically closes that commit when it gets merged into master.\n. :+1: \n. Sounds like a bug in useref in not being able to specify the root path like we do in usemin\n. Agreed. This is something that has been brought up in team meetings. We are still working on a resolution.\n. Closed due to inactivity\n. According to this: https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/bowerrc#L2 it should be installed in the root and not in /app\n. Did you update the actual generator? When you run yo what version does it show for the generator?\n. Also when you say root directory, do you mean / or c:/ or do you mean your project root?\n. try npm install -g yeoman/generator-gulp-webapp\n. Since this isn't using usemin, I don't know what the script source should be. @silvenon would know better\n. > the minifier referenced above\nWell that sounds like a problem with that specific tool and not minimization in general. Been using a grunt-html-minify for awhile on angular projects and haven't had any issues (one issue was conservative whitespace, which has since been fixed, but really only affected layout slightly).\nIf you are going to not do html minification then why do css minification? Its the same concept. JS min is slightly different in that it usually has other space saving optimizations that rewrite the code, which to me is far more dangerous. You trust that, so why not find a htmlmin tool that you can trust as well?\n. Ah but your perf test there is flawed since its not actually testing min vs non-min JS. Its testing non-min JS vs mangled JS. Minifying JS doesn't improve performance that much, if anything. Mangling does. \nIgnoring JS mangling, there is no difference in minifying HTML vs JS. They are both white-space sensitive in certain areas. Minifying HTML (removing whitespace, conservativeCollapse of whitespace) does improve performance because there is less to load. It might not be super huge savings but a server that can save 1kb per page load makes a huge difference. Image if Facebook or Google or Amazon shaved 1kb off each page load. Per person that isn't much but per all users visiting that quickly adds up to mega/giga/tera-bytes of data the network is saving. This generates a project that has these tools built in so an end user would spend zero time on installing and configuring the html minifier portion and us as the tool authors spends a little time to setup so they don't have to. \nI think it is our responsibility to eek out every little amount of performance/optimization for the end user as possible so they don't have to.\n. @Trost123 you shouldn't use spaces as spacing elements. If you really want it, then you should be using &nbsp;.  conservativeCollapse:true may not have existed when this went it but has been added for those that continue to use spaces as spacing.\n. oh thats an interesting use case. i'm not sure about copying since i rarely do it like that. most times, the text that needs to be copied doesn't have brs. it usually has width with the words auto wrapping. Maybe the words after the br should be wrapped in a span?\n. seems fine to me :+1: \n. Did you read the actual readme for that release? https://www.npmjs.com/package/generator-gulp-webapp shows the readme relevant for that release. The readme on github shows the relevant one for that version (unreleased but still install by npm i -g yeoman/generator-gulp-webapp. If you look at a readme for some other version then it is very understandable that it might not be relevant. Thats why you should always look at the one for the version of the thing you are using.\n. Sometimes there also isn't any new development to justify a new release.\n. What kind of issues. Please be specific\n. Did you bower install?\n. Until Gulp4 is done (or we switch this to it) this isn't the best solution. Its adding a dependency to tasks that don't really need it. Its much easier to just tell people to do gulp clean && gulp serve.\nHowever, del could still be upgraded if this PR was just for that.\n. right, clean should be ran in a series with all the other tasks ran parallel after it\n. Can you elaborate? What version of the generator are you using? What options did you specify? Did you change any code?\n. This is more of an implementation detail specific to your use case (Even if others can use it) but not usable but the majority of use cases. Implementing this would require something that builds those pages up. This generator is more meant for simple sites and to quickly scaffold out a basic website. Doing this starts to make it more complex as a templating language has to be used. Thanks for your suggestion though.\n. changed the one es2015 feature I was using so it should pass in older tests and won't be considered a breaking change\n. This is only a warning, not an error. And it is an npm bug.. It would be better if recipes were community maintained\n. meaning we didnt have to do them. adding them as features to the generator means our maintenance level goes way up having to support all these different combinations\n. What referenced issue are you talking about? . ",
    "dmackerman": "Ah, my fault. Didn't do an upgrade. :)\n. Yeah I did. I stopped watching SCSS for reloads and just CSS. Works much better. :)\u2014\nSent from Mailbox\nOn Sun, May 4, 2014 at 12:18 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\n@dmackerman have you managed to get this fixed?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/106#issuecomment-42138466\n. Ah, my fault. Didn't do an upgrade. :)\n. Yeah I did. I stopped watching SCSS for reloads and just CSS. Works much better. :)\u2014\nSent from Mailbox\n\nOn Sun, May 4, 2014 at 12:18 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\n@dmackerman have you managed to get this fixed?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/106#issuecomment-42138466\n. \n",
    "KingScooty": "Ah, i mean color, haha. Been in too many meetings with non-devs today - not in coding mode.\nI left Sass and Compass, and Modernizr enabled. Disabled Bootstrap.\n. Morning guys.\nSo i've cloned master and npm linked it. I then went into my project dir and re-ran the generator via yo. Updated all the necessary files.\nNow when i use gulp watch the browser looks like it's triggering after each save, but the styles aren't being loaded in. Not even when i manually refresh. A quick look in main.css shows that it's not being updated when main.scss is compiled.\nQuite bizarre. I'm going to start a new project from scratch with the generator to see if that remedies the situation. \n. Ah. Now i get this error when starting a new project with the generator:\n```\nnpm ERR! notarget No compatible version found: connect-livereload@'>=0.4.0-0 <0.5.0-0'\nnpm ERR! notarget Valid install targets:\nnpm ERR! notarget [\"0.0.2\",\"0.0.3\",\"0.1.0\",\"0.1.1\",\"0.1.2\",\"0.1.3\",\"0.1.4\",\"0.2.0\",\"0.3.0\",\"0.3.1\",\"0.3.2\"]\nnpm ERR! notarget \nnpm ERR! notarget This is most likely not a problem with npm itself.\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\nnpm ERR! notarget a package version that doesn't exist.\nnpm ERR! System Darwin 13.1.0\n```\n. Hmm. I reinstalled node via brew this morning, and nothing changed, but I've just done it again now, and connect-livereload installed fine. Perhaps it was due to attempting the above while on a Virgin train to London,  so connectivity issues may have had a part to play.\nEither way, i've gone from npm 1.4.3 to npm 1.4.7 and connect-livereload@0.4.0 is now installing properly.\nSubsequently, the livereload issue is now gone and saves are loading into the browser about 100-200ms later.\n. I've just started a new project using generator-gulp-webapp, and it's struggling to load in connect-livereload@0.4.0 again and failing.\nnpm WARN package.json frontend-build@0.0.0 No description\nnpm WARN package.json frontend-build@0.0.0 No repository field.\nnpm WARN package.json frontend-build@0.0.0 No README data\nnpm http GET https://registry.npmjs.org/connect-livereload\nnpm http 200 https://registry.npmjs.org/connect-livereload\nnpm ERR! Error: version not found: connect-livereload@0.4.0\nnpm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:826:12\nnpm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/fstream/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/sha/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-installed/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/npm-registry-client/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\nVery bizarre.\n. It works fine for any other version number, and any other package :/ It just seems to crash out on 0.4.0. \n. Here's a longer progress message to demonstrate. \n```\n[?] What would you like to do? Run the Gulp-webapp generator (0.0.6)\nMake sure you're in the directory you want to scaffold into.\nThis generator can also be run with: yo gulp-webapp\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nOut of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.\n[?] What more would you like? Sass, Modernizr\n   create gulpfile.js\n   create package.json\n   create .gitignore\n   create .gitattributes\n   create .bowerrc\n   create bower.json\n   create .jshintrc\n   create .editorconfig\n   create app/favicon.ico\n   create app/404.html\n   create app/robots.txt\n   create app/.htaccess\n   create app/styles/main.scss\n   create app/index.html\n   create app/scripts/main.js\nI'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\nnpm WARN package.json test@0.0.0 No description\nnpm WARN package.json test@0.0.0 No repository field.\nnpm WARN package.json test@0.0.0 No README data\nnpm http GET https://registry.npmjs.org/gulp-cache\nnpm http GET https://registry.npmjs.org/gulp-csso\nnpm http GET https://registry.npmjs.org/gulp-filter\nnpm http GET https://registry.npmjs.org/gulp-imagemin\nnpm http GET https://registry.npmjs.org/gulp-clean\nnpm http GET https://registry.npmjs.org/gulp-jshint\nnpm http GET https://registry.npmjs.org/gulp-flatten\nnpm http GET https://registry.npmjs.org/gulp-livereload\nbower jquery#~1.11.0            cached git://github.com/jquery/jquery.git#1.11.0\nbower jquery#~1.11.0          validate 1.11.0 against git://github.com/jquery/jquery.git#~1.11.0\nbower modernizr#~2.6.2          cached git://github.com/Modernizr/Modernizr.git#2.6.3\nbower modernizr#~2.6.2        validate 2.6.3 against git://github.com/Modernizr/Modernizr.git#~2.6.2\nbower modernizr#~2.6.2         install modernizr#2.6.3\nbower jquery#~1.11.0           install jquery#1.11.0\nmodernizr#2.6.3 app/bower_components/modernizr\njquery#1.11.0 app/bower_components/jquery\nnpm http GET https://registry.npmjs.org/gulp-load-plugins\nnpm http GET https://registry.npmjs.org/gulp-ruby-sass\nnpm http GET https://registry.npmjs.org/opn\nnpm http GET https://registry.npmjs.org/wiredep\nnpm http GET https://registry.npmjs.org/gulp-size\nnpm http GET https://registry.npmjs.org/gulp-uglify\nnpm http GET https://registry.npmjs.org/gulp-useref\nnpm http GET https://registry.npmjs.org/jshint-stylish\nnpm http GET https://registry.npmjs.org/connect\nnpm http GET https://registry.npmjs.org/gulp\nnpm http GET https://registry.npmjs.org/gulp-autoprefixer\nnpm http GET https://registry.npmjs.org/gulp-bower-files\nnpm http GET https://registry.npmjs.org/connect-livereload\nnpm http 200 https://registry.npmjs.org/gulp-imagemin\nnpm http GET https://registry.npmjs.org/gulp-imagemin/-/gulp-imagemin-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-imagemin/-/gulp-imagemin-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-cache\nnpm http 200 https://registry.npmjs.org/gulp-filter\nnpm http GET https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.1.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-filter/-/gulp-filter-0.4.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-csso\nnpm http 200 https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.1.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-csso/-/gulp-csso-0.2.7.tgz\nnpm http 200 https://registry.npmjs.org/gulp-clean\nnpm http GET https://registry.npmjs.org/gulp-clean/-/gulp-clean-0.2.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-jshint\nnpm http 200 https://registry.npmjs.org/gulp-csso/-/gulp-csso-0.2.7.tgz\nnpm http GET https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-1.5.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-clean/-/gulp-clean-0.2.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-1.5.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-flatten\nnpm http 200 https://registry.npmjs.org/opn\nnpm http GET https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.0.2.tgz\nnpm http GET https://registry.npmjs.org/opn/-/opn-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-load-plugins\nnpm http 200 https://registry.npmjs.org/gulp-filter/-/gulp-filter-0.4.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.0.2.tgz\nnpm http GET https://registry.npmjs.org/gulp-load-plugins/-/gulp-load-plugins-0.5.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-ruby-sass\nnpm http 200 https://registry.npmjs.org/gulp-size\nnpm http 200 https://registry.npmjs.org/gulp-livereload\nnpm http 200 https://registry.npmjs.org/wiredep\nnpm http 200 https://registry.npmjs.org/gulp-load-plugins/-/gulp-load-plugins-0.5.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-0.4.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-size/-/gulp-size-0.3.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-livereload/-/gulp-livereload-1.3.1.tgz\nnpm http GET https://registry.npmjs.org/wiredep/-/wiredep-1.4.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-0.4.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-size/-/gulp-size-0.3.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-livereload/-/gulp-livereload-1.3.1.tgz\nnpm http 200 https://registry.npmjs.org/wiredep/-/wiredep-1.4.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-uglify\nnpm http 200 https://registry.npmjs.org/opn/-/opn-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-useref\nnpm http GET https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-0.2.1.tgz\nnpm http 200 https://registry.npmjs.org/jshint-stylish\nnpm http 304 https://registry.npmjs.org/connect-livereload\nnpm ERR! notarget No compatible version found: connect-livereload@'>=0.4.0-0 <0.5.0-0'\nnpm ERR! notarget Valid install targets:\nnpm ERR! notarget [\"0.0.2\",\"0.0.3\",\"0.1.0\",\"0.1.1\",\"0.1.2\",\"0.1.3\",\"0.1.4\",\"0.2.0\",\"0.3.0\",\"0.3.1\",\"0.3.2\"]\nnpm ERR! notarget \nnpm ERR! notarget This is most likely not a problem with npm itself.\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\nnpm ERR! notarget a package version that doesn't exist.\nnpm ERR! System Darwin 13.1.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/KingScooty/Desktop/test\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.7\nnpm ERR! code ETARGET\nnpm http 200 https://registry.npmjs.org/gulp\nnpm http 200 https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/gulp-useref/-/gulp-useref-0.3.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-autoprefixer\nnpm http GET https://registry.npmjs.org/jshint-stylish/-/jshint-stylish-0.1.5.tgz\nnpm http 200 https://registry.npmjs.org/connect\nnpm http 200 https://registry.npmjs.org/gulp-bower-files\nnpm http 200 https://registry.npmjs.org/jshint-stylish/-/jshint-stylish-0.1.5.tgz\nnpm http GET https://registry.npmjs.org/gulp/-/gulp-3.6.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-0.0.6.tgz\nnpm http GET https://registry.npmjs.org/connect/-/connect-2.14.4.tgz\nnpm http GET https://registry.npmjs.org/gulp-bower-files/-/gulp-bower-files-0.2.2.tgz\nnpm http 200 https://registry.npmjs.org/gulp/-/gulp-3.6.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-0.0.6.tgz\nnpm http 200 https://registry.npmjs.org/connect/-/connect-2.14.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-useref/-/gulp-useref-0.3.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-bower-files/-/gulp-bower-files-0.2.2.tgz\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/KingScooty/Desktop/test/npm-debug.log\nnpm ERR! not ok code 0\napp/index.html modified.\n   invoke   mocha:app\n   create test/bower.json\n   create test/.bowerrc\n   create test/spec/test.js\n   create test/index.html\nI'm all done. Running bower install for you to install the required dependencies. If this fails, try running the command yourself.\n```\n. Nope, doesn't appear to be. :/ \nI've just updated the generator and created a new project without bootstrap but with sass and modernizr. Livereload doesn't seem to be working at all.\n. EXACTLY the same issue i'm having! I'm on a mac and it's still present. Using npm 1.4.7 too.\nI mentioned it at the bottom of https://github.com/yeoman/generator-gulp-webapp/issues/77\n. > I found it to be very powerful and very flexible. I have never used it with a single page app, but I would be willing to wire it up to a couple toy projects and share my notes with you.\n@austinpray That'd be great if you could do that! I'm currently in the process of looking through the docs to try and get it setup in a test pipeline, and would love to see some examples as a kick starter.\n. Also, quoting from https://github.com/mrtnbroder/gulp-reduce/issues/1\n\nAs much as I love seeing assetgraph being put to use, I have to agree with @sindresorhus. Assetgraph does not fit into the gulp paradigm as set out by the plugin guidelines.\nAssetgraph is in itself a data model that has to be kept intact in its entirety. This is why it has high level transforms that can make changes and take all the consequences into account. But this is also why it doesn't fit well with Gulp. It is not a single file type that can be streamed in the same way.\nFor all intents and purposes Assetgraph-builder completely replaces the need for Gulp when we are talking about the steps of going from development to production. It has similarities in that it only reads files once and does its work in memory, but apart from that the paradigms differ quite a lot.\n\nIn terms of the generator-gulp-webapp, would Assetgraph thus replace a lot of the core gulp functionality in this generator? Making it more of a generator-assetgraph-webapp instead of a gulp one? I'm trying to think why we'd need them in tandem.\n. I'm almost inclined to say keep it open to let the discussion flow further. I use gulp a lot in my pipeline currently, so i follow the issues/discussions on this generator often, but if Assetgraph can do a lot of the heavy lifting, perhaps we either look at another experimental generator or looking at using them in tandem? So gulp handles the edge cases that Assetgraph doesn't? \n. I read an interesting article yesterday that gave me a bit more perspective on the Gulp / Assetgraph partnership. \nThe goal would be to optimise the gulp workflow for speed, so cut out anything that isn't required for getting the dev files into the browser. Then we'd use Assetgraph to handle all of the real post processing and optimising during the deployment step.\n. I guess, but I'm talking optimisations, like minification, spriting etc. You wouldn't want those running during the watch task. So Assetgraph could pick these up in the build task just before deployment. Integration would pick up most issues (if there were issues at all) if you've got tests written.\n. Ah, i mean color, haha. Been in too many meetings with non-devs today - not in coding mode.\nI left Sass and Compass, and Modernizr enabled. Disabled Bootstrap.\n. Morning guys.\nSo i've cloned master and npm linked it. I then went into my project dir and re-ran the generator via yo. Updated all the necessary files.\nNow when i use gulp watch the browser looks like it's triggering after each save, but the styles aren't being loaded in. Not even when i manually refresh. A quick look in main.css shows that it's not being updated when main.scss is compiled.\nQuite bizarre. I'm going to start a new project from scratch with the generator to see if that remedies the situation. \n. Ah. Now i get this error when starting a new project with the generator:\n```\nnpm ERR! notarget No compatible version found: connect-livereload@'>=0.4.0-0 <0.5.0-0'\nnpm ERR! notarget Valid install targets:\nnpm ERR! notarget [\"0.0.2\",\"0.0.3\",\"0.1.0\",\"0.1.1\",\"0.1.2\",\"0.1.3\",\"0.1.4\",\"0.2.0\",\"0.3.0\",\"0.3.1\",\"0.3.2\"]\nnpm ERR! notarget \nnpm ERR! notarget This is most likely not a problem with npm itself.\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\nnpm ERR! notarget a package version that doesn't exist.\nnpm ERR! System Darwin 13.1.0\n```\n. Hmm. I reinstalled node via brew this morning, and nothing changed, but I've just done it again now, and connect-livereload installed fine. Perhaps it was due to attempting the above while on a Virgin train to London,  so connectivity issues may have had a part to play.\nEither way, i've gone from npm 1.4.3 to npm 1.4.7 and connect-livereload@0.4.0 is now installing properly.\nSubsequently, the livereload issue is now gone and saves are loading into the browser about 100-200ms later.\n. I've just started a new project using generator-gulp-webapp, and it's struggling to load in connect-livereload@0.4.0 again and failing.\nnpm WARN package.json frontend-build@0.0.0 No description\nnpm WARN package.json frontend-build@0.0.0 No repository field.\nnpm WARN package.json frontend-build@0.0.0 No README data\nnpm http GET https://registry.npmjs.org/connect-livereload\nnpm http 200 https://registry.npmjs.org/connect-livereload\nnpm ERR! Error: version not found: connect-livereload@0.4.0\nnpm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:826:12\nnpm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/fstream/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/sha/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-installed/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/npm-registry-client/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\nVery bizarre.\n. It works fine for any other version number, and any other package :/ It just seems to crash out on 0.4.0. \n. Here's a longer progress message to demonstrate. \n```\n[?] What would you like to do? Run the Gulp-webapp generator (0.0.6)\nMake sure you're in the directory you want to scaffold into.\nThis generator can also be run with: yo gulp-webapp\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nOut of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.\n[?] What more would you like? Sass, Modernizr\n   create gulpfile.js\n   create package.json\n   create .gitignore\n   create .gitattributes\n   create .bowerrc\n   create bower.json\n   create .jshintrc\n   create .editorconfig\n   create app/favicon.ico\n   create app/404.html\n   create app/robots.txt\n   create app/.htaccess\n   create app/styles/main.scss\n   create app/index.html\n   create app/scripts/main.js\nI'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\nnpm WARN package.json test@0.0.0 No description\nnpm WARN package.json test@0.0.0 No repository field.\nnpm WARN package.json test@0.0.0 No README data\nnpm http GET https://registry.npmjs.org/gulp-cache\nnpm http GET https://registry.npmjs.org/gulp-csso\nnpm http GET https://registry.npmjs.org/gulp-filter\nnpm http GET https://registry.npmjs.org/gulp-imagemin\nnpm http GET https://registry.npmjs.org/gulp-clean\nnpm http GET https://registry.npmjs.org/gulp-jshint\nnpm http GET https://registry.npmjs.org/gulp-flatten\nnpm http GET https://registry.npmjs.org/gulp-livereload\nbower jquery#~1.11.0            cached git://github.com/jquery/jquery.git#1.11.0\nbower jquery#~1.11.0          validate 1.11.0 against git://github.com/jquery/jquery.git#~1.11.0\nbower modernizr#~2.6.2          cached git://github.com/Modernizr/Modernizr.git#2.6.3\nbower modernizr#~2.6.2        validate 2.6.3 against git://github.com/Modernizr/Modernizr.git#~2.6.2\nbower modernizr#~2.6.2         install modernizr#2.6.3\nbower jquery#~1.11.0           install jquery#1.11.0\nmodernizr#2.6.3 app/bower_components/modernizr\njquery#1.11.0 app/bower_components/jquery\nnpm http GET https://registry.npmjs.org/gulp-load-plugins\nnpm http GET https://registry.npmjs.org/gulp-ruby-sass\nnpm http GET https://registry.npmjs.org/opn\nnpm http GET https://registry.npmjs.org/wiredep\nnpm http GET https://registry.npmjs.org/gulp-size\nnpm http GET https://registry.npmjs.org/gulp-uglify\nnpm http GET https://registry.npmjs.org/gulp-useref\nnpm http GET https://registry.npmjs.org/jshint-stylish\nnpm http GET https://registry.npmjs.org/connect\nnpm http GET https://registry.npmjs.org/gulp\nnpm http GET https://registry.npmjs.org/gulp-autoprefixer\nnpm http GET https://registry.npmjs.org/gulp-bower-files\nnpm http GET https://registry.npmjs.org/connect-livereload\nnpm http 200 https://registry.npmjs.org/gulp-imagemin\nnpm http GET https://registry.npmjs.org/gulp-imagemin/-/gulp-imagemin-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-imagemin/-/gulp-imagemin-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-cache\nnpm http 200 https://registry.npmjs.org/gulp-filter\nnpm http GET https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.1.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-filter/-/gulp-filter-0.4.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-csso\nnpm http 200 https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.1.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-csso/-/gulp-csso-0.2.7.tgz\nnpm http 200 https://registry.npmjs.org/gulp-clean\nnpm http GET https://registry.npmjs.org/gulp-clean/-/gulp-clean-0.2.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-jshint\nnpm http 200 https://registry.npmjs.org/gulp-csso/-/gulp-csso-0.2.7.tgz\nnpm http GET https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-1.5.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-clean/-/gulp-clean-0.2.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-1.5.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-flatten\nnpm http 200 https://registry.npmjs.org/opn\nnpm http GET https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.0.2.tgz\nnpm http GET https://registry.npmjs.org/opn/-/opn-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-load-plugins\nnpm http 200 https://registry.npmjs.org/gulp-filter/-/gulp-filter-0.4.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.0.2.tgz\nnpm http GET https://registry.npmjs.org/gulp-load-plugins/-/gulp-load-plugins-0.5.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-ruby-sass\nnpm http 200 https://registry.npmjs.org/gulp-size\nnpm http 200 https://registry.npmjs.org/gulp-livereload\nnpm http 200 https://registry.npmjs.org/wiredep\nnpm http 200 https://registry.npmjs.org/gulp-load-plugins/-/gulp-load-plugins-0.5.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-0.4.3.tgz\nnpm http GET https://registry.npmjs.org/gulp-size/-/gulp-size-0.3.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-livereload/-/gulp-livereload-1.3.1.tgz\nnpm http GET https://registry.npmjs.org/wiredep/-/wiredep-1.4.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-0.4.3.tgz\nnpm http 200 https://registry.npmjs.org/gulp-size/-/gulp-size-0.3.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-livereload/-/gulp-livereload-1.3.1.tgz\nnpm http 200 https://registry.npmjs.org/wiredep/-/wiredep-1.4.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-uglify\nnpm http 200 https://registry.npmjs.org/opn/-/opn-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-useref\nnpm http GET https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-0.2.1.tgz\nnpm http 200 https://registry.npmjs.org/jshint-stylish\nnpm http 304 https://registry.npmjs.org/connect-livereload\nnpm ERR! notarget No compatible version found: connect-livereload@'>=0.4.0-0 <0.5.0-0'\nnpm ERR! notarget Valid install targets:\nnpm ERR! notarget [\"0.0.2\",\"0.0.3\",\"0.1.0\",\"0.1.1\",\"0.1.2\",\"0.1.3\",\"0.1.4\",\"0.2.0\",\"0.3.0\",\"0.3.1\",\"0.3.2\"]\nnpm ERR! notarget \nnpm ERR! notarget This is most likely not a problem with npm itself.\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\nnpm ERR! notarget a package version that doesn't exist.\nnpm ERR! System Darwin 13.1.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/KingScooty/Desktop/test\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.7\nnpm ERR! code ETARGET\nnpm http 200 https://registry.npmjs.org/gulp\nnpm http 200 https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/gulp-useref/-/gulp-useref-0.3.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-autoprefixer\nnpm http GET https://registry.npmjs.org/jshint-stylish/-/jshint-stylish-0.1.5.tgz\nnpm http 200 https://registry.npmjs.org/connect\nnpm http 200 https://registry.npmjs.org/gulp-bower-files\nnpm http 200 https://registry.npmjs.org/jshint-stylish/-/jshint-stylish-0.1.5.tgz\nnpm http GET https://registry.npmjs.org/gulp/-/gulp-3.6.0.tgz\nnpm http GET https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-0.0.6.tgz\nnpm http GET https://registry.npmjs.org/connect/-/connect-2.14.4.tgz\nnpm http GET https://registry.npmjs.org/gulp-bower-files/-/gulp-bower-files-0.2.2.tgz\nnpm http 200 https://registry.npmjs.org/gulp/-/gulp-3.6.0.tgz\nnpm http 200 https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-0.0.6.tgz\nnpm http 200 https://registry.npmjs.org/connect/-/connect-2.14.4.tgz\nnpm http 200 https://registry.npmjs.org/gulp-useref/-/gulp-useref-0.3.1.tgz\nnpm http 200 https://registry.npmjs.org/gulp-bower-files/-/gulp-bower-files-0.2.2.tgz\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/KingScooty/Desktop/test/npm-debug.log\nnpm ERR! not ok code 0\napp/index.html modified.\n   invoke   mocha:app\n   create test/bower.json\n   create test/.bowerrc\n   create test/spec/test.js\n   create test/index.html\nI'm all done. Running bower install for you to install the required dependencies. If this fails, try running the command yourself.\n```\n. Nope, doesn't appear to be. :/ \nI've just updated the generator and created a new project without bootstrap but with sass and modernizr. Livereload doesn't seem to be working at all.\n. EXACTLY the same issue i'm having! I'm on a mac and it's still present. Using npm 1.4.7 too.\nI mentioned it at the bottom of https://github.com/yeoman/generator-gulp-webapp/issues/77\n. > I found it to be very powerful and very flexible. I have never used it with a single page app, but I would be willing to wire it up to a couple toy projects and share my notes with you.\n@austinpray That'd be great if you could do that! I'm currently in the process of looking through the docs to try and get it setup in a test pipeline, and would love to see some examples as a kick starter.\n. Also, quoting from https://github.com/mrtnbroder/gulp-reduce/issues/1\n\nAs much as I love seeing assetgraph being put to use, I have to agree with @sindresorhus. Assetgraph does not fit into the gulp paradigm as set out by the plugin guidelines.\nAssetgraph is in itself a data model that has to be kept intact in its entirety. This is why it has high level transforms that can make changes and take all the consequences into account. But this is also why it doesn't fit well with Gulp. It is not a single file type that can be streamed in the same way.\nFor all intents and purposes Assetgraph-builder completely replaces the need for Gulp when we are talking about the steps of going from development to production. It has similarities in that it only reads files once and does its work in memory, but apart from that the paradigms differ quite a lot.\n\nIn terms of the generator-gulp-webapp, would Assetgraph thus replace a lot of the core gulp functionality in this generator? Making it more of a generator-assetgraph-webapp instead of a gulp one? I'm trying to think why we'd need them in tandem.\n. I'm almost inclined to say keep it open to let the discussion flow further. I use gulp a lot in my pipeline currently, so i follow the issues/discussions on this generator often, but if Assetgraph can do a lot of the heavy lifting, perhaps we either look at another experimental generator or looking at using them in tandem? So gulp handles the edge cases that Assetgraph doesn't? \n. I read an interesting article yesterday that gave me a bit more perspective on the Gulp / Assetgraph partnership. \nThe goal would be to optimise the gulp workflow for speed, so cut out anything that isn't required for getting the dev files into the browser. Then we'd use Assetgraph to handle all of the real post processing and optimising during the deployment step.\n. I guess, but I'm talking optimisations, like minification, spriting etc. You wouldn't want those running during the watch task. So Assetgraph could pick these up in the build task just before deployment. Integration would pick up most issues (if there were issues at all) if you've got tests written.\n. ",
    "levito": "This problem shouldn't exist anymore in master. Three pull requests addressed this: #56 by me, #65 by @jcsrb (who did the same but got merged :)), and #73 by you, @silvenon: Before the fix, changes to scss files triggered the live-reload too early, now changes to the compiled css trigger it.\n. Adding a template language should be a very common need. But which templating language to choose is a very individual thing. Maybe we should add gulp-consolidate and a lightweight templating language as starting point.\n. This problem shouldn't exist anymore in master. Three pull requests addressed this: #56 by me, #65 by @jcsrb (who did the same but got merged :)), and #73 by you, @silvenon: Before the fix, changes to scss files triggered the live-reload too early, now changes to the compiled css trigger it.\n. Adding a template language should be a very common need. But which templating language to choose is a very individual thing. Maybe we should add gulp-consolidate and a lightweight templating language as starting point.\n. ",
    "e-oz": "@addyosmani actually generator-gulpfile only generates 'jshint' and 'server' tasks, without 'build' task, so I don't see how it can be used out-of-box.\n. @addyosmani actually generator-gulpfile only generates 'jshint' and 'server' tasks, without 'build' task, so I don't see how it can be used out-of-box.\n. ",
    "kvpt": "I had the same problem with livereload package, upgrade npm to 1.4.7 solve the problem.\nThe lastest versions for windows can be found here : http://nodejs.org/dist/npm/\n. This seems to be a bug in npm on windows, i tried this command on windows and linux and the  command succeed only on linux.\nSo I done that manually.\nI downloaded the latest version on http://nodejs.org/dist/npm/ then extracted it in the nodejs folder to overwrite npm file.\nAfter that npm -v returned the latest version.\n. Strange, this solved the problem for me.\nTry to clear npm cache by npm cache clean\nAlso you can try explicit install of the package by npm install connect-livereload\n. I had the same problem with livereload package, upgrade npm to 1.4.7 solve the problem.\nThe lastest versions for windows can be found here : http://nodejs.org/dist/npm/\n. This seems to be a bug in npm on windows, i tried this command on windows and linux and the  command succeed only on linux.\nSo I done that manually.\nI downloaded the latest version on http://nodejs.org/dist/npm/ then extracted it in the nodejs folder to overwrite npm file.\nAfter that npm -v returned the latest version.\n. Strange, this solved the problem for me.\nTry to clear npm cache by npm cache clean\nAlso you can try explicit install of the package by npm install connect-livereload\n. ",
    "iamali": "Cheers - I'm trying to update npm but I can't figure it out. I have version 1.4.3 at the mo.\nSo far I've tried:\nnpm install 1.4.7 -g\nnpm install n -g\nnpm update npm\nnpm update -g npm\nand downloading the zip file & running npm install -g C:\\Users\\usernamehere\\Desktop\\npm-1.4.7\\node_modules\\npm\nwith no luck. Any ideas? Thanks!\n. Ah brill, on 1.4.7 now, thanks. The bug is still there though! Maybe it's a windows thing?\n. No luck with either of those. Tried running npm install connect-livereload after it failed, along with npm install & it gets to the end of the install process but when you run gulp serve, it serves the site without the styles.\nIt's quite intermittent too - I'll run yo gulp-webapp with all 3 prompts as true & it'll work, then I'll run it again with the same & it'll fail, then again & it'll work, really strange!\n. Cheers - I'm trying to update npm but I can't figure it out. I have version 1.4.3 at the mo.\nSo far I've tried:\nnpm install 1.4.7 -g\nnpm install n -g\nnpm update npm\nnpm update -g npm\nand downloading the zip file & running npm install -g C:\\Users\\usernamehere\\Desktop\\npm-1.4.7\\node_modules\\npm\nwith no luck. Any ideas? Thanks!\n. Ah brill, on 1.4.7 now, thanks. The bug is still there though! Maybe it's a windows thing?\n. No luck with either of those. Tried running npm install connect-livereload after it failed, along with npm install & it gets to the end of the install process but when you run gulp serve, it serves the site without the styles.\nIt's quite intermittent too - I'll run yo gulp-webapp with all 3 prompts as true & it'll work, then I'll run it again with the same & it'll fail, then again & it'll work, really strange!\n. ",
    "josephfinlayson": "using an out of date version of node\n. using an out of date version of node\n. ",
    "vohof": "I'm experiencing this as well. I tried to npm link a clone of this repo and rerun yo gulp-webapp. I think it might be the order of the imports made by wiredep. \nhere's the full log.\n- Sass 3.3.5 (Maptastic Maple)\nI replaced them with this temporarily, which works:\nsass\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss\";\n. generator-gulp-webapp@0.0.8 still depends on gulp-useref@^0.3.1 which depends on useref@^0.2.0 which as been unpublished and renamed into node-useref which arrives to this error:\n6573 silly addNameRange number 2 { name: 'useref', range: '>=0.2.0-0 <0.3.0-0', hasData: true }\n6574 silly addNameRange versions [ 'useref', [] ]\n6575 error TypeError: Cannot read property 'latest' of undefined\nThe best thing you can do is clone this repo and do an npm link and rerun yo gulp-webapp or just update your package.json until they have published a newer version into npm.\n. what is a yo?\n. I'm experiencing this as well. I tried to npm link a clone of this repo and rerun yo gulp-webapp. I think it might be the order of the imports made by wiredep. \nhere's the full log.\n- Sass 3.3.5 (Maptastic Maple)\nI replaced them with this temporarily, which works:\nsass\n@import \"../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss\";\n. generator-gulp-webapp@0.0.8 still depends on gulp-useref@^0.3.1 which depends on useref@^0.2.0 which as been unpublished and renamed into node-useref which arrives to this error:\n6573 silly addNameRange number 2 { name: 'useref', range: '>=0.2.0-0 <0.3.0-0', hasData: true }\n6574 silly addNameRange versions [ 'useref', [] ]\n6575 error TypeError: Cannot read property 'latest' of undefined\nThe best thing you can do is clone this repo and do an npm link and rerun yo gulp-webapp or just update your package.json until they have published a newer version into npm.\n. what is a yo?\n. ",
    "andrantis": "It wasn't working for me either. I ran this:\nbower uninstall --save bootstrap-sass\nbower install --save bootstrap-sass-official#3.1.1\nand then run gulp wiredep and gulp watch\nAnd now it's working fine.\n. It wasn't working for me either. I ran this:\nbower uninstall --save bootstrap-sass\nbower install --save bootstrap-sass-official#3.1.1\nand then run gulp wiredep and gulp watch\nAnd now it's working fine.\n. ",
    "mocon": "@andrantis thanks!\n. @andrantis thanks!\n. ",
    "glebm": "How are you using main? Import resolution is normally dealt within sass, and this file is not being imported in bootstrap.scss by default.\n. bootstrap-sass makes sure the order of individual .js files in bower.json main is correct\n. How are you using main? Import resolution is normally dealt within sass, and this file is not being imported in bootstrap.scss by default.\n. bootstrap-sass makes sure the order of individual .js files in bower.json main is correct\n. ",
    "cmbaughman": "That's actually what I wanted to do but thought I should keep it as close to what was there before since this is the first time I've used this. \nSent using CloudMagic \nOn Mon, Apr 21, 2014 at 5:32 PM, Matija Marohni\u0107 notifications@github.com wrote:Thanks. This definitely needs some cleanup. I think the simplest way is to put only bootstrap.scss, all those other stuff are unnecessary. But I'm totally open to suggestions here, maybe we can use this new structure to our benefit somehow...\n\u2014Reply to this email directly or view it on GitHub.\n. That's actually what I wanted to do but thought I should keep it as close to what was there before since this is the first time I've used this. \nSent using CloudMagic \nOn Mon, Apr 21, 2014 at 5:32 PM, Matija Marohni\u0107 notifications@github.com wrote:Thanks. This definitely needs some cleanup. I think the simplest way is to put only bootstrap.scss, all those other stuff are unnecessary. But I'm totally open to suggestions here, maybe we can use this new structure to our benefit somehow...\n\u2014Reply to this email directly or view it on GitHub.\n. ",
    "cmartinbaughman": "Cool that works!\n. Cool that works!\n. ",
    "xmlking": "@silvenon bower approach works like a charm. wiredep makes me even lazy. :)\nOnly correction is, we have to use Bourbon 3.2.x  with install --save bourbon#3.2.1 as generator-gulp-webapp's Sass version is  3.2.19.\nI was able to cleanup my verbose angular animations css file by adopting SASS and bourbon mixins as described below. \nhttp://robots.thoughtbot.com/animating-modals-in-angular-js\n. My bad. I installed sudo gem install compass instead of sudo gem install sass\ncompass had hard dependency on sass 3.2.19.  After removing compass and reinstalling  sass, I can use latest Bourbon 4.0.1. \n. .tmp directory is like development time working  directory which holds the compiled ES6 files , CSS, jade templates etc. dist directory is filled with final production ready artifacts (minify , uglify) generated with build step. app will have all my source files that go into GitHub.  --- this model works for me.\n. Looks like  gulp-filter  has problem with Gulp 3.8.x. After commenting our filter pipe, build step runs without above error. \njs\ngulp.task('fonts', function () {\n    var streamqueue = require('streamqueue');\n    return streamqueue({objectMode: true},\n        $.bowerFiles(),\n        gulp.src('app/fonts/**/*')\n    )\n//        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\nAs a workaround  I am using gulp-grep-stream in place of gulp-filter which is working fine with build step with Gulp 3.8.x Env. \njs\ngulp.task('fonts', function () {\n    var streamqueue = require('streamqueue');\n    var grep = require('gulp-grep-stream');\n    return streamqueue({objectMode: true},\n        $.bowerFiles(),\n        gulp.src('app/fonts/**/*')\n    )\n//        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe(grep('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\n. still same issue with latest gulp-filter & Gulp 3.8.6.   gulp-grep-stream  works but now with gulp-filter. \njs\ngulp.task('fonts', function () {\n    var grep = require('gulp-grep-stream');\n    return gulp.src(require('main-bower-files')().concat('app/fonts/**/*'))\n        //.pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe(grep('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\n. I am getting all js, scss, font files in dest/fonts . \nMy environment to reproduce this:  https://github.com/xmlking/spa-starter-kit/blob/master/tasks/fonts.js\n. @silvenon bower approach works like a charm. wiredep makes me even lazy. :)\nOnly correction is, we have to use Bourbon 3.2.x  with install --save bourbon#3.2.1 as generator-gulp-webapp's Sass version is  3.2.19.\nI was able to cleanup my verbose angular animations css file by adopting SASS and bourbon mixins as described below. \nhttp://robots.thoughtbot.com/animating-modals-in-angular-js\n. My bad. I installed sudo gem install compass instead of sudo gem install sass\ncompass had hard dependency on sass 3.2.19.  After removing compass and reinstalling  sass, I can use latest Bourbon 4.0.1. \n. .tmp directory is like development time working  directory which holds the compiled ES6 files , CSS, jade templates etc. dist directory is filled with final production ready artifacts (minify , uglify) generated with build step. app will have all my source files that go into GitHub.  --- this model works for me.\n. Looks like  gulp-filter  has problem with Gulp 3.8.x. After commenting our filter pipe, build step runs without above error. \njs\ngulp.task('fonts', function () {\n    var streamqueue = require('streamqueue');\n    return streamqueue({objectMode: true},\n        $.bowerFiles(),\n        gulp.src('app/fonts/**/*')\n    )\n//        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\nAs a workaround  I am using gulp-grep-stream in place of gulp-filter which is working fine with build step with Gulp 3.8.x Env. \njs\ngulp.task('fonts', function () {\n    var streamqueue = require('streamqueue');\n    var grep = require('gulp-grep-stream');\n    return streamqueue({objectMode: true},\n        $.bowerFiles(),\n        gulp.src('app/fonts/**/*')\n    )\n//        .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe(grep('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\n. still same issue with latest gulp-filter & Gulp 3.8.6.   gulp-grep-stream  works but now with gulp-filter. \njs\ngulp.task('fonts', function () {\n    var grep = require('gulp-grep-stream');\n    return gulp.src(require('main-bower-files')().concat('app/fonts/**/*'))\n        //.pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n        .pipe(grep('**/*.{eot,svg,ttf,woff}'))\n        .pipe($.flatten())\n        .pipe(gulp.dest('dist/fonts'));\n});\n. I am getting all js, scss, font files in dest/fonts . \nMy environment to reproduce this:  https://github.com/xmlking/spa-starter-kit/blob/master/tasks/fonts.js\n. ",
    "dmitriz": "This is (sadly) one of the few setups I get from yeoman that is not broken and I would like to understand better how the generated gulpfile is organized. For instance:\n- Why livereload isn't (seemingly) working and what needs to be done to activate it?\n- What is the reason to use connect instead of express (as most tutorials seem to)?\n- Any breakdown on the main tasks this gulpfile defines and their main functions, and usage examples?\n. Thanks for the references! Love the use of 'opn'!\nI've found this great tutorial for setting up livereload (without browser extension, thanks god :)\nhttp://rhumaric.com/2014/01/livereload-magic-gulp-style/\n. Yes, no problem, thanks!\n. This is (sadly) one of the few setups I get from yeoman that is not broken and I would like to understand better how the generated gulpfile is organized. For instance:\n- Why livereload isn't (seemingly) working and what needs to be done to activate it?\n- What is the reason to use connect instead of express (as most tutorials seem to)?\n- Any breakdown on the main tasks this gulpfile defines and their main functions, and usage examples?\n. Thanks for the references! Love the use of 'opn'!\nI've found this great tutorial for setting up livereload (without browser extension, thanks god :)\nhttp://rhumaric.com/2014/01/livereload-magic-gulp-style/\n. Yes, no problem, thanks!\n. ",
    "hectron": "Hi silvenon,\nI am running Mac OS X 10.9.2 and used Brew to install Node & NPM. I selected no options, and just waited for the install to finish. Once all activity stopped in the terminal, I pressed the left key on my keyboard and received the error.\nHere's an updated log file: https://gist.github.com/hectron/11347209#file-console-log\n. silvenon,\nI updated my brew, reinstalled Node & updated npm afterward. Still got the same problem. Then I installed Bower globally, and the error seemed to have been taken care of.\nThanks for the tips! Perhaps this can make it into the documentation?\n. Hi silvenon,\nI am running Mac OS X 10.9.2 and used Brew to install Node & NPM. I selected no options, and just waited for the install to finish. Once all activity stopped in the terminal, I pressed the left key on my keyboard and received the error.\nHere's an updated log file: https://gist.github.com/hectron/11347209#file-console-log\n. silvenon,\nI updated my brew, reinstalled Node & updated npm afterward. Still got the same problem. Then I installed Bower globally, and the error seemed to have been taken care of.\nThanks for the tips! Perhaps this can make it into the documentation?\n. ",
    "fusionstrings": "I am also facing the same issue.\n. I am also facing the same issue.\n. ",
    "delebash": "Same problem, but you can manually install them gulp-util, through2, up to 'useref' which fails but if you use 'gulp-useref' it works and seems to be running just fine so far.\n. @stephenplusplus \nI am using gulp-webapp vers 0.1.0\nI actually did remove the bootstrap and modernizer js files from the generated index.html and reran gulp but it did not add the files back as expected.  If you just run gulp wiredep is not even firing, it looks like in the config fire wiredep fires if you use watch but not build. Shouldn't it fire for both.\nAlso manually running wiredep via just a node prompt using the appropriate paths still does not reinject all of the bower dependencies\nThanks for the response,\nDan\n. thanks for your help, that +2 must have caused the error.\n. Same problem, but you can manually install them gulp-util, through2, up to 'useref' which fails but if you use 'gulp-useref' it works and seems to be running just fine so far.\n. @stephenplusplus \nI am using gulp-webapp vers 0.1.0\nI actually did remove the bootstrap and modernizer js files from the generated index.html and reran gulp but it did not add the files back as expected.  If you just run gulp wiredep is not even firing, it looks like in the config fire wiredep fires if you use watch but not build. Shouldn't it fire for both.\nAlso manually running wiredep via just a node prompt using the appropriate paths still does not reinject all of the bower dependencies\nThanks for the response,\nDan\n. thanks for your help, that +2 must have caused the error.\n. ",
    "hwaal": "Just wasted 5 hours of my life, but the problem was that there was already an app running on the same port... Googled \"listen EADDRINUSE\"\n. Just wasted 5 hours of my life, but the problem was that there was already an app running on the same port... Googled \"listen EADDRINUSE\"\n. ",
    "swashcap": "I\u2019m no Node pro, but after poking around it looks like the generator copies files from /app/templates/. A simple find-replace for / {4}/g to two spaces before copying seems like it would work?\n. Ahh. wiredep. I\u2019m guessing https://github.com/yeoman/generator-gulp-webapp/blob/884b2877ed02b545c280b22c296c64da5bd5a7a0/app/index.js#L214-L233 didn\u2019t run for whatever reason. Running gulp wiredep fixed the issue. I was unable to reproduce this bug with a fresh Gulp Webapp install.\n. I\u2019m no Node pro, but after poking around it looks like the generator copies files from /app/templates/. A simple find-replace for / {4}/g to two spaces before copying seems like it would work?\n. Ahh. wiredep. I\u2019m guessing https://github.com/yeoman/generator-gulp-webapp/blob/884b2877ed02b545c280b22c296c64da5bd5a7a0/app/index.js#L214-L233 didn\u2019t run for whatever reason. Running gulp wiredep fixed the issue. I was unable to reproduce this bug with a fresh Gulp Webapp install.\n. ",
    "maggialejandro": "I tried but It continues deleting the dist folder \n. That works! thanks\n. I tried but It continues deleting the dist folder \n. That works! thanks\n. ",
    "TonyStark": "@maggialejandro \njs\ngulp.task('clean', function () {\n    return gulp.src(['.tmp', 'dist/**/*', '!dist/.git'], { read: false }).pipe(clean());\n    });\n. @maggialejandro \njs\ngulp.task('clean', function () {\n    return gulp.src(['.tmp', 'dist/**/*', '!dist/.git'], { read: false }).pipe(clean());\n    });\n. ",
    "contra": "@sindresorhus gulp-if + lazypipe might be a good solution there, but gulp-filter does have its use cases for sure\n. https://github.com/robrich/gulp-if/issues/29\n. The plugin should be agnostic to the actual store, just like vinyl. Adding it to the end of each task is not super DRY, would be interested in figuring out a cool way to do something to fix that.\n. @sindresorhus gulp-if + lazypipe might be a good solution there, but gulp-filter does have its use cases for sure\n. https://github.com/robrich/gulp-if/issues/29\n. The plugin should be agnostic to the actual store, just like vinyl. Adding it to the end of each task is not super DRY, would be interested in figuring out a cool way to do something to fix that.\n. ",
    "arthurvr": "\nI tried, but didn't manage to get it working. How about Karma?\n\nJust tried to integrate it and it's a PITA. I'm also +1 for Mocha though. \n. I agree with @silvenon that it's hard to explain a generator. People should just look at the code it's generating. Maybe we should just link up some worth to read resources/tutorials?\n. Is there a reason this is still open? The landing page is finished right?\n. > Ok, the URL has to be http://yeoman.io/generator-gulp-webapp/\nSince other generator probably want landing pages too, isn't /generator/gulp-webapp/ a better choice?\nSide: in our generators list we probably want to link up that landing page, and not the github repo.\n. > This seems to be solved few month ago but I'm getting the same DEPRECATED error:\n@ernesto-Valdes Because we didn't released yet. No worries, we will: https://github.com/yeoman/generator-gulp-webapp/issues/193\n. :+1: \n. > Yup, as soon as #194 is merged. Just haven't had the time to review it.\n@sindresorhus Now it is merged, time to release ;-)\n. Oh yeah. Thanks guys! :beers:\n. > Agreed. This is something that has been brought up in team meetings. We are still working on a resolution.\n@eddiemonge Any progress in here?\n. I just opened a PR: #262, if people want the h5bp server configs they should just use generator-server-configs.\n. > but this can really only happen once gulp-sass and node-sass are shipping with the latest version of libsass.\nBoth are updated. Maybe we should reopen this discussion?\n. To come back on this: this seems like a feature request coming back frequently. (in https://github.com/yeoman/generator-gulp-webapp/issues/54 too.) Maybe it's an idea for a recipe? \n. > is it really that complicated that it needs a recipe?\nFor many people it's not complicated indeed. For others it might be. For me it looks the best idea to give people the option, and show them the possibility exists. It's a request coming back frequently, so.\nDon't worry, I'il write it if you want.\n. Agreed. Later, maybe.\n. @kevva Indeed. It should.\nThe issue where the bootstrap readme is linking to is closed by the way.\n. What about just including a follow-up question when the user chooses Sass? Setting ruby sass as the default, but giving people the choice.\n. @kevva now they know: https://github.com/twbs/bootstrap-sass/issues/780\n. > This could break a lot of bower deps though.\nThe upcoming times, I think many packages and libraries will fix the compatibility. Also libsass will stay improving.\n. Probably time to re-open this issue.\n. Why were the tests failing for this PR? \n. :+1:\n. To close this in favor of #253?\n. Using a good html minifier you shouldn't have whitespace issues. And the last years I didn't had any issues with whitespace. So, +1 for minifying html. I would use https://github.com/jonathanepollack/gulp-minify-html for this.\n. > Maybe we could set \"devel\": true?\nNah. I don't think this is a really good idea, nobody wants console or debugger statements to end up on their live site. And by enabling this option, you might risk that.\n. Not huge of an issue anyway. People aren't expected to leave that console.log in. In fact, I would opt to let it fail this way. It's a reminder that they need to remove it. \n. Just wondering, but is there a serieus reason that console.log is included?\n. +1. Good solution. Do I open a PR?\n. I remember having the same issue once.\n. I don't if I had a .yo-rc then... Just tested and working for me. You can close the issue.\n. I don't like sass linting, but let's do it optional.\n. Looks really good, thanks @silvenon!\n. This was fixed, actually: https://github.com/yeoman/generator/issues/717\n. He talks about Compass, the Sass library. This can be closed down IMHO, compass is ruby-sass only, and we switched to libsass: https://github.com/yeoman/generator-gulp-webapp/pull/247. \nThe new version didn't removed it, but in gulp-ruby-sass there was an option compass you could set to use compass.\n. Looks like test were already failing on master.\n. Again, no idea why tests are failing for this one.\n. I must say I'm against dropping libsass too.\n. NPM has the latest version, the github repo has the newest stuff (master). The next version will have libsass and browsersync.\n. Thanks @silvenon!\n. Yay! Thanks @silvenon!\n. I can PR this for generator-webapp too.\n. @silvenon That was the image I was given for https://github.com/yeoman/generator-mobile/issues/56. I shall update it but actually wonder if it makes sense. It's a placeholder, you know.\n. @silvenon done\n. @al-the-x ping ;)\n. Awesome! Congrats!\n. > I'd like to continue with this then, so @hivre, when you have time, please address my 2 questions.\nping @hivre :)\n. ping @hivre - also needs a rebase :) \n. We already have an issue about that, or am I wrong? https://github.com/yeoman/generator-gulp-webapp/issues/284\n. > Though we will consider adding jscs with the --fix flag.\nThought so, :+1:. Am I totally wrong or do we already have an open issue about that: https://github.com/yeoman/generator-gulp-webapp/issues/284 ?\n\nThe jscs tool just barks at messy code like a linter might; it doesn't correct anything. Instead, js-beautifier will output a modified version of the code with certain rules applied...\n\nAs mentioned by Sindre above, jscs does that as well ;)\n. Just to make sure, can you try bower install and then try gulp serve again? When scaffolding, did the installation run fine?\n. Closing due to inactivity. If you come back and can answer our questions feel free to reopen.\n. :+1: Just wondering, did we ever have plans when to release a 1.0?\n. :+1: Awesome!\n. :tada: Woohooo :tada: \n. Is this an option everybody's happy with? I'll start to say that I'm :+1:.\n. We switched to ESLint: https://github.com/yeoman/generator-gulp-webapp/commit/3cafe814124b1926dab77ccc8257b688c0c4c8ff.\n. @sindresorhus should we have that in the release notes?\n. I like this. :+1: \nAlthough, shouldn't this be on yeoman.io instead of it being in one generators contributing.md?\n. The Yeoman IRC channel on freenode is another nice place for support.\n. sup with the CI?\n. Thanks.\n. Mind elaborating? We do not have (and do not need) a js task.\n. Please don't use the bug tracker for support questions. Use Stack Overflow instead. Paste the link to your question in here so others can follow ;)\n. @WXLWEB We do have jQuery out of the box if you want that but it's optional and you should be on the latest version of the generator.\n. > It would help if you tell us which options you selected and what does your web inspector console say.\nPing @WXLWEB - can you give us the information we need?\n. Meaning we can close the issue? Do you have any idea why the wiredep task didn't run?\n. It's a new feature introduced in Gulp 3.9. You just need the latest Gulp version installed on your system as mentioned in the release notes.\n$ npm install -g gulp\n. @silvenon it might also be worth mentioning that Babel isn't supported on node 0.10.\n. Glad to hear it's fixed!\n. For gulp-webapp to be made Jekyll compatible there are quite a few things that would need to happen. I personally believe this is a way better fit for a separate generator as the recipe would be complicated and maybe difficult to maintain.\n\nI have tried other Jekyll generator but I think it will be great if there is Jekyll recipe for gulp-webapp.\n\nWhy? What was wrong with the jekyll generator and why wouldn't you just improve that generator?\n. > running npm install --save-dev gulp-imagemin and then npm install --save-dev gulp-useref fixed the issue but does anyone know what causes this issue?\nThose dependencies are in the scaffolded package.json so you probably just had an installation problem. I'm glad it's fixed now :)\n. There isn't a super easy way to update. The best way is probably to go through the release notes and see what changes are of value to you and apply those updates yourself (that's going to be in more files than package.json).\n. Actually you can run yo gulp-webapp again and skip the files that contain things you modified but you'll need to fix a bunch of conflicts (definitely if you're still on 0.3).\n. Can you please describe the issues you're dealing with?\n. :+1: \n. Simply because this generator doesn't support Babel (yet): https://github.com/yeoman/generator-gulp-webapp/issues/348.\n. Honestly I just think we shouldn't do this change to the gulpfile and just recommend people to use those editor plugins.\n. Just wondering, which editors don't have support for ESLint yet? I guess that's pretty rare or am I wrong?\n. Hmm, we still have a draf release in October but I wonder why we never released it. Maybe @silvenon remembers?\n. > I tried, but didn't manage to get it working. How about Karma?\nJust tried to integrate it and it's a PITA. I'm also +1 for Mocha though. \n. I agree with @silvenon that it's hard to explain a generator. People should just look at the code it's generating. Maybe we should just link up some worth to read resources/tutorials?\n. Is there a reason this is still open? The landing page is finished right?\n. > Ok, the URL has to be http://yeoman.io/generator-gulp-webapp/\nSince other generator probably want landing pages too, isn't /generator/gulp-webapp/ a better choice?\nSide: in our generators list we probably want to link up that landing page, and not the github repo.\n. > This seems to be solved few month ago but I'm getting the same DEPRECATED error:\n@ernesto-Valdes Because we didn't released yet. No worries, we will: https://github.com/yeoman/generator-gulp-webapp/issues/193\n. :+1: \n. > Yup, as soon as #194 is merged. Just haven't had the time to review it.\n@sindresorhus Now it is merged, time to release ;-)\n. Oh yeah. Thanks guys! :beers:\n. > Agreed. This is something that has been brought up in team meetings. We are still working on a resolution.\n@eddiemonge Any progress in here?\n. I just opened a PR: #262, if people want the h5bp server configs they should just use generator-server-configs.\n. > but this can really only happen once gulp-sass and node-sass are shipping with the latest version of libsass.\nBoth are updated. Maybe we should reopen this discussion?\n. To come back on this: this seems like a feature request coming back frequently. (in https://github.com/yeoman/generator-gulp-webapp/issues/54 too.) Maybe it's an idea for a recipe? \n. > is it really that complicated that it needs a recipe?\nFor many people it's not complicated indeed. For others it might be. For me it looks the best idea to give people the option, and show them the possibility exists. It's a request coming back frequently, so.\nDon't worry, I'il write it if you want.\n. Agreed. Later, maybe.\n. @kevva Indeed. It should.\nThe issue where the bootstrap readme is linking to is closed by the way.\n. What about just including a follow-up question when the user chooses Sass? Setting ruby sass as the default, but giving people the choice.\n. @kevva now they know: https://github.com/twbs/bootstrap-sass/issues/780\n. > This could break a lot of bower deps though.\nThe upcoming times, I think many packages and libraries will fix the compatibility. Also libsass will stay improving.\n. Probably time to re-open this issue.\n. Why were the tests failing for this PR? \n. :+1:\n. To close this in favor of #253?\n. Using a good html minifier you shouldn't have whitespace issues. And the last years I didn't had any issues with whitespace. So, +1 for minifying html. I would use https://github.com/jonathanepollack/gulp-minify-html for this.\n. > Maybe we could set \"devel\": true?\nNah. I don't think this is a really good idea, nobody wants console or debugger statements to end up on their live site. And by enabling this option, you might risk that.\n. Not huge of an issue anyway. People aren't expected to leave that console.log in. In fact, I would opt to let it fail this way. It's a reminder that they need to remove it. \n. Just wondering, but is there a serieus reason that console.log is included?\n. +1. Good solution. Do I open a PR?\n. I remember having the same issue once.\n. I don't if I had a .yo-rc then... Just tested and working for me. You can close the issue.\n. I don't like sass linting, but let's do it optional.\n. Looks really good, thanks @silvenon!\n. This was fixed, actually: https://github.com/yeoman/generator/issues/717\n. He talks about Compass, the Sass library. This can be closed down IMHO, compass is ruby-sass only, and we switched to libsass: https://github.com/yeoman/generator-gulp-webapp/pull/247. \nThe new version didn't removed it, but in gulp-ruby-sass there was an option compass you could set to use compass.\n. Looks like test were already failing on master.\n. Again, no idea why tests are failing for this one.\n. I must say I'm against dropping libsass too.\n. NPM has the latest version, the github repo has the newest stuff (master). The next version will have libsass and browsersync.\n. Thanks @silvenon!\n. Yay! Thanks @silvenon!\n. I can PR this for generator-webapp too.\n. @silvenon That was the image I was given for https://github.com/yeoman/generator-mobile/issues/56. I shall update it but actually wonder if it makes sense. It's a placeholder, you know.\n. @silvenon done\n. @al-the-x ping ;)\n. Awesome! Congrats!\n. > I'd like to continue with this then, so @hivre, when you have time, please address my 2 questions.\nping @hivre :)\n. ping @hivre - also needs a rebase :) \n. We already have an issue about that, or am I wrong? https://github.com/yeoman/generator-gulp-webapp/issues/284\n. > Though we will consider adding jscs with the --fix flag.\nThought so, :+1:. Am I totally wrong or do we already have an open issue about that: https://github.com/yeoman/generator-gulp-webapp/issues/284 ?\n\nThe jscs tool just barks at messy code like a linter might; it doesn't correct anything. Instead, js-beautifier will output a modified version of the code with certain rules applied...\n\nAs mentioned by Sindre above, jscs does that as well ;)\n. Just to make sure, can you try bower install and then try gulp serve again? When scaffolding, did the installation run fine?\n. Closing due to inactivity. If you come back and can answer our questions feel free to reopen.\n. :+1: Just wondering, did we ever have plans when to release a 1.0?\n. :+1: Awesome!\n. :tada: Woohooo :tada: \n. Is this an option everybody's happy with? I'll start to say that I'm :+1:.\n. We switched to ESLint: https://github.com/yeoman/generator-gulp-webapp/commit/3cafe814124b1926dab77ccc8257b688c0c4c8ff.\n. @sindresorhus should we have that in the release notes?\n. I like this. :+1: \nAlthough, shouldn't this be on yeoman.io instead of it being in one generators contributing.md?\n. The Yeoman IRC channel on freenode is another nice place for support.\n. sup with the CI?\n. Thanks.\n. Mind elaborating? We do not have (and do not need) a js task.\n. Please don't use the bug tracker for support questions. Use Stack Overflow instead. Paste the link to your question in here so others can follow ;)\n. @WXLWEB We do have jQuery out of the box if you want that but it's optional and you should be on the latest version of the generator.\n. > It would help if you tell us which options you selected and what does your web inspector console say.\nPing @WXLWEB - can you give us the information we need?\n. Meaning we can close the issue? Do you have any idea why the wiredep task didn't run?\n. It's a new feature introduced in Gulp 3.9. You just need the latest Gulp version installed on your system as mentioned in the release notes.\n$ npm install -g gulp\n. @silvenon it might also be worth mentioning that Babel isn't supported on node 0.10.\n. Glad to hear it's fixed!\n. For gulp-webapp to be made Jekyll compatible there are quite a few things that would need to happen. I personally believe this is a way better fit for a separate generator as the recipe would be complicated and maybe difficult to maintain.\n\nI have tried other Jekyll generator but I think it will be great if there is Jekyll recipe for gulp-webapp.\n\nWhy? What was wrong with the jekyll generator and why wouldn't you just improve that generator?\n. > running npm install --save-dev gulp-imagemin and then npm install --save-dev gulp-useref fixed the issue but does anyone know what causes this issue?\nThose dependencies are in the scaffolded package.json so you probably just had an installation problem. I'm glad it's fixed now :)\n. There isn't a super easy way to update. The best way is probably to go through the release notes and see what changes are of value to you and apply those updates yourself (that's going to be in more files than package.json).\n. Actually you can run yo gulp-webapp again and skip the files that contain things you modified but you'll need to fix a bunch of conflicts (definitely if you're still on 0.3).\n. Can you please describe the issues you're dealing with?\n. :+1: \n. Simply because this generator doesn't support Babel (yet): https://github.com/yeoman/generator-gulp-webapp/issues/348.\n. Honestly I just think we shouldn't do this change to the gulpfile and just recommend people to use those editor plugins.\n. Just wondering, which editors don't have support for ESLint yet? I guess that's pretty rare or am I wrong?\n. Hmm, we still have a draf release in October but I wonder why we never released it. Maybe @silvenon remembers?\n. ",
    "RehanSaeed": "I was also unable to get gulp-mocha-phantomjs to work. I raised this https://github.com/mrhooray/gulp-mocha-phantomjs/issues/47 issue. This plugin seems easier to use than Karma, although Karma does provide code coverage too as an added bonus.\n. I was also unable to get gulp-mocha-phantomjs to work. I raised this https://github.com/mrhooray/gulp-mocha-phantomjs/issues/47 issue. This plugin seems easier to use than Karma, although Karma does provide code coverage too as an added bonus.\n. ",
    "w0rd-driven": "I may have jumped the gun for creating a pull request for an issue over a year old now with no mention here first. I've had a clean dependency using the same del package become a red-headed step-child for a long time before I realized updating the package to 2.x (and syntax) fixed it. Fortunately, it looks to be the same here.\n. Upgrading del alone doesn't seem to change anything. It still tries to run clean, styles, and fonts in parallel. Using return shows the start and finish for clean before it moves on.\nBefore:\n\u22ca> /p/p/y/test gulp serve                                               20:44:39\n[10:09:16] Requiring external module babel-core/register\n[10:09:16] Using gulpfile /projects/personal/yo/test/gulpfile.babel.js\n[10:09:16] Starting 'clean'...\n[10:09:16] Starting 'styles'...\n[10:09:17] Starting 'fonts'...\n[10:09:17] 'clean' errored after 1.2 s\n[10:09:17] Error: ENOTEMPTY: directory not empty, rmdir '/projects/personal/yo/test/.tmp/fonts'\n    at Error (native)\n[10:09:17] Finished 'styles' after 1.2 s\n[10:09:17] Finished 'fonts' after 854 ms\nAfter:\n```\n\u22ca> /p/p/y/test gulp serve                                               10:10:10\n[10:10:49] Requiring external module babel-core/register\n[10:10:49] Using gulpfile /projects/personal/yo/test/gulpfile.babel.js\n[10:10:49] Starting 'clean'...\n[10:10:49] Finished 'clean' after 204 \u03bcs\n[10:10:49] Starting 'styles'...\n[10:10:49] Starting 'fonts'...\n[10:10:50] Finished 'styles' after 932 ms\n[10:10:50] Finished 'fonts' after 730 ms\n[10:10:50] Starting 'serve'...\n[10:10:50] Finished 'serve' after 61 ms\n[BS] Access URLs:\n\n   Local: http://localhost:9000\nExternal: http://192.168.0.12:9000\n\n\n      UI: http://localhost:3001\n\nUI External: http://192.168.0.12:3001\n\n[BS] Serving files from: .tmp\n[BS] Serving files from: app\n``\n. Thanks for that catch. I mistakenly thought it may have been something babel required. I'll amend the PR\n. ... or not. If I take the.bind()out,clean,styles, andfontsstarts in tandem like the before snippet.bind()was added in 90841bb6aa6d3512a7fb293b1727e264efa463e5 to address roughly the same problem. For giggles, I downgraded del back to^1.1.1(1.2.1 is installed) and this change still works. It seems that just() => { return del.bind() }is the necessary piece that was missing.\n. The latest change hascleanas a dep onstylesandfonts. I personally don't mind that but if those tasks are ran individually,clean` will be a little too eager.\nIt seems like through either commit, bind() is really the essential piece preventing the tasks from stepping on each other. In the first commit, clean placed in any part of the array appears to block and finish before the others execute. By placing it in the front, it would at least produce the behavior I was expecting: clean starts, finishes, then the other tasks execute concurrently. In the second commit bind() is also necessary so that the html and fonts deps don't step on each other. bind() feels a lot like slight of hand in either scenario and you can make this \"work\", but they both have a smell to them.\nI agree about Gulp4 after feeling like I've exhausted the easier paths. My hope is these commits and my attempts to explain them would help anyone if they chose to implement this downstream.\n. I thought del was upgraded separately but looking over the commit logs, I guess it wasn't. I could easily do a PR for that though.\nFor my own edification, what exactly in Gulp4 would fix this in a more elegant way? I guess it's clearly defining the parallel vs series task dependencies? It's likely that clean almost exclusively requires it to be ran in series vs the default parallel in gulp3.\n. I may have jumped the gun for creating a pull request for an issue over a year old now with no mention here first. I've had a clean dependency using the same del package become a red-headed step-child for a long time before I realized updating the package to 2.x (and syntax) fixed it. Fortunately, it looks to be the same here.\n. Upgrading del alone doesn't seem to change anything. It still tries to run clean, styles, and fonts in parallel. Using return shows the start and finish for clean before it moves on.\nBefore:\n\u22ca> /p/p/y/test gulp serve                                               20:44:39\n[10:09:16] Requiring external module babel-core/register\n[10:09:16] Using gulpfile /projects/personal/yo/test/gulpfile.babel.js\n[10:09:16] Starting 'clean'...\n[10:09:16] Starting 'styles'...\n[10:09:17] Starting 'fonts'...\n[10:09:17] 'clean' errored after 1.2 s\n[10:09:17] Error: ENOTEMPTY: directory not empty, rmdir '/projects/personal/yo/test/.tmp/fonts'\n    at Error (native)\n[10:09:17] Finished 'styles' after 1.2 s\n[10:09:17] Finished 'fonts' after 854 ms\nAfter:\n```\n\u22ca> /p/p/y/test gulp serve                                               10:10:10\n[10:10:49] Requiring external module babel-core/register\n[10:10:49] Using gulpfile /projects/personal/yo/test/gulpfile.babel.js\n[10:10:49] Starting 'clean'...\n[10:10:49] Finished 'clean' after 204 \u03bcs\n[10:10:49] Starting 'styles'...\n[10:10:49] Starting 'fonts'...\n[10:10:50] Finished 'styles' after 932 ms\n[10:10:50] Finished 'fonts' after 730 ms\n[10:10:50] Starting 'serve'...\n[10:10:50] Finished 'serve' after 61 ms\n[BS] Access URLs:\n\n   Local: http://localhost:9000\nExternal: http://192.168.0.12:9000\n\n\n      UI: http://localhost:3001\n\nUI External: http://192.168.0.12:3001\n\n[BS] Serving files from: .tmp\n[BS] Serving files from: app\n``\n. Thanks for that catch. I mistakenly thought it may have been something babel required. I'll amend the PR\n. ... or not. If I take the.bind()out,clean,styles, andfontsstarts in tandem like the before snippet.bind()was added in 90841bb6aa6d3512a7fb293b1727e264efa463e5 to address roughly the same problem. For giggles, I downgraded del back to^1.1.1(1.2.1 is installed) and this change still works. It seems that just() => { return del.bind() }is the necessary piece that was missing.\n. The latest change hascleanas a dep onstylesandfonts. I personally don't mind that but if those tasks are ran individually,clean` will be a little too eager.\nIt seems like through either commit, bind() is really the essential piece preventing the tasks from stepping on each other. In the first commit, clean placed in any part of the array appears to block and finish before the others execute. By placing it in the front, it would at least produce the behavior I was expecting: clean starts, finishes, then the other tasks execute concurrently. In the second commit bind() is also necessary so that the html and fonts deps don't step on each other. bind() feels a lot like slight of hand in either scenario and you can make this \"work\", but they both have a smell to them.\nI agree about Gulp4 after feeling like I've exhausted the easier paths. My hope is these commits and my attempts to explain them would help anyone if they chose to implement this downstream.\n. I thought del was upgraded separately but looking over the commit logs, I guess it wasn't. I could easily do a PR for that though.\nFor my own edification, what exactly in Gulp4 would fix this in a more elegant way? I guess it's clearly defining the parallel vs series task dependencies? It's likely that clean almost exclusively requires it to be ran in series vs the default parallel in gulp3.\n. ",
    "codeofsumit": "I get the following error when following this recipe:\nncaught Error: Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (>= 4.0.0) or downgrade your runtime to an older version (>= 2.0.0-beta.1).\nI'm not (don't want to) use any precompilation and I'm note sure where that comes from actually.\nAny ideas what might have changed that isn't reflected in the recipe yet?\n. sure thing, #480 \n. thanks! Gonna try that later today.\nDo you mind explaining the workflow behind this?\nWill the template files get precompiled during the gulp build and the compiled files will get served in the /dist folder?\n. my mistake. Everything worked fine when not using the latest handlebars version but the one that is used in gulp-handlebars (3.0.0) as it was written in the recipe. I think I overread that before.\nEverything is working now.\nThanks!\n. I get the following error when following this recipe:\nncaught Error: Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (>= 4.0.0) or downgrade your runtime to an older version (>= 2.0.0-beta.1).\nI'm not (don't want to) use any precompilation and I'm note sure where that comes from actually.\nAny ideas what might have changed that isn't reflected in the recipe yet?\n. sure thing, #480 \n. thanks! Gonna try that later today.\nDo you mind explaining the workflow behind this?\nWill the template files get precompiled during the gulp build and the compiled files will get served in the /dist folder?\n. my mistake. Everything worked fine when not using the latest handlebars version but the one that is used in gulp-handlebars (3.0.0) as it was written in the recipe. I think I overread that before.\nEverything is working now.\nThanks!\n. ",
    "eloop": "I was using OSX and a PNG image.\n. Sorry, not sure which update you mean here ?\nOn Tue, May 13, 2014 at 4:36 PM, Jakob Cosoroab\u0103\nnotifications@github.comwrote:\n\n@eloop https://github.com/eloop image task now works for me after the\nupdate, please update the dependencies and try again\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/127#issuecomment-42921939\n.\n\n\nDrew Whitehouse\nNCI VizLab\n. Works well now, thanks for your work guys.\nOn Wed, May 14, 2014 at 3:59 PM, Jakob Cosoroab\u0103\nnotifications@github.comwrote:\n\n@eloop https://github.com/eloop even though no new version of the\ngenerator has been released, new versions of the dependencies have, please\nrun npm update to fetch newer versions of dependencies if available\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/127#issuecomment-43045185\n.\n\n\nDrew Whitehouse\nNCI VizLab\n.  I was using OSX and a PNG image.\n. Sorry, not sure which update you mean here ?\nOn Tue, May 13, 2014 at 4:36 PM, Jakob Cosoroab\u0103\nnotifications@github.comwrote:\n\n@eloop https://github.com/eloop image task now works for me after the\nupdate, please update the dependencies and try again\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/127#issuecomment-42921939\n.\n\n\nDrew Whitehouse\nNCI VizLab\n. Works well now, thanks for your work guys.\nOn Wed, May 14, 2014 at 3:59 PM, Jakob Cosoroab\u0103\nnotifications@github.comwrote:\n\n@eloop https://github.com/eloop even though no new version of the\ngenerator has been released, new versions of the dependencies have, please\nrun npm update to fetch newer versions of dependencies if available\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/yeoman/generator-gulp-webapp/issues/127#issuecomment-43045185\n.\n\n\nDrew Whitehouse\nNCI VizLab\n. ",
    "bhongy": "I can submit a pull request for this one in a few minutes, @callumlocke.\n. Cool. I will close it then.\n. I can submit a pull request for this one in a few minutes, @callumlocke.\n. Cool. I will close it then.\n. ",
    "raspo": "Yes, I found out about the issue when building the app for distribution, using the gulp command with no arguments.\nThe images I was getting inside the dist/images folder where completely outdated due to caching.\n. For what I can tell, the cache function is currently being used by the images task only.\nIf you are going to clear cache inside that task, it would make more sense to remove the call to $.cache() altogether, IMO.\n. Yes, I found out about the issue when building the app for distribution, using the gulp command with no arguments.\nThe images I was getting inside the dist/images folder where completely outdated due to caching.\n. For what I can tell, the cache function is currently being used by the images task only.\nIf you are going to clear cache inside that task, it would make more sense to remove the call to $.cache() altogether, IMO.\n. ",
    "oskarrough": "Good work, more nitpicking:\n- Typography and especially the headlines feel a bit disconnected, perhaps lower the line-heights?\n- Why cut the logo at all? Think it would look better to show the entire circle and optically position the text to the right of it on smaller screens.\n. Great, and another vote for plural.\n. You're sure you don't have a ~/.bowerrc or ~/your-project/.bowerrc? Had the exact same trouble and was missing an extra one inside my app. Otherwise create one inside your project and tell it to install there.\n. Feels like I won't have time to open a PR but here's the task I'm currently using:\nJavaScript\n// Compile JavaScript with ES2015+\ngulp.task('scripts', () => {\n    return gulp.src(['app/scripts/**/*.js', '!app/scripts/vendor/**/*.js'])\n        .pipe($.sourcemaps.init())\n        .pipe($.babel())\n        .pipe($.concat('main.js'))\n        .pipe(gulp.dest('.tmp/scripts'))\n        .pipe($.sourcemaps.write('.'))\n        .pipe(browserSync.stream({ match: '**/*.js' }));\n});\nNot quite sure how it'll play together with the html task of this generator?\n. It's the shorthand syntax arrow functions from ES2015, which is available since this generator is using a gulpfile.babel.js.\nCheck https://babeljs.io/docs/learn-es2015/#arrows\n. @dgoncalves1, here's another working example with Jade, watch and browserSync, for inspiration.\nhttps://github.com/oskarrough/rough/blob/master/gulp/jade.js\nhttps://github.com/oskarrough/rough/blob/master/gulp/serve.js\n. Since the gulpfile > gulpfile.babel.js conversion everything is a lot slower on all the machines I've tested. I tested similar gulpfiles where gulpfile.js would take 2 seconds to finish while gulpfile.babel.js would take 10 seconds before it even starts.\nThat said, I couldn't find a way to improve it\u2026\n. I don't believe it has anything to do with images. For instance, the following task takes 3-4 seconds to finish when inside a gulpfile.babel.js on a i7 MacBook Air with SSD, while the gulpfile.js version is instant.\n``` js\nconst gulp = require('gulp');\nconst del = require('del');\ngulp.task('clean', cb => {\n    del(['.tmp', 'dist']);\n    cb();\n});\n```\nOf course, this might not be the most telling test but there's definitely an expected ramp-up time when using babel. Perhaps all of this is fixed in gulp 4?\n. If you don't want to deal with it yourself, take a look at https://github.com/shannonmoeller/gulp-hb\n. Looks like the install line in the recipe you linked is missing browserify.\nTry\nnpm install browserify --save\ngulp serve\n. Good work, more nitpicking:\n- Typography and especially the headlines feel a bit disconnected, perhaps lower the line-heights?\n- Why cut the logo at all? Think it would look better to show the entire circle and optically position the text to the right of it on smaller screens.\n. Great, and another vote for plural.\n. You're sure you don't have a ~/.bowerrc or ~/your-project/.bowerrc? Had the exact same trouble and was missing an extra one inside my app. Otherwise create one inside your project and tell it to install there.\n. Feels like I won't have time to open a PR but here's the task I'm currently using:\nJavaScript\n// Compile JavaScript with ES2015+\ngulp.task('scripts', () => {\n    return gulp.src(['app/scripts/**/*.js', '!app/scripts/vendor/**/*.js'])\n        .pipe($.sourcemaps.init())\n        .pipe($.babel())\n        .pipe($.concat('main.js'))\n        .pipe(gulp.dest('.tmp/scripts'))\n        .pipe($.sourcemaps.write('.'))\n        .pipe(browserSync.stream({ match: '**/*.js' }));\n});\nNot quite sure how it'll play together with the html task of this generator?\n. It's the shorthand syntax arrow functions from ES2015, which is available since this generator is using a gulpfile.babel.js.\nCheck https://babeljs.io/docs/learn-es2015/#arrows\n. @dgoncalves1, here's another working example with Jade, watch and browserSync, for inspiration.\nhttps://github.com/oskarrough/rough/blob/master/gulp/jade.js\nhttps://github.com/oskarrough/rough/blob/master/gulp/serve.js\n. Since the gulpfile > gulpfile.babel.js conversion everything is a lot slower on all the machines I've tested. I tested similar gulpfiles where gulpfile.js would take 2 seconds to finish while gulpfile.babel.js would take 10 seconds before it even starts.\nThat said, I couldn't find a way to improve it\u2026\n. I don't believe it has anything to do with images. For instance, the following task takes 3-4 seconds to finish when inside a gulpfile.babel.js on a i7 MacBook Air with SSD, while the gulpfile.js version is instant.\n``` js\nconst gulp = require('gulp');\nconst del = require('del');\ngulp.task('clean', cb => {\n    del(['.tmp', 'dist']);\n    cb();\n});\n```\nOf course, this might not be the most telling test but there's definitely an expected ramp-up time when using babel. Perhaps all of this is fixed in gulp 4?\n. If you don't want to deal with it yourself, take a look at https://github.com/shannonmoeller/gulp-hb\n. Looks like the install line in the recipe you linked is missing browserify.\nTry\nnpm install browserify --save\ngulp serve\n. ",
    "jonathanmoore": "Just rebased from the current master and changed app/templates/_package.json from 4 spaces to 2 spaces.\n. Fixed!\n. Just rebased from the current master and changed app/templates/_package.json from 4 spaces to 2 spaces.\n. Fixed!\n. ",
    "martin-g": "There is a recipe for this already: https://github.com/yeoman/generator-gulp-webapp/blob/master/docs/recipes/jade.md\n. There is a recipe for this already: https://github.com/yeoman/generator-gulp-webapp/blob/master/docs/recipes/jade.md\n. ",
    "rdorde": "I followed the recipe on a fresh gulp-webapp and when I try to build the project useref doesn't have the right path to the JS files (missing app folder).\ngulp-useref: no such file or directory '/home/user/gulp-webapp/bower_components/modernizr/modernizr.js'\nAltering build:js({app,.tmp}) scripts/vendor/modernizr.js doesn't help as $.useref.assets({searchPath: '{.tmp,app}'}) is already configured.\n. I'm not sure. Can you build the dist version fine?\nI got the msg with $.useref.assets({searchPath: '{.tmp,app}'}).on('error', console.log) for every bower component (jquery, bootstrap) but not for main.js. I had to change the URLs in Jade file to script(src='bower_components/modernizr/modernizr.js') (removing ../).\n. It's set in .bowerrc. If I would just convert my default index.html to Jade and not copy app/layout.jade example it would work right away.\n. That's the default structure for me when I run yo gulp-webapp. \nwiredep task in the recipe also shows directory: 'app/bower_components'.\n. I followed the recipe on a fresh gulp-webapp and when I try to build the project useref doesn't have the right path to the JS files (missing app folder).\ngulp-useref: no such file or directory '/home/user/gulp-webapp/bower_components/modernizr/modernizr.js'\nAltering build:js({app,.tmp}) scripts/vendor/modernizr.js doesn't help as $.useref.assets({searchPath: '{.tmp,app}'}) is already configured.\n. I'm not sure. Can you build the dist version fine?\nI got the msg with $.useref.assets({searchPath: '{.tmp,app}'}).on('error', console.log) for every bower component (jquery, bootstrap) but not for main.js. I had to change the URLs in Jade file to script(src='bower_components/modernizr/modernizr.js') (removing ../).\n. It's set in .bowerrc. If I would just convert my default index.html to Jade and not copy app/layout.jade example it would work right away.\n. That's the default structure for me when I run yo gulp-webapp. \nwiredep task in the recipe also shows directory: 'app/bower_components'.\n. ",
    "mmrko": "FWIW if you're using gulp-sass instead of gulp-ruby-sass (the current default) you should pass gulp-plumber an error callback as described in https://github.com/floatdrop/gulp-plumber/issues/8#issuecomment-41465386.\n. FWIW if you're using gulp-sass instead of gulp-ruby-sass (the current default) you should pass gulp-plumber an error callback as described in https://github.com/floatdrop/gulp-plumber/issues/8#issuecomment-41465386.\n. ",
    "oriSomething": "i have it always. the reason i post this issue, because it' the second computer i experience this problem\nedit:\nthe 2nd computer is windows 8.1 machine\n. @petethepig i feel so stupid. yes! it worked! i used gulp serve as a habit from grunt serve. thank you!\n. but it needs to be said that gulp serve is written in the documentation\n. i have it always. the reason i post this issue, because it' the second computer i experience this problem\nedit:\nthe 2nd computer is windows 8.1 machine\n. @petethepig i feel so stupid. yes! it worked! i used gulp serve as a habit from grunt serve. thank you!\n. but it needs to be said that gulp serve is written in the documentation\n. ",
    "brucebentley": "I have the same problem on both OS X & Windows 8.1.\n. I have the same problem on both OS X & Windows 8.1.\n. ",
    "abramz": "Still not resolved.\n. Still not resolved.\n. ",
    "petethepig": "Perhaps you need to run gulp watch instead of gulp serve\n. Perhaps you need to run gulp watch instead of gulp serve\n. ",
    "robertwalsh0": "Just wanted to add that the gulp serve vs gulp watch in the ReadMe caught me up too. \nIt seems to me that someone who is trying to get started with this generator will most likely be looking to run the grunt watch command. It isn't clear at all in the current ReadMe that this is the command that the user should run.\n. Just wanted to add that the gulp serve vs gulp watch in the ReadMe caught me up too. \nIt seems to me that someone who is trying to get started with this generator will most likely be looking to run the grunt watch command. It isn't clear at all in the current ReadMe that this is the command that the user should run.\n. ",
    "gruppjo": "Also found this issue because I was wondering why for gulp serve livereload wasn't working. Since it's in the readme I expected it to work. gulp watch also is what I wanted obviously.\n. Also found this issue because I was wondering why for gulp serve livereload wasn't working. Since it's in the readme I expected it to work. gulp watch also is what I wanted obviously.\n. ",
    "csablons": "I was also trapped by gulp serve instead of gulp watch !\n. Ok Thank you very much.\nI think it could be very useful to add this line in the Getting Started part of the readme :)\n. I was also trapped by gulp serve instead of gulp watch !\n. Ok Thank you very much.\nI think it could be very useful to add this line in the Getting Started part of the readme :)\n. ",
    "changalberto": "Using generator-gulp-webapp@0.1.0. I assume this is the latest from masters.\nI can't identify exactly from which commit to blame.\nThis unique issue is only happening in my ~/Downloads folder, which lives in: /Users/alberto.chang/Downloads/my-test-project. But if I generate this app in: /Users/alberto.chang/Projects/Experiments/my-test-project, everything works correctly.\nVery weird...\n. Sorry, just got this. It was buried in my inbox.\nI didn't check, but that was probably it too. I managed to avoid the bug by creating a folder outside of it.\nSent from my iPhone\n\nOn Jan 29, 2015, at 8:56 PM, Matija Marohni\u0107 notifications@github.com wrote:\nThanks, that was probably it \n\u2014\nReply to this email directly or view it on GitHub.\n. Using generator-gulp-webapp@0.1.0. I assume this is the latest from masters.\nI can't identify exactly from which commit to blame.\nThis unique issue is only happening in my ~/Downloads folder, which lives in: /Users/alberto.chang/Downloads/my-test-project. But if I generate this app in: /Users/alberto.chang/Projects/Experiments/my-test-project, everything works correctly.\nVery weird...\n. Sorry, just got this. It was buried in my inbox.\n\nI didn't check, but that was probably it too. I managed to avoid the bug by creating a folder outside of it.\nSent from my iPhone\n\nOn Jan 29, 2015, at 8:56 PM, Matija Marohni\u0107 notifications@github.com wrote:\nThanks, that was probably it \n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "doxxx": "Just wanted to say that I ran into this same problem and it was caused by the presence of a .yo-rc.json file in the parent directory.\n. Just wanted to say that I ran into this same problem and it was caused by the presence of a .yo-rc.json file in the parent directory.\n. ",
    "Hotell": "same problem here on Linux CentOS. using gulp 3.8.5  @xmlking even gulp-grep-stream doesn't help -> the task finishes properly but no font files are copied. \nbash\n[13:14:56] Starting 'fonts:auto'...\n[13:14:56] gulp-size: 'fonts' total 0 B\n[13:14:56] Finished 'fonts:auto' after 63 ms\n. same problem here on Linux CentOS. using gulp 3.8.5  @xmlking even gulp-grep-stream doesn't help -> the task finishes properly but no font files are copied. \nbash\n[13:14:56] Starting 'fonts:auto'...\n[13:14:56] gulp-size: 'fonts' total 0 B\n[13:14:56] Finished 'fonts:auto' after 63 ms\n. ",
    "theptrk": "Sorry, which one should I use if I want to build a directory that is ready to use as a github page?. :+1: \n. Sorry, which one should I use if I want to build a directory that is ready to use as a github page?\n. :+1: \n. ",
    "cedced19": "Ok I've understand!\nThanks you!\n. Ok, and I had forgotten Modernizr...\nIt's better?\n. I'm learning english, I've not understand you!\n. Ok I've understand!\nThanks you!\n. Ok, and I had forgotten Modernizr...\nIt's better?\n. I'm learning english, I've not understand you!\n. ",
    "josephdburdick": "I figured out what the issue was, I wasn't aware that I actually needed to keep comments in the markup around script tags for it to be rendered in the dist build. Should this be explicitly stated somewhere in the docs?\n. @kevva I did try that with return gulp.src('app/images/**/*') which matches the path of other working tasks. Still, I got the following. \nif (!this.path) throw new Error('No path specified! Can not get relative.'\n                          ^\nError: No path specified! Can not get relative.\n. Issue is resolved.\nAdding line 96 to the following gist fixed it:\nhttps://gist.github.com/josephdburdick/49a4bb299a614d8f3f77\nThe problem: my gulp sprite task was generating an html file that was getting mixed up in the glob to optimize. It would error but not tell me where the error actually occurred. It wasn't until I stepped through slowly that I was able to figure this out.\n. I've updated yeoman, updated bower, deleted ~/.bowerrc. Why does it keep installing in /app?\n. I'm 100% positive i don't have a .bowerrc directory in my user home directory. There is a .bowerrc in my root directory with \"directory\" pointing to \"app/bower_components\" which was set by default by this generator. When I change it to \"bower_components\" and bower install it'll install a bower_components into the app root directory but it still doesn't properly wire dependencies when building the project. \n. I meant app root directory as in the project root directory, not / or C:/. I did update the generator, this is my terminal output. It doesn't show version numbers.\n\n. OK so that definitely installed something that yo didn't before. I'm going to gut my current project, run yo again with this new version and report back. Thanks @eddiemonge \n. Is there an official recipe to make this work with jade just like there was for the original generator?\n. @eddiemonge So I've been able to watch and build, locally. But once I try to upload the work to the server the bower components are still trying to be accessed from the root folder, which obviously doesn't exist.\nI was under the impression that this:\n//- build:js scripts/plugins.js\n        script(src='../bower_components/jquery.easing/js/jquery.easing.min.js')\n        script(src='../bower_components/isMobile/isMobile.min.js')\n        script(src='../bower_components/jquery-visible/jquery.visible.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/affix.js')     \n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/transition.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/button.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/carousel.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/scrollspy.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/collapse.js')\n        //- endbuild\nWould gather all of the files within the comments and compile them to scripts/plugins.js. But it doesn't. What am I missing here?\n. Hey @fbm-static, thanks for the reply. I figured out the jade comments but still had issues.\nI'll run through this again but what I did was:\n- Compile jade into index.html and stash that in .tmp\n- Pipe .tmp/*.html useref into dist\n- Run through other tasks\nWhich didn't work. \nNow my current solution is to compile app/.jade into app/.html and leave everything else the same. Bower components actually pull from ../ (project root directory) and compile properly. The issue now is that i have a versioned html dirtying up my /app folder.\nI'll run through what you said again and report back.\n. Lesson learned: use gulp-plumber in every task to figure out what the underlying problem really is.\n. Yep, I must be some kind of idiot for using a resource to make it easier to track errors.\n. Hey, apologies @fbm-static and @silvenon ... didn't mean to come across snarky. \nThe ironic part about all of this is without plumber the errors in the terminal showed me which npm module crashed but when I added plumber it told me where in my project I had made a formatting error. \n. I figured out what the issue was, I wasn't aware that I actually needed to keep comments in the markup around script tags for it to be rendered in the dist build. Should this be explicitly stated somewhere in the docs?\n. @kevva I did try that with return gulp.src('app/images/**/*') which matches the path of other working tasks. Still, I got the following. \nif (!this.path) throw new Error('No path specified! Can not get relative.'\n                          ^\nError: No path specified! Can not get relative.\n. Issue is resolved.\nAdding line 96 to the following gist fixed it:\nhttps://gist.github.com/josephdburdick/49a4bb299a614d8f3f77\nThe problem: my gulp sprite task was generating an html file that was getting mixed up in the glob to optimize. It would error but not tell me where the error actually occurred. It wasn't until I stepped through slowly that I was able to figure this out.\n. I've updated yeoman, updated bower, deleted ~/.bowerrc. Why does it keep installing in /app?\n. I'm 100% positive i don't have a .bowerrc directory in my user home directory. There is a .bowerrc in my root directory with \"directory\" pointing to \"app/bower_components\" which was set by default by this generator. When I change it to \"bower_components\" and bower install it'll install a bower_components into the app root directory but it still doesn't properly wire dependencies when building the project. \n. I meant app root directory as in the project root directory, not / or C:/. I did update the generator, this is my terminal output. It doesn't show version numbers.\n\n. OK so that definitely installed something that yo didn't before. I'm going to gut my current project, run yo again with this new version and report back. Thanks @eddiemonge \n. Is there an official recipe to make this work with jade just like there was for the original generator?\n. @eddiemonge So I've been able to watch and build, locally. But once I try to upload the work to the server the bower components are still trying to be accessed from the root folder, which obviously doesn't exist.\nI was under the impression that this:\n//- build:js scripts/plugins.js\n        script(src='../bower_components/jquery.easing/js/jquery.easing.min.js')\n        script(src='../bower_components/isMobile/isMobile.min.js')\n        script(src='../bower_components/jquery-visible/jquery.visible.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/affix.js')     \n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/transition.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/button.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/carousel.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/scrollspy.js')\n        script(src='../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/collapse.js')\n        //- endbuild\nWould gather all of the files within the comments and compile them to scripts/plugins.js. But it doesn't. What am I missing here?\n. Hey @fbm-static, thanks for the reply. I figured out the jade comments but still had issues.\nI'll run through this again but what I did was:\n- Compile jade into index.html and stash that in .tmp\n- Pipe .tmp/*.html useref into dist\n- Run through other tasks\nWhich didn't work. \nNow my current solution is to compile app/.jade into app/.html and leave everything else the same. Bower components actually pull from ../ (project root directory) and compile properly. The issue now is that i have a versioned html dirtying up my /app folder.\nI'll run through what you said again and report back.\n. Lesson learned: use gulp-plumber in every task to figure out what the underlying problem really is.\n. Yep, I must be some kind of idiot for using a resource to make it easier to track errors.\n. Hey, apologies @fbm-static and @silvenon ... didn't mean to come across snarky. \nThe ironic part about all of this is without plumber the errors in the terminal showed me which npm module crashed but when I added plumber it told me where in my project I had made a formatting error. \n. ",
    "Ahrengot": "@sindresorhus thanks. I just tried updating npm (v1.4.2) and yeoman (v.1.2.0). I still have the same issue though. Thanks for pointing me to the other issue though. I'll keep an eye on that.\n. Yup, that's identical to what I get. I also tried reinstalling both yo and the generator :(\n. @sindresorhus thanks. I just tried updating npm (v1.4.2) and yeoman (v.1.2.0). I still have the same issue though. Thanks for pointing me to the other issue though. I'll keep an eye on that.\n. Yup, that's identical to what I get. I also tried reinstalling both yo and the generator :(\n. ",
    "DanEEStar": "I have the very same issue like Ahrengot. The generator somehow skips the selection question (Sass, Bootstrap, Modernizr) continues and then hangs. When I press enter it shows this message \nOverwrite .bowerrc? overwrite\nHere is the complete terminal output:\n```\n-> % yo gulp-webapp\n   invoke   mocha:app\n   create test/bower.json\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nOut of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.\n[?] What more would you like? (Press  to select)\n\u276f\u2b22 Sass\n \u2b22 Bootstrap\n \u2b22 Modernizr   create test/.bowerrc\n   create test/spec/test.js\n   create test/index.html\nI'm all done. Running bower install for you to install the required dependencies. If this fails, try running the command yourself.\nbower mocha#~1.14.0             cached git://github.com/visionmedia/mocha.git#1.14.0\nbower mocha#~1.14.0           validate 1.14.0 against git://github.com/visionmedia/mocha.git#~1.14.0\nbower chai#~1.8.0               cached git://github.com/chaijs/chai.git#1.8.1\nbower chai#~1.8.0             validate 1.8.1 against git://github.com/chaijs/chai.git#~1.8.0\nbower chai#~1.8.0              install chai#1.8.1\nbower mocha#~1.14.0            install mocha#1.14.0\n[?] What more would you like? Sass, Bootstrap, Modernizr\n   create gulpfile.js\n   create package.json\n   create .gitignore\n   create .gitattributes\n conflict .bowerrc\n[?] Overwrite .bowerrc? overwrite\n    force .bowerrc\n conflict bower.json\n[?] Overwrite bower.json? overwrite\n    force bower.json\n   create .jshintrc\n   create .editorconfig\n   create app/favicon.ico\n   create app/404.html\n   create app/robots.txt\n   create app/.htaccess\n   create app/styles/main.scss\n   create app/index.html\n   create app/scripts/main.js\nI'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\n```\nThe [?] are locations where I manually pressed enter.\nIn the end it only creates a test folder and nothing else. There does not seem to be an explicit error...\nI tried it with a fresh install of node (v0.10.29 via nvm). npm v1.4.14 and yo v1.2.0.\nI have this problem since about 2 weeks (not exactly sure about the date). The generator worked a while ago.\n. With the master branch of the generator it seems to work.\n. I have the very same issue like Ahrengot. The generator somehow skips the selection question (Sass, Bootstrap, Modernizr) continues and then hangs. When I press enter it shows this message \nOverwrite .bowerrc? overwrite\nHere is the complete terminal output:\n```\n-> % yo gulp-webapp\n   invoke   mocha:app\n   create test/bower.json\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nOut of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.\n[?] What more would you like? (Press  to select)\n\u276f\u2b22 Sass\n \u2b22 Bootstrap\n \u2b22 Modernizr   create test/.bowerrc\n   create test/spec/test.js\n   create test/index.html\nI'm all done. Running bower install for you to install the required dependencies. If this fails, try running the command yourself.\nbower mocha#~1.14.0             cached git://github.com/visionmedia/mocha.git#1.14.0\nbower mocha#~1.14.0           validate 1.14.0 against git://github.com/visionmedia/mocha.git#~1.14.0\nbower chai#~1.8.0               cached git://github.com/chaijs/chai.git#1.8.1\nbower chai#~1.8.0             validate 1.8.1 against git://github.com/chaijs/chai.git#~1.8.0\nbower chai#~1.8.0              install chai#1.8.1\nbower mocha#~1.14.0            install mocha#1.14.0\n[?] What more would you like? Sass, Bootstrap, Modernizr\n   create gulpfile.js\n   create package.json\n   create .gitignore\n   create .gitattributes\n conflict .bowerrc\n[?] Overwrite .bowerrc? overwrite\n    force .bowerrc\n conflict bower.json\n[?] Overwrite bower.json? overwrite\n    force bower.json\n   create .jshintrc\n   create .editorconfig\n   create app/favicon.ico\n   create app/404.html\n   create app/robots.txt\n   create app/.htaccess\n   create app/styles/main.scss\n   create app/index.html\n   create app/scripts/main.js\nI'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\n```\nThe [?] are locations where I manually pressed enter.\nIn the end it only creates a test folder and nothing else. There does not seem to be an explicit error...\nI tried it with a fresh install of node (v0.10.29 via nvm). npm v1.4.14 and yo v1.2.0.\nI have this problem since about 2 weeks (not exactly sure about the date). The generator worked a while ago.\n. With the master branch of the generator it seems to work.\n. ",
    "kraz": "I have also experienced the issue with the master branch (tested only on Windows)\nReverting to \"yeoman-generator\": \"^0.16.0\" seems to fixed it.\nWith the master branch of yeoman-generator works. With 0.17.0 fails.\n. I have also experienced the issue with the master branch (tested only on Windows)\nReverting to \"yeoman-generator\": \"^0.16.0\" seems to fixed it.\nWith the master branch of yeoman-generator works. With 0.17.0 fails.\n. ",
    "ryandeussing": "I'm facing this issue as well, with identical output. I've cloned generator and generator-gulp-webapp repos locally, and run npm link in both of them, in an attempt to be running the master branch of each. But no luck.\nI also tried specifying \"yeoman-generator\": \"^0.16.0\" in generator-gulp-webapp, but also no luck.\nHelp appreciated.\n. I do, 1.2.1\n. I wound up re-installing node, bingo. It may have been 6 months since I installed it originally - too bad it doesn't prompt you to upgrade like yo does ;)\n. Thanks, I'll do just that.\n. I'm facing this issue as well, with identical output. I've cloned generator and generator-gulp-webapp repos locally, and run npm link in both of them, in an attempt to be running the master branch of each. But no luck.\nI also tried specifying \"yeoman-generator\": \"^0.16.0\" in generator-gulp-webapp, but also no luck.\nHelp appreciated.\n. I do, 1.2.1\n. I wound up re-installing node, bingo. It may have been 6 months since I installed it originally - too bad it doesn't prompt you to upgrade like yo does ;)\n. Thanks, I'll do just that.\n. ",
    "damselem": "Had the same issue and I managed to get it working following this steps:\nnpm rm -g generator-gulp-webapp\nnpm install -g git://github.com/yeoman/generator-gulp-webapp\ncd ~/.homebrew/lib/node_modules/generator_gulp_webapp\nvim package.json\nReplace the yeoman-generator version to \"^0.16.0\" and save the file.\nnpm install\nThen you can run the generator wherever you want with:\nyo gulp-webapp\n. Had the same issue and I managed to get it working following this steps:\nnpm rm -g generator-gulp-webapp\nnpm install -g git://github.com/yeoman/generator-gulp-webapp\ncd ~/.homebrew/lib/node_modules/generator_gulp_webapp\nvim package.json\nReplace the yeoman-generator version to \"^0.16.0\" and save the file.\nnpm install\nThen you can run the generator wherever you want with:\nyo gulp-webapp\n. ",
    "LukeAskew": "Right, but this method means you don't need the global CLI installed.\n. Right, but this method means you don't need the global CLI installed.\n. ",
    "Remouille": "Thanks a lot !\n. Thanks a lot !\n. ",
    "Ernesto-Valdes": "This seems to be solved few month ago but I'm getting the same DEPRECATED error:\n\nThe current package.json and gulpfile.js seem to be different from the version back in July. Please advice. \n. This seems to be solved few month ago but I'm getting the same DEPRECATED error:\n\nThe current package.json and gulpfile.js seem to be different from the version back in July. Please advice. \n. ",
    "janhoogeveen": "For what it's worth, I've switched from LiveReload and Connect to BrowserSync and everything is working flawlessly now. Make sure you use an array of basedirs in the configuration (.tmp and app) and reload BrowserSync within a pipe after each triggered watch task.\n. Also, don't forget to turn on 'disable cache when devtools are open' after reinstalling your Macbook. Closing this issue since it was probably not an issue with generator-gulp-webapp but my machine. Will comment if the problem happens again though.\n. Just noticed the problem again. Happening with BrowserSync and I have disable cache enabled in my developer tools. Adding newlines fixes the JS not updating.\nI'll try disabling NFS or changing settings on my Vagrant machine to see how that works out.\n. Disabling NFS fixes this issue. Not a problem with the project.\n. For what it's worth, I've switched from LiveReload and Connect to BrowserSync and everything is working flawlessly now. Make sure you use an array of basedirs in the configuration (.tmp and app) and reload BrowserSync within a pipe after each triggered watch task.\n. Also, don't forget to turn on 'disable cache when devtools are open' after reinstalling your Macbook. Closing this issue since it was probably not an issue with generator-gulp-webapp but my machine. Will comment if the problem happens again though.\n. Just noticed the problem again. Happening with BrowserSync and I have disable cache enabled in my developer tools. Adding newlines fixes the JS not updating.\nI'll try disabling NFS or changing settings on my Vagrant machine to see how that works out.\n. Disabling NFS fixes this issue. Not a problem with the project.\n. ",
    "mrtonyhuynh": "I do not have any other app use livereload, but this is still happening. Strange that, I try to use generator-webapp and it don't have any problems. \n- First I downloaded LiveReload Alpha 0.9.2 (Windows) and install it. Once installed, launch it and do not do anything else. \n- Then I run gulp serve my application that was created by generator-gulp-webapp. Everything is fine until I change the contents of the index.html file (by Sublime Text 3 - no livereload plugin) and save it. Content in the browser nothing changes (synonymous with live-editing does not work), press F5 -> oops, it crash !. Livereload crash \n- I noticed that LiveReload extension installed on my Chrome browser; I have tried to disable or enable that extension, but things are still not is not better. \nDid I have something mistake?\n\n. If close Livereload for Windows, cannot activate livereload chrome extension. \n\nThat means that livereload inoperable.\nAnd console log return error msg:\nError: Failed to load resource: net::ERR_CONNECTION_REFUSED\nI find it hard to understand why Grunt runs fine, but fail with Gulp. =.=\"\n. Wow, gulp watch work like a charm without LiveReload Extension & Application Running.\nThank you very much!\n. I do not have any other app use livereload, but this is still happening. Strange that, I try to use generator-webapp and it don't have any problems. \n- First I downloaded LiveReload Alpha 0.9.2 (Windows) and install it. Once installed, launch it and do not do anything else. \n- Then I run gulp serve my application that was created by generator-gulp-webapp. Everything is fine until I change the contents of the index.html file (by Sublime Text 3 - no livereload plugin) and save it. Content in the browser nothing changes (synonymous with live-editing does not work), press F5 -> oops, it crash !. Livereload crash \n- I noticed that LiveReload extension installed on my Chrome browser; I have tried to disable or enable that extension, but things are still not is not better. \nDid I have something mistake?\n\n. If close Livereload for Windows, cannot activate livereload chrome extension. \n\nThat means that livereload inoperable.\nAnd console log return error msg:\nError: Failed to load resource: net::ERR_CONNECTION_REFUSED\nI find it hard to understand why Grunt runs fine, but fail with Gulp. =.=\"\n. Wow, gulp watch work like a charm without LiveReload Extension & Application Running.\nThank you very much!\n. ",
    "alrra": "\nWhy can't this be on by default?\n\n@sindresorhus Because it's beyond the scope of the project to also provide a 404 page, or any other error pages for that matter. Apache by default serves it's own error pages and the project provides information and an example on how that can be change, but beyond that, it's up to people and projects to decide if they want to provide custom error pages or not (e.g.: HTML5 Boilerplate chooses to provide a custom 404 page, while other projects choose to provide custom error pages even for other errors, like 503, or not provide any custom error pages at all).\n\nMaybe we should just drop the 404 page altogether.\n\nI'm ok either way, even with dropping the .htaccess if it doesn't make sense in the scope of this project!\n. > Not quite sure why we need opinions when you can just run the numbers. ... all to save 0.352 kB. \n@austinpray The data should be generated based on more representative / complex pages (1), and not on what is provided by default, as users won't stick to that bare minimum.\n. > Why can't this be on by default?\n@sindresorhus Because it's beyond the scope of the project to also provide a 404 page, or any other error pages for that matter. Apache by default serves it's own error pages and the project provides information and an example on how that can be change, but beyond that, it's up to people and projects to decide if they want to provide custom error pages or not (e.g.: HTML5 Boilerplate chooses to provide a custom 404 page, while other projects choose to provide custom error pages even for other errors, like 503, or not provide any custom error pages at all).\n\nMaybe we should just drop the 404 page altogether.\n\nI'm ok either way, even with dropping the .htaccess if it doesn't make sense in the scope of this project!\n. > Not quite sure why we need opinions when you can just run the numbers. ... all to save 0.352 kB. \n@austinpray The data should be generated based on more representative / complex pages (1), and not on what is provided by default, as users won't stick to that bare minimum.\n. ",
    "mxpln": "Oops, corrected it and added\n// bower:scss\n// endbower\nfor both cases.\n. Is it squashed correctly? First time I'm doing this.\n. Oops, corrected it and added\n// bower:scss\n// endbower\nfor both cases.\n. Is it squashed correctly? First time I'm doing this.\n. ",
    "rniemand": "I chose the following options:\n[ ] Sass\n[x] Bootstrap\n[x]Modernizer\nIf you go the Sass route it looks like the 'bootstrap-sass' filter fixes the issue\n. Ill give it a bash quickly, back in 10\n. OK so just using 'bootstrap' breaks CSS as suspected - running it atm with ['bootstrap-sass', 'bootstrap.js']\n. Looks like the winner is ['bootstrap-sass', 'bootstrap.js'] - this results in the following:\n build:js scripts/vendor.js \n```\n     bower:js \n\n endbower \n endbuild \n<!-- build:js scripts/plugins.js -->\n<script src=\"bower_components/bootstrap/js/affix.js\"></script>\n<script src=\"bower_components/bootstrap/js/alert.js\"></script>\n<script src=\"bower_components/bootstrap/js/dropdown.js\"></script>\n<script src=\"bower_components/bootstrap/js/tooltip.js\"></script>\n<script src=\"bower_components/bootstrap/js/modal.js\"></script>\n<script src=\"bower_components/bootstrap/js/transition.js\"></script>\n<script src=\"bower_components/bootstrap/js/button.js\"></script>\n<script src=\"bower_components/bootstrap/js/popover.js\"></script>\n<script src=\"bower_components/bootstrap/js/carousel.js\"></script>\n<script src=\"bower_components/bootstrap/js/scrollspy.js\"></script>\n<script src=\"bower_components/bootstrap/js/collapse.js\"></script>\n<script src=\"bower_components/bootstrap/js/tab.js\"></script>\n<!-- endbuild -->\n\n```\n. No problem at all\n. I chose the following options:\n[ ] Sass\n[x] Bootstrap\n[x]Modernizer\nIf you go the Sass route it looks like the 'bootstrap-sass' filter fixes the issue\n. Ill give it a bash quickly, back in 10\n. OK so just using 'bootstrap' breaks CSS as suspected - running it atm with ['bootstrap-sass', 'bootstrap.js']\n. Looks like the winner is ['bootstrap-sass', 'bootstrap.js'] - this results in the following:\n build:js scripts/vendor.js \n```\n     bower:js \n\n endbower \n endbuild \n<!-- build:js scripts/plugins.js -->\n<script src=\"bower_components/bootstrap/js/affix.js\"></script>\n<script src=\"bower_components/bootstrap/js/alert.js\"></script>\n<script src=\"bower_components/bootstrap/js/dropdown.js\"></script>\n<script src=\"bower_components/bootstrap/js/tooltip.js\"></script>\n<script src=\"bower_components/bootstrap/js/modal.js\"></script>\n<script src=\"bower_components/bootstrap/js/transition.js\"></script>\n<script src=\"bower_components/bootstrap/js/button.js\"></script>\n<script src=\"bower_components/bootstrap/js/popover.js\"></script>\n<script src=\"bower_components/bootstrap/js/carousel.js\"></script>\n<script src=\"bower_components/bootstrap/js/scrollspy.js\"></script>\n<script src=\"bower_components/bootstrap/js/collapse.js\"></script>\n<script src=\"bower_components/bootstrap/js/tab.js\"></script>\n<!-- endbuild -->\n\n```\n. No problem at all\n. ",
    "fernoftheandes": "sudo npm update -g git+https://github.com/yeoman/generator-gulp-webapp.git\nThat did the trick for me to get the latest and greatest.\n. As the boss (@addyosmani) pointed out, there is good in releasing every month. Keeps the machine oiled :)\n. @eddiemonge Well, obviously in this case, we wouldn't care about a release. \nBasically, I was trying to address the ideal situation of providing a release once there was a significant amount of improvements, etc. However, I understand the lack of resources and since I myself cannot provide aid, I cannot think of much more to say about it.\n. :+1: \n. I just ran yo gulp-webapp on an empty directory using the latest release, 0.3.0, after I added the serve:dist task that I copied from commit a74a08f. I built it using gulp build and then ran gulp serve:dist. What opened in the browser was a directory listing of the dist dir. \nDo I need to do something else besides copying the serve:dist task into my gulpfile.js from release 0.3.0?\nThanks!\n. Thanks @silvenon, and it's very helpful to have the console logs tell whether the files are being served from app or dist.\n. +1\n. If these are jshint errors (I cannot tell from your description), you can add the script to .jshintignore.\n. :+1: Go for it! It's a great rig already.\n. sudo npm update -g git+https://github.com/yeoman/generator-gulp-webapp.git\nThat did the trick for me to get the latest and greatest.\n. As the boss (@addyosmani) pointed out, there is good in releasing every month. Keeps the machine oiled :)\n. @eddiemonge Well, obviously in this case, we wouldn't care about a release. \nBasically, I was trying to address the ideal situation of providing a release once there was a significant amount of improvements, etc. However, I understand the lack of resources and since I myself cannot provide aid, I cannot think of much more to say about it.\n. :+1: \n. I just ran yo gulp-webapp on an empty directory using the latest release, 0.3.0, after I added the serve:dist task that I copied from commit a74a08f. I built it using gulp build and then ran gulp serve:dist. What opened in the browser was a directory listing of the dist dir. \nDo I need to do something else besides copying the serve:dist task into my gulpfile.js from release 0.3.0?\nThanks!\n. Thanks @silvenon, and it's very helpful to have the console logs tell whether the files are being served from app or dist.\n. +1\n. If these are jshint errors (I cannot tell from your description), you can add the script to .jshintignore.\n. :+1: Go for it! It's a great rig already.\n. ",
    "Sirrah": "Thanks, that's good enough for me.\nI'm new to Gulp and I tried gulp tasks (as in Gradle) and gulp --help (as in Grunt) but didn't find gulp --tasks. A Google search brought up gulp-task-listing which seemed a useful addition to me.\n. Thanks, that's good enough for me.\nI'm new to Gulp and I tried gulp tasks (as in Gradle) and gulp --help (as in Grunt) but didn't find gulp --tasks. A Google search brought up gulp-task-listing which seemed a useful addition to me.\n. ",
    "InEchtderKnecht": "+1!\nI'd love to see an updated version of this awesome generator! :)\n. +1!\nI'd love to see an updated version of this awesome generator! :)\n. ",
    "jstejada": "+1\nYes! Most plugins used appear to be outdated\n. +1\nYes! Most plugins used appear to be outdated\n. ",
    "Mystist": "+1 for new release. Can't bear with the 4 length indent.\n. Instruction for link to master:\nhttps://github.com/yeoman/generator/wiki/Testing-generators\n. Cool !\n. :+1:\n. +1 for new release. Can't bear with the 4 length indent.\n. Instruction for link to master:\nhttps://github.com/yeoman/generator/wiki/Testing-generators\n. Cool !\n. :+1:\n. ",
    "ha404": "Yeah, a lot of stuff outdated, update plssss ><\n. It has something to do with the 'images' task. If I comment out the guts it works :/\n. @silvenon this doesn't occur with the latest release (right before the newest version was pushed, I manually linked the generator to a locally pulled down version), we look good, I'll report back if anything. Thanks!\n. Variables are good for storing repetitive code, so if your gulpfile.js uses a lot of the same base paths to your assets, it's probably good to store it there and just change it once depending on your project's spec.\nAll this can be stored and replaced with a base path:\n\n. @silvenon, agreed, it's only when app/src becomes unwieldy in @austinpray's case. I have yet to encounter this and it seems like the majority of us don't run into this use case so I'm going to close this up and settle it until one day we reach a time when this becomes useful.\n. Forgive me, I just realized why I initially thought this was a good idea again.\nPlease, ring in on your thoughts: Imagine I wanted to just update to the latest version of gulp-webapp.\nI'd have to surgically go through every single task (making sure I don't miss one) to update the path to my assets whereas I could just copy over the old paths object and that'll just be that.\nWould this be desirable?\n. Yeah, a lot of stuff outdated, update plssss ><\n. It has something to do with the 'images' task. If I comment out the guts it works :/\n. @silvenon this doesn't occur with the latest release (right before the newest version was pushed, I manually linked the generator to a locally pulled down version), we look good, I'll report back if anything. Thanks!\n. Variables are good for storing repetitive code, so if your gulpfile.js uses a lot of the same base paths to your assets, it's probably good to store it there and just change it once depending on your project's spec.\nAll this can be stored and replaced with a base path:\n\n. @silvenon, agreed, it's only when app/src becomes unwieldy in @austinpray's case. I have yet to encounter this and it seems like the majority of us don't run into this use case so I'm going to close this up and settle it until one day we reach a time when this becomes useful.\n. Forgive me, I just realized why I initially thought this was a good idea again.\nPlease, ring in on your thoughts: Imagine I wanted to just update to the latest version of gulp-webapp.\nI'd have to surgically go through every single task (making sure I don't miss one) to update the path to my assets whereas I could just copy over the old paths object and that'll just be that.\nWould this be desirable?\n. ",
    "newtonianb": "This is badly needed\n. :+1: \n. thanks @silvenon, but I'm pulling my hair big time. I've tried several times following the instruction but the resulting files are not the latest from the repo everytime I don't understand where it's fetching these old files from!\n$ mkdir -p ~/yeoman-test/ && cd ~/yeoman-test/\n$ git clone git@github.com:yeoman/generator.git\n$ cd generator\n$ npm link\n$ cd ~/yeoman-test/\n$ git clone https://github.com/yeoman/generator-gulp-webapp.git\n$ cd generator-gulp-webapp && npm link\n$ cd ~/yeoman-test/\n$ git clone git@github.com:yeoman/generator-mocha.git\n$ cd generator-mocha && npm link\n$ cd ~/yeoman-test/generator/\n$ npm link generator-gulp-webapp\n$ npm link generator-mocha\n```\n$ mkdir -p ~/yeoman-test/webapp/ && cd ~/yeoman-test/webapp/\n$ yo --help\nDD@ER ~/yeoman-test/webapp\n$ yo --help\nUsage: yo GENERATOR [args] [options]\nGeneral options:\n  -h, --help     # Print generator's options and usage\n  -f, --force    # Overwrite files that already exist\nPlease choose a generator below.\nGulp-webapp\n  gulp-webapp:app\nMocha\n  mocha:app\nWebapp\n  webapp:app\n```\nyo gulp-webapp\n. This is badly needed\n. :+1: \n. thanks @silvenon, but I'm pulling my hair big time. I've tried several times following the instruction but the resulting files are not the latest from the repo everytime I don't understand where it's fetching these old files from!\n$ mkdir -p ~/yeoman-test/ && cd ~/yeoman-test/\n$ git clone git@github.com:yeoman/generator.git\n$ cd generator\n$ npm link\n$ cd ~/yeoman-test/\n$ git clone https://github.com/yeoman/generator-gulp-webapp.git\n$ cd generator-gulp-webapp && npm link\n$ cd ~/yeoman-test/\n$ git clone git@github.com:yeoman/generator-mocha.git\n$ cd generator-mocha && npm link\n$ cd ~/yeoman-test/generator/\n$ npm link generator-gulp-webapp\n$ npm link generator-mocha\n```\n$ mkdir -p ~/yeoman-test/webapp/ && cd ~/yeoman-test/webapp/\n$ yo --help\nDD@ER ~/yeoman-test/webapp\n$ yo --help\nUsage: yo GENERATOR [args] [options]\nGeneral options:\n  -h, --help     # Print generator's options and usage\n  -f, --force    # Overwrite files that already exist\nPlease choose a generator below.\nGulp-webapp\n  gulp-webapp:app\nMocha\n  mocha:app\nWebapp\n  webapp:app\n```\nyo gulp-webapp\n. ",
    "ryanluton": "Any Progress on this? \n. Hmmm.. I just did a completely vanilla build, only included sass and modernizer (left out bootstrap) and then followed all of the steps to build in nunjucks again, albeit With your modification. However, Im still not getting any rendering at all. Build leaves me without any html files, and serve drops me into the directory explorer in chrome. \n. Any Progress on this? \n. Hmmm.. I just did a completely vanilla build, only included sass and modernizer (left out bootstrap) and then followed all of the steps to build in nunjucks again, albeit With your modification. However, Im still not getting any rendering at all. Build leaves me without any html files, and serve drops me into the directory explorer in chrome. \n. ",
    "spoeken": "+1 for new release\n. @silvenon I get that there are more stuff that should be done, but as it is now the cache for imagemin doesn't work, so every time I want to use this generator I have to fix it first, only takes a few seconds tho. Like you say, linking it is a good alternative, quick and easy, but I would really appreciate if I could rely on npm instead of introducing git for managing npm modules I use in production. \n. All these beer emojis floating around, where can one buy you one?\n. It's the cache function wrapping imagemin. Removing it from the gulpfile will make it work, but all images will be minified every time you build. I tried updating the cache module, and now it works. I see that it's updated in the repo (to 0.2.2 at least), but not published to npm. Can someone run npm publish?\n. +1 for new release\n. @silvenon I get that there are more stuff that should be done, but as it is now the cache for imagemin doesn't work, so every time I want to use this generator I have to fix it first, only takes a few seconds tho. Like you say, linking it is a good alternative, quick and easy, but I would really appreciate if I could rely on npm instead of introducing git for managing npm modules I use in production. \n. All these beer emojis floating around, where can one buy you one?\n. It's the cache function wrapping imagemin. Removing it from the gulpfile will make it work, but all images will be minified every time you build. I tried updating the cache module, and now it works. I see that it's updated in the repo (to 0.2.2 at least), but not published to npm. Can someone run npm publish?\n. ",
    "anishjajodia": "+1 for new release.\n. Am really sorry @sindresorhus.\nAnd thanks a lot @francoiscote. That helped me out.\n. +1 for new release.\n. Am really sorry @sindresorhus.\nAnd thanks a lot @francoiscote. That helped me out.\n. ",
    "SBoudrias": "Made a first pass. Note that this probably need lots of unit tests!\n. Are you sure there's not in either this generator or generator-mocha a line missing this.async()?\n. I think that's fair - although maybe just make sure the error message is understandable by the end user.\n. @silvenon yeah, reasonable indeed :) Ship-it!\n. I like it, it definitively help reduce the style comments in code reviews. It's been working really well on the yeoman core packages.\n. @gaboesquivel I'm not sure, we could use the default we use on yeoman - or provide a prompt asking for the preferred styleguide?\n. It'd be nice to see how this could fit with a git pre-commit hook too.\n. I think we could just delete the grunt webapp and completely replace with this one. The other one is not really active anymore, so I think it'd be better to have fewer awesome generator then a lot of \"medium\" ones.\nWe could move forward by:\n1. Deleting generator-webapp repository\n2. Renaming generator-gulp-webapp repository\n3. Renaming generator-gulp-webapp to generator-webapp\n4. Publishing a major version bump of generator-webapp to npm\n5. Deprecating generator-gulp-webapp npm package in favor of generator-webapp\nMaybe we could keep the old Grunt generator-webapp in a legacy or grunt branch on the old repo. and publishing hotfixes if needed for a few months.\n. Okay, I'll get started on this later today.\n. Okay, legacy generator-webapp is backed up into the legacy-grunt branch\n. Temporarily renamed the legacy webapp repository to https://github.com/yeoman/generator-webapp_DEPRECATED\nThis allows us to access old ticket if need be. I think we can delete it in a week or two.\n. Deprecation warning for generator-gulp-webapp is up:\n$ npm i -g generator-gulp-webapp\nnpm WARN deprecated generator-gulp-webapp@1.1.1: Renamed generator-gulp-webapp to generator-webapp. Install the new version by running: npm install generator-webapp@^2.0.0\n. So, I think this issue is now completed. Successful migration!\n. @alxscms we do not unpublish old versions from npm.\n. :+1: - good update btw, I love all that red!\n. Made a first pass. Note that this probably need lots of unit tests!\n. Are you sure there's not in either this generator or generator-mocha a line missing this.async()?\n. I think that's fair - although maybe just make sure the error message is understandable by the end user.\n. @silvenon yeah, reasonable indeed :) Ship-it!\n. I like it, it definitively help reduce the style comments in code reviews. It's been working really well on the yeoman core packages.\n. @gaboesquivel I'm not sure, we could use the default we use on yeoman - or provide a prompt asking for the preferred styleguide?\n. It'd be nice to see how this could fit with a git pre-commit hook too.\n. I think we could just delete the grunt webapp and completely replace with this one. The other one is not really active anymore, so I think it'd be better to have fewer awesome generator then a lot of \"medium\" ones.\nWe could move forward by:\n1. Deleting generator-webapp repository\n2. Renaming generator-gulp-webapp repository\n3. Renaming generator-gulp-webapp to generator-webapp\n4. Publishing a major version bump of generator-webapp to npm\n5. Deprecating generator-gulp-webapp npm package in favor of generator-webapp\nMaybe we could keep the old Grunt generator-webapp in a legacy or grunt branch on the old repo. and publishing hotfixes if needed for a few months.\n. Okay, I'll get started on this later today.\n. Okay, legacy generator-webapp is backed up into the legacy-grunt branch\n. Temporarily renamed the legacy webapp repository to https://github.com/yeoman/generator-webapp_DEPRECATED\nThis allows us to access old ticket if need be. I think we can delete it in a week or two.\n. Deprecation warning for generator-gulp-webapp is up:\n$ npm i -g generator-gulp-webapp\nnpm WARN deprecated generator-gulp-webapp@1.1.1: Renamed generator-gulp-webapp to generator-webapp. Install the new version by running: npm install generator-webapp@^2.0.0\n. So, I think this issue is now completed. Successful migration!\n. @alxscms we do not unpublish old versions from npm.\n. :+1: - good update btw, I love all that red!\n. ",
    "Saturate": "I agree. It's seems really strange to include it.\nI'm hosting some sites on a IIS server, here it makes even less sense.\n. I agree. It's seems really strange to include it.\nI'm hosting some sites on a IIS server, here it makes even less sense.\n. ",
    "ghost": "I have no Idea why and how all this happened but creating an extra task to clear gulp-cache did the trick.\n``` js\ngulp.task('clear_cache', function (done) {\n    return $.cache.clearAll(done);\n});\ngulp.task('images', ['clear_cache'],function () {\n    return gulp.src('app/images/*/')\n        .pipe($.cache($.imagemin({\n            optimizationLevel: 3,\n            progressive: true,\n            interlaced: true\n        })))\n        .pipe(gulp.dest('dist/images'))\n        .pipe($.size());\n});\n```\nInteresting enough, as soon as I remove the clear_cache task again (I thought clearing the cache once would help) the error comes back.\nI guess it has to do with gulp's stream-nature.\nStill I would like to understand why is this happening when 2 days ago it was working perfectly without the need of clearing the cache.\nIf anyone of you guys have ideas on this please let me know.\nThnxs in advance\nReld \nPS: Sorry for the ugly text, I don't know how to make it pretty in here.\ncheers.\n. brilliant!\nthnx for the replay silvenon.\nReally appreciate it!\nAlso thank you for showing me how to style the code in the comment! top!\nI agree, would be great if we can find a solution or at least find the cause of this issue.\nEnjoy the day/evening/night\nBest\nReld. \n. great that the clear_cache task worked also for you guys / gal\n:+1: \nI was wondering if I was the only one having this issue :)\n. Hey guys/gals\nJust to let you know:\nI just updated the gulp-cache package from the generator-gulp-webapp's standard (0.1.11) to the latest version (0.2.2) just to test if this would have any impact on this issue and voila! it works again without the need of clearing the cache.\nI left the task inside my gulpfile so I can do \"gulp  clear_cache\" whenever needed.\nI cannot confirm anything about stability and if this solves the problem permanently.\nI'll keep u updated.\nCheers\nR\n. super cool.\nmy pleasure.\nenjoy the day.\n. Hello sindre, \nOk I will do that !\nThanks\n. @XavRsl thanks for the solution \n. For me personally, I served a dist copy, shut down the server, made some changes, and ran the command again, only to find my changes weren't there. Seems odd to have to explicitly build your app before serving the built copy. I found that frustrating. No worries if you don't add it in to the gen though, easy add on my side.\n. Sorry about the major lag! Rebased and ready to go.\n. Sorry, accidental click :(\n. I have no Idea why and how all this happened but creating an extra task to clear gulp-cache did the trick.\n``` js\ngulp.task('clear_cache', function (done) {\n    return $.cache.clearAll(done);\n});\ngulp.task('images', ['clear_cache'],function () {\n    return gulp.src('app/images/*/')\n        .pipe($.cache($.imagemin({\n            optimizationLevel: 3,\n            progressive: true,\n            interlaced: true\n        })))\n        .pipe(gulp.dest('dist/images'))\n        .pipe($.size());\n});\n```\nInteresting enough, as soon as I remove the clear_cache task again (I thought clearing the cache once would help) the error comes back.\nI guess it has to do with gulp's stream-nature.\nStill I would like to understand why is this happening when 2 days ago it was working perfectly without the need of clearing the cache.\nIf anyone of you guys have ideas on this please let me know.\nThnxs in advance\nReld \nPS: Sorry for the ugly text, I don't know how to make it pretty in here.\ncheers.\n. brilliant!\nthnx for the replay silvenon.\nReally appreciate it!\nAlso thank you for showing me how to style the code in the comment! top!\nI agree, would be great if we can find a solution or at least find the cause of this issue.\nEnjoy the day/evening/night\nBest\nReld. \n. great that the clear_cache task worked also for you guys / gal\n:+1: \nI was wondering if I was the only one having this issue :)\n. Hey guys/gals\nJust to let you know:\nI just updated the gulp-cache package from the generator-gulp-webapp's standard (0.1.11) to the latest version (0.2.2) just to test if this would have any impact on this issue and voila! it works again without the need of clearing the cache.\nI left the task inside my gulpfile so I can do \"gulp  clear_cache\" whenever needed.\nI cannot confirm anything about stability and if this solves the problem permanently.\nI'll keep u updated.\nCheers\nR\n. super cool.\nmy pleasure.\nenjoy the day.\n. Hello sindre, \nOk I will do that !\nThanks\n. @XavRsl thanks for the solution \n. For me personally, I served a dist copy, shut down the server, made some changes, and ran the command again, only to find my changes weren't there. Seems odd to have to explicitly build your app before serving the built copy. I found that frustrating. No worries if you don't add it in to the gen though, easy add on my side.\n. Sorry about the major lag! Rebased and ready to go.\n. Sorry, accidental click :(\n. ",
    "SheilaRuth": "I'm having the same issue, and adding the clear cache task fixed it for me as well.\n. Thanks for testing that out, RELD!\n. I'm having the same issue, and adding the clear cache task fixed it for me as well.\n. Thanks for testing that out, RELD!\n. ",
    "jaromero": "Further experimenting with this, I remember having another working project using generator-gulp-webapp v0.1.0, with connect v2.22.0. So going into the node_modules dir and running npm install connect@2.22.0 makes gulp watch and gulp-serve work again.\nconnect@2.22.0 uses serve-static@1.3.2 and send@0.6.0 so probably when send updated to require etag, things started breaking\n. It is a fresh install, yeah\n. A (temporary) workaround is now provided by Bootstrap, using overrides in bower.json:\nhttp://blog.getbootstrap.com/2015/06/15/bootstrap-3-3-5-released/#wiredep-and-bower\nFrom my tests, it works fine with the current wiredep. EDIT: or with main-bower-files anyway, which is what takes care of font files in this case.\nWhenever bower decides to provide a files field as well and bootstrap makes use of it, these overrides can be removed.\n. (Apologies for the multiple notifications)\nI've updated the _bower.json template here. I'm not convinced by the tests I added though, since I couldn't find a way to actually test for the result of the fonts task, only whether the bower.json file had the proper overrides (and even then, maybe I should've just checked for \"overrides\" instead of every single added line).\nIf the overrides workaround is acceptable though, and if this looks good, I'll just go ahead and submit the PR.\n. Sure, I can do that. It also works from what I saw. I had just done each font individually because that's what bootstrap's bower.json had before but it should not matter either way.\n. Done, and done.\n. Further experimenting with this, I remember having another working project using generator-gulp-webapp v0.1.0, with connect v2.22.0. So going into the node_modules dir and running npm install connect@2.22.0 makes gulp watch and gulp-serve work again.\nconnect@2.22.0 uses serve-static@1.3.2 and send@0.6.0 so probably when send updated to require etag, things started breaking\n. It is a fresh install, yeah\n. A (temporary) workaround is now provided by Bootstrap, using overrides in bower.json:\nhttp://blog.getbootstrap.com/2015/06/15/bootstrap-3-3-5-released/#wiredep-and-bower\nFrom my tests, it works fine with the current wiredep. EDIT: or with main-bower-files anyway, which is what takes care of font files in this case.\nWhenever bower decides to provide a files field as well and bootstrap makes use of it, these overrides can be removed.\n. (Apologies for the multiple notifications)\nI've updated the _bower.json template here. I'm not convinced by the tests I added though, since I couldn't find a way to actually test for the result of the fonts task, only whether the bower.json file had the proper overrides (and even then, maybe I should've just checked for \"overrides\" instead of every single added line).\nIf the overrides workaround is acceptable though, and if this looks good, I'll just go ahead and submit the PR.\n. Sure, I can do that. It also works from what I saw. I had just done each font individually because that's what bootstrap's bower.json had before but it should not matter either way.\n. Done, and done.\n. ",
    "SeeThruHead": "ok so it looks like gulp watch is what i'm supposed to be using for serving and watching my files, wiredep works for js inside gulp watch but does nothing for scss added to bower.json\n. ```\ngulp.task('wiredep', function () {\n    var wiredep = require('wiredep').stream;\ngulp.src('app/styles/*.scss')\n    .pipe(wiredep({\n        directory: 'app/bower_components'\n    }))\n    .pipe(gulp.dest('app/styles'));\n\ngulp.src('app/*.html')\n    .pipe(wiredep({\n        directory: 'app/bower_components'\n    }))\n    .pipe(gulp.dest('app'));\n\n});\n```\nthat's the config from yo gulp webapp, i haven't changed anything\nthe bower package i install is called 'scut'\n. ok, gulp watch triggers javascript dep injection for me, but does not work for scss, i believe because the scss template is missing the bower comment block, so wiredep doesn't know where to put the import statements.\n. so the problem for me lies when i don't include bootstrap, the \n// bower:scss\n// endbower\nisn't included even thought its contained in the template after \n}<% } else { %>\n. i was trying to fix this, but can't get my forked generator to work with npm link \n. ok so it looks like gulp watch is what i'm supposed to be using for serving and watching my files, wiredep works for js inside gulp watch but does nothing for scss added to bower.json\n. ```\ngulp.task('wiredep', function () {\n    var wiredep = require('wiredep').stream;\ngulp.src('app/styles/*.scss')\n    .pipe(wiredep({\n        directory: 'app/bower_components'\n    }))\n    .pipe(gulp.dest('app/styles'));\n\ngulp.src('app/*.html')\n    .pipe(wiredep({\n        directory: 'app/bower_components'\n    }))\n    .pipe(gulp.dest('app'));\n\n});\n```\nthat's the config from yo gulp webapp, i haven't changed anything\nthe bower package i install is called 'scut'\n. ok, gulp watch triggers javascript dep injection for me, but does not work for scss, i believe because the scss template is missing the bower comment block, so wiredep doesn't know where to put the import statements.\n. so the problem for me lies when i don't include bootstrap, the \n// bower:scss\n// endbower\nisn't included even thought its contained in the template after \n}<% } else { %>\n. i was trying to fix this, but can't get my forked generator to work with npm link \n. ",
    "raphinesse": "No, I was irritated by that too\n. Edited, squashed and ready to go :white_check_mark:\n. You're welcome.\n. No, I was irritated by that too\n. Edited, squashed and ready to go :white_check_mark:\n. You're welcome.\n. ",
    "jmcbee": "@josephdburdick You should replace //- build:js scripts/plugins.js with // build:js scripts/plugins.js. What you're having are called unbuffered commentzzz which won't create HTML comments for the useref module to find.\n1. compile jade to html\n2. parse html and search for userefs through the html comments\nThere's a recipe which tells you what to do.\n. @josephdburdick what? Why can't u find the underlying problem without it?\n. @josephdburdick You should replace //- build:js scripts/plugins.js with // build:js scripts/plugins.js. What you're having are called unbuffered commentzzz which won't create HTML comments for the useref module to find.\n1. compile jade to html\n2. parse html and search for userefs through the html comments\nThere's a recipe which tells you what to do.\n. @josephdburdick what? Why can't u find the underlying problem without it?\n. ",
    "pikeas": "Yes, working now. Chalking it up to new user error. :-)\n. But perhaps the wiredep task should be added as a dependency of the build task?\n. @silvenon Fair point, but consider the first use experience. jQuery has not yet been pulled, because it's a sub-dependency of Bootstrap and not listed in bower.json. So it will never be pulled in by the watch task - instead the user has to gulp wiredep manually.\n. I just did the following:\nnpm install -g git+https://git@github.com/yeoman/generator-gulp-webapp.git\nmkdir test; cd test;\nyo gulp-webapp\nHere's the bower.json which was created:\n{\n  \"name\": \"test\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass-official\": \"~3.2.0\",\n    \"modernizr\": \"~2.8.1\"\n  }\n}\nThe generator emits the following message: I'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\nIt did not run bower install or npm install automatically, so I ran them myself. The message doesn't suggest running gulp wiredep.\n. Everything seems to be in order. But I assume you have a more formal review process before doing a huge bump, which most of these are. :-)\n. Yes, working now. Chalking it up to new user error. :-)\n. But perhaps the wiredep task should be added as a dependency of the build task?\n. @silvenon Fair point, but consider the first use experience. jQuery has not yet been pulled, because it's a sub-dependency of Bootstrap and not listed in bower.json. So it will never be pulled in by the watch task - instead the user has to gulp wiredep manually.\n. I just did the following:\nnpm install -g git+https://git@github.com/yeoman/generator-gulp-webapp.git\nmkdir test; cd test;\nyo gulp-webapp\nHere's the bower.json which was created:\n{\n  \"name\": \"test\",\n  \"private\": true,\n  \"dependencies\": {\n    \"bootstrap-sass-official\": \"~3.2.0\",\n    \"modernizr\": \"~2.8.1\"\n  }\n}\nThe generator emits the following message: I'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\nIt did not run bower install or npm install automatically, so I ran them myself. The message doesn't suggest running gulp wiredep.\n. Everything seems to be in order. But I assume you have a more formal review process before doing a huge bump, which most of these are. :-)\n. ",
    "mohsen1": "Updating to latest bower fixed my issue\n. I forgot to mention that I removed global generator-karma too\n. Updating to latest bower fixed my issue\n. I forgot to mention that I removed global generator-karma too\n. ",
    "maximerassi": "We have been discussing this issue in our team for quite some time. Ultimately we decided to minify HTML as it can significantly both reduce page transfer time over the network but also rendering speed and stability especially on mobile devices (what the user would perceive as browser freeze time during rendering). \nFYI, Google Search minifies their HTML content and so does Facebook. It's definitely an optimization that becomes increasingly important as the page gets bigger however as @austinpray pointed out, it can cause bugs for some people so it shouldn't be a solution for everyone. \nview-source:https://www.google.com/?gws_rd=ssl#q=test\nview-source:https://www.facebook.com/\nIn conclusion, even though we recommend minifying HTML, I also disagree it should be part of a generic build process that is used by everyone. This extra step should be decided on a case by case basis by the developer as it can introduce bugs.\nAs a compromise I would suggest to add it to the production build process to show people how to do it but leave it commented by default.\n. Some tests\nraw: 36,862 bytes\ngzip: 7,877 bytes\nvs\nraw minified: 30,323 bytes\ngzip & minified: 6,705 bytes\nAlso to take into consideration, bandwidth costs does add up on large scale. If you can save a few kb per page per user and ultimately save on bandwidth costs and keep the bugs under control, why not.\nAs @mrtonyhuynh pointed out, Google Page Speed does recommend it and ultimately the company behind it Google is the one indexing your page and ranking it based on a number of factors including page load time.\n. Here we are just talking about network payload, this is not the full picture. Since this is web development, all browser & devices should be taken into account. \n1. Compatibility & Caching. It looks like most modern browser supports it but what about mobile browsers, you would hope so? Even if they do, the cache on these devices have a limit, and that limit is not based on the size of the gzip but the size of the page after unzipping. \n2. Overall processing: Take a heavy 5 MB gzipped to 1 MB, so you saved some transfer load. Without minifying the user browser/device will still have to uncompress and then be dealing & rendering with that uncompressed 5 MB chunk which you had the chance to optimize. There is no point in sending over all your HTML comments and white space formatting to a user. If you argue you shouldn't minify HTML because we have GZIP, then you shouldn't minify your CSS either for the same reason.\n   http://kb.siteground.com/how_to_compress_my_css_with_gzip/\nIt would be great to have this discussion continued on Google Developer Community where the experts at Google Page Speed can give their reasons. Google Page Speed still has HTML minification as one of the checks to fully pass.\n \n\nData compression 101\nOnce we\u2019ve eliminated any unnecessary resources, the next step is to minimize the total size of the \nremaining resources the browser has to download - i.e. compress them. Depending on the resource \ntype - text, images, fonts, and so on - we have a number of different techniques at our disposal: \ngeneric tools that can be enabled on the server, pre-processing optimizations for specific content-\ntypes, and resource specific optimizations that require input from the developer.\nDelivering the best performance requires the combination of all of these techniques.\nTL;DR\nCompression is the process of encoding information using fewer bits\nEliminating unnecessary data always yields the best results\nThere are many different compression techniques and algorithms\nYou will need a variety of techniques to achieve the best compression\n\nhttps://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer\n. We have been discussing this issue in our team for quite some time. Ultimately we decided to minify HTML as it can significantly both reduce page transfer time over the network but also rendering speed and stability especially on mobile devices (what the user would perceive as browser freeze time during rendering). \nFYI, Google Search minifies their HTML content and so does Facebook. It's definitely an optimization that becomes increasingly important as the page gets bigger however as @austinpray pointed out, it can cause bugs for some people so it shouldn't be a solution for everyone. \nview-source:https://www.google.com/?gws_rd=ssl#q=test\nview-source:https://www.facebook.com/\nIn conclusion, even though we recommend minifying HTML, I also disagree it should be part of a generic build process that is used by everyone. This extra step should be decided on a case by case basis by the developer as it can introduce bugs.\nAs a compromise I would suggest to add it to the production build process to show people how to do it but leave it commented by default.\n. Some tests\nraw: 36,862 bytes\ngzip: 7,877 bytes\nvs\nraw minified: 30,323 bytes\ngzip & minified: 6,705 bytes\nAlso to take into consideration, bandwidth costs does add up on large scale. If you can save a few kb per page per user and ultimately save on bandwidth costs and keep the bugs under control, why not.\nAs @mrtonyhuynh pointed out, Google Page Speed does recommend it and ultimately the company behind it Google is the one indexing your page and ranking it based on a number of factors including page load time.\n. Here we are just talking about network payload, this is not the full picture. Since this is web development, all browser & devices should be taken into account. \n1. Compatibility & Caching. It looks like most modern browser supports it but what about mobile browsers, you would hope so? Even if they do, the cache on these devices have a limit, and that limit is not based on the size of the gzip but the size of the page after unzipping. \n2. Overall processing: Take a heavy 5 MB gzipped to 1 MB, so you saved some transfer load. Without minifying the user browser/device will still have to uncompress and then be dealing & rendering with that uncompressed 5 MB chunk which you had the chance to optimize. There is no point in sending over all your HTML comments and white space formatting to a user. If you argue you shouldn't minify HTML because we have GZIP, then you shouldn't minify your CSS either for the same reason.\n   http://kb.siteground.com/how_to_compress_my_css_with_gzip/\nIt would be great to have this discussion continued on Google Developer Community where the experts at Google Page Speed can give their reasons. Google Page Speed still has HTML minification as one of the checks to fully pass.\n \n\nData compression 101\nOnce we\u2019ve eliminated any unnecessary resources, the next step is to minimize the total size of the \nremaining resources the browser has to download - i.e. compress them. Depending on the resource \ntype - text, images, fonts, and so on - we have a number of different techniques at our disposal: \ngeneric tools that can be enabled on the server, pre-processing optimizations for specific content-\ntypes, and resource specific optimizations that require input from the developer.\nDelivering the best performance requires the combination of all of these techniques.\nTL;DR\nCompression is the process of encoding information using fewer bits\nEliminating unnecessary data always yields the best results\nThere are many different compression techniques and algorithms\nYou will need a variety of techniques to achieve the best compression\n\nhttps://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer\n. ",
    "ridhoq": ":+1: \n. :+1: \n. ",
    "Trost123": "I came up into bunch of troubles while using <br> tags like this: <h1>Foo<br> bar1 bar2</h1>, because any whitespace after <br> gets removed and I get \"Foobar1 bar2\" if I copy the text.\nconservativeCollapse:true fixed it for me.\n. It's not about spacing between elements.\nHere is my situation:\n<h1>Foo<br> bar1 bar2</h1>\n(H1 is floated to right, and the designer wants the line to break after first word)\nExample http://prntscr.com/ccowlp\nAfter minification I get:\n<h1>Foo<br>bar1 bar2</h1>\nSpace before bar1 is removed. This looks the same, but if you try to copy h1, it gets copied as \"Foobar1 bar2\" (which is bad for SEO, right?), where with conservativeCollapse it's \"Foo bar1 bar2\" as expected.\n. I guess I'm just misusing the 'br' tag.\nSorry for overreacting, modified/deleted previous posts accordingly.\n. Here is what I did to fetch the images from bower modules into \"images\" folder:\ngulp.task('images', () => {\n  return gulp.src(require('main-bower-files')('**/*.{png,gif,jpg}', function (err) {})\n      .concat(['app/images/**/*']))\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\n. Right now if you have more than one .html generated, you get multiple calls to browsersync (one for each generated html).\nSo if my website consists of 5 pages, every time I edit one, browsersync will refresh 5 times for each html generated.\nWhat fixed it for me:\n1)\ngulp.watch([\n  .tmp/*.html //Remove this\n]).on('change', reload);\n2)\ngulp.watch('app/**/*.njk', ['nunjucks', reload]); //Add the reload here\nAlso: \nWhy are we watching:\ngulp.watch('app/**/*.html', ['views']);\nMakes no sense to me.\n. Sure.\nPR: #583 \n. Alternatively, we could use run-sequence to run gulp tasks in sequence.\n. Tested it in my projects - works as expected.\nBut I'll push the dependency fix, just to make sure it's 100% fail-safe.\nP.s. I can also contribute implementations of: \n1. Gulp-critical (for inlining above-the fold css into html).\n2. Gulp-if (to skip copying of fonts to .tmp, if they already exist there).\n3. Gulp.spritesmith (sprite generation).\n4. Copying of bower image assets (that are listed in .bower main) to dist/images.\n4. Run-sequence (to do 'wiredep' before 'default').\nShould I add some of them to this (or seperate) PR, maybe add some of them to recipes?\n(Or maybe these are too situational, and you don't need them at all?)\n. I'm not sure is it notifies you about commits, so I'm bumping this.\n. I based this PR on my master branch  :-1: , but then I needed to push into master, so I closed this PR.\nAnother PR: #585\n. You can include HTML files in .njk files:\nhttps://mozilla.github.io/nunjucks/templating.html#include\nSo if you change an HTML, that is included, Nunjucks needs to compile again.\nNot sure if that's a common practice though. It was in the recipe when I found this repo, but I never used this.\nI actually removed this watcher in my fork:\ngulp.watch('app/**/*.html', ['views']);\nI just keep all partials as .njk and only refresh browser if HTML is changed.\nSo here we have 2 options:\n1)  Only refresh on HTML change, compile .njk on .njk change:\n```\ngulp.watch([\n      'app/.html', //watch for html's that don't use nunjucks, reload\n      'app/images//*',\n      '.tmp/fonts//'\n    ]).on('change', reload);\ngulp.watch('app/*/.njk', ['views']); //watch for nunjucks\n```\n2) For those who include html in .njk:\n```\ngulp.watch([\n    //removed original html watcher\n      'app/images//*',\n      '.tmp/fonts//*'\n    ]).on('change', reload);\ngulp.watch('app//*.html', ['views']); //compile njk on html change, reload is included in views task\n  gulp.watch('app//*.njk', ['views']);\n```\n. Also, right now if you change any .njk, all html files get rewritten, no matter what you change.\nI've fixed it in my fork:\ngulp.task('nunjucks', () => {\n  return gulp.src('app/*.njk')\n    .pipe($.plumber()) //Added plumber\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe($.cached('njkCache')) //Cache rendered html, drop unchanged HTML out of the pipe\n    .pipe($.print(function(filepath) {\n      return \"njk compiled: \" + filepath; //Logs into console, which files changed\n    }))\n    .pipe(gulp.dest('.tmp')) //write changed files\n    .pipe($.htmlhint()) // (optional) htmlhint changed files\n    .pipe($.htmlhint.reporter())\n    .pipe(reload({stream: true})); //reload browser\n});\nThis way if you change index.njk - only index.html is updated, if you change header.njk - all pages that include/import header.njk will get updated.\nNot sure if it's a good thing, or an over-optimizing.\n. I tried using this again and found out it still doesn't work properly.\n.pipe(reload({stream: true})); inside \"views\" task gets triggered too early for some unknown reason, so the user has to manually refresh the browser 2nd time too see the latest changes.\nExample: original_file.html>change1>save file>change2>save file, my browser will show the following: original_file>autoreload>original_file>autoreload>change1.\nIronically, the approach which you criticized for being unreliable in (#515) works like a charm for me though:\ngulp.watch('app/*/{html,njk}', ['views', reload]);\nI have multiple njk files depending on each other built, and the refresh is never triggered too early.\nIt's weird. This approach is wrong theoretically (because it's synchronous), but it works.\nI'm not sure what to do (PR-wise).. Oops! I think this PR was not a good solution.\nNow I hit this issue:\nhttps://github.com/BrowserSync/browser-sync/issues/717\nBasically, the guys who developed BS don't recommend using\ngulp.watch(jsSrc, ['js', browserSync.reload]); // no longer recommended\nas it causes some issues. (you can read the details there in their issue)\nMaybe we should revert this one. Sorry about the PR spam.. I use Nunjucks and had this bug. Spent more than a hour poking it.\nTo clarify: the scss files don't get deleted, but their contents do.\nI think the problem is running wiredep and clear in parallel.\nTry this:\n(in default task)\n-    runSequence(['clean', 'wiredep'], 'build', resolve);\n+    runSequence('clean', 'wiredep', 'build', resolve);\nAlso to reproduce this bug you delete the tmp and dist directories manually, before running \"default\".\nI think it happens when \"clean\" has nothing to clean and fires a complete event too early.\nMy guess is when this happens, build task starts before wiredep is complete.. Ok, I think finally\\accidentally figured this one out. When you add Pug or Nunjucks recipe, you need to also iclude\n.pipe($.filter(file => file.stat && file.stat.size))\nbefore\n.pipe(wiredep({\nbefore sending those files to wiredep. Wiredep seems to bug out on empty files and deleting contents of some file in pipe before crash.. Does magicsuggest compile into plugins.js if you don't include all those bootstrap js?\nThis way we could tell if the problem is high file count or magicsuggest\\datepicker lib.. You might want to look at gulp-cached or gulp-newer.\nIf I recall correctly, generator-webapp doesn't use any of above, therefore all files get processed each time.. I came up into bunch of troubles while using <br> tags like this: <h1>Foo<br> bar1 bar2</h1>, because any whitespace after <br> gets removed and I get \"Foobar1 bar2\" if I copy the text.\nconservativeCollapse:true fixed it for me.\n. It's not about spacing between elements.\nHere is my situation:\n<h1>Foo<br> bar1 bar2</h1>\n(H1 is floated to right, and the designer wants the line to break after first word)\nExample http://prntscr.com/ccowlp\nAfter minification I get:\n<h1>Foo<br>bar1 bar2</h1>\nSpace before bar1 is removed. This looks the same, but if you try to copy h1, it gets copied as \"Foobar1 bar2\" (which is bad for SEO, right?), where with conservativeCollapse it's \"Foo bar1 bar2\" as expected.\n. I guess I'm just misusing the 'br' tag.\nSorry for overreacting, modified/deleted previous posts accordingly.\n. Here is what I did to fetch the images from bower modules into \"images\" folder:\ngulp.task('images', () => {\n  return gulp.src(require('main-bower-files')('**/*.{png,gif,jpg}', function (err) {})\n      .concat(['app/images/**/*']))\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\n. Right now if you have more than one .html generated, you get multiple calls to browsersync (one for each generated html).\nSo if my website consists of 5 pages, every time I edit one, browsersync will refresh 5 times for each html generated.\nWhat fixed it for me:\n1)\ngulp.watch([\n  .tmp/*.html //Remove this\n]).on('change', reload);\n2)\ngulp.watch('app/**/*.njk', ['nunjucks', reload]); //Add the reload here\nAlso: \nWhy are we watching:\ngulp.watch('app/**/*.html', ['views']);\nMakes no sense to me.\n. Sure.\nPR: #583 \n. Alternatively, we could use run-sequence to run gulp tasks in sequence.\n. Tested it in my projects - works as expected.\nBut I'll push the dependency fix, just to make sure it's 100% fail-safe.\nP.s. I can also contribute implementations of: \n1. Gulp-critical (for inlining above-the fold css into html).\n2. Gulp-if (to skip copying of fonts to .tmp, if they already exist there).\n3. Gulp.spritesmith (sprite generation).\n4. Copying of bower image assets (that are listed in .bower main) to dist/images.\n4. Run-sequence (to do 'wiredep' before 'default').\nShould I add some of them to this (or seperate) PR, maybe add some of them to recipes?\n(Or maybe these are too situational, and you don't need them at all?)\n. I'm not sure is it notifies you about commits, so I'm bumping this.\n. I based this PR on my master branch  :-1: , but then I needed to push into master, so I closed this PR.\nAnother PR: #585\n. You can include HTML files in .njk files:\nhttps://mozilla.github.io/nunjucks/templating.html#include\nSo if you change an HTML, that is included, Nunjucks needs to compile again.\nNot sure if that's a common practice though. It was in the recipe when I found this repo, but I never used this.\nI actually removed this watcher in my fork:\ngulp.watch('app/**/*.html', ['views']);\nI just keep all partials as .njk and only refresh browser if HTML is changed.\nSo here we have 2 options:\n1)  Only refresh on HTML change, compile .njk on .njk change:\n```\ngulp.watch([\n      'app/.html', //watch for html's that don't use nunjucks, reload\n      'app/images//*',\n      '.tmp/fonts//'\n    ]).on('change', reload);\ngulp.watch('app/*/.njk', ['views']); //watch for nunjucks\n```\n2) For those who include html in .njk:\n```\ngulp.watch([\n    //removed original html watcher\n      'app/images//*',\n      '.tmp/fonts//*'\n    ]).on('change', reload);\ngulp.watch('app//*.html', ['views']); //compile njk on html change, reload is included in views task\n  gulp.watch('app//*.njk', ['views']);\n```\n. Also, right now if you change any .njk, all html files get rewritten, no matter what you change.\nI've fixed it in my fork:\ngulp.task('nunjucks', () => {\n  return gulp.src('app/*.njk')\n    .pipe($.plumber()) //Added plumber\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe($.cached('njkCache')) //Cache rendered html, drop unchanged HTML out of the pipe\n    .pipe($.print(function(filepath) {\n      return \"njk compiled: \" + filepath; //Logs into console, which files changed\n    }))\n    .pipe(gulp.dest('.tmp')) //write changed files\n    .pipe($.htmlhint()) // (optional) htmlhint changed files\n    .pipe($.htmlhint.reporter())\n    .pipe(reload({stream: true})); //reload browser\n});\nThis way if you change index.njk - only index.html is updated, if you change header.njk - all pages that include/import header.njk will get updated.\nNot sure if it's a good thing, or an over-optimizing.\n. I tried using this again and found out it still doesn't work properly.\n.pipe(reload({stream: true})); inside \"views\" task gets triggered too early for some unknown reason, so the user has to manually refresh the browser 2nd time too see the latest changes.\nExample: original_file.html>change1>save file>change2>save file, my browser will show the following: original_file>autoreload>original_file>autoreload>change1.\nIronically, the approach which you criticized for being unreliable in (#515) works like a charm for me though:\ngulp.watch('app/*/{html,njk}', ['views', reload]);\nI have multiple njk files depending on each other built, and the refresh is never triggered too early.\nIt's weird. This approach is wrong theoretically (because it's synchronous), but it works.\nI'm not sure what to do (PR-wise).. Oops! I think this PR was not a good solution.\nNow I hit this issue:\nhttps://github.com/BrowserSync/browser-sync/issues/717\nBasically, the guys who developed BS don't recommend using\ngulp.watch(jsSrc, ['js', browserSync.reload]); // no longer recommended\nas it causes some issues. (you can read the details there in their issue)\nMaybe we should revert this one. Sorry about the PR spam.. I use Nunjucks and had this bug. Spent more than a hour poking it.\nTo clarify: the scss files don't get deleted, but their contents do.\nI think the problem is running wiredep and clear in parallel.\nTry this:\n(in default task)\n-    runSequence(['clean', 'wiredep'], 'build', resolve);\n+    runSequence('clean', 'wiredep', 'build', resolve);\nAlso to reproduce this bug you delete the tmp and dist directories manually, before running \"default\".\nI think it happens when \"clean\" has nothing to clean and fires a complete event too early.\nMy guess is when this happens, build task starts before wiredep is complete.. Ok, I think finally\\accidentally figured this one out. When you add Pug or Nunjucks recipe, you need to also iclude\n.pipe($.filter(file => file.stat && file.stat.size))\nbefore\n.pipe(wiredep({\nbefore sending those files to wiredep. Wiredep seems to bug out on empty files and deleting contents of some file in pipe before crash.. Does magicsuggest compile into plugins.js if you don't include all those bootstrap js?\nThis way we could tell if the problem is high file count or magicsuggest\\datepicker lib.. You might want to look at gulp-cached or gulp-newer.\nIf I recall correctly, generator-webapp doesn't use any of above, therefore all files get processed each time.. ",
    "johnfumaster": "Nevermind.  I had another html file that had the wrong references.  stupid.\n. Nevermind.  I had another html file that had the wrong references.  stupid.\n. ",
    "Chyngyz": "This is the gulp build task running:\n```\n[15:02:56] Using gulpfile ~/myWorkspace/test/gulpfile.js\n[15:02:56] Starting 'clean'...\n[15:02:58] Finished 'clean' after 1.96 s\n[15:02:58] Starting 'default'...\n[15:02:58] Starting 'views'...\n[15:02:58] Starting 'styles'...\n[15:02:59] Starting 'scripts'...\n[15:03:02] Starting 'images'...\n[15:03:08] Starting 'fonts'...\n[15:03:09] [gulp-bower-files] DEPRECATED  Please use main-bower-files (http://npmjs.org/package/main-bower-files)\n[15:03:13] Starting 'extras'...\n[15:03:13] Finished 'default' after 14 s\n[15:03:13] gulp-size: total 0 B\n[15:03:13] Finished 'images' after 11 s\n[15:03:13] gulp-size: total 30 B\n[15:03:13] Finished 'scripts' after 14 s\n[15:03:13] Finished 'views' after 15 s\n[15:03:13] Finished 'extras' after 211 ms\n[15:03:13] gulp-size: total 147.86 kB\n[15:03:13] Finished 'fonts' after 4.78 s\n[15:03:15] gulp-size: total 128.15 kB\n[15:03:15] Finished 'styles' after 17 s\n[15:03:15] Starting 'html'...\nevents.js:74\n        throw TypeError('Uncaught, unspecified \"error\" event.');\n              ^\nTypeError: Uncaught, unspecified \"error\" event.\n    at TypeError ()\n    at Transform.emit (events.js:74:15)\n    at Transform.onerror (/home/chyngyz/myWorkspace/test/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:558:12)\n    at Transform.emit (events.js:95:17)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:76:42)\n    at Array.forEach (native)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:66:35)\n    at Array.forEach (native)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:44:36)\n    at Array.forEach (native)\n``\n. Jade was added according to Jade Recipe, 'watch' and 'serve' tasks work without any problems. \n. Yes, @francoiscote  and @silvenon  you were right. Gulp-useref was given wrong paths to _bower_components_ directory in layout.jade. They all should besrc='bower_components/...notsrc='../bower_components/...`, @silvenon update needed in Jade recipe - layout.jade.\n@francoiscote , @silvenon  thanks very much. Issue is closed\n. This is the gulp build task running:\n```\n[15:02:56] Using gulpfile ~/myWorkspace/test/gulpfile.js\n[15:02:56] Starting 'clean'...\n[15:02:58] Finished 'clean' after 1.96 s\n[15:02:58] Starting 'default'...\n[15:02:58] Starting 'views'...\n[15:02:58] Starting 'styles'...\n[15:02:59] Starting 'scripts'...\n[15:03:02] Starting 'images'...\n[15:03:08] Starting 'fonts'...\n[15:03:09] [gulp-bower-files] DEPRECATED  Please use main-bower-files (http://npmjs.org/package/main-bower-files)\n[15:03:13] Starting 'extras'...\n[15:03:13] Finished 'default' after 14 s\n[15:03:13] gulp-size: total 0 B\n[15:03:13] Finished 'images' after 11 s\n[15:03:13] gulp-size: total 30 B\n[15:03:13] Finished 'scripts' after 14 s\n[15:03:13] Finished 'views' after 15 s\n[15:03:13] Finished 'extras' after 211 ms\n[15:03:13] gulp-size: total 147.86 kB\n[15:03:13] Finished 'fonts' after 4.78 s\n[15:03:15] gulp-size: total 128.15 kB\n[15:03:15] Finished 'styles' after 17 s\n[15:03:15] Starting 'html'...\nevents.js:74\n        throw TypeError('Uncaught, unspecified \"error\" event.');\n              ^\nTypeError: Uncaught, unspecified \"error\" event.\n    at TypeError ()\n    at Transform.emit (events.js:74:15)\n    at Transform.onerror (/home/chyngyz/myWorkspace/test/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:558:12)\n    at Transform.emit (events.js:95:17)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:76:42)\n    at Array.forEach (native)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:66:35)\n    at Array.forEach (native)\n    at Transform. (/home/chyngyz/myWorkspace/test/node_modules/gulp-useref/index.js:44:36)\n    at Array.forEach (native)\n``\n. Jade was added according to Jade Recipe, 'watch' and 'serve' tasks work without any problems. \n. Yes, @francoiscote  and @silvenon  you were right. Gulp-useref was given wrong paths to _bower_components_ directory in layout.jade. They all should besrc='bower_components/...notsrc='../bower_components/...`, @silvenon update needed in Jade recipe - layout.jade.\n@francoiscote , @silvenon  thanks very much. Issue is closed\n. ",
    "francoiscote": "Maybe I'm wrong, but I think this is the error thrown when useref cannot find a file referenced in your html. Would that be the case ?\n. It seems you don't follow the latest gulp-useref syntax when filter/restoring the assets:\nThis doesn't work:\njavascript\nreturn gulp.src('app/*.html')\n        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n        .pipe($.useref.assets().restore())\n        .pipe($.useref())\n        .pipe(gulp.dest('dist'))\nThis works (see this generator's latest gulpfile.js as a reference):\njavascript\nvar assets = $.useref.assets({searchPath: '{.tmp,app}'}); \nreturn gulp.src('app/*.html')\n        .pipe(assets)\n        .pipe(assets.restore())\n        .pipe($.useref())\n        .pipe(gulp.dest('dist'))\n. The bootstrap mixins use Sass' Variable Arguments, which where introduced in Sass 3.2. \nCheck your Sass version.\n. Like @silvenon said, this is not a default behavior. You have to set it up.\nIn our case, Browser-sync provides the server. Take a look at the documentation, you can add a directory: true option to BrowserSync in the serve task of the gulpfile.\n. Maybe I'm wrong, but I think this is the error thrown when useref cannot find a file referenced in your html. Would that be the case ?\n. It seems you don't follow the latest gulp-useref syntax when filter/restoring the assets:\nThis doesn't work:\njavascript\nreturn gulp.src('app/*.html')\n        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n        .pipe($.useref.assets().restore())\n        .pipe($.useref())\n        .pipe(gulp.dest('dist'))\nThis works (see this generator's latest gulpfile.js as a reference):\njavascript\nvar assets = $.useref.assets({searchPath: '{.tmp,app}'}); \nreturn gulp.src('app/*.html')\n        .pipe(assets)\n        .pipe(assets.restore())\n        .pipe($.useref())\n        .pipe(gulp.dest('dist'))\n. The bootstrap mixins use Sass' Variable Arguments, which where introduced in Sass 3.2. \nCheck your Sass version.\n. Like @silvenon said, this is not a default behavior. You have to set it up.\nIn our case, Browser-sync provides the server. Take a look at the documentation, you can add a directory: true option to BrowserSync in the serve task of the gulpfile.\n. ",
    "SundarRajS": "``` js\ngulp.task('html',function(){\n  return gulp.src('app/*/.html')\n.pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n   // Concatenate And Minify JavaScript\n    .pipe($.if('.js', $.uglify({\n     preserveComments: 'some'\n    })))\n    // Concatenate And Minify Styles\n    .pipe($.if('.css', $.csso()))\n    .pipe($.useref.restore())\n    .pipe($.useref())\n    // Update Production Style Guide Paths\n    .pipe($.replace('styles/main.css'))\n    // Minify Any HTML Output Files\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'html'}));\n});\n```\nfacing issue as \nevents.js:74\n        throw TypeError('Uncaught, unspecified \"error\" event.');\n              ^\nTypeError: Uncaught, unspecified \"error\" event.\n    at TypeError (<anonymous>)\n    at Transform.emit (events.js:74:15)\nhas any one came across this issue in gulp-useref \nplease suggest what could be the source of issue and how to fix this \nThanks\nSundar\n. ``` js\ngulp.task('html',function(){\n  return gulp.src('app/*/.html')\n.pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n   // Concatenate And Minify JavaScript\n    .pipe($.if('.js', $.uglify({\n     preserveComments: 'some'\n    })))\n    // Concatenate And Minify Styles\n    .pipe($.if('.css', $.csso()))\n    .pipe($.useref.restore())\n    .pipe($.useref())\n    // Update Production Style Guide Paths\n    .pipe($.replace('styles/main.css'))\n    // Minify Any HTML Output Files\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'html'}));\n});\n```\nfacing issue as \nevents.js:74\n        throw TypeError('Uncaught, unspecified \"error\" event.');\n              ^\nTypeError: Uncaught, unspecified \"error\" event.\n    at TypeError (<anonymous>)\n    at Transform.emit (events.js:74:15)\nhas any one came across this issue in gulp-useref \nplease suggest what could be the source of issue and how to fix this \nThanks\nSundar\n. ",
    "stefanbuck": "Hi @rizqinizamil,\nthe generator-gulp-webapp generates just front-end files without any backend. You can use the search on the yeoman site to find a generator which fits to your needs.\nIf you are interested in creating your own generator take a look at this page http://yeoman.io/authoring/\n. Hi @rizqinizamil,\nthe generator-gulp-webapp generates just front-end files without any backend. You can use the search on the yeoman site to find a generator which fits to your needs.\nIf you are interested in creating your own generator take a look at this page http://yeoman.io/authoring/\n. ",
    "isaacalves": "You can create a server with gulp-connect-php and use it as BrowserSync proxy.\ngulp.task('connect-php', function() {\n  connectPHP.server({\n    hostname: '0.0.0.0',\n    bin: '/Applications/MAMP/bin/php/php5.5.3/bin/php',\n    ini: '/Applications/MAMP/bin/php/php5.5.3/conf/php.ini',\n    port: 8000,\n    base: 'dev'\n  });\n});\n```\ngulp.task('serve-php',  ['styles','connect-php'],function () {\n  browserSync({\n    proxy: \"localhost:8000\"\n  });\n// watch for changes\n  gulp.watch([\n    'app/.php',\n    'app/styles//*.css',\n    'app/scripts//.js',\n    'app/images/*/'\n  ]).on('change', reload);\ngulp.watch('app/styles/*/.scss', ['styles, reload]);\n  gulp.watch('bower.json', ['wiredep', 'fonts', reload]);\n});\n```\nI haven't figured out yet how to support multiple base directories and routes, though.\nI've just posted about it: http://stackoverflow.com/questions/27990781/gulp-webapp-running-browsersync-and-php\n. I had that too then I realized no sourcemaps plugin was installed in this new release. So I just installed gulp-sourcemaps and used it in the styles task in the following way:\ngulp.task('styles', function () {\n  return gulp.src('app/styles/main.scss')\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      outputStyle: 'nested', // libsass doesn't support expanded yet\n      precision: 10,\n      includePaths: ['.'],\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'));\n});\n. You can create a server with gulp-connect-php and use it as BrowserSync proxy.\ngulp.task('connect-php', function() {\n  connectPHP.server({\n    hostname: '0.0.0.0',\n    bin: '/Applications/MAMP/bin/php/php5.5.3/bin/php',\n    ini: '/Applications/MAMP/bin/php/php5.5.3/conf/php.ini',\n    port: 8000,\n    base: 'dev'\n  });\n});\n```\ngulp.task('serve-php',  ['styles','connect-php'],function () {\n  browserSync({\n    proxy: \"localhost:8000\"\n  });\n// watch for changes\n  gulp.watch([\n    'app/.php',\n    'app/styles//*.css',\n    'app/scripts//.js',\n    'app/images/*/'\n  ]).on('change', reload);\ngulp.watch('app/styles/*/.scss', ['styles, reload]);\n  gulp.watch('bower.json', ['wiredep', 'fonts', reload]);\n});\n```\nI haven't figured out yet how to support multiple base directories and routes, though.\nI've just posted about it: http://stackoverflow.com/questions/27990781/gulp-webapp-running-browsersync-and-php\n. I had that too then I realized no sourcemaps plugin was installed in this new release. So I just installed gulp-sourcemaps and used it in the styles task in the following way:\ngulp.task('styles', function () {\n  return gulp.src('app/styles/main.scss')\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      outputStyle: 'nested', // libsass doesn't support expanded yet\n      precision: 10,\n      includePaths: ['.'],\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'));\n});\n. ",
    "aliismayilov": "@sindresorhus I've implemented your notes.\ngulp publish task name came from the original plugin README.\n. @sindresorhus done: e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3\n. @sindresorhus I've implemented your notes.\ngulp publish task name came from the original plugin README.\n. @sindresorhus done: e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3\n. ",
    "Angelfire": "@silvenon Yes sr, Sass and Modernizr are on\n\ngenerator-gulp-webapp 0.2.0\n\nNode:\n\nv0.10.33\n. @mhchen Thanks for the tip. I did a new install after install Bower and all works  fine.\n. @silvenon Yes sr, Sass and Modernizr are on\ngenerator-gulp-webapp 0.2.0\n\nNode:\n\nv0.10.33\n. @mhchen Thanks for the tip. I did a new install after install Bower and all works  fine.\n. \n",
    "mhchen": "FYI this solution might be too simple, but I was trying this generator out on a new VM and it failed with this exact error message. I didn't have bower installed (npm install -g bower), and installing it resolved the issue. Somewhat unlikely that's the issue for you but maybe double check?\n. FYI this solution might be too simple, but I was trying this generator out on a new VM and it failed with this exact error message. I didn't have bower installed (npm install -g bower), and installing it resolved the issue. Somewhat unlikely that's the issue for you but maybe double check?\n. ",
    "ragingwind": ":+1: \n. Great job guys :tada: \n. :+1: \n. Great job guys :tada: \n. ",
    "gpedro": "in generator(grunt)-webapp it's by default\nhttps://github.com/yeoman/generator-webapp/blob/master/app/templates/Gruntfile.js#L255-L268\n. @silvenon I got it! but my english is very bad to write a recipe.\nhttps://github.com/gpedro/presentation-git-github/blob/master/gulpfile.js#L11-L24\nyou just need gulp-stylus and gulp-util.\n. in generator(grunt)-webapp it's by default\nhttps://github.com/yeoman/generator-webapp/blob/master/app/templates/Gruntfile.js#L255-L268\n. @silvenon I got it! but my english is very bad to write a recipe.\nhttps://github.com/gpedro/presentation-git-github/blob/master/gulpfile.js#L11-L24\nyou just need gulp-stylus and gulp-util.\n. ",
    "hivre": "I'm working on a solution using gulp-rev-all (see: https://github.com/smysnk/gulp-rev-all)\nIt looks like it can rev all assets in a smart manner.\nI'll make a pull-request once I have it successfully working on my local install, should be around this weekend\n. I have a first-setup working, but there's a bug that rev-all can't rewrite references in minified html files. Also, the current setup leaves revved and unrevved files in the dist (the latter should get removed)\nA simple solution would be to move the html-minify line to a separate task, and use something like gulp-napkin to remove unrevved files. \nBut what I'd like to propose is a little bit more involved than the most simple solution:\n- split the html task in a dedicated html task and a separate minify task and minify-html task\n- the html-task at this moment would be rather empty (but you could add html-hint etc. it also makes extending it easier)\n- the minify task will do all (and only) minification, except html files. \n- write all minified files to /.tmp\n- build reads /.tmp and revs it, then minifies html files.\nI prefer this as it separates .tmp and dist more, thus not needing an additional gulp-plugin (aside from the extendability that granular separate tasks provide). and the naming of the html-task is off, it only does minification atm.\nBut I don't want to hijack this either, and there are probably a few other solutions available.\n. hmm, strike that task. \nI personally use it for aria and html linting, but I see that's my own addition...\nSo:\n- split the html task in ~~a dedicated html task and~~ a separate minify task and minify-html task\n. My vision is:\nstart build -> copy[*]/minify() -> dest(.tmp) -> rev(.tmp) -> dest(dist) -> minifyHtml(dist)\nThat way the dist always has the latest and greatest, ready for deployment. The .tmp is a temporary dir where we collect everything before we rev it and copy it to dist.\nBut I am also happy to see if gulp-napkin works as expected and use that to clean up the non-revved copies of files in dist, and leave the current situation as is.\n[*] files we can't minify should just get copied.\n. pull-request #293 uses the short-solution:\nIt uses gulp-rev-napkin to get rid of duplicate, un-revved files. This solution makes little changes to the gulp-file.\nI have never done any testing -- I know, rather shamefull -- but I'm using this on my own project, and it works.\n. wasn't aware of gulp-rev-replace. \nI'll try it out asap.\n. I tried out gulp-rev-replace, ~~but can't get it to work.~~ I just noticed a stupid mistake on my part, will try again ASAP.\nTbh. I can see rev-napkin not being updated if it works well. it's only 111 lines of code...\n. I've got something with rev-replace running, but it actually removes the revved files, and leaves the un-revved files alone. Exactly the opposite we want :)\nMight be my current implementation, I'm not using a manifest file. When I did that, I got an undefined error, most likely because the file doesn't exist (is in the stream) when it's used. Probably can get around this by creating a separate task, like in the rev-replace example. But that's precisely what I'm trying not to do. \n. @silvenon  that's actually what I'm doing :) All in the same stream...\n@sondr3 rev-all already replaces the references. I use napkin to remove un-revved files only.  \nI should learn how to read:\n```\n\n\"Rewrite occurences of filenames which have been renamed by gulp-rev\" \n```\n\nWe don't need that. gulp-rev-all does this for us. Since gulp-rev-all takes child-references in account for its hashing, it's objectively better than gulp-rev (and it saves a dependency, which is a nice bonus.)\nSince we export all files to /dist, and then rev it, we get: \n|-index.html\n |-index.3432.html\n |-img\n   |-logo.png\n   |-logo.2343.png\ngulp-napkin then removes the (duplicate) unrevved files. \n|-index.3432.html\n |-img\n   |-logo.2343.png\nDepending on the ignore list, it removes only the files that are actually revved. Thus in my defaults it ignores index.html in revving, gulp-napkin will leave index.html untouched. \nHowever, like I said in an earlier post, if we export all files to /.tmp and then do gulp-rev-all and export to /dist we don't need gulp-napkin. \n. > But that's not really a problem if you properly do the tasks that will fix the assets, I never have non-revved assets in my dist-folder so gulp-napkin shouldn't be necessary at all. You need to take a look at the other tasks and maybe have them move their assets to a .tmp folder and move the revved files into the dist folder, that way you have no need for gulp-napkin.\nI will friendly refer you to my earlier message of 4 hours ago, which literally mentions this in the last sentence, or the message of 5 days ago where I mention this as well.\n\nAlso, I thought that gulp-rev just renames the files itself but doesn't rename the references in the HTML, in other words you'll end up with the CSS that is being called still being named main.css while the one that you want is actually main-0b819as.css.\n\nI'm not using gulp-rev, but gulp-rev-all.  gulp-rev-all takes child-references into account for its hashing, therefore it's better than gulp-rev (and it saves us from  the dependency on gulp-rev-replace, which is a nice bonus.)\n\nHave you tried live serving your site after you've removed the non-revved files? AFAIK it should try to serve assets that do not exist since they reference the old files.\n\nI can recommend that you try it as well, you'll see how remarkably well it works :smile: \n. I'm sorry for the non-response. I'm picking this up today\n. I'm sorry for the lack of communications. Startup collapsed, new job busy which didn't have any programming. \nIf it is still needed, i'm happy to finish this. I noticed a new version of the revving plugins that solve some issues we had before.\n. Great.\nI'll pick this up this weekend. \n. see #360 for a new attempt.\nfrom an earlier comment:\n\n\nI noticed there's a new version of gulp-rev-all with some breaking changes, would you care to update to the latest version?\n\n\ndone\n\n\nThe output seems a bit too verbose. Perhaps silent is best? I think the new option is called debug, so perhaps set that to false.\n\n\ndone (set debug: true in the options list to get it back)\nClose this one?\n. I looked into using gulp-rev.\nFor it to replace rev-all, you need to use gulp-rev, rev-replace, rev-css-url. (I'm assuming the .tmp setup as in this PR works a expected)\nIt adds complexity but also flexibility. \nThe problem I'm at, after 45mins of Googling, is how to make exceptions for e.g. favicon or index.html. I can't find it, unless you use a filter() function.\n. @silvenon @alferov is the \"no blacklisted modules\" a hard line? \nBecause with gulp-rev et al. it's going to be a lot more complicated... \n. I'm working on a solution using gulp-rev-all (see: https://github.com/smysnk/gulp-rev-all)\nIt looks like it can rev all assets in a smart manner.\nI'll make a pull-request once I have it successfully working on my local install, should be around this weekend\n. I have a first-setup working, but there's a bug that rev-all can't rewrite references in minified html files. Also, the current setup leaves revved and unrevved files in the dist (the latter should get removed)\nA simple solution would be to move the html-minify line to a separate task, and use something like gulp-napkin to remove unrevved files. \nBut what I'd like to propose is a little bit more involved than the most simple solution:\n- split the html task in a dedicated html task and a separate minify task and minify-html task\n- the html-task at this moment would be rather empty (but you could add html-hint etc. it also makes extending it easier)\n- the minify task will do all (and only) minification, except html files. \n- write all minified files to /.tmp\n- build reads /.tmp and revs it, then minifies html files.\nI prefer this as it separates .tmp and dist more, thus not needing an additional gulp-plugin (aside from the extendability that granular separate tasks provide). and the naming of the html-task is off, it only does minification atm.\nBut I don't want to hijack this either, and there are probably a few other solutions available.\n. hmm, strike that task. \nI personally use it for aria and html linting, but I see that's my own addition...\nSo:\n- split the html task in ~~a dedicated html task and~~ a separate minify task and minify-html task\n. My vision is:\nstart build -> copy[*]/minify() -> dest(.tmp) -> rev(.tmp) -> dest(dist) -> minifyHtml(dist)\nThat way the dist always has the latest and greatest, ready for deployment. The .tmp is a temporary dir where we collect everything before we rev it and copy it to dist.\nBut I am also happy to see if gulp-napkin works as expected and use that to clean up the non-revved copies of files in dist, and leave the current situation as is.\n[*] files we can't minify should just get copied.\n. pull-request #293 uses the short-solution:\nIt uses gulp-rev-napkin to get rid of duplicate, un-revved files. This solution makes little changes to the gulp-file.\nI have never done any testing -- I know, rather shamefull -- but I'm using this on my own project, and it works.\n. wasn't aware of gulp-rev-replace. \nI'll try it out asap.\n. I tried out gulp-rev-replace, ~~but can't get it to work.~~ I just noticed a stupid mistake on my part, will try again ASAP.\nTbh. I can see rev-napkin not being updated if it works well. it's only 111 lines of code...\n. I've got something with rev-replace running, but it actually removes the revved files, and leaves the un-revved files alone. Exactly the opposite we want :)\nMight be my current implementation, I'm not using a manifest file. When I did that, I got an undefined error, most likely because the file doesn't exist (is in the stream) when it's used. Probably can get around this by creating a separate task, like in the rev-replace example. But that's precisely what I'm trying not to do. \n. @silvenon  that's actually what I'm doing :) All in the same stream...\n@sondr3 rev-all already replaces the references. I use napkin to remove un-revved files only.  \nI should learn how to read:\n```\n\n\"Rewrite occurences of filenames which have been renamed by gulp-rev\" \n```\n\nWe don't need that. gulp-rev-all does this for us. Since gulp-rev-all takes child-references in account for its hashing, it's objectively better than gulp-rev (and it saves a dependency, which is a nice bonus.)\nSince we export all files to /dist, and then rev it, we get: \n|-index.html\n |-index.3432.html\n |-img\n   |-logo.png\n   |-logo.2343.png\ngulp-napkin then removes the (duplicate) unrevved files. \n|-index.3432.html\n |-img\n   |-logo.2343.png\nDepending on the ignore list, it removes only the files that are actually revved. Thus in my defaults it ignores index.html in revving, gulp-napkin will leave index.html untouched. \nHowever, like I said in an earlier post, if we export all files to /.tmp and then do gulp-rev-all and export to /dist we don't need gulp-napkin. \n. > But that's not really a problem if you properly do the tasks that will fix the assets, I never have non-revved assets in my dist-folder so gulp-napkin shouldn't be necessary at all. You need to take a look at the other tasks and maybe have them move their assets to a .tmp folder and move the revved files into the dist folder, that way you have no need for gulp-napkin.\nI will friendly refer you to my earlier message of 4 hours ago, which literally mentions this in the last sentence, or the message of 5 days ago where I mention this as well.\n\nAlso, I thought that gulp-rev just renames the files itself but doesn't rename the references in the HTML, in other words you'll end up with the CSS that is being called still being named main.css while the one that you want is actually main-0b819as.css.\n\nI'm not using gulp-rev, but gulp-rev-all.  gulp-rev-all takes child-references into account for its hashing, therefore it's better than gulp-rev (and it saves us from  the dependency on gulp-rev-replace, which is a nice bonus.)\n\nHave you tried live serving your site after you've removed the non-revved files? AFAIK it should try to serve assets that do not exist since they reference the old files.\n\nI can recommend that you try it as well, you'll see how remarkably well it works :smile: \n. I'm sorry for the non-response. I'm picking this up today\n. I'm sorry for the lack of communications. Startup collapsed, new job busy which didn't have any programming. \nIf it is still needed, i'm happy to finish this. I noticed a new version of the revving plugins that solve some issues we had before.\n. Great.\nI'll pick this up this weekend. \n. see #360 for a new attempt.\nfrom an earlier comment:\n\n\nI noticed there's a new version of gulp-rev-all with some breaking changes, would you care to update to the latest version?\n\n\ndone\n\n\nThe output seems a bit too verbose. Perhaps silent is best? I think the new option is called debug, so perhaps set that to false.\n\n\ndone (set debug: true in the options list to get it back)\nClose this one?\n. I looked into using gulp-rev.\nFor it to replace rev-all, you need to use gulp-rev, rev-replace, rev-css-url. (I'm assuming the .tmp setup as in this PR works a expected)\nIt adds complexity but also flexibility. \nThe problem I'm at, after 45mins of Googling, is how to make exceptions for e.g. favicon or index.html. I can't find it, unless you use a filter() function.\n. @silvenon @alferov is the \"no blacklisted modules\" a hard line? \nBecause with gulp-rev et al. it's going to be a lot more complicated... \n. ",
    "sondr3": "Have you tried using the gulp-rev-replace plugin instead of gulp-rev-napkin? Just curious since the latter hasn't been updated in a while.\n. I've been using rev-replace for a while in my optimizing task and it does exactly what it should, removes the unrevved files and inserts references to the revved ones in the HTML. It should work.\n. But that's not really a problem if you properly do the tasks that will fix the assets, I never have non-revved assets in my dist-folder so gulp-napkin shouldn't be necessary at all. You need to take a look at the other tasks and maybe have them move their assets to a .tmp folder and move the revved files into the dist folder, that way you have no need for gulp-napkin.\nAlso, I thought that gulp-rev just renames the files itself but doesn't rename the references in the HTML, in other words you'll end up with the CSS that is being called still being named main.css while the one that you want is actually main-0b819as.css. Have you tried live serving your site after you've removed the non-revved files? AFAIK it should try to serve assets that do not exist since they reference the old files.\n. Yes, I do realise that, I started writing my comment as I was reading and didn't spot it before I reached the end. I am also using gulp-rev-all but whenever I disable gulp-rev-replace it doesn't rewrite the references, I just tried and without using gulp-rev-replace none of the references were replaced. Weird, I never knew gulp-rev-all was supposed to do that, I'm going to take a look again. Sorry for being a bother :smiley: \n. What I did, which works very well is just dropping everything into the styles task in my gulpfile and then use gulp-inject to inject the CSS into the header. My task is probably quite a bit overkill for this (and I didn't bother changing the paths etc), but what it does is generate a style.scss file, rename it to style.min.css and then rev it so it gets renamed to something like style-17ga7g6.min.css, after which you create another gzipped version as well.\njs\ngulp.task('styles', () =>\n  gulp.src('src/assets/scss/style.scss')\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      precision: 10\n    }).on('error', $.sass.logError))\n    .pipe($.postcss([\n      autoprefixer({browsers: 'last 1 version'})\n    ]))\n    .pipe($.rename('style.min.css'))\n    .pipe($.if('*.css', $.minifyCss()))\n    .pipe($.size({\n      title: 'minified styles',\n      showFiles: true\n    }))\n    .pipe($.rev())\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n    .pipe($.if('*.css', $.gzip({append: true})))\n    .pipe($.size({\n      title: 'gzipped styles',\n      gzip: true,\n      showFiles: true\n    }))\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n);\nThen in your index.html you create\nhtml\n  <!-- inject:css -->\n  <!-- endinject -->\nin the head area which will be automatically populated with a task like this:\njs\ngulp.task('inject', () =>\n  gulp.src('src/_includes/head.html')\n    .pipe($.inject(gulp.src('.tmp/assets/stylesheets/*.css',\n                            {read: false}), {ignorePath: '.tmp'}))\n    .pipe(gulp.dest('src/_includes'))\n);\nand you'll get\nhtml\n  <!-- inject:css -->\n  <link rel=\"stylesheet\" href=\"/assets/stylesheets/style-17ga7g6.min.css\">\n  <!-- endinject -->\nwhich will include a link to it's sourcemap and have a gzipped version alongside as well. It works very well for me, but obviously it's quite different from this one. I can make a PR if that makes things clearer.\n. Yeah, getting revving to work has been a major PITA for me and this was the best solution I could figure out.\n. Have you tried using the gulp-rev-replace plugin instead of gulp-rev-napkin? Just curious since the latter hasn't been updated in a while.\n. I've been using rev-replace for a while in my optimizing task and it does exactly what it should, removes the unrevved files and inserts references to the revved ones in the HTML. It should work.\n. But that's not really a problem if you properly do the tasks that will fix the assets, I never have non-revved assets in my dist-folder so gulp-napkin shouldn't be necessary at all. You need to take a look at the other tasks and maybe have them move their assets to a .tmp folder and move the revved files into the dist folder, that way you have no need for gulp-napkin.\nAlso, I thought that gulp-rev just renames the files itself but doesn't rename the references in the HTML, in other words you'll end up with the CSS that is being called still being named main.css while the one that you want is actually main-0b819as.css. Have you tried live serving your site after you've removed the non-revved files? AFAIK it should try to serve assets that do not exist since they reference the old files.\n. Yes, I do realise that, I started writing my comment as I was reading and didn't spot it before I reached the end. I am also using gulp-rev-all but whenever I disable gulp-rev-replace it doesn't rewrite the references, I just tried and without using gulp-rev-replace none of the references were replaced. Weird, I never knew gulp-rev-all was supposed to do that, I'm going to take a look again. Sorry for being a bother :smiley: \n. What I did, which works very well is just dropping everything into the styles task in my gulpfile and then use gulp-inject to inject the CSS into the header. My task is probably quite a bit overkill for this (and I didn't bother changing the paths etc), but what it does is generate a style.scss file, rename it to style.min.css and then rev it so it gets renamed to something like style-17ga7g6.min.css, after which you create another gzipped version as well.\njs\ngulp.task('styles', () =>\n  gulp.src('src/assets/scss/style.scss')\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      precision: 10\n    }).on('error', $.sass.logError))\n    .pipe($.postcss([\n      autoprefixer({browsers: 'last 1 version'})\n    ]))\n    .pipe($.rename('style.min.css'))\n    .pipe($.if('*.css', $.minifyCss()))\n    .pipe($.size({\n      title: 'minified styles',\n      showFiles: true\n    }))\n    .pipe($.rev())\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n    .pipe($.if('*.css', $.gzip({append: true})))\n    .pipe($.size({\n      title: 'gzipped styles',\n      gzip: true,\n      showFiles: true\n    }))\n    .pipe(gulp.dest('.tmp/assets/stylesheets'))\n);\nThen in your index.html you create\nhtml\n  <!-- inject:css -->\n  <!-- endinject -->\nin the head area which will be automatically populated with a task like this:\njs\ngulp.task('inject', () =>\n  gulp.src('src/_includes/head.html')\n    .pipe($.inject(gulp.src('.tmp/assets/stylesheets/*.css',\n                            {read: false}), {ignorePath: '.tmp'}))\n    .pipe(gulp.dest('src/_includes'))\n);\nand you'll get\nhtml\n  <!-- inject:css -->\n  <link rel=\"stylesheet\" href=\"/assets/stylesheets/style-17ga7g6.min.css\">\n  <!-- endinject -->\nwhich will include a link to it's sourcemap and have a gzipped version alongside as well. It works very well for me, but obviously it's quite different from this one. I can make a PR if that makes things clearer.\n. Yeah, getting revving to work has been a major PITA for me and this was the best solution I could figure out.\n. ",
    "illycz": "Some news about that?. Some news about fix? Thanks...\ngenerator-webapp@2.4.1. @dainbrain but your solution will not work if you need push your code to subfolder, am I right?. What is the \"right\" solution for now, if I don't want another request?\nThanks. wiredep remove this hardcoded files in next running... :( . Fork -> changes -> PR to master?. Another reason is default bootstrap exclude: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L186 so overrides does not make sense.... @silvenon https://github.com/yeoman/generator-webapp/pull/633. Some news about that?. Some news about fix? Thanks...\ngenerator-webapp@2.4.1. @dainbrain but your solution will not work if you need push your code to subfolder, am I right?. What is the \"right\" solution for now, if I don't want another request?\nThanks. wiredep remove this hardcoded files in next running... :( . Fork -> changes -> PR to master?. Another reason is default bootstrap exclude: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L186 so overrides does not make sense.... @silvenon https://github.com/yeoman/generator-webapp/pull/633. ",
    "ptim": "I needed to update gulp-ruby-sass:\n\nNote: Pre-1.0 versions are no longer supported. Please try 1.0.0-alpha\n\nSee the updated docs here: https://github.com/sindresorhus/gulp-ruby-sass/tree/rw/1.0#sourcemap\n\nInline sourcemaps are recommended, as they \"just work\".\n\n```\n// using $.rubySass didn't work for me, so:\nvar sass = require('gulp-ruby-sass');\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.sourcemaps.write())\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nHowever, I've used an external sourcemap like so:\n```\n// using $.rubySass didn't work for me, so:\nvar sass = require('gulp-ruby-sass');\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.sourcemaps.write('.', {\n            includeContent: false,\n            sourceRoot: '../../app/styles',\n            sourcemapPath: '.'\n        }))\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nIn both cases, add your source folder to the workspace, then follow the prompts in the sources tab of the chrome inspector to map a source file to the network resource.\n\nThere's an issue with autoprefixer, I believe, but I haven't waded into that yet.\nI'll probably created a separate build task without sourcemaps.\n. Not sure if this is the best way to do this, but I've tested autoprefixer with the following:\n:fullscreen a {\n    display: flex\n}\n...and found that it is behaving nicely with and without sourcemaps.\nI've set the watch task to use 'styles' and the html task to use 'styles:dist', which doesn't output the sourcemap.\n```\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.autoprefixer({browsers: ['last 1 version']}))\n        .pipe($.sourcemaps.write())\n        .pipe(gulp.dest('.tmp/styles'));\n});\ngulp.task('styles:dist', function() {\n    return sass('app/styles/main.scss', { sourcemap: false })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.autoprefixer({browsers: ['last 1 version']}))\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nFeedback welcome, tx!\n. ah! sorry people, I was running an outdated generator, and since #205 libsass has been in use, so my solutions may not be relevant for others...\n. You may have an old version of gulp-cli installed..\nnpm uninstall -g gulp-cli\nnpm install -g gulp-cli\nis recommended over in gulp-cli issues: https://github.com/gulpjs/gulp-cli/issues/27\nNow gulp serve works as expected.\n. I needed to update gulp-ruby-sass:\n\nNote: Pre-1.0 versions are no longer supported. Please try 1.0.0-alpha\n\nSee the updated docs here: https://github.com/sindresorhus/gulp-ruby-sass/tree/rw/1.0#sourcemap\n\nInline sourcemaps are recommended, as they \"just work\".\n\n```\n// using $.rubySass didn't work for me, so:\nvar sass = require('gulp-ruby-sass');\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.sourcemaps.write())\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nHowever, I've used an external sourcemap like so:\n```\n// using $.rubySass didn't work for me, so:\nvar sass = require('gulp-ruby-sass');\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.sourcemaps.write('.', {\n            includeContent: false,\n            sourceRoot: '../../app/styles',\n            sourcemapPath: '.'\n        }))\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nIn both cases, add your source folder to the workspace, then follow the prompts in the sources tab of the chrome inspector to map a source file to the network resource.\n\nThere's an issue with autoprefixer, I believe, but I haven't waded into that yet.\nI'll probably created a separate build task without sourcemaps.\n. Not sure if this is the best way to do this, but I've tested autoprefixer with the following:\n:fullscreen a {\n    display: flex\n}\n...and found that it is behaving nicely with and without sourcemaps.\nI've set the watch task to use 'styles' and the html task to use 'styles:dist', which doesn't output the sourcemap.\n```\ngulp.task('styles', function() {\n    return sass('app/styles/main.scss', { sourcemap: true })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.autoprefixer({browsers: ['last 1 version']}))\n        .pipe($.sourcemaps.write())\n        .pipe(gulp.dest('.tmp/styles'));\n});\ngulp.task('styles:dist', function() {\n    return sass('app/styles/main.scss', { sourcemap: false })\n        .on('error', function (err) {\n            console.error('Error!', err.message);\n        })\n        .pipe($.autoprefixer({browsers: ['last 1 version']}))\n        .pipe(gulp.dest('.tmp/styles'));\n});\n```\nFeedback welcome, tx!\n. ah! sorry people, I was running an outdated generator, and since #205 libsass has been in use, so my solutions may not be relevant for others...\n. You may have an old version of gulp-cli installed..\nnpm uninstall -g gulp-cli\nnpm install -g gulp-cli\nis recommended over in gulp-cli issues: https://github.com/gulpjs/gulp-cli/issues/27\nNow gulp serve works as expected.\n. ",
    "doublemarked": "Thanks for the prompt reply. I'm running the tip of master, however, which includes that patch. Yet the problem still exists.\n. Looks good - thanks!\n. No, does not seem to affect it. But gulp fonts deals with the dist output, right? The problem I see is only in development (gulp serve). Production works fine.\n. Hmmm...yes, you're right, gulp fonts did fix it! Sorry for the confusion from my last message - I did not test it properly.\nShould gulp fonts maybe be added to the tasks kicked off with gulp serve ?\n. Hmm, sorry - I upgraded yo and the problem went away.\n. Thanks for the prompt reply. I'm running the tip of master, however, which includes that patch. Yet the problem still exists.\n. Looks good - thanks!\n. No, does not seem to affect it. But gulp fonts deals with the dist output, right? The problem I see is only in development (gulp serve). Production works fine.\n. Hmmm...yes, you're right, gulp fonts did fix it! Sorry for the confusion from my last message - I did not test it properly.\nShould gulp fonts maybe be added to the tasks kicked off with gulp serve ?\n. Hmm, sorry - I upgraded yo and the problem went away.\n. ",
    "jnsq": "It seems like this issue is back with the actual release (v2.3.2) ?. @silvenon i've just done a yo webapp, and a gulp wiredep, and i can see in the index.html the modernizr.js script import in the header inside <!-- build:js scripts/vendor/modernizr.js --><!-- endbuild -->, and also at the bottom just after jquery.js script import inside <!-- build:js scripts/vendor.js --><!-- bower:js --><!-- endbower --><!-- endbuild -->.\nbower@1.8.0\ngenerator-webapp@2.3.2\ngulp-cli@1.2.2\nyo@1.8.5. It seems like this issue is back with the actual release (v2.3.2) ?. @silvenon i've just done a yo webapp, and a gulp wiredep, and i can see in the index.html the modernizr.js script import in the header inside <!-- build:js scripts/vendor/modernizr.js --><!-- endbuild -->, and also at the bottom just after jquery.js script import inside <!-- build:js scripts/vendor.js --><!-- bower:js --><!-- endbower --><!-- endbuild -->.\nbower@1.8.0\ngenerator-webapp@2.3.2\ngulp-cli@1.2.2\nyo@1.8.5. ",
    "nithinM": "This fixed the issue.\ngulp.src('app/*.html')\n.pipe(wiredep({\n  exclude: ['bower_components/modernizr/modernizr.js'],\n  ignorePath: /^(\\.\\.\\/)*\\.\\./\n}))\n.pipe(gulp.dest('app'));. This fixed the issue.\ngulp.src('app/*.html')\n.pipe(wiredep({\n  exclude: ['bower_components/modernizr/modernizr.js'],\n  ignorePath: /^(\\.\\.\\/)*\\.\\./\n}))\n.pipe(gulp.dest('app'));. ",
    "harrisrobin": "@sindresorhus ok I see. That could be it, i thought all bower packages are injected.\nThanks\n. @sindresorhus ok I see. That could be it, i thought all bower packages are injected.\nThanks\n. ",
    "yuchuan1": "They are under app/scripts/react directory\n. I tried the same code on another computer, and it worked. Closing the issue.\n. They are under app/scripts/react directory\n. I tried the same code on another computer, and it worked. Closing the issue.\n. ",
    "atwoodjw": "That did it. The ignorePath isn't formatted as an addition in the recipe, so I missed it. Thanks.\n. That did it. The ignorePath isn't formatted as an addition in the recipe, so I missed it. Thanks.\n. ",
    "tonilaukka": "I was just wondering the same. I read the instructions and it looked exactly what I needed, but soon discovered that npm has an older version. Is there a way to use the latest version?\n. I was just wondering the same. I read the instructions and it looked exactly what I needed, but soon discovered that npm has an older version. Is there a way to use the latest version?\n. ",
    "jimmynotjim": "Any reason why the master branch isn't the latest stable release? A lot of new people might not know they need to go digging to find the correct readme or files and it'd solve a lot of confusion I've seen. I only became aware of the ruby/libsass difference because a friend was stuck trying to figure out why his gulpfile didn't match the one in master. Creating an unstable pre-release or development branch for new work would easily solve that.\n. @silvenon thanks for the explanation. I knew most OSS projects organize this way but never understood why, especially when nearly every document on Git says master should be stable and deployable. It's certainly a hurdle for newer developers to get over and I was just trying to think of a way to make it easier.\n. It wasn't even me, and yes, this did happen to a friend. He found the repo, saw what he liked, NPM installed and ended up wasting a bunch of time trying to figure out why his installed files didn't match master. The bottom line is we take things like this for granted because we're used to it. What we don't realize is there's a lot of little \"you have to have experienced it before\" situations that make entering the development world harder than it needs to be.\nI never really thought much about it before now because like you said, it's how most projects do it and I've been involved with OSS for a few years. Now that I'm seeing it through his eyes, I'm questioning why.  I only opened this issue because he had already given up and moved on to another project. I figured it was worth mentioning in hopes of preventing the same situation in the future. \nAs far as never having complaints, did you stop to think your reaction is why? I know a lot of developers that don't open issues or contribute to OSS projects for this exact reason. We're all adults, no one wants to be treated like a student being chided by their teacher. I know you are responsible for a really large number of libraries and get more issues than most of us, but have a little patience with people and when someone asks \"why\", have the empathy to answer honestly.\n. I appreciate you taking the time to explain it. Now when people ask I have something to tell them besides \u00af(\u30c4)/\u00af. Also, my comment was in direct reply to \"Are you sure it's not just you.\" Sorry if you though it was toward you, your replies were all helpful.\n. Any reason why the master branch isn't the latest stable release? A lot of new people might not know they need to go digging to find the correct readme or files and it'd solve a lot of confusion I've seen. I only became aware of the ruby/libsass difference because a friend was stuck trying to figure out why his gulpfile didn't match the one in master. Creating an unstable pre-release or development branch for new work would easily solve that.\n. @silvenon thanks for the explanation. I knew most OSS projects organize this way but never understood why, especially when nearly every document on Git says master should be stable and deployable. It's certainly a hurdle for newer developers to get over and I was just trying to think of a way to make it easier.\n. It wasn't even me, and yes, this did happen to a friend. He found the repo, saw what he liked, NPM installed and ended up wasting a bunch of time trying to figure out why his installed files didn't match master. The bottom line is we take things like this for granted because we're used to it. What we don't realize is there's a lot of little \"you have to have experienced it before\" situations that make entering the development world harder than it needs to be.\nI never really thought much about it before now because like you said, it's how most projects do it and I've been involved with OSS for a few years. Now that I'm seeing it through his eyes, I'm questioning why.  I only opened this issue because he had already given up and moved on to another project. I figured it was worth mentioning in hopes of preventing the same situation in the future. \nAs far as never having complaints, did you stop to think your reaction is why? I know a lot of developers that don't open issues or contribute to OSS projects for this exact reason. We're all adults, no one wants to be treated like a student being chided by their teacher. I know you are responsible for a really large number of libraries and get more issues than most of us, but have a little patience with people and when someone asks \"why\", have the empathy to answer honestly.\n. I appreciate you taking the time to explain it. Now when people ask I have something to tell them besides \u00af(\u30c4)/\u00af. Also, my comment was in direct reply to \"Are you sure it's not just you.\" Sorry if you though it was toward you, your replies were all helpful.\n. ",
    "JosefJezek": "Do you know https://github.com/smysnk/gulp-rev-all?\n. gulp-rev-all not only handles reference re-writing but it also takes child references into consideration when calculating a hashes.\n. Do you know https://github.com/smysnk/gulp-rev-all?\n. gulp-rev-all not only handles reference re-writing but it also takes child references into consideration when calculating a hashes.\n. ",
    "mattycraig": "+1 for speed for sure.\n. +1 for speed for sure.\n. ",
    "thasmo": "+1 libsass\n. +1 libsass\n. ",
    "mu7amad": "+1 libsass\n. yes and gulp work really fine, my problem happen when i don't use index.html it should show the directory files list\n. please check this screen shoot https://cloud.githubusercontent.com/assets/1523107/4010715/eb887b66-29f9-11e4-9472-312bc3912231.jpg\ni need that happen when i don't use index.html\n. it's working fine but i had also to change the baseDir to : ['app','.tmp']. Thanks @francoiscote @silvenon \n. i'm very thankful you @silvenon you did great work in gulp-webapp, i just recommend if you add requirejs task to gulp as i had added it and it's really work nice with me. i can share it to you if you want.\n. +1 libsass\n. yes and gulp work really fine, my problem happen when i don't use index.html it should show the directory files list\n. please check this screen shoot https://cloud.githubusercontent.com/assets/1523107/4010715/eb887b66-29f9-11e4-9472-312bc3912231.jpg\ni need that happen when i don't use index.html\n. it's working fine but i had also to change the baseDir to : ['app','.tmp']. Thanks @francoiscote @silvenon \n. i'm very thankful you @silvenon you did great work in gulp-webapp, i just recommend if you add requirejs task to gulp as i had added it and it's really work nice with me. i can share it to you if you want.\n. ",
    "dbashford": "Largely unfamiliar with Yeoman, so sorry if I'm out in left field, but isn't this something you can ask the user during scaffold?  Probably a goodly amount of rework to make that happen, but if folks are evenly split, if its possible...  a worthwhile effort?\n. Largely unfamiliar with Yeoman, so sorry if I'm out in left field, but isn't this something you can ask the user during scaffold?  Probably a goodly amount of rework to make that happen, but if folks are evenly split, if its possible...  a worthwhile effort?\n. ",
    "Berrayti": "@silvenon I did a little comparaison between the package.json and gulpfile in the repo and the ones in my folder and I see the difference.\nI think I didn't updated well or something. Please if you can give the way to update maybe the problem will be fixed.\n. @silvenon Oh right !! It seems I was looking in the master branch, in my gulpfile it's 0.2.0.\nIf it's possible, could you please tell me if there is a way to use this master branch instead of the 0.2 version ?? \nThank you !\n. @silvenon I did a little comparaison between the package.json and gulpfile in the repo and the ones in my folder and I see the difference.\nI think I didn't updated well or something. Please if you can give the way to update maybe the problem will be fixed.\n. @silvenon Oh right !! It seems I was looking in the master branch, in my gulpfile it's 0.2.0.\nIf it's possible, could you please tell me if there is a way to use this master branch instead of the 0.2 version ?? \nThank you !\n. ",
    "timbog80": "why hasnt this been fixed in yeoman yet?\n. got it thanks :)\n. why hasnt this been fixed in yeoman yet?\n. got it thanks :)\n. ",
    "michelmany": "Im still having a issue with fonts task. :(\n. sorry @silvenon ... its ok now... the directory in the .bowerrc was incorrect. thanks!\n. Im still having a issue with fonts task. :(\n. sorry @silvenon ... its ok now... the directory in the .bowerrc was incorrect. thanks!\n. ",
    "muminoff": ":+1: \nI had the same problem and now ok.\n. :+1: \nI had the same problem and now ok.\n. ",
    "Mantrama": "Thanks,\nUpdating Node & npm plus all the global packages through 'npm update' command resolve it.\n. Thanks,\nUpdating Node & npm plus all the global packages through 'npm update' command resolve it.\n. ",
    "gaboesquivel": "actually we could add it both to the generator itself and generated boilerplate ( optional ) \n. @SBoudrias do you recommend a specific setup or just use the defaults ?\n. preferred styleguide would be nice if we had predefined sets, but for now I think editing the config json .jscsrc is more practical. so maybe simply using defaults and adding an empty .jscsrc file? -  that for generated boilerplate.\nfor the generator itself not sure what\u00b4s the styleguide you are following, or if you are willing to introduce/enforce a new style guide... and yes it should be the same across yeoman\u00b4s projects.\n. yeah, thanks @hzoo \n. Here's a recipe using express.js https://gist.github.com/gaboesquivel/d493a8fe91c4836de41f \n. PR https://github.com/yeoman/generator-gulp-webapp/pull/398\n. you would need to add phated/gulp-jade \nI think larsonjj/generator-yeogurt provides the functionality you need out-of-the-box\n. This should work as well Gulp Webapp - Jade Recipe\n. http://addyosmani.com/blog/environment-specific-builds-with-grunt-gulp-or-broccoli/\n. that's weird, protractor is the E2E test framework for Angular apps. It is not related to this generator.\nThis generator sets mocha for testing. \n. +1 add a section for editor tools, don't lint on file change. \n. actually we could add it both to the generator itself and generated boilerplate ( optional ) \n. @SBoudrias do you recommend a specific setup or just use the defaults ?\n. preferred styleguide would be nice if we had predefined sets, but for now I think editing the config json .jscsrc is more practical. so maybe simply using defaults and adding an empty .jscsrc file? -  that for generated boilerplate.\nfor the generator itself not sure what\u00b4s the styleguide you are following, or if you are willing to introduce/enforce a new style guide... and yes it should be the same across yeoman\u00b4s projects.\n. yeah, thanks @hzoo \n. Here's a recipe using express.js https://gist.github.com/gaboesquivel/d493a8fe91c4836de41f \n. PR https://github.com/yeoman/generator-gulp-webapp/pull/398\n. you would need to add phated/gulp-jade \nI think larsonjj/generator-yeogurt provides the functionality you need out-of-the-box\n. This should work as well Gulp Webapp - Jade Recipe\n. http://addyosmani.com/blog/environment-specific-builds-with-grunt-gulp-or-broccoli/\n. that's weird, protractor is the E2E test framework for Angular apps. It is not related to this generator.\nThis generator sets mocha for testing. \n. +1 add a section for editor tools, don't lint on file change. \n. ",
    "hzoo": "You could possibly prompt from a list of jscs presets (http://jscs.info/overview.html#presets) and then set the .jscsrc to it ex. for google: { preset: \"google\" }. There's a similar functionality in the --auto-configure feature\n. You could possibly prompt from a list of jscs presets (http://jscs.info/overview.html#presets) and then set the .jscsrc to it ex. for google: { preset: \"google\" }. There's a similar functionality in the --auto-configure feature\n. ",
    "radum": "This is a more complete and accurate example:\njs\ngulp.task('styles', function () {\n  return $.rubySass('app/styles/main.scss', {\n      sourcemap: true,\n      style: 'expanded',\n      precision: 10,\n      loadPath: ['.']\n    }).on('error', function(err) {\n        console.log('Sass error:'+err.message);\n    })\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));  \n});\n. This is a more complete and accurate example:\njs\ngulp.task('styles', function () {\n  return $.rubySass('app/styles/main.scss', {\n      sourcemap: true,\n      style: 'expanded',\n      precision: 10,\n      loadPath: ['.']\n    }).on('error', function(err) {\n        console.log('Sass error:'+err.message);\n    })\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));  \n});\n. ",
    "markpalfreeman": "Ah, it was the version! I didn't go through the generator process correctly, so it defaulted to an older version. Updating my gulpfile and package.json did the trick.\n. Ah, it was the version! I didn't go through the generator process correctly, so it defaulted to an older version. Updating my gulpfile and package.json did the trick.\n. ",
    "jdahdah": "Yes, that seems to fix it.\n. Alright then, I thought it was a bug that needed to be reported. Thanks both of you.\n. I'm having this issue as well and I can't figure out what it causing it. It's not just .scss, but also .pug files that are randomly deleted. I modified the gulpfile to include pug according to your recipe.\nI'm also having an issue that I believe might be related. During build (default task), it'll sometimes render everything, but parts of a page will be missing in the final output (without any error messages). Which parts are missing seems to be more or less random every time I run it, but it's usually one of the includes in default.pug, which looks like this:\n```\nblock config\n  include /_includes/config\ninclude /_includes/mixins\ndoctype html\nhtml(lang='de').no-js\n  head\n    include /_includes/head\nbody(class=bodyClass)\na#top.hidden\n\nblock content\n\ninclude /_includes/header\n\ninclude /_includes/footer\n\n#overlay\n\ninclude /_includes/foot-scripts\n\n```\nThe only bit that always renders correctly is whatever is overridden in index.pug via block content, which looks like this:\n```\nextends /_layouts/default\nappend config\n  - var pageTitle       = 'Page title'\n  - var currentPage     = 'Current page name';\nblock content\n  p ...\n```\nMy views task looks like this:\ngulp.task('views', () => {\n  return gulp.src(['app/**/*.pug', '!app/_*/*'])\n    .pipe($.pug({pretty: true, basedir: 'app/'}))\n    .pipe(gulp.dest('.tmp'))\n});\nI've tried updating gulp, gulp-pug, node and a bunch of other things but the error persists. It's becoming a problem because I've used the generator in a production project and I sometimes have to re-build the final project 5-6 times until everything is rendered out correctly. Please let me know what other information I can provide. I'd be happy to share the entire project if someone wants to have a look. It seems like there is a serious issue with gulp somewhere.. @silvenon Thanks for your response, I'm trying to distill it into something more minimal. Regarding running my generator, that's strange. I did a fresh install on a different computer according to the readme and it seems to be working fine. Did you get any specific error message? If the issue persists (and you have a few minutes), would you mind opening an issue on my repo so I can look into it? I don't want to flood the other folks here with that since it's out of this bug's scope.. Just an example of these random errors: first time running gulp serve:dist causes an error during the views task, second time doesn't:\n\nRan it again a few times, the next error happens after a few runs in a completely different place:\n\nStill trying to figure out if there is a way to simplify this any more. I can open a new issue if you feel this is not related to the deletion issue.. Yes, that seems to fix it.\n. Alright then, I thought it was a bug that needed to be reported. Thanks both of you.\n. I'm having this issue as well and I can't figure out what it causing it. It's not just .scss, but also .pug files that are randomly deleted. I modified the gulpfile to include pug according to your recipe.\nI'm also having an issue that I believe might be related. During build (default task), it'll sometimes render everything, but parts of a page will be missing in the final output (without any error messages). Which parts are missing seems to be more or less random every time I run it, but it's usually one of the includes in default.pug, which looks like this:\n```\nblock config\n  include /_includes/config\ninclude /_includes/mixins\ndoctype html\nhtml(lang='de').no-js\n  head\n    include /_includes/head\nbody(class=bodyClass)\na#top.hidden\n\nblock content\n\ninclude /_includes/header\n\ninclude /_includes/footer\n\n#overlay\n\ninclude /_includes/foot-scripts\n\n```\nThe only bit that always renders correctly is whatever is overridden in index.pug via block content, which looks like this:\n```\nextends /_layouts/default\nappend config\n  - var pageTitle       = 'Page title'\n  - var currentPage     = 'Current page name';\nblock content\n  p ...\n```\nMy views task looks like this:\ngulp.task('views', () => {\n  return gulp.src(['app/**/*.pug', '!app/_*/*'])\n    .pipe($.pug({pretty: true, basedir: 'app/'}))\n    .pipe(gulp.dest('.tmp'))\n});\nI've tried updating gulp, gulp-pug, node and a bunch of other things but the error persists. It's becoming a problem because I've used the generator in a production project and I sometimes have to re-build the final project 5-6 times until everything is rendered out correctly. Please let me know what other information I can provide. I'd be happy to share the entire project if someone wants to have a look. It seems like there is a serious issue with gulp somewhere.. @silvenon Thanks for your response, I'm trying to distill it into something more minimal. Regarding running my generator, that's strange. I did a fresh install on a different computer according to the readme and it seems to be working fine. Did you get any specific error message? If the issue persists (and you have a few minutes), would you mind opening an issue on my repo so I can look into it? I don't want to flood the other folks here with that since it's out of this bug's scope.. Just an example of these random errors: first time running gulp serve:dist causes an error during the views task, second time doesn't:\n\nRan it again a few times, the next error happens after a few runs in a completely different place:\n\nStill trying to figure out if there is a way to simplify this any more. I can open a new issue if you feel this is not related to the deletion issue.. ",
    "kalenjohnson": "@austinpray I forget what bases.app and bases.dist are.\n. @austinpray I forget what bases.app and bases.dist are.\n. ",
    "fseminario": "Thank you explaining this and both points make sense. It took me a bit of time to figure out to put the variables BEFORE the @import. I am up and running once again. Cheers!\n. Thank you explaining this and both points make sense. It took me a bit of time to figure out to put the variables BEFORE the @import. I am up and running once again. Cheers!\n. ",
    "Shonetow": "I added this line into gulpfile.js and it works:\ngulp.watch('bower_components/bootstrap-sass-official/assets/stylesheets/**/*.scss', ['styles']);\n. Yeah, tnx, I figured that later... :)\n. I tried this: .pipe($.sourcemaps.write('.')) and this .pipe($.sourcemaps.write('test')) and nothing happened... \n. I added this line into gulpfile.js and it works:\ngulp.watch('bower_components/bootstrap-sass-official/assets/stylesheets/**/*.scss', ['styles']);\n. Yeah, tnx, I figured that later... :)\n. I tried this: .pipe($.sourcemaps.write('.')) and this .pipe($.sourcemaps.write('test')) and nothing happened... \n. ",
    "ai": "Latest PostCSS uses Promises. But I saw that your package.json requires node.js >= 0.12, as I understand.\n. I asked gulp-postcss author to add polyfill for old node.\n. We fix gulp-postcss for node.js. PostCSS 4.1.3 now contains polyill.\n. @silvenon nope, PostCSS 4.1.3 already has es6-promise in own dependencies.\n. @silvenon yeap :( wait a second\n. Fix released in PostCSS 4.1.4.\n. Latest PostCSS uses Promises. But I saw that your package.json requires node.js >= 0.12, as I understand.\n. I asked gulp-postcss author to add polyfill for old node.\n. We fix gulp-postcss for node.js. PostCSS 4.1.3 now contains polyill.\n. @silvenon nope, PostCSS 4.1.3 already has es6-promise in own dependencies.\n. @silvenon yeap :( wait a second\n. Fix released in PostCSS 4.1.4.\n. ",
    "sebastianzebrowski": "Yeah, so I purpose to switch to https://github.com/tschaub/gulp-newer\n. Yeah, so I purpose to switch to https://github.com/tschaub/gulp-newer\n. ",
    "judewang": "https://github.com/jonkemp/gulp-useref/issues/102\nThis is a known issue haven't been fixed, yet.\n. https://github.com/jonkemp/gulp-useref/issues/102\nThis is a known issue haven't been fixed, yet.\n. ",
    "a14m": "I mistakenly changed <!-- build:js scripts/main.js --> to <!-- build:js app/app.module.coffee -->\nwhich caused the error...\n. I mistakenly changed <!-- build:js scripts/main.js --> to <!-- build:js app/app.module.coffee -->\nwhich caused the error...\n. ",
    "poliveira89": "EDIT: \nbash\n$ node --version\nv0.10.32\n$ npm --version\n2.8.3\n. EDIT1: This happens with others generators as well (at least with me): generator-gulp-angular\nEDIT2: This error, only to this generator (generator-gulp-webapp) only happens on OS X with others global modules installed. I tried, now, with Ubuntu and installed everything successful without errors, and when I do npm install -g I do not have UNMET DEPENDENCY tag anywhere\n. Receiving WARN on installation and UNMET DEPENDENCYafter that... making a lot of other modules installed globally with UNMET DEPENDENCY error, when I execute npm install -g\n. What I have done, it wasn't a properly \"fix\".\nI have deleted every NPM global package, I have uninstalled NPM/Node (previously installed with DMG).\nAnd reinstalled Node/NPM with brew. And installed all NPM Global dependencies all over again.\n. EDIT: \nbash\n$ node --version\nv0.10.32\n$ npm --version\n2.8.3\n. EDIT1: This happens with others generators as well (at least with me): generator-gulp-angular\nEDIT2: This error, only to this generator (generator-gulp-webapp) only happens on OS X with others global modules installed. I tried, now, with Ubuntu and installed everything successful without errors, and when I do npm install -g I do not have UNMET DEPENDENCY tag anywhere\n. Receiving WARN on installation and UNMET DEPENDENCYafter that... making a lot of other modules installed globally with UNMET DEPENDENCY error, when I execute npm install -g\n. What I have done, it wasn't a properly \"fix\".\nI have deleted every NPM global package, I have uninstalled NPM/Node (previously installed with DMG).\nAnd reinstalled Node/NPM with brew. And installed all NPM Global dependencies all over again.\n. ",
    "Uttammgr": "any solution to this problem having same problem \n. any solution to this problem having same problem \n. ",
    "kileyohl": "Same errors/Warnings.\n. Same errors/Warnings.\n. ",
    "wgmiller": "I am receiving this error:\n/Users/wgmiller/.nvm/versions/node/v0.12.7/lib\n\u2514\u2500\u252c steroids@4.1.19 \n  \u2514\u2500\u2500 UNMET PEER DEPENDENCY yo@>=1.0.0\nBut when I ran: npm install -g yo, it returns:\nEverything looks all right!\n/Users/wgmiller/.nvm/versions/node/v0.12.7/lib\n\u2514\u2500\u252c yo@1.4.8\nFor some reason it's not seeing my yo install. I think it may be a permissions issue as I've tried a few things during install using Sudo...\n. I am receiving this error:\n/Users/wgmiller/.nvm/versions/node/v0.12.7/lib\n\u2514\u2500\u252c steroids@4.1.19 \n  \u2514\u2500\u2500 UNMET PEER DEPENDENCY yo@>=1.0.0\nBut when I ran: npm install -g yo, it returns:\nEverything looks all right!\n/Users/wgmiller/.nvm/versions/node/v0.12.7/lib\n\u2514\u2500\u252c yo@1.4.8\nFor some reason it's not seeing my yo install. I think it may be a permissions issue as I've tried a few things during install using Sudo...\n. ",
    "neiromendez": "I have the same problem with\n npm i generator-sails-polymer \n\u2514\u2500\u2500 UNMET PEER DEPENDENCY yo@>=1.0.0\nnpm WARN enoent ENOENT: no such file or directory, open '/Users/NeiroMendez/package.json'\nnpm WARN generator-sails-polymer@0.0.0 requires a peer of yo@>=1.0.0 but none was installed.\nBut i have already install yeoman \nYeoman Doctor\nRunning sanity checks on your system\n\u2714 Global configuration file is valid\n\u2714 NODE_PATH matches the npm root\n\u2714 Node.js version\n\u2714 No .bowerrc file in home directory\n\u2714 No .yo-rc.json file in home directory\n\u2714 npm version\nEverything looks all right!\n/usr/local/lib\n\u2514\u2500\u252c yo@1.7.0 \n. I have the same problem with\n npm i generator-sails-polymer \n\u2514\u2500\u2500 UNMET PEER DEPENDENCY yo@>=1.0.0\nnpm WARN enoent ENOENT: no such file or directory, open '/Users/NeiroMendez/package.json'\nnpm WARN generator-sails-polymer@0.0.0 requires a peer of yo@>=1.0.0 but none was installed.\nBut i have already install yeoman \nYeoman Doctor\nRunning sanity checks on your system\n\u2714 Global configuration file is valid\n\u2714 NODE_PATH matches the npm root\n\u2714 Node.js version\n\u2714 No .bowerrc file in home directory\n\u2714 No .yo-rc.json file in home directory\n\u2714 npm version\nEverything looks all right!\n/usr/local/lib\n\u2514\u2500\u252c yo@1.7.0 \n. ",
    "aweary": "That's a good point. I suppose some other options would be to add wiredep as a dependency to styles or maybe use something like run-sequence to ensure that the tasks are ran in the correct order. \nThe former doesn't seem idiomatic though, and will needlessly invoke wiredep a lot. The later could be accomplished using an alias task of some sort like:\njs\ngulp.task('compile', function(){\n    $.runSequence(['wiredep', 'styles', 'fonts']).\n  });\njs\ngulp.task('serve', ['compile'], function(){ ... });\nBut that involves adding another dependency to the Gulp.\n. Yeah, sorry about that, I still have my Github training wheels on :smiley:. Also, I agree with you about this not being a fatal issue. It may just be worth noting somewhere in the readme that dependencies will only be injected if the bower.json file is updated while Gulp is running.\n. Nope, I'm just bad at finding things! Thank you.\n. That's a good point. I suppose some other options would be to add wiredep as a dependency to styles or maybe use something like run-sequence to ensure that the tasks are ran in the correct order. \nThe former doesn't seem idiomatic though, and will needlessly invoke wiredep a lot. The later could be accomplished using an alias task of some sort like:\njs\ngulp.task('compile', function(){\n    $.runSequence(['wiredep', 'styles', 'fonts']).\n  });\njs\ngulp.task('serve', ['compile'], function(){ ... });\nBut that involves adding another dependency to the Gulp.\n. Yeah, sorry about that, I still have my Github training wheels on :smiley:. Also, I agree with you about this not being a fatal issue. It may just be worth noting somewhere in the readme that dependencies will only be injected if the bower.json file is updated while Gulp is running.\n. Nope, I'm just bad at finding things! Thank you.\n. ",
    "antleblanc": "Thanks for pointing it out to me, it's done ;)\n. In addition you can run this following command:\nsh\n$ npm uninstall --save-dev gulp-uglify gulp-cssnano gulp-htmlmin\n. Thanks for pointing it out to me, it's done ;)\n. In addition you can run this following command:\nsh\n$ npm uninstall --save-dev gulp-uglify gulp-cssnano gulp-htmlmin\n. ",
    "jaysunwalter123": "``` js\n/global -$ /\n'use strict';\n// generated on 2015-05-14 using generator-gulp-webapp 0.3.0\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar browserSync = require('browser-sync');\nvar reload = browserSync.reload;\ngulp.task('styles', function () {\n  return gulp.src('app/styles/main.less')\n    .pipe($.sourcemaps.init())\n        .pipe($.less({\n            paths: ['.']\n    }))\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('jshint', function () {\n  return gulp.src('app/scripts/*/.js')\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($.if(!browserSync.active, $.jshint.reporter('default')));\n});\ngulp.task('html', ['styles'], function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\nreturn gulp.src('app/.html')\n    .pipe(assets)\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.if('.html', $.minifyHtml({conditionals: true, loose: true})))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', function () {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('fonts', function () {\n  return gulp.src(require('main-bower-files')({\n    filter: '/*.{eot,svg,ttf,woff,woff2}'\n  }).concat('app/fonts//*'))\n    .pipe(gulp.dest('.tmp/fonts'))\n    .pipe(gulp.dest('dist/fonts'));\n});\ngulp.task('extras', function () {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', require('del').bind(null, ['.tmp', 'dist']));\ngulp.task('serve', ['styles', 'fonts'], function () {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\n// watch for changes\n  gulp.watch([\n    'app/.html',\n    'app/scripts//*.js',\n    'app/images//',\n    '.tmp/fonts/*/'\n  ]).on('change', reload);\ngulp.watch('app/styles//*.less', ['styles', reload]);\n  gulp.watch('app/fonts//*', ['fonts']);\n  gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\n// inject bower components\ngulp.task('wiredep', function () {\n  var wiredep = require('wiredep').stream;\ngulp.src('app/styles/*.less')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\ngulp.task('build', ['jshint', 'html', 'images', 'fonts', 'extras'], function () {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', ['clean'], function () {\n  gulp.start('build');\n});\n```\n. This is what the index.html looks like in the 'app' folder, minus the content between the body tags.\n``` html\n<!doctype html>\n\n\n\n\n\nMilpark Education-->\n     Place favicon.ico and apple-touch-icon.png in the root directory \n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.css\" />\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css styles/main.css -->\n<link rel=\"stylesheet\" href=\"styles/main.css\">\n<!-- endbuild -->\n\n<!-- build:js scripts/vendor/modernizr.js -->\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<!-- endbuild -->\n\n\n\n ... \n Google Analytics: change UA-XXXXX-X to be your site's ID. \n\n      (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n      function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n      e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n      e.src='//www.google-analytics.com/analytics.js';\n      r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n      ga('create','UA-XXXXX-X');ga('send','pageview');\n    \n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n\n    <script src=\"/bower_components/bootstrap/dist/js/bootstrap.js\"></script>\n endbower \n endbuild \n            <script src=\"/bower_components/bootstrap/js/affix.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/alert.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/dropdown.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/tooltip.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/modal.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/transition.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/button.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/popover.js\"></script>\n        <!--<script src=\"/bower_components/bootstrap/js/carousel.js\"></script>-->\n        <script src=\"scripts/_carousel.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/scrollspy.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/collapse.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/tab.js\"></script>\n\n\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n\n\n\n```\n. Not sure why it's stripping some of the content but you're getting the important data there I think?\nAnd I didn't change the folder structure from that which was generated, this is it:\n.bower.rrc\n.editorconfig\n.git\n.gitattributes\n.gitignore\n.jshintrc\n.tmp\n.yo-rc.json\napp\nbower_components\nbower.json\ndist\ngulpfile.js\nnode_modules\npackage.json\ntest\n. Any idea why it's not working?\n. Thanks, but in that case, how would I exclude the HTML being output into the root? I can get main.css and main.js to output to their own folders by creating separate functions for them, thereby excluding the html from being output, but the vendor.js appears to need to be compiled along with the html as it's created by the bower components listed within the html file.\nWhat I'm trying now, but am not sure is something that gulp can do, is to leave the default build as is but add a function that copies the css and js files to where I need them after the build has completed.\nDo you know if that's possible?\nThanks for the help.\n. Nevermind. I've just realised that drupal has it's own built in compiler so no need to ever run a build.\nI did figure out how to run a function that copies the files to my chosen folder after all the other functions have run though, so not a complete waste of time trying to figure it out.\nThanks for the help.\n. Ditto, same thing happens to me from time to time. Has been an issue for a long time, thank goodness for version control.. I just realised that there seems to be a problem with file injection into the index.html when installing any bower components. They download to the bower_components folder and get added to bower.json but not injected into the index.html.\nI also tested this on a fresh project and it won't do it. Do you know if this is this a known problem with generator-webapp @neilhem?\nThis is somewhat related to my previous question above as this is the error I get when calling any script in main.js. Of course it's happening because the scripts aren't actually being injected and therefore the uncaught reference error.\nIn the meantime I'm going to have to manually include scripts :/\nThanks.. ``` js\n/global -$ /\n'use strict';\n// generated on 2015-05-14 using generator-gulp-webapp 0.3.0\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar browserSync = require('browser-sync');\nvar reload = browserSync.reload;\ngulp.task('styles', function () {\n  return gulp.src('app/styles/main.less')\n    .pipe($.sourcemaps.init())\n        .pipe($.less({\n            paths: ['.']\n    }))\n    .pipe($.postcss([\n      require('autoprefixer-core')({browsers: ['last 1 version']})\n    ]))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('jshint', function () {\n  return gulp.src('app/scripts/*/.js')\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($.if(!browserSync.active, $.jshint.reporter('default')));\n});\ngulp.task('html', ['styles'], function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\nreturn gulp.src('app/.html')\n    .pipe(assets)\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.if('.html', $.minifyHtml({conditionals: true, loose: true})))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', function () {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('fonts', function () {\n  return gulp.src(require('main-bower-files')({\n    filter: '/*.{eot,svg,ttf,woff,woff2}'\n  }).concat('app/fonts//*'))\n    .pipe(gulp.dest('.tmp/fonts'))\n    .pipe(gulp.dest('dist/fonts'));\n});\ngulp.task('extras', function () {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', require('del').bind(null, ['.tmp', 'dist']));\ngulp.task('serve', ['styles', 'fonts'], function () {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\n// watch for changes\n  gulp.watch([\n    'app/.html',\n    'app/scripts//*.js',\n    'app/images//',\n    '.tmp/fonts/*/'\n  ]).on('change', reload);\ngulp.watch('app/styles//*.less', ['styles', reload]);\n  gulp.watch('app/fonts//*', ['fonts']);\n  gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\n// inject bower components\ngulp.task('wiredep', function () {\n  var wiredep = require('wiredep').stream;\ngulp.src('app/styles/*.less')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\ngulp.task('build', ['jshint', 'html', 'images', 'fonts', 'extras'], function () {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', ['clean'], function () {\n  gulp.start('build');\n});\n```\n. This is what the index.html looks like in the 'app' folder, minus the content between the body tags.\n``` html\n<!doctype html>\n\n\n\n\n\nMilpark Education-->\n     Place favicon.ico and apple-touch-icon.png in the root directory \n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.css\" />\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css styles/main.css -->\n<link rel=\"stylesheet\" href=\"styles/main.css\">\n<!-- endbuild -->\n\n<!-- build:js scripts/vendor/modernizr.js -->\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<!-- endbuild -->\n\n\n\n ... \n Google Analytics: change UA-XXXXX-X to be your site's ID. \n\n      (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n      function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n      e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n      e.src='//www.google-analytics.com/analytics.js';\n      r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n      ga('create','UA-XXXXX-X');ga('send','pageview');\n    \n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n\n    <script src=\"/bower_components/bootstrap/dist/js/bootstrap.js\"></script>\n endbower \n endbuild \n            <script src=\"/bower_components/bootstrap/js/affix.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/alert.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/dropdown.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/tooltip.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/modal.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/transition.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/button.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/popover.js\"></script>\n        <!--<script src=\"/bower_components/bootstrap/js/carousel.js\"></script>-->\n        <script src=\"scripts/_carousel.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/scrollspy.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/collapse.js\"></script>\n        <script src=\"/bower_components/bootstrap/js/tab.js\"></script>\n\n\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n\n\n\n```\n. Not sure why it's stripping some of the content but you're getting the important data there I think?\nAnd I didn't change the folder structure from that which was generated, this is it:\n.bower.rrc\n.editorconfig\n.git\n.gitattributes\n.gitignore\n.jshintrc\n.tmp\n.yo-rc.json\napp\nbower_components\nbower.json\ndist\ngulpfile.js\nnode_modules\npackage.json\ntest\n. Any idea why it's not working?\n. Thanks, but in that case, how would I exclude the HTML being output into the root? I can get main.css and main.js to output to their own folders by creating separate functions for them, thereby excluding the html from being output, but the vendor.js appears to need to be compiled along with the html as it's created by the bower components listed within the html file.\nWhat I'm trying now, but am not sure is something that gulp can do, is to leave the default build as is but add a function that copies the css and js files to where I need them after the build has completed.\nDo you know if that's possible?\nThanks for the help.\n. Nevermind. I've just realised that drupal has it's own built in compiler so no need to ever run a build.\nI did figure out how to run a function that copies the files to my chosen folder after all the other functions have run though, so not a complete waste of time trying to figure it out.\nThanks for the help.\n. Ditto, same thing happens to me from time to time. Has been an issue for a long time, thank goodness for version control.. I just realised that there seems to be a problem with file injection into the index.html when installing any bower components. They download to the bower_components folder and get added to bower.json but not injected into the index.html.\nI also tested this on a fresh project and it won't do it. Do you know if this is this a known problem with generator-webapp @neilhem?\nThis is somewhat related to my previous question above as this is the error I get when calling any script in main.js. Of course it's happening because the scripts aren't actually being injected and therefore the uncaught reference error.\nIn the meantime I'm going to have to manually include scripts :/\nThanks.. ",
    "jsdevtom": "Purifycss is better:\n\n\nDo: npm i -S -D gulp-purifycss\n\n\nIn gulpfile.js add the task like so:\n\n\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.if(dev, $.sourcemaps.write()))\n    .pipe($.purifycss(['./app/**/*.js', './**/*.html'])) //<-- **INSERT THIS HERE**\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}))\n})\n. Thanks for explaining how the problem was solved :-D\n. Purifycss is better:\n\n\nDo: npm i -S -D gulp-purifycss\n\n\nIn gulpfile.js add the task like so:\n\n\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.if(dev, $.sourcemaps.write()))\n    .pipe($.purifycss(['./app/**/*.js', './**/*.html'])) //<-- **INSERT THIS HERE**\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}))\n})\n. Thanks for explaining how the problem was solved :-D\n. ",
    "MattDiMu": "First time I've squashed commits - hopefully I did it right :)\nRemoved the compatibility in the gulpfile, but retained it in the recipies (for users who need it).\n. First time I've squashed commits - hopefully I did it right :)\nRemoved the compatibility in the gulpfile, but retained it in the recipies (for users who need it).\n. ",
    "danrouse": "Rebased and fixed code styling. The snippet to create the bower_components dir was because leaving out jQuery would often leave bower with no dependencies to install in previous versions, causing wiredep to throw an error if you were to gulp build a freshly generated install. Current version seems to insert dev dependencies into bower, so that problem should never occur.\n. Okay, I changed it a bit - moved the confirmation to the parent prompt call, fixing the idiosyncratic test condition and making the whole thing a bit cleaner. Squashed it all down to one commit.\nAlso fixed a typo in the bootstrap tests :neckbeard: \n. Rebased and fixed code styling. The snippet to create the bower_components dir was because leaving out jQuery would often leave bower with no dependencies to install in previous versions, causing wiredep to throw an error if you were to gulp build a freshly generated install. Current version seems to insert dev dependencies into bower, so that problem should never occur.\n. Okay, I changed it a bit - moved the confirmation to the parent prompt call, fixing the idiosyncratic test condition and making the whole thing a bit cleaner. Squashed it all down to one commit.\nAlso fixed a typo in the bootstrap tests :neckbeard: \n. ",
    "JZL": "I'm sorry for bothering you, I found http://stackoverflow.com/questions/22118807/yeoman-cant-recognize-a-generator-that-was-installed-globally which fixed it perfeclty\n. I'm sorry for bothering you, I found http://stackoverflow.com/questions/22118807/yeoman-cant-recognize-a-generator-that-was-installed-globally which fixed it perfeclty\n. ",
    "Peeja": "Ah, got it, thanks. I'm still used to Ruby, and I was thinking that a bare gulp would pick up the local version. Cheers!\n. Ah, got it, thanks. I'm still used to Ruby, and I was thinking that a bare gulp would pick up the local version. Cheers!\n. ",
    "koenverburg": "you can use gulp 4 with a gulpfile.babel.js file, just install babel local and then it will be fine.\n. you can use gulp 4 with a gulpfile.babel.js file, just install babel local and then it will be fine.\n. ",
    "tmorton": "I'm not sure why Travis is failing.  It's only failing the Node 0.10 check, which passes on my machine.\n. @silvenon If they're in package.json won't they apply to the regular lint task as well?  That seems undesirable.\n. I'm not sure why Travis is failing.  It's only failing the Node 0.10 check, which passes on my machine.\n. @silvenon If they're in package.json won't they apply to the regular lint task as well?  That seems undesirable.\n. ",
    "zackexplosion": "This was my index.html and gulpfile.js\nhttps://gist.github.com/cstony0917/9829597fa5b25c36bbd7\nHow can I get the latest version?\n. I was looking for something like this https://github.com/gruntjs/grunt-contrib-uglify#turn-off-console-warnings\n. Yes, Could you reopen the issue? Thanks. :wheelchair: \n. It works, thank you for the reply , I was look for this for a long time :+1: \n. OK. I will try it , thanks for your reply :)\n. I am testing my code with command gulp serve:test  but the test server can't read the files from app/scripts\n. @gaboesquivel Thank you , this link is very helpful . Can you put it in the documents?.\n. By default, is not binding when you start the local dev server\n. I think eslint plugin is not available on every editor?\n. This was my index.html and gulpfile.js\nhttps://gist.github.com/cstony0917/9829597fa5b25c36bbd7\nHow can I get the latest version?\n. I was looking for something like this https://github.com/gruntjs/grunt-contrib-uglify#turn-off-console-warnings\n. Yes, Could you reopen the issue? Thanks. :wheelchair: \n. It works, thank you for the reply , I was look for this for a long time :+1: \n. OK. I will try it , thanks for your reply :)\n. I am testing my code with command gulp serve:test  but the test server can't read the files from app/scripts\n. @gaboesquivel Thank you , this link is very helpful . Can you put it in the documents?.\n. By default, is not binding when you start the local dev server\n. I think eslint plugin is not available on every editor?\n. ",
    "shashvattrip": "But because of this my build gets blocked. Also, I cant seem to find how to locally config eslint. And I am not using an undefined variable anywhere. I would expect jQuery to be loaded before my scripts is called. \nCan you help me, please?\n. Yes, setting the env jquery to true solved it. Thanks a lot @silvenon! \n. But because of this my build gets blocked. Also, I cant seem to find how to locally config eslint. And I am not using an undefined variable anywhere. I would expect jQuery to be loaded before my scripts is called. \nCan you help me, please?\n. Yes, setting the env jquery to true solved it. Thanks a lot @silvenon! \n. ",
    "shahzadns": "In each JavaScript file, We have to define every global variable that are used across the file.\nFor example $, angular, Backbone\nSo, the solution is to insert following line on top of our main.js file.\n /* global $ */\nAnd if we are using other libraries with JQuery. we need to add each seperated with comma.\nFor example.\n /* global $, angular, React */\nI know shashvattrip have solved his issue, but I want to help those folks who might face this issue.\nCheers\n. In each JavaScript file, We have to define every global variable that are used across the file.\nFor example $, angular, Backbone\nSo, the solution is to insert following line on top of our main.js file.\n /* global $ */\nAnd if we are using other libraries with JQuery. we need to add each seperated with comma.\nFor example.\n /* global $, angular, React */\nI know shashvattrip have solved his issue, but I want to help those folks who might face this issue.\nCheers\n. ",
    "thinkman99": "Read docs. You need 'Specifying Environments' in file 'package.json'\n\"eslintConfig\": {\n    \"env\": {\n      \"jquery\" : true\n    },\n  }\nhttp://eslint.org/docs/user-guide/configuring.html#specifying-environments\n. Read docs. You need 'Specifying Environments' in file 'package.json'\n\"eslintConfig\": {\n    \"env\": {\n      \"jquery\" : true\n    },\n  }\nhttp://eslint.org/docs/user-guide/configuring.html#specifying-environments\n. ",
    "dendrochronology": "I know this thread is wicked old, but shouldn't I get \"jquery\" : true for free when choosing jQuery from yo's options? Seems like a reasonable assumption that $ should work out of the box.. Running serve works fine for me, but I can't get build to work at all. Tossing a couple log statements in reveals that uglify is processing my index.html as if it were JS in the html task, and it dies on the DOCTYPE line. This is with a fresh node LTS, yo, generator-webapp, blank project, etc. \nShouldn't $.if('*.js' prevent that? . Yep, worked great. Thanks!. I know this thread is wicked old, but shouldn't I get \"jquery\" : true for free when choosing jQuery from yo's options? Seems like a reasonable assumption that $ should work out of the box.. Running serve works fine for me, but I can't get build to work at all. Tossing a couple log statements in reveals that uglify is processing my index.html as if it were JS in the html task, and it dies on the DOCTYPE line. This is with a fresh node LTS, yo, generator-webapp, blank project, etc. \nShouldn't $.if('*.js' prevent that? . Yep, worked great. Thanks!. ",
    "brunowego": "Thanks @arthurvr :+1: \n. Thanks @arthurvr :+1: \n. ",
    "XavRsl": "I didn't change anything in the gulpfile.babel.js. I've actually generated a new project, tried gulp to generate the dist files and it worked. Then, after some time adding my app files, using gulp serve for development, I've run gulp again and styles were gone. I've changed my main.scss file to insert very basic style, but it's still not generating the folder. So is that support or generator related ?\n. OK. Got it. Sorry.\nI was calling the css directly from my html file, without using the bower comment syntax. As it was working in \"watch\" mode, I didn't think it was necessary. The fact that you asked for my index.html made me wonder. I thought : \"Why is he asking for my index.html ? What has that got to do with my problem anyway ???\". Sorry ;)\n. In my html file, I was only using the code : \nhtml\n<link rel=\"stylesheet\" href=\"styles/main.css\">\nWithout requiring it to go through the build process like so : \nhtml\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\nThis was working with gulp serve but didn't generate the files when building the dist folder.\nXavier\n. I didn't change anything in the gulpfile.babel.js. I've actually generated a new project, tried gulp to generate the dist files and it worked. Then, after some time adding my app files, using gulp serve for development, I've run gulp again and styles were gone. I've changed my main.scss file to insert very basic style, but it's still not generating the folder. So is that support or generator related ?\n. OK. Got it. Sorry.\nI was calling the css directly from my html file, without using the bower comment syntax. As it was working in \"watch\" mode, I didn't think it was necessary. The fact that you asked for my index.html made me wonder. I thought : \"Why is he asking for my index.html ? What has that got to do with my problem anyway ???\". Sorry ;)\n. In my html file, I was only using the code : \nhtml\n<link rel=\"stylesheet\" href=\"styles/main.css\">\nWithout requiring it to go through the build process like so : \nhtml\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\nThis was working with gulp serve but didn't generate the files when building the dist folder.\nXavier\n. ",
    "yonatanmn": "would like to see that happen too. \n. would like to see that happen too. \n. ",
    "pascaloliv": "Yes ! :+1: + 1\n. Yes ! :+1: + 1\n. ",
    "vdclouis": "I guess you can just add it to the html task?\njs\nreturn gulp.src('app/*.html')\n    .pipe(assets)\n    .pipe($.if('*.js', $.babel(), $.uglify()))\n    .pipe($.if('*.css', $.minifyCss({compatibility: '*'})))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.if('*.html', $.minifyHtml({conditionals: true, loose: true})))\n    .pipe(gulp.dest('dist'));\nNot sure how this will work with gulp serve though...\nAs you would need babel to transpile your js on the fly\n. I guess you can just add it to the html task?\njs\nreturn gulp.src('app/*.html')\n    .pipe(assets)\n    .pipe($.if('*.js', $.babel(), $.uglify()))\n    .pipe($.if('*.css', $.minifyCss({compatibility: '*'})))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.if('*.html', $.minifyHtml({conditionals: true, loose: true})))\n    .pipe(gulp.dest('dist'));\nNot sure how this will work with gulp serve though...\nAs you would need babel to transpile your js on the fly\n. ",
    "neilhem": "After moving from grunt to gulp we use config like this:\njavascript\ngulp.task('babel', () => {\n  return gulp.src(['app/scripts/**/*.js'])\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\n. @sindresorhus changed stable to 4 & removed iojs\n. Seems like there is problem downloading dependencies from remote server\n. try to add to this array https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.babel.js#L102 folder imported like this baseDir: ['.tmp', 'app', 'imported'],\n. If you want Jasmine as a test framework you should pass --test-framework with jasmine value as it documented here https://github.com/yeoman/generator-gulp-webapp#options.\nExample: yo gulp-webapp --test-framework=jasmine\n. @monzonj If you use node version 4+ try to rename gulpfile.babel.js -> gulpfile.js & change these lines of code\njs\n'use strict'\nconst gulp = require('gulp');\nconst gulpLoadPlugins = require('gulp-load-plugins');\nconst browserSync = require('browser-sync');\nconst del = require('del');\nconst stream = require('wiredep').stream;\n. @robertwalsh0 is trying to say that by default everything is selected, should be written (Press <space> to unselect). BTW I prefer as it is.\n. @rizqinizamil you can shorten code a little bit:\njs\nreturn gulp.src(['app/*.html', '.tmp/**/*.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.', '']}))\n. This generator uses ESLint for linting js files. Make sure that you use latest version available.\n. Why not just exclude bootstrap js files?\n. generator-webapp uses Gulp as a build system instead of Grunt, so it's normal absence of Gruntfile.js file\n. @Saul3d have you already tried to reinstall node modules?\n. Double check if you are using latest version of generator, try to update installed version npm install --global generator-webapp\n. You can just copy folders and/or files you need, that's all. No need for special plugin, just gulp\n. Look at bower.json\n. If you choose jquery option when you run yo webapp it will be added to your bower.json automatically and will be installed to bower_components folder. Also you can install jquery via bower or npm running bower install jquery --save or npm install jquery --save\n. Where are you putting those files? They should be in app/styles directory.\n. There is also recipe\n. Yeah, it is the result of optimization of your css with cssnano's optimise z-index.\n. Yeah, wiredep runs only on running gulp serve command and bower.json file changes. Otherwise run gulp wiredep manually\n. @thepossumstudio Double check that you use node version 4 or higher with latest version of generator-webapp\n. @thepossumstudio glad that we helped you.\n. hi, what's your nodejs version? Seems like you have installed version lower than 4\n. Hi, your app has injection of font file instead of style file in https://github.com/papaponmx/next/blob/bourbon/app/index.html#L13\n. hi, add path to your own js file manually in index.html\nhtml\n<!-- build:js scripts/main.js -->\n<script src=\"scripts/main.js\"></script>\n<script src=\"scripts/own-file.js\"></script>\n<!-- endbuild -->\n. You can use https://www.npmjs.com/package/gulp-data to get data from json file\n. If you want to just change location of styles & scripts on build, you can just change 'dist' references in Gulpfile.js to whatever you want\n. Tested on notebook with Ubuntu 16.04 LTS Chrome 51.0.2704.106 (64-bit) after gulp serve it opens a new tab with localhost:9000\n. Update node to version 4 or higher and reinstall depedencies. Dup #528 \n. @jiyifun because of inactivity we are closing this issue, feel free to  reopen if you still have such a problem.\n. Seems like you have deleted something from gulpfile.js or index.html, by default everything copies into dist folder on gulp\n. @koltejas Yeah, right. All copy from .tmp -> dist are done in html task. So what is the result? When you run gulp task you do not have built styles, scripts in dist folder?. Hi, can you check your node dependencies are up-to-date via npm outdated?\n. @MorizelHodges hope you have found out what caused the error, feel free to reopen if you still have the error\n. @silvenon github's a new feature \"Squash & merge\" is a time saver.\n. Uglify task cannot run because of js syntax error\n. Hi, have you tried to install this plugin?\n. LGTM\n. Hi, have you tried to reinstall dependencies?\nP.S. Looks like you have js syntax error, so uglify task throws error\n. With version gulp-sourcemaps v2.2 sourcemap file is generated in .tmp folder\n. @PlkMarudny looks like you have invalid javascript code. I recommend updating dependencies via rm -rf node_modules && npm install, also check project dependencies outdated or not via npm outdated.. Hi, it's possible\n1. Change gulpfile.js to compile spec files with Babel\n2. Put them into .tmp/scripts/spec for example\n3. Make server look into this folder\n4. Then run gulp serve:test\n. Hi, thank you for your request. Would you mind to add commit with fixes, so we will be able to merge your PR?\n. Interesting case, we use nunjucks too & have more than 50+ files (layouts, includes, pages), but compiling of view take much less time\n. Hi, use floats or flexbox, so you will not have such a problem.\n. Hi, do you use this recipe?\n. You mean bootstrap's built-in js plugins? The way how they are inserted into html file?\n. Maybe we should remove integration with boostrap plugins on generator bootstrap & include them via wiredep\n. Wiredep removes everything between\nhtml\n<!-- bower:js -->wiredep injected scripts here<!-- endbower -->\nScripts which you don't want to be affected by wiredep you should put like this:\nhtml\n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<!-- endbower -->\nwiredep will not update these scripts\n<!-- endbuild -->. Yeah, adding as a feature in generator significantly increases app logic. How about maintaining separate generators which have the same base, but support some functionality from recipe as difference?\n. Fixed, will be released ASAP in the next patch version.\n. Dup #594\n. Hi, have you tried npm rebuild?\n. Hi, have you tried to scaffold project via yo webapp? What errors do you get when you run this command?\n. Hi, so you are not able to run yo webapp?\n. Hi, I use the same rule. Also you can import files without _ & file extension, e.g. _variables.scss -> variables.. Hi, have you tried to remove node_modules and install again?. Hi, Happy New Year. Nice that you have solved your problem. Hi, using npm means we need tools like Rollup or Browserify in our build process. Which requires a lot of changes, so this should be integrated when time comes.. Have you solved your problem?. You haven't passed *myKeyHere* when included script in html file  and remove # sign from <div id=\"#map\"></div> .\nSupport questions better to ask in stackoverflow, you will get faster answer or even find already asked similar question. This question is not related to this project.\nHope I helped you!. @s3c0nDD create file for your variables, for example _custom.scss and copy/paste _variables.scss file content into that file. Import custom.scss before the import of bootstrap, so it will overwrite bootstrap variables.. Your variables should go first, then bootstrap imports. Glad I would help, but I have never used this node module. Better ask support question in stackoverflow, you will get faster answer. Hi, how do you include scripts? You should include scripts in html in right order.. Hi, latest stable gulp version is 3.9 right now. We will migrate to the new version as soon as version 4 will be released.. Do you use node version managers?. Hi, when you import sass partial files do not include leading _.\nInstead of @import \"_common-styles.scss\" use @import \"common-styles.scss\". You can even remove file extension like this @import \"common-styles\". Hi, you need to use tools like Browserify to use imports. We have tutorial how to integrate browserify.. Thanks for the PR!. Hi, just use relative urls like these:\nhtml\n<!-- build:js scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\n. Use absolute urls which include project name. E.g. s1n.github.io/project-x\nhtml\n<!-- build:js /project-x/scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->. You should concatanate all files into single or maybe more files which will be in dist/scripts & reference them in html.\nhtml\n<!-- build:js /project-x/scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\nGithub Pages root should be the dist folder itself.. Hi, why not just use some folder inside scripts, e.g. app/scripts/libs? If want to use plugin which is not in npm or bower just copy source file into this folder.. Usually if I have a code of some plugin/library which in some way can't be installed with npm/bower I just put them into scripts/libs folder. Then just include in html like this:\nhtml\n...\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/main.js\"></script>\n    <script src=\"scripts/libs/old-plugin.js></script>\n    <!-- endbuild -->\n  </body>\n</html>\nHope I helped you!. This is the problem of browsers which cache favicons, try to pass params of filehash, so when it will change you will get a new one.\nhtml\n<link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico?hash=8799864\">. Hi, _articles.scss file is right in app/styles folder?. Using generator-webapp 3.0.1, no problem with importing sass files.. Have you tried just using single file imports? E.g.\nscss\n@import \"index\";\n@import \"articles\";\nLooks like you are using IDE, so maybe duplicate of https://github.com/sass/node-sass/issues/1894. I have never had such problem, try to find answer in stackoverflow. Closing issue as not a bug with generator itself.. Hi, looks like you have .yo-rc.json in Desktop folder, try to remove this file.. Do you include reference to your libs in index.html inside<!-- build:js scripts/vendor.js --><!-- endbuild -->?. Hi, you should also include it in index.html file too.. Hello, have you modified gulpfile.js?. Hi, this issue is nodejs related, not this generator itself.. Hi, recipe will be nice addition. PR would be great!. Hi, we are planning to update this generator to use npm instead of bower. As a temporary solution I recommend you editing Gulpfile.js to use node_modules on gulp tasks. For example gulp serve\njs\ngulp.task('serve', () => {\n  runSequence(['clean', 'wiredep'], ['styles', 'scripts', 'fonts'], () => {\n    browserSync.init({\n      notify: false,\n      port: 9000,\n      server: {\n        baseDir: ['.tmp', 'app'],\n        routes: {\n          '/bower_components': 'bower_components',\n          '/node_modules': 'node_modules' // Add this line\n        }\n      }\n    });\nthen add references to js file/files in index.html. Hi, we are going to release a release without Bower, but there are some blocking issues. After moving from grunt to gulp we use config like this:\njavascript\ngulp.task('babel', () => {\n  return gulp.src(['app/scripts/**/*.js'])\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\n. @sindresorhus changed stable to 4 & removed iojs\n. Seems like there is problem downloading dependencies from remote server\n. try to add to this array https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.babel.js#L102 folder imported like this baseDir: ['.tmp', 'app', 'imported'],\n. If you want Jasmine as a test framework you should pass --test-framework with jasmine value as it documented here https://github.com/yeoman/generator-gulp-webapp#options.\nExample: yo gulp-webapp --test-framework=jasmine\n. @monzonj If you use node version 4+ try to rename gulpfile.babel.js -> gulpfile.js & change these lines of code\njs\n'use strict'\nconst gulp = require('gulp');\nconst gulpLoadPlugins = require('gulp-load-plugins');\nconst browserSync = require('browser-sync');\nconst del = require('del');\nconst stream = require('wiredep').stream;\n. @robertwalsh0 is trying to say that by default everything is selected, should be written (Press <space> to unselect). BTW I prefer as it is.\n. @rizqinizamil you can shorten code a little bit:\njs\nreturn gulp.src(['app/*.html', '.tmp/**/*.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.', '']}))\n. This generator uses ESLint for linting js files. Make sure that you use latest version available.\n. Why not just exclude bootstrap js files?\n. generator-webapp uses Gulp as a build system instead of Grunt, so it's normal absence of Gruntfile.js file\n. @Saul3d have you already tried to reinstall node modules?\n. Double check if you are using latest version of generator, try to update installed version npm install --global generator-webapp\n. You can just copy folders and/or files you need, that's all. No need for special plugin, just gulp\n. Look at bower.json\n. If you choose jquery option when you run yo webapp it will be added to your bower.json automatically and will be installed to bower_components folder. Also you can install jquery via bower or npm running bower install jquery --save or npm install jquery --save\n. Where are you putting those files? They should be in app/styles directory.\n. There is also recipe\n. Yeah, it is the result of optimization of your css with cssnano's optimise z-index.\n. Yeah, wiredep runs only on running gulp serve command and bower.json file changes. Otherwise run gulp wiredep manually\n. @thepossumstudio Double check that you use node version 4 or higher with latest version of generator-webapp\n. @thepossumstudio glad that we helped you.\n. hi, what's your nodejs version? Seems like you have installed version lower than 4\n. Hi, your app has injection of font file instead of style file in https://github.com/papaponmx/next/blob/bourbon/app/index.html#L13\n. hi, add path to your own js file manually in index.html\nhtml\n<!-- build:js scripts/main.js -->\n<script src=\"scripts/main.js\"></script>\n<script src=\"scripts/own-file.js\"></script>\n<!-- endbuild -->\n. You can use https://www.npmjs.com/package/gulp-data to get data from json file\n. If you want to just change location of styles & scripts on build, you can just change 'dist' references in Gulpfile.js to whatever you want\n. Tested on notebook with Ubuntu 16.04 LTS Chrome 51.0.2704.106 (64-bit) after gulp serve it opens a new tab with localhost:9000\n. Update node to version 4 or higher and reinstall depedencies. Dup #528 \n. @jiyifun because of inactivity we are closing this issue, feel free to  reopen if you still have such a problem.\n. Seems like you have deleted something from gulpfile.js or index.html, by default everything copies into dist folder on gulp\n. @koltejas Yeah, right. All copy from .tmp -> dist are done in html task. So what is the result? When you run gulp task you do not have built styles, scripts in dist folder?. Hi, can you check your node dependencies are up-to-date via npm outdated?\n. @MorizelHodges hope you have found out what caused the error, feel free to reopen if you still have the error\n. @silvenon github's a new feature \"Squash & merge\" is a time saver.\n. Uglify task cannot run because of js syntax error\n. Hi, have you tried to install this plugin?\n. LGTM\n. Hi, have you tried to reinstall dependencies?\nP.S. Looks like you have js syntax error, so uglify task throws error\n. With version gulp-sourcemaps v2.2 sourcemap file is generated in .tmp folder\n. @PlkMarudny looks like you have invalid javascript code. I recommend updating dependencies via rm -rf node_modules && npm install, also check project dependencies outdated or not via npm outdated.. Hi, it's possible\n1. Change gulpfile.js to compile spec files with Babel\n2. Put them into .tmp/scripts/spec for example\n3. Make server look into this folder\n4. Then run gulp serve:test\n. Hi, thank you for your request. Would you mind to add commit with fixes, so we will be able to merge your PR?\n. Interesting case, we use nunjucks too & have more than 50+ files (layouts, includes, pages), but compiling of view take much less time\n. Hi, use floats or flexbox, so you will not have such a problem.\n. Hi, do you use this recipe?\n. You mean bootstrap's built-in js plugins? The way how they are inserted into html file?\n. Maybe we should remove integration with boostrap plugins on generator bootstrap & include them via wiredep\n. Wiredep removes everything between\nhtml\n<!-- bower:js -->wiredep injected scripts here<!-- endbower -->\nScripts which you don't want to be affected by wiredep you should put like this:\nhtml\n<!-- build:js scripts/vendor.js -->\n<!-- bower:js -->\n<!-- endbower -->\nwiredep will not update these scripts\n<!-- endbuild -->. Yeah, adding as a feature in generator significantly increases app logic. How about maintaining separate generators which have the same base, but support some functionality from recipe as difference?\n. Fixed, will be released ASAP in the next patch version.\n. Dup #594\n. Hi, have you tried npm rebuild?\n. Hi, have you tried to scaffold project via yo webapp? What errors do you get when you run this command?\n. Hi, so you are not able to run yo webapp?\n. Hi, I use the same rule. Also you can import files without _ & file extension, e.g. _variables.scss -> variables.. Hi, have you tried to remove node_modules and install again?. Hi, Happy New Year. Nice that you have solved your problem. Hi, using npm means we need tools like Rollup or Browserify in our build process. Which requires a lot of changes, so this should be integrated when time comes.. Have you solved your problem?. You haven't passed *myKeyHere* when included script in html file  and remove # sign from <div id=\"#map\"></div> .\nSupport questions better to ask in stackoverflow, you will get faster answer or even find already asked similar question. This question is not related to this project.\nHope I helped you!. @s3c0nDD create file for your variables, for example _custom.scss and copy/paste _variables.scss file content into that file. Import custom.scss before the import of bootstrap, so it will overwrite bootstrap variables.. Your variables should go first, then bootstrap imports. Glad I would help, but I have never used this node module. Better ask support question in stackoverflow, you will get faster answer. Hi, how do you include scripts? You should include scripts in html in right order.. Hi, latest stable gulp version is 3.9 right now. We will migrate to the new version as soon as version 4 will be released.. Do you use node version managers?. Hi, when you import sass partial files do not include leading _.\nInstead of @import \"_common-styles.scss\" use @import \"common-styles.scss\". You can even remove file extension like this @import \"common-styles\". Hi, you need to use tools like Browserify to use imports. We have tutorial how to integrate browserify.. Thanks for the PR!. Hi, just use relative urls like these:\nhtml\n<!-- build:js scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\n. Use absolute urls which include project name. E.g. s1n.github.io/project-x\nhtml\n<!-- build:js /project-x/scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->. You should concatanate all files into single or maybe more files which will be in dist/scripts & reference them in html.\nhtml\n<!-- build:js /project-x/scripts/main.js -->\n<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n<script src=\"/node_modules/tether/dist/js/tether.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\nGithub Pages root should be the dist folder itself.. Hi, why not just use some folder inside scripts, e.g. app/scripts/libs? If want to use plugin which is not in npm or bower just copy source file into this folder.. Usually if I have a code of some plugin/library which in some way can't be installed with npm/bower I just put them into scripts/libs folder. Then just include in html like this:\nhtml\n...\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/main.js\"></script>\n    <script src=\"scripts/libs/old-plugin.js></script>\n    <!-- endbuild -->\n  </body>\n</html>\nHope I helped you!. This is the problem of browsers which cache favicons, try to pass params of filehash, so when it will change you will get a new one.\nhtml\n<link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico?hash=8799864\">. Hi, _articles.scss file is right in app/styles folder?. Using generator-webapp 3.0.1, no problem with importing sass files.. Have you tried just using single file imports? E.g.\nscss\n@import \"index\";\n@import \"articles\";\nLooks like you are using IDE, so maybe duplicate of https://github.com/sass/node-sass/issues/1894. I have never had such problem, try to find answer in stackoverflow. Closing issue as not a bug with generator itself.. Hi, looks like you have .yo-rc.json in Desktop folder, try to remove this file.. Do you include reference to your libs in index.html inside<!-- build:js scripts/vendor.js --><!-- endbuild -->?. Hi, you should also include it in index.html file too.. Hello, have you modified gulpfile.js?. Hi, this issue is nodejs related, not this generator itself.. Hi, recipe will be nice addition. PR would be great!. Hi, we are planning to update this generator to use npm instead of bower. As a temporary solution I recommend you editing Gulpfile.js to use node_modules on gulp tasks. For example gulp serve\njs\ngulp.task('serve', () => {\n  runSequence(['clean', 'wiredep'], ['styles', 'scripts', 'fonts'], () => {\n    browserSync.init({\n      notify: false,\n      port: 9000,\n      server: {\n        baseDir: ['.tmp', 'app'],\n        routes: {\n          '/bower_components': 'bower_components',\n          '/node_modules': 'node_modules' // Add this line\n        }\n      }\n    });\nthen add references to js file/files in index.html. Hi, we are going to release a release without Bower, but there are some blocking issues. ",
    "wenerme": "@neilhem How you watch and recompile ?\n I use you task config\ngulp.task('scripts', () => {\n  return gulp.src(['app/scripts/**/*.js', '!app/scripts/vendor/**/*.js'])\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nAnd add \ngulp.watch('app/script/**/*.js', ['scripts']);\ngulp.watch('app/script/main.js', ['scripts']);\nto serve, but it will not recompile the js . How can I do ?\n. Changed to \ngulp.watch('app/**/*.js', ['scripts']);\nworks, why ?\n. twbs4 write in scss instead of less in twbs3.\n. @neilhem How you watch and recompile ?\n I use you task config\ngulp.task('scripts', () => {\n  return gulp.src(['app/scripts/**/*.js', '!app/scripts/vendor/**/*.js'])\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nAnd add \ngulp.watch('app/script/**/*.js', ['scripts']);\ngulp.watch('app/script/main.js', ['scripts']);\nto serve, but it will not recompile the js . How can I do ?\n. Changed to \ngulp.watch('app/**/*.js', ['scripts']);\nworks, why ?\n. twbs4 write in scss instead of less in twbs3.\n. ",
    "colinwhat": "I added the watch tasks, but is the 'scripts' task that @wenerme added also working for the build? I can't tell if the build is building from the source files or the tmp folder.\n. I added the watch tasks, but is the 'scripts' task that @wenerme added also working for the build? I can't tell if the build is building from the source files or the tmp folder.\n. ",
    "alexej-d": "It's a pity the pull request received no updates any more, would love to have an easy way to write es6 js :disappointed: \n. Sounds awesome! Looking forward! :heart_eyes: \n. Probably leave out the module functionality and integrate that into another project to keep that one simple. (e.g. only add basic transpiling to this generator)\n. I would also prefer npm + webpack over the current bower workflow but it may be too complex for this kind of generator. Also I like my useref blocks for static assets when coding static pages, not sure how a webpack equivalent would look like\u2026\nEDIT: Would that not be a good start on a way to replace bower and use webpack? I can see that that still implies several additional changes to different tasks and other files like package.json. But I believe the advantages would outweigh the difficulties of refactoring this generator.. Bower is now officially deprecated https://github.com/bower/bower/issues/2298. It's a pity the pull request received no updates any more, would love to have an easy way to write es6 js :disappointed: \n. Sounds awesome! Looking forward! :heart_eyes: \n. Probably leave out the module functionality and integrate that into another project to keep that one simple. (e.g. only add basic transpiling to this generator)\n. I would also prefer npm + webpack over the current bower workflow but it may be too complex for this kind of generator. Also I like my useref blocks for static assets when coding static pages, not sure how a webpack equivalent would look like\u2026\nEDIT: Would that not be a good start on a way to replace bower and use webpack? I can see that that still implies several additional changes to different tasks and other files like package.json. But I believe the advantages would outweigh the difficulties of refactoring this generator.. Bower is now officially deprecated https://github.com/bower/bower/issues/2298. ",
    "Keyamoon": "Is it planned to support es6 modules with npm packages?\n. I have only used browserify so far. A separate project would be fine, but supporting modules using browserfiy wouldn't be that complicated either.\n. @silvenon Thanks. Will take a look. With all the build tool options available, I'm no longer sure what I'm looking for!\n. @silvenon That's a good summary. Thanks for sharing.\n. Is it planned to support es6 modules with npm packages?\n. I have only used browserify so far. A separate project would be fine, but supporting modules using browserfiy wouldn't be that complicated either.\n. @silvenon Thanks. Will take a look. With all the build tool options available, I'm no longer sure what I'm looking for!\n. @silvenon That's a good summary. Thanks for sharing.\n. ",
    "WXLWEB": "but when run gulp serve the pages didn't include jquery and i don't know how to add jquery to my project because i don't where to add js? \n. i have sloved this problem, cause your project didn't include the jquery in the html,so i add the path of jquery to the html,like this:\n\n. i have another quesion about the css,when i run gulp serve,the page like this:\n\nit seems the bootstrap.css not include,anyone can tell me what's wrong about this?\n. thanks,i have solved this problem,because when i run gulp serve the task of gulp wiredep didn't work,even i don't know what's about this\n. thanks,no others\n. but when run gulp serve the pages didn't include jquery and i don't know how to add jquery to my project because i don't where to add js? \n. i have sloved this problem, cause your project didn't include the jquery in the html,so i add the path of jquery to the html,like this:\n\n. i have another quesion about the css,when i run gulp serve,the page like this:\n\nit seems the bootstrap.css not include,anyone can tell me what's wrong about this?\n. thanks,i have solved this problem,because when i run gulp serve the task of gulp wiredep didn't work,even i don't know what's about this\n. thanks,no others\n. ",
    "claudioviola": "How can \u00a0I check generator version?\nNothing is append on fresh install and I did not modify anything?\nCan I try to uninstall and install again via node?\nThank you!\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Mon, Jul 6, 2015 at 11:08 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nWhich version of the generator are you using? Does this happen on a fresh install or did you modify something?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-118998963\n. Hi\n\nthe version is: generator-gulp-webapp@0.2.0\nThanks\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Tue, Jul 7, 2015 at 12:58 AM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nRun this:\nsh\nnpm ls -g | grep generator-gulp-webapp\nWe'll start from there.\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-119022503\n. Hi,\n\nafter updated generator I had to update npm too. Now it works :)\nThank you so much for your support!\nHave nice day!\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Tue, Jul 7, 2015 at 12:36 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nThere have been a fair amount of releases since then. Could you upgrade to the latest version and try again?\nnpm install --global generator-gulp-webapp\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-119164295\n. How can \u00a0I check generator version?\n\nNothing is append on fresh install and I did not modify anything?\nCan I try to uninstall and install again via node?\nThank you!\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Mon, Jul 6, 2015 at 11:08 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nWhich version of the generator are you using? Does this happen on a fresh install or did you modify something?\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-118998963\n. Hi\n\nthe version is: generator-gulp-webapp@0.2.0\nThanks\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Tue, Jul 7, 2015 at 12:58 AM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nRun this:\nsh\nnpm ls -g | grep generator-gulp-webapp\nWe'll start from there.\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-119022503\n. Hi,\n\nafter updated generator I had to update npm too. Now it works :)\nThank you so much for your support!\nHave nice day!\n--\u00a0\nClaudio Viola\nFront end Interactive developerTel. +39 320 45 244 21\nwww.claudioviola.net\nOn Tue, Jul 7, 2015 at 12:36 PM, Matija Marohni\u0107 notifications@github.com\nwrote:\n\nThere have been a fair amount of releases since then. Could you upgrade to the latest version and try again?\nnpm install --global generator-gulp-webapp\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/yeoman/generator-gulp-webapp/issues/355#issuecomment-119164295\n. \n",
    "paulballesty": "Had the same issue. Managed to fix it installing babel-core with npm install --save-dev babel-core.\n. Had the same issue. Managed to fix it installing babel-core with npm install --save-dev babel-core.\n. ",
    "timdiacon": "I'm getting this error too with latest version of generator - can be fixed as per comment from paulballesty but surely should just be in the package.json so gets installed to begin with no?\n. I'm getting this error too with latest version of generator - can be fixed as per comment from paulballesty but surely should just be in the package.json so gets installed to begin with no?\n. ",
    "rish": "@timdiacon I managed to monkey patch this by adding babel pack into the devDependencies for the package.json that this generator creates, like so:\n\"babel-core\": \"^5.5.6\",\n\"babel\": \"^5.5.6\",\n....\n. @silvenon Yes I was trying to simulate this via the fix but this doesn't work on a fresh version of a generated app.\n. Ok so I have resolved this by upgrading my node version to iojs-v2.3.4 which would start with a fresh copy of the ~/.npm directory. This may have been an npm caching issue.\nBut I was able to successfully run the generator with a global install of just yo, gulp, bower.\nThank you for the assistance though @silvenon. :smiley:\n. So trying this out on another machine where I'm using iojs-2.2.1 and ensuring it's not an npm caching issue:-\n[22:32:43] Failed to load external module babel/register\n/Users/{user}/{project_dir}/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\n    at exports.runInThisContext (vm.js:53:16)\n    at Module._compile (module.js:409:25)\n    at Object.Module._extensions..js (module.js:444:10)\n    at Module.load (module.js:351:32)\n    at Function.Module._load (module.js:306:12)\n    at Module.require (module.js:361:17)\n    at require (module.js:380:17)\n    at Liftoff.handleArguments (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/bin/gulp.js:116:3)\n    at Liftoff.<anonymous> (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/node_modules/liftoff/index.js:192:16)\n    at module.exports (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/node_modules/liftoff/node_modules/flagged-respawn/index.js:17:3)\nInstalling iojs-2.3.4 and it works.\nMay be worth mentioning this as a requisite on the README?\nI can create a pull request if you would prefer to identify this.\nI don't have any spare time to test this out on previous iojs-2.3.* versions or other official versions but it would be could so set the minimum version required due to breaking changes from multiple dependencies.\nThank you for the patches though, for this very useful generator, none the less! :beer:\n. @Revod I have posted a new issue on the gulp repo here:\nhttps://github.com/gulpjs/gulp/issues/1364 it might be related?\n. If you are using Babel Core 6.0.0 onwards you need to use the plugin presets as outlined in the announcements:\nhttps://babeljs.io/blog/2015/10/29/6.0.0/\n. @timdiacon I managed to monkey patch this by adding babel pack into the devDependencies for the package.json that this generator creates, like so:\n\"babel-core\": \"^5.5.6\",\n\"babel\": \"^5.5.6\",\n....\n. @silvenon Yes I was trying to simulate this via the fix but this doesn't work on a fresh version of a generated app.\n. Ok so I have resolved this by upgrading my node version to iojs-v2.3.4 which would start with a fresh copy of the ~/.npm directory. This may have been an npm caching issue.\nBut I was able to successfully run the generator with a global install of just yo, gulp, bower.\nThank you for the assistance though @silvenon. :smiley:\n. So trying this out on another machine where I'm using iojs-2.2.1 and ensuring it's not an npm caching issue:-\n[22:32:43] Failed to load external module babel/register\n/Users/{user}/{project_dir}/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\n    at exports.runInThisContext (vm.js:53:16)\n    at Module._compile (module.js:409:25)\n    at Object.Module._extensions..js (module.js:444:10)\n    at Module.load (module.js:351:32)\n    at Function.Module._load (module.js:306:12)\n    at Module.require (module.js:361:17)\n    at require (module.js:380:17)\n    at Liftoff.handleArguments (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/bin/gulp.js:116:3)\n    at Liftoff.<anonymous> (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/node_modules/liftoff/index.js:192:16)\n    at module.exports (/Users/{user}/.nodenv/versions/iojs-2.2.1/lib/node_modules/gulp/node_modules/liftoff/node_modules/flagged-respawn/index.js:17:3)\nInstalling iojs-2.3.4 and it works.\nMay be worth mentioning this as a requisite on the README?\nI can create a pull request if you would prefer to identify this.\nI don't have any spare time to test this out on previous iojs-2.3.* versions or other official versions but it would be could so set the minimum version required due to breaking changes from multiple dependencies.\nThank you for the patches though, for this very useful generator, none the less! :beer:\n. @Revod I have posted a new issue on the gulp repo here:\nhttps://github.com/gulpjs/gulp/issues/1364 it might be related?\n. If you are using Babel Core 6.0.0 onwards you need to use the plugin presets as outlined in the announcements:\nhttps://babeljs.io/blog/2015/10/29/6.0.0/\n. ",
    "dowsanjack": "I'm still having this issue, where gulp is searching for babel/register. \ngulp serve is echoing the following output:\n[13:14:40] Failed to load external module babel/register\n/Users/ankit/dev/coffee/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\n    at exports.runInThisContext (vm.js:73:16)\n    at Module._compile (module.js:443:25)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Liftoff.handleArguments (/usr/local/lib/node_modules/gulp/bin/gulp.js:116:3)\n    at Liftoff.<anonymous> (/usr/local/lib/node_modules/gulp/node_modules/liftoff/index.js:192:16)\n    at module.exports (/usr/local/lib/node_modules/gulp/node_modules/liftoff/node_modules/flagged-respawn/index.js:17:3)\nGulp version : 3.9.0\nWhen I do gulp -v: \n[13:53:28] Failed to load external module babel/register\n[13:53:28] CLI version 3.9.0\n[13:53:28] Local version 3.9.0\nCan anyone guide where things are going wrong.\n. :-1: nopes.\n. Did what you advised, but no change in output. :( . Even reinstalled node. \n. I'm still having this issue, where gulp is searching for babel/register. \ngulp serve is echoing the following output:\n[13:14:40] Failed to load external module babel/register\n/Users/ankit/dev/coffee/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\n    at exports.runInThisContext (vm.js:73:16)\n    at Module._compile (module.js:443:25)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Liftoff.handleArguments (/usr/local/lib/node_modules/gulp/bin/gulp.js:116:3)\n    at Liftoff.<anonymous> (/usr/local/lib/node_modules/gulp/node_modules/liftoff/index.js:192:16)\n    at module.exports (/usr/local/lib/node_modules/gulp/node_modules/liftoff/node_modules/flagged-respawn/index.js:17:3)\nGulp version : 3.9.0\nWhen I do gulp -v: \n[13:53:28] Failed to load external module babel/register\n[13:53:28] CLI version 3.9.0\n[13:53:28] Local version 3.9.0\nCan anyone guide where things are going wrong.\n. :-1: nopes.\n. Did what you advised, but no change in output. :( . Even reinstalled node. \n. ",
    "shadowmint": "I'm seeing this on ubuntu too.\n[10:4:00] Failed to load external module babel/register\n[10:44:00] CLI version 3.9.0\n[10:44:00] Local version 3.9.0\nTo fix I had to install babel, not babel-core.\ndoug@doug-VirtualBox:~/wok$ gulp --version\n[10:55:23] Requiring external module babel-core/register\n[10:55:23] CLI version 3.9.0\n[10:55:23] Local version 3.9.0\ndoug@doug-VirtualBox:~/wok$ node --version\nv0.10.25\nWeirdly this does work on OSX without any problem. \nNo idea, but it's weird.\nNotice how once babel is installed it tries for babel-core/register instead of babel/register. What is up with that? O_o\n. I'm seeing this on ubuntu too.\n[10:4:00] Failed to load external module babel/register\n[10:44:00] CLI version 3.9.0\n[10:44:00] Local version 3.9.0\nTo fix I had to install babel, not babel-core.\ndoug@doug-VirtualBox:~/wok$ gulp --version\n[10:55:23] Requiring external module babel-core/register\n[10:55:23] CLI version 3.9.0\n[10:55:23] Local version 3.9.0\ndoug@doug-VirtualBox:~/wok$ node --version\nv0.10.25\nWeirdly this does work on OSX without any problem. \nNo idea, but it's weird.\nNotice how once babel is installed it tries for babel-core/register instead of babel/register. What is up with that? O_o\n. ",
    "Revod": "I have the same problem, tried that https://github.com/yeoman/generator-gulp-webapp/issues/356#issuecomment-126231339 and nope :-1: \nI have elementary os (based ubuntu) \nnode --version: \nv4.2.1\ngulp --version\n[05:27:45] Failed to load external module babel-core/register\n[05:27:45] Failed to load external module babel/register\n[05:27:45] CLI version 3.9.0\n[05:27:45] Local version 3.9.0\n. I solved my problem uninstalling Node and NPM and reinstall using this guide of Team TreeHouse\n. I have the same problem, tried that https://github.com/yeoman/generator-gulp-webapp/issues/356#issuecomment-126231339 and nope :-1: \nI have elementary os (based ubuntu) \nnode --version: \nv4.2.1\ngulp --version\n[05:27:45] Failed to load external module babel-core/register\n[05:27:45] Failed to load external module babel/register\n[05:27:45] CLI version 3.9.0\n[05:27:45] Local version 3.9.0\n. I solved my problem uninstalling Node and NPM and reinstall using this guide of Team TreeHouse\n. ",
    "blackfyre": "Installing the babel-corelocally with npm install --save-dev babel-core solved my problem, but the SyntaxError: Unexpected reserved word problem still remains when trying to run gulp serve.\n. This article held the solution for my problems.\n. Installing the babel-corelocally with npm install --save-dev babel-core solved my problem, but the SyntaxError: Unexpected reserved word problem still remains when trying to run gulp serve.\n. This article held the solution for my problems.\n. ",
    "wangchi": "@blackfyre The article helped me too :+1: \n. @baermowei  \"Cannot read property 'error' of undefined\"\uff1athis.log\u6ca1\u6709error\u8fd9\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u8bd5\u7740\u628a\u8fd9\u4e2aif\u5224\u65ad\u53bb\u6389\u8bd5\u8bd5\n. @blackfyre The article helped me too :+1: \n. @baermowei  \"Cannot read property 'error' of undefined\"\uff1athis.log\u6ca1\u6709error\u8fd9\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u8bd5\u7740\u628a\u8fd9\u4e2aif\u5224\u65ad\u53bb\u6389\u8bd5\u8bd5\n. ",
    "baermowei": "\u7136\u800c\u8fd8\u662f\u6ca1\u4ec0\u4e48\u7528\u3002\n\u5df2\u7ecf\u7528\u4e86\u4e0a\u9762\u6240\u6709\u7684\u65b9\u6cd5\uff0c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u7b80\u76f4\u88ab\u6574\u75af\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\nhelp me please!\n\n```\n gulp serve\n[18:14:03] Requiring external module babel-core/register\nE:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:126\n      if (!option) this.log.error(\"Unknown option: \" + alias + \".\" + key, ReferenceError);\n                           ^\nTypeError: Cannot read property 'error' of undefined\n    at OptionManager.mergeOptions (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:126:28)\n    at OptionManager.addConfig (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:107:10)\n    at OptionManager.findConfigs (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:168:35)\n    at OptionManager.init (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:229:12)\n    at compile (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:117:22)\n    at normalLoader (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:199:14)\n    at Object.require.extensions.(anonymous function) [as .js] (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:216:7)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:313:12)\n    at Module.require (module.js:366:17)\n```\n. \u7136\u800c\u8fd8\u662f\u6ca1\u4ec0\u4e48\u7528\u3002\n\u5df2\u7ecf\u7528\u4e86\u4e0a\u9762\u6240\u6709\u7684\u65b9\u6cd5\uff0c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u7b80\u76f4\u88ab\u6574\u75af\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\nhelp me please!\n\n```\n gulp serve\n[18:14:03] Requiring external module babel-core/register\nE:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:126\n      if (!option) this.log.error(\"Unknown option: \" + alias + \".\" + key, ReferenceError);\n                           ^\nTypeError: Cannot read property 'error' of undefined\n    at OptionManager.mergeOptions (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:126:28)\n    at OptionManager.addConfig (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:107:10)\n    at OptionManager.findConfigs (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:168:35)\n    at OptionManager.init (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:229:12)\n    at compile (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:117:22)\n    at normalLoader (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:199:14)\n    at Object.require.extensions.(anonymous function) [as .js] (E:\\mygit\\gobuy\\gulp-two\\node_modules\\babel-core\\lib\\api\\register\\node.js:216:7)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:313:12)\n    at Module.require (module.js:366:17)\n```\n. ",
    "aa8562373": "\u6211\u64e6\u3002\u7136\u800c\u5e76\u6ca1\u4ec0\u4e48\u5375\u7528\u3002\u6211\u6d4b\u8bd5\u4e86\u5f88\u591a\u554a~\n. \u6211\u64e6\u3002\u7136\u800c\u5e76\u6ca1\u4ec0\u4e48\u5375\u7528\u3002\u6211\u6d4b\u8bd5\u4e86\u5f88\u591a\u554a~\n. ",
    "jolugama": "hi!. the solution:\ncreate a file .babelrc with:\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}\n. Umm, interesting. I'll try it right now.\n. silvenon, You have removed the scripts task today!!! why?\n. Ok. it's all right!. thanks.\n. Yes, I've seen at other scaffoldings, when you use it in a work project, often you have to adapt to the customer. I find it interesting to use constant, even outside gulp.\n. hi!. the solution:\ncreate a file .babelrc with:\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}\n. Umm, interesting. I'll try it right now.\n. silvenon, You have removed the scripts task today!!! why?\n. Ok. it's all right!. thanks.\n. Yes, I've seen at other scaffoldings, when you use it in a work project, often you have to adapt to the customer. I find it interesting to use constant, even outside gulp.\n. ",
    "xiao-ai": "@jolugama Solved my problem, thanks!\n@aa8562373 \u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u4e2a~\nAlso you can refer to: http://babeljs.io/docs/plugins/preset-es2015/\n. @jolugama Solved my problem, thanks!\n@aa8562373 \u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u4e2a~\nAlso you can refer to: http://babeljs.io/docs/plugins/preset-es2015/\n. ",
    "Khrotan": "@jolugama Solved my problem also, thank you.\n. @jolugama Solved my problem also, thank you.\n. ",
    "ShaneXie": "I solved this problem by using node 4.x instead of 5.x.\n. I solved this problem by using node 4.x instead of 5.x.\n. ",
    "alphapilgrim": "Im having this problem when I run gulp serve, I've tried all the above solutions with no success. Help please!\nRequiring external module babel-register\n/node_modules/babel-core/lib/transformation/file/options/option-manager.js:372\n          throw new Error(\"Couldn't find preset \" + JSON.stringify(val) + \" relative to directory \" + JSON.stringify(dirname));\n. @acauamontiel thanks for the resource,  but I had ran updates exactly like those that I gather from other threads. No luck, had to remove the generator and reinstall. Which is I was trying to avoid, luckily not as much work as I thought post reinstall. I mean comparatively speaking to trying the above mentioned solutions, none the less appreciate the response as no one had tried to help. \n. @silvenon no this happened after I had add some new dependencies. I did have the gulp server running, also had tried to gulp wiredep just in case.\n. @frankgraave, just covering all bases did you run gulp serve from the project root? Also what is the error message exactly?\n. @silvenon I don't think I could replicate. I removed the generator and did a brand new install. Works fine now, but kind of a pain, since this is the second time I've had to do this.\n. Im having this problem when I run gulp serve, I've tried all the above solutions with no success. Help please!\nRequiring external module babel-register\n/node_modules/babel-core/lib/transformation/file/options/option-manager.js:372\n          throw new Error(\"Couldn't find preset \" + JSON.stringify(val) + \" relative to directory \" + JSON.stringify(dirname));\n. @acauamontiel thanks for the resource,  but I had ran updates exactly like those that I gather from other threads. No luck, had to remove the generator and reinstall. Which is I was trying to avoid, luckily not as much work as I thought post reinstall. I mean comparatively speaking to trying the above mentioned solutions, none the less appreciate the response as no one had tried to help. \n. @silvenon no this happened after I had add some new dependencies. I did have the gulp server running, also had tried to gulp wiredep just in case.\n. @frankgraave, just covering all bases did you run gulp serve from the project root? Also what is the error message exactly?\n. @silvenon I don't think I could replicate. I removed the generator and did a brand new install. Works fine now, but kind of a pain, since this is the second time I've had to do this.\n. ",
    "acauamontiel": "This helped me to run Gulp without problems: https://markgoodyear.com/2015/06/using-es6-with-gulp/\n. This helped me to run Gulp without problems: https://markgoodyear.com/2015/06/using-es6-with-gulp/\n. ",
    "frankgraave": "Hi there! I just started to use gulp, so I have a fresh install. Everything is working fine, but this error keeps showing everytime when I do gulp serve. Tried several thing's mentioned in this post that helped others, but still no succes.\n. Hi there! I just started to use gulp, so I have a fresh install. Everything is working fine, but this error keeps showing everytime when I do gulp serve. Tried several thing's mentioned in this post that helped others, but still no succes.\n. ",
    "dpalomar": "Same issue here.\nFresh install.\n- Ubuntu 14.04\n- nvm v0.31.0\n- node v4.4.1\n- npm v3.8.3\n- yo v1.7.0\n- bower v1.7.7\n- gulp v3.9.1\n- grunt-cli v1.1.0\n- grunt v0.4.5\nAfter run command gulp serve shows:\n``Failed to load external module babel-register\n[15:34:42] Failed to load external module babel-core/register\n[15:34:42] Failed to load external module babel/register\n/home/vagrant/prueba/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\nat exports.runInThisContext (vm.js:53:16)\nat Module._compile (module.js:373:25)\nat Object.Module._extensions..js (module.js:416:10)\nat Module.load (module.js:343:32)\nat Function.Module._load (module.js:300:12)\nat Module.require (module.js:353:17)\nat require (internal/module.js:12:17)\nat Liftoff.handleArguments     (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/bin/gulp.js:116:3)\nat Liftoff. (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/node_modules/liftoff/index.js:193:16)\nat module.exports (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/node_modules/flagged-respawn/index.js:17:3)```\n. Thanks @Marshevskyy I'ill try.\nFixed using **node version:0.12.12** andnpm rebuild node-sass`\n. Same issue here.\nFresh install.\n- Ubuntu 14.04\n- nvm v0.31.0\n- node v4.4.1\n- npm v3.8.3\n- yo v1.7.0\n- bower v1.7.7\n- gulp v3.9.1\n- grunt-cli v1.1.0\n- grunt v0.4.5\nAfter run command gulp serve shows:\n``Failed to load external module babel-register\n[15:34:42] Failed to load external module babel-core/register\n[15:34:42] Failed to load external module babel/register\n/home/vagrant/prueba/gulpfile.babel.js:2\nimport gulp from 'gulp';\n^^^^^^\nSyntaxError: Unexpected reserved word\nat exports.runInThisContext (vm.js:53:16)\nat Module._compile (module.js:373:25)\nat Object.Module._extensions..js (module.js:416:10)\nat Module.load (module.js:343:32)\nat Function.Module._load (module.js:300:12)\nat Module.require (module.js:353:17)\nat require (internal/module.js:12:17)\nat Liftoff.handleArguments     (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/bin/gulp.js:116:3)\nat Liftoff. (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/node_modules/liftoff/index.js:193:16)\nat module.exports (/home/vagrant/.nvm/versions/node/v4.4.1/lib/node_modules/gulp/node_modules/flagged-respawn/index.js:17:3)```\n. Thanks @Marshevskyy I'ill try.\nFixed using **node version:0.12.12** andnpm rebuild node-sass`\n. ",
    "Marshevskyy": "try to run \"npm install -g gulp@3.9.0\"\nlooks like CLI version to 3.9.1 is buggy\n. try to run \"npm install -g gulp@3.9.0\"\nlooks like CLI version to 3.9.1 is buggy\n. ",
    "EBuyuran": "\"npm install -g gulp@3.9.0\" worked for me, thanks @Marshevskyy.\n. \"npm install -g gulp@3.9.0\" worked for me, thanks @Marshevskyy.\n. ",
    "kevin-kang": "\u5728\u4f60gulp\u6587\u4ef6\u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa\u4e00\u4e2a.babelrc\u6587\u4ef6\uff0c\u91cc\u9762\u5185\u5bb9\u4e3a\uff1a\n{\n  \"presets\": [\"es2015\"]\n}\n\u5c31\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\u4e86\uff0c\u540c\u65f6\u8bb0\u5f97\u5b89\u88c5babel-core babel-preset-es2015\n. \u5728\u4f60gulp\u6587\u4ef6\u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa\u4e00\u4e2a.babelrc\u6587\u4ef6\uff0c\u91cc\u9762\u5185\u5bb9\u4e3a\uff1a\n{\n  \"presets\": [\"es2015\"]\n}\n\u5c31\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\u4e86\uff0c\u540c\u65f6\u8bb0\u5f97\u5b89\u88c5babel-core babel-preset-es2015\n. ",
    "mqliutie": "@kevin-kang \u8fd8\u662f\u770b\u4e2d\u6587\u89e3\u51b3\u5feb- -\n. @NeverMore93 \u6ee1\u8db3\u810f\u8bdd\u5728\u8fd9\u548c\u6211\u8bf4\u4e22\u4eba? \u6211\u56de\u7684\u662f\u56fd\u4eba,\u8bb2\u4e2d\u6587\u6709\u95ee\u9898?\u548c\u56fd\u4eba\u8fd8\u8981\u62fd\u82f1\u6587?\u4f60\u82f1\u8bed\u591a\u5389\u5bb3?\u5acc\u4e22\u4eba\u4f60\u522b\u51fa\u6765\u4e0d\u5c31\u597d\u4e86?. @kevin-kang \u8fd8\u662f\u770b\u4e2d\u6587\u89e3\u51b3\u5feb- -\n. @NeverMore93 \u6ee1\u8db3\u810f\u8bdd\u5728\u8fd9\u548c\u6211\u8bf4\u4e22\u4eba? \u6211\u56de\u7684\u662f\u56fd\u4eba,\u8bb2\u4e2d\u6587\u6709\u95ee\u9898?\u548c\u56fd\u4eba\u8fd8\u8981\u62fd\u82f1\u6587?\u4f60\u82f1\u8bed\u591a\u5389\u5bb3?\u5acc\u4e22\u4eba\u4f60\u522b\u51fa\u6765\u4e0d\u5c31\u597d\u4e86?. ",
    "SpadeRubick": "Tasks completed with the error\nrun 'gulp dist'\n[11:27:20] Failed to load external module babel-register\n[11:27:20] Requiring external module babel-core/register\n[11:27:25] Using gulpfile F:\\Gary\\gulpfile.babel.js\n[11:27:25] Starting 'js'...\n[11:27:25] Finished 'js' after 8.57 ms\n[11:27:25] Starting 'css'...\n[11:27:25] Finished 'css' after 3.91 ms\n[11:27:25] Starting 'html'...\n[11:27:25] Finished 'html' after 1.84 ms\n[11:27:25] Starting 'dist'...\n[11:27:25] Finished 'dist' after 6.53 \u03bcs\npackage.json:\njs\n\"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.8.0\",\n    \"babel-preset-es2015\": \"^6.6.0\",\n    \"gulp\": \"^3.9.1\",\n    \u2026\u2026\n  }\n. Tasks completed with the error\nrun 'gulp dist'\n[11:27:20] Failed to load external module babel-register\n[11:27:20] Requiring external module babel-core/register\n[11:27:25] Using gulpfile F:\\Gary\\gulpfile.babel.js\n[11:27:25] Starting 'js'...\n[11:27:25] Finished 'js' after 8.57 ms\n[11:27:25] Starting 'css'...\n[11:27:25] Finished 'css' after 3.91 ms\n[11:27:25] Starting 'html'...\n[11:27:25] Finished 'html' after 1.84 ms\n[11:27:25] Starting 'dist'...\n[11:27:25] Finished 'dist' after 6.53 \u03bcs\npackage.json:\njs\n\"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.8.0\",\n    \"babel-preset-es2015\": \"^6.6.0\",\n    \"gulp\": \"^3.9.1\",\n    \u2026\u2026\n  }\n. ",
    "richyrb00": "I found that i was using node v6\ni moved it back down to v4.4.4\nthis then fixed the issue but still getting an error with failed to load external module babel-register so i installed that which then took me back to square one which a lot of you posted. i think uninstalled that again and although it hows failed to load external module babel-register.. it works :)\nI think is you too node down to 4.2.6 (as i have another system on this version) it should work as required with no issues.\n. I found that i was using node v6\ni moved it back down to v4.4.4\nthis then fixed the issue but still getting an error with failed to load external module babel-register so i installed that which then took me back to square one which a lot of you posted. i think uninstalled that again and although it hows failed to load external module babel-register.. it works :)\nI think is you too node down to 4.2.6 (as i have another system on this version) it should work as required with no issues.\n. ",
    "bleedkaga": "hello:\n  I am is run 'gulp wiredep' ,  There is an error 'must start with number, buffer, array or string', excuse me how should solve? \nThanks! \n------------------ Original ------------------\nFrom:  \"Matija Marohni\u0107\"notifications@github.com;\nDate:  Tue, May 17, 2016 05:43 AM\nTo:  \"yeoman/generator-webapp\"generator-webapp@noreply.github.com; \nCc:  \"bleedkaga\"wenfp@palmtrends.com; \"Manual\"manual@noreply.github.com; \nSubject:  Re: [yeoman/generator-webapp] gulp serve: Failed to load externalmodule babel-core/register (#356)\nA new version was released where we don't parse gulpfile with Babel anymore (i.e. we renamed gulpfile.babel.js to gulpfile.js), because Node v4+ support a lot of ES2015 features. So this issue should be gone.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Can you tell me how to solve this problem? @silvenon \n. hello:\n  I am is run 'gulp wiredep' ,  There is an error 'must start with number, buffer, array or string', excuse me how should solve? \nThanks! \n------------------ Original ------------------\nFrom:  \"Matija Marohni\u0107\"notifications@github.com;\nDate:  Tue, May 17, 2016 05:43 AM\nTo:  \"yeoman/generator-webapp\"generator-webapp@noreply.github.com; \nCc:  \"bleedkaga\"wenfp@palmtrends.com; \"Manual\"manual@noreply.github.com; \nSubject:  Re: [yeoman/generator-webapp] gulp serve: Failed to load externalmodule babel-core/register (#356)\nA new version was released where we don't parse gulpfile with Babel anymore (i.e. we renamed gulpfile.babel.js to gulpfile.js), because Node v4+ support a lot of ES2015 features. So this issue should be gone.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Can you tell me how to solve this problem? @silvenon \n. ",
    "amaalzohny": "in index.js \n`\nif (env === 'development' || env === 'test') {\n  // Register the Babel require hook\n  //require('babel-register');\n  require('babel-register')({\n   presets: [ 'es2015' ]\n});\n}\n. in index.js\nif (env === 'development' || env === 'test') {\n  // Register the Babel require hook\n  //require('babel-register');\n  require('babel-register')({\n   presets: [ 'es2015' ]\n});\n}\n`\n. ",
    "thecreation": "I am using ubuntu 14.04. And i am using nvm managing the nodejs.\nRuning gulp -v getting the error below\n[20:54:47] Failed to load external module babel/register\n[20:54:47] CLI version 3.9.0\n[20:54:47] Local version 3.9.1\nAnd the issue was solved by the steps below:\nsudo rm -r /usr/lib/node_modules/\nsudo rm /usr/bin/gulp\nnpm cache clear\nnpm uninstall gulp-cli -g\nnpm uninstall gulp -g\nnpm install gulp-cli -g\nHope it will be helped for whom that using nvm.\n. I am using ubuntu 14.04. And i am using nvm managing the nodejs.\nRuning gulp -v getting the error below\n[20:54:47] Failed to load external module babel/register\n[20:54:47] CLI version 3.9.0\n[20:54:47] Local version 3.9.1\nAnd the issue was solved by the steps below:\nsudo rm -r /usr/lib/node_modules/\nsudo rm /usr/bin/gulp\nnpm cache clear\nnpm uninstall gulp-cli -g\nnpm uninstall gulp -g\nnpm install gulp-cli -g\nHope it will be helped for whom that using nvm.\n. ",
    "karthikeyana": "i found solution \nnpm install babel-cli babel-preset-es2015. i found solution \nnpm install babel-cli babel-preset-es2015. ",
    "quangthien27": "Adding .babelrc file may help\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}. Adding .babelrc file may help\n{\n  \"presets\": [\n    \"es2015\"\n  ]\n}. ",
    "NeverMore93": "@baermowei @mqliutie @kevin-kang @xiao-ai \u4f60\u4eecTM\u80fd\u7528\u82f1\u8bed\u561b\uff1f\u4e22\u4eba\u4e22\u5230\u5916\u56fd\u53bb\u4e86\uff0cshame on you!!!. @mqliutie  \u89c9\u5f97\u597d\u7528\u70b9\u8d5e\u5c31\u884c\uff0c\u522bTM\u5e9f\u8bdd\uff0c\u4f60\u4ee5\u4e3acsdn\u8fd8\u662f\u8d34\u5427\u554a. @baermowei @mqliutie @kevin-kang @xiao-ai \u4f60\u4eecTM\u80fd\u7528\u82f1\u8bed\u561b\uff1f\u4e22\u4eba\u4e22\u5230\u5916\u56fd\u53bb\u4e86\uff0cshame on you!!!. @mqliutie  \u89c9\u5f97\u597d\u7528\u70b9\u8d5e\u5c31\u884c\uff0c\u522bTM\u5e9f\u8bdd\uff0c\u4f60\u4ee5\u4e3acsdn\u8fd8\u662f\u8d34\u5427\u554a. ",
    "YDD9": "@Marshevskyy \nThanks, this npm install -g gulp@3.9.0 works !\nthen I just npm i gulp && gulp build for my app.\n. @Marshevskyy \nThanks, this npm install -g gulp@3.9.0 works !\nthen I just npm i gulp && gulp build for my app.\n. ",
    "landed1": "TY\n. TY\n. ",
    "wangningx": "gulp.task('extras', () => {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/*.swf'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist/scripts'));\n});\nhow to Merger it?\n. i solved it~\nhttp://stackoverflow.com/questions/32043376/how-to-move-swf-files-to-some-folder-when-i-build-it\n. gulp.task('extras', () => {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/*.swf'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist/scripts'));\n});\nhow to Merger it?\n. i solved it~\nhttp://stackoverflow.com/questions/32043376/how-to-move-swf-files-to-some-folder-when-i-build-it\n. ",
    "SerbanC": "Sorry, I meant to post this in generator-webapp (the grunt version). I'm not sure if it applies here as well, but it might :)\n. Sorry, I meant to post this in generator-webapp (the grunt version). I'm not sure if it applies here as well, but it might :)\n. ",
    "Loyalsoldier": "@silvenon Oh sorry, it's my mistake. Just production needs.\n. @silvenon Excellent! Thanks for reminding. A few days ago I just built my own front-end workflow, then I saw yours today. And this solves the dependencies that I had troubled with. Everything seems great!\n. Hi @silvenon . After I ran:\n$ npm install --save-dev gulp-minify-css\nand everything was okay!\nThanks!\nI think you should update the devDependencies.\n. Hi @silvenon . \nI find it crash again. And I really don't know how it would be successful yesterday.\nAfter I manually update the version of Clean-css to the newest v3.4.4, one of the devDependencies of gulp-minify-css. It fails again.Now I really have no idea\u2026\u2026\nIt seems update the devDependencies of generator-gulp-webapp is not the solution.\nSorry about that.\n. @silvenon \nThe same problem remains there.\nI think it's the problem of the GFW in China. See https://github.com/Semantic-Org/Semantic-UI/issues/2220\nAnd it need to manually import the google font-face CSS into the Semantic-UI. And then everything seems good.\nThanks a lot.\n. @silvenon Oh sorry, it's my mistake. Just production needs.\n. @silvenon Excellent! Thanks for reminding. A few days ago I just built my own front-end workflow, then I saw yours today. And this solves the dependencies that I had troubled with. Everything seems great!\n. Hi @silvenon . After I ran:\n$ npm install --save-dev gulp-minify-css\nand everything was okay!\nThanks!\nI think you should update the devDependencies.\n. Hi @silvenon . \nI find it crash again. And I really don't know how it would be successful yesterday.\nAfter I manually update the version of Clean-css to the newest v3.4.4, one of the devDependencies of gulp-minify-css. It fails again.Now I really have no idea\u2026\u2026\nIt seems update the devDependencies of generator-gulp-webapp is not the solution.\nSorry about that.\n. @silvenon \nThe same problem remains there.\nI think it's the problem of the GFW in China. See https://github.com/Semantic-Org/Semantic-UI/issues/2220\nAnd it need to manually import the google font-face CSS into the Semantic-UI. And then everything seems good.\nThanks a lot.\n. ",
    "gnarmedia": "How's that, everything I came up with was really confusing to me, hope this is clean enough.\n. How's that, everything I came up with was really confusing to me, hope this is clean enough.\n. ",
    "tulsadome": "Ok so I got past that issue with npm install --save-dev gulp-imagemin but now I'm getting this\n[16:46:51] Requiring external module babel-core/register\n[16:47:01] Using gulpfile ~/git/bobbi-bortolussi/gulpfile.babel.js\n[16:47:01] Starting 'clean'...\n[16:47:01] Finished 'clean' after 30 ms\n[16:47:01] Starting 'default'...\n[16:47:01] Starting 'lint'...\n[16:47:07] Starting 'styles'...\n[16:47:14] Starting 'images'...\n[16:47:21] Starting 'fonts'...\n[16:47:22] Starting 'extras'...\n[16:47:22] Finished 'default' after 21 s\n[16:47:23] Finished 'lint' after 22 s\n[16:47:23] Finished 'extras' after 454 ms\n[16:47:23] Finished 'fonts' after 1.43 s\n[16:47:23] Finished 'styles' after 16 s\n[16:47:23] Starting 'html'...\n[16:47:27] 'html' errored after 3.76 s\n[16:47:27] Error: Cannot find module 'process-nextick-args'\n    at Function.Module._resolveFilename (module.js:336:15)\n    at Function.Module._load (module.js:278:25)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object. (/Users/tylerbarnes/git/bobbi-bortolussi/node_modules/gulp-useref/node_modules/vinyl-fs/node_modules/glob-stream/node_modules/unique-stream/node_modules/through2-filter/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:20:23)\n    at Module._compile (module.js:460:26)\n    at Module._extensions..js (module.js:478:10)\n    at Object.require.extensions.(anonymous function) as .js\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object. (/Users/tylerbarnes/git/bobbi-bortolussi/node_modules/gulp-useref/node_modules/vinyl-fs/node_modules/glob-stream/node_modules/unique-stream/node_modules/through2-filter/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js:47:14)\n    at Module._compile (module.js:460:26)\n    at Module._extensions..js (module.js:478:10)\n    at Object.require.extensions.(anonymous function) as .js\n[16:47:27] Finished 'images' after 13 s\nI'm assuming I need to reinstall gulp-useref to get past this. Why doesn't it just run properly? Is there something wrong with the generator or am I doing something wrong?\n. running npm install --save-dev gulp-imagemin and then npm install --save-dev gulp-useref fixed the issue but does anyone know what causes this issue?\n. Ok so I got past that issue with npm install --save-dev gulp-imagemin but now I'm getting this\n[16:46:51] Requiring external module babel-core/register\n[16:47:01] Using gulpfile ~/git/bobbi-bortolussi/gulpfile.babel.js\n[16:47:01] Starting 'clean'...\n[16:47:01] Finished 'clean' after 30 ms\n[16:47:01] Starting 'default'...\n[16:47:01] Starting 'lint'...\n[16:47:07] Starting 'styles'...\n[16:47:14] Starting 'images'...\n[16:47:21] Starting 'fonts'...\n[16:47:22] Starting 'extras'...\n[16:47:22] Finished 'default' after 21 s\n[16:47:23] Finished 'lint' after 22 s\n[16:47:23] Finished 'extras' after 454 ms\n[16:47:23] Finished 'fonts' after 1.43 s\n[16:47:23] Finished 'styles' after 16 s\n[16:47:23] Starting 'html'...\n[16:47:27] 'html' errored after 3.76 s\n[16:47:27] Error: Cannot find module 'process-nextick-args'\n    at Function.Module._resolveFilename (module.js:336:15)\n    at Function.Module._load (module.js:278:25)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object. (/Users/tylerbarnes/git/bobbi-bortolussi/node_modules/gulp-useref/node_modules/vinyl-fs/node_modules/glob-stream/node_modules/unique-stream/node_modules/through2-filter/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:20:23)\n    at Module._compile (module.js:460:26)\n    at Module._extensions..js (module.js:478:10)\n    at Object.require.extensions.(anonymous function) as .js\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object. (/Users/tylerbarnes/git/bobbi-bortolussi/node_modules/gulp-useref/node_modules/vinyl-fs/node_modules/glob-stream/node_modules/unique-stream/node_modules/through2-filter/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js:47:14)\n    at Module._compile (module.js:460:26)\n    at Module._extensions..js (module.js:478:10)\n    at Object.require.extensions.(anonymous function) as .js\n[16:47:27] Finished 'images' after 13 s\nI'm assuming I need to reinstall gulp-useref to get past this. Why doesn't it just run properly? Is there something wrong with the generator or am I doing something wrong?\n. running npm install --save-dev gulp-imagemin and then npm install --save-dev gulp-useref fixed the issue but does anyone know what causes this issue?\n. ",
    "tbredin": "this sounds good\n. this sounds good\n. ",
    "bagusflyer": "But it seems there is no scss for twbs4 yet.\n. Thanks for your replay. Then my question is if it's possible to customize the generator to suit my purpose? Please give me a hint on this (I'm quite new to generator). Thank you so much.\n. I found some documents about this. http://yeoman.io/authoring/index.html\nMy question is if I can modify your generator a bit as a new generator? Thanks.\n. But it seems there is no scss for twbs4 yet.\n. Thanks for your replay. Then my question is if it's possible to customize the generator to suit my purpose? Please give me a hint on this (I'm quite new to generator). Thank you so much.\n. I found some documents about this. http://yeoman.io/authoring/index.html\nMy question is if I can modify your generator a bit as a new generator? Thanks.\n. ",
    "mcauser": "Of course it can. It has a read-only filesystem, but it supports write on build/deploy.\nI was able to get something working. I'll package it up into a recipe once I iron out the kinks.\n. Of course it can. It has a read-only filesystem, but it supports write on build/deploy.\nI was able to get something working. I'll package it up into a recipe once I iron out the kinks.\n. ",
    "Vvaltz": "Sorry, you were correct, there was something wrong with my node 4.0.0 and npm or something. After uninstalling node, downloading nvm and using node 0.12.6 everything installed normally with scss file by default in place, sorry for this\n. Sorry, you were correct, there was something wrong with my node 4.0.0 and npm or something. After uninstalling node, downloading nvm and using node 0.12.6 everything installed normally with scss file by default in place, sorry for this\n. ",
    "dannygoncalves": "@gaboesquivel thank you, @silvenon I'm sorry didn't read the guidelines, but normally i use GH for questions too since it has the tag, but thanks anyway!\n. @gaboesquivel thank you, @silvenon I'm sorry didn't read the guidelines, but normally i use GH for questions too since it has the tag, but thanks anyway!\n. ",
    "KristjanLiiva": "Thank you! Works\n. Thank you! Works\n. ",
    "OnkelTem": "Sorry for confusion, wrong repository.\n. Holy git! I got confused repositories :) It was intended for yeogurt\n. Sorry for confusion, wrong repository.\n. Holy git! I got confused repositories :) It was intended for yeogurt\n. ",
    "vennsoh": "@silvenon Add imported to what array? Which array do you mean? Sorry I am new to this.\n. @neihem That doesn't fix that. ):\n. @silvenon Add imported to what array? Which array do you mean? Sorry I am new to this.\n. @neihem That doesn't fix that. ):\n. ",
    "m-pokrovskii": "npm list --global | grep webapp\n\u251c\u2500\u252c generator-gulp-webapp@1.0.3\n. Yes. I've removed package, cleaned the cache and installed it again. Still the same.\ngenerated on 2015-09-25 using generator-gulp-webapp 0.2.0\nWhere generator-gulp-webapp 0.2.0 can be located?\n. just delete /usr/local/lib/node_modules/generator-gulp-webapp\nThis problem exist if user uses brew\n. npm list --global | grep webapp\n\u251c\u2500\u252c generator-gulp-webapp@1.0.3\n. Yes. I've removed package, cleaned the cache and installed it again. Still the same.\ngenerated on 2015-09-25 using generator-gulp-webapp 0.2.0\nWhere generator-gulp-webapp 0.2.0 can be located?\n. just delete /usr/local/lib/node_modules/generator-gulp-webapp\nThis problem exist if user uses brew\n. ",
    "alferov": "Have you tried to clear the cache?\nnpm cache clean\n. @gregmajor, this is a known optipng-bin issue. It's not related to generator-gulp-webapp.\n. CSS isn't being added to your index.html because ihover has invalid bower.json. generator-gulp-webapp uses wiredep to wire installed dependencies with the source code.\nAccording wiredep docs:\n\nWhat can go wrong?\n- A Bower package may not properly list its dependencies in its bower.json file.\n- A Bower package may not specify a main property in its bower.json file.\n\nIf you take a look at ihover bower.json you will notice that depended assets (like styles and scripts) are not specified in main property (there is no main property at all).\nExample of correct twitter bootstrap bower.json.\nConclusion: It's not a generator-gulp-webapp issue.\n. Have you tried to clear the cache?\nnpm cache clean\n. @gregmajor, this is a known optipng-bin issue. It's not related to generator-gulp-webapp.\n. CSS isn't being added to your index.html because ihover has invalid bower.json. generator-gulp-webapp uses wiredep to wire installed dependencies with the source code.\nAccording wiredep docs:\n\nWhat can go wrong?\n- A Bower package may not properly list its dependencies in its bower.json file.\n- A Bower package may not specify a main property in its bower.json file.\n\nIf you take a look at ihover bower.json you will notice that depended assets (like styles and scripts) are not specified in main property (there is no main property at all).\nExample of correct twitter bootstrap bower.json.\nConclusion: It's not a generator-gulp-webapp issue.\n. ",
    "evanheisler": "Would it be possible to see an example of how to use React Router in the project? The recipe works great and I have it installed, but am not sure how to utilize it as the integration seems quite different than the React Router documentation. \n. Thank you @jackvz!\n. Would it be possible to see an example of how to use React Router in the project? The recipe works great and I have it installed, but am not sure how to utilize it as the integration seems quite different than the React Router documentation. \n. Thank you @jackvz!\n. ",
    "jackvz": "Sure, the webpack script attaches React and Router objects to the window object. You can then use these like this:\n```\n'use strict';\nvar Route = Router.Route;\nvar routes = (\n  \n\n\n\n  );\nvar RouteHandler = Router.RouteHandler;\nRouter.run(routes, Router.HashLocation, function(Root) {\n  React.render(, document.getElementById('content'));\n});\n```\n. Sure, the webpack script attaches React and Router objects to the window object. You can then use these like this:\n```\n'use strict';\nvar Route = Router.Route;\nvar routes = (\n  \n\n\n\n  );\nvar RouteHandler = Router.RouteHandler;\nRouter.run(routes, Router.HashLocation, function(Root) {\n  React.render(, document.getElementById('content'));\n});\n```\n. ",
    "aireater": "Thanks for the tips. I ended up wrapping the gulp html task - passing in the values I need to change and using gulp replace. Maybe not the most sophisticated approach but it works for now. \n. Thanks for the tips. I ended up wrapping the gulp html task - passing in the values I need to change and using gulp replace. Maybe not the most sophisticated approach but it works for now. \n. ",
    "gregmajor": "Using homebrew to install optipng seems to make everything happy.\n. I'm a moron. Those glyphs don't exist anymore.\n. Using homebrew to install optipng seems to make everything happy.\n. I'm a moron. Those glyphs don't exist anymore.\n. ",
    "stivyw": "Yeap\nMy bad. I did gulp dist before gulp serve:dist.\nSome generators make gulp dist automaticaly, this not and I like that.\nThank's :)\n. Yeap\nMy bad. I did gulp dist before gulp serve:dist.\nSome generators make gulp dist automaticaly, this not and I like that.\nThank's :)\n. ",
    "aahoo": "I just installed this generator and used the following two commands:\n- gulp serve which works showing the default page\n- gulp serve:dist which shows \"Cannot GET /\"!\n  What I am I doing wrong?\nupdate:\nfixed by running gulp first :D\n. I just installed this generator and used the following two commands:\n- gulp serve which works showing the default page\n- gulp serve:dist which shows \"Cannot GET /\"!\n  What I am I doing wrong?\nupdate:\nfixed by running gulp first :D\n. ",
    "sscarduzio": "Issues = best docs around\n. Please add this to the docs, I've been struggling in the past about this and today after 2 years.\n. Issues = best docs around\n. Please add this to the docs, I've been struggling in the past about this and today after 2 years.\n. ",
    "parataku": "Can Confirm. Same happens with an new gulp-webapp project and after adding the nunjucks recipe.\n. Can Confirm. Same happens with an new gulp-webapp project and after adding the nunjucks recipe.\n. ",
    "IanLunn": "Confirmed. I believe the issue is with the html task after adding the nunjucks recipe but not able to problem solve beyond that.\n. Confirmed. I believe the issue is with the html task after adding the nunjucks recipe but not able to problem solve beyond that.\n. ",
    "ivojacobs": "you can fix it by adding watch:false parameter as described here: https://github.com/carlosl/gulp-nunjucks-render\n$.nunjucksRender.nunjucks.configure(['app/'], {watch: false});\n. you can fix it by adding watch:false parameter as described here: https://github.com/carlosl/gulp-nunjucks-render\n$.nunjucksRender.nunjucks.configure(['app/'], {watch: false});\n. ",
    "joehand": "\ud83d\udc4d that fixed it. Thanks!\n. \ud83d\udc4d that fixed it. Thanks!\n. ",
    "grigy": "@silvenon yes, I tried a few times and it's the same. I have only one image file. Versions - gulp: 3.9.0, node: 0.12.7. I would think it's local problem with my machine but it just can't be that slow. Other gulpfiles and brunch run incomparable faster.\n. @sindresorhus thanks, I'll try to check with time-require. Meanwhile I created my own gulpfile, very minimal with only what I need and without babel. It runs under 1s.\n. @silvenon yes, I tried a few times and it's the same. I have only one image file. Versions - gulp: 3.9.0, node: 0.12.7. I would think it's local problem with my machine but it just can't be that slow. Other gulpfiles and brunch run incomparable faster.\n. @sindresorhus thanks, I'll try to check with time-require. Meanwhile I created my own gulpfile, very minimal with only what I need and without babel. It runs under 1s.\n. ",
    "monzonj": "It might be something related to babel. In my case it's so slow I'm planning to go back to ES5.\nNotice how it takes a lot of time to just get started:\n$ gulp\n[17:40:24] Requiring external module babel-core/register\n[17:40:38] Using gulpfile gulpfile.babel.js\n. No difference with Babel 6. It feels even slower to be honest\n. It might be something related to babel. In my case it's so slow I'm planning to go back to ES5.\nNotice how it takes a lot of time to just get started:\n$ gulp\n[17:40:24] Requiring external module babel-core/register\n[17:40:38] Using gulpfile gulpfile.babel.js\n. No difference with Babel 6. It feels even slower to be honest\n. ",
    "leontastic": "+1 encountering this issue too. I've been experiencing inconsistent delay times as well, anywhere from 5s to 2 minutes. Using gulp 3.9.0 and node 0.12.7.\n. +1 encountering this issue too. I've been experiencing inconsistent delay times as well, anywhere from 5s to 2 minutes. Using gulp 3.9.0 and node 0.12.7.\n. ",
    "jahvi": "Can confirm it still happens even when running just the lint task it takes 4 times as much compared to the non ES2015/Babel gulpfile (2000ms vs 500ms in my case). It might not be related to the generator maybe just the extra overhead that's required to transpile ES2015?\n. Can confirm it still happens even when running just the lint task it takes 4 times as much compared to the non ES2015/Babel gulpfile (2000ms vs 500ms in my case). It might not be related to the generator maybe just the extra overhead that's required to transpile ES2015?\n. ",
    "pwang2": "Thank @neilhem , it works well.  I think it does not worth it to taste babel sweetness here.\n. Thank @neilhem , it works well.  I think it does not worth it to taste babel sweetness here.\n. ",
    "dmitry-guryev": "Another solution:\nnpm install -g babel-cli (if not installed)\nthen\nbabel gulpfile.babel.js -o gulpfile.js\n. Another solution:\nnpm install -g babel-cli (if not installed)\nthen\nbabel gulpfile.babel.js -o gulpfile.js\n. ",
    "vassyz": "As an example, when running gulp build I'm getting the following errors:\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:1508:18)\n    at js_error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:1516:11)\n    at croak (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2008:9)\n    at token_error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2016:9)\n    at unexpected (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2022:9)\n    at as_property_name (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2610:13)\n    at eval (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2564:24)\n    at eval (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2055:24)\n    at expr_atom (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2515:35)\n    at maybe_unary (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2691:19)\n    at expr_ops (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2726:24)\n    at maybe_conditional (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2731:20)\n    at maybe_assign (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2755:20)\n    at expression (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2774:20)\n    at expr_list (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2540:24)\n    at subscripts (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2674:30)\nI don't even know where to look.\n. I just deleted a comma from an object, and gulp serve crashes as follows:\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError: Parse Error: Line 16: Unexpected identifier\n    at throwError (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2808:21)\n    at throwUnexpected (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2852:13)\n    at expect (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2879:13)\n    at parseObjectInitialiser (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3419:17)\n    at parsePrimaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3553:20)\n    at parseLeftHandSideExpressionAllowCall (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3656:61)\n    at parsePostfixExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3696:20)\n    at parseUnaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3763:16)\n    at parseBinaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3853:16)\n    at parseConditionalExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3913:16)\nLine 16 is the correct one, but it's in a modal.jsx file. How would I be able to figure that out?\n. I thought about that as well, but I've never used gulp-babel. This was a quick fix for my current project.\nI also added sourcemaps in my second commit.\n. I replaced gulp-react with gulp-babel, and it's working fine. I removed the error checking, as it seems to be built-in into babel. :smirk:\n. As an example, when running gulp build I'm getting the following errors:\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:1508:18)\n    at js_error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:1516:11)\n    at croak (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2008:9)\n    at token_error (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2016:9)\n    at unexpected (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2022:9)\n    at as_property_name (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2610:13)\n    at eval (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2564:24)\n    at eval (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2055:24)\n    at expr_atom (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2515:35)\n    at maybe_unary (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2691:19)\n    at expr_ops (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2726:24)\n    at maybe_conditional (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2731:20)\n    at maybe_assign (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2755:20)\n    at expression (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2774:20)\n    at expr_list (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2540:24)\n    at subscripts (eval at <anonymous> (/Users/.../client/node_modules/gulp-uglify/node_modules/uglify-js/tools/node.js:22:1), <anonymous>:2674:30)\nI don't even know where to look.\n. I just deleted a comma from an object, and gulp serve crashes as follows:\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError: Parse Error: Line 16: Unexpected identifier\n    at throwError (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2808:21)\n    at throwUnexpected (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2852:13)\n    at expect (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:2879:13)\n    at parseObjectInitialiser (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3419:17)\n    at parsePrimaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3553:20)\n    at parseLeftHandSideExpressionAllowCall (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3656:61)\n    at parsePostfixExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3696:20)\n    at parseUnaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3763:16)\n    at parseBinaryExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3853:16)\n    at parseConditionalExpression (/Users/.../client/node_modules/gulp-react/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js:3913:16)\nLine 16 is the correct one, but it's in a modal.jsx file. How would I be able to figure that out?\n. I thought about that as well, but I've never used gulp-babel. This was a quick fix for my current project.\nI also added sourcemaps in my second commit.\n. I replaced gulp-react with gulp-babel, and it's working fine. I removed the error checking, as it seems to be built-in into babel. :smirk:\n. ",
    "dmahipus": "+1\n. +1\n. ",
    "skipin1": "+1\n. +1\n. ",
    "Dev-Force": "well, what the point of checking? the images will be in a seperate folder if the project structure is nice. u know what u are filtering anyways. whatever. \n. well i cant right now i am too busy. sorry :(\nSo, isnt it a bug from yeoman generator?\nits from the gulp-cache?\n. anyone to verify thats all ok after the latest gulp-cache version? \n. well, what the point of checking? the images will be in a seperate folder if the project structure is nice. u know what u are filtering anyways. whatever. \n. well i cant right now i am too busy. sorry :(\nSo, isnt it a bug from yeoman generator?\nits from the gulp-cache?\n. anyone to verify thats all ok after the latest gulp-cache version? \n. ",
    "rgksugan": "@fionnbharra  You will need to update your gulp. try running npm install -g gulp\nhttps://github.com/yeoman/generator-gulp-webapp/issues/353\n. @fionnbharra  You will need to update your gulp. try running npm install -g gulp\nhttps://github.com/yeoman/generator-gulp-webapp/issues/353\n. ",
    "fionnbharra": "@rgksugan thanks, will do. \n. @rgksugan thanks, will do. \n. ",
    "charlesmudy": "@silvenon lint issues from modernizr or even my custom script\n. @silvenon lint issues from modernizr or even my custom script\n. ",
    "yuyang545262477": "yeah !  The Same Bug\n. yeah !  The Same Bug\n. ",
    "hirusi": "I came here because I saw this blog post on Yeoman's website. Please update me if the case is otherwise. I was under the impression this is the Yeoman Angular generator using Gulp.\n. I came here because I saw this blog post on Yeoman's website. Please update me if the case is otherwise. I was under the impression this is the Yeoman Angular generator using Gulp.\n. ",
    "foxt7ot": "Sorry asked at wrong place\n. Sorry asked at wrong place\n. ",
    "pcooney10": "think the app needs to be needs to be running when installing bower components (gulp serve).  Also make sure to include the --save param\n. think the app needs to be needs to be running when installing bower components (gulp serve).  Also make sure to include the --save param\n. ",
    "agiantwhale": "Thank you, works as intended.\n. Yes, I am doing this after cloning the repositories on to a new drive.  \nIl Jae Lee\nOn Aug 29 2016, at 11:50 pm, Rakhat Jabagin notifications@github.com wrote:  \n\nHi, have you tried to reinstall dependencies?\n\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the\nthread.\n. Thank you, works as intended.\n. Yes, I am doing this after cloning the repositories on to a new drive.  \n\nIl Jae Lee\nOn Aug 29 2016, at 11:50 pm, Rakhat Jabagin notifications@github.com wrote:  \n\nHi, have you tried to reinstall dependencies?\n\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the\nthread.\n. \n",
    "arcseldon": "Thanks for taking care of this, appreciate it. \n. Thanks for the feedback. Just tested - eslint works with this .eslint in the base directory:\njson\n{\n  \"env\": {\n    \"es6\": true,\n    \"browser\": true\n  }\n}\nDon't wish to sound like sour grapes, but would you please consider providing a .eslint file with some sensible entries already populated - you could include the es6 attribute above, even if set to false. That way, it is easy for users to see how to switch it on without hunting reams of documentation on eslint.\nHere are the docs in case it helps anyone: eslint user guide configuration\n. @silvenon @sindresorhus  - thanks both for providing clear feedback. Will do as advised :+1: \n. Thanks for taking care of this, appreciate it. \n. Thanks for the feedback. Just tested - eslint works with this .eslint in the base directory:\njson\n{\n  \"env\": {\n    \"es6\": true,\n    \"browser\": true\n  }\n}\nDon't wish to sound like sour grapes, but would you please consider providing a .eslint file with some sensible entries already populated - you could include the es6 attribute above, even if set to false. That way, it is easy for users to see how to switch it on without hunting reams of documentation on eslint.\nHere are the docs in case it helps anyone: eslint user guide configuration\n. @silvenon @sindresorhus  - thanks both for providing clear feedback. Will do as advised :+1: \n. ",
    "CesarDenis": "I changed to the tag v2.3.2.2 \nMy bower.json:\n{\n  \"name\": \"2016\",\n  \"private\": true,\n  \"dependencies\": {\n    \"modernizr\": \"~2.8.1\",\n    \"respond\": \"~1.4.2\",\n    \"bootstrap-sass\": \"v2.3.2.2\",\n    \"jquery\": \"~1.11.3\"\n  },\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"vendor/assets/stylesheets/bootstrap.scss\",\n        \"vendor/assets/fonts/images/*\",\n        \"vendor/assets/javascripts/bootstrap.js\"\n      ]\n    }\n  },\n  \"devDependencies\": {\n    \"chai\": \"~3.4.2\",\n    \"mocha\": \"~2.3.4\"\n  }\n}\n. The path looks correct, The path is slightly different from the version 3, before the folder assest comes the vendor:\nVersion 2\n.\n\u251c\u2500 ...\n\u251c\u2500 bootstrap-sass\n\u2502  \u251c\u2500 vendor\n\u2502     \u2514\u2500 assest\n\u2514\u2500\u2500 ...\nVersion 3\n.\n\u251c\u2500 ...\n\u251c\u2500 bootstrap-sass\n\u2502  \u2514\u2500 assest\n\u2514\u2500\u2500 ...\nWhen I run the gulp wiredep it does not update the patch like version 3 of bootstrap.\n. Thanks for your help @silvenon.\n. Could remove the error changing the way the layout.\nIn app/index.html:\n``` diff\n-{% extends \"layouts/default.html\" %}\n+{% extends \"app/layouts/default.html\" %}\n{% block content %}\n  \n'Allo, 'Allo!\nYou now have\n\nHTML5 Boilerplate\nSass\nModernizr\n\n\n{% endblock %}\n```\nThis correct or is the wrong setting?\n. It worked ... :smiley:\nMy task view:\ngulp.task('views', () => {\n  return gulp.src('app/*.html')\n    .pipe($.nunjucksRender({\n      path: ['app/']\n    }))\n    .pipe(gulp.dest('.tmp'))\n});\nTks @silvenon \n. I do, thank you. :smiley:\n. Yes, I create a branch to change the file.\n. My html task:\njs\nreturn gulp.src(['app/*.html', '.tmp/*.html'])\nthen I change:\njs\nreturn gulp.src([\n      'app/**/*.html',\n      '.tmp/**/*.html',\n      '!.tmp/includes/**/*.html',\n      '!.tmp/layouts/**/*.html',\n      '!app/includes/**/*.html',\n      '!app/layouts/**/*.html'\n    ])\nThat's right, or have a simpler way to do?\n. Hi @silvenon, I changed the gulpfile.babel.js , and now with the following error:\n```\nevents.js:154\n      throw er; // Unhandled 'error' event\n      ^\nError: Error: File not found with singular glob: /Users/macweb01/Sites/ccr/ras/styles/main.css\n    at DestroyableTransform. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/lib/streamManager.js:90:36)\n    at emitOne (events.js:95:20)\n    at DestroyableTransform.emit (events.js:182:7)\n    at emitOne (events.js:90:13)\n    at DestroyableTransform.emit (events.js:182:7)\n    at Glob. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/index.js:38:16)\n    at Glob.g (events.js:273:16)\n    at emitOne (events.js:90:13)\n    at Glob.emit (events.js:182:7)\n    at Glob.finish (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:172:8)\n    at done (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:159:12)\n    at Glob._processSimple2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:652:12)\n    at /Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:640:10\n    at Glob._stat2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:736:12)\n    at lstatcb (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:728:12)\n    at RES (/Users/macweb01/Sites/ccr/ras/node_modules/inflight/inflight.js:23:14)\n```\n. @silvenon see my gulpfile.babel.js\nIt seems that the error is in the plugin useref in task html \n. @silvenon, the error is in default task. Where it generates the final files.\nWhen the html task will generate the subfolder files it displays error:\n``` console\n[09:15:08] Finished 'views' after 10 s\n[09:15:08] Starting 'html'...\nevents.js:154\n      throw er; // Unhandled 'error' event\n      ^\nError: Error: File not found with singular glob: /Users/macweb01/Sites/ccr/ras/styles/main.css\n    at DestroyableTransform. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/lib/streamManager.js:90:36)\n    at emitOne (events.js:95:20)\n    at DestroyableTransform.emit (events.js:182:7)\n    at emitOne (events.js:90:13)\n    at DestroyableTransform.emit (events.js:182:7)\n    at Glob. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/index.js:38:16)\n    at Glob.g (events.js:273:16)\n    at emitOne (events.js:90:13)\n    at Glob.emit (events.js:182:7)\n    at Glob.finish (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:172:8)\n    at done (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:159:12)\n    at Glob._processSimple2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:652:12)\n    at /Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:640:10\n    at Glob._stat2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:736:12)\n    at lstatcb (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:728:12)\n    at RES (/Users/macweb01/Sites/ccr/ras/node_modules/inflight/inflight.js:23:14)\n```\nIt seems that the error is in the plugin useref.\njs\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\nTo be able to generate the files necessary to change the layout:\nThis:\nhtml\n<!-- build:css ../styles/main.css -->\n<link rel=\"stylesheet\" href=\"../styles/main.css\">\n<!-- endbuild -->\nFor this:\nhtml\n<!-- build:css ../styles/main.css -->\n<link rel=\"stylesheet\" href=\"/app/styles/main.css\">\n<!-- endbuild -->\n. Hi @megaghz, look if it helps you.\n1. Create a htmlhint task\njs\ngulp.task('htmlhint', () => {\n  return gulp.src('app/**/*.html')\n    .pipe($.htmlhint())\n    .pipe($.htmlhint.reporter());\n});\n2. Add htmlhint as a dependency of both html and serve\njs\ngulp.task('html', ['htmlhint', 'styles', 'scripts'], () => {\n    ...\njs\ngulp.task('serve', ['htmlhint', 'styles', 'scripts', 'fonts'], () => {\n    ...\n3. Update serve tasks\n``` diff\ngulp.task('serve', ['htmlhint', 'styles', 'scripts', 'fonts'], () => {\n   ...\n   gulp.watch([\n      'app/.html',\n      'app/images//*',\n      '.tmp/fonts//'\n   ]).on('change', reload);\n\ngulp.watch('app//*.html', ['htmlhint']);\n   gulp.watch('app/styles//.scss', ['styles']);\n   gulp.watch('app/scripts//*.js', ['scripts']);\n   gulp.watch('app/fonts//', ['fonts']);\n   gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\n. It's nothing! :smile: \n. In my case are the fonts from the bower-components. I'm using [shim repository for Font Awesome](https://github.com/components/font-awesome) not moving to dist or .tmp folder.. @IniterWorker I tried and had the same problem.\n\"dependencies\": {\n    \"bootstrap\": \"~4.0.0-alpha.6\",\n    \"font-awesome\": \"fontawesome#^4.7.0\"\n}\n```\nnode: v6.11.0\nbower: v1.8.0\ngulp: v3.9.1\n. @IniterWorker now works.\n\nTks.. I changed to the tag v2.3.2.2 \nMy bower.json:\n{\n  \"name\": \"2016\",\n  \"private\": true,\n  \"dependencies\": {\n    \"modernizr\": \"~2.8.1\",\n    \"respond\": \"~1.4.2\",\n    \"bootstrap-sass\": \"v2.3.2.2\",\n    \"jquery\": \"~1.11.3\"\n  },\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"vendor/assets/stylesheets/bootstrap.scss\",\n        \"vendor/assets/fonts/images/*\",\n        \"vendor/assets/javascripts/bootstrap.js\"\n      ]\n    }\n  },\n  \"devDependencies\": {\n    \"chai\": \"~3.4.2\",\n    \"mocha\": \"~2.3.4\"\n  }\n}\n. The path looks correct, The path is slightly different from the version 3, before the folder assest comes the vendor:\nVersion 2\n.\n\u251c\u2500 ...\n\u251c\u2500 bootstrap-sass\n\u2502  \u251c\u2500 vendor\n\u2502     \u2514\u2500 assest\n\u2514\u2500\u2500 ...\nVersion 3\n.\n\u251c\u2500 ...\n\u251c\u2500 bootstrap-sass\n\u2502  \u2514\u2500 assest\n\u2514\u2500\u2500 ...\nWhen I run the gulp wiredep it does not update the patch like version 3 of bootstrap.\n. Thanks for your help @silvenon.\n. Could remove the error changing the way the layout.\nIn app/index.html:\n``` diff\n-{% extends \"layouts/default.html\" %}\n+{% extends \"app/layouts/default.html\" %}\n{% block content %}\n  \n'Allo, 'Allo!\nYou now have\n\nHTML5 Boilerplate\nSass\nModernizr\n\n\n{% endblock %}\n```\nThis correct or is the wrong setting?\n. It worked ... :smiley:\nMy task view:\ngulp.task('views', () => {\n  return gulp.src('app/*.html')\n    .pipe($.nunjucksRender({\n      path: ['app/']\n    }))\n    .pipe(gulp.dest('.tmp'))\n});\nTks @silvenon \n. I do, thank you. :smiley:\n. Yes, I create a branch to change the file.\n. My html task:\njs\nreturn gulp.src(['app/*.html', '.tmp/*.html'])\nthen I change:\njs\nreturn gulp.src([\n      'app/**/*.html',\n      '.tmp/**/*.html',\n      '!.tmp/includes/**/*.html',\n      '!.tmp/layouts/**/*.html',\n      '!app/includes/**/*.html',\n      '!app/layouts/**/*.html'\n    ])\nThat's right, or have a simpler way to do?\n. Hi @silvenon, I changed the gulpfile.babel.js , and now with the following error:\n```\nevents.js:154\n      throw er; // Unhandled 'error' event\n      ^\nError: Error: File not found with singular glob: /Users/macweb01/Sites/ccr/ras/styles/main.css\n    at DestroyableTransform. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/lib/streamManager.js:90:36)\n    at emitOne (events.js:95:20)\n    at DestroyableTransform.emit (events.js:182:7)\n    at emitOne (events.js:90:13)\n    at DestroyableTransform.emit (events.js:182:7)\n    at Glob. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/index.js:38:16)\n    at Glob.g (events.js:273:16)\n    at emitOne (events.js:90:13)\n    at Glob.emit (events.js:182:7)\n    at Glob.finish (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:172:8)\n    at done (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:159:12)\n    at Glob._processSimple2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:652:12)\n    at /Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:640:10\n    at Glob._stat2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:736:12)\n    at lstatcb (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:728:12)\n    at RES (/Users/macweb01/Sites/ccr/ras/node_modules/inflight/inflight.js:23:14)\n```\n. @silvenon see my gulpfile.babel.js\nIt seems that the error is in the plugin useref in task html \n. @silvenon, the error is in default task. Where it generates the final files.\nWhen the html task will generate the subfolder files it displays error:\n``` console\n[09:15:08] Finished 'views' after 10 s\n[09:15:08] Starting 'html'...\nevents.js:154\n      throw er; // Unhandled 'error' event\n      ^\nError: Error: File not found with singular glob: /Users/macweb01/Sites/ccr/ras/styles/main.css\n    at DestroyableTransform. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/lib/streamManager.js:90:36)\n    at emitOne (events.js:95:20)\n    at DestroyableTransform.emit (events.js:182:7)\n    at emitOne (events.js:90:13)\n    at DestroyableTransform.emit (events.js:182:7)\n    at Glob. (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/index.js:38:16)\n    at Glob.g (events.js:273:16)\n    at emitOne (events.js:90:13)\n    at Glob.emit (events.js:182:7)\n    at Glob.finish (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:172:8)\n    at done (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:159:12)\n    at Glob._processSimple2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:652:12)\n    at /Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:640:10\n    at Glob._stat2 (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:736:12)\n    at lstatcb (/Users/macweb01/Sites/ccr/ras/node_modules/gulp-useref/node_modules/glob-stream/node_modules/glob/glob.js:728:12)\n    at RES (/Users/macweb01/Sites/ccr/ras/node_modules/inflight/inflight.js:23:14)\n```\nIt seems that the error is in the plugin useref.\njs\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\nTo be able to generate the files necessary to change the layout:\nThis:\nhtml\n<!-- build:css ../styles/main.css -->\n<link rel=\"stylesheet\" href=\"../styles/main.css\">\n<!-- endbuild -->\nFor this:\nhtml\n<!-- build:css ../styles/main.css -->\n<link rel=\"stylesheet\" href=\"/app/styles/main.css\">\n<!-- endbuild -->\n. Hi @megaghz, look if it helps you.\n1. Create a htmlhint task\njs\ngulp.task('htmlhint', () => {\n  return gulp.src('app/**/*.html')\n    .pipe($.htmlhint())\n    .pipe($.htmlhint.reporter());\n});\n2. Add htmlhint as a dependency of both html and serve\njs\ngulp.task('html', ['htmlhint', 'styles', 'scripts'], () => {\n    ...\njs\ngulp.task('serve', ['htmlhint', 'styles', 'scripts', 'fonts'], () => {\n    ...\n3. Update serve tasks\n``` diff\ngulp.task('serve', ['htmlhint', 'styles', 'scripts', 'fonts'], () => {\n   ...\n   gulp.watch([\n      'app/.html',\n      'app/images//*',\n      '.tmp/fonts//'\n   ]).on('change', reload);\n\ngulp.watch('app//*.html', ['htmlhint']);\n   gulp.watch('app/styles//.scss', ['styles']);\n   gulp.watch('app/scripts//*.js', ['scripts']);\n   gulp.watch('app/fonts//', ['fonts']);\n   gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\n. It's nothing! :smile: \n. In my case are the fonts from the bower-components. I'm using [shim repository for Font Awesome](https://github.com/components/font-awesome) not moving to dist or .tmp folder.. @IniterWorker I tried and had the same problem.\n\"dependencies\": {\n    \"bootstrap\": \"~4.0.0-alpha.6\",\n    \"font-awesome\": \"fontawesome#^4.7.0\"\n}\n```\nnode: v6.11.0\nbower: v1.8.0\ngulp: v3.9.1\n. @IniterWorker now works.\n\nTks.. ",
    "derwaldgeist": "After digging into the documentation of gulp-awspublish and the AWS SDK, I found out that it works with this configuration:\nconst publisher = $.awspublish.create({\n    \"accessKeyId\": \"...\",\n    \"secretAccessKey\": \"...\",\n    \"region\": \"...\",\n    params: {\n      Bucket: '...'\n    }\n  });\nwhich is quite different from what the current recipe states. Maybe you would like to update it. I am also asking myself if there's a way to use the AWS recommendation to keep the credentials separate. At least it would be nice if they were located in a separate JSON file, so I do not have to include it in my versioning system, which is generally a bad practice.\nThe possibilities are described here:\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html\nbut I am not sure how I can access AWS.config.loadFromPath.\n. Got the file import working using this code:\n```\nconst fs = require('fs');\ngulp.task('deploy', ['build'], () => {\n  // create a new publisher\n  const credentials = JSON.parse(fs.readFileSync('aws-credentials.json', 'utf8'));\n  const publisher = $.awspublish.create(credentials);\n// define custom headers\n  const headers = {\n    'Cache-Control': 'max-age=315360000, no-transform, public'\n  };\nreturn gulp.src('dist//.')\n    .pipe(publisher.publish(headers))\n    .pipe(publisher.sync())\n    .pipe(publisher.cache())\n    .pipe($.awspublish.reporter());\n});\n```\nand this aws-credentials.json file:\n{\n    \"accessKeyId\": \"...\",\n    \"secretAccessKey\": \"...\",\n    \"region\": \"...\",\n    params: {\n      Bucket: '...'\n    }\n}\nBTW: The awspublish docs also recommend the following pipe:\n.pipe(awspublish.gzip({ ext: '.gz' }))\nMaybe this compression speeds things up? And they are not using the sync().\nAnyways. Thanks for this great scaffolder, I really like it!\n. After digging into the documentation of gulp-awspublish and the AWS SDK, I found out that it works with this configuration:\nconst publisher = $.awspublish.create({\n    \"accessKeyId\": \"...\",\n    \"secretAccessKey\": \"...\",\n    \"region\": \"...\",\n    params: {\n      Bucket: '...'\n    }\n  });\nwhich is quite different from what the current recipe states. Maybe you would like to update it. I am also asking myself if there's a way to use the AWS recommendation to keep the credentials separate. At least it would be nice if they were located in a separate JSON file, so I do not have to include it in my versioning system, which is generally a bad practice.\nThe possibilities are described here:\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html\nbut I am not sure how I can access AWS.config.loadFromPath.\n. Got the file import working using this code:\n```\nconst fs = require('fs');\ngulp.task('deploy', ['build'], () => {\n  // create a new publisher\n  const credentials = JSON.parse(fs.readFileSync('aws-credentials.json', 'utf8'));\n  const publisher = $.awspublish.create(credentials);\n// define custom headers\n  const headers = {\n    'Cache-Control': 'max-age=315360000, no-transform, public'\n  };\nreturn gulp.src('dist//.')\n    .pipe(publisher.publish(headers))\n    .pipe(publisher.sync())\n    .pipe(publisher.cache())\n    .pipe($.awspublish.reporter());\n});\n```\nand this aws-credentials.json file:\n{\n    \"accessKeyId\": \"...\",\n    \"secretAccessKey\": \"...\",\n    \"region\": \"...\",\n    params: {\n      Bucket: '...'\n    }\n}\nBTW: The awspublish docs also recommend the following pipe:\n.pipe(awspublish.gzip({ ext: '.gz' }))\nMaybe this compression speeds things up? And they are not using the sync().\nAnyways. Thanks for this great scaffolder, I really like it!\n. ",
    "heenaI": "Forexample I created a new service called lineChart.service.js the file is the the components folder like so\napp/components/chart_1/lineChart.service.js\nI added this to the index.html manually but when I insert lineChartService into the MainController \nfunction MainController($scope, lineChartService) {});\nit sends an error unknown provider  lineChartService\n. Not sure how that happened, but I am quite sure my app is from gulp-angular here is the repository https://github.com/heenaI/pollyvotes I have not yet pushed the service yet but will do so in a bit\n. Forexample I created a new service called lineChart.service.js the file is the the components folder like so\napp/components/chart_1/lineChart.service.js\nI added this to the index.html manually but when I insert lineChartService into the MainController \nfunction MainController($scope, lineChartService) {});\nit sends an error unknown provider  lineChartService\n. Not sure how that happened, but I am quite sure my app is from gulp-angular here is the repository https://github.com/heenaI/pollyvotes I have not yet pushed the service yet but will do so in a bit\n. ",
    "OwenMelbz": "Oh. Very weird\nWhen I ran npm install i got\nnpm WARN deprecated gulp-minify-css@1.2.3: Please use gulp-cssnano instead.\nnpm WARN deprecated gulp-minify-html@1.0.5: Consider using gulp-htmlmin instead\n. Oh. Very weird\nWhen I ran npm install i got\nnpm WARN deprecated gulp-minify-css@1.2.3: Please use gulp-cssnano instead.\nnpm WARN deprecated gulp-minify-html@1.0.5: Consider using gulp-htmlmin instead\n. ",
    "phelma": "That has sorted, thanks for the help. The fix should probably go back into the generator.\n. That has sorted, thanks for the help. The fix should probably go back into the generator.\n. ",
    "dima-f1": "I'm have this issue now, with latest release of generator-webapp. Any file I change cause one reload for\n every file  which have same type as edited, no matter what kind of file it was - js, scss. Any help?\n\nI'm on Windows 7 64bit, Node 6.10.2, NPM 3.10.10\n. I'm have this issue now, with latest release of generator-webapp. Any file I change cause one reload for\n every file  which have same type as edited, no matter what kind of file it was - js, scss. Any help?\n\nI'm on Windows 7 64bit, Node 6.10.2, NPM 3.10.10\n. ",
    "joelbschwartz": "I also addressed this with PR #456 - but that includes some other changes as well...! :)\n. Thanks, @silvenon. I'll look forward to the discussion.\nNunjuck's own documentation uses .html in the examples, but they don't comment on it too much. Maybe this is inspired by Jinja, which documents \"A Jinja template doesn\u2019t need to have a specific extension\".\nFWIW from the community perspective: syntax highlighting plugins for  Atom, Brackets, Sublime, and Vim all enable syntax highlighting for .nunjucks (and .html), and to a lesser extent .nunjs, with single examples for .nunj and .njk.\nI overlooked the comment from @CesarDenis in the Issues that he was going to work on this with #459.\n. @silvenon FYI, the Google Group for Nunjucks seemed like a better forum for this question of file extensions, so I raised the concern there: https://groups.google.com/forum/#!topic/nunjucks/mJbJ96OPUGQ\nPerhaps basing this PR on that outcome makes more sense? And using a stacked extension for the template files such as .html.nj might be more ideal than .nj.\n. @silvenon Ok! How do you feel about the stacked extension, .html.njk, to identify what the templating language is being used on? This is based on some recent discussion from the Nunjucks Google Group. I am testing now to see if a formula with a stacked extension adversely affects anything.\n. @silvenon I think it's slightly different for a generic templating engine like Nunjucks because it can be used with anything. Whereas scss is strictly a css extension. The stacked extension clarifies what is being templated. That said, I am fine with using only .njk. \ud83d\ude03Updated and ready to go! :+1: \n. Clearly I've put too much of my own opinion in this PR. \ud83d\ude1bMy personal preference is to put the partial files directly within the layouts folder and identify them with a leading underscore.\n\u2514\u2500\u2500 layouts\n         \u2514\u2500\u2500 _footer.njk\n         \u2514\u2500\u2500 _header.njk\n         \u2514\u2500\u2500 default.njk\nOr, to add a _partials or partials subfolder to layouts and put them in there (then, perhaps no underscore on the individual files).\n\u2514\u2500\u2500 layouts\n         \u2514\u2500\u2500 _partials\n             \u2514\u2500\u2500 footer.njk\n             \u2514\u2500\u2500 header.njk\n         \u2514\u2500\u2500 default.njk\nHappy to change it back to revert to the original includes folder and setting path to app if that's your preference and/or if there is motivation to make this recipe consistent with the Jade recipe. Let me know, and I'll update the PR accordingly.\n. K. I just double-checked the diff and I think that's good to go now.\n. Oops! Squashed. \ud83d\ude00\n. I also addressed this with PR #456 - but that includes some other changes as well...! :)\n. Thanks, @silvenon. I'll look forward to the discussion.\nNunjuck's own documentation uses .html in the examples, but they don't comment on it too much. Maybe this is inspired by Jinja, which documents \"A Jinja template doesn\u2019t need to have a specific extension\".\nFWIW from the community perspective: syntax highlighting plugins for  Atom, Brackets, Sublime, and Vim all enable syntax highlighting for .nunjucks (and .html), and to a lesser extent .nunjs, with single examples for .nunj and .njk.\nI overlooked the comment from @CesarDenis in the Issues that he was going to work on this with #459.\n. @silvenon FYI, the Google Group for Nunjucks seemed like a better forum for this question of file extensions, so I raised the concern there: https://groups.google.com/forum/#!topic/nunjucks/mJbJ96OPUGQ\nPerhaps basing this PR on that outcome makes more sense? And using a stacked extension for the template files such as .html.nj might be more ideal than .nj.\n. @silvenon Ok! How do you feel about the stacked extension, .html.njk, to identify what the templating language is being used on? This is based on some recent discussion from the Nunjucks Google Group. I am testing now to see if a formula with a stacked extension adversely affects anything.\n. @silvenon I think it's slightly different for a generic templating engine like Nunjucks because it can be used with anything. Whereas scss is strictly a css extension. The stacked extension clarifies what is being templated. That said, I am fine with using only .njk. \ud83d\ude03Updated and ready to go! :+1: \n. Clearly I've put too much of my own opinion in this PR. \ud83d\ude1bMy personal preference is to put the partial files directly within the layouts folder and identify them with a leading underscore.\n\u2514\u2500\u2500 layouts\n         \u2514\u2500\u2500 _footer.njk\n         \u2514\u2500\u2500 _header.njk\n         \u2514\u2500\u2500 default.njk\nOr, to add a _partials or partials subfolder to layouts and put them in there (then, perhaps no underscore on the individual files).\n\u2514\u2500\u2500 layouts\n         \u2514\u2500\u2500 _partials\n             \u2514\u2500\u2500 footer.njk\n             \u2514\u2500\u2500 header.njk\n         \u2514\u2500\u2500 default.njk\nHappy to change it back to revert to the original includes folder and setting path to app if that's your preference and/or if there is motivation to make this recipe consistent with the Jade recipe. Let me know, and I'll update the PR accordingly.\n. K. I just double-checked the diff and I think that's good to go now.\n. Oops! Squashed. \ud83d\ude00\n. ",
    "alxscms": "Can we still access and install the old webapp generator with Grunt and Coffeescript support ?\n. Can we still access and install the old webapp generator with Grunt and Coffeescript support ?\n. ",
    "mckewans": "You don't need the line of code \nvar assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\nRemoving it should solve your problem.\n. You don't need the line of code \nvar assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\nRemoving it should solve your problem.\n. ",
    "oleyb": "I'm in full support of ditching the use of the .html file extension in favor of .nunjucks for nunjucks templates. If we have the ability to accurately convey the content of a file by use of the file extension, why would we not embrace that?\nIf we like the use of .html why not just use .txt for all text-based files? That'd make things easier, right? ;)\n. >  syntax highlighting plugins for Atom, Brackets, Sublime, and Vim all enable syntax highlighting for .nunjucks\nThis for me is the kicker; it impacts the workflow of developers. It seems crazy to complicate stuff for devs by using an ambiguous file extension.\n. I'm in full support of ditching the use of the .html file extension in favor of .nunjucks for nunjucks templates. If we have the ability to accurately convey the content of a file by use of the file extension, why would we not embrace that?\nIf we like the use of .html why not just use .txt for all text-based files? That'd make things easier, right? ;)\n. >  syntax highlighting plugins for Atom, Brackets, Sublime, and Vim all enable syntax highlighting for .nunjucks\nThis for me is the kicker; it impacts the workflow of developers. It seems crazy to complicate stuff for devs by using an ambiguous file extension.\n. ",
    "valtido": "The syntax highlighting for sublime sucks, I can't tell where the template starts and where the actual HTML is.\nSyntax highlight is letting me down on this beautiful templating language.\n. The syntax highlighting for sublime sucks, I can't tell where the template starts and where the actual HTML is.\nSyntax highlight is letting me down on this beautiful templating language.\n. ",
    "rajathms": "+1. +1. ",
    "lukakemperle": "Same problem here: no browser refresh for .html in subfolders, even with app/**/*.html.\n. Same problem here: no browser refresh for .html in subfolders, even with app/**/*.html.\n. ",
    "savellem": "I added mine with the following.\nAdded this just below the extras script in the gulp file\ngulp.task('copy', () => {\n  return gulp.src(['app/**/*']).pipe(gulp.dest('dist'));\n})\nThen changed this guy to add my copy script\ngulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras', 'copy'], () => {\n  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n});\nThen I made sure all the directories in my subdirectory html linkage is correct and it seems to work for now.. I added mine with the following.\nAdded this just below the extras script in the gulp file\ngulp.task('copy', () => {\n  return gulp.src(['app/**/*']).pipe(gulp.dest('dist'));\n})\nThen changed this guy to add my copy script\ngulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras', 'copy'], () => {\n  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n});\nThen I made sure all the directories in my subdirectory html linkage is correct and it seems to work for now.. ",
    "dainbrain": "[EDIT] I'm dumb and didn't realize the build comments in html actually mattered. Here's how I got my subfolders to work in a basic webapp + nunjucks setup\nI followed the steps in the Nunjucks recipe linked from generator-webapp. \nI've done all the changes listed in that recipe first, and then I decided to try using subdirectories.\nHere's what I did in my gulpfile.js that's different from the recipe:\n\n\nIn my views task include all .njk files but exclude app/layouts and app/includes.\njavascript\nreturn gulp.src(['app/**/*.njk','!app/includes/**/*.njk','!app/layouts/**/*.njk'])\n\n\nIn my html task do the same, also including/excluding the .tmp directory based on @CesarDenis and @silvenon comments above.\njavascript\nreturn gulp.src([\n      'app/**/*.html',\n      '.tmp/**/*.html',\n      '!.tmp/includes/**/*.html',\n      '!.tmp/layouts/**/*.html',\n      '!app/includes/**/*.html',\n      '!app/layouts/**/*.html'\n    ])\n\nIt seemed to work, but the paths for the css/js were still relative, so I changing link paths in the default template for all the links including the build comments. (example):\n\nhtml\n<!-- build:css /styles/main.css -->\n    <link rel=\"stylesheet\" href=\"/styles/main.css\">\n<!-- endbuild -->\nNow I can create additional child pages in subdirectories like @CesarDenis had in his first comment.\ngulp works\ngulp serve works\ngulp build works\ngulp serve:dist works\nThanks for the help in this thread! . [EDIT] I'm dumb and didn't realize the build comments in html actually mattered. Here's how I got my subfolders to work in a basic webapp + nunjucks setup\nI followed the steps in the Nunjucks recipe linked from generator-webapp. \nI've done all the changes listed in that recipe first, and then I decided to try using subdirectories.\nHere's what I did in my gulpfile.js that's different from the recipe:\n\n\nIn my views task include all .njk files but exclude app/layouts and app/includes.\njavascript\nreturn gulp.src(['app/**/*.njk','!app/includes/**/*.njk','!app/layouts/**/*.njk'])\n\n\nIn my html task do the same, also including/excluding the .tmp directory based on @CesarDenis and @silvenon comments above.\njavascript\nreturn gulp.src([\n      'app/**/*.html',\n      '.tmp/**/*.html',\n      '!.tmp/includes/**/*.html',\n      '!.tmp/layouts/**/*.html',\n      '!app/includes/**/*.html',\n      '!app/layouts/**/*.html'\n    ])\n\nIt seemed to work, but the paths for the css/js were still relative, so I changing link paths in the default template for all the links including the build comments. (example):\n\nhtml\n<!-- build:css /styles/main.css -->\n    <link rel=\"stylesheet\" href=\"/styles/main.css\">\n<!-- endbuild -->\nNow I can create additional child pages in subdirectories like @CesarDenis had in his first comment.\ngulp works\ngulp serve works\ngulp build works\ngulp serve:dist works\nThanks for the help in this thread! . ",
    "eugenious": "Okay, thanks for the feedback.\nI pushed an update:\n1. fixed the context lines\n2. got rid of source maps section\n3. squashed the commits, and added a better commit message\nLet me know if you need anything else\n. Okay, thanks for the feedback.\nI pushed an update:\n1. fixed the context lines\n2. got rid of source maps section\n3. squashed the commits, and added a better commit message\nLet me know if you need anything else\n. ",
    "jonigl": "I got the same warnings. \n. I got the same warnings. \n. ",
    "mcmonkeys1": "I do not like the look of this one:\nminimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nDoes anyone know if this will this insert a security issue into production sites?\nIt's coming from modules:\ngenerator-yasmine@0.2.2\nwiredep@2.2.2\nyeoman-generator@0.22.6\nIncidentally latest version of yeomon-generator is 0.23.4\nand wiredep is at 4.0.0 \n. I do not like the look of this one:\nminimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nDoes anyone know if this will this insert a security issue into production sites?\nIt's coming from modules:\ngenerator-yasmine@0.2.2\nwiredep@2.2.2\nyeoman-generator@0.22.6\nIncidentally latest version of yeomon-generator is 0.23.4\nand wiredep is at 4.0.0 \n. ",
    "morrislaptop": "Hey,\n- No syntax highlighting\n- Layout files - I guess this is a matter of preference however I would say that a layout file requires a lot of extra planning and forethought - whereas I'm using this generator to hit the ground running\n- Something more advanced - sure, this can always happen and in this instance they could follow the Nunjucks recipe\nCheers,\nCraig\n. Great! Let me know if I can do anything else :) \nLooping in @coderhaoxin (author of gulp file include) if he has any suggestions on the implementation. \n. - bump!\n. Cool, I gave nunjucks a go and it was definitely a better workflow then gulp file include\n. Hey,\n- No syntax highlighting\n- Layout files - I guess this is a matter of preference however I would say that a layout file requires a lot of extra planning and forethought - whereas I'm using this generator to hit the ground running\n- Something more advanced - sure, this can always happen and in this instance they could follow the Nunjucks recipe\nCheers,\nCraig\n. Great! Let me know if I can do anything else :) \nLooping in @coderhaoxin (author of gulp file include) if he has any suggestions on the implementation. \n. - bump!\n. Cool, I gave nunjucks a go and it was definitely a better workflow then gulp file include\n. ",
    "musdy": "+1\n. +1\n. ",
    "tobyl": "Based on the existing structure of the repo, the app directory is where the HTML files live, and the HTML file references scripts and styles in that folder. In order to deploy, it seems the minimal work required each time would be to upload the app folder, upload the dist folder and then alter the paths in the HTML file (or maintain two HTML files).\nThe system works perfectly in development, I'm just wondering about best practices for deployment.\nThanks for the response.\n. Ah - the problem was that I had a linting error in my javascript, which killed the gulp build - the dist folder is created, but incomplete. I see now exactly how deployment would work - which is fantastic, btw! Many thanks!\n. it shows in the command line - I guess I didn't glance upwards since the gulp command ends with:\n[10:29:20] Finished 'styles' after 1.34 s\n[10:29:20] Finished 'scripts' after 1.08 s\n[10:29:20] Finished 'extras' after 829 ms\n[10:29:20] Finished 'fonts' after 855 ms\nRather than an indication that the entire tasks failed. This is definitely my mistake - I just wasn't sure if I was missing something, which I was..\n. Based on the existing structure of the repo, the app directory is where the HTML files live, and the HTML file references scripts and styles in that folder. In order to deploy, it seems the minimal work required each time would be to upload the app folder, upload the dist folder and then alter the paths in the HTML file (or maintain two HTML files).\nThe system works perfectly in development, I'm just wondering about best practices for deployment.\nThanks for the response.\n. Ah - the problem was that I had a linting error in my javascript, which killed the gulp build - the dist folder is created, but incomplete. I see now exactly how deployment would work - which is fantastic, btw! Many thanks!\n. it shows in the command line - I guess I didn't glance upwards since the gulp command ends with:\n[10:29:20] Finished 'styles' after 1.34 s\n[10:29:20] Finished 'scripts' after 1.08 s\n[10:29:20] Finished 'extras' after 829 ms\n[10:29:20] Finished 'fonts' after 855 ms\nRather than an indication that the entire tasks failed. This is definitely my mistake - I just wasn't sure if I was missing something, which I was..\n. ",
    "patrickcorrigan": "Aha this got me too :+1: \n. Aha this got me too :+1: \n. ",
    "joepegler": "'gulp styles' is the culprit...\n. I had to roll back the previous version that uses grunt. \n. 'gulp styles' is the culprit...\n. I had to roll back the previous version that uses grunt. \n. ",
    "cvasquez": "Having the same issue here. Would appreciate any help.\n. Thanks so much @sassquad - node 4.3.1 worked for me!\n. Having the same issue here. Would appreciate any help.\n. Thanks so much @sassquad - node 4.3.1 worked for me!\n. ",
    "sassquad": "I tried the above also, but this fails. Using node v0.10.42 and npm v3.7.3 on Mac OS X El Capitan:\nTypeError: Object #<Object> has no method 'postcss' at \nGulp._gulp2.default.task._gulp2.default.src.pipe.pipe.pipe.pipe.pipe.pipe.reload.stream \n(gulpfile.babel.js:22:13)\nHaving used nvm to install node v4.3.1 and switch accordingly, the build now proceeds without incident.\n. @cvasquez - Glad to be of help!\n@silvenon - I'll look into your suggestion when I get near my computer later.\n. @silvenon Sorry for the delay - I've only had a short time to look into this. Notably, I haven't updated the generator to take into account the new update referenced in #471\nI reverted to the prior node version, installed those two npm modules, and did gulp serve, but got a new error instead (pathnames truncated) :\n.../node_modules/gulp-util/lib/PluginError.js:73\n    if (!this.message) throw new Error('Missing error message');\n                       ^\nError: Missing error message\nat new PluginError (.../node_modules/gulp-util/lib/PluginError.js:73:28)\nWhen I went back to the newer node, everything worked fine. \nOn this basis, looks like it's better to go out with the old and in with the new :smile:\n. I tried the above also, but this fails. Using node v0.10.42 and npm v3.7.3 on Mac OS X El Capitan:\nTypeError: Object #<Object> has no method 'postcss' at \nGulp._gulp2.default.task._gulp2.default.src.pipe.pipe.pipe.pipe.pipe.pipe.reload.stream \n(gulpfile.babel.js:22:13)\nHaving used nvm to install node v4.3.1 and switch accordingly, the build now proceeds without incident.\n. @cvasquez - Glad to be of help!\n@silvenon - I'll look into your suggestion when I get near my computer later.\n. @silvenon Sorry for the delay - I've only had a short time to look into this. Notably, I haven't updated the generator to take into account the new update referenced in #471\nI reverted to the prior node version, installed those two npm modules, and did gulp serve, but got a new error instead (pathnames truncated) :\n.../node_modules/gulp-util/lib/PluginError.js:73\n    if (!this.message) throw new Error('Missing error message');\n                       ^\nError: Missing error message\nat new PluginError (.../node_modules/gulp-util/lib/PluginError.js:73:28)\nWhen I went back to the newer node, everything worked fine. \nOn this basis, looks like it's better to go out with the old and in with the new :smile:\n. ",
    "tpinne": "A little update:\nEven if trim the section down to \n<!-- build:js scripts/vendor.js -->\n    <script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n<!-- endbuild -->\nall files from the bower components are merged into vendor.js. If I clear it up to an empty section\n<!-- build:js scripts/vendor.js -->\n<!-- endbuild -->\nthen no vendor.js will be inserted at all.\nTo sum it up: At the moment I only can have everything or nothing merged into vendor.js. Which ends up in conflicts in my current project and is beside from that not the desired behaviour, since one wants to be able to only include the parts of a bower component for production which are really needed.\n. @neilhem It's not just bootstrap. I would have to exclude all files from all third party components I don't want in the build file. But I think that's not the place for this common scenario, when there is actually a part in the html file where you reference the needed files that the build process should use.\nI would have to exclude all bootstrap files but one, 50% of the formstone components, ...\nThat's not the process as I recall it from the grunt version of this generator.\n. @silvenon thanks for pointing me in the right direction. It seems I totally had luck in the past that there haven't been conflicts or anything. Now it seems everything is up and running right in time. Thanks very much.\n. A little update:\nEven if trim the section down to \n<!-- build:js scripts/vendor.js -->\n    <script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n<!-- endbuild -->\nall files from the bower components are merged into vendor.js. If I clear it up to an empty section\n<!-- build:js scripts/vendor.js -->\n<!-- endbuild -->\nthen no vendor.js will be inserted at all.\nTo sum it up: At the moment I only can have everything or nothing merged into vendor.js. Which ends up in conflicts in my current project and is beside from that not the desired behaviour, since one wants to be able to only include the parts of a bower component for production which are really needed.\n. @neilhem It's not just bootstrap. I would have to exclude all files from all third party components I don't want in the build file. But I think that's not the place for this common scenario, when there is actually a part in the html file where you reference the needed files that the build process should use.\nI would have to exclude all bootstrap files but one, 50% of the formstone components, ...\nThat's not the process as I recall it from the grunt version of this generator.\n. @silvenon thanks for pointing me in the right direction. It seems I totally had luck in the past that there haven't been conflicts or anything. Now it seems everything is up and running right in time. Thanks very much.\n. ",
    "greypiglet": "@tpinne I don't know if it's anything to do with the issue you're describing above but we've just diagnosed an issue with the overall concat & uglification of the whole vendor.js file. The only way to avoid was to split the vendor references into smaller groups, thereby excluding the use of wiredep. It's the only way we could get a project to successfully build.\n. @tpinne I don't know if it's anything to do with the issue you're describing above but we've just diagnosed an issue with the overall concat & uglification of the whole vendor.js file. The only way to avoid was to split the vendor references into smaller groups, thereby excluding the use of wiredep. It's the only way we could get a project to successfully build.\n. ",
    "NigelOToole": "My mistake, I was using gulp build rather than just gulp to build my project. Thanks for taking a look. \n. Reading the discussion I understand your reasons for not doing this as the paths are not repeated that frequently and could be replaced using a simple Find and Replace. \nHowever I do think having it configurable as a variable in the gulp file is a cleaner approach and it makes the gulp file more easily extendable. Where I think this would be most useful is in either of the following use cases.\n1. The user adds new tasks or extends current tasks, which would lead to the paths being repeated more frequently.\n2. The user wants to use this generator and integrate it with a particular CMS or back-end language which then dictates a different folder structure.\n. My mistake, I was using gulp build rather than just gulp to build my project. Thanks for taking a look. \n. Reading the discussion I understand your reasons for not doing this as the paths are not repeated that frequently and could be replaced using a simple Find and Replace. \nHowever I do think having it configurable as a variable in the gulp file is a cleaner approach and it makes the gulp file more easily extendable. Where I think this would be most useful is in either of the following use cases.\n1. The user adds new tasks or extends current tasks, which would lead to the paths being repeated more frequently.\n2. The user wants to use this generator and integrate it with a particular CMS or back-end language which then dictates a different folder structure.\n. ",
    "Derekc1031": "Thx, neilhem!\nMay I  know that is there any way to use Grunt as default build system if I use generator-wabapp to scaffold a website project?\n. Thx, neilhem!\nMay I  know that is there any way to use Grunt as default build system if I use generator-wabapp to scaffold a website project?\n. ",
    "pebcakerror": "https://github.com/lazd/gulp-handlebars#compiling-using-a-specific-handlebars-version\nnpm install --save-dev handlebars\n...\n.pipe($.handlebars({\n  handlebars: require('handlebars')\n}))\n...\n. Is there anything I can do to help get this PR accepted?\n. https://github.com/lazd/gulp-handlebars#compiling-using-a-specific-handlebars-version\nnpm install --save-dev handlebars\n...\n.pipe($.handlebars({\n  handlebars: require('handlebars')\n}))\n...\n. Is there anything I can do to help get this PR accepted?\n. ",
    "ivan-vilches": "I am happy starting with this generator, if its possible update the coffescript recipe wil be nice . Am not gulp guru . Thanks\n. I am happy starting with this generator, if its possible update the coffescript recipe wil be nice . Am not gulp guru . Thanks\n. ",
    "Saul3d": "I\"m gettng this same error.  I've provided a screen capture of what I've been getting.\n\n. I\"m gettng this same error.  I've provided a screen capture of what I've been getting.\n\n. ",
    "michaeloxborrow": "Can you provide an example?\nHere is my html task:\njs\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/*.html')\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.cssnano()))\n    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\n. Thanks, I installed lazypipe and added this line to my gulpfile:\nvar lazypipe = require('lazypipe');\nI get this error:\nInvalid call to lazypipe().pipe(): no stream creation function specified at validateStep\n. I didn't.\nI gave up.\nJavaScript uses CSS which can get missed.\nOn Thu, 19 Jan 2017, 13:57 simonbuehler, notifications@github.com wrote:\n\nhi,\nreached the same point today, new to this and want to plug uncss into this\nsetup. @michaeloxborrow https://github.com/michaeloxborrow could you\ngive me a hint on how you succeeded?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/yeoman/generator-webapp/issues/484#issuecomment-273782303,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMWlhg_KM3-DlibfmVDkIOSK02NXkHmSks5rT2vOgaJpZM4Hx-tz\n.\n. Can you provide an example?\nHere is my html task:\n\njs\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/*.html')\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.cssnano()))\n    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\n. Thanks, I installed lazypipe and added this line to my gulpfile:\nvar lazypipe = require('lazypipe');\nI get this error:\nInvalid call to lazypipe().pipe(): no stream creation function specified at validateStep\n. I didn't.\nI gave up.\nJavaScript uses CSS which can get missed.\nOn Thu, 19 Jan 2017, 13:57 simonbuehler, notifications@github.com wrote:\n\nhi,\nreached the same point today, new to this and want to plug uncss into this\nsetup. @michaeloxborrow https://github.com/michaeloxborrow could you\ngive me a hint on how you succeeded?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/yeoman/generator-webapp/issues/484#issuecomment-273782303,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMWlhg_KM3-DlibfmVDkIOSK02NXkHmSks5rT2vOgaJpZM4Hx-tz\n.\n. \n",
    "simonbuehler": "hi,\nreached the same point today, new to this and want to plug uncss into this setup. @michaeloxborrow could you give me a hint on how you succeeded?. hi,\nreached the same point today, new to this and want to plug uncss into this setup. @michaeloxborrow could you give me a hint on how you succeeded?. ",
    "tdopires": "I'm trying another \nnpm install --global generator-webapp\nmaybe...\n. I've updated all things and now it's working. YAY! :+1:  \nSorry about opening an issue just for that.\nMy bad. :disappointed: \n. Are you running which platform? If you are on Mac OS, be careful with some issues around installing node & npm with homebrew, it's quite common.\nI don't remember well how I got out of this, but try following this\nAs far as I remember, it was something very simple like:\n$ npm install -g npm\nand after that \n$ npm update\n. I'm trying another \nnpm install --global generator-webapp\nmaybe...\n. I've updated all things and now it's working. YAY! :+1:  \nSorry about opening an issue just for that.\nMy bad. :disappointed: \n. Are you running which platform? If you are on Mac OS, be careful with some issues around installing node & npm with homebrew, it's quite common.\nI don't remember well how I got out of this, but try following this\nAs far as I remember, it was something very simple like:\n$ npm install -g npm\nand after that \n$ npm update\n. ",
    "danmv": "how did you update all things? I am running into the same error. \nI am new to this and don't know what are all the commands I need to execute to update all things. \nThanks \n. how did you update all things? I am running into the same error. \nI am new to this and don't know what are all the commands I need to execute to update all things. \nThanks \n. ",
    "lnmunhoz": "Solved using common handlebars registerTemplate method.\n. Fixed using .bower.json\n. @ryanburnett \n- Yes\n- This is my bower.json:\njson\n{\n  \"name\": \"package\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"modernizr\": \"~2.8.3\",\n    \"normalize-css\": \"~3.0.2\",\n    \"bootstrap\": \"^3.3.6\",\n    \"ajaxchimp\": \"^1.3.0\"\n  },\n   \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"dist/css/bootstrap.min.css\",\n        \"dist/js/bootstrap.min.js\"\n      ]\n    }\n  }\n}\nThe main configuration of bootstrap uses bootstrap.less so this is why we need to do this to use the css file by default. You can check this configs on bower_components/bootstrap/.bower.json.\nThis is my wiredep task in case you need it.\n``` js\ngulp.task('wiredep', function() {\n  var wiredep = require('wiredep').stream;\ngulp.src('app/css/*.scss')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/css'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\n```\nHope this help you! Good luck :)\n. Solved using common handlebars registerTemplate method.\n. Fixed using .bower.json\n. @ryanburnett \n- Yes\n- This is my bower.json:\njson\n{\n  \"name\": \"package\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"modernizr\": \"~2.8.3\",\n    \"normalize-css\": \"~3.0.2\",\n    \"bootstrap\": \"^3.3.6\",\n    \"ajaxchimp\": \"^1.3.0\"\n  },\n   \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"dist/css/bootstrap.min.css\",\n        \"dist/js/bootstrap.min.js\"\n      ]\n    }\n  }\n}\nThe main configuration of bootstrap uses bootstrap.less so this is why we need to do this to use the css file by default. You can check this configs on bower_components/bootstrap/.bower.json.\nThis is my wiredep task in case you need it.\n``` js\ngulp.task('wiredep', function() {\n  var wiredep = require('wiredep').stream;\ngulp.src('app/css/*.scss')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/css'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\n```\nHope this help you! Good luck :)\n. ",
    "ryanburnett": "@lnmunhoz I'm having the same issue. A couple questions:\n- Is the location of this bower.json in the project root?\n- Can you please post the entire code of this bower.json?\n. @frankis I'm having the same issue. A couple questions:\n- Is the location of this bower.json in the project root?\n- Can you please post the entire code of this bower.json file?\n. @lnmunhoz I'm having the same issue. A couple questions:\n- Is the location of this bower.json in the project root?\n- Can you please post the entire code of this bower.json?\n. @frankis I'm having the same issue. A couple questions:\n- Is the location of this bower.json in the project root?\n- Can you please post the entire code of this bower.json file?\n. ",
    "abondarenko": "The same issue.\nBower injects the wrong path. Should be \n@import \"../../bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n. Fresh install.\nIt seems there were no errors when I started, but Webstorm (IDE that I use) said there was an error with path.\n. Thanks.\n. Yep, it works.\nI thought I need to place my scripts somewhere outside of \"build:js\" section.\n. Do you propose to place all stuff in one place (main.js)?? :-o\n. The same issue.\nBower injects the wrong path. Should be \n@import \"../../bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n. Fresh install.\nIt seems there were no errors when I started, but Webstorm (IDE that I use) said there was an error with path.\n. Thanks.\n. Yep, it works.\nI thought I need to place my scripts somewhere outside of \"build:js\" section.\n. Do you propose to place all stuff in one place (main.js)?? :-o\n. ",
    "ryanjohnston": "Yes, without the change it produces an error.\nThe clean is needed because this recipe requires you to remove 'dist' from .gitignore \nThe last step removes dist so that it isn't listed as an untracked folder and the entire build folder is not committed. \nSent from my iPhone\n\nOn Apr 5, 2016, at 2:12 AM, Matija Marohni\u0107 notifications@github.com wrote:\nThis line will error out then, no?\n.pipe($.clean());\nI'm not sure why it's cleaning after deployment anyway. But it should clean up before, which is not happening currently. Seems to me something like this is needed:\ngulp.task('upload', ['build'], () => {\n  // gh pages stuff\n});\ngulp.task('deploy', ['clean'], () => {\n  gulp.start('upload');\n});\nWhich gets around the issue where Gulp cannot specify the order in which tasks will run.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. Yes, without the change it produces an error.\n\nThe clean is needed because this recipe requires you to remove 'dist' from .gitignore \nThe last step removes dist so that it isn't listed as an untracked folder and the entire build folder is not committed. \nSent from my iPhone\n\nOn Apr 5, 2016, at 2:12 AM, Matija Marohni\u0107 notifications@github.com wrote:\nThis line will error out then, no?\n.pipe($.clean());\nI'm not sure why it's cleaning after deployment anyway. But it should clean up before, which is not happening currently. Seems to me something like this is needed:\ngulp.task('upload', ['build'], () => {\n  // gh pages stuff\n});\ngulp.task('deploy', ['clean'], () => {\n  gulp.start('upload');\n});\nWhich gets around the issue where Gulp cannot specify the order in which tasks will run.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. \n",
    "miketricking": "I have already ran gulp serve prior to doing this \nSent from my iPhone\n\nOn 6 Apr 2016, at 18:27, Matija Marohni\u0107 notifications@github.com wrote:\nYou need to bower install stuff after running gulp serve. Read this section.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. It has been added above all the bootstrap js files so rather than in plugins.js it has been put in vendor.js which probably makes sense to be fair! thanks\n. I have already ran gulp serve prior to doing this \n\nSent from my iPhone\n\nOn 6 Apr 2016, at 18:27, Matija Marohni\u0107 notifications@github.com wrote:\nYou need to bower install stuff after running gulp serve. Read this section.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. It has been added above all the bootstrap js files so rather than in plugins.js it has been put in vendor.js which probably makes sense to be fair! thanks\n. \n",
    "mizhdi": "first: npm install --global yo\nIt's ok now\n. first: npm install --global yo\nIt's ok now\n. ",
    "lifeonlars": "I had to run  npm install generator-webapp@^2.0.0 in order to finally get it working\n. I had to run  npm install generator-webapp@^2.0.0 in order to finally get it working\n. ",
    "inlikealion": "``` JS\n// generated on 2016-02-24 using generator-webapp 2.0.0\nimport gulp from 'gulp';\nimport gulpLoadPlugins from 'gulp-load-plugins';\nimport nunjucksRender from 'gulp-nunjucks-render';\nimport browserSync from 'browser-sync';\nimport del from 'del';\nimport {stream as wiredep} from 'wiredep';\nconst $ = gulpLoadPlugins();\nconst reload = browserSync.reload;\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('scripts', () => {\n  return gulp.src('app/scripts/*/.js')\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nfunction lint(files, options) {\n  return () => {\n    return gulp.src(files)\n      .pipe(reload({stream: true, once: true}))\n      .pipe($.eslint(options))\n      .pipe($.eslint.format())\n      .pipe($.if(!browserSync.active, $.eslint.failAfterError()));\n  };\n}\nconst testLintOptions = {\n  env: {\n    mocha: true\n  }\n};\ngulp.task('lint', lint('app/scripts//*.js'));\ngulp.task('lint:test', lint('test/spec//*.js', testLintOptions));\ngulp.task('nunjucks', function() {\n  nunjucksRender.nunjucks.configure(['app/templates/']);\n  // Gets .html and .nunjucks files in pages\n  return gulp.src('app/pages/*/.+(html|nunjucks)')\n  // Renders template with nunjucks\n  .pipe(nunjucksRender())\n  // output files in app folder\n  .pipe(gulp.dest('app'))\n});\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src(['app//.html', '!gdo'])\n    .pipe($.useref({searchPath: ['.tmp', '!.tmp/gdo', 'app', '.']}))\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', $.cssnano()))\n    .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', () => {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts//*'))\n    .pipe(gulp.dest('.tmp/fonts'))\n    .pipe(gulp.dest('dist/fonts'));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', del.bind(null, ['.tmp', '!.tmp/gdo', 'dist']));\ngulp.task('serve', ['nunjucks', 'styles', 'scripts', 'fonts'], () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch([\n    'app//*.html',\n    '!gdo',\n    'app/images//',\n    '.tmp/fonts//'\n  ]).on('change', reload);\ngulp.watch('app//*.nunjucks', ['nunjucks']);\n  gulp.watch('app/styles//.scss', ['styles']);\n  gulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch('app/fonts//', ['fonts']);\n  gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\ngulp.task('serve:dist', () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['dist']\n    }\n  });\n});\ngulp.task('serve:test', ['scripts'], () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    ui: false,\n    server: {\n      baseDir: 'test',\n      routes: {\n        '/scripts': '.tmp/scripts',\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch('test/spec//.js').on('change', reload);\n  gulp.watch('test/spec//.js', ['lint:test']);\n});\n// inject bower components\ngulp.task('wiredep', () => {\n  gulp.src('app/styles/*.scss')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\n// gulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras'], () => {\ngulp.task('build', ['nunjucks', 'html', 'images', 'fonts', 'extras'], () => {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', ['clean'], () => {\n  gulp.start('build');\n});\n. It appears that running the `bower install --save` command while `gulp serve` is running did work for this particular component, but I know many packages don't include all required assets in their `main` array.\n. Closing this for now. This particular example was solved by `gulp wiredep` but still unsure how to apply to something that doesn't list all assets in its `bower.json` main array.\n. JS\n// generated on 2016-02-24 using generator-webapp 2.0.0\nimport gulp from 'gulp';\nimport gulpLoadPlugins from 'gulp-load-plugins';\nimport nunjucksRender from 'gulp-nunjucks-render';\nimport browserSync from 'browser-sync';\nimport del from 'del';\nimport {stream as wiredep} from 'wiredep';\nconst $ = gulpLoadPlugins();\nconst reload = browserSync.reload;\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('scripts', () => {\n  return gulp.src('app/scripts/*/.js')\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.babel())\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nfunction lint(files, options) {\n  return () => {\n    return gulp.src(files)\n      .pipe(reload({stream: true, once: true}))\n      .pipe($.eslint(options))\n      .pipe($.eslint.format())\n      .pipe($.if(!browserSync.active, $.eslint.failAfterError()));\n  };\n}\nconst testLintOptions = {\n  env: {\n    mocha: true\n  }\n};\ngulp.task('lint', lint('app/scripts//*.js'));\ngulp.task('lint:test', lint('test/spec//*.js', testLintOptions));\ngulp.task('nunjucks', function() {\n  nunjucksRender.nunjucks.configure(['app/templates/']);\n  // Gets .html and .nunjucks files in pages\n  return gulp.src('app/pages/*/.+(html|nunjucks)')\n  // Renders template with nunjucks\n  .pipe(nunjucksRender())\n  // output files in app folder\n  .pipe(gulp.dest('app'))\n});\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src(['app//.html', '!gdo'])\n    .pipe($.useref({searchPath: ['.tmp', '!.tmp/gdo', 'app', '.']}))\n    .pipe($.if('.js', $.uglify()))\n    .pipe($.if('.css', $.cssnano()))\n    .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', () => {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true,\n      // don't remove IDs from SVGs, they are often used\n      // as hooks for embedding and styling\n      svgoPlugins: [{cleanupIDs: false}]\n    })))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts//*'))\n    .pipe(gulp.dest('.tmp/fonts'))\n    .pipe(gulp.dest('dist/fonts'));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/.',\n    '!app/*.html'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', del.bind(null, ['.tmp', '!.tmp/gdo', 'dist']));\ngulp.task('serve', ['nunjucks', 'styles', 'scripts', 'fonts'], () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch([\n    'app//*.html',\n    '!gdo',\n    'app/images//',\n    '.tmp/fonts//'\n  ]).on('change', reload);\ngulp.watch('app//*.nunjucks', ['nunjucks']);\n  gulp.watch('app/styles//.scss', ['styles']);\n  gulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch('app/fonts//', ['fonts']);\n  gulp.watch('bower.json', ['wiredep', 'fonts']);\n});\ngulp.task('serve:dist', () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['dist']\n    }\n  });\n});\ngulp.task('serve:test', ['scripts'], () => {\n  browserSync({\n    notify: false,\n    port: 9000,\n    ui: false,\n    server: {\n      baseDir: 'test',\n      routes: {\n        '/scripts': '.tmp/scripts',\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch('test/spec//.js').on('change', reload);\n  gulp.watch('test/spec//.js', ['lint:test']);\n});\n// inject bower components\ngulp.task('wiredep', () => {\n  gulp.src('app/styles/*.scss')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/.html')\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)../\n    }))\n    .pipe(gulp.dest('app'));\n});\n// gulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras'], () => {\ngulp.task('build', ['nunjucks', 'html', 'images', 'fonts', 'extras'], () => {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', ['clean'], () => {\n  gulp.start('build');\n});\n``\n. It appears that running thebower install --savecommand whilegulp serveis running did work for this particular component, but I know many packages don't include all required assets in theirmainarray.\n. Closing this for now. This particular example was solved bygulp wiredepbut still unsure how to apply to something that doesn't list all assets in itsbower.json` main array.\n. ",
    "erdostom": "Why?\n. Yes, sorry. I don't have any config happening there, just using the existing config in the .babelrc.\n. thanks @kevva, will make those changes. do you think it would be worthwhile to add some kind of module support to the core generator? what is the criteria for deciding if a feature is a recipe / core change? thanks again\n. just checking if you guys need anything else to get this PR merged\n. Why?\n. Yes, sorry. I don't have any config happening there, just using the existing config in the .babelrc.\n. thanks @kevva, will make those changes. do you think it would be worthwhile to add some kind of module support to the core generator? what is the criteria for deciding if a feature is a recipe / core change? thanks again\n. just checking if you guys need anything else to get this PR merged\n. ",
    "3ilguun": "Nope.\n\"private\": true,\n \"dependencies\": {\n    \"bootstrap-sass\": \"~3.3.5\",\n    \"modernizr\": \"~2.8.1\",\n    \"html5shiv\": \"^3.7.3\",\n    \"d3\": \"^3.5.16\",\n    \"c3\": \"^0.4.10\",\n    \"nvd3\": \"^1.8.2\"\n  },\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    }\n  },\n  \"devDependencies\": {\n    \"chai\": \"^3.5.0\",\n    \"mocha\": \"^2.4.5\",\n    \"sortable\": \"^0.8.0\",\n    \"select2\": \"^4.0.2\",\n    \"select2-bootstrap-theme\": \"^0.1.0-beta.4\",\n    \"bootstrap-datepicker\": \"^1.6.0\",\n    \"jquery-validation\": \"^1.15.0\",\n    \"bootstrap-validator\": \"^0.10.1\",\n    \"jquery.cookie\": \"jquery-cookie#^1.4.1\",\n    \"jquery-confirm\": \"^2.5.2\"\n  }\n. Yes, I chose option from yo webapp.\nAlso i reinstalled the jQuery with bower install jquery#1.12.3 --save-dev and bower update all same. Doesn't add automatically into my bower.json.\n. Nope, bower install jquery#1.12.3 --save-dev doesn't add in my dev dependencies.\nI've reinstalled everything in other folder and this time works. I don't know what problem was but guess it was my fault.\n. Just checked and both works.\n. Nope.\n\"private\": true,\n \"dependencies\": {\n    \"bootstrap-sass\": \"~3.3.5\",\n    \"modernizr\": \"~2.8.1\",\n    \"html5shiv\": \"^3.7.3\",\n    \"d3\": \"^3.5.16\",\n    \"c3\": \"^0.4.10\",\n    \"nvd3\": \"^1.8.2\"\n  },\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    }\n  },\n  \"devDependencies\": {\n    \"chai\": \"^3.5.0\",\n    \"mocha\": \"^2.4.5\",\n    \"sortable\": \"^0.8.0\",\n    \"select2\": \"^4.0.2\",\n    \"select2-bootstrap-theme\": \"^0.1.0-beta.4\",\n    \"bootstrap-datepicker\": \"^1.6.0\",\n    \"jquery-validation\": \"^1.15.0\",\n    \"bootstrap-validator\": \"^0.10.1\",\n    \"jquery.cookie\": \"jquery-cookie#^1.4.1\",\n    \"jquery-confirm\": \"^2.5.2\"\n  }\n. Yes, I chose option from yo webapp.\nAlso i reinstalled the jQuery with bower install jquery#1.12.3 --save-dev and bower update all same. Doesn't add automatically into my bower.json.\n. Nope, bower install jquery#1.12.3 --save-dev doesn't add in my dev dependencies.\nI've reinstalled everything in other folder and this time works. I don't know what problem was but guess it was my fault.\n. Just checked and both works.\n. ",
    "plonko": "nb. The gulp wiredep task has to be running for it to notice a bower installed lib. This will be running as part of gulp serve\n. @silvenon\nHappy to help! :) \nerm, I think I've squashed that now. Not sure. \n. nb. The gulp wiredep task has to be running for it to notice a bower installed lib. This will be running as part of gulp serve\n. @silvenon\nHappy to help! :) \nerm, I think I've squashed that now. Not sure. \n. ",
    "yibhou": "I have solved this problem from gulp docs\n. I have solved this problem from gulp docs\n. ",
    "frankis": "oops... great if the question includes the answer! Override...\nAdding the following to the bower.json does the \"magic\":\n\"font-awesome\": {\n      \"main\": [\n      \"./scss/font-awesome.scss\",\n      \"./fonts/*\"\n      ]\n    }\n. Hi Ryan, I used the webapp boilerplate just for learning purposes and didn\u00b4t keep the code.\nThe following hopefully helps to get things sorted for you.\n1. Yes - after running \"yo webapp\" you will find the bower.json in the projects root\n2. If you went with bootstrap, your bower.json should look somewhat like this after adding \"my solution\":\n...\n   \"overrides\": {\n   \"bootstrap-sass\": {\n     \"main\": [\n       \"assets/stylesheets/_bootstrap.scss\",\n       \"assets/fonts/bootstrap/*\",\n       \"assets/javascripts/bootstrap.js\"\n     ]\n   },\n   \"font-awesome\": { \n     \"main\": [ \n       \"./scss/font-awesome.scss\", \n       \"./fonts/*\" \n     ] \n   } \n   },\n   ...\n. oops... great if the question includes the answer! Override...\nAdding the following to the bower.json does the \"magic\":\n\"font-awesome\": {\n      \"main\": [\n      \"./scss/font-awesome.scss\",\n      \"./fonts/*\"\n      ]\n    }\n. Hi Ryan, I used the webapp boilerplate just for learning purposes and didn\u00b4t keep the code.\nThe following hopefully helps to get things sorted for you.\n1. Yes - after running \"yo webapp\" you will find the bower.json in the projects root\n2. If you went with bootstrap, your bower.json should look somewhat like this after adding \"my solution\":\n...\n   \"overrides\": {\n   \"bootstrap-sass\": {\n     \"main\": [\n       \"assets/stylesheets/_bootstrap.scss\",\n       \"assets/fonts/bootstrap/*\",\n       \"assets/javascripts/bootstrap.js\"\n     ]\n   },\n   \"font-awesome\": { \n     \"main\": [ \n       \"./scss/font-awesome.scss\", \n       \"./fonts/*\" \n     ] \n   } \n   },\n   ...\n. ",
    "alexSanni": "same here. \nWhen I remove line 58, 59 and 60 it works. (Without minified and compressed html, js, css)\n.pipe($.if('.js', $.uglify()))\n.pipe($.if('.css', $.cssnano()))\n.pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n. same here. \nWhen I remove line 58, 59 and 60 it works. (Without minified and compressed html, js, css)\n.pipe($.if('.js', $.uglify()))\n.pipe($.if('.css', $.cssnano()))\n.pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n. ",
    "romanenko": "I had this error after updating my node version to 6.0.0. Upgrading version of gulp-if in package.json fixed issue for me:\n\"gulp-if\": \"^2.0.0\",\n. I had this error after updating my node version to 6.0.0. Upgrading version of gulp-if in package.json fixed issue for me:\n\"gulp-if\": \"^2.0.0\",\n. ",
    "RetroBum": "Can confirm romanenko's fix.\n. Can confirm romanenko's fix.\n. ",
    "AlexandreKilian": "yes, that fixes it\n. yes, that fixes it\n. ",
    "joshuamanns": "Confirming that updating gulp-if to ^2.0.0 worked. Thanks @romanenko \n. Confirming that updating gulp-if to ^2.0.0 worked. Thanks @romanenko \n. ",
    "riteshetymon": "Also worked for me after updating gulp-if@2.0.1 Thanks @romanenko\n. Also worked for me after updating gulp-if@2.0.1 Thanks @romanenko\n. ",
    "hamidhadi": "@romanenko  I have nodejs with 5.1.0 version. after I changed \"gulp-if\" in package.json file and run npm install, I still have problem.\n. @MohamadAbbas Sorry, but how can I use gulp-util in yeoman project. I have this in my node_modules folder.\n. @MohamadAbbas Thanks. I just installed that with npm install command. Is this log errors on terminal with gulp command or I should define another gulp task?\nWhen I run gulp command, I don't get any additional log error :(.\nI also update my node version. \n. @MohamadAbbas Thanks. I had problem in my html files.\n. I just add .pipe(gulp.dest('dist/styles')) for styles task and add .pipe(gulp.dest('dist/scripts')) for scripts task and solve my problem.\nWhy you don't have these lines of code on project??!!!!! \n. @silvenon Yes, it works in development.\nAfter building files, vendor.js does not created. \nHere is scripts task\n``` js\ngulp.task('scripts', () => {\n  // return gulp.src('app/scripts/*/.js')\n  const b = browserify({\n    entries: 'app/scripts/main.js',\n    transform: babelify,\n    debug: true\n  });\nreturn b.bundle()\n    .pipe(source('bundle.js'))\n    .pipe($.plumber())\n    // .pipe($.sourcemaps.init())\n    // .pipe($.babel())\n    .pipe(buffer())\n    .pipe($.sourcemaps.init({\n      loadMaps: true\n    }))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(gulp.dest('dist/scripts'))\n    .pipe(reload({\n      stream: true\n    }));\n});\n``\n. Oh! I found a bigger problem. All myvendorfiles does not generate on building task. \n. I had some problem in my gulpfile. \nI close this issue, because I solved my problem. \n. @romanenko  I have nodejs with5.1.0version. after I changed\"gulp-if\"inpackage.jsonfile and runnpm install, I still have problem.\n. @MohamadAbbas Sorry, but how can I usegulp-utilin yeoman project. I have this in mynode_modulesfolder.\n. @MohamadAbbas Thanks. I just installed that withnpm installcommand. Is this log errors on terminal withgulpcommand or I should define anothergulptask?\nWhen I rungulpcommand, I don't get any additional log error :(.\nI also update my node version. \n. @MohamadAbbas Thanks. I had problem in my html files.\n. I just add.pipe(gulp.dest('dist/styles'))forstylestask and add.pipe(gulp.dest('dist/scripts'))forscriptstask and solve my problem.\nWhy you don't have these lines of code on project??!!!!! \n. @silvenon Yes, it works in development.\nAfter building files,vendor.jsdoes not created. \nHere isscripts` task\n``` js\ngulp.task('scripts', () => {\n  // return gulp.src('app/scripts/*/.js')\n  const b = browserify({\n    entries: 'app/scripts/main.js',\n    transform: babelify,\n    debug: true\n  });\nreturn b.bundle()\n    .pipe(source('bundle.js'))\n    .pipe($.plumber())\n    // .pipe($.sourcemaps.init())\n    // .pipe($.babel())\n    .pipe(buffer())\n    .pipe($.sourcemaps.init({\n      loadMaps: true\n    }))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(gulp.dest('dist/scripts'))\n    .pipe(reload({\n      stream: true\n    }));\n});\n``\n. Oh! I found a bigger problem. All myvendor` files does not generate on building task. \n. I had some problem in my gulpfile. \nI close this issue, because I solved my problem. \n. ",
    "MohamadAbbas": "@Hamiid Please install gulp-util and check on error logs for more detail.\n. you need to install it using npm install gulp-util \n. ``` js\nvar gutil = require('gulp-util');\ngulp.task('coffee', function() {\n   gulp.src(testfiles)\n      .pipe(coffee())\n      .on('error', gutil.log);\n}\n```\ncheck above usage of gulp-util.\n. @Hamiid Please install gulp-util and check on error logs for more detail.\n. you need to install it using npm install gulp-util \n. ``` js\nvar gutil = require('gulp-util');\ngulp.task('coffee', function() {\n   gulp.src(testfiles)\n      .pipe(coffee())\n      .on('error', gutil.log);\n}\n```\ncheck above usage of gulp-util.\n. ",
    "lesliebuying": "@romanenko Thanks! . @romanenko Thanks! . ",
    "cuongduong257": "Thanks very much! @romanenko. Thanks very much! @romanenko. ",
    "seb-jean": "Yes, i think that it's a good thing :).\n. Yes, i think that it's a good thing :).\n. ",
    "denysbutenko": "I had the same issue when tried to include external (from cdn) stylesheets and scripts in gulp-useref sections.\nAn example:\n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<!-- endbower -->\n<link href=\"https://api.mapbox.com/mapbox-gl-js/v0.35.1/mapbox-gl.css\" rel=\"stylesheet\" />\n<!-- endbuild -->. I had the same issue when tried to include external (from cdn) stylesheets and scripts in gulp-useref sections.\nAn example:\n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<!-- endbower -->\n<link href=\"https://api.mapbox.com/mapbox-gl-js/v0.35.1/mapbox-gl.css\" rel=\"stylesheet\" />\n<!-- endbuild -->. ",
    "datnordstrom": "gulp wiredep doesn't get called during \"gulp\" or \"gulp serve\"\n. gulp wiredep doesn't get called during \"gulp\" or \"gulp serve\"\n. ",
    "thepossumstudio": "Hi @silvenon .\nthat's a mystery too. gulp didn't report that it cannot find but it reports SyntaxError.\nAfter the fresh install from a generator  I use a command\n\"gulp\" for build it then it throws this\n\nUncaught SyntaxError: Unexpected token () =>\n\n\nas we know that syntax came with es6 so I have to change gulpfile.js to gulpfile.babel.js and its work fine.\nAnyway, I don't think  this will happen with everyone because I found the issues only some machines at my work but it good to leave some information for newbie guys.\n. @neilhem Thanks for the advice.\nI think that is the root cause of the problem since I found somehow my \nnode version at my workplace is lower than 4.X.X\nafter update to the latest version. it works well.\n. Hi @silvenon .\nthat's a mystery too. gulp didn't report that it cannot find but it reports SyntaxError.\nAfter the fresh install from a generator  I use a command\n\"gulp\" for build it then it throws this\n\nUncaught SyntaxError: Unexpected token () =>\n\n\nas we know that syntax came with es6 so I have to change gulpfile.js to gulpfile.babel.js and its work fine.\nAnyway, I don't think  this will happen with everyone because I found the issues only some machines at my work but it good to leave some information for newbie guys.\n. @neilhem Thanks for the advice.\nI think that is the root cause of the problem since I found somehow my \nnode version at my workplace is lower than 4.X.X\nafter update to the latest version. it works well.\n. ",
    "calidion": "@kevva  yes.\nTo versionize the generated files may not be a good idea, but it is very useful for sites in production, It enables the abilitiy to revoke what has distributed when errors found.\n. Here's one of my cases which is open source.\nI use \nhttps://github.com/3gcnbeta/www (use yo webapp)\nas the site's source code,\nuse \nhttps://github.com/3gcnbeta/3gcnbeta.github.io\nas the site's  production code.\n. thanks.\n. @kevva  yes.\nTo versionize the generated files may not be a good idea, but it is very useful for sites in production, It enables the abilitiy to revoke what has distributed when errors found.\n. Here's one of my cases which is open source.\nI use \nhttps://github.com/3gcnbeta/www (use yo webapp)\nas the site's source code,\nuse \nhttps://github.com/3gcnbeta/3gcnbeta.github.io\nas the site's  production code.\n. thanks.\n. ",
    "chanakairugal": "Thanks @neilhem, but after i did my node update its gives me this error :(\n```\n[08:25:37] Error: Missing binding G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\node_modules\\node-sass\\vendor\\win32-x64-46\\binding.node\nNode Sass could not find a binding for your current environment: Windows 64-bit with Node.js 4.x\nFound bindings for the following environments:\n  - Windows 32-bit with Node 0.10.x\nThis usually happens because your environment has changed since running npm install.\nRun npm rebuild node-sass to build the binding for your current environment.\n    at Object. (G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\node_modules\\node-sass\\lib\\index.js:14:11)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Module.require (module.js:353:17)\n    at require (internal/module.js:12:17)\n    at Object. (G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\index.js:187:21)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n```\n. Hey,  I did resolve this by running after npm rebuild node-sass :D Thanks a lot :dancer:  :+1: \n. Thanks @neilhem, but after i did my node update its gives me this error :(\n```\n[08:25:37] Error: Missing binding G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\node_modules\\node-sass\\vendor\\win32-x64-46\\binding.node\nNode Sass could not find a binding for your current environment: Windows 64-bit with Node.js 4.x\nFound bindings for the following environments:\n  - Windows 32-bit with Node 0.10.x\nThis usually happens because your environment has changed since running npm install.\nRun npm rebuild node-sass to build the binding for your current environment.\n    at Object. (G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\node_modules\\node-sass\\lib\\index.js:14:11)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Module.require (module.js:353:17)\n    at require (internal/module.js:12:17)\n    at Object. (G:\\Workspaces\\my-webapp\\node_modules\\gulp-sass\\index.js:187:21)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n```\n. Hey,  I did resolve this by running after npm rebuild node-sass :D Thanks a lot :dancer:  :+1: \n. ",
    "Physium": "Thank you! that option has been helpful!\n. Thank you! that option has been helpful!\n. ",
    "Karklik": "I have installed yo 1.8.4 but still same error occurs. Also I use nvm to downgraed node to 5.7.0 which i use on pc at home  but still same error occurs. Also before posting this error I have trying run it on node 4.4.5 but still same error. \n\n. I have installed yo 1.8.4 but still same error occurs. Also I use nvm to downgraed node to 5.7.0 which i use on pc at home  but still same error occurs. Also before posting this error I have trying run it on node 4.4.5 but still same error. \n\n. ",
    "SpacemanPete": "I have the same exact error message:\n```\n$ yo\nmodule.js:327\n    throw err;\n    ^\nError: Cannot find module 'C:\\Program Files\\Git\\node_modules\\yo\\lib\\cli.js'\n    at Function.Module._resolveFilename (module.js:325:15)\n    at Function.Module._load (module.js:276:25)\n    at Function.Module.runMain (module.js:441:10)\n    at startup (node.js:139:18)\n    at node.js:968:3\n```\nI've uninstalled and reinstalled Node (4.4.7) and npm (3.10.5) from scratch and still get the \nI've triple checked my PATH variable and it looks fine.\nJust checked on a hunch and I'm able to run yo fine in windows cmd.exe prompt, but Git Bash is  reporting that error. Makes me think that Git Bash is not able to use the PATH properly. \nI started getting this error right after upgrading node and npm a few minor poitn versions. I tried an uninstall and reinstall to no avail.\nStill working on a fix. Thoughts anyone?\n. I have the same exact error message:\n```\n$ yo\nmodule.js:327\n    throw err;\n    ^\nError: Cannot find module 'C:\\Program Files\\Git\\node_modules\\yo\\lib\\cli.js'\n    at Function.Module._resolveFilename (module.js:325:15)\n    at Function.Module._load (module.js:276:25)\n    at Function.Module.runMain (module.js:441:10)\n    at startup (node.js:139:18)\n    at node.js:968:3\n```\nI've uninstalled and reinstalled Node (4.4.7) and npm (3.10.5) from scratch and still get the \nI've triple checked my PATH variable and it looks fine.\nJust checked on a hunch and I'm able to run yo fine in windows cmd.exe prompt, but Git Bash is  reporting that error. Makes me think that Git Bash is not able to use the PATH properly. \nI started getting this error right after upgrading node and npm a few minor poitn versions. I tried an uninstall and reinstall to no avail.\nStill working on a fix. Thoughts anyone?\n. ",
    "bruceCzK": "I think I managed to solve this problem by using symlink,\nit is a little tricky and does not entirely solve it, but it works. \nRun command below in your cmd at administrator mode\nC:\\Program Files\\Git>mklink /D node_modules %USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\n%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\nReplace this is with your global node_modules path.\n. I think I managed to solve this problem by using symlink,\nit is a little tricky and does not entirely solve it, but it works. \nRun command below in your cmd at administrator mode\nC:\\Program Files\\Git>mklink /D node_modules %USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\n%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\nReplace this is with your global node_modules path.\n. ",
    "ChadCrank": "I'm having the same issue, I'm using powershell and command line for the user who wants this. \n. I'm having the same issue, I'm using powershell and command line for the user who wants this. \n. ",
    "jctt1983": "I was experiencing the same problem.\nWhen I updated node using Windows Installer, the installer created a second repository of Node Modules on ProgramFiles, when the original was at %USERPROFILE%\\AppData\\Roaming\\npm\\\nBut the Window PATH was still having the OLD one %USERPROFILE%\\AppData\\Roaming\\npm\\\nSo I duly replaced the OLD path with the new one on ProgramFiles, and the problem was fixed\n. I was experiencing the same problem.\nWhen I updated node using Windows Installer, the installer created a second repository of Node Modules on ProgramFiles, when the original was at %USERPROFILE%\\AppData\\Roaming\\npm\\\nBut the Window PATH was still having the OLD one %USERPROFILE%\\AppData\\Roaming\\npm\\\nSo I duly replaced the OLD path with the new one on ProgramFiles, and the problem was fixed\n. ",
    "jfaquinojr": "@jctt1983: Thank you, this fixed my issue.\n. @jctt1983: Thank you, this fixed my issue.\n. ",
    "rbosneag": "I have the same error trying a derived generator. Already upgraded node, npm and yo, installed globally the ansi-regex module but all to no avail. \nHere is my error:\n```\nreadline.js:982\n            throw err;\n            ^\nError: Cannot find module 'ansi-regex'\n    at Function.Module._resolveFilename (module.js:469:15)\n    at Function.Module._load (module.js:417:25)\n    at Module.require (module.js:497:17)\n    at require (internal/module.js:20:19)\n    at Object. (/usr/local/lib/node_modules/generator-cg-angular15/node_modules/yeoman-generator/node_modules/chalk/node_modules/strip-ansi/index.js:2:38)\n    at Module._compile (module.js:570:32)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n``. I have the same error trying a derived generator. Already upgradednode,npmandyo, installed globally theansi-regex` module but all to no avail. \nHere is my error:\n```\nreadline.js:982\n            throw err;\n            ^\nError: Cannot find module 'ansi-regex'\n    at Function.Module._resolveFilename (module.js:469:15)\n    at Function.Module._load (module.js:417:25)\n    at Module.require (module.js:497:17)\n    at require (internal/module.js:20:19)\n    at Object. (/usr/local/lib/node_modules/generator-cg-angular15/node_modules/yeoman-generator/node_modules/chalk/node_modules/strip-ansi/index.js:2:38)\n    at Module._compile (module.js:570:32)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n```. ",
    "GavinJaynes": "Thanks for the response. I have posted in the correct place now. \nhttp://stackoverflow.com/questions/37648515/yeoman-gulp-webapp-change-styles-directory-name\nThanks\n. Thanks for the response. I have posted in the correct place now. \nhttp://stackoverflow.com/questions/37648515/yeoman-gulp-webapp-change-styles-directory-name\nThanks\n. ",
    "papaponmx": "Thanks so much. I apprecieate it, @neilhem \n. Thanks so much. I apprecieate it, @neilhem \n. ",
    "mklabs": "What's a progressive web app ?\n. I still need to read through @codepo8 article on their regressive approach\n. I quickly got through the App shell part to init a project recently. used https://github.com/GoogleChrome/application-shell I really liked the JS app shell (App controller, etc.)\n. What's a progressive web app ?\n. I still need to read through @codepo8 article on their regressive approach\n. I quickly got through the App shell part to init a project recently. used https://github.com/GoogleChrome/application-shell I really liked the JS app shell (App controller, etc.)\n. ",
    "djmtype": "Seems removing Bootstrap's CSS from the pipeline, running gulp serve, then adding Bootstrap's CSS back in and running gulp serve again helped speed things up. Odd.\n[19:00:37] Starting 'styles'...\n[19:00:37] Starting 'scripts'...\n[19:00:38] Starting 'fonts'...\n[19:00:40] Finished 'styles' after 2.66 s\n[19:00:40] Finished 'scripts' after 2.42 s\n[19:00:40] Finished 'fonts' after 2.22 s\n[19:00:40] Starting 'serve'...\n[19:00:40] Finished 'serve' after 42 ms\n. I've always updated node.js as a Mac OS package installer, otherwise I've had serious issues in the past. \nI revisited the installer and noticed it doesn't upgrade npm. So, this time I've updated npm manually. Now running npm v3.9.5.\nI am running the latest node stable version (v4.4.5) \nBetter load times after initial build, but still takes several seconds to compile. Maybe because of Bootstrap's kitchen sink?\nFirst serve with Bootstrap\n[10:25:54] Starting 'styles'...\n[10:25:55] Starting 'scripts'...\n[10:25:56] Starting 'fonts'...\n[10:25:57] Finished 'styles' after 3.14 s\n[10:25:57] Finished 'scripts' after 2.4 s\n[10:25:57] Finished 'fonts' after 869 ms\n[10:25:57] Starting 'serve'...\n[10:25:57] Finished 'serve' after 171 ms\nSecond serve with Bootstrap much better\n[10:28:11] Starting 'styles'...\n[10:28:11] Starting 'scripts'...\n[10:28:12] Starting 'fonts'...\n[10:28:12] Finished 'styles' after 809 ms\n[10:28:12] Finished 'scripts' after 672 ms\n[10:28:12] Finished 'fonts' after 510 ms\n[10:28:12] Starting 'serve'...\n[10:28:12] Finished 'serve' after 44 ms\nBTW, thanks for clarifying the DSL. \n. I chose all 3 options \u2013 Bootstrap, Sass and Modernizr \u2013 for a mockup I was throwing together. \nMy original problem seemed to lay in the outdated npm version on my machine, and not this generator. Updating node.js via pkg installer does not update npm as well. I just assumed it would. Screenshot \nThanks for your help!\n. I've also had this happen to me using gulp clean.  It randomly wipes all contents in my default.njk file. Then, obviously causes an rrror when running gulp serve or build.. Seems removing Bootstrap's CSS from the pipeline, running gulp serve, then adding Bootstrap's CSS back in and running gulp serve again helped speed things up. Odd.\n[19:00:37] Starting 'styles'...\n[19:00:37] Starting 'scripts'...\n[19:00:38] Starting 'fonts'...\n[19:00:40] Finished 'styles' after 2.66 s\n[19:00:40] Finished 'scripts' after 2.42 s\n[19:00:40] Finished 'fonts' after 2.22 s\n[19:00:40] Starting 'serve'...\n[19:00:40] Finished 'serve' after 42 ms\n. I've always updated node.js as a Mac OS package installer, otherwise I've had serious issues in the past. \nI revisited the installer and noticed it doesn't upgrade npm. So, this time I've updated npm manually. Now running npm v3.9.5.\nI am running the latest node stable version (v4.4.5) \nBetter load times after initial build, but still takes several seconds to compile. Maybe because of Bootstrap's kitchen sink?\nFirst serve with Bootstrap\n[10:25:54] Starting 'styles'...\n[10:25:55] Starting 'scripts'...\n[10:25:56] Starting 'fonts'...\n[10:25:57] Finished 'styles' after 3.14 s\n[10:25:57] Finished 'scripts' after 2.4 s\n[10:25:57] Finished 'fonts' after 869 ms\n[10:25:57] Starting 'serve'...\n[10:25:57] Finished 'serve' after 171 ms\nSecond serve with Bootstrap much better\n[10:28:11] Starting 'styles'...\n[10:28:11] Starting 'scripts'...\n[10:28:12] Starting 'fonts'...\n[10:28:12] Finished 'styles' after 809 ms\n[10:28:12] Finished 'scripts' after 672 ms\n[10:28:12] Finished 'fonts' after 510 ms\n[10:28:12] Starting 'serve'...\n[10:28:12] Finished 'serve' after 44 ms\nBTW, thanks for clarifying the DSL. \n. I chose all 3 options \u2013 Bootstrap, Sass and Modernizr \u2013 for a mockup I was throwing together. \nMy original problem seemed to lay in the outdated npm version on my machine, and not this generator. Updating node.js via pkg installer does not update npm as well. I just assumed it would. Screenshot \nThanks for your help!\n. I've also had this happen to me using gulp clean.  It randomly wipes all contents in my default.njk file. Then, obviously causes an rrror when running gulp serve or build.. ",
    "bhuber2010": "I guess my install was holding onto the old name\n. I guess my install was holding onto the old name\n. ",
    "808loud": "Weird... it looked perfectly aligned in the Preview pane. I will fix it now.\n. ~~Fixed. Looks like when marking up a diff, the editor requires one less space in a line starting with a \"+\" as compared to a line starting with a \"-\".~~\n~~I had never noticed that before. I'm guessing that I had (mistakenly) manually altered it to make it line up in the editor.~~\n\ud83d\ude02 \ud83c\udf7b \n. Derp. Will fix now.\n. Weird... it looked perfectly aligned in the Preview pane. I will fix it now.\n. ~~Fixed. Looks like when marking up a diff, the editor requires one less space in a line starting with a \"+\" as compared to a line starting with a \"-\".~~\n~~I had never noticed that before. I'm guessing that I had (mistakenly) manually altered it to make it line up in the editor.~~\n\ud83d\ude02 \ud83c\udf7b \n. Derp. Will fix now.\n. ",
    "Ryan-ED": "\nStill says the same thing for me. And I literally just installed it 10 mins ago. My first yo app and I'm new to webdev so this threw me off a little. . \nStill says the same thing for me. And I literally just installed it 10 mins ago. My first yo app and I'm new to webdev so this threw me off a little. . ",
    "mcastre": "awesome, thanks!\n. awesome, thanks!\n. ",
    "zhuangya": "hmm.. travis not running for this PR?\n. i just figured it out: i once forked the currently deprecated old generator-webapp repo, something would go wrong either with travis or github, since my current fored repo own the same name.\ni just add the webhook myself manually. not everything works like charm :)\n. hmm.. travis not running for this PR?\n. i just figured it out: i once forked the currently deprecated old generator-webapp repo, something would go wrong either with travis or github, since my current fored repo own the same name.\ni just add the webhook myself manually. not everything works like charm :)\n. ",
    "koltejas": "This happens when following these steps: \n1. yo webapp [selected all 3 [sass, bs, modernizr]]\n2. BDD or TDD\nIn the generated gulpfile only html task has .pipe(gulp.dest('dist')); \nstyles, scripts, font only have .pipe(gulp.dest('.tmp/styles')) etc\nusing generator-webapp 2.3.2\n. This happens when following these steps: \n1. yo webapp [selected all 3 [sass, bs, modernizr]]\n2. BDD or TDD\nIn the generated gulpfile only html task has .pipe(gulp.dest('dist')); \nstyles, scripts, font only have .pipe(gulp.dest('.tmp/styles')) etc\nusing generator-webapp 2.3.2\n. ",
    "Michael-Reich": "I also have this problem, the files are in .tmp but not in my dist folder.\nTried this:\n.pipe($.useref({searchPath: ['.tmp', 'app', '.', '.tmp/scripts', '.tmp/styles']}))\nbut didn't work.. I also have this problem, the files are in .tmp but not in my dist folder.\nTried this:\n.pipe($.useref({searchPath: ['.tmp', 'app', '.', '.tmp/scripts', '.tmp/styles']}))\nbut didn't work.. ",
    "SeedyROM": "Found this problem earlier this evening.\nHere's what I did in desperation, it seems to work:\nChange:\n...\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/*.html')\n...\nTo:\n...\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/**/*[.js, .html, .css]')\n.... ### Found this problem earlier this evening.\nHere's what I did in desperation, it seems to work:\nChange:\n...\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/*.html')\n...\nTo:\n...\ngulp.task('html', ['styles', 'scripts'], () => {\n  return gulp.src('app/**/*[.js, .html, .css]')\n.... ",
    "MorizelHodges": "Thanks @neilhem,  I see that my gulp-node-inspector is missing which I am working to correct at the moment. Hopefully that will correct the build issue.\n. Thanks @neilhem,  I see that my gulp-node-inspector is missing which I am working to correct at the moment. Hopefully that will correct the build issue.\n. ",
    "danhawkes": "Yeah, that's better.\n. Yeah, that's better.\n. ",
    "eBaeza": "Where exactly I need to add the path \"templates/.js\" to export the files to \"dist\" ?\n. I did it! I just add <!--build:js templates/index.js-->(rendered templates)<!-- endbuild --> to uglify and export to \"dist\"\n. Where exactly I need to add the path \"templates/.js\" to export the files to \"dist\" ?\n. I did it! I just add <!--build:js templates/index.js-->(rendered templates)<!-- endbuild --> to uglify and export to \"dist\"\n. ",
    "amobrem": "I cant seem to get the recipe to work. Any eta on this? Thanks in advance\n. Yes, I just grabbed the template dir and followed the directions, it worked after I update the handlebars version in gulp-handlebars to 4.0.5.\n. I cant seem to get the partials to load. Is there a step missing?\n. I cant seem to get the recipe to work. Any eta on this? Thanks in advance\n. Yes, I just grabbed the template dir and followed the directions, it worked after I update the handlebars version in gulp-handlebars to 4.0.5.\n. I cant seem to get the partials to load. Is there a step missing?\n. ",
    "AurelioDeRosa": "Completing the guide with info to use Handlebars to create static HTML pages would be really helpful.. Completing the guide with info to use Handlebars to create static HTML pages would be really helpful.. ",
    "bdadev": "Hi @neilhem yes i tried.\n. Yes there is.\nBut anyway, I changed the images and it worked, I do not know what to say ...\nSorry for the delay, I was on vacation. Thank you for your attention and I'm sorry for that.. Hi @neilhem yes i tried.\n. Yes there is.\nBut anyway, I changed the images and it worked, I do not know what to say ...\nSorry for the delay, I was on vacation. Thank you for your attention and I'm sorry for that.. ",
    "deenoize": "Hey @silvenon, I have deleted it and edited readme files ;) check please last pull request\n. Hey @silvenon, I have deleted it and edited readme files ;) check please last pull request\n. ",
    "martisj": "Which version of node are you running this on?\nIf it's node v6 try updating gulp-if. I had pretty much the same issue. Turns out the gulp-if is not filtering on the\njavascript\n.pipe($.if('*.js', $.uglify()))\ncall so it's passing all files to uglify. Even though uglify is a beast it doesn't parse html.... yet..\nTry adding\njavascript\n.pipe($.plumber())\non the html gulp build task. Right before this line https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L75\nThat will catch the error and show you something a little more interesting. I found the solution over here #513 \n@silvenon I think that this might be related to this one as well #572 \nHope this helps mr/mrs @agiantwhale \n. I've got a similar error with v2.0.0 of the generator. uglify seems to be throwing an error\n[13:03:48] Plumber found unhandled error:\n Error in plugin 'gulp-uglify'\nMessage:\n    {...}/app/index.html: SyntaxError: Unexpected token: operator (<)\nDetails:\n    fileName: {...}/app/index.html\n    lineNumber: 1\n. @neilhem snap! That worked. Hmmm that's interesting. What made you think that was the issue?\n. Which version of node are you running this on?\nIf it's node v6 try updating gulp-if. I had pretty much the same issue. Turns out the gulp-if is not filtering on the\njavascript\n.pipe($.if('*.js', $.uglify()))\ncall so it's passing all files to uglify. Even though uglify is a beast it doesn't parse html.... yet..\nTry adding\njavascript\n.pipe($.plumber())\non the html gulp build task. Right before this line https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L75\nThat will catch the error and show you something a little more interesting. I found the solution over here #513 \n@silvenon I think that this might be related to this one as well #572 \nHope this helps mr/mrs @agiantwhale \n. I've got a similar error with v2.0.0 of the generator. uglify seems to be throwing an error\n[13:03:48] Plumber found unhandled error:\n Error in plugin 'gulp-uglify'\nMessage:\n    {...}/app/index.html: SyntaxError: Unexpected token: operator (<)\nDetails:\n    fileName: {...}/app/index.html\n    lineNumber: 1\n. @neilhem snap! That worked. Hmmm that's interesting. What made you think that was the issue?\n. ",
    "lmdrx": "@martisj I was having the same issue here, using node v6, and indeed, gulp-if wasn't \"filtering\" things like it was expected...  updating gulp-if to v2.0.0 fixes this. :) Thanks!.\n. @martisj I was having the same issue here, using node v6, and indeed, gulp-if wasn't \"filtering\" things like it was expected...  updating gulp-if to v2.0.0 fixes this. :) Thanks!.\n. ",
    "vmahadev": "Thanks kevva here is my package.json\njson\n{\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=4\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.4.0\",\n    \"babel-preset-es2015\": \"^6.3.13\",\n    \"babel-register\": \"^6.5.2\",\n    \"browser-sync\": \"^2.2.1\",\n    \"del\": \"^1.1.1\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-autoprefixer\": \"^3.0.1\",\n    \"gulp-babel\": \"^6.1.1\",\n    \"gulp-cache\": \"^0.4.2\",\n    \"gulp-cssnano\": \"^2.0.0\",\n    \"gulp-eslint\": \"^2.0.0\",\n    \"gulp-htmlmin\": \"^1.3.0\",\n    \"gulp-if\": \"^2.0.0\",\n    \"gulp-imagemin\": \"^2.2.1\",\n    \"gulp-load-plugins\": \"^0.10.0\",\n    \"gulp-plumber\": \"^1.0.1\",\n    \"gulp-sass\": \"^2.0.0\",\n    \"gulp-size\": \"^1.2.1\",\n    \"gulp-sourcemaps\": \"^1.5.0\",\n    \"gulp-uglify\": \"^1.1.0\",\n    \"gulp-useref\": \"^3.0.0\",\n    \"main-bower-files\": \"^2.5.0\",\n    \"wiredep\": \"^2.2.2\"\n  },\n  \"eslintConfig\": {\n    \"env\": {\n      \"es6\": true,\n      \"node\": true,\n      \"browser\": true\n    },\n    \"rules\": {\n      \"quotes\": [\n        2,\n        \"single\"\n      ]\n    }\n  }\n}\n. Thanks kevva here is my package.json\njson\n{\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=4\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.4.0\",\n    \"babel-preset-es2015\": \"^6.3.13\",\n    \"babel-register\": \"^6.5.2\",\n    \"browser-sync\": \"^2.2.1\",\n    \"del\": \"^1.1.1\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-autoprefixer\": \"^3.0.1\",\n    \"gulp-babel\": \"^6.1.1\",\n    \"gulp-cache\": \"^0.4.2\",\n    \"gulp-cssnano\": \"^2.0.0\",\n    \"gulp-eslint\": \"^2.0.0\",\n    \"gulp-htmlmin\": \"^1.3.0\",\n    \"gulp-if\": \"^2.0.0\",\n    \"gulp-imagemin\": \"^2.2.1\",\n    \"gulp-load-plugins\": \"^0.10.0\",\n    \"gulp-plumber\": \"^1.0.1\",\n    \"gulp-sass\": \"^2.0.0\",\n    \"gulp-size\": \"^1.2.1\",\n    \"gulp-sourcemaps\": \"^1.5.0\",\n    \"gulp-uglify\": \"^1.1.0\",\n    \"gulp-useref\": \"^3.0.0\",\n    \"main-bower-files\": \"^2.5.0\",\n    \"wiredep\": \"^2.2.2\"\n  },\n  \"eslintConfig\": {\n    \"env\": {\n      \"es6\": true,\n      \"node\": true,\n      \"browser\": true\n    },\n    \"rules\": {\n      \"quotes\": [\n        2,\n        \"single\"\n      ]\n    }\n  }\n}\n. ",
    "monomichael": "@silvenon I've encountered the same issue on a fresh install.\nAfter commenting out line 57 and 58 in gulpfile.babel.js, it ran as normal. It looks like both gulp-uglify and gulp-cssnano were trying to parse HTML. Could it be something wrong with gulp-if?\n. @silvenon Yes, it does. After updating gulp-if to 2.0.2, the issue no longer exists.\n. @silvenon I've encountered the same issue on a fresh install.\nAfter commenting out line 57 and 58 in gulpfile.babel.js, it ran as normal. It looks like both gulp-uglify and gulp-cssnano were trying to parse HTML. Could it be something wrong with gulp-if?\n. @silvenon Yes, it does. After updating gulp-if to 2.0.2, the issue no longer exists.\n. ",
    "sherifsaleh": "I still have the same problem eventhough i ihave gulp-if updated to 2.0.2\n[21:39:12] CLI version 1.2.2\n[21:39:12] Local version 3.9.1\n\"gulp-if\": \"^2.0.2\"\nnode v7.1.0. I still have the same problem eventhough i ihave gulp-if updated to 2.0.2\n[21:39:12] CLI version 1.2.2\n[21:39:12] Local version 3.9.1\n\"gulp-if\": \"^2.0.2\"\nnode v7.1.0. ",
    "hamedtaha": "i'm also having the same problem \n\"gulp-if\": \"^2.0.2\"\nnode v6.9.3. Yes I have the latest 'web-app' generator\nI'm trying to build my code then I got that error . In my HTML code I've Used a code formatter plugin (in sublime text) \n and it changed some spaces , this line was causing the error \n\n<!-- build:js scripts/vendor/modernizr.js -->\n                <script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\">\n                </script><!--   [new line] \n             [new line]    endbuild\n           [new line]    -->\n\nwhen i changed it to \n<!-- build:js scripts/vendor/modernizr.js -->\n        <script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\"></script>\n        <!-- endbuild   -->\nthen the 'gulp' command went fine and it builds the 'dist' code , but without any js or css linking :( that also was strange . when I paste my HTML here the website removes all whitespaces \nbut here is a screenshot of the code \nerrors was because of the white spaces \n\nand here the gulp task is building with no errors\n\nafter that, it is working \nbut all the background-images in the SCSS files have a wrong path \n. sublime text HTML code formatting plugin caused  that \nand the background images issue I think that is a problem from my side . :D \nthe error was a javascript parsing error \nevents.js:141\n  throw er; // Unhandled 'error' event\n  ^\n. yes after fixing the white spaces everything is working now . i'm also having the same problem \n\"gulp-if\": \"^2.0.2\"\nnode v6.9.3. Yes I have the latest 'web-app' generator\nI'm trying to build my code then I got that error . In my HTML code I've Used a code formatter plugin (in sublime text) \n and it changed some spaces , this line was causing the error \n\n<!-- build:js scripts/vendor/modernizr.js -->\n                <script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\">\n                </script><!--   [new line] \n             [new line]    endbuild\n           [new line]    -->\n\nwhen i changed it to \n<!-- build:js scripts/vendor/modernizr.js -->\n        <script src=\"/bower_components/modernizr/modernizr.js\" type=\"text/javascript\"></script>\n        <!-- endbuild   -->\nthen the 'gulp' command went fine and it builds the 'dist' code , but without any js or css linking :( that also was strange . when I paste my HTML here the website removes all whitespaces \nbut here is a screenshot of the code \nerrors was because of the white spaces \n\nand here the gulp task is building with no errors\n\nafter that, it is working \nbut all the background-images in the SCSS files have a wrong path \n. sublime text HTML code formatting plugin caused  that \nand the background images issue I think that is a problem from my side . :D \nthe error was a javascript parsing error \nevents.js:141\n  throw er; // Unhandled 'error' event\n  ^\n. yes after fixing the white spaces everything is working now . ",
    "PlkMarudny": "I have the same problem, gulp-webapp downloaded on 21st march, a clean project without Bootstrap, Windows,\n`[20:05:42] Starting 'html'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at  (C:\\Users\\toplonka\\Documents\\js\\test\\node_modules\\uglify-js\\tools\\node.js:28:1), :1534:18)`. I have just tried to build a clean project, no javascript on my own; scaffolder and tried to build.. I have the same problem, gulp-webapp downloaded on 21st march, a clean project without Bootstrap, Windows,\n`[20:05:42] Starting 'html'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at  (C:\\Users\\toplonka\\Documents\\js\\test\\node_modules\\uglify-js\\tools\\node.js:28:1), :1534:18)`. I have just tried to build a clean project, no javascript on my own; scaffolder and tried to build.. ",
    "sbehrends": "Thanks for the feedback. I will create a recipe then and submit a new PR.\n. Thanks for the feedback. I will create a recipe then and submit a new PR.\n. ",
    "SakoMe": "Found the bug... I had to show the hidden files on the desktop. I had a .yo-rc.json on the desktop. Once deleted it's back to normal...\n. Found the bug... I had to show the hidden files on the desktop. I had a .yo-rc.json on the desktop. Once deleted it's back to normal...\n. ",
    "ksiabani": "Or fight the space between. Usually font-size: 0 is enough.\n. Or fight the space between. Usually font-size: 0 is enough.\n. ",
    "WadeShuler": "The trick is to do:\nnpm install -g yo generator-webapp\nSince they wouldn't help you, I will.\nThis SHOULD be documented HERE in your README for the install instructions. This is a common problem on OSX. You have to specify it at the same time, or it isn't smart enough to find it.\nNewbies trying to install your \"generator-webapp\" on OSX will have a heck of a time installing it if they don't know this. Which is why YOU should document it!. No, after review, it should be how I have illustrated in the updated pull request.\nIf you look at other generators, they list the dependencies all together in one combined command. Example: https://github.com/yeoman/generator-angular\nThis seems to be an issue on OSX (which is a large percent of the community). While it seems redundant, this is how they do it. I believe the pulled packages are cached, so repeating say gulp cli or yo in the install command, doesn't add too much extra overhead.\nNo, you should not tell people to ignore it, especially when you can prevent it by an appropriate install command in your README's install instructions. Telling people to just ignore it, will likely lead to more issues being opened here about the same issue. People just don't read :). The trick is to do:\nnpm install -g yo generator-webapp\nSince they wouldn't help you, I will.\nThis SHOULD be documented HERE in your README for the install instructions. This is a common problem on OSX. You have to specify it at the same time, or it isn't smart enough to find it.\nNewbies trying to install your \"generator-webapp\" on OSX will have a heck of a time installing it if they don't know this. Which is why YOU should document it!. No, after review, it should be how I have illustrated in the updated pull request.\nIf you look at other generators, they list the dependencies all together in one combined command. Example: https://github.com/yeoman/generator-angular\nThis seems to be an issue on OSX (which is a large percent of the community). While it seems redundant, this is how they do it. I believe the pulled packages are cached, so repeating say gulp cli or yo in the install command, doesn't add too much extra overhead.\nNo, you should not tell people to ignore it, especially when you can prevent it by an appropriate install command in your README's install instructions. Telling people to just ignore it, will likely lead to more issues being opened here about the same issue. People just don't read :). ",
    "Karadjordje": "@m44rt3np44uw \nHi Maarten I have the same problem. Is there a way around this so I can continue to work until they update it.\n. @m44rt3np44uw \nHi Maarten I have the same problem. Is there a way around this so I can continue to work until they update it.\n. ",
    "maartenpaauw": "@Karadjordje yes there is.\nFirst step is to install gulp-filter via. \nnpm install gulp-filter --save-dev\nAdd the following code between this two lines: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L179-L180\n.pipe($.filter(function(a){ return a.stat && a.stat.size }))\n. @silvenon Thanks a lot!\n. @Karadjordje yes there is.\nFirst step is to install gulp-filter via. \nnpm install gulp-filter --save-dev\nAdd the following code between this two lines: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L179-L180\n.pipe($.filter(function(a){ return a.stat && a.stat.size }))\n. @silvenon Thanks a lot!\n. ",
    "s3c0nDD": "oh i think this issue should be closed now ?. @silvenon but what's this?. @gvsvarun so you do have issue and no idea how to solve it :) ?. can you pastebin files with example?. Hi, You see what i pasted in 1st my post. so Please paste something like it - i mean THAT little piece of code which removes the error. :). anyway issue is open :(\nbut i found the makers of generator say in README that a way preffered for adding JS files is not importing components to main file, but incorporating script tags with new files in index.html. mykeyhere was key which i got from google but dont want to unveil it here. so i wrote that this way and this definitely is not a problem.\nyea, with <div id=\"#map\"> was really stupid bug, probably from overworking :) thanks for pointing me that.\nok ill use SO istead of issues. \nthanks for help. i did just like you wrote:\n1. i created _variables.scss with $navbar-height: 75px;\n2. imported it in main.scss\nIn my main.scss i firstly import bootstrap then my variables/fonts/shared partials, then components partials. Is that a good way?. Hi thanks for pointing me this bug. Anyway after changes, my font is not loading. \n\n. oh i think this issue should be closed now ?. @silvenon but what's this?. @gvsvarun so you do have issue and no idea how to solve it :) ?. can you pastebin files with example?. Hi, You see what i pasted in 1st my post. so Please paste something like it - i mean THAT little piece of code which removes the error. :). anyway issue is open :(\nbut i found the makers of generator say in README that a way preffered for adding JS files is not importing components to main file, but incorporating script tags with new files in index.html. mykeyhere was key which i got from google but dont want to unveil it here. so i wrote that this way and this definitely is not a problem.\nyea, with <div id=\"#map\"> was really stupid bug, probably from overworking :) thanks for pointing me that.\nok ill use SO istead of issues. \nthanks for help. i did just like you wrote:\n1. i created _variables.scss with $navbar-height: 75px;\n2. imported it in main.scss\nIn my main.scss i firstly import bootstrap then my variables/fonts/shared partials, then components partials. Is that a good way?. Hi thanks for pointing me this bug. Anyway after changes, my font is not loading. \n\n. ",
    "stephenrust": "Awesome, thanks for the quick fix @neilhem.\n. Awesome, thanks for the quick fix @neilhem.\n. ",
    "acivan": "/Users/Ivan/website/gulpfile.js:90\n    browserSync({\n    ^\nTypeError: browserSync is not a function\n    at runSequence (/Users/Ivan/website/gulpfile.js:90:5)\n    at finish (/Users/Ivan/website/node_modules/run-sequence/index.js:60:5)\n    at runNextSet (/Users/Ivan/website/node_modules/run-sequence/index.js:88:5)\n    at Gulp.onTaskEnd (/Users/Ivan/website/node_modules/run-sequence/index.js:75:5)\n    at emitOne (events.js:101:20)\n    at Gulp.emit (events.js:188:7)\n    at Gulp.Orchestrator._emitTaskDone (/Users/Ivan/website/node_modules/orchestrator/index.js:264:8)\n    at /Users/Ivan/website/node_modules/orchestrator/index.js:275:23\n    at finish (/Users/Ivan/website/node_modules/orchestrator/lib/runTask.js:21:8)\n    at /Users/Ivan/website/node_modules/orchestrator/lib/runTask.js:52:4\n. /Users/Ivan/website/gulpfile.js:90\n    browserSync({\n    ^\nTypeError: browserSync is not a function\n    at runSequence (/Users/Ivan/website/gulpfile.js:90:5)\n    at finish (/Users/Ivan/website/node_modules/run-sequence/index.js:60:5)\n    at runNextSet (/Users/Ivan/website/node_modules/run-sequence/index.js:88:5)\n    at Gulp.onTaskEnd (/Users/Ivan/website/node_modules/run-sequence/index.js:75:5)\n    at emitOne (events.js:101:20)\n    at Gulp.emit (events.js:188:7)\n    at Gulp.Orchestrator._emitTaskDone (/Users/Ivan/website/node_modules/orchestrator/index.js:264:8)\n    at /Users/Ivan/website/node_modules/orchestrator/index.js:275:23\n    at finish (/Users/Ivan/website/node_modules/orchestrator/lib/runTask.js:21:8)\n    at /Users/Ivan/website/node_modules/orchestrator/lib/runTask.js:52:4\n. ",
    "stibay": "Add this to bower.json\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    },\n    \"font-awesome\": {\n      \"main\": [\n        \"./scss/font-awesome.scss\",\n        \"./fonts/*\"\n      ]\n    }\n  },. After trying to reproduce this I see that it's not happening on a fresh install.\nI see the problem is because I am using html5 mode and to get this working with browser sync I have added the connect-modrewrite package and this breaks it.\npackage.json\n\"connect-modrewrite\": \"^0.9.0\",\ngulpfile.js\nconst modRewrite = require('connect-modrewrite');\nthen under gulp task serve\n...\n        baseDir: ['.tmp', 'app'],\n        middleware: [\n          modRewrite([\n            '!\\\\.\\\\w+$ /index.html [L]'\n          ])\n        ],\n        routes: {\n        ...\nIs there an easy fix for this?. Nice, that worked perfectly!\nHtml5 mode removes the # in the url\nEnables it by setting $locationProvider.html5Mode(true); in the route config and adding <base href=\"/\" />to the index  tag. Add this to bower.json\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    },\n    \"font-awesome\": {\n      \"main\": [\n        \"./scss/font-awesome.scss\",\n        \"./fonts/*\"\n      ]\n    }\n  },. After trying to reproduce this I see that it's not happening on a fresh install.\nI see the problem is because I am using html5 mode and to get this working with browser sync I have added the connect-modrewrite package and this breaks it.\npackage.json\n\"connect-modrewrite\": \"^0.9.0\",\ngulpfile.js\nconst modRewrite = require('connect-modrewrite');\nthen under gulp task serve\n...\n        baseDir: ['.tmp', 'app'],\n        middleware: [\n          modRewrite([\n            '!\\\\.\\\\w+$ /index.html [L]'\n          ])\n        ],\n        routes: {\n        ...\nIs there an easy fix for this?. Nice, that worked perfectly!\nHtml5 mode removes the # in the url\nEnables it by setting $locationProvider.html5Mode(true); in the route config and adding <base href=\"/\" />to the index  tag. ",
    "heinhoang": "it outputs WARNING\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\\chokidar\\node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.0.15: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: is-gif@1.0.0 (node_modules\\is-gif):\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: Error: EPERM: operation not permitted, rename 'E:\\_toolkit-static-web\\bootstrap-scaffolding\\bootstrap3\\node_modules\\.staging\\is-gif-160bba7c\\package.json.3823358805' -> 'E:\\_toolkit-static-web\\bootstrap-scaffolding\\bootstrap3\\node_modules\\.staging\\is-gif-160bba7c\\package.json'\n'bower' is not recognized as an internal or external command,\noperable program or batch file.\n. 1. npm ls -g generator-webapp\nC:\\Users\\Hein Hoang\\AppData\\Local\\npm\n`-- generator-webapp@2.3.2\n1. 'bower --version'\n'bower' is not recognized as an internal or external command,\noperable program or batch file.\nthanks, but why it pulls out above WARNINGS?\n. it outputs WARNING\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\\chokidar\\node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.0.15: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: is-gif@1.0.0 (node_modules\\is-gif):\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: Error: EPERM: operation not permitted, rename 'E:\\_toolkit-static-web\\bootstrap-scaffolding\\bootstrap3\\node_modules\\.staging\\is-gif-160bba7c\\package.json.3823358805' -> 'E:\\_toolkit-static-web\\bootstrap-scaffolding\\bootstrap3\\node_modules\\.staging\\is-gif-160bba7c\\package.json'\n'bower' is not recognized as an internal or external command,\noperable program or batch file.\n. 1. npm ls -g generator-webapp\nC:\\Users\\Hein Hoang\\AppData\\Local\\npm\n`-- generator-webapp@2.3.2\n1. 'bower --version'\n'bower' is not recognized as an internal or external command,\noperable program or batch file.\nthanks, but why it pulls out above WARNINGS?\n. ",
    "mischah": "Hej @750430,\npeer dependencies aren\u2019t installed any longer with npm since version 3.\nBut npm 3 still throw warnings. You can simply ignore them.\nGeneral rule of thumb to keep your sanity when working with npm:\nIgnore warnings \ud83d\ude06 \nAs long es there are no errors things should work fine \ud83d\ude0a . > But users should have yo installed, no? \nYeah. They have to. That\u2019s the reason why npm3 warns about unmet peer dependencies. \nBut people doesn\u2019t seem to understand that kinda cryptic warning. \n. Hej @750430,\npeer dependencies aren\u2019t installed any longer with npm since version 3.\nBut npm 3 still throw warnings. You can simply ignore them.\nGeneral rule of thumb to keep your sanity when working with npm:\nIgnore warnings \ud83d\ude06 \nAs long es there are no errors things should work fine \ud83d\ude0a . > But users should have yo installed, no? \nYeah. They have to. That\u2019s the reason why npm3 warns about unmet peer dependencies. \nBut people doesn\u2019t seem to understand that kinda cryptic warning. \n. ",
    "nouredine": "Thanks for your answer,\nremoving the old version manually from my disc resolved me the Problem\n. Thanks for your answer,\nremoving the old version manually from my disc resolved me the Problem\n. ",
    "mtompkins": "If I might share my Modernizr approach after a few days of struggling with it.\nUpdate to a 3.x version with bower\nCreate a configuration using the online download page: https://modernizr.com/download\nBuild and download a command line config modernizr-config.json\nAdd a gulp task, modifying location of modernizr-config.json as necessary:\n// Modernizr\nvar spawn = require('child_process').spawn;\ngulp.task('modernizr', function (cb) {\n  var cmd = spawn('bower_components/modernizr/bin/modernizr', [\n        '-c', 'modernizr-config.json', \n        '-d', 'app/scripts/modernizr-custom.js',\n        '-u', '-q'\n  ], {stdio: 'inherit'});\n  cmd.on('close', function (code) {\n      console.log('Modernizr exit code: ' + code);\n      cb(code);\n  });\n});\nChange index.html page to reflect changes:\n<!-- build:js scripts/vendor/modernizr.js -->\n<script type=\"text/javascript\" src='scripts/modernizr-custom.js'></script>\n<-- endbuild -->\n. If I might share my Modernizr approach after a few days of struggling with it.\nUpdate to a 3.x version with bower\nCreate a configuration using the online download page: https://modernizr.com/download\nBuild and download a command line config modernizr-config.json\nAdd a gulp task, modifying location of modernizr-config.json as necessary:\n// Modernizr\nvar spawn = require('child_process').spawn;\ngulp.task('modernizr', function (cb) {\n  var cmd = spawn('bower_components/modernizr/bin/modernizr', [\n        '-c', 'modernizr-config.json', \n        '-d', 'app/scripts/modernizr-custom.js',\n        '-u', '-q'\n  ], {stdio: 'inherit'});\n  cmd.on('close', function (code) {\n      console.log('Modernizr exit code: ' + code);\n      cb(code);\n  });\n});\nChange index.html page to reflect changes:\n<!-- build:js scripts/vendor/modernizr.js -->\n<script type=\"text/javascript\" src='scripts/modernizr-custom.js'></script>\n<-- endbuild -->\n. ",
    "ui-aliraza": "This happened with me on a close to fresh install. I added a couple of lines in styles which were compiled without errors during serve, but always ended up in commented state when doing build. Modifying the build task in gulpfile.js worked for me.. I will send you screenshots and gif on this thread for you to properly investigate the cause.. This happened with me on a close to fresh install. I added a couple of lines in styles which were compiled without errors during serve, but always ended up in commented state when doing build. Modifying the build task in gulpfile.js worked for me.. I will send you screenshots and gif on this thread for you to properly investigate the cause.. ",
    "gsportelli": "The less invasive way to achieve it was to download the _variables.scss file from bootswatch to the app/styles folder and to modify the initial part of app/styles/main.scss from\n```\n$icon-font-path: '../fonts/';\n// bower:scss\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\nto\n```\n$icon-font-path: '../fonts/';\n// bower:scss\n@import \"_variables.scss\";\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\n. If I import only _variable.scss I see that the theme looks like what I wanted, but there is also a _bootswatch.scss file too, which should be included.\nOut of curiosity, what is the software that parses the // bower:scss directive? Is it bower itself?\n. The less invasive way to achieve it was to download the _variables.scss file from bootswatch to the app/styles folder and to modify the initial part of app/styles/main.scss from\n```\n$icon-font-path: '../fonts/';\n// bower:scss\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\nto\n```\n$icon-font-path: '../fonts/';\n// bower:scss\n@import \"_variables.scss\";\n@import \"bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\";\n// endbower\n```\n. If I import only _variable.scss I see that the theme looks like what I wanted, but there is also a _bootswatch.scss file too, which should be included.\nOut of curiosity, what is the software that parses the // bower:scss directive? Is it bower itself?\n. ",
    "palerdot": "@neilhem I'm trying to install in a new directory. Should I remove node_modules globally somewhere for this to work?\nI experienced a similar issue with react-boilerplate and filed an issue here.\nhttps://github.com/mxstbr/react-boilerplate/issues/1052\nsharing, in case it is related.\nI will not be able to upgrade node 4.x for local dev reasons. Will there be a problem in using this generator in node 4.x version?. I have all the mentioned versions installed but still I'm getting the same error mentioned at the start of the issue.\nMy yo doctor also runs fine.\nBut, I tried uninstalling 'generator-webapp' and reinstalling again, and following is the weird error message I get. I'm not sure what it means, since my output for yo --version gives 1.8.5\ngenerator-webapp@2.3.2 requires a peer of yo@>=1.7.1 but none was installed.. @neilhem I'm trying to install in a new directory. Should I remove node_modules globally somewhere for this to work?\nI experienced a similar issue with react-boilerplate and filed an issue here.\nhttps://github.com/mxstbr/react-boilerplate/issues/1052\nsharing, in case it is related.\nI will not be able to upgrade node 4.x for local dev reasons. Will there be a problem in using this generator in node 4.x version?. I have all the mentioned versions installed but still I'm getting the same error mentioned at the start of the issue.\nMy yo doctor also runs fine.\nBut, I tried uninstalling 'generator-webapp' and reinstalling again, and following is the weird error message I get. I'm not sure what it means, since my output for yo --version gives 1.8.5\ngenerator-webapp@2.3.2 requires a peer of yo@>=1.7.1 but none was installed.. ",
    "outaTiME": "Hi guys, \ngulp-cache 0.5 (released 12 days ago) breaks the image task execution without any output any ideas? \n(by the moment I just remove cache task execution)\nthanks !!!. Hi guys, \ngulp-cache 0.5 (released 12 days ago) breaks the image task execution without any output any ideas? \n(by the moment I just remove cache task execution)\nthanks !!!. ",
    "jocan3": "SOLUTION: It ended up that problem was not related neither to code nor to Ubuntu/apache. I am using a domain purchased in GoDaddy and they have a feature for \"masking forwarding\" which means that the domain is automatically redirected to my IP address but this option inserts \"framesets\" into the code to keep the URL masked with the domain name. To solve the problem, you need to disable any kind of forwarding in GoDaddy (remove any redirect configuration you have) and instead add an A record as described here.\n. SOLUTION: It ended up that problem was not related neither to code nor to Ubuntu/apache. I am using a domain purchased in GoDaddy and they have a feature for \"masking forwarding\" which means that the domain is automatically redirected to my IP address but this option inserts \"framesets\" into the code to keep the URL masked with the domain name. To solve the problem, you need to disable any kind of forwarding in GoDaddy (remove any redirect configuration you have) and instead add an A record as described here.\n. ",
    "capitola-dev": "Bootstrap 4 beta 2 dropped bower support\n\nDropped Bower support as the package manager has been deprecated for alternatives (e.g., Yarn or npm). See bower/bower#2298 for details.\n\nSo it might be the time to let it die.. Bootstrap 4 beta 2 dropped bower support\n\nDropped Bower support as the package manager has been deprecated for alternatives (e.g., Yarn or npm). See bower/bower#2298 for details.\n\nSo it might be the time to let it die.. ",
    "gkobilansky": "I was having the same problem. After a lot of head scratching, it looks like gulp-useref isn't playing nice with gulp-if.\nChanging the if wildcards ('*.js') in the html task seems to resolve it for me.\n```\n.pipe($.if('/.js', $.uglify())\n//Instead of: .pipe($.if('.js', $.uglify())\n.pipe($.if('/.css', $.csso()))\n//Instead of: .pipe($.if('.css', $.csso()))\n.pipe($.if('/.html', $.htmlmin({collapseWhitespace: true})))\n//instead of: .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n```\n. I was having the same problem. After a lot of head scratching, it looks like gulp-useref isn't playing nice with gulp-if.\nChanging the if wildcards ('*.js') in the html task seems to resolve it for me.\n```\n.pipe($.if('/.js', $.uglify())\n//Instead of: .pipe($.if('.js', $.uglify())\n.pipe($.if('/.css', $.csso()))\n//Instead of: .pipe($.if('.css', $.csso()))\n.pipe($.if('/.html', $.htmlmin({collapseWhitespace: true})))\n//instead of: .pipe($.if('.html', $.htmlmin({collapseWhitespace: true})))\n```\n. ",
    "feesh": "Hi there! Can confirm, I ran into the same issue from a fresh install this weekend. I was able to fix it using a similar approach to @gkobilansky that I found here: https://github.com/robrich/gulp-if/issues/70. Hi there! Can confirm, I ran into the same issue from a fresh install this weekend. I was able to fix it using a similar approach to @gkobilansky that I found here: https://github.com/robrich/gulp-if/issues/70. ",
    "clabnet": "Sorry, on my environment this not running. The same issue of start of thread, also using babel.\n```\nnode -v && npm -v && bower -v && gulp -v\nv6.7.0\n3.10.8\n1.8.0\n[22:31:26] Requiring external module babel-register\n[22:31:26] CLI version 1.2.2\n[22:31:26] Local version 3.9.1\n\n[22:35:11] Starting 'html'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :1534:18)\n    at js_error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :1542:1\n1)\n    at croak (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2089:9)\n    at token_error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :209\n7:9)\n    at unexpected (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2103\n:9)\n    at expr_atom (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2630:\n9)\n    at maybe_unary (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :279\n2:19)\n    at expr_ops (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2827:2\n4)\n    at maybe_conditional (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2832:20)\n    at maybe_assign (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :28\n56:20)\n    at expression (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2875\n:20)\n    at simple_statement (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), <anonymous\n\n:2314:55)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2178:20)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2136:24)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2904:23)\n    at Object.parse (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :29\n15:7)\n\n```.       Thanks for your response.\n  Same issue.\n\nI have downloaded now (2 feb 2017 @ 20:48 +1GMT) with this command:\n\nnpm install --global yo gulp-cli bower generator-webapp\n\nThese the versions in use:\n\n  Yeoman Doctor\n    Running sanity checks on your system\n\n    \u221a Global configuration file is valid\n    \u221a NODE_PATH matches the npm root\n    \u221a Node.js version\n    \u221a No .bowerrc file in home directory\n    \u221a No .yo-rc.json file in home directory\n    \u221a npm version\n\n    Everything looks all right!\n    C:\\Program Files\\nodejs\n    +-- bower@1.8.0\n    +-- generator-webapp@2.4.0\n    | `-- yeoman-generator@0.24.1\n    |\u00a0\u00a0 `-- dateformat@1.0.12\n    |\u00a0\u00a0\u00a0\u00a0 `-- meow@3.7.0\n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 `-- normalize-package-data@2.3.5\n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 `-- hosted-git-info@2.2.0\n    +-- gulp-cli@1.2.2\n    `-- yo@1.8.5\n    \u00a0 `-- meow@3.7.0\n    \u00a0\u00a0\u00a0 `-- normalize-package-data@2.3.5\n    \u00a0\u00a0\u00a0\u00a0\u00a0 `-- hosted-git-info@2.2.0\n\nI read into your USAGE file four options :\n\n    Options:\n    \u00a0\u00a0\u00a0 Sass: Include Sass\n    \u00a0\u00a0\u00a0 Bootstrap: Include Bootstrap or Bootstrap Sass if Sass is\n    included\n    \u00a0\u00a0\u00a0 Modernizr: Include Modernizr\n    \u00a0\u00a0\u00a0 Babel: Use ES2015 features by using Babel\n\n    But running yo webapp command, I can see ONLY tree options:\n    \u00a0\u00a0 _-----_\n    \u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0 .--------------------------.\n    \u00a0 |--(o)--|\u00a0\u00a0\u00a0 |\u00a0 'Allo 'allo! Out of the |\n    \u00a0`---------\u00b4\u00a0\u00a0 |\u00a0\u00a0\u00a0 box I include HTML5\u00a0\u00a0 |\n    \u00a0 ( _\u00b4U`_ )\u00a0\u00a0\u00a0 | Boilerplate, jQuery, and |\n    \u00a0 /___A___\\\u00a0\u00a0\u00a0 | a gulpfile to build your |\n    \u00a0\u00a0 |\u00a0 ~\u00a0 |\u00a0\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 app.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 |\n    \u00a0__'.___.'__\u00a0\u00a0 '--------------------------'\n    \u00a0\u00a0 `\u00a0 |\u00b0 \u00b4 Y `\n\n    What more would you like? (Press <space> to se\n    *) Sass\n    *) Bootstrap\n    *) Modernizr\n\n    and not BAbel.\nI think I do not using the last version.\n\nThis is the version I was using:\nnpm ls -g generator-webapp\n-- generator-webapp@2.4.0\n    Can I download from npm the last version or not ?\nIf not, how to test the latest version of your package ?\n\n    Cheers,\nClaudio. It seem to work, many thanks @silvenon.. Sorry, on my environment this not running. The same issue of start of thread, **also using babel**.\n\n```\nnode -v && npm -v && bower -v && gulp -v\nv6.7.0\n3.10.8\n1.8.0\n[22:31:26] Requiring external module babel-register\n[22:31:26] CLI version 1.2.2\n[22:31:26] Local version 3.9.1\n\n[22:35:11] Starting 'html'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError\n    at new JS_Parse_Error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :1534:18)\n    at js_error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :1542:1\n1)\n    at croak (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2089:9)\n    at token_error (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :209\n7:9)\n    at unexpected (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2103\n:9)\n    at expr_atom (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2630:\n9)\n    at maybe_unary (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :279\n2:19)\n    at expr_ops (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2827:2\n4)\n    at maybe_conditional (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2832:20)\n    at maybe_assign (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :28\n56:20)\n    at expression (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2875\n:20)\n    at simple_statement (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), <anonymous\n\n:2314:55)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2178:20)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2136:24)\n    at eval (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :2904:23)\n    at Object.parse (eval at  (D:\\casavacanzeposeidone.it\\casavacanze-new-generator-webapp\\node_modules\\uglify-js\\tools\\node.js:28:1), :29\n15:7)\n\n```.       Thanks for your response.\n  Same issue.\n\nI have downloaded now (2 feb 2017 @ 20:48 +1GMT) with this command:\n\nnpm install --global yo gulp-cli bower generator-webapp\n\nThese the versions in use:\n\n  Yeoman Doctor\n    Running sanity checks on your system\n\n    \u221a Global configuration file is valid\n    \u221a NODE_PATH matches the npm root\n    \u221a Node.js version\n    \u221a No .bowerrc file in home directory\n    \u221a No .yo-rc.json file in home directory\n    \u221a npm version\n\n    Everything looks all right!\n    C:\\Program Files\\nodejs\n    +-- bower@1.8.0\n    +-- generator-webapp@2.4.0\n    | `-- yeoman-generator@0.24.1\n    |\u00a0\u00a0 `-- dateformat@1.0.12\n    |\u00a0\u00a0\u00a0\u00a0 `-- meow@3.7.0\n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 `-- normalize-package-data@2.3.5\n    |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 `-- hosted-git-info@2.2.0\n    +-- gulp-cli@1.2.2\n    `-- yo@1.8.5\n    \u00a0 `-- meow@3.7.0\n    \u00a0\u00a0\u00a0 `-- normalize-package-data@2.3.5\n    \u00a0\u00a0\u00a0\u00a0\u00a0 `-- hosted-git-info@2.2.0\n\nI read into your USAGE file four options :\n\n    Options:\n    \u00a0\u00a0\u00a0 Sass: Include Sass\n    \u00a0\u00a0\u00a0 Bootstrap: Include Bootstrap or Bootstrap Sass if Sass is\n    included\n    \u00a0\u00a0\u00a0 Modernizr: Include Modernizr\n    \u00a0\u00a0\u00a0 Babel: Use ES2015 features by using Babel\n\n    But running yo webapp command, I can see ONLY tree options:\n    \u00a0\u00a0 _-----_\n    \u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0 .--------------------------.\n    \u00a0 |--(o)--|\u00a0\u00a0\u00a0 |\u00a0 'Allo 'allo! Out of the |\n    \u00a0`---------\u00b4\u00a0\u00a0 |\u00a0\u00a0\u00a0 box I include HTML5\u00a0\u00a0 |\n    \u00a0 ( _\u00b4U`_ )\u00a0\u00a0\u00a0 | Boilerplate, jQuery, and |\n    \u00a0 /___A___\\\u00a0\u00a0\u00a0 | a gulpfile to build your |\n    \u00a0\u00a0 |\u00a0 ~\u00a0 |\u00a0\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 app.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 |\n    \u00a0__'.___.'__\u00a0\u00a0 '--------------------------'\n    \u00a0\u00a0 `\u00a0 |\u00b0 \u00b4 Y `\n\n    What more would you like? (Press <space> to se\n    *) Sass\n    *) Bootstrap\n    *) Modernizr\n\n    and not BAbel.\nI think I do not using the last version.\n\nThis is the version I was using:\nnpm ls -g generator-webapp\n-- generator-webapp@2.4.0\n    Can I download from npm the last version or not ?\nIf not, how to test the latest version of your package ?\n\n    Cheers,\nClaudio. It seem to work, many thanks @silvenon..\n",
    "MarkyMarkNo1": "Thank you for your quick reply! I'm excited \ud83d\ude09\nYes, with Alpha6 I think it's the time to get engaged with Bootstrap 4:\n\nAs we head to our first beta, we\u2019ll be focused on not adding anything new, ideally making as few breaking changes as possible\n\nRegarding your remarks:\n\nNotice the space before class\n\nI've been recognizing this after I created the pull request - compliment for your sharp eye!\n\nCould you explain these changes to the html task?\n\nSure, my suggestions. Would you like inline comments, or just here for clarification?\njavascript\n// https://github.com/kangax/html-minifier#options-quick-reference\n$.htmlmin({\n  collapseWhitespace: true,\n  // Minify CSS in style elements and style attributes\n  minifyCSS: true,\n  // Minify JavaScript in script elements and event attributes\n  minifyJS: {compress: {drop_console: true}},\n  // Process contents of conditional comments through minifier\n  processConditionalComments: true,\n  // Strip HTML comments\n  removeComments: true,\n  // Remove all attributes with whitespace-only values\n  removeEmptyAttributes: true,\n  // Remove type=\"text/javascript\" from script tags\n  removeScriptTypeAttributes: true,\n  // Remove type=\"text/css\" from style and link tags\n  removeStyleLinkTypeAttributes: true\n})\n\nAlso, please fix the tests if you can\n\nI'll try .... @silvenon Tests added, checks passed. Thank you!. My pleasure, @silvenon ;)\nBootstrap comes with a popper.js dependency. \nSince a popper.js dist is not available via Bower - see the link I gave you above or take a look inside what Bower downloads - we need the unpkg.com/popper.js workaround.\nHence we should just override Bootstraps' bower dependencies in our bower.json - but that doesn't seem to work. We can override main, but not dependencies.\nWe'd need something like \n```\noverrides: {\n  \"bootstrap\": {\n     \"dependencies\": {\n         \"jquery\": \">=1.9.1\",\n         \"popper.js\": \"https://unpkg.com/popper.js\"\n      }\n  }   \n}\n```. Thank you for your quick reply! I'm excited \ud83d\ude09\nYes, with Alpha6 I think it's the time to get engaged with Bootstrap 4:\n\nAs we head to our first beta, we\u2019ll be focused on not adding anything new, ideally making as few breaking changes as possible\n\nRegarding your remarks:\n\nNotice the space before class\n\nI've been recognizing this after I created the pull request - compliment for your sharp eye!\n\nCould you explain these changes to the html task?\n\nSure, my suggestions. Would you like inline comments, or just here for clarification?\njavascript\n// https://github.com/kangax/html-minifier#options-quick-reference\n$.htmlmin({\n  collapseWhitespace: true,\n  // Minify CSS in style elements and style attributes\n  minifyCSS: true,\n  // Minify JavaScript in script elements and event attributes\n  minifyJS: {compress: {drop_console: true}},\n  // Process contents of conditional comments through minifier\n  processConditionalComments: true,\n  // Strip HTML comments\n  removeComments: true,\n  // Remove all attributes with whitespace-only values\n  removeEmptyAttributes: true,\n  // Remove type=\"text/javascript\" from script tags\n  removeScriptTypeAttributes: true,\n  // Remove type=\"text/css\" from style and link tags\n  removeStyleLinkTypeAttributes: true\n})\n\nAlso, please fix the tests if you can\n\nI'll try .... @silvenon Tests added, checks passed. Thank you!. My pleasure, @silvenon ;)\nBootstrap comes with a popper.js dependency. \nSince a popper.js dist is not available via Bower - see the link I gave you above or take a look inside what Bower downloads - we need the unpkg.com/popper.js workaround.\nHence we should just override Bootstraps' bower dependencies in our bower.json - but that doesn't seem to work. We can override main, but not dependencies.\nWe'd need something like \n```\noverrides: {\n  \"bootstrap\": {\n     \"dependencies\": {\n         \"jquery\": \">=1.9.1\",\n         \"popper.js\": \"https://unpkg.com/popper.js\"\n      }\n  }   \n}\n```. ",
    "jkatsnelson": "I left out the fact that I removed access key and secret from this recipe, because I didn't want it to seem like that was a good idea.. If you download the aws-cli, and add your credentials to that, you don't even need .env + dotenv -- it'll just work seamlessly :). I left out the fact that I removed access key and secret from this recipe, because I didn't want it to seem like that was a good idea.. If you download the aws-cli, and add your credentials to that, you don't even need .env + dotenv -- it'll just work seamlessly :). ",
    "christopheschwyzer": "This is huge!. @neilhem makes sense . This is huge!. @neilhem makes sense . ",
    "NuroDev": "If more information is required, link to repository can be found here: github.com/Meadowcottage/KaplanSays.  The dist files was made in the order provided by the deploying to heroku using node.js recipe.\nI have checked the Heroku logs and the crash log returns the following:\n2017-02-21T22:12:25.394968+00:00 heroku[web.1]: Starting process with command `npm start`\n2017-02-21T22:12:28.366684+00:00 heroku[web.1]: Process exited with status 1\n2017-02-21T22:12:28.384951+00:00 heroku[web.1]: State changed from starting to crashed\n2017-02-21T22:12:28.282442+00:00 app[web.1]: npm ERR! Linux 3.13.0-105-generic\n2017-02-21T22:12:28.283226+00:00 app[web.1]: npm ERR! argv \"/app/.heroku/node/bin/node\" \"/app/.heroku/node/bin/npm\" \"start\"\n2017-02-21T22:12:28.283500+00:00 app[web.1]: npm ERR! node v7.5.0\n2017-02-21T22:12:28.283773+00:00 app[web.1]: npm ERR! npm  v4.1.2\n2017-02-21T22:12:28.285052+00:00 app[web.1]: \n2017-02-21T22:12:28.286543+00:00 app[web.1]: npm ERR! missing script: start\n2017-02-21T22:12:28.286758+00:00 app[web.1]: npm ERR! \n2017-02-21T22:12:28.286908+00:00 app[web.1]: npm ERR! If you need help, you may report this error at:\n2017-02-21T22:12:28.287072+00:00 app[web.1]: npm ERR!     <https://github.com/npm/npm/issues>\n2017-02-21T22:12:28.298997+00:00 app[web.1]: \n2017-02-21T22:12:28.299253+00:00 app[web.1]: npm ERR! Please include the following file with any support request:\n2017-02-21T22:12:28.299393+00:00 app[web.1]: npm ERR!     /app/npm-debug.log\nI double checked the dist/package.json and a start script is present.\nAny ideas why this error may be occurring?. I have been looking into this more and I found the issue. The Heroku app by default tries to build from the root directory. Makes sense about the no script error now \ud83d\ude02.\nNeed to find a way to point Heroku to build from a sub directory or set the build directory.\nIf I do i'll make a PR.. I don't have a huge total use time with Heroku, but from what I have been working out is that you can instead point it to a branch to deploy from.\nSo best bet is to create a deployment branch and point Heroku to that branch to build from.. If more information is required, link to repository can be found here: github.com/Meadowcottage/KaplanSays.  The dist files was made in the order provided by the deploying to heroku using node.js recipe.\nI have checked the Heroku logs and the crash log returns the following:\n2017-02-21T22:12:25.394968+00:00 heroku[web.1]: Starting process with command `npm start`\n2017-02-21T22:12:28.366684+00:00 heroku[web.1]: Process exited with status 1\n2017-02-21T22:12:28.384951+00:00 heroku[web.1]: State changed from starting to crashed\n2017-02-21T22:12:28.282442+00:00 app[web.1]: npm ERR! Linux 3.13.0-105-generic\n2017-02-21T22:12:28.283226+00:00 app[web.1]: npm ERR! argv \"/app/.heroku/node/bin/node\" \"/app/.heroku/node/bin/npm\" \"start\"\n2017-02-21T22:12:28.283500+00:00 app[web.1]: npm ERR! node v7.5.0\n2017-02-21T22:12:28.283773+00:00 app[web.1]: npm ERR! npm  v4.1.2\n2017-02-21T22:12:28.285052+00:00 app[web.1]: \n2017-02-21T22:12:28.286543+00:00 app[web.1]: npm ERR! missing script: start\n2017-02-21T22:12:28.286758+00:00 app[web.1]: npm ERR! \n2017-02-21T22:12:28.286908+00:00 app[web.1]: npm ERR! If you need help, you may report this error at:\n2017-02-21T22:12:28.287072+00:00 app[web.1]: npm ERR!     <https://github.com/npm/npm/issues>\n2017-02-21T22:12:28.298997+00:00 app[web.1]: \n2017-02-21T22:12:28.299253+00:00 app[web.1]: npm ERR! Please include the following file with any support request:\n2017-02-21T22:12:28.299393+00:00 app[web.1]: npm ERR!     /app/npm-debug.log\nI double checked the dist/package.json and a start script is present.\nAny ideas why this error may be occurring?. I have been looking into this more and I found the issue. The Heroku app by default tries to build from the root directory. Makes sense about the no script error now \ud83d\ude02.\nNeed to find a way to point Heroku to build from a sub directory or set the build directory.\nIf I do i'll make a PR.. I don't have a huge total use time with Heroku, but from what I have been working out is that you can instead point it to a branch to deploy from.\nSo best bet is to create a deployment branch and point Heroku to that branch to build from.. ",
    "andreferreira-me": "I run vagrant destroy and after vagrant up --provision and it's all fine after that.. I run vagrant destroy and after vagrant up --provision and it's all fine after that.. ",
    "barretr": "Happy to help. Thanks for maintaining this project, Matija. . Happy to help. Thanks for maintaining this project, Matija. . ",
    "DanJ210": "That was totally what I needed. I didn't do that to begin with because I thought that was a shortcut version of going through yeoman and installing the webapp manually. Thanks a lot for the help I appreciate it.\nI am a newbie so still getting grips on things.. I would say that the instructions are well done and I didn't necessarily miss it... I only thought I had already done that first step another way. It was a mistake on my part not on this end. I respect what has been done for us here so thanks for all the work to whom it applies!. That was totally what I needed. I didn't do that to begin with because I thought that was a shortcut version of going through yeoman and installing the webapp manually. Thanks a lot for the help I appreciate it.\nI am a newbie so still getting grips on things.. I would say that the instructions are well done and I didn't necessarily miss it... I only thought I had already done that first step another way. It was a mistake on my part not on this end. I respect what has been done for us here so thanks for all the work to whom it applies!. ",
    "pxwee5": "Here you go. I think the only thing I have added is the task called \"nunjucks\" on the last line. \n```js\n// generated on 2017-02-13 using generator-webapp 2.4.1\nconst gulp = require('gulp');\nconst gulpLoadPlugins = require('gulp-load-plugins');\nconst browserSync = require('browser-sync').create();\nconst del = require('del');\nconst wiredep = require('wiredep').stream;\nconst runSequence = require('run-sequence');\nconst $ = gulpLoadPlugins();\nconst reload = browserSync.reload;\nvar dev = true;\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.if(dev, $.sourcemaps.write()))\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('scripts', () => {\n  return gulp.src('app/scripts/*/.js')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.babel())\n    .pipe($.if(dev, $.sourcemaps.write('.')))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nfunction lint(files) {\n  return gulp.src(files)\n    .pipe($.eslint({ fix: true }))\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.eslint.format())\n    .pipe($.if(!browserSync.active, $.eslint.failAfterError()));\n}\ngulp.task('lint', () => {\n  return lint('app/scripts//*.js')\n    .pipe(gulp.dest('app/scripts'));\n});\ngulp.task('lint:test', () => {\n  return lint('test/spec//*.js')\n    .pipe(gulp.dest('test/spec'));\n});\ngulp.task('html', ['views', 'styles', 'scripts'], () => {\n  return gulp.src(['app/.html', '.tmp/.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if(/.js$/, $.uglify({compress: {drop_console: true}})))\n    .pipe($.if(/.css$/, $.cssnano({safe: true, autoprefixer: false})))\n    .pipe($.if(/.html$/, $.htmlmin({\n      collapseWhitespace: true,\n      minifyCSS: true,\n      minifyJS: {compress: {drop_console: true}},\n      processConditionalComments: true,\n      removeComments: true,\n      removeEmptyAttributes: true,\n      removeScriptTypeAttributes: true,\n      removeStyleLinkTypeAttributes: true\n    })))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', () => {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin()))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('data', () => {\n  return gulp.src('app/data/*/.json')\n    .pipe(gulp.dest('dist/data'));\n});\ngulp.task('template', () => {\n  return gulp.src('app/scripts/templates/*')\n    .pipe(gulp.dest('dist/scripts/templates'));\n});\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts//*'))\n    .pipe($.if(dev, gulp.dest('.tmp/fonts'), gulp.dest('dist/fonts')));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/',\n    '!app/.html',\n    '!app/*.njk'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', del.bind(null, ['.tmp', 'dist']));\ngulp.task('serve', () => {\n  runSequence(['clean', 'wiredep'], ['views', 'styles', 'scripts', 'fonts'], () => {\n    browserSync.init({\n      notify: false,\n      port: 9000,\n      server: {\n        baseDir: ['.tmp', 'app'],\n        routes: {\n          '/bower_components': 'bower_components'\n        }\n      }\n    });\ngulp.watch([\n  'app/images/**/*',\n  '.tmp/fonts/**/*'\n]).on('change', reload);\n\ngulp.watch('app/**/*.{html,njk}', ['views']);\ngulp.watch('app/styles/**/*.scss', ['styles']);\ngulp.watch('app/scripts/**/*.js', ['scripts']);\ngulp.watch('app/fonts/**/*', ['fonts']);\ngulp.watch('bower.json', ['wiredep', 'fonts']);\n\n});\n});\ngulp.task('serve:dist', ['default'], () => {\n  browserSync.init({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['dist']\n    }\n  });\n});\ngulp.task('serve:test', ['scripts'], () => {\n  browserSync.init({\n    notify: false,\n    port: 9000,\n    ui: false,\n    server: {\n      baseDir: 'test',\n      routes: {\n        '/scripts': '.tmp/scripts',\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch(['test/spec//.js', 'test/index.html']).on('change', reload);\n  gulp.watch('test/spec//.js', ['lint:test']);\n});\n// inject bower components\ngulp.task('wiredep', () => {\n  gulp.src('app/styles/*.scss')\n    .pipe($.filter(file => file.stat && file.stat.size))\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/layouts/.njk')\n    .pipe(wiredep({\n      exclude: ['bootstrap-sass'],\n      ignorePath: /^(..\\/)../,\n        fileTypes: {\n          njk: {\n            block: /(([ \\t])\\s*bower:*(\\S*)\\s*)(\\n|\\r|.)?(\\s*endbower\\s*)/gi,\n            detect: {\n              js: /<script.*src='\");\n});\ngulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras', 'data', 'template'], () => {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', () => {\n  return new Promise(resolve => {\n    dev = false;\n    runSequence(['clean', 'wiredep'], 'build', resolve);\n  });\n});\ngulp.task('views', () => {\n  return gulp.src('app/*.njk')\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe(gulp.dest('.tmp'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('nunjucks', () => {\n  return gulp.src('app/includes/*/.njk')\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe(gulp.dest('dist/includes'));\n});\n```. @dertuerke, \nYes I use Atom. \nNo I am not aware of any autoformatter plugins used by Atom. . I do not know when exactly it happened to be honest. It happens very randomly. \nAm I the only person experiencing this o.O. Uhh, it's actually just SCSS files that are \"deleted\"\nDo you want to see anything more specific ?. Here you go. \n```\n<!doctype html>\n\n\n\n\n\nBallance\n<link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n<!-- Place favicon.ico in the root directory -->\n\n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"/bower_components/owl.carousel/dist/assets/owl.carousel.css\" />\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css styles/main.css -->\n<link rel=\"stylesheet\" href=\"styles/main.css\">\n<!-- endbuild -->\n\n<!-- build:js scripts/vendor/modernizr.js -->\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<!-- endbuild -->\n\n\n\n[if IE]>\n      <p class=\"browserupgrade\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n    <![endif]\n{% include \"includes/components/menu.njk\" %}\n<div class=\"o-body-content\">\n  <div class=\"o-body-content__overlay hidden-xs\"></div>\n  {% block content %}{% endblock %}\n  {% include \"includes/components/footer.njk\" %}\n</div>\n{% include \"includes/components/slide-in.njk\" %}\n\n<!-- Google Analytics: change UA-XXXXX-X to be your site's ID. -->\n<script>\n  (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n  function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n  e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n  e.src='https://www.google-analytics.com/analytics.js';\n  r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n  ga('create','UA-XXXXX-X');ga('send','pageview');\n</script>\n\n<!-- build:js scripts/vendor.js -->\n\n<!-- <script src=\"/scripts/vendor/materialize/dropdown.js\"></script> -->\n<!-- bower:js -->\n<script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<script src=\"/bower_components/owl.carousel/dist/owl.carousel.js\"></script>\n<script src=\"/bower_components/jquery.pointer-events-polyfill/src/jquery.pointer-events-polyfill.js\"></script>\n<script src=\"/bower_components/matchHeight/dist/jquery.matchHeight.js\"></script>\n<script src=\"/bower_components/jscroll/jquery.jscroll.js\"></script>\n<script src=\"/bower_components/es6-promise/es6-promise.js\"></script>\n<script src=\"/bower_components/mustache.js/mustache.js\"></script>\n<!-- endbower -->\n<script src=\"scripts/vendor/headroom.js\"></script>\n<script src=\"scripts/vendor/polyfill-foreach.js\"></script>\n<script src=\"/bower_components/in-view/dist/in-view.min.js\"></script>\n<!-- endbuild -->\n\n<!-- build:js scripts/plugins.js -->\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js\"></script>\n<!-- endbuild -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TweenLite.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/plugins/CSSPlugin.min.js\"></script>\n{# <script src=\"https://use.fontawesome.com/d7cd4aed19.js\"></script> #}\n<!-- build:js scripts/main.js -->\n<script src=\"scripts/guid.js\"></script>\n<script src=\"scripts/dropdown.js\"></script>\n<script src=\"scripts/slide-in.js\"></script>\n<script src=\"scripts/graph.js\"></script>\n<script src=\"scripts/progressbar.js\"></script>\n<script src=\"scripts/product.js\"></script>\n<script src=\"scripts/selectize.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\n\n\n\n```. Yes I can. Everything works like normal actually. Just that occasionally my scss file gets emptied. \nscss files are imported in /app/styles/main.scss . Here you go. I think the only thing I have added is the task called \"nunjucks\" on the last line. \n```js\n// generated on 2017-02-13 using generator-webapp 2.4.1\nconst gulp = require('gulp');\nconst gulpLoadPlugins = require('gulp-load-plugins');\nconst browserSync = require('browser-sync').create();\nconst del = require('del');\nconst wiredep = require('wiredep').stream;\nconst runSequence = require('run-sequence');\nconst $ = gulpLoadPlugins();\nconst reload = browserSync.reload;\nvar dev = true;\ngulp.task('styles', () => {\n  return gulp.src('app/styles/*.scss')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.sass.sync({\n      outputStyle: 'expanded',\n      precision: 10,\n      includePaths: ['.']\n    }).on('error', $.sass.logError))\n    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))\n    .pipe($.if(dev, $.sourcemaps.write()))\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('scripts', () => {\n  return gulp.src('app/scripts/*/.js')\n    .pipe($.plumber())\n    .pipe($.if(dev, $.sourcemaps.init()))\n    .pipe($.babel())\n    .pipe($.if(dev, $.sourcemaps.write('.')))\n    .pipe(gulp.dest('.tmp/scripts'))\n    .pipe(reload({stream: true}));\n});\nfunction lint(files) {\n  return gulp.src(files)\n    .pipe($.eslint({ fix: true }))\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.eslint.format())\n    .pipe($.if(!browserSync.active, $.eslint.failAfterError()));\n}\ngulp.task('lint', () => {\n  return lint('app/scripts//*.js')\n    .pipe(gulp.dest('app/scripts'));\n});\ngulp.task('lint:test', () => {\n  return lint('test/spec//*.js')\n    .pipe(gulp.dest('test/spec'));\n});\ngulp.task('html', ['views', 'styles', 'scripts'], () => {\n  return gulp.src(['app/.html', '.tmp/.html'])\n    .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n    .pipe($.if(/.js$/, $.uglify({compress: {drop_console: true}})))\n    .pipe($.if(/.css$/, $.cssnano({safe: true, autoprefixer: false})))\n    .pipe($.if(/.html$/, $.htmlmin({\n      collapseWhitespace: true,\n      minifyCSS: true,\n      minifyJS: {compress: {drop_console: true}},\n      processConditionalComments: true,\n      removeComments: true,\n      removeEmptyAttributes: true,\n      removeScriptTypeAttributes: true,\n      removeStyleLinkTypeAttributes: true\n    })))\n    .pipe(gulp.dest('dist'));\n});\ngulp.task('images', () => {\n  return gulp.src('app/images/*/')\n    .pipe($.cache($.imagemin()))\n    .pipe(gulp.dest('dist/images'));\n});\ngulp.task('data', () => {\n  return gulp.src('app/data/*/.json')\n    .pipe(gulp.dest('dist/data'));\n});\ngulp.task('template', () => {\n  return gulp.src('app/scripts/templates/*')\n    .pipe(gulp.dest('dist/scripts/templates'));\n});\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts//*'))\n    .pipe($.if(dev, gulp.dest('.tmp/fonts'), gulp.dest('dist/fonts')));\n});\ngulp.task('extras', () => {\n  return gulp.src([\n    'app/',\n    '!app/.html',\n    '!app/*.njk'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n});\ngulp.task('clean', del.bind(null, ['.tmp', 'dist']));\ngulp.task('serve', () => {\n  runSequence(['clean', 'wiredep'], ['views', 'styles', 'scripts', 'fonts'], () => {\n    browserSync.init({\n      notify: false,\n      port: 9000,\n      server: {\n        baseDir: ['.tmp', 'app'],\n        routes: {\n          '/bower_components': 'bower_components'\n        }\n      }\n    });\ngulp.watch([\n  'app/images/**/*',\n  '.tmp/fonts/**/*'\n]).on('change', reload);\n\ngulp.watch('app/**/*.{html,njk}', ['views']);\ngulp.watch('app/styles/**/*.scss', ['styles']);\ngulp.watch('app/scripts/**/*.js', ['scripts']);\ngulp.watch('app/fonts/**/*', ['fonts']);\ngulp.watch('bower.json', ['wiredep', 'fonts']);\n\n});\n});\ngulp.task('serve:dist', ['default'], () => {\n  browserSync.init({\n    notify: false,\n    port: 9000,\n    server: {\n      baseDir: ['dist']\n    }\n  });\n});\ngulp.task('serve:test', ['scripts'], () => {\n  browserSync.init({\n    notify: false,\n    port: 9000,\n    ui: false,\n    server: {\n      baseDir: 'test',\n      routes: {\n        '/scripts': '.tmp/scripts',\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\ngulp.watch('app/scripts//*.js', ['scripts']);\n  gulp.watch(['test/spec//.js', 'test/index.html']).on('change', reload);\n  gulp.watch('test/spec//.js', ['lint:test']);\n});\n// inject bower components\ngulp.task('wiredep', () => {\n  gulp.src('app/styles/*.scss')\n    .pipe($.filter(file => file.stat && file.stat.size))\n    .pipe(wiredep({\n      ignorePath: /^(..\\/)+/\n    }))\n    .pipe(gulp.dest('app/styles'));\ngulp.src('app/layouts/.njk')\n    .pipe(wiredep({\n      exclude: ['bootstrap-sass'],\n      ignorePath: /^(..\\/)../,\n        fileTypes: {\n          njk: {\n            block: /(([ \\t])\\s*bower:*(\\S*)\\s*)(\\n|\\r|.)?(\\s*endbower\\s*)/gi,\n            detect: {\n              js: /<script.*src='\");\n});\ngulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras', 'data', 'template'], () => {\n  return gulp.src('dist/*/').pipe($.size({title: 'build', gzip: true}));\n});\ngulp.task('default', () => {\n  return new Promise(resolve => {\n    dev = false;\n    runSequence(['clean', 'wiredep'], 'build', resolve);\n  });\n});\ngulp.task('views', () => {\n  return gulp.src('app/*.njk')\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe(gulp.dest('.tmp'))\n    .pipe(reload({stream: true}));\n});\ngulp.task('nunjucks', () => {\n  return gulp.src('app/includes/*/.njk')\n    .pipe($.nunjucksRender({\n      path: 'app'\n    }))\n    .pipe(gulp.dest('dist/includes'));\n});\n```. @dertuerke, \nYes I use Atom. \nNo I am not aware of any autoformatter plugins used by Atom. . I do not know when exactly it happened to be honest. It happens very randomly. \nAm I the only person experiencing this o.O. Uhh, it's actually just SCSS files that are \"deleted\"\nDo you want to see anything more specific ?. Here you go. \n```\n<!doctype html>\n\n\n\n\n\nBallance\n<link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n<!-- Place favicon.ico in the root directory -->\n\n<!-- build:css styles/vendor.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"/bower_components/owl.carousel/dist/assets/owl.carousel.css\" />\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css styles/main.css -->\n<link rel=\"stylesheet\" href=\"styles/main.css\">\n<!-- endbuild -->\n\n<!-- build:js scripts/vendor/modernizr.js -->\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<!-- endbuild -->\n\n\n\n[if IE]>\n      <p class=\"browserupgrade\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n    <![endif]\n{% include \"includes/components/menu.njk\" %}\n<div class=\"o-body-content\">\n  <div class=\"o-body-content__overlay hidden-xs\"></div>\n  {% block content %}{% endblock %}\n  {% include \"includes/components/footer.njk\" %}\n</div>\n{% include \"includes/components/slide-in.njk\" %}\n\n<!-- Google Analytics: change UA-XXXXX-X to be your site's ID. -->\n<script>\n  (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n  function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n  e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n  e.src='https://www.google-analytics.com/analytics.js';\n  r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n  ga('create','UA-XXXXX-X');ga('send','pageview');\n</script>\n\n<!-- build:js scripts/vendor.js -->\n\n<!-- <script src=\"/scripts/vendor/materialize/dropdown.js\"></script> -->\n<!-- bower:js -->\n<script src=\"/bower_components/jquery/dist/jquery.js\"></script>\n<script src=\"/bower_components/modernizr/modernizr.js\"></script>\n<script src=\"/bower_components/owl.carousel/dist/owl.carousel.js\"></script>\n<script src=\"/bower_components/jquery.pointer-events-polyfill/src/jquery.pointer-events-polyfill.js\"></script>\n<script src=\"/bower_components/matchHeight/dist/jquery.matchHeight.js\"></script>\n<script src=\"/bower_components/jscroll/jquery.jscroll.js\"></script>\n<script src=\"/bower_components/es6-promise/es6-promise.js\"></script>\n<script src=\"/bower_components/mustache.js/mustache.js\"></script>\n<!-- endbower -->\n<script src=\"scripts/vendor/headroom.js\"></script>\n<script src=\"scripts/vendor/polyfill-foreach.js\"></script>\n<script src=\"/bower_components/in-view/dist/in-view.min.js\"></script>\n<!-- endbuild -->\n\n<!-- build:js scripts/plugins.js -->\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js\"></script>\n<script src=\"/bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js\"></script>\n<!-- endbuild -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TweenLite.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/plugins/CSSPlugin.min.js\"></script>\n{# <script src=\"https://use.fontawesome.com/d7cd4aed19.js\"></script> #}\n<!-- build:js scripts/main.js -->\n<script src=\"scripts/guid.js\"></script>\n<script src=\"scripts/dropdown.js\"></script>\n<script src=\"scripts/slide-in.js\"></script>\n<script src=\"scripts/graph.js\"></script>\n<script src=\"scripts/progressbar.js\"></script>\n<script src=\"scripts/product.js\"></script>\n<script src=\"scripts/selectize.js\"></script>\n<script src=\"scripts/main.js\"></script>\n<!-- endbuild -->\n\n\n\n```. Yes I can. Everything works like normal actually. Just that occasionally my scss file gets emptied. \nscss files are imported in /app/styles/main.scss . ",
    "dertuerke": "\nDo u use a IDE?\nHave u a auto-formatter active?. @pxwee5 At which command, does it delete the file?. hmm.... can u share ur code?. nope. i compare ur gulp file with my and its look same. can u post ur default.njk? Where u include the JS and Styles. ok. Where u import the scss-file?\n\nand can u try this task: gulp styles. hmmmmmmmmmmmmmmmmm....... i have no idee more without the code.\ni have the same code only that i dont import bootstrap in the main.scss.\nnjk-File\n```\n build:css styles/main.css \n\n endbuild \n build:css styles/bootstrap.css \n\n endbuild \n```\nmain.scss i remove the bootstrap import. can closed. @neilhem yeah. I use a wrong JS-Code. I use the Firebase-Admin SDK and this package can't be used locally. Thx for the Help. Can Closed. - Do u use a IDE?\n- Have u a auto-formatter active?. @pxwee5 At which command, does it delete the file?. hmm.... can u share ur code?. nope. i compare ur gulp file with my and its look same. can u post ur default.njk? Where u include the JS and Styles. ok. Where u import the scss-file?\nand can u try this task: gulp styles. hmmmmmmmmmmmmmmmmm....... i have no idee more without the code.\ni have the same code only that i dont import bootstrap in the main.scss.\nnjk-File\n```\n build:css styles/main.css \n\n endbuild \n build:css styles/bootstrap.css \n\n endbuild \n```\nmain.scss i remove the bootstrap import. can closed. @neilhem yeah. I use a wrong JS-Code. I use the Firebase-Admin SDK and this package can't be used locally. Thx for the Help. Can Closed. ",
    "jamilalisgandarov": "It has happened to me once, while server was running, I run gulp build and after that scss file was deleted.. Nope, no errors.. Thanks \ud83d\udc4d . It has happened to me once, while server was running, I run gulp build and after that scss file was deleted.. Nope, no errors.. Thanks \ud83d\udc4d . ",
    "gvsvarun": "Same issue here. I guess a require config file file has missed. Yupp. But I did a work around. Used the classes as global objects\nOn Monday, March 20, 2017, s3c0nDD notifications@github.com wrote:\n\n@gvsvarun https://github.com/gvsvarun so you do have issue and no idea\nhow to solve it :) ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/yeoman/generator-webapp/issues/641#issuecomment-287637847,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AS9-5bnKLOgXs1NXe3RqAMhPfIjik5B4ks5rnXiUgaJpZM4MglSY\n.\n\n\n-- \nMail sent by Varun,\nTypos sent by Nexus.\n. paste what files exactly?. I wouldn't say I fixed that I actually refactored the code and implemented IIFE style.\nso instead of export default SomeClass , I just wrote window.someclass = SomeClass\nAnd for instead of import {SomeClass} from './someClass' I just had to do a \nconst SomeClass = window.someClass.. Same issue here. I guess a require config file file has missed. Yupp. But I did a work around. Used the classes as global objects\nOn Monday, March 20, 2017, s3c0nDD notifications@github.com wrote:\n\n@gvsvarun https://github.com/gvsvarun so you do have issue and no idea\nhow to solve it :) ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/yeoman/generator-webapp/issues/641#issuecomment-287637847,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AS9-5bnKLOgXs1NXe3RqAMhPfIjik5B4ks5rnXiUgaJpZM4MglSY\n.\n\n\n-- \nMail sent by Varun,\nTypos sent by Nexus.\n. paste what files exactly?. I wouldn't say I fixed that I actually refactored the code and implemented IIFE style.\nso instead of export default SomeClass , I just wrote window.someclass = SomeClass\nAnd for instead of import {SomeClass} from './someClass' I just had to do a \nconst SomeClass = window.someClass.. ",
    "akash-d": "Same issue. It works now.\nThanks \ud83d\udc4d \n. Same issue. It works now.\nThanks \ud83d\udc4d \n. ",
    "tuannguyenminh2086": "I have lodash available in developement. but not in production. when I run in production mode by the  command: gulp serve:dist .  The browser will say : _ is not defined\nThanks for your quick help. I will do like you show and come back later. Many thanks. Thanks, It works.. I have lodash available in developement. but not in production. when I run in production mode by the  command: gulp serve:dist .  The browser will say : _ is not defined\nThanks for your quick help. I will do like you show and come back later. Many thanks. Thanks, It works.. ",
    "Yourdigitalheart": "Its come from yeoman itself\nParseError: Unexpected token '<' at 2:1 in https://registry.npmjs.org/-/_view/byKeyword?startkey=[%22yeoman-generator%22]&endkey=[%22yeoman-generator%22,%7B%7D]&group_level=3\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n^\n    at /Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/got/index.js:120:14\n    at BufferStream.<anonymous> (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/read-all-stream/index.js:64:3)\n    at emitNone (events.js:91:20)\n    at BufferStream.emit (events.js:185:7)\n    at finishMaybe (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/readable-stream/lib/_stream_writable.js:511:14)\n    at afterWrite (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/readable-stream/lib/_stream_writable.js:393:3)\n    at _combinedTickCallback (internal/process/next_tick.js:86:20)\n    at process._tickCallback (internal/process/next_tick.js:104:9). Its come from yeoman itself\nParseError: Unexpected token '<' at 2:1 in https://registry.npmjs.org/-/_view/byKeyword?startkey=[%22yeoman-generator%22]&endkey=[%22yeoman-generator%22,%7B%7D]&group_level=3\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n^\n    at /Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/got/index.js:120:14\n    at BufferStream.<anonymous> (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/read-all-stream/index.js:64:3)\n    at emitNone (events.js:91:20)\n    at BufferStream.emit (events.js:185:7)\n    at finishMaybe (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/readable-stream/lib/_stream_writable.js:511:14)\n    at afterWrite (/Users/insidebox/.nvm/versions/node/v6.10.1/lib/node_modules/yo/node_modules/readable-stream/lib/_stream_writable.js:393:3)\n    at _combinedTickCallback (internal/process/next_tick.js:86:20)\n    at process._tickCallback (internal/process/next_tick.js:104:9). ",
    "Migacz85": "Hello @silvenon Thank You for response i didint now where exactly I can put my question wich is not a bug releated but more a configure related. Some directions ? I was trying few options, but each time i had a php  turn on other things wasnt working. I will keep in mind your tip and try this when i will come back from holiday. . Hello @silvenon Thank You for response i didint now where exactly I can put my question wich is not a bug releated but more a configure related. Some directions ? I was trying few options, but each time i had a php  turn on other things wasnt working. I will keep in mind your tip and try this when i will come back from holiday. . ",
    "nickyweare": "After updating npm globally then locally, and running npm install again, the issue seems to have resolved itself.\nnpm update -g\nnpm update - locally\nnpm install\n. After updating npm globally then locally, and running npm install again, the issue seems to have resolved itself.\nnpm update -g\nnpm update - locally\nnpm install\n. ",
    "akshayvinchurkar1": "after doing this I still get this error\n```\n<--- Last few GCs --->\n35594 ms: Scavenge 171.4 (311.6) -> 156.4 (311.6) MB, 5.4 / 0.0 ms [allocation failure].\n   36088 ms: Mark-sweep 631.5 (786.6) -> 442.0 (533.1) MB, 14.7 / 0.0 ms (+ 89.5 ms in 3 steps since start of marking, biggest step 77.2 ms) [GC interrupt] [GC in old space requested].\n   40136 ms: Mark-sweep 1154.5 (1213.6) -> 505.9 (879.3) MB, 46.4 / 0.0 ms (+ 185.1 ms in 43 steps since start of marking, biggest step 108.6 ms) [GC interrupt] [GC in old space requested].\n<--- JS stacktrace --->\n==== JS stack trace =========================================\nSecurity context: 00000207837CF791 \n    1: DoJoin(aka DoJoin) [native array.js:~129] [pc=000000F7929D377F] (this=0000020783704381 ,w=00000163E94FF361 ,x=17998088,N=00000207837043C1 ,J=0000013EE5904221 ,I=00000207837B7941 )\n    2: Join(aka Join) [native array.js:180] [pc=000000F791BC6FF2] (this=000002078...\nFATAL ERROR: invalid table size Allocation failed - JavaScript heap out of memory\n```. your gulp task is fine. any errors in the build process?. @neilhem I didn't get you. did you mean manually copy the js file in disk folder after production release if not then how to configure gulp serve task in a development phase? help with code pls.. @neilhem thanks this works\n. ok so how do i solved this?. after doing this I still get this error\n```\n<--- Last few GCs --->\n35594 ms: Scavenge 171.4 (311.6) -> 156.4 (311.6) MB, 5.4 / 0.0 ms [allocation failure].\n   36088 ms: Mark-sweep 631.5 (786.6) -> 442.0 (533.1) MB, 14.7 / 0.0 ms (+ 89.5 ms in 3 steps since start of marking, biggest step 77.2 ms) [GC interrupt] [GC in old space requested].\n   40136 ms: Mark-sweep 1154.5 (1213.6) -> 505.9 (879.3) MB, 46.4 / 0.0 ms (+ 185.1 ms in 43 steps since start of marking, biggest step 108.6 ms) [GC interrupt] [GC in old space requested].\n<--- JS stacktrace --->\n==== JS stack trace =========================================\nSecurity context: 00000207837CF791 \n    1: DoJoin(aka DoJoin) [native array.js:~129] [pc=000000F7929D377F] (this=0000020783704381 ,w=00000163E94FF361 ,x=17998088,N=00000207837043C1 ,J=0000013EE5904221 ,I=00000207837B7941 )\n    2: Join(aka Join) [native array.js:180] [pc=000000F791BC6FF2] (this=000002078...\nFATAL ERROR: invalid table size Allocation failed - JavaScript heap out of memory\n```. your gulp task is fine. any errors in the build process?. @neilhem I didn't get you. did you mean manually copy the js file in disk folder after production release if not then how to configure gulp serve task in a development phase? help with code pls.. @neilhem thanks this works\n. ok so how do i solved this?. ",
    "mblase75": "Yes, i was misunderstanding how it was designed to be used. . Yes, i was misunderstanding how it was designed to be used. . ",
    "islishude": "try this \nnpm i -D gulp-sass@latest. #669 . try this \nnpm i -D gulp-sass@latest. #669 . ",
    "s1n": "That only works if I have a flat hierarchy of pages rooted at dist; I do not.\nIf I have this in dist/foo/index.html, it will reference scripts/main.js, which is relative to foo, not dist. In that case, it should either reference ../scripts/main.js or /project/scripts/main.js (that is, relative path or absolute with the Github project name).. That doesn't work either. That will drop the files under dist/project and if you deploy that to GitHub Pages, it would actually be under s1n.guthub.io/project/project/scripts.. How might I modify the webapp gulp script to do this? It's already doing the useref and minification in the HTML task. The GitHub Pages deploy recipe doesn't make a mention.. That only works if I have a flat hierarchy of pages rooted at dist; I do not.\nIf I have this in dist/foo/index.html, it will reference scripts/main.js, which is relative to foo, not dist. In that case, it should either reference ../scripts/main.js or /project/scripts/main.js (that is, relative path or absolute with the Github project name).. That doesn't work either. That will drop the files under dist/project and if you deploy that to GitHub Pages, it would actually be under s1n.guthub.io/project/project/scripts.. How might I modify the webapp gulp script to do this? It's already doing the useref and minification in the HTML task. The GitHub Pages deploy recipe doesn't make a mention.. ",
    "IniterWorker": "Create a new task with unset boolean dev mode\njavascript\ngulp.task('dev-false', () => {\n  dev = false;\n});\nAdd a new task in the order of the build task\njavascript\ngulp.task('build', ['dev-false', 'lint', 'html', 'images', 'fonts', 'extras'], () => {\n  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n });. I read an comment in this case. Because, Awesome and Bootstrap don't give correctly the font directory path in the configuration of the main-bower-files. @CesarDenis \nI try with bootstrap-sass and awesome, no problem.\njson\n\"dependencies\": {\n    \"bootstrap-sass\": \"~3.3.5\",\n    \"font-awesome\": \"fontawesome#^4.7.0\",\n  }. @CesarDenis. My mistake.\nThe issue of copying is really solved. But my exemple use bootstrap-sass. The fontawesome tricked me with CDN in my app. She don't work. I'll try to explain why.\nThe main-bower-file return\njson\n{\"output\": [ \"/home/bonett_w/Documents/Jy/bower_components/jquery/dist/jquery.js\",\n  \"/my-app/bower_components/font-awesome/less/font-awesome.less\",\n  \"/my-app/bower_components/font-awesome/scss/font-awesome.scss\",\n  \"/my-app/bower_components/jquery-ui/jquery-ui.js\",\n  \"/my-app/bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.eot\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.svg\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\",\n  \"/my-app/bower_components/bootstrap-sass/assets/javascripts/bootstrap.js\" ]}\nHe found this with the help of the main bower.json file of the projet \"my-app\".\njson\n{\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    }\n  }\n}\nI'm sorry for my first bad explanation. It's my first time with \"main-bower-files\".\nThe main problematic is the bad relationship with the \"main\" section of the dependencies \"plugin/bower.json\".\nOverride the main section \"font-awesome\":\njson\n{\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    },\n    \"font-awesome\": {\n      \"main\": [\n        \"less/font-awesome.less\",\n        \"scss/font-awesome.scss\",\n        \"fonts/*\"\n      ]\n    }\n  }\n}\nor in the \"bower_components/font-awesome/.bower.json\" :\njson\n  \"main\": [\n    \"less/font-awesome.less\",\n    \"scss/font-awesome.scss\",\n    \"fonts/*\"\n  ],. @silvenon because I'm a bad boy and i don't see the default task with dev = false. I see build. I execute the build task. This practice may be familiar for me (\"build task\").. Create a new task with unset boolean dev mode\njavascript\ngulp.task('dev-false', () => {\n  dev = false;\n});\nAdd a new task in the order of the build task\njavascript\ngulp.task('build', ['dev-false', 'lint', 'html', 'images', 'fonts', 'extras'], () => {\n  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n });. I read an comment in this case. Because, Awesome and Bootstrap don't give correctly the font directory path in the configuration of the main-bower-files. @CesarDenis \nI try with bootstrap-sass and awesome, no problem.\njson\n\"dependencies\": {\n    \"bootstrap-sass\": \"~3.3.5\",\n    \"font-awesome\": \"fontawesome#^4.7.0\",\n  }. @CesarDenis. My mistake.\nThe issue of copying is really solved. But my exemple use bootstrap-sass. The fontawesome tricked me with CDN in my app. She don't work. I'll try to explain why.\nThe main-bower-file return\njson\n{\"output\": [ \"/home/bonett_w/Documents/Jy/bower_components/jquery/dist/jquery.js\",\n  \"/my-app/bower_components/font-awesome/less/font-awesome.less\",\n  \"/my-app/bower_components/font-awesome/scss/font-awesome.scss\",\n  \"/my-app/bower_components/jquery-ui/jquery-ui.js\",\n  \"/my-app/bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.eot\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.svg\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff\",\n  \"/my-app/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\",\n  \"/my-app/bower_components/bootstrap-sass/assets/javascripts/bootstrap.js\" ]}\nHe found this with the help of the main bower.json file of the projet \"my-app\".\njson\n{\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    }\n  }\n}\nI'm sorry for my first bad explanation. It's my first time with \"main-bower-files\".\nThe main problematic is the bad relationship with the \"main\" section of the dependencies \"plugin/bower.json\".\nOverride the main section \"font-awesome\":\njson\n{\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/*\",\n        \"assets/javascripts/bootstrap.js\"\n      ]\n    },\n    \"font-awesome\": {\n      \"main\": [\n        \"less/font-awesome.less\",\n        \"scss/font-awesome.scss\",\n        \"fonts/*\"\n      ]\n    }\n  }\n}\nor in the \"bower_components/font-awesome/.bower.json\" :\njson\n  \"main\": [\n    \"less/font-awesome.less\",\n    \"scss/font-awesome.scss\",\n    \"fonts/*\"\n  ],. @silvenon because I'm a bad boy and i don't see the default task with dev = false. I see build. I execute the build task. This practice may be familiar for me (\"build task\").. ",
    "tsndr": "There ist no problem to solve, this PR only adds webpack support, which enables you to include javascript files using require(\"script.js\"). It was just an idea and in my projects it works fine, so i thought, that it would be a nice feature for the webapp package. There ist no problem to solve, this PR only adds webpack support, which enables you to include javascript files using require(\"script.js\"). It was just an idea and in my projects it works fine, so i thought, that it would be a nice feature for the webapp package. ",
    "olzhaskaliyev": "yes, it is! Right in same place, where main.scss. Forgot to mention - my platform is Windows 10 Pro x64, Node.js 6.11.1 (LTS). i too used generator-webapp 3.0.1\ni saw that problem in web, but is no solutions. i'll write more details, when come to pc (I think we have a time difference of about 9 hours).\nThanks for quick answers ). Wow! You are from KZ like me! . wow, it's look like solution, i'll try tomorrow, and if it will help, issues can to be close.. Thanks for answers, but safe write not help to me, and gulp-wait it's imprecise hack i think.\nIt's realy looks like files is lock when clean and wiredep tasks run in parallel with runSequence. It's often happens when project is big. I tried to extract this tasks from array, and it's helped. But i don't know - is it correct?. yes, it is! Right in same place, where main.scss. Forgot to mention - my platform is Windows 10 Pro x64, Node.js 6.11.1 (LTS). i too used generator-webapp 3.0.1\ni saw that problem in web, but is no solutions. i'll write more details, when come to pc (I think we have a time difference of about 9 hours).\nThanks for quick answers ). Wow! You are from KZ like me! . wow, it's look like solution, i'll try tomorrow, and if it will help, issues can to be close.. Thanks for answers, but safe write not help to me, and gulp-wait it's imprecise hack i think.\nIt's realy looks like files is lock when clean and wiredep tasks run in parallel with runSequence. It's often happens when project is big. I tried to extract this tasks from array, and it's helped. But i don't know - is it correct?. ",
    "sahibhuseyn": "ofcourse. ofcourse. ",
    "A-Allam": "Thanks @neilhem.\n. Thanks @neilhem.\n. ",
    "ivoba": "Fonts are moving to '.tmp' on build since build is dev mode.\nAre you looking for them in 'dist'?\nThen use default, default is not dev mode.\nSee: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L95 . Fonts are moving to '.tmp' on build since build is dev mode.\nAre you looking for them in 'dist'?\nThen use default, default is not dev mode.\nSee: https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L95 . ",
    "S4nG0": "This is happening because Bootstrap is no longer being published to Bower.. @sticky00 No worries, I've been facing the same issues as you. It was working perfectly fine a couple of weeks ago until I realized that installing bower components would always fail when installing the bootstrap 4 package. I tried to seek workarounds until I came across a post from a BT4 dev which stated that they had dropped BT4 support for bower and that people should install the package via npm.\nI've been scratching my head at trying to make it work with webapp but I guess we'll have to wait for an update from the devs of this app. Until then, I'm simply downloading BT4 sources as a workaround.. This is happening because Bootstrap is no longer being published to Bower.. @sticky00 No worries, I've been facing the same issues as you. It was working perfectly fine a couple of weeks ago until I realized that installing bower components would always fail when installing the bootstrap 4 package. I tried to seek workarounds until I came across a post from a BT4 dev which stated that they had dropped BT4 support for bower and that people should install the package via npm.\nI've been scratching my head at trying to make it work with webapp but I guess we'll have to wait for an update from the devs of this app. Until then, I'm simply downloading BT4 sources as a workaround.. ",
    "sticky00": "@S4nG0  Do you know if yeoman will be replacing bower with another package manager? Or if running another package manger with webapp will achieve the same thing?\nIt was working a couple of months ago when I had built it with bootstrap4. I understand bower has become deprecated, but it's a little annoying bv4 isn't published when yeoman still gives the option.\nMuch thanks for the reply! I spent far too long trying to troubleshoot it before posting here.. Thanks @S4nG0 , saved me some cyclical headbanging.. Would be so good if they introduced a different framework altogether.. @S4nG0  Do you know if yeoman will be replacing bower with another package manager? Or if running another package manger with webapp will achieve the same thing?\nIt was working a couple of months ago when I had built it with bootstrap4. I understand bower has become deprecated, but it's a little annoying bv4 isn't published when yeoman still gives the option.\nMuch thanks for the reply! I spent far too long trying to troubleshoot it before posting here.. Thanks @S4nG0 , saved me some cyclical headbanging.. Would be so good if they introduced a different framework altogether.. ",
    "gingell": "thank you!. thank you!. "
}