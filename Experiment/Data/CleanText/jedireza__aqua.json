{
    "jedireza": "Thanks for opening an issue.\n\nIs there a place where how things fit together is discussed?\n\nNot yet. I'll use this conversation to begin a technical walk through and add it to the wiki.\n\nIs this a SPA? If so, why are there different routes on the server for the views? \n\nIt's more like a few single page apps in a larger system. The home and about pages just demonstrate simple server side rendering. The signup and contact pages serve as good examples of Flux in a super simple use case (one form). Then the login and account pages step it up a bit, using react-router, to demonstrate Flux with slightly more moving pieces. Then the admin page is where the meat of the system is.\n\nWhere is the client side router set up?\n\nYou'll find a Routes.jsx file inside of each page that manages routes. For example:\n- https://github.com/jedireza/aqua/blob/master/client/pages/account/Routes.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/admin/Routes.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/login/Routes.jsx\nThese are the three pages that manage client-side routes.\n\nI see each page exports it's own routes for the client side router, but there are they bundled up?\n\nWe've configured webpack to bundle each page into it's own file along with a core file that contains code shared across pages.\n\nI'm happy to answer questions so let's keep this thread open while we find the most common ones.\n. > I see those routes, but they are being exported... where is the React router object that uses them?\nEach page has an entry point, the convention has been to name it index.jsx in the root of that page's directory, for example:\n- https://github.com/jedireza/aqua/blob/master/client/pages/login/index.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/account/index.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/admin/index.jsx\n\nWhy did you choose to mix gulp and webpack when webpack can do everything gulp can do and then some?\n\nI was originally using browserify and gulp. At one point I had some trouble getting the bundle file sizes to be reasonable. I came across the webpack article \"usage with gulp\", swapped out browserify and was pretty satisfied with the file sizes. Also, there are some tasks like $ gulp clean that I didn't see alternatives for.\nI'm a fan of simplifying stuff. I'm not married to webpack or gulp. This was my least favorite part of building the app so far :wink:.\n\nGreat questions. Keep them coming.\n. > 1) You have given me lots of ideas with this project, so thank you.\n:pray: thank you.\n\nThanks for showing an example of confidence. I've always had a hard time understanding how to use it.\n\nConfidence is really great. I hope we're using it they way it was intended.\n\n2) It is a bummer, we have to compile the .jsx files in the client directory to .react.js for code coverage. I am guessing there is no other reason? I will attempt to look at the lab side of it again since I have similar troubles :(\n\nYes that's the only reason we're creating *.react.js files. I'm not too thrilled about it but, I like lab way too much :grin:. I thought we were getting close with https://github.com/hapijs/lab/issues/306. You might have closed that issue a little soon. I don't know much about sourcemaps, but there is a flag in lab to use them. I'm confident we'll figure it out soon enough.\n\n3) It would be great to see an actual isomorphic example of the same react code being server side and client side rendered. I know it forces a lot of questions though.\n\nSo far, I've purposefully stayed away from isomorphic design patterns. Isomorphic apps require a level of assumptions/opinions I didn't want to introduce. I've used Aqua as a learning experiment, to build a larger-sized app with a vanilla Flux implementation.\nWe are doing a bunch of great stuff with isomorphic JavaScript at Yahoo with Fluxible though, if you haven't, please check it out. Disclaimer: I joined the Fluxible team last November.\n\nRight now, if you go to the contact page for example with javascript disabled, you do not see the form.\n\nI'm not sure if that's a problem Aqua should try to solve. Or do you mean just adding <noscript>Your experience is lacking.</noscript> as a basic warning to the user?\nI'd like Aqua to stay light, modern and forward thinking. But we should define what browsers/experiences we expect support for and mention it in the README.\n. @sthagman \n\nThis is a great project to find for someone like me who just got interested in trying to use React, Flux, and Hapi. Also Fluxible looks really cool and I will definitely be checking it out as well.\n\nGreat to hear it.\n\nWhat is sent down in the initial request? What if anything is rendered on the server? When does react-router take over and when does the view just get rendered on the server if at all?\n\nThese routes are handled by the web server. They are responsible for rending the initial page. (I've linked them to their handlers)\n- /\n- /about\n- /account/{glob*}\n- /admin/{glob*}\n- /contact\n- /login/{glob*}\n- /signup\nYou'll notice that /account, /admin and /login have that {glob*} definition in their path. This is a wildcard param (see the hapi routing tutorial). So for example, our login handler will handle requests for /login, /login/forgot and also /login/nothing. Yes, we send the exact same response to each of those requests.\nClient-side each page has an entry point. Let's focus on the ones with routing.\n- https://github.com/jedireza/aqua/blob/master/client/pages/login/index.jsx (routes)\n- https://github.com/jedireza/aqua/blob/master/client/pages/account/index.jsx (routes)\n- https://github.com/jedireza/aqua/blob/master/client/pages/admin/index.jsx (routes)\nThis is where things get started on the client. You'll notice this at the bottom of entry point file:\njs\nif (!module.parent) {\n    window.app = App;\n    App.blastoff();\n}\nThis is just saying, if we're not being required, assign a reference to the App on the window object and execute App.blastoff(). This pattern allows us to more cleanly test the entry point.\nAfter that it's just react router doing it's magic.\n\nI think that this would not only be helpful to me, but would be a great quick addition to the README while you work on a more substantial documentation of the code.\n\nAgreed.\n\nGreat questions. I hope I addressed everything well enough.\n. @bewest \n\nIs this intended to be a next-gen drywall?\n\nYes and no. I'd like to see Drywall remain as the Express/MVC version. I talk more about this here: https://github.com/jedireza/drywall/issues/268.\n\nIt looks like dealing with groups is a bit easier?\n\nYeah instead of having an array of groups, we're just using an object where the keys are the group id and the value is the name.\n\nThere's a new REST api?\n\nYeah. Before Aqua I released Frame, which is just a user system API, no front-end implementation.\n\n:+1: Thanks for bringing these things up.\n. @ldesplat I'm really glad to see that PR for lab. :cake: \n. @bewest I think your scenario is an edge case. These apps were not intended to be part of a larger app. The intended use is to create a new app with them as the starting point. I don't want to take this thread off course. Going forward, let's move this discussion into a new issue.\n. @ldesplat yes, I've been following. Very cool.\n. Yeah I was thinking about that during cf9ea49a973b9dc73e23d8b09fee4a8c62298eab. I think you can use label(...) to customize the keyName but further customizing the validation messages may require that you do validation via a pre-handler.\nSee: https://github.com/hapijs/joi#anylabelname\nIf you're willing to share your progress as you learn more I'd be interested in hearing about it.\n. Yes, i18n isn't something I've approached yet.\n\n\nMessages from pre (like the one you made to check for a duplicate username) appear to be in a class of their own. They show above the signup form, unlike the Joi validation messages, which display underneath the input fields. \n\n\nMy suggestion to do your own validation in a pre assumes that you'd remove the config validation. Not ideal, I know.\nIn order for the messages to appear under the form elements, you'd need to emulate the same format that joi outputs so the front-end validation parser helper handles them correctly.\nThanks for sharing the link to that discussion, I'll try to read it when I get more time.\n. That's actually pretty good, thanks for sharing!\nFor anyone else following along:\nhttps://github.com/hapijs/joi#validatevalue-schema-options-callback - specifically look for the language option.\n. @MetaCoderHirschl thanks. I've opened #29 for this.\n. @dmt0 originally I had planned to include 3rd party strategies. But now I think it's best to keep the code base simpler and leave these types of changes to the consumer of Aqua.\n. @andyfenelon I built Drywall with Express and wanted to make something with hapi. :shipit: \n. FYI: I'm closing this issue since it's really old. Aqua will get updated sometime after react-router hits v1.\n@TomerAvni jumping into Aqua without knowing more about the tools it's built with is a lot to take on at one time. There's a discussion repo in the hapi organization where more people could help out with the basics of hapi apps. You may also want to checkout Frame, which is just the API part of Aqua (and more recently updated).\n. Thanks for creating a pull request. One reason why I'd lean towards keeping it, is that the forgot your password email needs it to form a complete url.\nSeen here:\nhttps://github.com/jedireza/aqua/blob/ba0319272fe6510fd55744526e95a542d4ddbb1b/server/api/login.js#L200\nI actually have a different issue with setting the host on Heroku though. It shows up like this when I use  request.server.info.uri (if it's not defined).\nhttp://3c643877-3916-4b58-8282-15b888c446c9:18217/\nI haven't had much time to debug yet though. Your solution might be the right one. Let's keep this PR open for now.\n. Closing in favor of #24. Thanks again for bringing this up.\n. Thanks for creating a pull request. I tested locally and it seems to be working fine. I also tested without instantiating the TestLocation and it also works. Good catch with the /lib directory update. But otherwise let's keep the variable capitalized on the require line and not instantiate it. The endsWith approach is also nice.\nOnce you make those changes and squash the commits I'll be happy to merge it.\n. You're right. My apologies. I tried with a fresh install and got similar errors. The convention I'd like to follow would be:\n``` js\nvar React = require('react/addons');\nvar RouterTestLocation = require('react-router/lib/locations/TestLocation');\nvar Lab = require('lab');\nvar Code = require('code');\nvar Proxyquire = require('proxyquire');\nvar TestLocation = new RouterTestLocation();\nvar lab = exports.lab = Lab.script();\n// ...\n```\n. Thanks!\n. :+1: Let us know if it still fails. If not, feel free to close this issue.\n. Would you be willing to share what operating system you're running and also what you get when you run:\njs\n$ npm version\n. Interesting. That seems to be the same setup I'm running locally. I pushed some changes last night to upgrade joi. Let's make sure your npm cache is cleared, do a fresh clone/install and see what the test results show you.\n. great to hear :fireworks: \n. We're blocked on this until react-router get's updated.\n. Thanks! I can't wait to check this out\u00a0after work. :tada: \n. These changes are great. Great work getting this done.\nI made some small fixes you can pull into your fork's branch and then we can merge this.\n. Oh how interesting. I have at test for this locally that was identical to the test in your PR. I thought it was a mistake that you added a \"duplicate\" test... now I see it's being ignored via .gitignore.\n. Ah, ok. Now I see that although the threshold defaults to 100 using -t 100 changes the exit status. Thanks :+1:, let's get that in here too then.\n. Thanks!\n. Thanks for opening an issue.\n$ npm run setup failing wouldn't surprise me though if the $ npm install step failed. So we'll need to figure that out first.\nI don't have a lot of time to test with Centos7. I'll leave the issue open for a couple days. If you uncover more details, post them here.\n. Any updates?\n. Closing for now. Please post again if you find more details.\n. Thanks for opening an issue. I don't have experience with Digital Ocean myself but the live demo for Aqua on Heroku is alive and strong. Have you seen anything in your server logs that seems suspect?\n. I don't think you need to instrument anything special to look at the error logs. We'd be looking for an error stack of some kind.\nPossibly similar issue: https://www.digitalocean.com/community/questions/node-js-keep-stopping-no-errors-logged\nI'll leave the issue open for another day or two.\n. Sweet. Glad you got it working.\n. Thanks for creating an issue and reporting the bug. :cake:\nI have confirmed the bug with the sign up which is fixed with #19. The first snippet you showed doesn't actually happen on server start, but when you POST to /signup since that route is configured to try session authentication (so we can set the session). I don't think it's cause for worry.\n. > thanks for the great app\nThank you. I'm glad you're enjoying it :v:\nFor the live demo I followed these instructions:\nhttps://devcenter.heroku.com/articles/nodejs-support#customizing-the-build-process\nAnd added a config var: NPM_CONFIG_PRODUCTION=false. You can do this via the heroku command line client or via the web interface.\nThen I added a postinstall script to my package.json to run $ gulp build after all dependencies have been installed.\njs\n{\n  \"name\": \"getaqua\",\n  \"scripts\": {\n    // ...\n    \"postinstall\": \"gulp build\"\n  }\n  // ...\n}\nI hope that helps.\n. Thanks for sharing @mistermendez :cake: \n. @MetaCoderHirschl you have posted the auth credentials to your database publicly. It's time to change your database password ASAP.\n\nso when you deployed you kept the script to \"start\": \"gulp\" and didn't include a procfile\n\nI didn't change my package.json start script. But I do have a Procfile that's simply:\nweb: node server.js\n\nthe script in package.json for setup.js isn't run when deployed, correct?\n\nCorrect. That's just to get things going locally. When I put a site on Heroku for the first time I usually do a mongodump locally and then a mongorestore to the hosted database.\nRef: http://docs.mongodb.org/manual/tutorial/backup-with-mongodump/\n. In your comment above you posted your MONGOLAB_URI config setting.\nmongodb://<username>:<password>@<host>:<port>/<database>\n. Ok the wiki page has been added. Closing this issue.\nhttps://github.com/jedireza/aqua/wiki/Deploying-to-Heroku\n:sparkles: Thanks everyone :sparkles:\n. > Thank you for all the work you have generously shared with the Github community.\nNo thank you. :v: \nThat snippet looks like its from the signup page actions:\nhttps://github.com/jedireza/aqua/blob/master/client/pages/signup/Actions.js#L26-L29\nAlthough I don't think I fully understand your goal, you may be able to store the username in localStorage before the redirect fires and read it back out on the /account page.\nPassing the data to react-router won't help here because the browser is actually changing pages.\nI hope that helps.\n. Thanks for opening an issue. :sunglasses: \nAlthogh we do validate that emails look like valid email addresses, we're not verifying deliverability. We left those design choices up to the developer. If someone wanted to prevent abusive signups they could use a lot of logic/code found in the abusive login detection.\nNow if you leveraged a service like like recaptcha, you may not need to manage that extra server side logic.\nI'd like to see these types of features become articles/guides that go into the wiki. Drywall actually has an article on this. If you're willing to write one I'd be happy to collaborate and get it up on the wiki.\n. Thanks for creating a pull request. Although the live demo is hosted on Heroku, I'd like to leave these types of changes up to the developer. I plan on adding a wiki article that addresses deploying to Heroku.\n. I added the page Issues using Gmail SMTP to the wiki. Could those potential causes be relevant?\n. Thanks for opening an issue.\n\nFirst, what's going on here? What is the local issuer certificate in this context?\nSecond, does secure email require a certificate on the smtp server side for each private domain?\n\nThese questions are better suited for the Nodemailer team. We use Nodemailer for email transport and simply wire it up via a plugin here:\nhttps://github.com/jedireza/aqua/blob/master/server/mailer.js, passing config options to it.\n\nThird, what works out-of-the-box? Is gmail with SSL (default configuration) the only option?\n\nI have not worked with hosting on Network Solutions, Bluehost or Earthlink. I've have successfully used AWS SES and Gmail.\n. Thanks for opening an issue. :cake: \n\nI have just come across this framework and it seems like a great jumping off place...\n\nNot to banter about terminology, but it's a boilerplate not a framework. :stuck_out_tongue_winking_eye: \n\nHowever i am not quite understanding the logic behind the user management.\n\nAlthough these links are for Drywall and the code is different, the semantics are very similar.\n- https://github.com/jedireza/drywall/wiki/Users%2C-Roles-%26-Groups\n- https://github.com/jedireza/drywall/wiki/Admin-%26-Admin-Group-Permissions\nI should port those pages over to the wiki here. Hopefully these help for the time being.\n\nI think i can do this using the Admin Groups and assigning the account to the user and the user to the admin group, but that seems like it has an additional necessary step?\n\nLike I mention at the bottom of the the Users, Roles & Groups wiki page, it may be good to extend the group functionality to accounts. Also keep in mind that we're working with a non-relational db and data is de-normalized.\n\nYour milage may vary. Hopefully this project can inspire a solution that works best for you use case.\nLet's keep this issue open as a reminder to port those wiki pages over.\n:pray: thanks for getting involved.\n. Thanks for opening an issue. Did you see the wiki page on this? https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku\n. Thanks!\n. Thanks for opening an issue.\n\nWhen developing, Every time a change is made and file is save the code triggers full cleaning and uglifying which takes a while and hence we have to wait for the updates to be visible on the front-end. Would be nice to separate the build for dev and production environment so when developing a lot of those steps are skipped.\n\nWhen I start the app with $ npm start it is running the default gulp task. The default task will start the server and watch for asset changes and only run tasks related to those changes. So when I make changes locally webpack only builds the relevant files.\nAre you running the app differently?\n\nFor the front-end when making changes currently we need to refresh the page, May I suggest BrowserSync?\n\nI think this is a good change to leave out. This could make for a good wiki guide though. Would you like to help with that?\n. @AdamQuadmon yes, I wanted to migrate that content to the wiki in Aqua though.\n. The wiki has been updated (https://github.com/jedireza/aqua/wiki).\n. Thanks for creating an issue. We could add a dependencies attribute to the plugins where needed to make it explicit.\nBesides the auth plugin, we may want to do this for all plugins. As an example:\njs\nexports.register.attributes = {\n    name: 'login',\n    dependencies: ['hapi-mongo-models']\n};\nhttps://github.com/jedireza/aqua/blob/master/server/api/login.js#L304-L306\n. Too bad Glue isn't handling this for us. I take it it's not something that belongs in Glue?\nIf this is something that should change in Aqua, I'd like to compare some solutions. I'm on holiday currently and have limited time. Is anyone interested in showing some example solutions?\n. I chatted with @Marsup on Gitter and clarified my understanding. :wink:\nIf there two ways to handle the issue, I'd like to compare them. @zoe-1 or @FennNaten feel free to show some example solutions before we roll forward with a PR.\n. @FennNaten thanks for creating these examples. I'm still on holiday and I'd like to spend some time on this when I'm back.\nI did quickly compared the diffs and the server.dependency seems like a better approach since the prePlugins example removes a lot from the manifest.\n. Thanks!\n. Thanks for opening an issue.\n\nI've noticed that Aqua is missing a few features when compared to Drywall. ... Complete documentation, Sitewide search, Social signons\n\nThis was done on purpose.\n\nHow production ready would you consider Aqua vs. drywall?\n\nI'd reach for Aqua before Drywall today. Especially because of the test coverage, as Drywall has none at this point. I'd say they're both just as dangerous as the next. :wink:\n\nWhat is the roadmap (if any) for porting over other features?\n\nThere is none. I'd be more interested in what we can take away.\n. Thanks for opening an issue. I touched on this a while ago:\n\nI've purposefully stayed away from isomorphic design patterns. Isomorphic apps require a level of assumptions/opinions I didn't want to introduce. I've used Aqua as a learning experiment, to build a larger-sized app with a vanilla Flux implementation.\n\nI wrote that when I was at Yahoo and working with the Fluxible team.\nAlso, I don't see an upside in making the admin CRUD screens isomorphic since they're behind authentication and not meant to be indexed by search engines. I'll continue with the assumption that we're not talking authenticated screens.\nI've done a talk on isomorphic apps and how we brought Flux to the server with Fluxible. In that talk I demonstrate the worlds smallest isomorphic React application, which gives us a glimpse at what the high level goal is to make a page built with React.\nChoosing an isomorphic Flux framework is a big decision that'll probably come with a little vendor lock-in.\nMaking your app isomorphic will touch your stack from top to bottom. Routing on the client and server need to line up. Flux on the server get's tricky because you can't use singletons and must isolate each request and you have to make actions asynchronous so you know when it's time to render the view. You'll also need to have a data access layer done in a way so that on the server it accesses resources directly but on the client those same calls are proxied via ajax requests (see Fluxible's data services guide).\nBecause there are so many considerations it's hard to recommend one over another. My advice is to study and compare the different approaches and choose what works best for your project.\n\nIt may be helpful to review this repo: https://github.com/voronianski/flux-comparison\nRelay and GraphQL could be promising for isomorphic apps in the future: http://facebook.github.io/react/blog/2015/02/20/introducing-relay-and-graphql.html\n. Thanks for creating an issue and reporting this bug. I checked the live demo and confirmed that the results are not sorting as expected. I'm remember this working. We'll need to investigate and find out what's changed.\n. This must have been broken since we upgraded react-router a while back. We were not calling transitionTo correctly. You can see the diff here: https://github.com/jedireza/aqua/pull/46/files\nThanks again for reporting this.\n. Thanks for reporting this.\n. This is fixed now. I was missing the baseUrl config option.\n. Thanks for creating an issue and reporting this.\n. This is fixed now.\n. Thanks for opening an issue. I think the wiki page will help: https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku\n. No worries at all. :stuck_out_tongue_winking_eye: \n. > https://aqua-cb.herokuapp.com/ - I had to make NODE_ENV=production\n\nand\nheroku run node setup.js\nI think it will be useful to add to wiki\n\nGreat suggestion. I added the section Seeding your database to the wiki page.\n\nanother issue with wiki doc for deploying to heroku is that since we ignore public folder, our assets are not included.\n\nI liked the media change in your PR, just need to split the other change apart or remove it.\n\nI've also added to package.json\n\"engines\": {\n    \"node\": \"0.12.x\"\n}\n\nAqua should still work with node 0.10.x, 0.11.x and 0.12.x. We're testing all three on Travis.\n. > I wanted to do 2 separate pull requests and for some reason, when I committed a second change, it automatically added to first pull request :-(\nYou can remove/amend your commits in #51 \n\nFYI - I'm looking for a new job right now, let me know if you know some good place to code.\n- https://news.ycombinator.com/item?id=9996333\n- http://careers.stackoverflow.com/jobs/tag/nodejs\n- https://github.com/nodeschool/jobs/issues\n. Thanks for opening an issue. Let's try to fix that error with bcrypt first.\nat bindings (/home/mb/dev/EBI/node_modules/bcrypt/node_modules/bindings/bindings.js:76:44)\n\nThis sounds like an installation problem with the bcrypt module. Try running:\nbash\n$ npm install bcrypt\nDoes that install without error? If so try running setup again. If that doesn't work are you willing to share some environment info such as:\nbash\n$ npm version\n. Glad you got it worked out :+1: \n. Good question. I vaguely remember looking this up back then. I just searched javascript check for array and found this StackOverflow answer regarding this.\n. Thanks for opening a PR. :+1: \nThere are actually two changes in this pull request. Adding the media task to the build task is great. Thanks!\nRegarding the second change; changing the login web route handler, adding the check for the forgot param. It should be a separate PR if you'd like to discuss it.\n. Very nice. Thanks again for getting involved.\n. Thanks for opening an issue.\n\nWow! Now I'm confused, how does forgot password view render? I've just setup a breakpoint in WebStorm and I see it gets there, and calls \n\nAqua is like a handful of single page apps. You can see how we break them out here:\nhttps://github.com/jedireza/aqua/blob/master/gulp/webpack.js#L16-L20\nThe SPAs (single page apps) that have multiple routes, have a client-side router:\n- https://github.com/jedireza/aqua/blob/master/client/pages/account/Routes.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/admin/Routes.jsx\n- https://github.com/jedireza/aqua/blob/master/client/pages/login/Routes.jsx\nSo on the server, we only need to render the main payload and the client takes over once we render in the browser.\nI hope this helps.\n\nI need to annotate the app structure and design as a wiki page. I've opened #54 to serve as a reminder to do that.\n. Thanks for starting that page @nitingautam . Thanks for opening an issue and sharing these details.\nDo you think we should add some of these details to the bcrypt-Installation-Trouble wiki page?\n. > Yes adding some of the items to the wiki may be helpful. I started with drywall and went through the links along with other items I found. It took a few hours to get bcrypt installed. I actually had to use another work-around (cheat actually). see below. When I installed aqua i was able to use the --msvs-version switch. Would you like me to edit it?\nSure. Let me know when it's been updated.\n\nI don't think the path issues in package.json and the npm run setup issues should go on the bcrypt page though. I don't know why npm does not handle the ./ in the path to setup.js. Just removing the ./ from the package.json should suffice.\n\nBummer. I took the ./ out of the setup script and it fails on a mac. Keep in mind that the setup.js file is executable (ex: chmod +x).\n. Sure thing, you'll need to set the mongodb configuration url to the remote database (same concept as the Drywall config).\nhttps://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/config.example#L35-L55\n. You may also want to read this part of the wiki, as it may be relevant:\nhttps://github.com/jedireza/aqua/wiki/Deploying-to-Heroku#seeding-your-database\n. I'm not seeing a flash. Could you make a screen recording?\n. We need to create a wiki page for these instructions. This is an awesome start.\nKeep in mind these steps are needed for entirely new sections. If I'm adding to the admin for example, not all these steps are necessary.\n. Thanks for taking the time to detail these things. :pray: \n. @fjsousa good to hear.\n. Thanks for opening an issue about this.\nThe reason why I chose not to is because it makes breaking the code up easier. For example, if I'm a random user just browsing the front-end site, I don't need all the admin/account/login code sent down and parsed since I won't use it. Same goes for if I'm just an account and not an admin, why would I need to load and parse all that admin code that I'd never use.\nGreat question.\n. Here are some code points related to Account, there is similar stuff for Admins:\n- https://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/client/pages/admin/actions/Account.js#L77-L99\n- https://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/server/models/account.js#L21-L24\n- https://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/server/api/accounts.js#L361-L449\nUnlinking a User from an Account or an Admin record removes the relationship essentially. The error you're showing is that $unset is empty. But where we do this [1][2] it isn't empty. Can you double check or create steps to reproduce the error?\n[1] https://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/server/api/accounts.js#L421-L423\n[2] https://github.com/jedireza/aqua/blob/75932ff7d32eb9389c3f67093965b97f93955d96/server/api/admins.js#L441-L443\n. @alphastorm thanks for adding steps to reproduce. I will check this out when I get some time. If anyone else want's to debug and/or create a PR ... please do.\n. > adding entry for webpack requires to re run an app\nYup that's right. Do you know how to get around that?\n. Closing for now. Feel free to send a PR for review.\n. Thanks for creating a PR.\n. Thanks for opening an issue.\nWe started Aqua using Frame, so essentially it's baked in. There are some customizations that needed to be made, like changing the auth strategy (hapi-auth-basic -> hapi-auth-cookie) and the login functionality in Aqua will check for a session and redirect unlike Frame. Because of this they projects can drift. Frame got updated a while back for hapi v9 and I've been waiting to upgrade Aqua for when React Router v1 ships.\n. Thanks for opening an issue. I didn't plan on including it by default.\n. Thanks for opening an issue.\n\nFirst of all, thanks a lot for developing Drywall and Aqua.\n\nYou're very welcome. It's always nice to hear.\n\nI'd need to detect online presence in order to display a list of currently connected users. [...]\n\nI'd look into using socket.io if you're using express. And nes if you're using hapi.\nAt first thought I'm not sure I'd try to attach this presence data to my MongoDB documents and try to query on them later. Because this data is (usually) temporal, I'd take a look at using something like Redis. Redis is really fast and takes the load of of MongoDB while still being query-able.\n\nIn the future, we'll be developing an iOS/Android mobile app for the website. As a mobile developer, these are going to be native applications. To you, what would be the easiest user system to work with? Drywall, or Aqua?\n\nYMMV but, I'd go a step further and start with Frame. Frame doesn't come with a front-end, so this gives you the opportunity of focusing on making your business logic API really solid while keeping assumptions related to the client (website, ios, android) totally separate.\nClient side code can get stale very quickly these days. Aqua is in need of some upgrades. React 0.14 was released recently. I'm waiting for React Router 1.0 before starting to upgrade Aqua. Also I may take the opportunity to try making Aqua use GraphQL and use maybe even use Redux.\n. Thanks for creating an issue and  PR. I just replied to the PR, please see that for more details.\n. Thanks for creating a PR. I don't think we should do this by default, seems like something to be customized later.\nAlso, I grep'd the gulp-less and less.js repos but didn't see either of them using NODE_PATH, so I'm not sure how this is being affected by using the environment variable.\nFrom: https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders\n\nNODE_PATH was originally created to support loading modules from varying paths before the current module resolution algorithm was frozen.\nNODE_PATH is still supported, but is less necessary now that the Node.js ecosystem has settled on a convention for locating dependent modules. Sometimes deployments that rely on NODE_PATH show surprising behavior when people are unaware that NODE_PATH must be set. Sometimes a module's dependencies change, causing a different version (or even a different module) to be loaded as the NODE_PATH is searched.\n\nAfter reading those bits, using NODE_PATH seems like a code smell.\n. Thanks for opening an issue.\nI don't think this is related to MongoLab or MongoDB in general. If you look at the stack there it's pointing to /app/node_modules/hapi/lib/handler.js.\nThis sounds like you updated your version of hapi. In newer versions of hapi they removed the file/directory handler stuff from core and moved it to a module called inert. Just add that to your project and it should fix this specific issue.\n. :+1: :tada: \n. Thanks for creating an issue. Looks like a lot of those modules would prefer node >=4.0.0 :wink:\n\nThe README doesn't specify which NodeJS version to use.\n\nThere really isn't a required version of node yet. But with hapi@10.x moving to node >=4.0.0 we'll probably end up recommending people to use that.\nhttps://github.com/hapijs/hapi/issues/2764\nHowever, I haven't updated Aqua's dependencies in a while and I've been waiting for react-router@v1.x to land before doing a big update as there will be some larger, breaking changes expected.\n. I don't think react router would be related in that case since it operates on the client only.\n. Thanks for opening an issue. Actually, the front-end of Aqua is pretty simple and mostly static. The hamburger icon isn't implemented since we're not using jQuery and hence not using the Bootstrap jQuery helpers.\nThe admin area does indeed have this functionality. But again, we're not using jQuery so that functionality had to be instrumented manually. You can see us doing that here: https://github.com/jedireza/aqua/blob/d24c057e8612ab939d0da3cc8e16f71346a1d91a/client/pages/admin/components/NavBar.jsx#L32-L35\n\n. Thanks for creating an issue. Yes we do need to update dependencies. I've been waiting for react-router to hit v1 before starting. It looks like that's happend so... we can start working on this.\n. Thanks for creating a PR!\nI have a local branch that updates all the dependencies, syncs back up with Frame and implements changes for the latest react-router.\nI'd like to get that out before considering what you addressed in this PR. I will close for now, but let's review this stuff after that lands.\n. > Hi there. I noticed you are planning to do some upgrades as mentioned here https://github.com/jedireza/aqua/issues/66 \nYes. :grinning: I have a local PR (that I should publish) that focuses on updating all the dependencies and the changes needed for react-router@v1.x. There will be a lot of changes and I'd like to get that done before thinking about larger changes (like using Redux).\n\nI'm curious about your strategy/timing for this?\n\nAs time permits. My hopes are for this month but I have some end-of-year goals at work that are taking my focus.\n\nAqua has opened my eyes to a number of excellent solutions as I was exploring moving to Hapi.\n\nThis is always great to hear.\n\nThat being said, I'm not looking to build something that competes with Aqua as I'd love to share what I've done on my end with Aqua. The likelihood is I will end up using Aqua with my own flavor of preferences sprinkled on top:) If any of this is of interest to you, let me know. I plan to plug away at my project, but you have done a lot of work already so thank you kindly for that! Hopefully I can return the favor!\n- In regards to features: I don't want to add any more (email validation, oauth logins, etc...). I'd be happier taking features away :wink:.\n- In regards to architechture: I'd like to be as generic and light weight as possible. Considering Redux is on the table, while supporting TypeScript is not.\n\nPlease be free and expand/create new things, even if only inspried by the project. I'd love to hear about them!\nThanks again for getting involved. :+1: \n. Thanks for creating an issue. Since this isn't related to Aqua directly I'm not sure how much I'll be of help.\nBased on this line from their docs:\n\nIf using a component which requests data from your APIs, add a mapping to your webpack config for the component which will be responsible for making requests\n\nAccording to their example request handler your module needs to be an object with a request property which is the function to call.\njs\n{\n  request: function (url, data, successCallback) {\n    //do some async stuff and then call the successCallback with the results\n  }\n}\nI hope this helps and much luck. :shipit: \n. If you're referring to:\n- /client/pages/account/components/settings/AccountForm.jsx\nIt gets data from the server endpoint /api/accounts/my. You'll notice we define the fields to return here here:\n- https://github.com/jedireza/aqua/blob/master/server/api/accounts.js#L96\nYou should be able to modify those fields and see your new job field on the client.\n. Thanks for creating an issue. And yes, you're right Glue has changed a lot in the newest version. Frame (just the API) has already been updated for this.\nThere is also a branch aqua/tree/update-deps where I've started to update all the dependencies (including Glue). The remaining work there is to update the tests. One main issue with tests right now is incorrect test coverage being reported (potentially related to lab-babel). Contributions to this work is much appreciated :pray:.\n. Thanks for opening an issue. A PR is welcomed :+1: \n. This should be non issue with v4.x\n. @pankajpatel nice! \ud83d\udc4d Please open a PR from your update-deps branch to the aqua/update-deps branch.\n. That's ok, the tests aren't passing here either.\n. @ADumaine thanks.\n\nShould I wait for those to be committed since some will have an affect on other changes?\n\nIt would be great if someone could help finish this PR as I'm low on time.\n. @ADumaine there are unaddressed comments on that PR which reduces my confidence in those changes.\n. I've began working on this again. See the v4-refactor branch if you're interested.\n. Thanks for opening an issue. Did you figure things out?\n. Thanks for creating an issue. The dropdowns in our system are done with the SelectControl component:\nhttps://github.com/jedireza/aqua/blob/d24c057e8612ab939d0da3cc8e16f71346a1d91a/client/components/form/SelectControl.jsx\n. Thanks for opening an issue. :+1:\nWe're using Gulp for the front-end build system. The Gulp files are located in ./gulp/. For JS we're using using Webpack inside of our Gulp task. The file is ./gulp/webpack.js.\nRe: Bootstrap's JavaScript\n\nAlso note that all plugins depend on jQuery [...]\n\nSince we're not using jQuery we need to reimplement the funtionality as React components. For example, to get Bootstrap Modals to work, we implemented ./client/components/Modal.jsx.\nHere is a Stackoverflow question that may help:\n- Using JQuery plugins that transform the DOM in React Components?\nI hope this helps.\n. @gracedigital thanks for opening an issue and @hydrotik thanks for jumping in. :pray: \n@gracedigital, what follow up questions do you have?\n. Aqua started as a copy of Frame and added the front-end and changed to cookie/session authentication. I have a PR #79 open that updates lots of things, including some updates that Frame has already. Does that answer your question? If not, could you be more specific?\n. In Frame, we're using simple strategy via a basic scheme, which is simple for an \"API\" only setup. This is defined here in Frame's /server/auth.js file.\nAqua takes Frame and builds a more opinionated system including a front-end. Another opinion is to use session strategy via a cookie scheme, which makes it easier to create a more complete feeling system. This is defined here in Aqua's /server/auth.js file.\nMore details about authentication with hapi can be found here: http://hapijs.com/tutorials/auth\nThe error you're getting is because in the routes we define the authentication strategy differently in Frame than in Aqua.\nIn Frame we're using the simple strategy:\njs\nauth: {\n  strategy: 'simple',\n  scope: 'admin'\n},\nAnd in Aqua we're using the session strategy:\njs\nauth: {\n  strategy: 'session',\n  scope: 'admin'\n},\n. > TypeError: Cannot read property 'set' of undefined\nFor some reason requst.auth.session isn't being set. Without being able to debug it's hard to tell.\n. I just checked out the update-deps branch out and logged in... and didn't get that error. I'm not sure whats different without seeing the code. I even deleted my /node_modules directory to be sure it wasn't an unexpected dependency change.\n. Thanks for calling this out. I've fixed it in my latest wip on the v4-refactor branch.\n. Thanks for creating an issue. This sounds like you have a newer version of react-router.\nI touch on this a bit in #79\n. It sure is. See #79\n. That's where the work is happening. Help is wanted on that branch. I've been time poor as of late.\n. Thanks again for getting involved. I've began working on this again. See the v4-refactor branch if you're interested.\n. > This looks really great.\n\ud83d\ude0a \ud83d\udc4d \n\nSorry I couldn't keep up the work.\n\nYou did help by getting involved and creating a PR. Thank you! \ud83d\ude4f \n. Thanks for opening an issue. From the lout docs:\n\nendpoint - the path where the route will be registered. Default is /docs.\n\nAnd you can see that with the live demo here:\n- https://getaqua.herokuapp.com/docs\n. Good point. Would you be willing to start a PR with an update to the README?\n. Thanks for opening an issue.\n\nBuilding an app with aqua really helped me understand react and flux.\n\nThat's nice to hear!\n\nIt would be helpful to see what others have done with it and how many sites exist.\n\nYou can start with people who have forked to see if anything interesting is there. I've never polled people so I'm not sure what's in the wild.\n. Thanks for creating a PR!\nSorry for the delay on merging. I think I need to fix something in the .eslintrc file before the build will pass.\n. Closing since lout was removed in v4.x.\n. @forgetaboutme Unless the new route files are required somewhere in the tree, they won't show up as needing coverage. Create test matching test files with no tests and you'll see the lack of coverage.. Recently I noticed some strange code coverage results:\nCoverage: 100.70% (-102/14494)\nThis needs to be investigated further.. No, not only 4. More like what we have on Drywall (http://jedireza.github.io/drywall/).\nI'm actually working on this right now. I have this old casperjs script (https://github.com/jedireza/drywall-screen-shots) that will take the screenshots for me.\nI'm updating the code now to take the screenshots for Aqua. I'll drop a link in this thread to the new screenshot script when I'm done.\n. The screenshots are generated.\nhttps://github.com/jedireza/aqua-screenshots\n. Thanks for opening an issue. Could you be more clear? What's the bug? How can I reproduce it?\n. It's not giving me a 403 on desktop chrome but it is on Android chrome. I suspect this is from the crumb csrf config. If you remove the crumb plugin from the manifest.js file you should be unblocked for now.\nWe may need to configure csrf differently.\n. > Hey and thank you for the wonderful project.\nThank you\n\nBTW, is there a chance you release a migration guide for projects which are already in development?\n\nI didn't plan on it. If you're migrating from an older version of Aqua, I suggest you compare a simple section like Statuses and note the differences. There are quite a lot of changes though.\n\nI am very new to javascript and node but I have many (10 years) experience of php. I used phpstorm/webstorm to generate the node project files.\n\nCool. In these situations I suggest giving yourself time to get comfortable with Node. \n. Thanks for opening an issue.\nTake a look at the wiki page. https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku\nIf you have more questions we can re-open this issue.\n. Thanks for opening an issue.\nWe're using crumb, which helps diminish csrf attacks. You'll get a new csrf token (via cookies) on each response from the server. The front-end code looks for this token and passes it back to the server via the X-CSRF-Token header with each request made to the server.\nThis does make it harder to interact with the API manually, or via apps like Postman since you have to do that dance of finding the token from the cookie header and passing it token back via the X-CSRF-Token header with your next request.\nPossible solutions:\n- You could disable crumb by removing it from the manifest.js file.\n- If you only want to disabled csrf protection during development you could modify manifest.js to only include crumb when NODE_ENV=production.\n- You can see if a different configuration would work better for you; see the crumb docs.\nI hope this helps. If you find out you're still getting a 403s without crumb, by all means open a new issue. \ud83d\udc4d \n. I created a new wiki page for this too :shipit: \nhttps://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints\n. > I was going through the crumb docs and stumbled upon an issue in their repository. hapijs/crumb#54\nI'm not sure if that issue is relevant here. It also sounds like they fixed whatever the issue was there.\n\nDoes this require us to change the way we handle X-CSRF-Token for the api endpoints ?\n\nIf you want to interact with the api endpoints directly and not have to do the cookie/crumb dance, then yes. I noted some possible solutions.\n. Thanks for opening a PR!\nI think this is better served as a wiki page. I set it up over here: https://github.com/jedireza/aqua/wiki/Running-with-Docker\nFeel free to make changes as desired.\n. It does. Aqua has CSRF setup though. There's a wiki page on this here:\nhttps://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints\nIf you find out this isn't related to crumb, or caused by another bug, let's re-open this issue.\n. Thanks for opening an issue.\nI see in the output there: node: bad option: --inspect.\nTry removing the --inspect option from the ./gulp/nodemon.js file and let us know if the app starts up.\nhttps://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/gulp/nodemon.js#L8\nBy the way, what version of node are you running? Let's see the output of $ npm version.\n. Nice. I have set the engines property in package.json to >= 6.0.0 and I'm only testing against v6.x on Travis.\nI'd like to know if you upgraded to v6.x if --inspect would work on Windows. It's a super simple way to get a debugger running for your app.\nAlso, FYI, v6.x enters LTS in a few weeks. I try to use the latest stable version.\nhttps://github.com/nodejs/LTS#lts-schedule\n. > I updated to v6 and it runs normally.\nYou mean with the --inspect flag?\n\nI should notify though that during the install, I ran into a \"Cannot find module 'unicode/category/So'\" which was fixed by install unicode locally.\n\nHmm. unicode is not a direct dependency of ours. I think it's being brought in from slug, which we are using. I just did a fresh install and didn't see that message. Could be a fluke. If you see it consistently, and we have steps to reproduce, we should open an issue with slug and/or unicode as needed.\n. \ud83d\udc4d it's all you. You should fork this repo, create a feature branch and create your pull request against that. \nThese may help:\n\nhttps://gist.github.com/Chaser324/ce0505fbed06b947d962\nhttps://help.github.com/articles/working-with-forks/\nhttps://help.github.com/articles/creating-a-pull-request-from-a-fork/. Closed via #177 \ud83c\udf89 . @GuilhermeJabur would you like to work on this?. Let's imagine we wanted to apply notes or status to another record besides accounts (like admins for example). In that case, we should be able to share the notes and status components (like we do with the shared delete form).. I actually had these mostly done locally \ud83d\ude09.. Thanks for opening an issue.\n\npromptly is a dev dependency, sounds like it didn't get installed on Heroku.\nHave you set the environment variable NPM_CONFIG_PRODUCTION=false for your Heroku app? See: https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku#dependencies-and-build-files\n. Hmm. You'll need to figure out why promptly didn't get installed when you deployed to Heroku. I can check that promptly got installed for the live demo like this:\nbash\n$ heroku run npm ls promptly --app getaqua\nRunning npm ls promptly on \u2b22 getaqua... up, run.9956\naqua@5.0.1 /app\n`-- promptly@2.1.0\n. https://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints\n. Yeah, since this HOC can be used in many places, sometimes you may want to have custom props passed to your lower order component.\nIf we simply {...this.props}, then consumers can add any props they want.. @GuilhermeJabur would you like to work on this?. Thanks for opening an issue. The key line is:\nnode: bad option: --inspect\nWhich is probably because you're using a version of node that doesn't support the --inspect flag.\nAlso see #108\n. What kind of help are you looking for? Are there specific questions you have?\n. Closing. Maybe you'll have more luck searching for freelancers and/or similar service. \n. Thanks for opening an issue.\n\nIs it possible to use a different DB than MondoDB?\n\nSure. You'll need to re-write the models.\nKeep me posted, I'm interested to see where you take it.\n. Porting is cool. Though I don't think it's worth the overhead to try making them compatible. Is that an issue you're facing specifically or just an idea or nice-to-have?. I'm not convinced that's something we should have built-in to Aqua by default. My first thought is this sounds better as a fork, if that's your route I'd like to see Frame forked instead of Aqua do folks could add whatever frontend they like most.. Thanks. Do let me know if you port or fork. I'd love to see how it turns out.. This is rad. Thanks for sharing!. Thanks for opening an issue.\n\nI'm looking into this framework for my app, and it looks pretty good!\n\nThanks. I like to refer to it as a boilerplate rather than a framework.\n\nI was wondering if it's possible to have an non-admin user to create account groups?\n\nI don't see why not. You can create API endpoints and configure authorization however works best for your app.\n\nIs this a permission that I can grant a certain role?\n\nNot exactly no. Accounts don't have a group feature by default. I suggest checking out the wiki:\n- Admin & Admin Group Permissions\n- Users, Roles & Groups\n. Thanks for opening an issue. I don't think any of those are direct dependencies of ours.\nFor example to find out where graceful-fs is being brought in we can use npm ls <pkg>:\n``` bash\n$ npm ls graceful-fs\naqua@5.0.1 /home/jedireza/projects/aqua\n\u251c\u2500\u252c gulp@3.9.1\n\u2502 \u2514\u2500\u252c vinyl-fs@0.3.14\n\u2502   \u251c\u2500\u252c glob-watcher@0.0.6\n\u2502   \u2502 \u2514\u2500\u252c gaze@0.5.2\n\u2502   \u2502   \u2514\u2500\u252c globule@0.1.0\n\u2502   \u2502     \u2514\u2500\u252c glob@3.1.21\n\u2502   \u2502       \u2514\u2500\u2500 graceful-fs@1.2.3    # <== here's one\n\u2502   \u2514\u2500\u2500 graceful-fs@3.0.11           # <== here's one\n\u2514\u2500\u252c gulp-sourcemaps@1.6.0\n  \u2514\u2500\u2500 graceful-fs@4.1.6              # <== here's one\n```\n. In the admin screens (ex: Admin > Accounts) you can see a \"create new\" button that will open the modal.\n. Thanks for opening an issue.\nWhat version of node/npm are you using? To find out simply run $ npm version. The output looks like this:\nbash\n$ npm version\n{ aqua: '5.0.1',\n  npm: '3.10.3',\n  ares: '1.10.1-DEV',\n  http_parser: '2.7.0',\n  icu: '57.1',\n  modules: '48',\n  node: '6.6.0',\n  openssl: '1.0.2h',\n  uv: '1.9.1',\n  v8: '5.1.281.83',\n  zlib: '1.2.8' }\nAlso post your terminal output with the errors.\n. https://github.com/nodejs/LTS\nSoon node@v4 is going into LTS. I'm using node@v6.\nIIRC --inspect was added to node@v6.3.x so you can either upgrade or remove the --inspect option from the gulp/nodemon.js file.\n. Thanks for opening an issue.\nThe key thing that sticks out to me is:\n\nMissing admin group membership to [root]\n\nOut of the box, this is to be expected. By default we don't let administrators manage other administrators unless they're part of the root group. And I don't suggest adding administrators to that group either. What I do suggest is to change route authorization to fit your specific needs.\nHere is an example of where we add this check to a route config: https://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/server/api/admins.js#L34-L36\nHere is where you can put new authorization \"preware\" (similar to ensureAdminGroup).\nhttps://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/server/auth.js#L74\nAlso take a look at the route config auth options:\nhttp://hapijs.com/api#route-options\n. That can be changed in this file: https://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/server/web/home/index.jsx#L13\n. Thanks for opening an issue. I'm not exactly sure what you mean, could you add more detail please?\n. The admin home page component is here:\nhttps://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/client/pages/admin/home.jsx\n. Thanks for opening an issue.\n\nHi, I'm a big fan of your earlier project (Drywall) and have used it to bootstrap a couple of my own web apps I use personally.\n\nThanks, that's always nice to hear.\n\nI'm not as quick as others to jump on the React bandwagon. To me the maintenance cost of fragmenting HTML into separate files/components seems higher than ease of not having to think about how the DOM is rendered. However, with my current app, I need to generate a lot of complex and dynamic components and it's starting to look like React may be a better fit for that than Backbone + jQuery.\n\nIt took me a while to give it a shot too. I really like it a lot now though.\n\nEarlier version of Aqua seemed somewhat sluggish, although I'm playing with the demo now and the sluggishness seems to have disappeared.\n\nHmm, that's my first time hearing this. However, I don't think we were bundling for production as well as we are now. Checkout the history of ./gulp/webpack.js\n\nI've experienced similar sluggishness in other modern web apps and more and more started to notice by browsing their DOM that many of them share the same thing in common: they use React. At first I attributed this to the overhead penalty of React itself, but Facebook doesn't seem to share the same sluggishness and now neither does Aqua. I wanted to understand if this is simply a result of using React improperly and if the recent refactor of Aqua I see in the commits was to fix this sluggishness? Is there anything I should be aware of as I build out my app using this to prevent hindering performance?\n\nWith the latest version I did search the web about packing/bundling a react app for production, influencing the changes to our webpack config. One article that did stick out was this one:\n- http://moduscreate.com/optimizing-react-es6-webpack-production-build/\n. I just came across this and thought I'd leave a link here:\nhttps://github.com/lcxfs1991/blog/issues/15\n. @MuhammadTahirkhan yes please try to elaborate on what you need help with.\n@alecarg \n\nNow on Heroku, when doing heroku run npm run first-time-setup --app myAppName, I get a timeout and I'm unable to create an admin user, but the process does seem to run because the site now works and I'm able to register as usual. Any help with that bit?\n\nCould you share the output of that command on Heroku?\n. I'm not sure I never ran into that. However I assume :detached is preventing the prompts from showing:\nrun:detached COMMAND   #  run a detached dyno, where output is sent to your logs\n. Very cool. Thanks for sharing that. I don't have PowerPoint on my machine, but creating an email with it as an attachment with gmail, I was able to see the slides.\nIf you end up making a blog post out of this let me know, we can add a link to it in the wiki. \ud83c\udf89 \n. Thanks!\n. Thanks for creating a PR. I'm going to see what happens in that issue before merging this.\n. closing, https is back up. Thanks! No need to change the other routes.\n. I think because Joi.string().token()\n\nRequires the string value to only contain a-z, A-Z, 0-9, and underscore _.\n\nSo you couldn't have spaces for example.\n. Ah good question, probably because the model defines usernames as Joi.string().token()s.\nhttps://github.com/jedireza/aqua/blob/9b7d0c9be46c400e05c60f48eec092070b298c96/server/models/user.js#L182\nBut since during POST /api/users, usernames are limited, we could drop that for the search page.\nhttps://github.com/jedireza/aqua/blob/9b7d0c9be46c400e05c60f48eec092070b298c96/server/api/users.js#L137\n. Thanks for creating an issue.\nDrywall used to have this, as well as third party logins. I believe having these things built-in creates bloat and increases maintenance effort. I'd be more interested in taking things out rather an adding more.\nAccount confirmation can be done in many different ways (email, sms, etc...). In these cases, I think it would be better for us to create guides/tutorials and add them to the wiki. This way people can simply integrate what they need.\nIf anyone is interested in helping create a guide or know of one that we could link to, please chime in on this thread.\n. :shipit: thanks!\n. Thanks for opening an issue. Since Aqua is a boilerplate it won't become a proper module.\nHowever, many things did get extracted into proper modules over time such as mongo-models, hapi-mongo-modles, hapi-react-views, flux-constant etc...\n. Thanks for creating a PR. Did you go through the rest of the dependencies and make sure they're still in use?\n. Yup, https://github.com/jedireza/aqua/issues/95 talks about this. It's a bug in Babel.\n. Thanks for opening an issue. This is interesting because there can be multiple solutions.\nMy current preference is to put SSL/TLS termination in front of the application, which also makes it a bit easier to switch between production and dev environements. For example, using the Heroku SSL addon or with AWS using an elastic load balancer to terminate the SSL.\nOtherwise you can use the tls option passed to server.connection.\n\nThe tls object is passed unchanged as options to the node.js HTTPS server as described in the node.js HTTPS documentation. Set to true when passing a listener object that has been configured to use TLS directly.\n\nIf you're passing the key/cert combination, the tls object would look something like this:\njs\n{\n  key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),\n  cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem')\n}\nAlternatively as the docs mention you could also create a https server yourself and pass it as the listener property of the connection.\n. There was an old issue in the hapijs/glue repo that sounds relevant.\n. Thanks for sharing that @symbianm. That plugin does help with ensuring all requests use https://. I've also used static AWS s3 hosting to perform that redirect.\n. Thanks for creating an issue. What's your recommendation for a fix?\n. Thanks for sharing. \ud83c\udf89 \n. Here are the entry points for the less files: https://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/gulp/less.js#L11-L34\nEach of those are essentially the same entry points as their js equivalents. These entry points are included in the server rendered templates.\nLet's take the admin section for example:\n- the admin section includes default.min.css and admin.min.css here: https://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/server/web/admin/index.jsx#L10-L11\n- you'll notice it uses the plain layout, which includes the core.min.css here: https://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/server/web/layouts/plain.jsx#L26\nThis is a simple way to set things up, but the idea is that you can customize as you deem appropriate. I hope that helps.\n. Thanks for creating an issue.\n\nBut we also need API to let other internal systems to get user information, redirect unauthenticated users to internal user system and redirect back when they have login.\n\nCan you give an example use case?\n. Aqua took Frame and added to it. Consider it a fork of Frame. I don't see a benefit of running both boilerplates and connecting them to the same same database. That sounds like a maintenance nightmare.\nSide note: One cool thing about hapi is that you can create multiple connections in the same app bound to different ports. See: http://hapijs.com/api#serverconnections\nThe scenerio you describe is advanced so there will be more complexity getting an ideal setup. Here's what I'm thinking:\n\nHost Frame at api.example.com and change the basic authentication to use JWT\nTake Aqua and delete the ./server/api/*, ./server/models/* and ./server/mailer.js code since api.example.com is going to handle that stuff. You'll still need ./server/web/* to serve www.example.com.\nThere will be some work to get the front-end working again.\nChange the client-side code to make requests against api.example.com\nYou'll need to change the ./client/helpers/json-fetch.js function to support JWT (by default, it's relying on the browser passing cookies automatically).\nYou'll probably also have to modify crumb config and/or remove that feature: https://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/client/helpers/json-fetch.js#L21-L23 \n\nI'm sure I'm missing a lot of steps you'll need to take, but those are my fist thoughts. I hope that helps.. Thanks for opening an issue.\nNope. A lot of the core logic in the models remains. However, all server and front-end code is different. We're using hapi instead of express and react instead of backbone.\n. No, we don't have live reload included by default.. Thanks for opening an issue.\nIn the admin we use SelectControls a lot for the result filters. Ex: https://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/client/pages/admin/accounts/search/filter-form.jsx#L37-L48. Thanks for opening an issue. Have you made any progress on this? With only the information you've provided it's hard to know what exactly is the cause.. Closing due to inactivity. Please let me know if we should re-open.. @dbzmelvin if this is still a problem, please open a new issue and include some details on how to reproduce the error.. Ah. Great catch @andyfry01. We should open a new issue with your comment. I'm not sure what the best solution is yet though. \ud83d\ude4f Thanks.. New issue is here: https://github.com/jedireza/aqua/issues/236. Correct. That's why we require node 6+\nhttps://github.com/jedireza/aqua/blob/ffec3a220ee36e7f7c8ec1dc105d06ee4823a1f8/package.json#L17. Thanks for opening an issue. The cool thing about the way hapi does authentication strategies is that you can write your own if one doesn't exist. Once you create that you'd just need to change the configuration setting for the routes you want to use that strategy.\nI did find this old demo code that claims to use ldap with hapi, maybe this would be a good starting point for you.\nhttps://github.com/joyrexus/auth-demos/blob/87873aac36aed7e3aff7e95eb9a78acc1e297518/ldap-auth/index.js\nI'm sure other customizations would need to be made since User/Account creation/registration would likely be different in the case of LDAP.\nPlease update this issue with your findings and/or solutions for future searchers. \ud83d\ude4f . Thanks for opening an issue. Have you checked out the wiki page on this?\nhttps://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints. Woops. Must be a mistake. Would you like to create a PR?. Thanks!. Thanks for opening an issue. It's really up to you and what makes the most sense in your application. I personally don't try to decorate common fields like created/updated. In practice I find there can be many more timestamps to instrument (notes, status updates, etc...). . Thanks for opening an issue. It sounds like you're missing your dev dependencies. \"Running in production\" is documented in the readme: https://github.com/jedireza/aqua#running-in-production. The instructions in the README are for Heroku. You'll have to lookup the solution for Openshift or merge devDependencies into dependencies.. Thanks for opening an issue.\n\nWhen I make an edit to a .jsx files, the page does not hot reload automatically\n\nCorrect. By default Aqua doesn't include a client-side hot reloader (ex: https://github.com/gaearon/react-hot-loader).\n\neven if I refresh the page changes are not there\n\nThat doesn't sounds right. I just started Aqua and made changes to the home page, the admin home page, the admin navbar and all reflected the changes when I refresh the page.\nDo you have steps to reproduce?. \ud83d\ude4f Thanks for opening a PR. There is some cool stuff in here.\n\nadd vs code debug attach\n\nLet's create a wiki article for this instead.\n\nadd docker file\n\nLet's create a wiki article for this instead.\n\nset docker file only install production deps\n\nThis will be an issue unless you merge devDependencies with dependencies in ./package.json. See the note about running in production here: https://github.com/jedireza/aqua#running-in-production\n\nset theme jekyll-theme-cayman\n\nI'm not sure what this is for since we don't use jekyll.\n. Apologies for not being more explicit. Let's create wiki pages here: https://github.com/jedireza/aqua/wiki. Thanks for opening an issue.\nThat's interesting. I just downloaded a zip of master:\n\nAfter I unzipped and ran $ npm install. It $ npm started up without issue.. If you don't want the commit history:\n\nclone\ndelete the .git folder\n$ git init. Thanks for opening an issue.\n\nUsing Docker may be a good solution for some, though I don't think it should be included by default. A couple things that come to mind about why it's not a good idea to include:\n\nSince we require a running MongoDB instance, would we include a separate Docker container for that service too or assume it's ok to bundle it in the same container.\nAdding Docker creates one more thing to maintain.\n\nI would love to add a new wiki guide for this though. Feel free to create it.. Thanks for opening an issue.\n\nI notice that the login state doesn't persist when attempting to return to https://getaqua.herokuapp.com or other pages like /about. Is this intended behavior?\n\nYes, kind-of. If you login and then navigated your browser to /login, you'd get redirected. You can see us checking for that here: https://github.com/jedireza/aqua/blob/8726614361bf53f9fa296700af8b81f637245482/server/web/login/index.js#L25-L33\nIf you wanted to add a similar kind of check on other server side routes (/about, /contact, etc...) you could.\nI hope that helps.. Thanks for opening an issue.\nI don't use docker with Aqua myself. If I remember correctly @madnight provided the content for the wiki page. Hopefully they can help answer this question.\nPlease update the wiki and this issue with the solution when found. \ud83d\ude4f . Thanks for opening an issue.\n\nAny full stack / full page life cycle tutorial for the app would be appreciated.\n\nIt would be great if someone wants to add a wiki page on this. I think figuring it out would be part of the fun. In general though, we're not doing anything fancy or that isn't documented in the appropriate modules. Here is a brief overview.\nServer:\n - We're using hapi as the web server, so follow the trails in ./server.js, ./server/*.\n - One thing that can be confusing is that we use the glue module to compose the server, see ./manifest.js.\nClient:\n - In it's default state, the front-end is essentially 5 single page apps, some with their own routes and some without.\n   - You can see this in the webpack configuration.\n - We're using react-router on the front-end.\n   - Adding a whole new entry point will require a new server side render see ./server/www/\n   - But adding a page to /login/, /account/ or /admin/ should just require a new entry in the appropriate routes.jsx file.\nI hope that helps get you going.. Thanks for opening an issue.\n\nDo you think it is easy to change Aqua design?\n\nIt wouldn't be that bad. I suggest reading this:\nhttps://github.com/jedireza/aqua/wiki/Users%2C-Roles-%26-Groups. Thanks for opening an issue.\n\nHi I am planning to use Aqua in micro service kind of way, where user will login in Aqua and on successful login will be redirected to my main application.\n\nIn it's current state the /api/* routes will require a CSRF token, which is instrumented on the front-end.\n\nWe're using the crumb module/plugin to accomplish this. (Configured in the ./manifest.js file.](https://github.com/jedireza/aqua/blob/8726614361bf53f9fa296700af8b81f637245482/manifest.js#L42-L49)\nCheckout the ./client/helpers/json-fetch.js to see how we're getting the CSRF token and passing it back with each request.\nAlso see the wiki page on \"HTTP 403 forbidden when accessing API endpoints\"\n\nAn important question to ask is how are you going to validate user sessions in your \"main\" app.\nI hope this helps. Good luck. Please update this thread with any learning you think would be relevant for future readers.. Thanks for opening an issue. And good question.\nOriginally I started with one store per section. However the admin has over 40 reducers and deeply nesting them didn't seem like a good design choice. Especially when I noticed that each store is pretty self-contained. For example; we don't need to access state from admin/users in admin/statuses.\nIn another project started with Aqua, I do have some global/shared reducers and actions (responsible for admin and user creds) which I include and use as needed. This helps reduce unnecessarily duplicating code.\nI hope that helps. Also, if you have an alternative design in mind please share those ideas.. Thanks for opening an issue.\nVia #104 \n\nWe're using crumb, which helps diminish csrf attacks. You'll get a new csrf token (via cookies) on each response from the server. The front-end code looks for this token and passes it back to the server via the X-CSRF-Token header with each request made to the server.\nThis does make it harder to interact with the API manually, or via apps like Postman since you have to do that dance of finding the token from the cookie header and passing it token back via the X-CSRF-Token header with your next request.\n\nAlso see: https://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints\nI hope this helps. If you're experiencing something else, let's reopen this issue.. Yes, you can use a different auth strategy. Take a look at Frame, I used Postman when building that. It uses basic http auth instead of cookies.\nhttps://github.com/jedireza/frame/wiki/How-to-login. Thanks for opening an issue. More detail is needed. Please provide the error output.. Thanks for opening an issue.\n\nAs per my understanding Admins can view all users created in system, correct?\n\nNot by default. You can see here, that we require root user group membership to see all users. But you could easily configure that to fit your needs.. Thanks for opening an issue. There is nothing built-in to handle bot registrations.\nI've never used it before, but the react-recaptcha module looks like a decent option.\n. Thanks for opening an issue. I suggest reading the hapi docs on authentication.\nhttps://hapijs.com/tutorials/auth?lang=en_US\nYou may be having issues because of:\njs\nauth: {\n    mode: 'try',\n    strategy: 'session'\n}. Thanks for opening an issue. Email verification isn't built-in. You could always implement one for your app.\nDrywall did this. Maybe that old code could inspire a solution that works for you:\n\nhttps://github.com/jedireza/drywall/blob/master/views/account/verification/index.js. Thanks for opening an issue. Unfortunately with what's given it's impossible to know. I wonder if this is for a favicon or something similar. Check to see if hapi let's you add the path to logs, which would be a big help. Please update this issue with your learnings. \ud83d\ude4f . The front-end doesn't have open/close mechanics instrumented like the admin does. See: https://github.com/jedireza/aqua/blob/master/client/pages/admin/navbar.jsx. > So the mobile user can't navigate through the page?\n\nOut of the box, on the home/about/contact/login screens, no. In the admin, yes.\n\nMay we create an issue to implement it? I would be happy to contribute.\n\nEssentially what we need to do is create a single page app for home/about/contact/login. This also takes us down the path of creating isomorphic/universal routes.\nSure, let's create an issue for it. I'm time poor currently though, I'll do my best to contribute and/or review.. Thanks for opening an issue. response._id is undefined and you probably need to send that _id back in the response. For example in statuses (and most others) when we POST we send back the whole document which contains the _id field.. Yep. If you'd like that suppressed you can change the model queries in those route handlers.. Yeah I tried re-running it a couple times. I'll also test locally when I get a chance. Code changes look good so far. \ud83d\udc4d . Ok @GuilhermeJabur I updated a bunch of dependencies and got the build working again. Let's rebase your branch and try again.\nIf everything goes smoothly (I think) this is all you have to do.\nbash\n$ git fetch upstream\n$ git rebase upstream/master\n$ git push --force. Thanks!! \ud83d\ude4f \ud83d\udc4d  . Those are lint failures failures. The code coverage is a known bug.. FYI: These lint failures have been fixed and are on master.. I started working on this earlier today. It looks like v4 was released 3 weeks ago. Is there any other indication that this is a pre-release?. Thanks for sharing @symbianm.. Thanks for opening an issue. Since Aqua uses hapi, your best bet is to search hapi modules that provide this support.\n\nhttps://github.com/hapijs/bell (supports OAuth/2)\nhttps://www.google.com/search?q=hapi+oauth2. I think this is what you're looking for:\n\nhttps://github.com/jedireza/aqua/wiki/Issues-using-Gmail-SMTP. > That means, I need create a serials of pages and apis if I want support more than two roles? Am I correct?\nYes. Thanks for reporting and for the future PR. Choose the solution you think is best.. Thanks so much!. So was this not a bug?. Oh I see. Thanks for reporting and creating a PR was a great idea. I opened #195 to track this.. Thanks!. Yep looks like it's related to #194 #195 \nClosing since this is likely a duplicate of that. If you can test with #194 that would be a big help.. There is bell, which serves a similar function to passport, but is different.. https://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints\nHave you checked out this wiki page?. Thanks for opening an issue. There isn't a best approach to internationalization (i18n). I suggest you do some research and find an approach that works best for your project. I haven't yet had the need for i18n in Aqua myself yet, but here are some of the first results I've found by searching:\n\nhttps://www.npmjs.com/package/i18n\nhttps://www.npmjs.com/package/i18n-react\nhttps://github.com/yahoo/react-intl\nhttps://github.com/funktionswerk/hapi-i18n\n\nPlease update this thread with your findings.. If you had an error message it would be easier to help. But at first I'd wonder how the strings get loaded client side.. For 3rd party authentication, take a look at Bell.\nhttps://github.com/hapijs/bell. The bell docs should have all the code examples necessary. Server side Aqua is just a vanilla hapi server.\nI've decided against having 3rd party auth being built-in by default. It's a reasonably easy upgrade for anyone creating their own project.. Yeah the whole system isn't a single page app. This may change in the future.\nhttps://github.com/jedireza/aqua/wiki/Page-Structure-%26-How-to-add-new-page#client. Thanks for opening an issue. It depends, you could store the username in a cookie or some other kind of local storage. . $meta fields are treated like comments and have no side effects.\n\nconnections - an array of connection options objects that are mapped to calls of server.connection([options])\n\nDefinitely checkout the API docs on glue here: https://github.com/hapijs/glue/blob/master/API.md\nI'm not sure why I can't find the docs for $meta though... maybe open an issue on that repo.. Ah I found it. I forgot about the confidence module. That's where things like $meta come from.\nhttps://github.com/hapijs/confidence. Yep. You can remove these kinds of validation checks:\n\nhttps://github.com/jedireza/aqua/blob/eb25a5c093aa8beeb0b43bba8f61fa122e842a38/server/api/admins.js#L134-L136 (multiple)\nhttps://github.com/jedireza/aqua/blob/eb25a5c093aa8beeb0b43bba8f61fa122e842a38/server/api/admin-groups.js#L132-L134 (multiple)\nhttps://github.com/jedireza/aqua/blob/eb25a5c093aa8beeb0b43bba8f61fa122e842a38/server/api/users.js#L217-L219 (multiple)\n\nThese are in place to prevent the live demos from breaking due to people changing the details or deleting the records.\nThese all seem to also check that the user making the change is in the root admin group, which should be protection enough as long as only people in that group should be able to perform those actions.\nIn the end, be vigilant and be sure the users who have access to the route, should. \ud83d\ude09 \nI hope that helps.. > a predetermined status when the user signs up\nI'm not sure what you mean exactly.. Oh for sure. You can customize the account creation during signup here: https://github.com/jedireza/aqua/blob/dc3e3c4d86c2c7e9a0bc934a905e8aa1a8e62968/server/api/signup.js#L96-L100. Thanks @bennyn \ud83d\udd96\n\nDo you plan to build another layer on top which allows easily to boostrap CRUD applications? Because this might be the next thing which people want to do after setting up a system which provides user authentication and since you already provide a connection to a database it would be just breat if you would provide an easy way to write (and maintain) custom data sets.\n\nIn what way exactly? Is there something similar you've seen that you could link to? I ask because most of the admin screens are essentially CRUD.. Ah I see. I agree, that would be great.\nIt does take the project down a road that's closer to being a framework and I've generally avoided that. I'd be happy if someone wanted to contribute this and we could feel comfortable with the maintenance burden it could add.. I'm glad you asked. It means higher-order component. \ud83d\udd96 \nhttps://facebook.github.io/react/docs/higher-order-components.html. There are different kinds of errors.\nIf we actually get a response from the server it's caught here and handed back to the caller (usually actions): https://github.com/jedireza/aqua/blob/b3072fa11748a50ffbc16e0aee71ceca316c0cc2/client/helpers/json-fetch.js#L38-L58\nWe created some proxy functions for calling the API here: https://github.com/jedireza/aqua/blob/b3072fa11748a50ffbc16e0aee71ceca316c0cc2/client/actions/api.js\nAnd these functions can take a callback as seen here:\nhttps://github.com/jedireza/aqua/blob/b3072fa11748a50ffbc16e0aee71ceca316c0cc2/client/pages/login/actions.js#L32-L47\nSo you should have everything you need to catch errors.. Oh and let's not forget that the redux stores often use the ParseValidation helper here: https://github.com/jedireza/aqua/blob/b3072fa11748a50ffbc16e0aee71ceca316c0cc2/client/pages/contact/store.js#L24. If I'm remembering correctly this should be built-in to hapi. Checkout the route config section of the API docs here: https://hapijs.com/api#route-configuration Searching that page for the word \"upload\" landed me in the right section.\nThis Stack Overflow answer may help too: https://stackoverflow.com/a/24521136. Yeah there is model validation and there's api input validation. Unfortunately they're not the same and I'm not sure if they could be in all cases.\nWe don't use model validation anywhere in Aqua or Frame, but it is built-in to mongo-models: https://github.com/jedireza/mongo-models/blob/master/API.md#validatecallback\nIf the username's aren't validated on the way into the API with Joi, you're probably stuck with validating them manually in a pre-handler. Could you share more about the username/token change you're working on? . \ud83d\ude01 I see. Thanks for sharing this. I don't think I'll take action on this right away, but it won't be forgotten.. Yeah I think you're experiencing what we have ticketed in https://github.com/jedireza/aqua/issues/95. Thanks for opening an issue. It's really hard to help with only the information you've shared.. We're using hapijs/lab for testing, and there are --coverage and --reporter options.\nWithout being able to debug your app in it's current state, it's really hard for anyone to help further. Also realize that #95 could be a contributing factor in incorrect coverage.. Do you mean without having root user access on the machine you're installing on or without the root user that get's created in the app during the first time setup?. After the installation, configuration and first time setup, you can run the app (via the README). Once the app is running and you have it loaded in your browser, you'll see a \"sign in\" link in the top right. When you're there, use the username root and the password you set during the first time setup procedure.. Don't be sorry. Thanks for opening an issue. \ud83d\ude04 \n\nerrors like \"*.name.fourth is not defined\"\n\nThis sounds like it's happening on the client side? If so, that's probably an older record not getting a default value. You can usually address this in the redux reducers.\nWe really should make a guide for these kinds of things. If you document the process on your journey feel free to make a wiki page. \ud83d\udc4d . This is definitely in the hapijs/lab territory, so be sure to checkout those docs.\nThis is the last time we had a $ npm run test-cover script: https://github.com/jedireza/aqua/blob/d24c057e8612ab939d0da3cc8e16f71346a1d91a/package.json#L12\nI hope that helps.. Did you checkout the \"running in production\" section of the readme?\nhttps://github.com/jedireza/aqua#running-in-production. Also checkout the \"dependencies and build files\" section of the deploying to heroku wiki page:\nhttps://github.com/jedireza/aqua/wiki/Deploying-to-Heroku#dependencies-and-build-files. Nope there are no stupid questions. \ud83d\ude01 \nWhen I run $ npm test on the latest master I get:\n```\n$ npm t \n\naqua@6.5.0 test /Users/jedieza/projects/aqua\nlab -t 99 -S -T ./test/lab/transform -L --lint-options '{\"extensions\":[\".js\",\".jsx\"]}' ./test/lab/client-before.js ./test/client/ ./test/lab/client-after.js ./test/server/ ./test/lab/server-after.js ./test/misc/\n\n.......................................-..........\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ...................---............................\n  ......................-...........................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..........\n855 tests complete (5 skipped)\nTest duration: 4777 ms\nAssertions count: 1580 (verbosity: 1.85)\nNo global variable leaks detected\nCoverage: 100.58% (-85/14563)\nLinting results: No issues\n```. This sounds like it falls outside the scope of this project. The short answer is there are a few ways to accomplish your goals. \ud83d\ude04 \nHere's an example of finishing a test when a stub is called:\nhttps://github.com/jedireza/aqua/blob/b3072fa11748a50ffbc16e0aee71ceca316c0cc2/test/client/pages/login/home/index.js#L76-L79\nI found a relevant issue in the code repo issues here:\nhttps://github.com/hapijs/code/issues/66\nWhich led me to find a library some hapi contributors created called stand-in:\nhttps://github.com/continuationlabs/stand-in\nI hope this helps. Happy hunting.. \ud83d\udc4b thanks for opening an issue.\nYou may be diving in too deep right away. Aqua is built with a bunch of tools, React being one of them. If you're comfortable with JavaScript and Node (which I think is a prerequisite), you should be able to follow the execution paths and learn how things work. I have yet drafted an official annotated guide of the codebase, but someone did contribute this wiki page, which may help: https://github.com/jedireza/aqua/wiki/Page-Structure-&-How-to-add-new-page\n\nTrying to update the home page. I've been manipulating the code at server/web/home/index.jsx with little success as I need to include a few .js files (specifically google maps api scripts).\n\nThis can be tricky sometimes. Sometimes changes might not be seen without restarting the server. We probably need to make the nodemon/webpack tasks smarter. Though I have some other changes in mind, which may partially avoid some of these paper-cuts.\n\nI tried looking at the React documentation, but I can't find any information regarding the format being used with Aqua.\n\nThe React docs are great. I'm not sure what you mean by the format being used in Aqua though.\n\nI need to include a few .js files (specifically google maps api scripts).\nHow do I add additional .js files to the home page outside of const feet/neck and how exactly does react deal with the object in the return call.\n\nA general rule of thumb that I live by when working with React is to avoid changing the DOM that React manages. And I let React manage it all.\nThis is discussed a bit here:\nhttps://stackoverflow.com/questions/23530716/react-how-much-can-i-manipulate-the-dom-react-has-rendered\nOne of the React developers says:\n\nBroadly speaking, you shouldn't manipulate by hand the DOM that React has created. It's 100% kosher to create an empty <div> in React and populate it by hand; it's even okay to modify the properties of a React-rendered element as long as you don't later try to change its properties in React (causing React to perform DOM updates), but if you move an element, React may look for it and get confused when it can't find it.\n\n\nI hope this helps. Feel free to ask questions, though try to make it specific about Aqua. The tools used all have great documentation. Happy hunting. \ud83d\udc4d . > How do you keep the frame code up to date with aqua, manually?\nYep.\n\nIs there a way that we could have frame as a hapi plugin and how hard would that be?\n\nIn it's current form, the code is meant to be a starting point for a project. Once you start customizing, it's all in your hands. We could take the ideas in these projects further and try to abstract things and make generic modules out of them, but that also comes with (even) more assumptions and maintenance burden, which I'm (currently) convinced is not worth it.\n\nWhat advice do you have for someone who wants to keep up to date with your frame code while adding his own changes? Shall I use your origin and rebase over your code as updates come in?\n\nIn my opinion, the server side code (API) is the easiest to patch manually as there are much fewer changes in that part of the code base. The hardest thing to keep updated is the client-side code.\n\nIn the bigger picture, Aqua and Frame are really not that important, what you build with them is.\nThe\u00a0larger your project gets, the more of a burden it will be to keep updated. Over time tools become legacy and versions drift from the most recent. If it makes sense for your project, do it.\nI hope that helps. \ud83d\udc4d . Here's an example. I went into the status manager and added a couple statuses. The pivot was Account for both of these so they end up showing up in the drop down in the account details screen.\n\nThen in the account details screen I'm able to select one and hit change.\n\nThe statuses can be anything you like. One cool thing is that we could add a filter to the account search screen and only see accounts that have certain current status.\nAnother cool thing is that a history is kept of who change the status and when. Here I've changed the status.\n\nThe reason why there is a pivot is because we can apply this exact same pattern to a new collection, like account orders for example and have order statuses.\nI hope that helps answer your question. \ud83d\udc4d . > Every time I restart the server the favicon gets replaced\nI'm not sure how you're editing the favicon but in the latest version, the favicon can be updated in the server side page templates:\n\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/server/web/admin/index.jsx#L15\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/server/web/account/index.jsx#L15\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/server/web/main/index.jsx#L24\n\n\nAlso, how can I set a responsive nav for mobile phones on the home screen?\n\nI just merged a new universal front-end (like 30 mins ago). This works just like the admin now. So all should be good.. You're not supplying enough information for anyone to help. You should provide the stack trace for the error.\nAnd instead of sharing code via zipped files folks have to download (which I've removed), you should create a reproducible example and host it on a GitHub.\nThis is likely to be caused by not providing default values in your redux stores.. > How do I provide a stack trace?\nI'm glad you asked. \ud83d\ude04 this.state.foo is undefined is the error message, but usually when you see that you see a list of function calls and line numbers, that's the stack trace. That helps us debug what could've caused the issue. You can either find this on the command line for server-side code and in the browser console for client-side code.\nhttps://www.quora.com/Whats-different-between-a-stack-trace-and-an-error-message. Closing for now. Open a new issue when you have more information.\nThanks for being active with the project. \ud83d\ude4f . Using react-google-login is out of the scope of this project. Though if you $ npm install react-google-login --save[-dev] then you'd need to require it in a code path somewhere for it to be part of the dependency tree that webpack bundles up.\nThough, since we're using hapijs It's probably best to work with something like hapijs/bell for 3rd party login/authentication.. If you're not getting compile errors from webpack, it's gotta be somewhere. Is it not rendering? Are you seeing an error of any kind?. If it's rendering, the code is included. Why it's disabled is the real question you're faced with. \ud83d\ude04 Happy hunting.. > When you create an user and you login you get the 'My account' page. When you then navigate to '/' you get the homepage BUT it tells you that you're signed out. (Or at least it shows the 'Sign In' link in the top right hand corner.)\nCorrect, you're not logged out.\n\nIs this intended behaviour? I would think that keeping the user 'logged in' irrespective of the page viewed should be the right behaviour. Only if the user explicitly log out or close their browser session should it go back to 'Sign In'.\n\nIntended as in designed to stay like this, no. Intended as in up to you to customize/change, yes. \nYou'll notice that if you click on the \"Sign in\" tab when you're logged in, it redirects you back to your account or the admin depending on your role.\nHere we call the getUserCreds action. Which has a handler that redirects the user if they're logged in:\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/pages/main/login/home/index.jsx#L22\nAnd here is the action handler that checks the response and does the redirect:\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/pages/main/login/actions.js#L36-L53\nYou could add logic to your main app, navbar, etc..., (using a shared store maybe) that stores the response of this action and shows the username instead of \"Sign in\" for example.. Take a look at the admin search pages, specifically the create-new-form.jsx components.\nhttps://github.com/jedireza/aqua/tree/master/client/pages/admin/accounts/search. Should we close this?. Are you talking about https://github.com/jedireza/aqua/issues/238 or this issue?. Ok I'm going to close this issue.. Thanks for asking. I don't remember my original thoughts for not using react-redux. Maybe it was to keep things simple (one less module/dependency).\nAfter skimming some of the docs...\n\nhttp://redux.js.org/docs/basics/UsageWithReact.html\nhttps://github.com/reactjs/react-redux/blob/master/docs/api.md\n\n...there are a couple things that stick out to me:\n\nFirst, connect() brings a little bit of magic to the table, which I try to stay away from with Aqua.\nSecond, I'm not a huge fan of the API. An example of some syntax that I think is confusing to look at is:\n\njs\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\nMaybe I haven't given it enough time to grow on me. The docs do mention:\n\nTechnically you could write the container components by hand using store.subscribe(). We don't advise you to do this because React Redux makes many performance optimizations that are hard to do by hand.\n\nSo I don't doubt there are some upsides to using it. I'd be interested in the effect using react-redux would have to the Aqua code base. I don't plan on spending time looking into this, but if someone wants to make a proposal and show some examples I'd be happy to work through it more then.. Thanks for creating this issue. This is a bug.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. Your callback should be getting fired. If the response code isn't in the 200s you'll need to check the err value of the callback.\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/helpers/json-fetch.js#L38-L62\nThe best thing you can do is setup some breakpoints in the debugger and watch how the code flows to see what prevents your callback from firing or if something else is wrong.. If an error exists here:\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/actions/api.js#L39-L47\nnothing is preventing a callback from being fired. Put a breakpoint on line 39 and 45 and confirm that a callback actually exists.. A 401 would be handled the same as a 400, which we handle today. Like on the login form:\n\n. I've shown that stock Aqua does gracefully handle handle 4XX replies from the API.\nAt this point the best thing to do is create a fork of Aqua with simple changes that reproduce the bug. That way others could clone it and debug themselves.\nOn the other hand, It sounds like you have started customizing things beyond basic edits, in which case, making a simple reproducible example will probably expose the underlying problem.\nThis could very well be a bug in Aqua, but we need to pinpoint where it is. Happy hunting. Thanks for being active with the project. \ud83d\ude4f . Resolved in #246. Good question. There really isn't a \"best practice\". What kinds configuration are you thinking (Ex: An S3 bucket name)? How often does it need to be updated (only once per app render)?. There's an app-state placeholder that can be used to send the redux store state to the client. Note: This is just a placeholder and isn't used for anything yet.\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/server/web/main/index.jsx#L33-L37\nYou could extend this idea to support a config prop and render a script tag with the id app-config:\njs\n<script id=\"app-config\"\n    dangerouslySetInnerHTML={{\n        __html: this.props.config\n    }}\n/>\nThen on the server, in your handler you'd do something like this:\n```js\nconst clientConfig = {\n    s3BasePath: 'https://s3.amazonaws.com/mybucketname',\n    googleClientId: 'some-client-id-thing'\n};\n// ...\nrequest.app.config = 'window.appConfig = ' + JSON.stringify(clientConfig) + ';'\n```\nThen on the client you'd assume that window.appConfig was an object and access your info directly; window.appConfig.googleClientId.. I don't think you can set the inside of a script tag this way without using dangerouslySetInnerHTML. You can see the in the output that some characters are escaped.\n\nhttps://stackoverflow.com/questions/31276926/how-to-add-script-tag-using-reactjs. I noticed you're using the older Layout component. Please note that last week I shipped a new universal front-end and no longer use that pattern.. https://medium.com/@ghengeveld/isomorphism-vs-universal-javascript-4b47fb481beb. Universal and isomorphic are used interchangeably. The main front-end app is universal now. The admin and account areas are not.. Please include stack traces when sharing errors. window is not defined isn't that helpful on it's own.\n\nI do know that the constructor of the Modal component expects the global window to be present, which doesn't exist on the server.\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/components/modal.jsx#L24\nThe main app is universal (aka isomorphic) and get's rendered on the server. You'd need to modify the Modal component to detect if global.window exists before using it.. If it works for you, that's all that matters. \ud83d\ude01 . This sounds outside the scope of Aqua.\nhttps://www.google.com/search?q=handle+browser+refresh+of+a+React+Router. The SelectControl is for meant for forms. What you probably want is to instrument a Navbar dropdown, which is built with an li and nested ul.\nhttps://getbootstrap.com/docs/3.3/components/#navbar\nYou'll need to implement logic similar to expanding the Navbar menu when on mobile:\nhttps://github.com/jedireza/aqua/blob/4e7cb75253a04e870b73e61a73842f896ecf983e/client/pages/main/navbar.jsx#L52-L55\nI've done this in another project. Here's a preview of what I do in the render method. Hopefully you can deduce the rest:\n```js\n// ...\nconst menuClasses = ClassNames({\n    dropdown: true,\n    open: this.state.menuOpen\n});\n// ...\n             <li className={menuClasses}\n                 onClick={this.toggleMenu.bind(this)}>\n\n                 <a href=\"#\">Menu <span className=\"caret\"></span></a>\n                 <ul className=\"dropdown-menu\">\n                     <li className={this.classForPath(/^\\/admin\\/foo/)}>\n                         <Link to=\"/admin/foo\">Foo</Link>\n                     </li>\n                     <li className={this.classForPath(/^\\/admin\\/bar/)}>\n                         <Link to=\"/admin/bar\">Bar</Link>\n                     </li>\n                 </ul>\n             </li>\n\n```. You'll have to work through it. Pay attention to which elements you need and what classes they need for a certain state and you should be good.. That would be great. Thanks!. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. https://github.com/jedireza/aqua/issues/172. \ud83d\udc4d thanks!. > How should I go about doing this?\n\nModify or copy the api route handler(s) to fit your needs.\nWho should be able to access the information? Do they need to be logged in?\nHow can they filter the data?\nWhat information do you return? Be careful to not send back more than you want people to see.\nCopy the front-end assets from the admin page and adapt them to fit your needs.\nReact components\nStores and reducers\nActions\n\nThat's the high-level overview. More importantly study have the existing code paths get executed and how to customize them, then you should be able to adapt and/or copy what's there to create new stuff.\nI hope that helps. Feel free to ask follow up questions on this thread. . I wouldn't say that the constructor is not the right place for the calls, but componentDidMount() is probably a better place.\nI experienced a case where different components were firing actions in their constructor (causing changes in a redux store) and both getting state from the same store causing an invariant of modifying state during a render. After some digging I moved the action calls to componentDidMount() and that resolved the invariant issue.\nUsing componentDidMount() instead of the constructor may also be better for server side rendering because IIRC, the components don't \"mount\" on the server.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. You probably don't have dev dependencies installed.\nhttps://github.com/jedireza/aqua#running-in-production\n\nNPM_CONFIG_PRODUCTION=false - This tells $ npm install to not skip installing devDependencies, which we need to build the front-end files.. After you set that you'll need to $ npm install again.. Nope. I just forgot to close this.. Thanks for starting this. Be sure to run tests and make sure they're passing and the linter is happy. We'll wait until they're all handled before merging.. Closing due to inactivity.. I usually see this when I accidentally access the site without https://.. You need to see what the server logs say. It may also be caused by an invalid CSRF token.. The server logs. You need to debug hapi and see why it's returning this in your case.. I'm not really sure about that.. I don't think so. I forget why cheap-module-source-map was chosen for production. Do you think it should be different in production?. Want to open a PR with the fix you're suggesting?. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. https://github.com/jedireza/aqua/wiki/Users,-Roles-&-Groups. After further review, I'm not sure this is necessary. I'm going to close for now. Thanks again for being active and creating a PR.. Correct. We should update admin.user.name and account.user.name when the username changes.. > SyntaxError: Unexpected token <\n\nSounds like something isn't setup properly. Possibly related to babel and/or jsx not being parsed correctly.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. Haha. No. But it does limit each logged in user to one session. . Sure thing. By default, we're just using hapi-auth-cookie internally:\n\nhttps://github.com/jedireza/aqua/blob/ea085be912494561149e1899d68cb468e5e0d144/server/auth.js#L15-L21\n\nAnd you could swap out hapi-auth-cookie for whatever strategy works best for your project.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. Thanks for picking this back up. Same comment as in #253 \n\nThanks for starting this. Be sure to run tests and make sure they're passing and the linter is happy. We'll wait until they're all handled before merging.. Awesome! Thanks. If you're feeling up to it, we could use the same patch in Frame.. I just remembered that folks can change their own usernames. We should probably update this handler too: https://github.com/jedireza/aqua/blob/6d30d0ae63165f03f60adbdfca6009ef2f39fe25/server/api/users.js#L304. \ud83d\udca5 Very cool! Thanks for taking this on. If you're up for it we can apply the same patch to Frame.. Correct we don't use import statements. We do use babel for JSX files.\n\nhttps://github.com/jedireza/aqua/blob/master/.babelrc. Sorry, I have no idea. For logging I'd take a look at good.. Yep, good will help you with that.. I'm not sure what the problem is yet, but you can't reach the site because the server hasn't started\n\n[13:15:51] [nodemon] app crashed - waiting for file changes before starting...\n\nAnd based on the second comment you left, it sounds like some dependencies (like babel) aren't taking affect.\nWhat's the operating system? What version of node? Have you followed the README?. What version of node?. That's one problem, you should use node >= 8.x\nhttps://github.com/jedireza/aqua/blob/ea085be912494561149e1899d68cb468e5e0d144/package.json#L17. Nope. I work on it when I can.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. Aqua is a boilerplate application. It's meant to be used to start new projects. Integrating it into your existing site could be an over-complicated burden.\nAs every situation is different, it's hard to give general advice in this case.. Thanks for calling this out. Luckily the content is still there. I think the markup link rules have changed. The links on the right still work.\n\n. I recently fixed these links manually.. Sure. You'd  have to re-write the models though. Likely a large undertaking. Though some other folks have ported to sql: https://github.com/jimlowrey/aqua-sql. Yep. We need a PR just like https://github.com/jedireza/frame/pull/178. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. https://www.google.com/search?q=hapijs+upload+file\nOnce you upload the file you can put it on disk or store it in a service like AWS S3 and save the path to the model.. > Missing admin group membership to [root].\nSounds like you're trying to access an endpoint that requires being part of the root admin group.. I've only seen this myself when entering in incorrect authentication details. Once you trigger this, you'll need to clear the auth attempts records.. Thanks for creating an issue. I've only seen this when the react app hasn't mounted on the page yet. This can be avoided and we should fix it.\nAn easy fix would be to change the form tag's method attribute to post.. I've decided to archive this project. Thank you for your interest and contributions.\nhttps://github.com/jedireza/aqua#no-longer-maintained. Thanks for sharing. For 3rd party authentication folks in the hapi ecosystem can also reach for bell.. Thank you for creating a PR! I'm in the middle of a big update for hapi17 and my branch does include a fix for this.. Thanks for opening a PR. Docker isn't something that needs to be included by default and the environment changes are also something that folks should customize to fit their needs. Currently the only environment variables are tied to resources and secrets.. Ah. I was setting this in the Travis UI. This is much better. Thanks.\n. Let's stick with template strings instead of concatenating.\n. This file was removed because 'RouteHandleris gone:\nhttps://github.com/reactjs/react-router/blob/master/upgrade-guides/v1.0.0.md#routehandler\n. Please remove all^characters.\n. Please follow the pattern of no^character and usingxafter largest versions. In this case0.14.x, if they have major versions, it should beN.x.x.\n. This should be v2 now right?\n. Why are we creating a new element instead of changing props?\n. I've keptjsx` our of our test files.\n. Correct.\n. Yes, we should update react too.\n. Replace with\n```\nRoute docs\n```\n. Replace with\nAPI docs are automatically generated using `lout` and can be found at `/docs` of your application (ex: http://localhost:8000/docs).\n. We can remove this line.\n. let's remove the lowercase() too\n. Let's order the requires alphabetically, EscapeRegExp coming before Joi.\n. We can remove these tests. Since pagedFind is mocked (and we're not doing an integration test) we're not actually testing that special characters don't crash the app.\n. Looks like you didn't bring the query variable along for the ride \ud83d\ude1c . Let's remove this.. This admin task (and the account task below) could be reduced to something like:\n```js\nconst filter = {\n    'user.id': request.params.id\n};\nconst update = {\n    $set: {\n        user: {\n            id: request.params.id,\n            name: request.payload.username\n        }\n    }\n};\nAdmin.findOneAndUpdate(filter, update, done);\n```\nThe results of these Admin and Account updates don't really matter. If a record exits it will be updated and if one doesn't nothing happens.\nWe've also reduced the surface area for testing by removing a lot of if/else branches.\nThis also removes the need to lookup the User. We should be able to just just fire off all the update commands and do no lookups.. Instead of destructuring user from the object being passed in, let's name the argument results and use results.user where needed.. let's keep this newline. add new line. add new line. Same as the comment above. Let's not destructure the argument.. Oh. Haha. I should've been more clear. This newline should be after the Account declaration.. Yeah two blank lines before server.route. Sorry, I know it's a minor thing. . Another example: https://github.com/jedireza/aqua/blob/6d30d0ae63165f03f60adbdfca6009ef2f39fe25/server/api/signup.js#L13-L18. ",
    "arb": "I see those routes, but they are being exported... where is the React router object that uses them?\nWhy did you choose to mix gulp and webpack when webpack can do everything gulp can do and then some?\n. ",
    "ldesplat": "Hopefully, I am allowed to hijack this a bit :)\n1) You have given me lots of ideas with this project, so thank you.\n- Love the test coverage. I attempted to use jsdom in another project with lab and that messed with my test coverage reporting. So this is very interesting the way you have done it here.\n- I agree with you, setting up the mess of webpack, gulp, browserify, ... is very uninspiring\n- Thanks for showing an example of confidence. I've always had a hard time understanding how to use it.\n2) It is a bummer, we have to compile the .jsx files in the client directory to .react.js for code coverage. I am guessing there is no other reason? I will attempt to look at the lab side of it again since I have similar troubles :(\n3) It would be great to see an actual isomorphic example of the same react code being server side and client side rendered. I know it forces a lot of questions though. Right now, if you go to the contact page for example with javascript disabled, you do not see the form.\n. > Yes that's the only reason we're creating *.react.js files. I'm not too thrilled about it but, I like lab way too  much :grin:. I thought we were getting close with hapijs/lab#306. You might have closed that issue a little soon. I don't know much about sourcemaps, but there is a flag in lab to use them. I'm confident we'll  figure it out soon enough.\nI have submitted a start of a PR#311 to lab, so we'll see. I actually have it working with aqua.\n\nWe are doing a bunch of great stuff with isomorphic JavaScript at Yahoo with Fluxible though, if you haven't, please check it out.\n\nWill definitely check it out!\n\nI'm not sure if that's a problem Aqua should try to solve. Or do you mean just adding Your experience is lacking. as a basic warning to the user?\n\nI think, keeping focus on what Aqua is supposed to be is great. I was just making the point that potentially search engines and obviously those without javascript will not be able to see the form and that's fine. I think defining that javascript must be enabled for some parts of the website to be very reasonable :)\n. @jedireza That PR has now been released in Lab 5.3.0. Unfortunately, I need to land 1 more PR to make aqua work with it (sourcemaps support issues, need to specify an option to lab's dependency source-map-support). I have a PR for aqua ready as soon as I get that done. I could give it to you but you would get wrong line numbers for coverage and errors right now.\nAlso, aqua works great with iojs and jsdom 4 (with minor change)!\n. Nice job fixing the issues. Interesting how you solved them!\nI know config.js is generated and that might be why you don't want to add a test, but my OCD can't take that Coverage: 99.99% (1/12464) line! :)\n. Also, instead of -c, you could include -t 100 in the Lab command line. It will fail the travis builds if you are under 100% test coverage.\n. ",
    "samhagman": "This is a great project to find for someone like me who just got interested in trying to use React, Flux, and Hapi.  Also Fluxible looks really cool and I will definitely be checking it out as well.\nOnto my question:\nI understand a lot of what is going on but the overall flow of the application seems lost on me.  I wonder if you could do quick step-by-step of how the application initializes itself.\nFor example:\n1. Hapi receives HTTP Request for '/index'\n2. ....\n3. React and Flux are fully initialized on the client.\nIf you could touch on these topics that would be great as well:\n- What is sent down in the initial request?\n- What if anything is rendered on the server?\n- When does react-router take over and when does the view just get rendered on the server if at all?\nI think that this would not only be helpful to me, but would be a great quick addition to the README while you work on a more substantial documentation of the code.\n. ",
    "bewest": "Is this intended to be a next-gen drywall?\nIt looks like dealing with groups is a bit easier?\nThere's a new REST api?\nI changed my mind on earlier integration as a module, and am now looking at dropping in http-proxy: when user is logged into drywall/aqua process, proxy to backend target, otherwise use the local app logic/views etc for auth management.  Works fairly well as quick prototype, but now looking at using express.Router( ) to keep drywall's middleware such as body parsing separate from the proxy logic.\n. Adding a prefix/SCRIPT_NAME.  When working with fast-cgi's or similar, it's a common need to make all links relative within the app, passing it a SCRIPT_NAME via environment variable to let it know to ignore, or \"mount at\" some prefix.\nFor example, the acqua frontend/drywall apps might reside in a larger app with other routes to eg, /, that conflict with the routes set up here.  In https://github.com/bewest/drywall-rev-proxy/pull/1/files#diff-0364f57fbff2fabbe941ed20c328ef1aR163 I took a shot at using express.Router( ) to isolate all the existing routes so that we could choose which set of routes to use.  In this case, if the user is logged in, and has permission to view the resource, the resource to serve will actually be proxied.  In any case, I had this need creating a mount prefix both when combining with other projects as side by side modules, and also for proxying, so curious what people think of the idea.  The \"prefix\" generation in the patch above is a mere quick hack to test whether or not the approach might work (it works, but need something better).\nRight now I'm thinking of setting up config.SCRIPT_NAME, and prefixing it almost everywhere, looks like there are around 50 places or so.\n. ",
    "alex-dixon": "I can't create custom validation error messages for the user signup page (ones that are shown to the user). The messages that show now appear to be coming from Joi. I can't figure out how to disable the Joi messages from showing or to change them to something that I would be able to show a user (at present, the language that shows underneath  form fields on validation error is of the form \"keyName\" is required). I know this is basic but I've spent about a day trying to figure it out and could use some help.\n. Right. .label() in Joi works as you describe when I tried this: \n// signup.js, line 25\n validate: {\n                payload: {\n                    name: Joi.string().required().label('Your name'),\nBut I need the change the whole message because I'm working on a project that will be in Spanish. I've also tried writing a function under pre in signup.js and haven't gotten it to work yet. Even if I could:\n1. Messages from pre (like the one you made to check for a duplicate username) appear to be in a class of their own. They show above the signup form, unlike the Joi validation messages, which display underneath the input fields. \n2. The Joi errors would still display under the input fields. I can't figure out how to disable the messages and maintain the validation logic you've provided. \nMe and three fellow n00bs have been stuck on it for about a day. Seems over my head so just thought to ask for help. \nThis is a long read but it's definitely pertinent. tl;dr The Joi owners don't think their error messages should ever be shown on the client :\nhttps://github.com/hapijs/joi/issues/546\n. No, thank you! Here's a workaround we found. It needs to be combined with label to be completely custom. Isn't ideal but allows you to set custom error messages that end up being shown to the client. This is server/api/signup underneath inside validate and after payload, ~ line 50:\n```\noptions: {\n                    language: {\n                        any: {\n                            required: 'Custom try again'\n                        },\n                        string: {\n                            email: 'not the correct format, try again.'\n                    }\n                }\n            }\n        },\n\n```\n. ",
    "MetaCoderHirschl": "In setup.js, in Asyn.auto, the accounts collection isn't deleted. I noticed I had 'hanging accounts\" -- as the user was being deleted at each setup run but not accounts. So I add a delete for accounts:\nclean: ['connect', function (done) {\nAsync.parallel([\n                User.deleteMany.bind(User, {}),\n                Accounts.deleteMany.bind(Accounts, {}),\n                Admin.deleteMany.bind(Admin, {}),\n                AdminGroup.deleteMany.bind(AdminGroup, {})\n            ], done);\n        }],\nCleaned up my database. Thought this might be helpful. Or perhaps I'm missing some other piece of important info.\nThanks for a great repo!\n. I've tried suggested from stack overflow including: in package.json moving gulp depenency out of devDependencies and up to Dependencies.\n. Thanks to @jedireza  and @mistermendez -- did deploy successfully with these tips and appreciate support. :clap:  First version for client but gotta start somewhere!\n. @mistermendez -just curious: you changed the MongoDB URL in setup.js so you could create that first user who is admin? I wondered as you can point to the mongoLab URL by setting a Heroku Config Vars: \nMONGOLAB_URI =  mongodb://heroku_app35BLAH BLAH BLAH\n(for example in my case)\nHope you don't mind asking,just trying to understand as much as I can.\n. @jedireza Basic question -- so when you deployed you kept the script to \"start\": \"gulp\" and didn't include a procfile: web: npm start, which was recommended, but not necessary? And again, I appreciate your time and I'm showing my n00b-ishness indeed, but the script in package.json for setup.js isn't run when deployed, correct?\n. @jedireza thanks for continuing to help. Curious, where did you see the credentials, from the MongoLab UI, \"Raw User Configuration\" ? Want to be sure I know where you are seeing this so I can be sure it will be changed.\n. OH, in this space. oops, big mistake. Got it. Won't be repeated. Appreciate your support.\n. ",
    "dmt0": "Are there any plans to integrate third-party authentication methods? Perhaps through bell (https://github.com/hapijs/bell)? \n. ",
    "andyfen": "sorry if this has been asked i skimmed through. \ni'm just curious as to what was the reasoning to use hapi over express ?\n. ",
    "TomerAvni": "Hi,\nI pretty new to node + hapijs (and aqua of course).\nI've been trying to simple POST to login (both the api/login and login) but I keep getting either 403 or 400 (Invalid request payload JSON format). I've testing it with Postman with all types body formats (form, x-www and raw) - nothing works for me. I figured it has something to do with validation or more specifically Joi, so I've also tried to enforce the loose formatting by adding:\nvalidate: {\n                    options: {\n                        stripUnknown: true\n                    }\n                }\nthe routes section under connections on the manifest.js.\nI would love someone's help with this.\nThanks!\n. Well, I guess I missed it, Sorry.\nI have actually meant to use it with a view and not with the plain API.\nAnyway, \nThanks.. ",
    "justingreenberg": "Thanks, quick question\u2014did you test the uninstantiated version (of TestLocation) with a fresh npm install? Because without creating an instance I'm getting several errors:\nWarning: No route matches path \"/\". Make sure you have <Route path=\"/\"> somewhere in your routes in labs inline tests, then all 3 tests related to routing fail:\njavascript\nFailed tests:\n  85) Account App it renders normally:\n      Cannot call a class as a function\n  ...\nI think the reason it must be instantiated is this line from the react-router npm module, which I believe is injected as part of Babel's class transpilation.\n. Closing, squashing commits and creating pull request on branch test-fix (https://github.com/jedireza/aqua/pull/7)\n. Hi Aaron, I had same issue\u2014tests were fixed in PR https://github.com/jedireza/aqua/pull/7 please retry with latest version of repo! :smile:\n. ",
    "clickslide": "Thanks for the help! Now the tests run, but I'm getting different errors.\n```\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ........................................Warning: No route matches path \"/admin\". Make sure you have  somewhere in your routes\n..........\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..................................................\n  ..........................\n  ..........................Debug: internal, implementation, error \n    Error: Expected { Object (data, isBoom, ...) } to not exist\n    at null. (.../node_modules/code/lib/index.js:142:17)\n    at .../test/server/auth.js:86:45\n    at transfer (.../node_modules/hapi/lib/auth.js:99:16)\n    at Function.wrapped (.../node_modules/hapi/node_modules/hoek/lib/index.js:798:20)\n    at Function.internals.response (.../node_modules/hapi/lib/reply.js:134:14)\n    at reply (.../node_modules/hapi/lib/reply.js:67:22)\n    at unauthenticated (.../node_modules/hapi-auth-cookie/lib/index.js:161:28)\n    at validate (.../node_modules/hapi-auth-cookie/lib/index.js:114:28)\n    at Object.scheme.authenticate (.../node_modules/hapi-auth-cookie/lib/index.js:179:13)\n    at internals.Auth.test (.../node_modules/hapi/lib/auth.js:103:22)\n    at Object.auth.test (.../node_modules/hapi/lib/plugin.js:62:79)\n    at server.route.handler (.../test/server/auth.js:84:29)\n    at Object.internals.handler (.../node_modules/hapi/lib/handler.js:94:36)\n    at .../node_modules/hapi/lib/handler.js:28:23\n    at internals.Protect.run (.../node_modules/hapi/lib/protect.js:56:5)\n    at exports.execute (.../node_modules/hapi/lib/handler.js:22:22)\n    at .../node_modules/hapi/lib/request.js:321:13\n    at iterate (.../node_modules/hapi/node_modules/items/lib/index.js:35:13)\n    at done (.../node_modules/hapi/node_modules/items/lib/index.js:27:25)\n    at .../node_modules/hapi/node_modules/hoek/lib/index.js:781:22\n    at process._tickDomainCallback (node.js:381:11)\n....xxxx................\n  ..................................................\n  ...\nFailed tests:\n931) Auth Plugin it takes over when the required role is missing:\n  Expected undefined to match /insufficient scope/i\n\n  at .../test/server/auth.js:278:53\n\n932) Auth Plugin it continues through pre handler when role is present:\n  Expected 'You are being redirected...' to match /ok/i\n\n  at .../test/server/auth.js:344:45\n\n933) Auth Plugin it takes over when the required group is missing:\n  Expected undefined to match /permission denied/i\n\n  at .../test/server/auth.js:413:53\n\n934) Auth Plugin it continues through pre handler when group is present:\n  Expected 'You are being redirected...' to match /ok/i\n\n  at .../test/server/auth.js:485:45\n\n```\nThe \"err\" object in test/server/auth.js line 86 looks like the following.\n{ [Error: Unauthorized]\n  data: null,\n  isBoom: true,\n  output: \n   { statusCode: 401,\n     payload: { statusCode: 401, error: 'Unauthorized' },\n     headers: { 'WWW-Authenticate': 'cookie' } },\n  reformat: [Function],\n  message: 'Unauthorized',\n  isMissing: true }\nPlease let me know if you can help with this.\n. npm version\n{ aqua: '1.0.1',\n  npm: '2.5.1',\n  http_parser: '2.3',\n  modules: '14',\n  node: '0.12.0',\n  openssl: '1.0.1l',\n  uv: '1.0.2',\n  v8: '3.28.73',\n  zlib: '1.2.8' }\nRunning on OSX 10.10.2\n. Great! The test run and pass now. Thanks for the support! \n. ",
    "andrewwoodard": "Reza,\nCould you point me in the right direction to get verbose logging with 'npm\nstart' I'm having trouble getting to the reason for the break in code.\nOn Sat, Mar 28, 2015 at 12:50 AM, Reza Akhavan notifications@github.com\nwrote:\n\nThanks for opening an issue. I don't have experience with Digital Ocean\nmyself but the live demo for Aqua on Heroku is alive and strong. Have you\nseen anything in your server logs that seems suspect?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jedireza/aqua/issues/17#issuecomment-87160208.\n\n\nAndrew Woodard\nSpark Fire Web Design\nCell: (585) 503-1962 <%5855031962>\n661 South Ave. #406\nRochester, New York 14620\n[image: Twitter] https://twitter.com/awoodards [image: Facebook]\nhttps://www.facebook.com/sparkfirewebdesign [image: Email]\nandrew@sparkfireconsulting.com [image: LinkedIn]\nhttps://www.linkedin.com/profile/view?id=63086074&trk=nav_responsive_tab_profile\n [image: Youtube] https://www.youtube.com/channel/UCDpWLD75PnMpnKws31x_JKA\n. Reza,\nThat seems to be working well.\nI used\nforever start --spinSleepTime 10000 -l forever.log -o out.log -e error.log\nserver.js\nand all appears to be well.\nThank you,\nAndrew\nOn Thu, Apr 2, 2015 at 2:58 AM, Reza Akhavan notifications@github.com\nwrote:\n\nI don't think you need to instrument anything special to look at the error\nlogs. We'd be looking for an error stack of some kind.\nPossibly similar issue:\nhttps://www.digitalocean.com/community/questions/node-js-keep-stopping-no-errors-logged\nI'll leave the issue open for another day or two.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jedireza/aqua/issues/17#issuecomment-88779410.\n\n\nAndrew Woodard\nSpark Fire Web Design\nCell: (585) 503-1962 <%5855031962>\n661 South Ave. #406\nRochester, New York 14620\n[image: Twitter] https://twitter.com/awoodards [image: Facebook]\nhttps://www.facebook.com/sparkfirewebdesign [image: Email]\nandrew@sparkfireconsulting.com [image: LinkedIn]\nhttps://www.linkedin.com/profile/view?id=63086074&trk=nav_responsive_tab_profile\n [image: Youtube] https://www.youtube.com/channel/UCDpWLD75PnMpnKws31x_JKA\n. ",
    "mistermendez": "I also had to do the following to get aqua to work on heroku:\n- create MongoLab sandbox heroku addons:add mongolab\n- update MongoDB URL in setup.js to mongodb://<dbuser>:<dbpassword>@ds123456.mongolab.com:<port>/heroku_app1234567\n- update port in config.example to process.env.PORT || 8000\n- update host in manifest.js to host: '0.0.0.0'\n. ",
    "cshutchinson": "Thank you. I think I have it figured out.\n. ",
    "IDriuk": "Thanks.\n. ",
    "tegamckinney": "+1\n. ",
    "AdamQuadmon": "Didn't you already did it here?\nFrame/Users, Roles & Groups\nFrame/Admin & Admin Group Permissions\n. ",
    "zoe-1": "@jedireza and @FennNaten , \n@marsup provided the solution for the load order issue defined at: https://github.com/hapijs/glue/issues/19 \nI contacted him on gitter to clarify what he meant by \"use dependencies for that\" in order to ensure load order.  He referenced using http://hapijs.com/api#serverdependencydependencies-after logic to ensure that a plugin's dependencies load before the plugin.\n. Based on conversation with @marsup on gitter adding dependencies in attributes does not \nensure the a plugin's dependencies load before the plugin. He says must use dependencies-after logic referenced above.\n. Today, @csrl made a post at clarifying things regarding making glue's load order deterministic. Plus, he also talks about the proper way of handling plugin dependencies in hapi with glue.\nhttps://github.com/hapijs/glue/issues/19\n. @jedireza \nAfter researching this glue load dependencies issue for a while, I have concluded that \n@Marsup is right.  Using the below method to load dependencies before a plugin is registered\nis not bullet proof.\nexports.register.attributes = {\n    name: 'login',\n    dependencies: ['hapi-mongo-models']\n};\nIt seems we must use the less elegant method to load plugins to bullet proof it:\nSee my comments at:\nhttps://github.com/hapijs/university/pull/137\nYour perspective would be appreciated.\nCheers!\n. ",
    "FennNaten": "Hi,\nI investigated the issue in full (I think/hope) and you can find all the details here: 1a3494909e2\na small TL;DR : using attributes is not enough, as they don't prevent all the code in plugin.register methods to be executed in whatever order. They only enforce on-start dependency check with error throwing if a dependency is missing. \nThis lets two ways for handling the issue:\n- decorate each plugin making use of methods from another plugin in its register method with a server.dependency call. Considering that in aqua it's at least all of the plugins registering routes with auth, it may not be the most practical approach, even if it's the cleanest.\n- use the prePlugins option of Glue. It takes a function which will be called before any plugin registration declared in the manifest, so you can move here a manual registration of critical plugins. It's not as best as the previous option for conveying intent, and you lose the ability to declare everything directly in manifest, but it's quick to do and it works.\nRegards.\n. Hi, I don't have a lot of time this week, but I quickly put up examples of how the two methods would be used.\nSee there: prePlugins example and there: server.dependency example\nPlease note those aren't complete or fully tested, it's only a demo. \n. ",
    "Marsup": "Why would glue solve a problem that doesn't exist ? Use hapi dependencies, it's made for that purpose.\n. ",
    "rstormsf": "@facultymatt \nOnce I become comfortable with code in Aqua, I plan to use bell plugin for oauth social plugins sign up\nhttps://github.com/hapijs/bell\n. never mind. I set it up and forgot\n. Ohhh I've just noticed config.js is being ignored...let me add it\n. checking heroku logs\n2015-07-31T20:41:07.035275+00:00 app[web.1]: sh: 1: gulp: not found\ni think that's why\n. Ohhh sorry about that. I didn't see this wiki page\n. https://aqua-cb.herokuapp.com/ - I had to make NODE_ENV=production\nand\nheroku run node setup.js\nI think it will be useful to add to wiki\n. another issue with wiki doc for deploying to heroku is that since we ignore public folder, our assets are not included.\nin your gitignore:\n!public/media/\n!public/media/*\n!public/media/**/*\nOR #51\n. I've also added to package.json\n\"engines\": {\n    \"node\": \"0.12.x\"\n  }\n. I wanted to do 2 separate pull requests and for some reason, when I committed a second change, it automatically added to first pull request :-(\n. FYI - I'm looking for a new job right now, let me know if you know some good place to code. \n. done\ndid git rebase -i HEAD~2 \nand git push -f origin master\n. I'm trying to understand the architecture here, but I can't even see how /login/forgot gets rendered. there is no route for 'GET' request, only for posts in api.\nbecause I assume api redirects it to /account if user is logged in\n. I think I figured it out\nhttps://github.com/jedireza/aqua/blob/master/server/web/login/index.js#L26\nthat's what makes it to redirect\n. Wow! Now I'm confused, \nhow does forgot password view render? I've just setup a breakpoint in WebStorm and I see it gets there, and calls \nvar response = reply.view('login/index'); (which has nothing to do with forgot password page)\nthen it somehow goes to client side to Router.jsx for login component, reads current path and fires handler for Forgot component. \nNeed to spend more time to learn how it works\n. added a commit to my prev pull request. \n. To add a new model for the above we have to:\n1)Add a model which will be available via \nvar Company = request.server.plugins['hapi-mongo-models'].Company;\nto \nmanifest.js \nmodels: {\n                Account: './server/models/account',\n                AdminGroup: './server/models/admin-group',\n                Admin: './server/models/admin',\n                AuthAttempt: './server/models/auth-attempt',\n                Session: './server/models/session',\n                Status: './server/models/status',\n                User: './server/models/user',\n                Company: './server/models/company'\n            },\n2)Create a model where you specified the path to it\nCopy/paste user.js and change all user references, amend a schema and define a collection.\nCompany._collection = 'company'; \n. Never mind, as soon as I hit another route, I wasn't able to continue working. \n. hmmmm....\nhttps://github.com/webpack/webpack/issues/118\nhttps://rackt.github.io/react-router/tags/v1.0.0-beta3.html#Advanced%20Usage\n. ",
    "bookercodes": "Nice one\n. ",
    "tsyork": "Thanks for the quick response!\n. ",
    "1000i100": "I've just seen this https://github.com/jedireza/aqua/wiki/bcrypt-Installation-Trouble before reading your answer.\n$ npm install bcrypt --save did the job (no error and now the $ npm run setup pass)\nI just don't understand why bcrypt wasen't well installed first time with $ npm install in aqua folder.\nIn case this issue is reopen, here my $ npm version :\n{ aqua: '3.3.2',\n  npm: '2.11.3',\n  http_parser: '2.3',\n  modules: '14',\n  node: '0.12.7',\n  openssl: '1.0.1p',\n  uv: '1.6.1',\n  v8: '3.28.71.19',\n  zlib: '1.2.8' }\nThanks for your quick answer !\n. $ rm -rf node_modules && npm install fix it (i upgraded npm and node after my initial $ npm install to fix version warning). $ npm rebuild perhaps could work too.\n. ",
    "nitingautam": "documented your different post's reply here https://github.com/jedireza/aqua/wiki/Page-Structure-&-How-to-add-new-page   as start point later can be groomed, atleast this will provide users a start point. Hope this helps.\n. I am creating a new API and defined model, api file and manifest but when ever I try to call it, it return 404. What i am missing :(. Appreciate your quick reply. Thanks. > exports.register = function (server, options, next) {\n\nserver.dependency(['hapi-mongo-models'], internals.applyRoutes);\n\nnext();\n\n};\nexports.register.attributes = {\n    name: 'clients'\n};\n. Looks like now working but now always saying \"You are being redirected...\" trying from curl. Are you looking for this https://github.com/jedireza/frame ?. thanks, i used response[0]._id it worked fine.. \n",
    "ADumaine": "Yes adding some of the items to the wiki may be helpful.  I started with\ndrywall and went through the links along with other items I found.  It took\na few hours to get bcrypt installed.  I actually had to use another\nwork-around (cheat actually). see below.  When I installed aqua i was able\nto use the --msvs-version switch.  Would you like me to edit it?\nI don't think the path issues in package.json and the npm run setup issues\nshould go on the bcrypt page though.  I don't know why npm does not handle\nthe ./ in the path to setup.js.  Just removing the ./ from the package.json\nshould suffice.\nI also don't understand why running 'npm run setup' just kept opening\nsetup.js in my editor. A note about that in the install instructions to try\nrunning 'node setup.js' directly should suffice.\nAlternate bcrypt install work-around (ran into this installing bcrypt for\ndrywall):\n I had some VS 2010 redistributables installed, but I also had VS 2013\nExpress and VS 2015 community. I kept getting an error message looking for\nMSBuild in a folder call V110 in 'C:\\Program Files\n(x86)\\MSBuild\\Microsoft.Cpp\\v4.0'.  I only had V120 and V140.  Out of\nfrustration I renamed V120 to V110 to get the install to work and renamed\nit after.  Later found the --msvs-version=2013 parameter.\nAllan Dumaine\n480 342-9045\nOn Mon, Aug 24, 2015 at 1:25 PM, Reza Akhavan notifications@github.com\nwrote:\n\nThanks for opening an issue and sharing these details.\nDo you think we should add some of these details to the\nbcrypt-Installation-Trouble\nhttps://github.com/jedireza/aqua/wiki/bcrypt-Installation-Trouble wiki\npage?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jedireza/aqua/issues/55#issuecomment-134366582.\n. I recently updated my app to many of the latest packages including react 15.2.  I could add some of that back here.  It looks like there are some outstanding commits on the update deps branch. Should I wait for those to be committed since some will have an affect on other changes? \n. There are 10 commits by @pankajpatel in the update-deps branch.  If those could be merged, I'll pull from that branch and add my updates.  I don't want to get out of sync or redo changes differently.\n. Thanks.\nWhat is confusing is that there is no mention of the lout /docs path anywhere in this aqua repository. And I could not find a link for it on the demo site. It would be very helpful to have it at least mentioned in the readme or commented in the code somewhere.\n. PR created.\n. \n",
    "JimVercoelen": "Hey jederiza,\nThanks for your response which also was very fast!\n. ",
    "fjsousa": "I'm wondering if there's a step missing. I'm trying to create an additional endpoint but I keep getting 403. \njavascript\nserver.route({\n    method: 'POST',\n    path: options.basePath + '/foo',\n    config: {\n        tags: ['api'],\n    },\n    handler: function (request, reply) {\n        reply('bar')\n    }\n});\nThere's no authentication required in this endpoint as you can see.\n. Found the issue. My bad. I was testing the api endpoint with the swagger-ui hapi plugin and forgot to add the X-CSRF-Token in the header.\n. ",
    "alphastorm": "I'm experiencing the exact same behaviour, here are the steps to reproduce:\n1. git clone https://github.com/jedireza/aqua.git webapp && cd webapp\n2. npm install\n3. npm setup (fill out everything correctly)\n4. npm start\nThis error happens immediately after starting the server:\njavascript\nDebug: handler, error\n    {\"msec\":2.0037779957056046,\"error\":\"Not Found\",\"data\":{\"data\":null,\"isBoom\":true,\"isServer\":false,\"output\":{\"statusCode\":404,\"payload\":{\"statusCode\":404,\"error\":\"Not Found\"},\"headers\":{}},\"message\":\"Not Found\"}}\n1. Reset the admin account's password and follow the reset URL (e.g. http://127.0.0.1:8000/login/reset/test@example.com/465522ac-e3d9-45be-b53e-236ba6ce5082)\n2. When you submit the reset password request, you get this error in console:\njavascript\nDebug: handler, error\n    {\"msec\":147.42717298865318,\"error\":\"exception: '$unset' is empty. You must specify a field like so: {$unset: {<field>: ...}}\",\"data\":{\"name\":\"MongoError\",\"message\":\"exception: '$unset' is empty. You must specify a field like so: {$unset: {<field>: ...}}\",\"errmsg\":\"exception: '$unset' is empty. You must specify a field like so: {$unset: {<field>: ...}}\",\"code\":9,\"ok\":0,\"isBoom\":true,\"isServer\":true,\"data\":null,\"output\":{\"statusCode\":500,\"payload\":{\"statusCode\":500,\"error\":\"Internal Server Error\",\"message\":\"An internal server error occurred\"},\"headers\":{}}}}\nDebug: internal, error\n    MongoError: exception: '$unset' is empty. You must specify a field like so: {$unset: {<field>: ...}}\n    at Function.MongoError.create (/home/users/sunil/Development/shellsaver/webapp/node_modules/mongodb/node_modules/mongodb-core/lib/error.js:31:11)\n    at /home/users/sunil/Development/shellsaver/webapp/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server.js:754:66\n    at Callbacks.emit (/home/users/sunil/Development/shellsaver/webapp/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server.js:95:3)\n    at null.messageHandler (/home/users/sunil/Development/shellsaver/webapp/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server.js:243:23)\n    at Socket.<anonymous> (/home/users/sunil/Development/shellsaver/webapp/node_modules/mongodb/node_modules/mongodb-core/lib/connection/connection.js:262:22)\n    at Socket.emit (events.js:107:17)\n    at readableAddChunk (_stream_readable.js:163:16)\n    at Socket.Readable.push (_stream_readable.js:126:10)\n    at TCP.onread (net.js:538:20)\nAny help would be appreciated.  I did some Googling which seemed to suggest that error comes from using a Mongo > 2.4.  Originally I was using 3.0 but the error persisted after switching Mongo versions:\nbash\n ~ \ue0b1 Development \ue0b0 mongod --version                                                                                                                                 \ndb version v2.4.12\nWed Sep  9 16:05:23.536 git version: nogitversion\nAlso, the demo on heroku doesn't seem to have this issue so I'm pretty confused.\n. @jedireza thanks for the quick response!  I would have done more digging myself but the stack trace isn't really helpful so wanted to reach out first :)\n. ",
    "moklick": ":+1: thanks\n. ",
    "opyate": "\nAlso, I grep'd the gulp-less and less.js repos but didn't see either of them using NODE_PATH, so I'm not sure how this is being affected by using the environment variable.\n\nHere's how you would do it:\n.pipe(Less({\n          compress: true,\n          paths: [ process.env.NODE_PATH || './node_modules' ]\n        }))\nAnyway, this is just a sad old loser expressing his wishes :-)\nI would have liked for ./node_modules not to be presumed, and would have liked for NODE_PATH to be the go-to place for dependencies, but alas - no.\n. Thanks for the reply!\nI had a go at upgrading to NodeJS 4.2.1 and the latest dependencies, but the server doesn't listen on the designated port, and I don't know how to fix the remaining test-client tests. (probably related to your React Router comment).\nI'll park this for now, and eagerly await a future upgrade :-)\n. ",
    "dcflow": "Thank you for your help :)\n. ",
    "ThemeSurgeon": "Thank you. I'm thinking of using it for a class I am teaching in\nMinneapolis. I think it provides a great foundation for student projects.\nYes, looks like them main roadblock is updates for react 0.14.3, but not\ncompletely sure about that.\nBest to you and yours,\nJohn\nJohn Teague\nFounder\nTheme Surgeons LLC\njohn@themesurgeons.com\nhttps://themesurgeons.com\nOn Twitter https://twitter.com/themeSurgeon | Google+\nhttps://plus.google.com/+ThemesurgeonsWordPress/\nOn Fri, Dec 4, 2015 at 3:55 PM, Reza Akhavan notifications@github.com\nwrote:\n\nThanks for creating an issue. Yes we do need to update dependencies. I've\nbeen waiting for react-router to hit v1 before starting. It looks like\nthat's happend so... we can start working on this.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jedireza/aqua/issues/72#issuecomment-162092721.\n. \n",
    "AdrieanKhisbe": "Okey dokey :)\n. ",
    "hydrotik": "Great stuff and thanks for the support! I'll point you to a couple things that I have working well when I get them tightened up:)\nCheers!\n. {\"statusCode\":400,\"error\":\"Bad Request\",\"message\":\"child \\\"email\\\" fails because [\\\"email\\\" is not allowed to be empty]\",\"validation\":{\"source\":\"payload\",\"keys\":[\"email\"]}}\nIs coming up as a \n[Error] Failed to load resource: the server responded with a status of 400 (Bad Request) (signup, line 0)\n. The UI renders the error correctly on the client side, but I still see the 400 error in the console. I will compare the headers in the response, but I thought I'd ask if it's not too much trouble:)\n. In Chrome I'm seeing as a\nPOST http://localhost:8000/api/signup 403 (Forbidden)_createXHR @ signup.min.js:45329createXHR @ signup.min.js:45168jsonFetch @ signup.min.js:45105(anonymous function) @ signup.min.js:45038(anonymous function) @ signup.min.js:44286Form.onSubmit @ signup.min.js:44525React.createElement.React.createElement.onSubmit @ signup.min.js:44546ReactErrorUtils.invokeGuardedCallback @ signup.min.js:10883executeDispatch @ signup.min.js:10683executeDispatchesInOrder @ signup.min.js:10706executeDispatchesAndRelease @ signup.min.js:10136executeDispatchesAndReleaseTopLevel @ signup.min.js:10147forEachAccumulated @ signup.min.js:11089EventPluginHub.processEventQueue @ signup.min.js:10352runEventQueueInBatch @ signup.min.js:11118ReactEventEmitterMixin.handleTopLevel @ signup.min.js:11134handleTopLevelWithoutPath @ signup.min.js:23051handleTopLevelImpl @ signup.min.js:23031Mixin.perform @ signup.min.js:13464ReactDefaultBatchingStrategy.batchedUpdates @ signup.min.js:19037batchedUpdates @ signup.min.js:12969ReactEventListener.dispatchEvent @ signup.min.js:23162\nsignup.min.js:44241 action RECEIVE_RESPONSE @ 12:57:30.362\n. Request URL:http://localhost:8000/api/signup\nRequest Method:POST\nStatus Code:400 Bad Request\nRemote Address:127.0.0.1:8000\nResponse Headers\nview source\ncache-control:no-cache\nConnection:keep-alive\ncontent-encoding:gzip\ncontent-type:application/json; charset=utf-8\nDate:Wed, 02 Mar 2016 02:58:25 GMT\nstrict-transport-security:max-age=15768000\nTransfer-Encoding:chunked\nvary:accept-encoding\nx-content-type-options:nosniff\nx-download-options:noopen\nx-frame-options:DENY\nx-xss-protection:1; mode=block\nRequest Headers\nview source\nAccept:application/json\nAccept-Encoding:gzip, deflate\nAccept-Language:en-US,en;q=0.8\nConnection:keep-alive\nContent-Length:50\nContent-Type:application/json\nCookie:crumb=n-at0fHm_SaBT5L1iVEjeRwyJ_KK7p6N51XYeBt6pGh\nHost:localhost:8000\nOrigin:http://localhost:8000\nReferer:http://localhost:8000/signup\nUser-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36\nX-CSRF-Token:n-at0fHm_SaBT5L1iVEjeRwyJ_KK7p6N51XYeBt6pGh\nRequest Payload\nview source\n{name: \"\", username: \"\", password: \"\", email: \"\"}\nemail: \"\"\nname: \"\"\npassword: \"\"\nusername: \"\"\n. Yes I did, thank you. The error in the console for the bad request was throwing me off, but that is the expected behavior when using that method for returning the validation values.\n. server/web is the location for your Hapi routing plugins and server side React views. . When you hit a route that is defined in your manifest as a view via Hapi/Node, it would point to a section/corresponding page in this folder. The React components within the server folder are processed/rendered prior to the page loading within the browser and transmitted to the browser as HTML. Anything dynamic in the page would be handled before this output is sent to the browser.\nWithin client/pages you have the client side code and components which are loaded into an existing  container within the page at the time the user. In the case of Hapi and React, index.jsx is where the React components are \"bootstrapped\" to the html container and the logic is initialized and run at that time. In this case it is up to the browser to process the javascript/logic and then render the results.\nI would say a number of decisions determine which direction you would want to go in such as page optimization and the nature of the data and experience requirements. In some cases you can use the same components for both server side and client side which is considered isomorphic or universal javascript.\nI'm sure there is a more eloquent way to describe this which I might not be conveying, so I would suggest taking a look at a couple of the articles below. Understanding the trade offs might help clarify the differences between the two.\nhttps://medium.com/google-developers/tradeoffs-in-server-side-and-client-side-rendering-14dad8d4ff8b#.814i4uh8m\nhttp://openmymind.net/2012/5/30/Client-Side-vs-Server-Side-Rendering/\n. Yes this does help quite a bit! Sorry I missed this and thanks for getting back so quickly.\n. https://github.com/jedireza/aqua/issues/84\n. Thank you for the info as always!\n. Sorry one more question. Any idea why this might be coming up?\n[3]    /server/api/login.js:114\n[3]    request.auth.session.set(result);\n[3]                                     ^\n[3] \n[3] TypeError: Cannot read property 'set' of undefined\nI'm going to do some digging, but I tried integrating the changes from the PR and it solved a number of issue, but this did pop up when going through the pages and trying to login. very likely could have to do with the way we are passing the data using redux which needs to be update to reflect the changes.\n. when logging request.auth I get:\n{ isAuthenticated: false,\ncredentials: null,\nartifacts: null,\nstrategy: null,\nmode: null,\nerror: null }\nWorking in the PR branch so I'll just keep digging away, but can't think of what is missing from the branch.\n. I was missing request.cookieAuth.set(result); in my code in case anyone comes across this\n. ",
    "hybr1dz": "Yes i agree that it's a bit questionable whether this is related to Aqua. However it seems that the resolve.alias isn't working in general, so i was wondering if i was editing the right place since the application structure seems to be a bit different compared to the examples in react-components (no webpack.config.js for example). \n. ",
    "pankajpatel": "test/client/pages/login/components/App.js is having var App = require('../../../../../client/pages/login/components/App.jsx');\nEither App.js is wrongly present or App.jsx has gone missing.\nAny idea?\n. App.jsx as in /client/pages/login/components/App.jsx is missing with following code:\n```\nvar React = require('react/addons');\nvar ReactRouter = require('react-router');\nvar Component = React.createClass({\n    render: function () {\n    return (\n        <ReactRouter.RouteHandler />\n    );\n}\n\n});\nmodule.exports = Component;\n```\nshall I create this file again?\n. I have removed the lab errors, now working on the individual error due to deps update.\nMajority are because of ReactRouter pushState changed to push\nAnd jsdom is not accepting the invalid urls\nMany Warnings are thrown up like\nhapi/no-shadow-relaxed - Definition for rule 'hapi/no-shadow-relaxed' was not found\nPlease check https://github.com/pankajpatel/aqua/tree/update-deps\n. Updating hapi/no-shadow-relaxed to no-shadow\nhttps://github.com/continuationlabs/eslint-plugin-hapi/issues/6 \n. At current state CI would throw errors as I there are errors because of ReactRouter rendering and jsdom URL validations.\n. @jedireza I had started working on them but many things require changes in both test code and main source code. \n. shall I wait for the #79 to close?\n. Let me try on update-deps branch, I hope I can help in there.\n. @jedireza Travis Build is failing on installing dependencies. Mainly bcrypt and node-gyp. Any suggestions around this. Last ci-build worked for node@4 but got stale while running setup.js script\n. Now build script is working fine, can be optimized.\ntest scripts are failing now.\n. This looks really great. Sorry I couldn't keep up the work.\n. But its test file was present. That file should also be removed then.\n. yes, you are right!\n. There is React 15; https://github.com/facebook/react/releases\n. Because setProps is deprecated and is throwing warnings! The last commit in test/client/pages/admin/components/admins/CreateNewForm.js suited best to test the setProps changes instead of above referenced diff.\n. ",
    "forgetaboutme": "Is it also possible that its shows the wrong coverage %? I added new routes without any tests and when I run npm test it always show 100% code coverage.. Just updated to Node 6.6.0, the node: bad option: --inspect error is gone however it doesn't go further than:\n[23:08:42] Finished 'webpack' after 14 s\n[23:08:42] Starting 'build'...\n[23:08:42] Finished 'build' after 6.82 \u03bcs\n[23:08:42] Starting 'default'...\n[23:08:42] Finished 'default' after 5.21 \u03bcs\nI also get the following error with chrome devtools?:\n```\n\naqua@5.0.1 start /Users/deep/projects/aqua\ngulp\n\n[23:13:00] Using gulpfile ~/projects/aqua/gulpfile.js\n[23:13:00] Starting 'watch'...\n[23:13:00] Finished 'watch' after 34 ms\n[23:13:00] Starting 'less'...\n[23:13:00] Finished 'less' after 22 ms\n[23:13:00] Starting 'webpack'...\n[23:13:00] Starting 'media'...\n[23:13:00] Starting 'nodemon'...\n[23:13:00] Finished 'nodemon' after 1.8 ms\n[23:13:00] [nodemon] 1.10.2\n[23:13:00] [nodemon] to restart at any time, enter rs\n[23:13:00] [nodemon] watching: .\n[23:13:00] [nodemon] starting node --inspect server.js\nDebugger listening on port 9229.\nWarning: This is an experimental feature and could change at any time.\nTo start debugging, open the following URL in Chrome:\n    chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&v8only=true&ws=localhost:9229/node\n/Users/deep/projects/aqua/node_modules/bcrypt/node_modules/bindings/bindings.js:83\n        throw e\n        ^\nError: Module version mismatch. Expected 48, got 46.\n    at Error (native)\n    at Object.Module._extensions..node (module.js:583:18)\n    at Module.load (module.js:473:32)\n    at tryModuleLoad (module.js:432:12)\n    at Function.Module._load (module.js:424:3)\n    at Module.require (module.js:483:17)\n    at require (internal/module.js:20:19)\n    at bindings (/Users/deep/projects/aqua/node_modules/bcrypt/node_modules/bindings/bindings.js:76:44)\n    at Object. (/Users/deep/projects/aqua/node_modules/bcrypt/bcrypt.js:3:35)\n    at Module._compile (module.js:556:32)\nWaiting for the debugger to disconnect...\n``\n.Error: Module version mismatch. Expected 48, got 46.got fixed by running$ sudo npm rebuild`\nThank you for your help! \ud83d\udc4d\n. #153 \ud83d\udc4d . ",
    "FernandoBoza": "4 images replaces the videos?\n. ",
    "gggin": "go to this https://getaqua.herokuapp.com/\n then login page\nthen input root root\nthen forbidden\nIn my own build same problem!\n. Sure, thank you for debug this problem!\n. ",
    "viraf": "I was going through the crumb docs and stumbled upon an issue in their repository. https://github.com/hapijs/crumb/issues/54\nDoes this require us to change the way we handle X-CSRF-Token for the api endpoints ?\nSorry, I am too much of a noob in the JS world to understand the impact of the issue.\n. ",
    "madnight": "ok : )\n. For a automatic solution the command npm run first-time-setup should be idempotent to execute it as an https://docs.docker.com/compose/compose-file/#command composer command otherwise a entrypoint.sh would be necessary. However you can do it manually by joining into your running docker image and call the first-time-setup (that is what i did).. ",
    "lealexandre": "Thanks a lot Reza. It runs now. Node version=4.5.\nStarting playing with aqua now... :)\n. Hi Reza,\nI updated to v6 and it runs normally. I should notify though that during the install, I ran into a \"Cannot find module 'unicode/category/So'\" which was fixed by install unicode locally.\nBest,\nAlexandre\n. Yeap, install works with --inspect flag.\nI haven't tried new installs yet.\n. Ideally I'm looking for some help to implement a specific feature (user's favorite locations on a map). I'm willing to compensate this person.\n. ",
    "jaburcodes": "Hey @jedireza, let me take it. :D . @jedireza , can u create a new remote branch for the issue so i can push?\nThanks. sure, thanks!\n. what do you mean by \"made the components into shareable\"?\n. Going to do it this weekend.. ok\n. Could you give me more details?. sure, let me take it, it's a nice one :D. Going to do it this weekend.. So the mobile user can't navigate through the page?\nMay we create an issue to implement it? I would be happy to contribute.. hey @jedireza , seems CI failed, any tip?. seems that \"npm install\" command failed, but i didn't touch the package.json or any related doc. :x . great @jedireza, thanks!. done :D. Your commands were right, i just had to add upstream as a remote repo with:\ngit remote add upstream https://github.com/jedireza/aqua\nSo i could fetch it.. Thank you!! please keep up this awesome work. :+1: . hey @jedireza,  i'm on it.. @jedireza, v4 is a pre-release, shouldn't we use v3.0.3, which is the last release?\nWhen v4 gets officially released we can bring him to Aqua.. sorry, u're totally right.\nI thought it was pre-released because v4 was released 23 days ago and a v3.0.3 was released 6 days ago, doest it even make sense?. done buddy :D. I can take it, but why is constructor not the right place for the calls?\n\nIs it done in all project components?\nOr just a few?\n. hey @jedireza let me take this ;)\nAlso, i'm building a boilerplate as well, if u would like to check it out:\nhttps://github.com/jaburcodes/flash. is there anything missing? . ops, sorry.\nDone!\nThanks!!. ",
    "alecarg": "@jedireza , what are statuses in the context of this web app?\nEDIT: I believe I answered myself by looking at the demo; however, I couldn't find any explanations elsewhere really.. @MuhammadTahirkhan , you need an admin account. It's root / root for the Demo.\nOn your local, you should get a prompt when running npm run first-time-setup to create your admin account.\nNow on Heroku, when doing heroku run npm run first-time-setup --app myAppName, I get a timeout and I'm unable to create an admin user, but the process does seem to run because the site now works and I'm able to register as usual. Any help with that bit?\nThanks\n. @jedireza, I believe I was getting false negatives as my port 5000 was blocked. I was able to run the command by adding :detached like so:\nheroku run:detached npm run first-time-setup --app myAppName\nProblem I have now is that I never get any prompts, and thus the script never executes completely. When checking the log for the execution, I can see it exiting after prompting to enter the mongoDbUri. Could this be related to heroku or promptly?\n. @jedireza , thanks for the prompt response.\nI was aware of crumb, and actually have it disabled on my local environment as I've gone through the Wiki and the issues raised here. Still, I'm unable to get the API to respond accordingly.\nAnd more importantly, given that the aim of this is to get a third party to do it's own calls, is it possible at all to have them done automatically and not having to deal with tokens / cookies / sessions manually? If the answer is yes, could you please help me by laying out a few steps on how to get this working? \nAs a bonus, in case the answer is to do \"lighter checks\" (less auth, less security), could this be applied to only specific API calls and not all of them?\nThanks,\nAlejandro. ",
    "SamuelzXu": "Yes, I have already set it as false. \n\nOn Sep 17, 2016, at 10:53 PM, Reza Akhavan notifications@github.com wrote:\nThanks for opening an issue.\npromptly is a dev dependency https://github.com/jedireza/aqua/blob/3a00d782d4c053583ef0a4e1a481ee6d49f2eac3/package.json#L79, sounds like it didn't get installed on Heroku.\nHave you set the environment variable NPM_CONFIG_PRODUCTION=false for your Heroku app? See: https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku#dependencies-and-build-files https://github.com/jedireza/aqua/wiki/Deploying-to-Heroku#dependencies-and-build-files\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/jedireza/aqua/issues/111#issuecomment-247821306, or mute the thread https://github.com/notifications/unsubscribe-auth/AOHE1S8M6wCglGxRpqYM_VkZCmJBJHQ4ks5qrKeQgaJpZM4J_xvg.\n. Okay, i got it working somehow.. Now, when I try to signup an account or sign in to my root account on heroic, it gives me a \u201cForbidden\u201d error. Any possible reasons? Thanks for the help!\nOn Sep 17, 2016, at 11:00 PM, Reza Akhavan notifications@github.com wrote:\nHmm. You'll need to figure out why promptly didn't get installed when you deployed to Heroku. I can check that promptly got installed for the live demo like this:\n$ heroku run npm ls promptly --app getaqua\nRunning npm ls promptly on \u2b22 getaqua... up, run.9956\naqua@5.0.1 /app\n`-- promptly@2.1.0 \n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/jedireza/aqua/issues/111#issuecomment-247821636, or mute the thread https://github.com/notifications/unsubscribe-auth/AOHE1SdP4_tw85ff0klkxLmus3IfEGRBks5qrKligaJpZM4J_xvg.\n. \n",
    "Xeoncross": "@jedireza I am thinking about porting the models to MySQL. However, I'm unsure how to keep the option for either DB open. I was thinking about simply separating the models by folder, but there are a lot of files that assume mongo-models so this would be a big change.. Aqua would provide a nice transition layer for existing PostgreSQL/MySQL/MariaDB applications if it supported SQL. I don't really want to remove the MongoDB option though since many users would rather have it. At the moment was was just reading over the code to see if there was any sane way to handle this.. Makes sense, bootstrap vs material design is another equally big choice people might want but we can't have everything. Really nice repo by the way, everything from helmet to joi to react-router v4.. @jimlowrey thank you for your work. Is there anything you would like community support with?. ",
    "jimlowrey": "HI all, \n  I forked Aqua to use Sequelize and Postgresql at github.com/jimlowrey/aqua-sql.  There is a live demo at aqua-sql.herokuapp.com.\nI agree with @jedireza about forking.   I had to change the models as well as add new models.   There is a lot going on in the mongo documents that takes some effort to simulate in a relational way.  Additionally the API for mongo-models is considerably different than sequelize.  Those APIs would have to be abstracted out.  This is evident in the server API handlers.\n@Xeoncross please take a look.  I imagine there are a few bridges you will be running into that I've already crossed.\n  @jedireza thank you for Aqua.  In vast world of options for Node, React, and Redux, Aqua provided library choices and patterns that I could latch onto and move forward with.\n . @Xeoncross you are welcome.  The first thing that comes to mind is how best track this project in a Git way.  The second is general code improvements.  I'll open those issues in the project.  Thanks for taking a look.. ",
    "sanrock1": "Can you point out where can I see the modal? (eg. press this button on this particular page)\n. ",
    "younesouhbi": "Hi,\nThank you for your reply. I apologize for getting back to you on this so late, I was away.\nBelow are the details about the node version.\n{ aqua: '5.0.1',\n  npm: '2.15.1',\n  ares: '1.10.1-DEV',\n  http_parser: '2.5.2',\n  icu: '56.1',\n  modules: '46',\n  node: '4.4.3',\n  openssl: '1.0.2g',\n  uv: '1.8.0',\n  v8: '4.5.103.35',\n  zlib: '1.2.8' }\nIs my node version outdated?\nThanks\n. ",
    "MuhammadTahirkhan": "Thanks for help...!\n. \n. \n. How we can login to admin area\nand check MongoDB collection\n\n. How we can login to admin area...!\n. Thanks...!\n. ",
    "learnmorejavascript": "My fault. I should have looked at the docs that talk about bcrypt before doing anything else. Thank you.\n. ",
    "ivanph": "I'm looking into this and I noticed that this doesn't happen for GET api/users because the route validates the value for username with Joi.string().token(), is there a reason why this can't be done for the others instead of escaping?\n. Yeah, my question was more about why only that endpoint uses token() . Are the others supposed to allow any kind of string ?\n. Done. Let me know if there's any other changes needed.\n. Done\njedireza/frame#183 . Pushed a new commit with the changes to the /users/my endpoint.\nI'll squash everything at the end.. Sure, I'll reopen jedireza/frame#184 if that's okay.. I added a new commit using this approach it simplified the code a lot.\nI wasn't aware of the findOneAndUpdate function should have checked the mongo-models api.  . Oh, you mean an extra line? There is a newline between the declaration and server.route. Got it. ",
    "symbianm": "I used hapi-require-https plugin to solve SSL issue with AWS load balancer. Just sharing experience.\n. Wanted to share my updatedgulp/webpack.js to use webpack@2.3.x.\nAlso, I used eslint-loader@1.7.x to lint my code on the fly and happypack@3.0.x to improve webpack build speed in 2-3x times.\n```\n'use strict';\nconst Gulp = require('gulp');\nconst Gutil = require('gulp-util');\nconst Webpack = require('webpack');\nconst Path = require('path');\nconst HappyPack = require('happypack');\nlet executionCount = 0;\nGulp.task('webpack', (callback) => {\nconst plugins = [\n    new Webpack.optimize.CommonsChunkPlugin({\n        name: 'core',\n        filename: 'core.min.js',\n        minChunks: 2\n    }),\n    new Webpack.DefinePlugin({\n        'process.env': {\n            NODE_ENV: `\"${process.env.NODE_ENV}\"`\n        }\n    }),\n    new HappyPack({\n        id: 'jsx',\n        threads: 4,\n        loaders: [\n            'babel-loader?presets[]=es2015&presets[]=react'\n        ]\n    })\n];\n\nlet devtool = 'source-map';\n\nif (process.env.NODE_ENV === 'production') {\n    plugins.push(new Webpack.optimize.UglifyJsPlugin({\n        compress: {\n            warnings: false\n        },\n        sourceMap: false\n    }));\n\n    devtool = '';\n}\n\nconst config = {\n    watch: !global.isBuild,\n    entry: {\n        'pages/account': './client/pages/account/index',\n        'pages/admin': './client/pages/admin/index',\n        'pages/contact': './client/pages/contact/index',\n        'pages/login': './client/pages/login/index',\n        'pages/signup': './client/pages/signup/index'\n    },\n    output: {\n        path: Path.resolve(__dirname, '../public'),\n        filename: '[name].min.js',\n        sourceMapFilename: '[name].map.js'\n    },\n    resolve: {\n        extensions: ['.js', '.jsx']\n    },\n    module: {\n        rules: [\n            {\n                enforce: 'pre',\n                test: /\\.jsx?$/, // both .js and .jsx\n                exclude: /node_modules/,\n                loader: 'eslint-loader',\n                options: {\n                    emitError: true,\n                    emitWarning: true\n                }\n            },\n            {\n                test: /\\.jsx?$/, // both .js and .jsx\n                include: [\n                    Path.resolve(__dirname, '../client')\n                ],\n                loader: 'happypack/loader?id=jsx'\n            }\n        ]\n    },\n    devtool,\n    plugins\n};\n\nWebpack(config, (err, stats) => {\n\n    if (err) {\n        throw new Gutil.PluginError('webpack', err);\n    }\n\n    Gutil.log('[webpack]', stats.toString({\n        colors: true,\n        chunkModules: false\n    }));\n\n    if (executionCount === 0) {\n        callback();\n    }\n\n    executionCount += 1;\n});\n\n});\n```. ",
    "ajhool": "Thanks @jedireza and @symbianm for the response and solutions. I think placing the ssl/tls termination in front of the application will be my preferred approach.\n. ",
    "ferrao": "If you were using a db with transaction support, i would wrap all the check-then-create logic inside a db transaction in the route handler.\nBut you have MongoDB, which from what i understand does not support transactions, only atomic operations on single documents. \nI am not very skilled on MongoDB, but looking at their documentation i found two relevant pieces of information:\nCollection Update\nIt seems you can perform an atomic query and update to a document as long as you have unique indexes on the fields you are querying on. Example from the docs:\njs\ndb.people.update(\n   { name: \"Andy\" },\n   {\n      name: \"Andy\",\n      rating: 1,\n      score: 1\n   },\n   { upsert: true }\n)\nWith a unique index, if multiple applications issue the same update with upsert: true, exactly one update() would successfully insert a new document. More info here:\nhttps://docs.mongodb.com/manual/reference/method/db.collection.update/#db.collection.update\nTwo Phase Commits\nIf you need transaction like semantics for performing updates across different documents, this tutorial shows the way, although i have not read it:\nhttps://docs.mongodb.com/v3.2/tutorial/perform-two-phase-commits/\nBut to be fair, i have to say that most node.js web api/app projects that i look at very rarely make use of db transactions, which still makes me wonder how they do not run into trouble more often.\nOr perhaps i just worry too much and should just wait until my apps get enough concurrent traffic to cause weird things before thinking about it...\n. ",
    "gridworkz": "Hi Reza:\nThanks, all clear now.\nDave\n. ",
    "springuper": "use case:\n- deploy aqua as 'http://user.company.com', root manager can manage accounts/admins in front-end gui\n- deploy frame as 'http://api.user.company.com', so 'http://cms.company.com' and other internal systems can use jwt or ba authentication to login/logout and get user information\n- further, we do not need implement login page in every internal systems, when user hasn't login, just redirect he/she to 'http://user.company.com/login?callback=http://cms.company.com', aqua will post the login info to the caller system after user login. In this case, we want aqua to be a SSO service\nwe can deploy both aqua and frame for current usage, but as they two share a lot of backend code, there may be some upgrade inconsistent issues.\n. @jedireza thanks a lot. I'm trying to modify aqua to use multi auth strategies for a route, so both front-end and other system can access it. \nI'll update the results here.\n. ",
    "jlaroc2": "Figured it out, all's good.. ",
    "dbzmelvin": "getting the same Error and i get the same output from db.users.find() . @jedireza thanks for the fast reply, i fixed the issue for myself. \nIf i run the given command -> npm run first-time-setup\nyou have to choose a mongodb database and i entered something else than the default one. I just had to use the default one.. ",
    "andyfry01": "I've had the same issue myself. When running first-time-setup per the instructions in the readme, the script created a database at both the default url (mongodb://localhost:27017/aqua) and the custom one I specified (mongodb://localhost:27017/XXXXX). Didn't look into it too closely, but it seemed like it was creating an admin user in one database but trying to read the info from another.\nI think the issue stems from line 45 in config.js. If you're having this issue, replace $default: 'mongodb://localhost:27017/aqua' with the mongodb URL you'd like to use, run first-time-setup (specifying that same mongodb URL again when prompted) and it should work. . NP @jedireza, I can do that now \ud83d\ude04 . ",
    "olivvv": "I missed that. thanks a lot.. ",
    "JoeCooper": "I figured it out. I'm writing the answer here so that it can be Googled.\nThe endpoint for registration can be found in users.js; POST to /users.. ",
    "shebatech": "Thank you for your prompt response, I appreciate it.\nI have setup the env variables into Openshift and I can confirm they're setup using the following command which returns them\n\nShebaTechs-MacBook-Air:server shebatech$ rhc env list dev\nNODE_ENV=production\nNPM_CONFIG_PRODUCTION=false\n\nI cleared my nodejs.log file in Openshift and run git push to trigger the application rebuild process. Unfortunately, I am still getting the 503 error when I view the page and the logs are still showing that it cannot find the babel-core/register module.\nI am wondering and I will try it in a bit if I move all devDependencies from package.json to dependencies to brute force the installation process of these packages required.. Merged dependencies and now it stopped complaining about babel-core/register, but it's complaining about something else. Will have to give Heroku a shot, maybe it'll simplify things in the long run.\n\nfs.js:558\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: EACCES: permission denied, open '/var/lib/openshift/5875382989f5cf0d60000182/.babel.json'\n    at Object.fs.openSync (fs.js:558:18)\n    at Object.fs.writeFileSync (fs.js:1223:33)\n    at save (/var/lib/openshift/5875382989f5cf0d60000182/app-root/runtime/repo/node_modules/babel-register/lib/cache.js:45:16)\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)\n    at Module.runMain (module.js:607:11)\n    at run (bootstrap_node.js:420:7)\n    at startup (bootstrap_node.js:139:9)\n    at bootstrap_node.js:535:3\n\nThanks again!. Just an update, deployment of Aqua on Heroku was super smooth! Now I'll attempt to integrate MaterializeCSS to it instead of bootstrap.. Thanks again for the super fast reply. You're correct, with a refresh it does show the changes, I must've been editing another file.\nI am not sure how to integrate react-hot-loader, but I will give it a shot. It will definitely speed up dev time for me since I am mostly working on front-end right now.\nThanks \ud83d\udc4d . ",
    "orff": "Thanks for the quick reply, ill try that exact same reproduction step again to see if I get the same issue again.  . Maybe a better question is \"whats the suggested method of starting with aqua as a baseline then editing or overriding in a new repository ?\" . thanks jedirez, my issue was the repo I was copying into.  im all good now. Thanks, looks great!. ",
    "acouch": "@alecarg FYI I added \"Using Postman\" to the wiki: https://github.com/jedireza/aqua/wiki/HTTP-403-forbidden-when-accessing-API-endpoints#using-postman Once I disabled crumb I've been able to do GET/POST/PUT operations locally.. FWIW as someone new to react I appreciated seeing another way of implementing the connect() paradigm and agree that the connect API syntax is confusing.. ",
    "metalshan": "Thanks for replying @jedireza \n. ",
    "panbhatt": "Thanks . Yes. it seems a great one... Closing the issue. . ",
    "colin-han": "I see. Thank you.. ",
    "vkvam": "There is, I just have very little experience with React (or frontend in general) and was a bit trigger happy with the pull-request. Tests where failing, and from other examples seen, the existing code should work. I'll go through some react tutorials later on and may update the pull request if I feel confident with the fix.\nFeel free to tackle it yourself.. Looks to be a react router v4 related bug: https://jaketrent.com/post/access-route-params-react-router-v4/. \nI've updated tests and propTypes.. ",
    "rafahuelin": "Thanks jedireza, that fix is working in my case :). ",
    "FaeezBorman": "I haven't, will do so\nThank you so much for the quick response. ",
    "fehrmanns": "Hi there. I'm watching Aqua for while now, but didn't find time for more. :(\nCurrently I'm working with https://github.com/yahoo/react-intl and I think it's strait forward. Okay, the documentation isn't the best but there're enough google results out there.. ",
    "lukazlatecan": "I managed to implement a solution with https://www.npmjs.com/package/hapi-locale-i18n. It works great and it is not so complicated to use.. However, I have problems with onClick functions when i try to change language in Navbar.\nHere is my function I'm trying to call:\nsetLanguage(lang) {\n        console.log('HERE');\n        i18n.setLocale(lang);\n    }\nHere is part from Navbar:\n<li className={this.tabClass('si')}>\n                                <a onClick={this.setLanguage.bind(this,'si')} style={{cursor: 'pointer'}}>{i18n.__(\"si\")}</a>\n                            </li>\n                            <li className={this.tabClass('en')}>\n                                <a onClick={this.setLanguage.bind(this,'en')} style={{cursor: 'pointer'}}>{i18n.__(\"en\")}</a>\n                            </li>\nI also tried without bind, so like this:\n<li className={this.tabClass('si')}>\n                                <a onClick={this.setLanguage('si')} style={{cursor: 'pointer'}}>{i18n.__(\"si\")}</a>\n                            </li>\n                            <li className={this.tabClass('en')}>\n                                <a onClick={this.setLanguage.('en')} style={{cursor: 'pointer'}}>{i18n.__(\"en\")}</a>\n                            </li>\nIf you have any ideas why?\nThank you. ",
    "jloriente": "Anybody has tried the integration of bell with aqua? I think will be quite useful to support also OAuth in aqua using Bell.\nWould be great to see some sample code about how to support OAuth with Aqua. Ok thanks.. ",
    "bryanowen7": "Will contact nodemailer first.. ",
    "markopolojarvi": "The scenario is that I would like to assign each new user to account-trial status automatically. Now I have to manually change the status in the admin panel.. I understand what you mean and having different validation models for API and internal is totally ok, if they are in same files. And please understand that in my opinion Aqua's code is great and it's a pleasure to work with. This enhancement is a bit like complaining that the dashboard material is a bit plasticky in Tesla :)\nWhat I mean is that there's three separate username: Joi.string().token().lowercase().required() validations hardcoded in https://github.com/jedireza/aqua/blob/master/server/api/users.js - I don't see why these couldn't be validated from one file containing validations for common fields like username.\nMy case was really simple and I got it working easily. I just needed to get rid of token() in the validation and I was able to push email as a username in the signup form. I wanted to simplify the signup flow by removing username altogether and using email as the username.. ",
    "bennyn": "@jedireza What I was thinking of is a scaffolding system (working like the one from Ruby on Rails, Getting Up and Running Quickly with Scaffolding), which helps the developer to bootstrap a new database model including it's controller and basic view.\nI know that Sequelize supports commands like this (to create a database model):\nbash\nsequelize model:create --name TodoItem --attributes content:string,complete:boolean\nIt would be great if you could do something similar with aqua, so that it creates a new model and links it in the code where it should be linked to provide basic CRUD operations for the newly created entity.. ",
    "walshe": "ah I see, nice :) btw would be nice to have some sort of error handling when for example an api component encounters an error.. ah super, thanks. no joy. actually I think its because gulp and a bunch of other dependencies are needed when env is production... thanks, I realize its out of scope..sorry for that.. I did install it and imported it, unfortunately I have to use it\n```\n'use strict';\nconst Layout = require('../layouts/default.jsx');\nconst Package = require('../../../package.json');\nconst React = require('react');\nimport GoogleLogin from 'react-google-login';\n```\nbut still doesn't seem to be in the webpack/./node_modules dir, just wondering off theres some blatant incompatibility I am not seeing..\n. the sign in button renders but its disabled, Ive tried it in another react-node app but don't have the issue - its really odd. btw , I since found out I was stupidly adding the tag to a server/web component instead of client/pages   :). actually I just noticed that after using xhr's 'withCredentials:true', that the set-cookie instruction is now in the rest response, however its still not showing up in the chrome dev tools cookie pane .. :(\ncache-control:no-cache\nConnection:keep-alive\ncontent-encoding:gzip\ncontent-type:application/json; charset=utf-8\nDate:Thu, 10 Aug 2017 17:17:57 GMT\nset-cookie:anothercookie=avaluesetbyaRESTendpoint; SameSite=Strict\nstrict-transport-security:max-age=15768000\nTransfer-Encoding:chunked\nvary:accept-encoding\nx-content-type-options:nosniff\nx-download-options:noopen\nx-frame-options:DENY\nx-xss-protection:1; mode=block. finally figured it out - these two changes are necessary \nadd withCredentials to jsonfetch xhr config\n```\nconst jsonFetch = function (options, callback) {\nconst cookies = Cookie.parse(document.cookie);\nconst config = {\n    url: options.url,\n    method: options.method,\n    withCredentials: true,\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n};\n\n```\nand when creating a cookie , add a path\nserver.state('mycookiename', {  \n            ttl: 1000 * 60 * 60 * 24,    // cookie data is JSON-stringified and Base64 encoded\n            path: '/'\n          });\n. dunno man, something is not working right for me.. here is my auth . (after i validate with google i put jwt in a cookie in another component, that all works fine, and the following works good too)\n```\nserver.auth.strategy('session', 'cookie', {\n        password: Config.get('/cookieSecret'),\n        cookie: Config.get('/cookieName'),\n        isSecure: false,\n        redirectTo: '/',\n        appendNext: 'returnUrl',\n        validateFunc: function (request, data, callback) {\n            //we simply validate the jwt token that we put in a cookie\n            jwtVerificationService.verifyJWT(data, function(err){\n                if(err){\n                    callback(err, false);\n                }else{\n                    callback(null, true);\n                }\n        });\n    }\n});\n\nnext();\n\n```\nBut when I delete the cookie manually so that I can test the authentication on the rest endpoint, althought the rest call returns 401, it does not call that callback as mentioned above.. it just does the dispatch and doesnt come back\n. sorry, I meant 238 yes. seems when an err is passed to dispatch that it never comes back to execute the subsequent code, so I had to put in this ugly hack:\n```\n    static makeRequest(request, store, typeReq, typeRes, callback) {\n    store.dispatch({\n        type: typeReq,\n        request\n    });\n\n    JsonFetch(request, (err, response) => {\n\n        if(callback && err && response.statusCode == 401){\n            callback(err, response);\n            return\n        }\n\n        store.dispatch({\n            type: typeRes,\n            err,\n            response\n        });\n\n        if (callback) {\n            callback(err, response);\n        }\n    });\n}\n\n```. \n. ok I simplified things a lot and no longer have the issue. Its just a google clientid it would not change...\n. hmm, had been trying something like this, but not working out so good:\n```\nclass HomePage extends React.Component {\n    render() {\n    const neck = [\n        <link key=\"layout\" rel=\"stylesheet\" href=\"/public/layouts/default.min.css\" />,\n        <link key=\"page\" rel=\"stylesheet\" href=\"/public/pages/home.min.css\" />\n    ];\n    const feet = <script src=\"/public/pages/home.min.js\"></script>;\n\n    const googleClientId = Config.get('/google/clientId');\n    const hostedDomain = Config.get('/google/hostedDomain');\n\n    return (\n        <Layout\n            title=\"Home\"\n            neck={neck}\n            feet={feet} activeTab=\"home\" googleClientId={googleClientId} hostedDomain={hostedDomain}>\n            <div id=\"app-mount\"></div>\n        </Layout>\n    );\n}\n\n}\n```\nclass PlainLayout extends React.Component {\n    render() {\n    return (\n        <html>\n            <head>\n                <title>{this.props.title}</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                <link rel=\"stylesheet\" href=\"/public/core.min.css\" />\n                <link rel=\"shortcut icon\" href=\"/public/media/favicon.ico\" />\n                <script type=\"text/javascript\">\n                    window.googleClientId='{this.props.googleClientId}'; \n                    window.hostedDomain='{this.props.hostedDomain}';\n                </script>\n                {this.props.neck}\n            </head>\n            <body>\n\n                {this.props.children}\n                <script src=\"/public/core.min.js\"></script>\n                {this.props.feet}\n            </body>\n        </html>\n    );\n}\n\n}\n```\nin console I get unexpected token:\ne=\"text/javascript\">window.googleClientId=\\'test\\'; window.hostedDomain=\\'test2\\';</. your solution worked nicely thanks \ud83d\udcaf . whats the advantage of this new way and why called 'universal' ?. confused, app is still not isomorphic I thought ?. logging is not really my issue, its more where i can put some logging to print the incoming request urls for the path that is not found. I think this is what im after\nserver.on('response', function (request) {\n            console.log(request.info.remoteAddress + ': ' + request.method.toUpperCase() + ' ' + request.url.path + ' --> ' + request.response.statusCode);\n        });. ",
    "Cornstar23": "@taisaotaokhoc Did you come up with a solution?. Thanks. Not sure if the proper way, but I just moved \nthis.state = {\n   bgHeight: window.innerHeight\n};\nto the  componentDidMount() and set the bgHeight to 0 in the constructor instead of to window.innerHeight.. ",
    "HE-is": "Thanks! I was thinking it had something to do with states/redux. I'll try figuring it out, as well as documenting the process when I do.. ~~server.tar.gz~~\nHere's the server code aswell if there's problems in there too.... I'm sorry for my naivety and noobiness. I'm very new to all of this, but am eager to and trying to learn.\nHow do I provide a stack trace?\nI figured just posting the client code would be sufficient since it's probably just a simple error. in turn, it wouldn't constitute me posting the whole modified aqua project on my github.\nI think I'm setting the default values in the initialState constant in reducer, if that's where you set the default values.\nSorry again for my ignorance/noobiness. And thanks for all your help thus far, and creating this awesome project! ^_^. Okay I've been working on this constantly, skipping lunch, to try and figure this out.\nWhat should I do? Should I put the whole project on github to be used as a reproducible example?\nSorry to bother; I hope after I learn that I will be able to help and contribute in some way. I just need to get farther than just getting \"my feet wet\" with a push in the right direction to the deep end.. Thanks for giving guidance! I've been learning a ton!\nI figured it out; I plan to write an overview of my Aqua endeavours and\nmake it into some sort of quickstart guide for noobs like me. Haha.\nOn Fri, Aug 11, 2017 at 10:28 PM, Reza Akhavan notifications@github.com\nwrote:\n\nClosed #230 https://github.com/jedireza/aqua/issues/230.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jedireza/aqua/issues/230#event-1203497238, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ASfkzwkcDVamK7DB55OmzXFB24SEGQNtks5sXRvLgaJpZM4Ovlbu\n.\n. Thanks! Working now!! ^^. Sorry to necro... I was just wondering if there was a way to run without ssl? It was running without before, but somehow now it requires ssl =/. I'm sorry; which logs do I look in? . Okay I'm making a whole new VPS to host aqua on. I know this is very nooby, and I apologize again for the bother I am...\nWhat is the install process if the arch linux server/vps only will be used for aqua?\nInstall openssh, mongodb, node, configure iptables, etc.? . I just want to make sure I'm on the right track. Thanks ^^. \n",
    "Kylescottw": "Reza,\nThank you!. I have it implemented but now when i click on the menu button,\ni don't get a drop down function. Hi Reza,\nThank you for your patience with me!\nI got it working :) \n. ",
    "kylehq1": "Reza,\nThank you!\nHow can I send you money for a coffee?. ",
    "jacogreyling": "Thank you as always for your comprehensive response. I agree I also don't like the notation used with overloaded methods (ok so I come from a Java background). As you mention there seems to be upsides though that needs to be explored further.\nJust looking at the connect() function I can see the following:\n```\n      componentDidMount() {\n        // it remembers to subscribe to the store so it doesn't miss updates\n        this.unsubscribe = store.subscribe(this.handleChange.bind(this))\n      }\n  componentWillUnmount() {\n    // and unsubscribe later\n    this.unsubscribe()\n  }\n\n  handleChange() {\n    // and whenever the store state changes, it re-renders.\n    this.forceUpdate()\n  }\n\n```\nComparing that to your code, it's very similar. The only difference is on an update they call the React forceUpdate() API which will in turn calls render(). (They handle getState() in render()). ",
    "adantoscano": "You can see here https://webpack.js.org/configuration/devtool/ the tab that cheap is for a fast rebuild but not for production and the oposite with source-map.\n\n. ",
    "rocky1138": "Sorry, I'm super thick when it comes to this stuff. I appreciate your help! What I'm referring to is \"linking\" in this sense: https://github.com/jedireza/aqua/blob/master/server/api/accounts.js#L280\nWhat am I missing?. ",
    "brdauria": "HI, I made the changes. Now the test passes. Regards.. ",
    "vmetayer": "Does the current version of aqua only allow one logged in user at a time?. Sorry for my lack of knowledge, but is there a session timeout atleast? Seems like a nice to have feature tho.. ",
    "hbkmadness": "Oh, I'm sorry I just saw the manifest.js file.... ",
    "teheavy": "This happens when I'm running npm test\nSyntaxError: Unexpected token {\n    at exports.runInThisContext (vm.js:53:16)\n    at Module._compile (module.js:387:25)\n    at Object.require.extensions.(anonymous function) [as .js] (/aqua/node_modules/lab/lib/coverage.js:37:28)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at Object.<anonymous> (/aqua/test/lab/client-before.js:2:15)\n    at Module._compile (module.js:413:34)\n    at Object.require.extensions.(anonymous function) [as .js] (/aqua/node_modules/lab/lib/coverage.js:37:28)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at /aqua/node_modules/lab/lib/cli.js:121:21\n    at Array.forEach (native)\n    at Object.internals.traverse.paths.forEach.testFiles [as traverse] (/aqua/node_modules/lab/lib/cli.js:117:15)\n    at Object.exports.run (/aqua/node_modules/lab/lib/cli.js:62:31)\n    at Object.<anonymous> (/aqua/node_modules/lab/bin/lab:50:23)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Function.Module.runMain (module.js:447:10)\n    at startup (node.js:142:18)\n    at node.js:939:3\nnpm ERR! Test failed.  See above for more details.. I see, so I basically followed the README and I tried the same installation process on both OSX El Capitan and Ubuntu 14.04. My aqua version is the newest 7.0.2. \nBefore, I thought it was because I was running nodeJS with Apache server, so I stopped the Apache server, but problem persists.. I'm using node v5.9.1 and npm 3.8.5.. I see, problem solved! I didn't notice this problem! Thanks!. ",
    "rnavok": "Hi there :)\nAny estimation on the V17 rewrite release?\nThank you much in advance\nR. "
}